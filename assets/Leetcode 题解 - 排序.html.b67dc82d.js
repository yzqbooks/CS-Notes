import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,o as c,c as l,a as n,b as t,F as u,e as p,d as s}from"./app.5ce5af5d.js";const i={},k=p('<h1 id="leetcode-\u9898\u89E3-\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#leetcode-\u9898\u89E3-\u6392\u5E8F" aria-hidden="true">#</a> Leetcode \u9898\u89E3 - \u6392\u5E8F</h1><ul><li><a href="#leetcode-%E9%A2%98%E8%A7%A3---%E6%8E%92%E5%BA%8F">Leetcode \u9898\u89E3 - \u6392\u5E8F</a><ul><li><a href="#%E5%BF%AB%E9%80%9F%E9%80%89%E6%8B%A9">\u5FEB\u901F\u9009\u62E9</a></li><li><a href="#%E5%A0%86">\u5806</a><ul><li><a href="#1-kth-element">1. Kth Element</a></li></ul></li><li><a href="#%E6%A1%B6%E6%8E%92%E5%BA%8F">\u6876\u6392\u5E8F</a><ul><li><a href="#1-%E5%87%BA%E7%8E%B0%E9%A2%91%E7%8E%87%E6%9C%80%E5%A4%9A%E7%9A%84-k-%E4%B8%AA%E5%85%83%E7%B4%A0">1. \u51FA\u73B0\u9891\u7387\u6700\u591A\u7684 k \u4E2A\u5143\u7D20</a></li><li><a href="#2-%E6%8C%89%E7%85%A7%E5%AD%97%E7%AC%A6%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E5%AF%B9%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8E%92%E5%BA%8F">2. \u6309\u7167\u5B57\u7B26\u51FA\u73B0\u6B21\u6570\u5BF9\u5B57\u7B26\u4E32\u6392\u5E8F</a></li></ul></li><li><a href="#%E8%8D%B7%E5%85%B0%E5%9B%BD%E6%97%97%E9%97%AE%E9%A2%98">\u8377\u5170\u56FD\u65D7\u95EE\u9898</a><ul><li><a href="#1-%E6%8C%89%E9%A2%9C%E8%89%B2%E8%BF%9B%E8%A1%8C%E6%8E%92%E5%BA%8F">1. \u6309\u989C\u8272\u8FDB\u884C\u6392\u5E8F</a></li></ul></li></ul></li></ul><h2 id="\u5FEB\u901F\u9009\u62E9" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u901F\u9009\u62E9" aria-hidden="true">#</a> \u5FEB\u901F\u9009\u62E9</h2><p>\u7528\u4E8E\u6C42\u89E3 <strong>Kth Element</strong> \u95EE\u9898\uFF0C\u4E5F\u5C31\u662F\u7B2C K \u4E2A\u5143\u7D20\u7684\u95EE\u9898\u3002</p><p>\u53EF\u4EE5\u4F7F\u7528\u5FEB\u901F\u6392\u5E8F\u7684 partition() \u8FDB\u884C\u5B9E\u73B0\u3002\u9700\u8981\u5148\u6253\u4E71\u6570\u7EC4\uFF0C\u5426\u5219\u6700\u574F\u60C5\u51B5\u4E0B\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N<sup>2</sup>)\u3002</p><h2 id="\u5806" tabindex="-1"><a class="header-anchor" href="#\u5806" aria-hidden="true">#</a> \u5806</h2><p>\u7528\u4E8E\u6C42\u89E3 <strong>TopK Elements</strong> \u95EE\u9898\uFF0C\u4E5F\u5C31\u662F K \u4E2A\u6700\u5C0F\u5143\u7D20\u7684\u95EE\u9898\u3002\u4F7F\u7528\u6700\u5C0F\u5806\u6765\u5B9E\u73B0 TopK \u95EE\u9898\uFF0C\u6700\u5C0F\u5806\u4F7F\u7528\u5927\u9876\u5806\u6765\u5B9E\u73B0\uFF0C\u5927\u9876\u5806\u7684\u5806\u9876\u5143\u7D20\u4E3A\u5F53\u524D\u5806\u7684\u6700\u5927\u5143\u7D20\u3002\u5B9E\u73B0\u8FC7\u7A0B\uFF1A\u4E0D\u65AD\u5730\u5F80\u5927\u9876\u5806\u4E2D\u63D2\u5165\u65B0\u5143\u7D20\uFF0C\u5F53\u5806\u4E2D\u5143\u7D20\u7684\u6570\u91CF\u5927\u4E8E k \u65F6\uFF0C\u79FB\u9664\u5806\u9876\u5143\u7D20\uFF0C\u4E5F\u5C31\u662F\u5F53\u524D\u5806\u4E2D\u6700\u5927\u7684\u5143\u7D20\uFF0C\u5269\u4E0B\u7684\u5143\u7D20\u90FD\u4E3A\u5F53\u524D\u6DFB\u52A0\u8FC7\u7684\u5143\u7D20\u4E2D\u6700\u5C0F\u7684 K \u4E2A\u5143\u7D20\u3002\u63D2\u5165\u548C\u79FB\u9664\u5806\u9876\u5143\u7D20\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u90FD\u4E3A log<sub>2</sub>N\u3002</p><p>\u5806\u4E5F\u53EF\u4EE5\u7528\u4E8E\u6C42\u89E3 Kth Element \u95EE\u9898\uFF0C\u5F97\u5230\u4E86\u5927\u5C0F\u4E3A K \u7684\u6700\u5C0F\u5806\u4E4B\u540E\uFF0C\u56E0\u4E3A\u4F7F\u7528\u4E86\u5927\u9876\u5806\u6765\u5B9E\u73B0\uFF0C\u56E0\u6B64\u5806\u9876\u5143\u7D20\u5C31\u662F\u7B2C K \u5927\u7684\u5143\u7D20\u3002</p><p>\u5FEB\u901F\u9009\u62E9\u4E5F\u53EF\u4EE5\u6C42\u89E3 TopK Elements \u95EE\u9898\uFF0C\u56E0\u4E3A\u627E\u5230 Kth Element \u4E4B\u540E\uFF0C\u518D\u904D\u5386\u4E00\u6B21\u6570\u7EC4\uFF0C\u6240\u6709\u5C0F\u4E8E\u7B49\u4E8E Kth Element \u7684\u5143\u7D20\u90FD\u662F TopK Elements\u3002</p><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u5FEB\u901F\u9009\u62E9\u548C\u5806\u6392\u5E8F\u90FD\u53EF\u4EE5\u6C42\u89E3 Kth Element \u548C TopK Elements \u95EE\u9898\u3002</p><h3 id="_1-kth-element" tabindex="-1"><a class="header-anchor" href="#_1-kth-element" aria-hidden="true">#</a> 1. Kth Element</h3><p>215. Kth Largest Element in an Array (Medium)</p>',12),r={href:"https://leetcode.com/problems/kth-largest-element-in-an-array/description/",target:"_blank",rel:"noopener noreferrer"},d=s("Leetcode"),v=s(" / "),m={href:"https://leetcode-cn.com/problems/kth-largest-element-in-an-array/description/",target:"_blank",rel:"noopener noreferrer"},b=s("\u529B\u6263"),h=p(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: [3,2,1,5,6,4] and k = 2
Output: 5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u627E\u5230\u5012\u6570\u7B2C k \u4E2A\u7684\u5143\u7D20\u3002</p><p><strong>\u6392\u5E8F</strong> \uFF1A\u65F6\u95F4\u590D\u6742\u5EA6 O(NlogN)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6 O(1)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findKthLargest</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> nums<span class="token punctuation">[</span>nums<span class="token punctuation">.</span>length <span class="token operator">-</span> k<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5806</strong> \uFF1A\u65F6\u95F4\u590D\u6742\u5EA6 O(NlogK)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6 O(K)\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findKthLargest</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> pq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5C0F\u9876\u5806</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> val <span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        pq<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>pq<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> k<span class="token punctuation">)</span>  <span class="token comment">// \u7EF4\u62A4\u5806\u7684\u5927\u5C0F\u4E3A K</span>
            pq<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> pq<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5FEB\u901F\u9009\u62E9</strong> \uFF1A\u65F6\u95F4\u590D\u6742\u5EA6 O(N)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6 O(1)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findKthLargest</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    k <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> k<span class="token punctuation">;</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> h <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token function">partition</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> l<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            l <span class="token operator">=</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            h <span class="token operator">=</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> nums<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">partition</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> l<span class="token punctuation">,</span> j <span class="token operator">=</span> h <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token operator">++</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> a<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;</span> h<span class="token punctuation">)</span> <span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token operator">--</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> a<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">&gt;</span> l<span class="token punctuation">)</span> <span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">swap</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">swap</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> l<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> j<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> t <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
    a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> t<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6876\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u6876\u6392\u5E8F" aria-hidden="true">#</a> \u6876\u6392\u5E8F</h2><h3 id="_1-\u51FA\u73B0\u9891\u7387\u6700\u591A\u7684-k-\u4E2A\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#_1-\u51FA\u73B0\u9891\u7387\u6700\u591A\u7684-k-\u4E2A\u5143\u7D20" aria-hidden="true">#</a> 1. \u51FA\u73B0\u9891\u7387\u6700\u591A\u7684 k \u4E2A\u5143\u7D20</h3><p>347. Top K Frequent Elements (Medium)</p>`,11),y={href:"https://leetcode.com/problems/top-k-frequent-elements/description/",target:"_blank",rel:"noopener noreferrer"},f=s("Leetcode"),w=s(" / "),g={href:"https://leetcode-cn.com/problems/top-k-frequent-elements/description/",target:"_blank",rel:"noopener noreferrer"},_=s("\u529B\u6263"),E=p(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Given [1,1,1,2,2,3] and k = 2, return [1,2].
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8BBE\u7F6E\u82E5\u5E72\u4E2A\u6876\uFF0C\u6BCF\u4E2A\u6876\u5B58\u50A8\u51FA\u73B0\u9891\u7387\u76F8\u540C\u7684\u6570\u3002\u6876\u7684\u4E0B\u6807\u8868\u793A\u6570\u51FA\u73B0\u7684\u9891\u7387\uFF0C\u5373\u7B2C i \u4E2A\u6876\u4E2D\u5B58\u50A8\u7684\u6570\u51FA\u73B0\u7684\u9891\u7387\u4E3A i\u3002</p><p>\u628A\u6570\u90FD\u653E\u5230\u6876\u4E4B\u540E\uFF0C\u4ECE\u540E\u5411\u524D\u904D\u5386\u6876\uFF0C\u6700\u5148\u5F97\u5230\u7684 k \u4E2A\u6570\u5C31\u662F\u51FA\u73B0\u9891\u7387\u6700\u591A\u7684\u7684 k \u4E2A\u6570\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">topKFrequent</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> frequencyForNum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num <span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        frequencyForNum<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> frequencyForNum<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> buckets <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">[</span>nums<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> key <span class="token operator">:</span> frequencyForNum<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> frequency <span class="token operator">=</span> frequencyForNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>buckets<span class="token punctuation">[</span>frequency<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            buckets<span class="token punctuation">[</span>frequency<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        buckets<span class="token punctuation">[</span>frequency<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> topK <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> buckets<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> topK<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> k<span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>buckets<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>buckets<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token punctuation">(</span>k <span class="token operator">-</span> topK<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            topK<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>buckets<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            topK<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>buckets<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">subList</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> k <span class="token operator">-</span> topK<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> k<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> topK<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u6309\u7167\u5B57\u7B26\u51FA\u73B0\u6B21\u6570\u5BF9\u5B57\u7B26\u4E32\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#_2-\u6309\u7167\u5B57\u7B26\u51FA\u73B0\u6B21\u6570\u5BF9\u5B57\u7B26\u4E32\u6392\u5E8F" aria-hidden="true">#</a> 2. \u6309\u7167\u5B57\u7B26\u51FA\u73B0\u6B21\u6570\u5BF9\u5B57\u7B26\u4E32\u6392\u5E8F</h3><p>451. Sort Characters By Frequency (Medium)</p>`,6),A={href:"https://leetcode.com/problems/sort-characters-by-frequency/description/",target:"_blank",rel:"noopener noreferrer"},q=s("Leetcode"),j=s(" / "),B={href:"https://leetcode-cn.com/problems/sort-characters-by-frequency/description/",target:"_blank",rel:"noopener noreferrer"},K=s("\u529B\u6263"),x=p(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input:
&quot;tree&quot;

Output:
&quot;eert&quot;

Explanation:
&#39;e&#39; appears twice while &#39;r&#39; and &#39;t&#39; both appear once.
So &#39;e&#39; must appear before both &#39;r&#39; and &#39;t&#39;. Therefore &quot;eetr&quot; is also a valid answer.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">frequencySort</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> frequencyForNum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> c <span class="token operator">:</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        frequencyForNum<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> frequencyForNum<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> frequencyBucket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">[</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> c <span class="token operator">:</span> frequencyForNum<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> f <span class="token operator">=</span> frequencyForNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>frequencyBucket<span class="token punctuation">[</span>f<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            frequencyBucket<span class="token punctuation">[</span>f<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        frequencyBucket<span class="token punctuation">[</span>f<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">StringBuilder</span> str <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> frequencyBucket<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>frequencyBucket<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> c <span class="token operator">:</span> frequencyBucket<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8377\u5170\u56FD\u65D7\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u8377\u5170\u56FD\u65D7\u95EE\u9898" aria-hidden="true">#</a> \u8377\u5170\u56FD\u65D7\u95EE\u9898</h2><p>\u8377\u5170\u56FD\u65D7\u5305\u542B\u4E09\u79CD\u989C\u8272\uFF1A\u7EA2\u3001\u767D\u3001\u84DD\u3002</p><p>\u6709\u4E09\u79CD\u989C\u8272\u7684\u7403\uFF0C\u7B97\u6CD5\u7684\u76EE\u6807\u662F\u5C06\u8FD9\u4E09\u79CD\u7403\u6309\u989C\u8272\u987A\u5E8F\u6B63\u786E\u5730\u6392\u5217\u3002\u5B83\u5176\u5B9E\u662F\u4E09\u5411\u5207\u5206\u5FEB\u901F\u6392\u5E8F\u7684\u4E00\u79CD\u53D8\u79CD\uFF0C\u5728\u4E09\u5411\u5207\u5206\u5FEB\u901F\u6392\u5E8F\u4E2D\uFF0C\u6BCF\u6B21\u5207\u5206\u90FD\u5C06\u6570\u7EC4\u5206\u6210\u4E09\u4E2A\u533A\u95F4\uFF1A\u5C0F\u4E8E\u5207\u5206\u5143\u7D20\u3001\u7B49\u4E8E\u5207\u5206\u5143\u7D20\u3001\u5927\u4E8E\u5207\u5206\u5143\u7D20\uFF0C\u800C\u8BE5\u7B97\u6CD5\u662F\u5C06\u6570\u7EC4\u5206\u6210\u4E09\u4E2A\u533A\u95F4\uFF1A\u7B49\u4E8E\u7EA2\u8272\u3001\u7B49\u4E8E\u767D\u8272\u3001\u7B49\u4E8E\u84DD\u8272\u3002</p><p><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/7a3215ec-6fb7-4935-8b0d-cb408208f7cb.png" alt="img"></p><h3 id="_1-\u6309\u989C\u8272\u8FDB\u884C\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#_1-\u6309\u989C\u8272\u8FDB\u884C\u6392\u5E8F" aria-hidden="true">#</a> 1. \u6309\u989C\u8272\u8FDB\u884C\u6392\u5E8F</h3><p>75. Sort Colors (Medium)</p>`,8),F={href:"https://leetcode.com/problems/sort-colors/description/",target:"_blank",rel:"noopener noreferrer"},L=s("Leetcode"),N=s(" / "),C={href:"https://leetcode-cn.com/problems/sort-colors/description/",target:"_blank",rel:"noopener noreferrer"},O=s("\u529B\u6263"),S=p(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input: [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u53EA\u6709 0/1/2 \u4E09\u79CD\u989C\u8272\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sortColors</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> zero <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> one <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> two <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>one <span class="token operator">&lt;</span> two<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>one<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token operator">++</span>zero<span class="token punctuation">,</span> one<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>one<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token operator">--</span>two<span class="token punctuation">,</span> one<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token operator">++</span>one<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> t <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
    nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> t<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function I(z,M){const a=o("ExternalLinkIcon");return c(),l(u,null,[k,n("p",null,[n("a",r,[d,t(a)]),v,n("a",m,[b,t(a)])]),h,n("p",null,[n("a",y,[f,t(a)]),w,n("a",g,[_,t(a)])]),E,n("p",null,[n("a",A,[q,t(a)]),j,n("a",B,[K,t(a)])]),x,n("p",null,[n("a",F,[L,t(a)]),N,n("a",C,[O,t(a)])]),S],64)}var V=e(i,[["render",I],["__file","Leetcode \u9898\u89E3 - \u6392\u5E8F.html.vue"]]);export{V as default};
