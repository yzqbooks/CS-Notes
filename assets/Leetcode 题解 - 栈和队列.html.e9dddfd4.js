import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,o as c,c as l,a as n,b as t,F as i,e as p,d as s}from"./app.5ce5af5d.js";const u={},k=p('<h1 id="leetcode-\u9898\u89E3-\u6808\u548C\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#leetcode-\u9898\u89E3-\u6808\u548C\u961F\u5217" aria-hidden="true">#</a> Leetcode \u9898\u89E3 - \u6808\u548C\u961F\u5217</h1><ul><li><a href="#leetcode-%E9%A2%98%E8%A7%A3---%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97">Leetcode \u9898\u89E3 - \u6808\u548C\u961F\u5217</a><ul><li><a href="#1-%E7%94%A8%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97">1. \u7528\u6808\u5B9E\u73B0\u961F\u5217</a></li><li><a href="#2-%E7%94%A8%E9%98%9F%E5%88%97%E5%AE%9E%E7%8E%B0%E6%A0%88">2. \u7528\u961F\u5217\u5B9E\u73B0\u6808</a></li><li><a href="#3-%E6%9C%80%E5%B0%8F%E5%80%BC%E6%A0%88">3. \u6700\u5C0F\u503C\u6808</a></li><li><a href="#4-%E7%94%A8%E6%A0%88%E5%AE%9E%E7%8E%B0%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D">4. \u7528\u6808\u5B9E\u73B0\u62EC\u53F7\u5339\u914D</a></li><li><a href="#5-%E6%95%B0%E7%BB%84%E4%B8%AD%E5%85%83%E7%B4%A0%E4%B8%8E%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%AF%94%E5%AE%83%E5%A4%A7%E7%9A%84%E5%85%83%E7%B4%A0%E4%B9%8B%E9%97%B4%E7%9A%84%E8%B7%9D%E7%A6%BB">5. \u6570\u7EC4\u4E2D\u5143\u7D20\u4E0E\u4E0B\u4E00\u4E2A\u6BD4\u5B83\u5927\u7684\u5143\u7D20\u4E4B\u95F4\u7684\u8DDD\u79BB</a></li><li><a href="#6-%E5%BE%AA%E7%8E%AF%E6%95%B0%E7%BB%84%E4%B8%AD%E6%AF%94%E5%BD%93%E5%89%8D%E5%85%83%E7%B4%A0%E5%A4%A7%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0">6. \u5FAA\u73AF\u6570\u7EC4\u4E2D\u6BD4\u5F53\u524D\u5143\u7D20\u5927\u7684\u4E0B\u4E00\u4E2A\u5143\u7D20</a></li></ul></li></ul><h2 id="_1-\u7528\u6808\u5B9E\u73B0\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#_1-\u7528\u6808\u5B9E\u73B0\u961F\u5217" aria-hidden="true">#</a> 1. \u7528\u6808\u5B9E\u73B0\u961F\u5217</h2><p>232. Implement Queue using Stacks (Easy)</p>',4),r={href:"https://leetcode.com/problems/implement-queue-using-stacks/description/",target:"_blank",rel:"noopener noreferrer"},d=s("Leetcode"),v=s(" / "),m={href:"https://leetcode-cn.com/problems/implement-queue-using-stacks/description/",target:"_blank",rel:"noopener noreferrer"},b=s("\u529B\u6263"),h=p(`<p>\u6808\u7684\u987A\u5E8F\u4E3A\u540E\u8FDB\u5148\u51FA\uFF0C\u800C\u961F\u5217\u7684\u987A\u5E8F\u4E3A\u5148\u8FDB\u5148\u51FA\u3002\u4F7F\u7528\u4E24\u4E2A\u6808\u5B9E\u73B0\u961F\u5217\uFF0C\u4E00\u4E2A\u5143\u7D20\u9700\u8981\u7ECF\u8FC7\u4E24\u4E2A\u6808\u624D\u80FD\u51FA\u961F\u5217\uFF0C\u5728\u7ECF\u8FC7\u7B2C\u4E00\u4E2A\u6808\u65F6\u5143\u7D20\u987A\u5E8F\u88AB\u53CD\u8F6C\uFF0C\u7ECF\u8FC7\u7B2C\u4E8C\u4E2A\u6808\u65F6\u518D\u6B21\u88AB\u53CD\u8F6C\uFF0C\u6B64\u65F6\u5C31\u662F\u5148\u8FDB\u5148\u51FA\u987A\u5E8F\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">MyQueue</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        in<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">in2out</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> out<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">in2out</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> out<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">in2out</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>out<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>in<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                out<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> in<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> out<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-\u7528\u961F\u5217\u5B9E\u73B0\u6808" tabindex="-1"><a class="header-anchor" href="#_2-\u7528\u961F\u5217\u5B9E\u73B0\u6808" aria-hidden="true">#</a> 2. \u7528\u961F\u5217\u5B9E\u73B0\u6808</h2><p>225. Implement Stack using Queues (Easy)</p>`,4),y={href:"https://leetcode.com/problems/implement-stack-using-queues/description/",target:"_blank",rel:"noopener noreferrer"},_=s("Leetcode"),f=s(" / "),w={href:"https://leetcode-cn.com/problems/implement-stack-using-queues/description/",target:"_blank",rel:"noopener noreferrer"},g=s("\u529B\u6263"),E=p(`<p>\u5728\u5C06\u4E00\u4E2A\u5143\u7D20 x \u63D2\u5165\u961F\u5217\u65F6\uFF0C\u4E3A\u4E86\u7EF4\u62A4\u539F\u6765\u7684\u540E\u8FDB\u5148\u51FA\u987A\u5E8F\uFF0C\u9700\u8981\u8BA9 x \u63D2\u5165\u961F\u5217\u9996\u90E8\u3002\u800C\u961F\u5217\u7684\u9ED8\u8BA4\u63D2\u5165\u987A\u5E8F\u662F\u961F\u5217\u5C3E\u90E8\uFF0C\u56E0\u6B64\u5728\u5C06 x \u63D2\u5165\u961F\u5217\u5C3E\u90E8\u4E4B\u540E\uFF0C\u9700\u8981\u8BA9\u9664\u4E86 x \u4E4B\u5916\u7684\u6240\u6709\u5143\u7D20\u51FA\u961F\u5217\uFF0C\u518D\u5165\u961F\u5217\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">MyStack</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Queue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> queue<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">MyStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> cnt <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>cnt<span class="token operator">--</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> queue<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> queue<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> queue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-\u6700\u5C0F\u503C\u6808" tabindex="-1"><a class="header-anchor" href="#_3-\u6700\u5C0F\u503C\u6808" aria-hidden="true">#</a> 3. \u6700\u5C0F\u503C\u6808</h2><p>155. Min Stack (Easy)</p>`,4),x={href:"https://leetcode.com/problems/min-stack/description/",target:"_blank",rel:"noopener noreferrer"},A=s("Leetcode"),B=s(" / "),S={href:"https://leetcode-cn.com/problems/min-stack/description/",target:"_blank",rel:"noopener noreferrer"},I=s("\u529B\u6263"),j=p(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">MinStack</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> dataStack<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> minStack<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> min<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">MinStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dataStack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        minStack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        min <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dataStack<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
        min <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
        minStack<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>min<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dataStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        minStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        min <span class="token operator">=</span> minStack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE <span class="token operator">:</span> minStack<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> dataStack<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getMin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> minStack<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u5B9E\u73B0\u6700\u5C0F\u503C\u961F\u5217\u95EE\u9898\uFF0C\u53EF\u4EE5\u5148\u5C06\u961F\u5217\u4F7F\u7528\u6808\u6765\u5B9E\u73B0\uFF0C\u7136\u540E\u5C31\u5C06\u95EE\u9898\u8F6C\u6362\u4E3A\u6700\u5C0F\u503C\u6808\uFF0C\u8FD9\u4E2A\u95EE\u9898\u51FA\u73B0\u5728 \u7F16\u7A0B\u4E4B\u7F8E\uFF1A3.7\u3002</p><h2 id="_4-\u7528\u6808\u5B9E\u73B0\u62EC\u53F7\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#_4-\u7528\u6808\u5B9E\u73B0\u62EC\u53F7\u5339\u914D" aria-hidden="true">#</a> 4. \u7528\u6808\u5B9E\u73B0\u62EC\u53F7\u5339\u914D</h2><p>20. Valid Parentheses (Easy)</p>`,4),L={href:"https://leetcode.com/problems/valid-parentheses/description/",target:"_blank",rel:"noopener noreferrer"},q=s("Leetcode"),M=s(" / "),F={href:"https://leetcode-cn.com/problems/valid-parentheses/description/",target:"_blank",rel:"noopener noreferrer"},C=s("\u529B\u6263"),D=p(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>&quot;()[]{}&quot;

Output : true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isValid</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">&gt;</span></span> stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> c <span class="token operator">:</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">&#39;(&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;{&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;[&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">char</span> cStack <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">boolean</span> b1 <span class="token operator">=</span> c <span class="token operator">==</span> <span class="token char">&#39;)&#39;</span> <span class="token operator">&amp;&amp;</span> cStack <span class="token operator">!=</span> <span class="token char">&#39;(&#39;</span><span class="token punctuation">;</span>
            <span class="token keyword">boolean</span> b2 <span class="token operator">=</span> c <span class="token operator">==</span> <span class="token char">&#39;]&#39;</span> <span class="token operator">&amp;&amp;</span> cStack <span class="token operator">!=</span> <span class="token char">&#39;[&#39;</span><span class="token punctuation">;</span>
            <span class="token keyword">boolean</span> b3 <span class="token operator">=</span> c <span class="token operator">==</span> <span class="token char">&#39;}&#39;</span> <span class="token operator">&amp;&amp;</span> cStack <span class="token operator">!=</span> <span class="token char">&#39;{&#39;</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>b1 <span class="token operator">||</span> b2 <span class="token operator">||</span> b3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-\u6570\u7EC4\u4E2D\u5143\u7D20\u4E0E\u4E0B\u4E00\u4E2A\u6BD4\u5B83\u5927\u7684\u5143\u7D20\u4E4B\u95F4\u7684\u8DDD\u79BB" tabindex="-1"><a class="header-anchor" href="#_5-\u6570\u7EC4\u4E2D\u5143\u7D20\u4E0E\u4E0B\u4E00\u4E2A\u6BD4\u5B83\u5927\u7684\u5143\u7D20\u4E4B\u95F4\u7684\u8DDD\u79BB" aria-hidden="true">#</a> 5. \u6570\u7EC4\u4E2D\u5143\u7D20\u4E0E\u4E0B\u4E00\u4E2A\u6BD4\u5B83\u5927\u7684\u5143\u7D20\u4E4B\u95F4\u7684\u8DDD\u79BB</h2><p>739. Daily Temperatures (Medium)</p>`,4),V={href:"https://leetcode.com/problems/daily-temperatures/description/",target:"_blank",rel:"noopener noreferrer"},T=s("Leetcode"),N=s(" / "),Q={href:"https://leetcode-cn.com/problems/daily-temperatures/description/",target:"_blank",rel:"noopener noreferrer"},O=s("\u529B\u6263"),G=p(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input: [73, 74, 75, 71, 69, 72, 76, 73]
Output: [1, 1, 4, 2, 1, 1, 0, 0]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u904D\u5386\u6570\u7EC4\u65F6\u7528\u6808\u628A\u6570\u7EC4\u4E2D\u7684\u6570\u5B58\u8D77\u6765\uFF0C\u5982\u679C\u5F53\u524D\u904D\u5386\u7684\u6570\u6BD4\u6808\u9876\u5143\u7D20\u6765\u7684\u5927\uFF0C\u8BF4\u660E\u6808\u9876\u5143\u7D20\u7684\u4E0B\u4E00\u4E2A\u6BD4\u5B83\u5927\u7684\u6570\u5C31\u662F\u5F53\u524D\u5143\u7D20\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">dailyTemperatures</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> temperatures<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> temperatures<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dist <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> indexs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> curIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> curIndex <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> curIndex<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>indexs<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> temperatures<span class="token punctuation">[</span>curIndex<span class="token punctuation">]</span> <span class="token operator">&gt;</span> temperatures<span class="token punctuation">[</span>indexs<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> preIndex <span class="token operator">=</span> indexs<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            dist<span class="token punctuation">[</span>preIndex<span class="token punctuation">]</span> <span class="token operator">=</span> curIndex <span class="token operator">-</span> preIndex<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        indexs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>curIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dist<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-\u5FAA\u73AF\u6570\u7EC4\u4E2D\u6BD4\u5F53\u524D\u5143\u7D20\u5927\u7684\u4E0B\u4E00\u4E2A\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#_6-\u5FAA\u73AF\u6570\u7EC4\u4E2D\u6BD4\u5F53\u524D\u5143\u7D20\u5927\u7684\u4E0B\u4E00\u4E2A\u5143\u7D20" aria-hidden="true">#</a> 6. \u5FAA\u73AF\u6570\u7EC4\u4E2D\u6BD4\u5F53\u524D\u5143\u7D20\u5927\u7684\u4E0B\u4E00\u4E2A\u5143\u7D20</h2><p>503. Next Greater Element II (Medium)</p>`,5),U={href:"https://leetcode.com/problems/next-greater-element-ii/description/",target:"_blank",rel:"noopener noreferrer"},X=s("Leetcode"),z=s(" / "),P={href:"https://leetcode-cn.com/problems/next-greater-element-ii/description/",target:"_blank",rel:"noopener noreferrer"},H=s("\u529B\u6263"),J=p(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: [1,2,1]
Output: [2,-1,2]
Explanation: The first 1&#39;s next greater number is 2;
The number 2 can&#39;t find next greater number;
The second 1&#39;s next greater number needs to search circularly, which is also 2.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0E 739. Daily Temperatures (Medium) \u4E0D\u540C\u7684\u662F\uFF0C\u6570\u7EC4\u662F\u5FAA\u73AF\u6570\u7EC4\uFF0C\u5E76\u4E14\u6700\u540E\u8981\u6C42\u7684\u4E0D\u662F\u8DDD\u79BB\u800C\u662F\u4E0B\u4E00\u4E2A\u5143\u7D20\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">nextGreaterElements</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>next<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> pre <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> num <span class="token operator">=</span> nums<span class="token punctuation">[</span>i <span class="token operator">%</span> n<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>pre<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>pre<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            next<span class="token punctuation">[</span>pre<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> num<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>
            pre<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function K(R,W){const a=o("ExternalLinkIcon");return c(),l(i,null,[k,n("p",null,[n("a",r,[d,t(a)]),v,n("a",m,[b,t(a)])]),h,n("p",null,[n("a",y,[_,t(a)]),f,n("a",w,[g,t(a)])]),E,n("p",null,[n("a",x,[A,t(a)]),B,n("a",S,[I,t(a)])]),j,n("p",null,[n("a",L,[q,t(a)]),M,n("a",F,[C,t(a)])]),D,n("p",null,[n("a",V,[T,t(a)]),N,n("a",Q,[O,t(a)])]),G,n("p",null,[n("a",U,[X,t(a)]),z,n("a",P,[H,t(a)])]),J],64)}var $=e(u,[["render",K],["__file","Leetcode \u9898\u89E3 - \u6808\u548C\u961F\u5217.html.vue"]]);export{$ as default};
