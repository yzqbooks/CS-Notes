import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,o as c,c as l,a as n,b as t,F as i,e as p,d as s}from"./app.d02315a2.js";const u={},r=p('<h1 id="leetcode-\u9898\u89E3-\u53CC\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#leetcode-\u9898\u89E3-\u53CC\u6307\u9488" aria-hidden="true">#</a> Leetcode \u9898\u89E3 - \u53CC\u6307\u9488</h1><ul><li><a href="#leetcode-%E9%A2%98%E8%A7%A3---%E5%8F%8C%E6%8C%87%E9%92%88">Leetcode \u9898\u89E3 - \u53CC\u6307\u9488</a><ul><li><a href="#1-%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84-two-sum">1. \u6709\u5E8F\u6570\u7EC4\u7684 Two Sum</a></li><li><a href="#2-%E4%B8%A4%E6%95%B0%E5%B9%B3%E6%96%B9%E5%92%8C">2. \u4E24\u6570\u5E73\u65B9\u548C</a></li><li><a href="#3-%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%85%83%E9%9F%B3%E5%AD%97%E7%AC%A6">3. \u53CD\u8F6C\u5B57\u7B26\u4E32\u4E2D\u7684\u5143\u97F3\u5B57\u7B26</a></li><li><a href="#4-%E5%9B%9E%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2">4. \u56DE\u6587\u5B57\u7B26\u4E32</a></li><li><a href="#5-%E5%BD%92%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84">5. \u5F52\u5E76\u4E24\u4E2A\u6709\u5E8F\u6570\u7EC4</a></li><li><a href="#6-%E5%88%A4%E6%96%AD%E9%93%BE%E8%A1%A8%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E7%8E%AF">6. \u5224\u65AD\u94FE\u8868\u662F\u5426\u5B58\u5728\u73AF</a></li><li><a href="#7-%E6%9C%80%E9%95%BF%E5%AD%90%E5%BA%8F%E5%88%97">7. \u6700\u957F\u5B50\u5E8F\u5217</a></li></ul></li></ul><p>\u53CC\u6307\u9488\u4E3B\u8981\u7528\u4E8E\u904D\u5386\u6570\u7EC4\uFF0C\u4E24\u4E2A\u6307\u9488\u6307\u5411\u4E0D\u540C\u7684\u5143\u7D20\uFF0C\u4ECE\u800C\u534F\u540C\u5B8C\u6210\u4EFB\u52A1\u3002</p><h2 id="_1-\u6709\u5E8F\u6570\u7EC4\u7684-two-sum" tabindex="-1"><a class="header-anchor" href="#_1-\u6709\u5E8F\u6570\u7EC4\u7684-two-sum" aria-hidden="true">#</a> 1. \u6709\u5E8F\u6570\u7EC4\u7684 Two Sum</h2><p>167. Two Sum II - Input array is sorted (Easy)</p>',5),k={href:"https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/description/",target:"_blank",rel:"noopener noreferrer"},d=s("Leetcode"),v=s(" / "),m={href:"https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted/description/",target:"_blank",rel:"noopener noreferrer"},b=s("\u529B\u6263"),h=p(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input: numbers={2, 7, 11, 15}, target=9
Output: index1=1, index2=2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u5728\u6709\u5E8F\u6570\u7EC4\u4E2D\u627E\u51FA\u4E24\u4E2A\u6570\uFF0C\u4F7F\u5B83\u4EEC\u7684\u548C\u4E3A target\u3002</p><p>\u4F7F\u7528\u53CC\u6307\u9488\uFF0C\u4E00\u4E2A\u6307\u9488\u6307\u5411\u503C\u8F83\u5C0F\u7684\u5143\u7D20\uFF0C\u4E00\u4E2A\u6307\u9488\u6307\u5411\u503C\u8F83\u5927\u7684\u5143\u7D20\u3002\u6307\u5411\u8F83\u5C0F\u5143\u7D20\u7684\u6307\u9488\u4ECE\u5934\u5411\u5C3E\u904D\u5386\uFF0C\u6307\u5411\u8F83\u5927\u5143\u7D20\u7684\u6307\u9488\u4ECE\u5C3E\u5411\u5934\u904D\u5386\u3002</p><ul><li>\u5982\u679C\u4E24\u4E2A\u6307\u9488\u6307\u5411\u5143\u7D20\u7684\u548C sum == target\uFF0C\u90A3\u4E48\u5F97\u5230\u8981\u6C42\u7684\u7ED3\u679C\uFF1B</li><li>\u5982\u679C sum &gt; target\uFF0C\u79FB\u52A8\u8F83\u5927\u7684\u5143\u7D20\uFF0C\u4F7F sum \u53D8\u5C0F\u4E00\u4E9B\uFF1B</li><li>\u5982\u679C sum &lt; target\uFF0C\u79FB\u52A8\u8F83\u5C0F\u7684\u5143\u7D20\uFF0C\u4F7F sum \u53D8\u5927\u4E00\u4E9B\u3002</li></ul><p>\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u6700\u591A\u904D\u5386\u4E00\u6B21\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N)\u3002\u53EA\u4F7F\u7528\u4E86\u4E24\u4E2A\u989D\u5916\u53D8\u91CF\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3A O(1)\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/437cb54c-5970-4ba9-b2ef-2541f7d6c81e.gif&quot; width=&quot;200px&quot;&gt;</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">twoSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> numbers<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>numbers <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> numbers<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> sum <span class="token operator">=</span> numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> numbers<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">==</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&lt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            j<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-\u4E24\u6570\u5E73\u65B9\u548C" tabindex="-1"><a class="header-anchor" href="#_2-\u4E24\u6570\u5E73\u65B9\u548C" aria-hidden="true">#</a> 2. \u4E24\u6570\u5E73\u65B9\u548C</h2><p>633. Sum of Square Numbers (Easy)</p>`,9),g={href:"https://leetcode.com/problems/sum-of-square-numbers/description/",target:"_blank",rel:"noopener noreferrer"},w=s("Leetcode"),y=s(" / "),_={href:"https://leetcode-cn.com/problems/sum-of-square-numbers/description/",target:"_blank",rel:"noopener noreferrer"},f=s("\u529B\u6263"),E=p(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input: 5
Output: True
Explanation: 1 * 1 + 2 * 2 = 5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u5224\u65AD\u4E00\u4E2A\u975E\u8D1F\u6574\u6570\u662F\u5426\u4E3A\u4E24\u4E2A\u6574\u6570\u7684\u5E73\u65B9\u548C\u3002</p><p>\u53EF\u4EE5\u770B\u6210\u662F\u5728\u5143\u7D20\u4E3A 0~target \u7684\u6709\u5E8F\u6570\u7EC4\u4E2D\u67E5\u627E\u4E24\u4E2A\u6570\uFF0C\u4F7F\u5F97\u8FD9\u4E24\u4E2A\u6570\u7684\u5E73\u65B9\u548C\u4E3A target\uFF0C\u5982\u679C\u80FD\u627E\u5230\uFF0C\u5219\u8FD4\u56DE true\uFF0C\u8868\u793A target \u662F\u4E24\u4E2A\u6574\u6570\u7684\u5E73\u65B9\u548C\u3002</p><p>\u672C\u9898\u548C 167. Two Sum II - Input array is sorted \u7C7B\u4F3C\uFF0C\u53EA\u6709\u4E00\u4E2A\u660E\u663E\u533A\u522B\uFF1A\u4E00\u4E2A\u662F\u548C\u4E3A target\uFF0C\u4E00\u4E2A\u662F\u5E73\u65B9\u548C\u4E3A target\u3002\u672C\u9898\u540C\u6837\u53EF\u4EE5\u4F7F\u7528\u53CC\u6307\u9488\u5F97\u5230\u4E24\u4E2A\u6570\uFF0C\u4F7F\u5176\u5E73\u65B9\u548C\u4E3A target\u3002</p><p>\u672C\u9898\u7684\u5173\u952E\u662F\u53F3\u6307\u9488\u7684\u521D\u59CB\u5316\uFF0C\u5B9E\u73B0\u526A\u679D\uFF0C\u4ECE\u800C\u964D\u4F4E\u65F6\u95F4\u590D\u6742\u5EA6\u3002\u8BBE\u53F3\u6307\u9488\u4E3A x\uFF0C\u5DE6\u6307\u9488\u56FA\u5B9A\u4E3A 0\uFF0C\u4E3A\u4E86\u4F7F 0<sup>2</sup> + x<sup>2</sup> \u7684\u503C\u5C3D\u53EF\u80FD\u63A5\u8FD1 target\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5C06 x \u53D6\u4E3A sqrt(target)\u3002</p><p>\u56E0\u4E3A\u6700\u591A\u53EA\u9700\u8981\u904D\u5386\u4E00\u6B21 0~sqrt(target)\uFF0C\u6240\u4EE5\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(sqrt(target))\u3002\u53C8\u56E0\u4E3A\u53EA\u4F7F\u7528\u4E86\u4E24\u4E2A\u989D\u5916\u7684\u53D8\u91CF\uFF0C\u56E0\u6B64\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3A O(1)\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">judgeSquareSum</span><span class="token punctuation">(</span><span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
     <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">int</span> powSum <span class="token operator">=</span> i <span class="token operator">*</span> i <span class="token operator">+</span> j <span class="token operator">*</span> j<span class="token punctuation">;</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span>powSum <span class="token operator">==</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
             <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>powSum <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
             j<span class="token operator">--</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
             i<span class="token operator">++</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
     <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-\u53CD\u8F6C\u5B57\u7B26\u4E32\u4E2D\u7684\u5143\u97F3\u5B57\u7B26" tabindex="-1"><a class="header-anchor" href="#_3-\u53CD\u8F6C\u5B57\u7B26\u4E32\u4E2D\u7684\u5143\u97F3\u5B57\u7B26" aria-hidden="true">#</a> 3. \u53CD\u8F6C\u5B57\u7B26\u4E32\u4E2D\u7684\u5143\u97F3\u5B57\u7B26</h2><p>345. Reverse Vowels of a String (Easy)</p>`,9),x={href:"https://leetcode.com/problems/reverse-vowels-of-a-string/description/",target:"_blank",rel:"noopener noreferrer"},j=s("Leetcode"),q=s(" / "),A={href:"https://leetcode-cn.com/problems/reverse-vowels-of-a-string/description/",target:"_blank",rel:"noopener noreferrer"},B=s("\u529B\u6263"),S=p(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Given s = &quot;leetcode&quot;, return &quot;leotcede&quot;.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/a7cb8423-895d-4975-8ef8-662a0029c772.png&quot; width=&quot;400px&quot;&gt;</p><p>\u4F7F\u7528\u53CC\u6307\u9488\uFF0C\u4E00\u4E2A\u6307\u9488\u4ECE\u5934\u5411\u5C3E\u904D\u5386\uFF0C\u4E00\u4E2A\u6307\u9488\u4ECE\u5C3E\u5230\u5934\u904D\u5386\uFF0C\u5F53\u4E24\u4E2A\u6307\u9488\u90FD\u904D\u5386\u5230\u5143\u97F3\u5B57\u7B26\u65F6\uFF0C\u4EA4\u6362\u8FD9\u4E24\u4E2A\u5143\u97F3\u5B57\u7B26\u3002</p><p>\u4E3A\u4E86\u5FEB\u901F\u5224\u65AD\u4E00\u4E2A\u5B57\u7B26\u662F\u4E0D\u662F\u5143\u97F3\u5B57\u7B26\uFF0C\u6211\u4EEC\u5C06\u5168\u90E8\u5143\u97F3\u5B57\u7B26\u6DFB\u52A0\u5230\u96C6\u5408 HashSet \u4E2D\uFF0C\u4ECE\u800C\u4EE5 O(1) \u7684\u65F6\u95F4\u590D\u6742\u5EA6\u8FDB\u884C\u8BE5\u64CD\u4F5C\u3002</p><ul><li>\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N)\uFF1A\u53EA\u9700\u8981\u904D\u5386\u6240\u6709\u5143\u7D20\u4E00\u6B21</li><li>\u7A7A\u95F4\u590D\u6742\u5EA6 O(1)\uFF1A\u53EA\u9700\u8981\u4F7F\u7528\u4E24\u4E2A\u989D\u5916\u53D8\u91CF</li></ul><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ef25ff7c-0f63-420d-8b30-eafbeea35d11.gif&quot; width=&quot;400px&quot;&gt;</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">&gt;</span></span> vowels <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token char">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;e&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;i&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;o&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;u&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;E&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;I&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;O&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;U&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">reverseVowels</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span> ci <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span> cj <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>vowels<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>ci<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> ci<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>vowels<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>cj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">[</span>j<span class="token operator">--</span><span class="token punctuation">]</span> <span class="token operator">=</span> cj<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> cj<span class="token punctuation">;</span>
            result<span class="token punctuation">[</span>j<span class="token operator">--</span><span class="token punctuation">]</span> <span class="token operator">=</span> ci<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-\u56DE\u6587\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#_4-\u56DE\u6587\u5B57\u7B26\u4E32" aria-hidden="true">#</a> 4. \u56DE\u6587\u5B57\u7B26\u4E32</h2><p>680. Valid Palindrome II (Easy)</p>`,9),L={href:"https://leetcode.com/problems/valid-palindrome-ii/description/",target:"_blank",rel:"noopener noreferrer"},I=s("Leetcode"),C=s(" / "),O={href:"https://leetcode-cn.com/problems/valid-palindrome-ii/description/",target:"_blank",rel:"noopener noreferrer"},D=s("\u529B\u6263"),F=p(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input: &quot;abca&quot;
Output: True
Explanation: You could delete the character &#39;c&#39;.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u53EF\u4EE5\u5220\u9664\u4E00\u4E2A\u5B57\u7B26\uFF0C\u5224\u65AD\u662F\u5426\u80FD\u6784\u6210\u56DE\u6587\u5B57\u7B26\u4E32\u3002</p><p>\u6240\u8C13\u7684\u56DE\u6587\u5B57\u7B26\u4E32\uFF0C\u662F\u6307\u5177\u6709\u5DE6\u53F3\u5BF9\u79F0\u7279\u70B9\u7684\u5B57\u7B26\u4E32\uFF0C\u4F8B\u5982 &quot;abcba&quot; \u5C31\u662F\u4E00\u4E2A\u56DE\u6587\u5B57\u7B26\u4E32\u3002</p><p>\u4F7F\u7528\u53CC\u6307\u9488\u53EF\u4EE5\u5F88\u5BB9\u6613\u5224\u65AD\u4E00\u4E2A\u5B57\u7B26\u4E32\u662F\u5426\u662F\u56DE\u6587\u5B57\u7B26\u4E32\uFF1A\u4EE4\u4E00\u4E2A\u6307\u9488\u4ECE\u5DE6\u5230\u53F3\u904D\u5386\uFF0C\u4E00\u4E2A\u6307\u9488\u4ECE\u53F3\u5230\u5DE6\u904D\u5386\uFF0C\u8FD9\u4E24\u4E2A\u6307\u9488\u540C\u65F6\u79FB\u52A8\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u6BCF\u6B21\u90FD\u5224\u65AD\u4E24\u4E2A\u6307\u9488\u6307\u5411\u7684\u5B57\u7B26\u662F\u5426\u76F8\u540C\uFF0C\u5982\u679C\u90FD\u76F8\u540C\uFF0C\u5B57\u7B26\u4E32\u624D\u662F\u5177\u6709\u5DE6\u53F3\u5BF9\u79F0\u6027\u8D28\u7684\u56DE\u6587\u5B57\u7B26\u4E32\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/fcc941ec-134b-4dcd-bc86-1702fd305300.gif&quot; width=&quot;250px&quot;&gt;</p><p>\u672C\u9898\u7684\u5173\u952E\u662F\u5904\u7406\u5220\u9664\u4E00\u4E2A\u5B57\u7B26\u3002\u5728\u4F7F\u7528\u53CC\u6307\u9488\u904D\u5386\u5B57\u7B26\u4E32\u65F6\uFF0C\u5982\u679C\u51FA\u73B0\u4E24\u4E2A\u6307\u9488\u6307\u5411\u7684\u5B57\u7B26\u4E0D\u76F8\u7B49\u7684\u60C5\u51B5\uFF0C\u6211\u4EEC\u5C31\u8BD5\u7740\u5220\u9664\u4E00\u4E2A\u5B57\u7B26\uFF0C\u518D\u5224\u65AD\u5220\u9664\u5B8C\u4E4B\u540E\u7684\u5B57\u7B26\u4E32\u662F\u5426\u662F\u56DE\u6587\u5B57\u7B26\u4E32\u3002</p><p>\u5728\u5224\u65AD\u662F\u5426\u4E3A\u56DE\u6587\u5B57\u7B26\u4E32\u65F6\uFF0C\u6211\u4EEC\u4E0D\u9700\u8981\u5224\u65AD\u6574\u4E2A\u5B57\u7B26\u4E32\uFF0C\u56E0\u4E3A\u5DE6\u6307\u9488\u5DE6\u8FB9\u548C\u53F3\u6307\u9488\u53F3\u8FB9\u7684\u5B57\u7B26\u4E4B\u524D\u5DF2\u7ECF\u5224\u65AD\u8FC7\u5177\u6709\u5BF9\u79F0\u6027\u8D28\uFF0C\u6240\u4EE5\u53EA\u9700\u8981\u5224\u65AD\u4E2D\u95F4\u7684\u5B50\u5B57\u7B26\u4E32\u5373\u53EF\u3002</p><p>\u5728\u8BD5\u7740\u5220\u9664\u5B57\u7B26\u65F6\uFF0C\u6211\u4EEC\u65E2\u53EF\u4EE5\u5220\u9664\u5DE6\u6307\u9488\u6307\u5411\u7684\u5B57\u7B26\uFF0C\u4E5F\u53EF\u4EE5\u5220\u9664\u53F3\u6307\u9488\u6307\u5411\u7684\u5B57\u7B26\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/db5f30a7-8bfa-4ecc-ab5d-747c77818964.gif&quot; width=&quot;300px&quot;&gt;</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">validPalindrome</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> j<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">,</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">!=</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">isPalindrome</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isPalindrome</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isPalindrome</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token operator">!=</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-\u5F52\u5E76\u4E24\u4E2A\u6709\u5E8F\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_5-\u5F52\u5E76\u4E24\u4E2A\u6709\u5E8F\u6570\u7EC4" aria-hidden="true">#</a> 5. \u5F52\u5E76\u4E24\u4E2A\u6709\u5E8F\u6570\u7EC4</h2><p>88. Merge Sorted Array (Easy)</p>`,12),N={href:"https://leetcode.com/problems/merge-sorted-array/description/",target:"_blank",rel:"noopener noreferrer"},M=s("Leetcode"),T=s(" / "),V={href:"https://leetcode-cn.com/problems/merge-sorted-array/description/",target:"_blank",rel:"noopener noreferrer"},W=s("\u529B\u6263"),z=p(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input:
nums1 = [1,2,3,0,0,0], m = 3
nums2 = [2,5,6],       n = 3

Output: [1,2,2,3,5,6]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u628A\u5F52\u5E76\u7ED3\u679C\u5B58\u5230\u7B2C\u4E00\u4E2A\u6570\u7EC4\u4E0A\u3002</p><p>\u9700\u8981\u4ECE\u5C3E\u5F00\u59CB\u904D\u5386\uFF0C\u5426\u5219\u5728 nums1 \u4E0A\u5F52\u5E76\u5F97\u5230\u7684\u503C\u4F1A\u8986\u76D6\u8FD8\u672A\u8FDB\u884C\u5F52\u5E76\u6BD4\u8F83\u7684\u503C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums1<span class="token punctuation">,</span> <span class="token keyword">int</span> m<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums2<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> index1 <span class="token operator">=</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> index2 <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> indexMerge <span class="token operator">=</span> m <span class="token operator">+</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>index2 <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>index1 <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            nums1<span class="token punctuation">[</span>indexMerge<span class="token operator">--</span><span class="token punctuation">]</span> <span class="token operator">=</span> nums2<span class="token punctuation">[</span>index2<span class="token operator">--</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>index2 <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            nums1<span class="token punctuation">[</span>indexMerge<span class="token operator">--</span><span class="token punctuation">]</span> <span class="token operator">=</span> nums1<span class="token punctuation">[</span>index1<span class="token operator">--</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nums1<span class="token punctuation">[</span>index1<span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums2<span class="token punctuation">[</span>index2<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            nums1<span class="token punctuation">[</span>indexMerge<span class="token operator">--</span><span class="token punctuation">]</span> <span class="token operator">=</span> nums1<span class="token punctuation">[</span>index1<span class="token operator">--</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            nums1<span class="token punctuation">[</span>indexMerge<span class="token operator">--</span><span class="token punctuation">]</span> <span class="token operator">=</span> nums2<span class="token punctuation">[</span>index2<span class="token operator">--</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-\u5224\u65AD\u94FE\u8868\u662F\u5426\u5B58\u5728\u73AF" tabindex="-1"><a class="header-anchor" href="#_6-\u5224\u65AD\u94FE\u8868\u662F\u5426\u5B58\u5728\u73AF" aria-hidden="true">#</a> 6. \u5224\u65AD\u94FE\u8868\u662F\u5426\u5B58\u5728\u73AF</h2><p>141. Linked List Cycle (Easy)</p>`,6),P={href:"https://leetcode.com/problems/linked-list-cycle/description/",target:"_blank",rel:"noopener noreferrer"},H=s("Leetcode"),G=s(" / "),R={href:"https://leetcode-cn.com/problems/linked-list-cycle/description/",target:"_blank",rel:"noopener noreferrer"},U=s("\u529B\u6263"),Y=p(`<p>\u4F7F\u7528\u53CC\u6307\u9488\uFF0C\u4E00\u4E2A\u6307\u9488\u6BCF\u6B21\u79FB\u52A8\u4E00\u4E2A\u8282\u70B9\uFF0C\u4E00\u4E2A\u6307\u9488\u6BCF\u6B21\u79FB\u52A8\u4E24\u4E2A\u8282\u70B9\uFF0C\u5982\u679C\u5B58\u5728\u73AF\uFF0C\u90A3\u4E48\u8FD9\u4E24\u4E2A\u6307\u9488\u4E00\u5B9A\u4F1A\u76F8\u9047\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasCycle</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">ListNode</span> l1 <span class="token operator">=</span> head<span class="token punctuation">,</span> l2 <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l1 <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> l2 <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> l2<span class="token punctuation">.</span>next <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>l1 <span class="token operator">==</span> l2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        l1 <span class="token operator">=</span> l1<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        l2 <span class="token operator">=</span> l2<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-\u6700\u957F\u5B50\u5E8F\u5217" tabindex="-1"><a class="header-anchor" href="#_7-\u6700\u957F\u5B50\u5E8F\u5217" aria-hidden="true">#</a> 7. \u6700\u957F\u5B50\u5E8F\u5217</h2><p>524. Longest Word in Dictionary through Deleting (Medium)</p>`,4),J={href:"https://leetcode.com/problems/longest-word-in-dictionary-through-deleting/description/",target:"_blank",rel:"noopener noreferrer"},K=s("Leetcode"),Q=s(" / "),X={href:"https://leetcode-cn.com/problems/longest-word-in-dictionary-through-deleting/description/",target:"_blank",rel:"noopener noreferrer"},Z=s("\u529B\u6263"),$=p(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input:
s = &quot;abpcplea&quot;, d = [&quot;ale&quot;,&quot;apple&quot;,&quot;monkey&quot;,&quot;plea&quot;]

Output:
&quot;apple&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u5220\u9664 s \u4E2D\u7684\u4E00\u4E9B\u5B57\u7B26\uFF0C\u4F7F\u5F97\u5B83\u6784\u6210\u5B57\u7B26\u4E32\u5217\u8868 d \u4E2D\u7684\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u627E\u51FA\u80FD\u6784\u6210\u7684\u6700\u957F\u5B57\u7B26\u4E32\u3002\u5982\u679C\u6709\u591A\u4E2A\u76F8\u540C\u957F\u5EA6\u7684\u7ED3\u679C\uFF0C\u8FD4\u56DE\u5B57\u5178\u5E8F\u7684\u6700\u5C0F\u5B57\u7B26\u4E32\u3002</p><p>\u901A\u8FC7\u5220\u9664\u5B57\u7B26\u4E32 s \u4E2D\u7684\u4E00\u4E2A\u5B57\u7B26\u80FD\u5F97\u5230\u5B57\u7B26\u4E32 t\uFF0C\u53EF\u4EE5\u8BA4\u4E3A t \u662F s \u7684\u5B50\u5E8F\u5217\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u53CC\u6307\u9488\u6765\u5224\u65AD\u4E00\u4E2A\u5B57\u7B26\u4E32\u662F\u5426\u4E3A\u53E6\u4E00\u4E2A\u5B57\u7B26\u4E32\u7684\u5B50\u5E8F\u5217\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">findLongestWord</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> longestWord <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> target <span class="token operator">:</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> l1 <span class="token operator">=</span> longestWord<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> l2 <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>l1 <span class="token operator">&gt;</span> l2 <span class="token operator">||</span> <span class="token punctuation">(</span>l1 <span class="token operator">==</span> l2 <span class="token operator">&amp;&amp;</span> longestWord<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSubstr</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            longestWord <span class="token operator">=</span> target<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> longestWord<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isSubstr</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token class-name">String</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span> target<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span> target<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            j<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        i<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> j <span class="token operator">==</span> target<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function nn(sn,an){const a=o("ExternalLinkIcon");return c(),l(i,null,[r,n("p",null,[n("a",k,[d,t(a)]),v,n("a",m,[b,t(a)])]),h,n("p",null,[n("a",g,[w,t(a)]),y,n("a",_,[f,t(a)])]),E,n("p",null,[n("a",x,[j,t(a)]),q,n("a",A,[B,t(a)])]),S,n("p",null,[n("a",L,[I,t(a)]),C,n("a",O,[D,t(a)])]),F,n("p",null,[n("a",N,[M,t(a)]),T,n("a",V,[W,t(a)])]),z,n("p",null,[n("a",P,[H,t(a)]),G,n("a",R,[U,t(a)])]),Y,n("p",null,[n("a",J,[K,t(a)]),Q,n("a",X,[Z,t(a)])]),$],64)}var en=e(u,[["render",nn],["__file","Leetcode \u9898\u89E3 - \u53CC\u6307\u9488.html.vue"]]);export{en as default};
