import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{e as s}from"./app.5ce5af5d.js";const a={},p=s(`<h1 id="\u7B97\u6CD5-\u7B26\u53F7\u8868" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5-\u7B26\u53F7\u8868" aria-hidden="true">#</a> \u7B97\u6CD5 - \u7B26\u53F7\u8868</h1><ul><li><a href="#%E7%AE%97%E6%B3%95---%E7%AC%A6%E5%8F%B7%E8%A1%A8">\u7B97\u6CD5 - \u7B26\u53F7\u8868</a><ul><li><a href="#%E5%89%8D%E8%A8%80">\u524D\u8A00</a></li><li><a href="#%E5%88%9D%E7%BA%A7%E5%AE%9E%E7%8E%B0">\u521D\u7EA7\u5B9E\u73B0</a><ul><li><a href="#1-%E9%93%BE%E8%A1%A8%E5%AE%9E%E7%8E%B0%E6%97%A0%E5%BA%8F%E7%AC%A6%E5%8F%B7%E8%A1%A8">1. \u94FE\u8868\u5B9E\u73B0\u65E0\u5E8F\u7B26\u53F7\u8868</a></li><li><a href="#2-%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E5%AE%9E%E7%8E%B0%E6%9C%89%E5%BA%8F%E7%AC%A6%E5%8F%B7%E8%A1%A8">2. \u4E8C\u5206\u67E5\u627E\u5B9E\u73B0\u6709\u5E8F\u7B26\u53F7\u8868</a></li></ul></li><li><a href="#%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91">\u4E8C\u53C9\u67E5\u627E\u6811</a><ul><li><a href="#1-get">1. get()</a></li><li><a href="#2-put">2. put()</a></li><li><a href="#3-%E5%88%86%E6%9E%90">3. \u5206\u6790</a></li><li><a href="#4-floor">4. floor()</a></li><li><a href="#5-rank">5. rank()</a></li><li><a href="#6-min">6. min()</a></li><li><a href="#7-deletemin">7. deleteMin()</a></li><li><a href="#8-delete">8. delete()</a></li><li><a href="#9-keys">9. keys()</a></li><li><a href="#10-%E5%88%86%E6%9E%90">10. \u5206\u6790</a></li></ul></li><li><a href="#2-3-%E6%9F%A5%E6%89%BE%E6%A0%91">2-3 \u67E5\u627E\u6811</a><ul><li><a href="#1-%E6%8F%92%E5%85%A5%E6%93%8D%E4%BD%9C">1. \u63D2\u5165\u64CD\u4F5C</a></li><li><a href="#2-%E6%80%A7%E8%B4%A8">2. \u6027\u8D28</a></li></ul></li><li><a href="#%E7%BA%A2%E9%BB%91%E6%A0%91">\u7EA2\u9ED1\u6811</a><ul><li><a href="#1-%E5%B7%A6%E6%97%8B%E8%BD%AC">1. \u5DE6\u65CB\u8F6C</a></li><li><a href="#2-%E5%8F%B3%E6%97%8B%E8%BD%AC">2. \u53F3\u65CB\u8F6C</a></li><li><a href="#3-%E9%A2%9C%E8%89%B2%E8%BD%AC%E6%8D%A2">3. \u989C\u8272\u8F6C\u6362</a></li><li><a href="#4-%E6%8F%92%E5%85%A5">4. \u63D2\u5165</a></li><li><a href="#5-%E5%88%86%E6%9E%90">5. \u5206\u6790</a></li></ul></li><li><a href="#%E6%95%A3%E5%88%97%E8%A1%A8">\u6563\u5217\u8868</a><ul><li><a href="#1-%E6%95%A3%E5%88%97%E5%87%BD%E6%95%B0">1. \u6563\u5217\u51FD\u6570</a></li><li><a href="#2-%E6%8B%89%E9%93%BE%E6%B3%95">2. \u62C9\u94FE\u6CD5</a></li><li><a href="#3-%E7%BA%BF%E6%80%A7%E6%8E%A2%E6%B5%8B%E6%B3%95">3. \u7EBF\u6027\u63A2\u6D4B\u6CD5</a></li></ul></li><li><a href="#%E5%B0%8F%E7%BB%93">\u5C0F\u7ED3</a><ul><li><a href="#1-%E7%AC%A6%E5%8F%B7%E8%A1%A8%E7%AE%97%E6%B3%95%E6%AF%94%E8%BE%83">1. \u7B26\u53F7\u8868\u7B97\u6CD5\u6BD4\u8F83</a></li><li><a href="#2-java-%E7%9A%84%E7%AC%A6%E5%8F%B7%E8%A1%A8%E5%AE%9E%E7%8E%B0">2. Java \u7684\u7B26\u53F7\u8868\u5B9E\u73B0</a></li><li><a href="#3-%E7%A8%80%E7%96%8F%E5%90%91%E9%87%8F%E4%B9%98%E6%B3%95">3. \u7A00\u758F\u5411\u91CF\u4E58\u6CD5</a></li></ul></li></ul></li></ul><h2 id="\u524D\u8A00" tabindex="-1"><a class="header-anchor" href="#\u524D\u8A00" aria-hidden="true">#</a> \u524D\u8A00</h2><p>\u7B26\u53F7\u8868\uFF08Symbol Table\uFF09\u662F\u4E00\u79CD\u5B58\u50A8\u952E\u503C\u5BF9\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u53EF\u4EE5\u652F\u6301\u5FEB\u901F\u67E5\u627E\u64CD\u4F5C\u3002</p><p>\u7B26\u53F7\u8868\u5206\u4E3A\u6709\u5E8F\u548C\u65E0\u5E8F\u4E24\u79CD\uFF0C\u6709\u5E8F\u7B26\u53F7\u8868\u4E3B\u8981\u6307\u652F\u6301 min()\u3001max() \u7B49\u6839\u636E\u952E\u7684\u5927\u5C0F\u5173\u7CFB\u6765\u5B9E\u73B0\u7684\u64CD\u4F5C\u3002</p><p>\u6709\u5E8F\u7B26\u53F7\u8868\u7684\u952E\u9700\u8981\u5B9E\u73B0 Comparable \u63A5\u53E3\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UnorderedST</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Key</span><span class="token punctuation">,</span> <span class="token class-name">Value</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Value</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">,</span> <span class="token class-name">Value</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">OrderedST</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Key</span> <span class="token keyword">extends</span> <span class="token class-name">Comparable</span><span class="token punctuation">&lt;</span><span class="token class-name">Key</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Value</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">,</span> <span class="token class-name">Value</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Value</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Key</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Key</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> <span class="token function">rank</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Key</span><span class="token punctuation">&gt;</span></span> <span class="token function">keys</span><span class="token punctuation">(</span><span class="token class-name">Key</span> l<span class="token punctuation">,</span> <span class="token class-name">Key</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u521D\u7EA7\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u521D\u7EA7\u5B9E\u73B0" aria-hidden="true">#</a> \u521D\u7EA7\u5B9E\u73B0</h2><h3 id="_1-\u94FE\u8868\u5B9E\u73B0\u65E0\u5E8F\u7B26\u53F7\u8868" tabindex="-1"><a class="header-anchor" href="#_1-\u94FE\u8868\u5B9E\u73B0\u65E0\u5E8F\u7B26\u53F7\u8868" aria-hidden="true">#</a> 1. \u94FE\u8868\u5B9E\u73B0\u65E0\u5E8F\u7B26\u53F7\u8868</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ListUnorderedST</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Key</span><span class="token punctuation">,</span> <span class="token class-name">Value</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">UnorderedST</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Key</span><span class="token punctuation">,</span> <span class="token class-name">Value</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Node</span> first<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
        <span class="token class-name">Key</span> key<span class="token punctuation">;</span>
        <span class="token class-name">Value</span> value<span class="token punctuation">;</span>
        <span class="token class-name">Node</span> next<span class="token punctuation">;</span>

        <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">,</span> <span class="token class-name">Value</span> value<span class="token punctuation">,</span> <span class="token class-name">Node</span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token class-name">Node</span> cur <span class="token operator">=</span> first<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>cur <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            cnt<span class="token operator">++</span><span class="token punctuation">;</span>
            cur <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> cnt<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">,</span> <span class="token class-name">Value</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span> cur <span class="token operator">=</span> first<span class="token punctuation">;</span>
        <span class="token comment">// \u5982\u679C\u5728\u94FE\u8868\u4E2D\u627E\u5230\u8282\u70B9\u7684\u952E\u7B49\u4E8E key \u5C31\u66F4\u65B0\u8FD9\u4E2A\u8282\u70B9\u7684\u503C\u4E3A value</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>cur <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cur<span class="token punctuation">.</span>key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                cur<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            cur <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5426\u5219\u4F7F\u7528\u5934\u63D2\u6CD5\u63D2\u5165\u4E00\u4E2A\u65B0\u8282\u70B9</span>
        first <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> first<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>first <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>first<span class="token punctuation">.</span>key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>
            first <span class="token operator">=</span> first<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token class-name">Node</span> pre <span class="token operator">=</span> first<span class="token punctuation">,</span> cur <span class="token operator">=</span> first<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>cur <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cur<span class="token punctuation">.</span>key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                pre<span class="token punctuation">.</span>next <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            pre <span class="token operator">=</span> pre<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            cur <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Value</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span> cur <span class="token operator">=</span> first<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>cur <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cur<span class="token punctuation">.</span>key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> cur<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
            cur <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u4E8C\u5206\u67E5\u627E\u5B9E\u73B0\u6709\u5E8F\u7B26\u53F7\u8868" tabindex="-1"><a class="header-anchor" href="#_2-\u4E8C\u5206\u67E5\u627E\u5B9E\u73B0\u6709\u5E8F\u7B26\u53F7\u8868" aria-hidden="true">#</a> 2. \u4E8C\u5206\u67E5\u627E\u5B9E\u73B0\u6709\u5E8F\u7B26\u53F7\u8868</h3><p>\u4F7F\u7528\u4E00\u5BF9\u5E73\u884C\u6570\u7EC4\uFF0C\u4E00\u4E2A\u5B58\u50A8\u952E\u4E00\u4E2A\u5B58\u50A8\u503C\u3002</p><p>\u4E8C\u5206\u67E5\u627E\u7684 rank() \u65B9\u6CD5\u81F3\u5173\u91CD\u8981\uFF0C\u5F53\u952E\u5728\u8868\u4E2D\u65F6\uFF0C\u5B83\u80FD\u591F\u77E5\u9053\u8BE5\u952E\u7684\u4F4D\u7F6E\uFF1B\u5F53\u952E\u4E0D\u5728\u8868\u4E2D\u65F6\uFF0C\u5B83\u4E5F\u80FD\u77E5\u9053\u5728\u4F55\u5904\u63D2\u5165\u65B0\u952E\u3002</p><p>\u4E8C\u5206\u67E5\u627E\u6700\u591A\u9700\u8981 logN+1 \u6B21\u6BD4\u8F83\uFF0C\u4F7F\u7528\u4E8C\u5206\u67E5\u627E\u5B9E\u73B0\u7684\u7B26\u53F7\u8868\u7684\u67E5\u627E\u64CD\u4F5C\u6240\u9700\u8981\u7684\u65F6\u95F4\u6700\u591A\u662F\u5BF9\u6570\u7EA7\u522B\u7684\u3002\u4F46\u662F\u63D2\u5165\u64CD\u4F5C\u9700\u8981\u79FB\u52A8\u6570\u7EC4\u5143\u7D20\uFF0C\u662F\u7EBF\u6027\u7EA7\u522B\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BinarySearchOrderedST</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Key</span> <span class="token keyword">extends</span> <span class="token class-name">Comparable</span><span class="token punctuation">&lt;</span><span class="token class-name">Key</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Value</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">OrderedST</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Key</span><span class="token punctuation">,</span> <span class="token class-name">Value</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Key</span><span class="token punctuation">[</span><span class="token punctuation">]</span> keys<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Value</span><span class="token punctuation">[</span><span class="token punctuation">]</span> values<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">BinarySearchOrderedST</span><span class="token punctuation">(</span><span class="token keyword">int</span> capacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        keys <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Key</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">new</span> <span class="token class-name">Comparable</span><span class="token punctuation">[</span>capacity<span class="token punctuation">]</span><span class="token punctuation">;</span>
        values <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Value</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span>capacity<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">N</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">rank</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> h <span class="token operator">=</span> <span class="token class-name">N</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;=</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> m <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span>h <span class="token operator">-</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> cmp <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>keys<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cmp <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> m<span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cmp <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                h <span class="token operator">=</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                l <span class="token operator">=</span> m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> l<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Key</span><span class="token punctuation">&gt;</span></span> <span class="token function">keys</span><span class="token punctuation">(</span><span class="token class-name">Key</span> l<span class="token punctuation">,</span> <span class="token class-name">Key</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token function">rank</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Key</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>keys<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>keys<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            index<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> list<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">,</span> <span class="token class-name">Value</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token function">rank</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5982\u679C\u627E\u5230\u5DF2\u7ECF\u5B58\u5728\u7684\u8282\u70B9\u952E\u4E3A key\uFF0C\u5C31\u66F4\u65B0\u8FD9\u4E2A\u8282\u70B9\u7684\u503C\u4E3A value</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token class-name">N</span> <span class="token operator">&amp;&amp;</span> keys<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            values<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5426\u5219\u5728\u6570\u7EC4\u4E2D\u63D2\u5165\u65B0\u7684\u8282\u70B9\uFF0C\u9700\u8981\u5148\u5C06\u63D2\u5165\u4F4D\u7F6E\u4E4B\u540E\u7684\u5143\u7D20\u90FD\u5411\u540E\u79FB\u52A8\u4E00\u4E2A\u4F4D\u7F6E</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token class-name">N</span><span class="token punctuation">;</span> j <span class="token operator">&gt;</span> index<span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            keys<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> keys<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            values<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> values<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        keys<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> key<span class="token punctuation">;</span>
        values<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
        <span class="token class-name">N</span><span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Value</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token function">rank</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token class-name">N</span> <span class="token operator">&amp;&amp;</span> keys<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> values<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Key</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> keys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Key</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> keys<span class="token punctuation">[</span><span class="token class-name">N</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E8C\u53C9\u67E5\u627E\u6811" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u67E5\u627E\u6811" aria-hidden="true">#</a> \u4E8C\u53C9\u67E5\u627E\u6811</h2><p><strong>\u4E8C\u53C9\u6811</strong> \u662F\u4E00\u4E2A\u7A7A\u94FE\u63A5\uFF0C\u6216\u8005\u662F\u4E00\u4E2A\u6709\u5DE6\u53F3\u4E24\u4E2A\u94FE\u63A5\u7684\u8282\u70B9\uFF0C\u6BCF\u4E2A\u94FE\u63A5\u90FD\u6307\u5411\u4E00\u9897\u5B50\u4E8C\u53C9\u6811\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/c11528f6-fc71-4a2b-8d2f-51b8954c38f1.jpg&quot; width=&quot;180)</p><p><strong>\u4E8C\u53C9\u67E5\u627E\u6811</strong> \uFF08BST\uFF09\u662F\u4E00\u9897\u4E8C\u53C9\u6811\uFF0C\u5E76\u4E14\u6BCF\u4E2A\u8282\u70B9\u7684\u503C\u90FD\u5927\u4E8E\u7B49\u4E8E\u5176\u5DE6\u5B50\u6811\u4E2D\u7684\u6240\u6709\u8282\u70B9\u7684\u503C\u800C\u5C0F\u4E8E\u7B49\u4E8E\u53F3\u5B50\u6811\u7684\u6240\u6709\u8282\u70B9\u7684\u503C\u3002</p><p>BST \u6709\u4E00\u4E2A\u91CD\u8981\u6027\u8D28\uFF0C\u5C31\u662F\u5B83\u7684\u4E2D\u5E8F\u904D\u5386\u7ED3\u679C\u9012\u589E\u6392\u5E8F\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ef552ae3-ae0d-4217-88e6-99cbe8163f0c.jpg&quot; width=&quot;200)</p><p>\u57FA\u672C\u6570\u636E\u7ED3\u6784\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BST</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Key</span> <span class="token keyword">extends</span> <span class="token class-name">Comparable</span><span class="token punctuation">&lt;</span><span class="token class-name">Key</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Value</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">OrderedST</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Key</span><span class="token punctuation">,</span> <span class="token class-name">Value</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">protected</span> <span class="token class-name">Node</span> root<span class="token punctuation">;</span>

    <span class="token keyword">protected</span> <span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
        <span class="token class-name">Key</span> key<span class="token punctuation">;</span>
        <span class="token class-name">Value</span> val<span class="token punctuation">;</span>
        <span class="token class-name">Node</span> left<span class="token punctuation">;</span>
        <span class="token class-name">Node</span> right<span class="token punctuation">;</span>
        <span class="token comment">// \u4EE5\u8BE5\u8282\u70B9\u4E3A\u6839\u7684\u5B50\u6811\u8282\u70B9\u603B\u6570</span>
        <span class="token keyword">int</span> <span class="token class-name">N</span><span class="token punctuation">;</span>
        <span class="token comment">// \u7EA2\u9ED1\u6811\u4E2D\u4F7F\u7528</span>
        <span class="token keyword">boolean</span> color<span class="token punctuation">;</span>

        <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">,</span> <span class="token class-name">Value</span> val<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token class-name">N</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
            <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>N</span> <span class="token operator">=</span> <span class="token class-name">N</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">size</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token class-name">Node</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name"><span class="token namespace">x<span class="token punctuation">.</span></span>N</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">recalculateSize</span><span class="token punctuation">(</span><span class="token class-name">Node</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token namespace">x<span class="token punctuation">.</span></span>N</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">size</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u4E86\u65B9\u4FBF\u7ED8\u56FE\uFF0C\u4E0B\u6587\u4E2D\u4E8C\u53C9\u6811\u7684\u7A7A\u94FE\u63A5\u4E0D\u753B\u51FA\u6765\u3002</p><h3 id="_1-get" tabindex="-1"><a class="header-anchor" href="#_1-get" aria-hidden="true">#</a> 1. get()</h3><ul><li>\u5982\u679C\u6811\u662F\u7A7A\u7684\uFF0C\u5219\u67E5\u627E\u672A\u547D\u4E2D\uFF1B</li><li>\u5982\u679C\u88AB\u67E5\u627E\u7684\u952E\u548C\u6839\u8282\u70B9\u7684\u952E\u76F8\u7B49\uFF0C\u67E5\u627E\u547D\u4E2D\uFF1B</li><li>\u5426\u5219\u9012\u5F52\u5730\u5728\u5B50\u6811\u4E2D\u67E5\u627E\uFF1A\u5982\u679C\u88AB\u67E5\u627E\u7684\u952E\u8F83\u5C0F\u5C31\u5728\u5DE6\u5B50\u6811\u4E2D\u67E5\u627E\uFF0C\u8F83\u5927\u5C31\u5728\u53F3\u5B50\u6811\u4E2D\u67E5\u627E\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Value</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">get</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token class-name">Value</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Node</span> x<span class="token punctuation">,</span> <span class="token class-name">Key</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> cmp <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cmp <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> x<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cmp <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token function">get</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>left<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token keyword">return</span> <span class="token function">get</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>right<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-put" tabindex="-1"><a class="header-anchor" href="#_2-put" aria-hidden="true">#</a> 2. put()</h3><p>\u5F53\u63D2\u5165\u7684\u952E\u4E0D\u5B58\u5728\u4E8E\u6811\u4E2D\uFF0C\u9700\u8981\u521B\u5EFA\u4E00\u4E2A\u65B0\u8282\u70B9\uFF0C\u5E76\u4E14\u66F4\u65B0\u4E0A\u5C42\u8282\u70B9\u7684\u94FE\u63A5\u6307\u5411\u8BE5\u8282\u70B9\uFF0C\u4F7F\u5F97\u8BE5\u8282\u70B9\u6B63\u786E\u5730\u94FE\u63A5\u5230\u6811\u4E2D\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/58b70113-3876-49af-85a9-68eb00a72d59.jpg&quot; width=&quot;200)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">,</span> <span class="token class-name">Value</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    root <span class="token operator">=</span> <span class="token function">put</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token class-name">Node</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">Node</span> x<span class="token punctuation">,</span> <span class="token class-name">Key</span> key<span class="token punctuation">,</span> <span class="token class-name">Value</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> cmp <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cmp <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        x<span class="token punctuation">.</span>val <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cmp <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        x<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token function">put</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>left<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        x<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token function">put</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>right<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">recalculateSize</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_3-\u5206\u6790" aria-hidden="true">#</a> 3. \u5206\u6790</h3><p>\u4E8C\u53C9\u67E5\u627E\u6811\u7684\u7B97\u6CD5\u8FD0\u884C\u65F6\u95F4\u53D6\u51B3\u4E8E\u6811\u7684\u5F62\u72B6\uFF0C\u800C\u6811\u7684\u5F62\u72B6\u53C8\u53D6\u51B3\u4E8E\u952E\u88AB\u63D2\u5165\u7684\u5148\u540E\u987A\u5E8F\u3002</p><p>\u6700\u597D\u7684\u60C5\u51B5\u4E0B\u6811\u662F\u5B8C\u5168\u5E73\u8861\u7684\uFF0C\u6BCF\u6761\u7A7A\u94FE\u63A5\u548C\u6839\u8282\u70B9\u7684\u8DDD\u79BB\u90FD\u4E3A logN\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/c395a428-827c-405b-abd7-8a069316f583.jpg&quot; width=&quot;200)</p><p>\u5728\u6700\u574F\u7684\u60C5\u51B5\u4E0B\uFF0C\u6811\u7684\u9AD8\u5EA6\u4E3A N\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/5ea609cb-8ad4-4c4c-aee6-45a40a81794a.jpg&quot; width=&quot;200)</p><h3 id="_4-floor" tabindex="-1"><a class="header-anchor" href="#_4-floor" aria-hidden="true">#</a> 4. floor()</h3><p>floor(key)\uFF1A\u5C0F\u4E8E\u7B49\u4E8E\u952E\u7684\u6700\u5927\u952E</p><ul><li>\u5982\u679C\u952E\u5C0F\u4E8E\u6839\u8282\u70B9\u7684\u952E\uFF0C\u90A3\u4E48 floor(key) \u4E00\u5B9A\u5728\u5DE6\u5B50\u6811\u4E2D\uFF1B</li><li>\u5982\u679C\u952E\u5927\u4E8E\u6839\u8282\u70B9\u7684\u952E\uFF0C\u9700\u8981\u5148\u5224\u65AD\u53F3\u5B50\u6811\u4E2D\u662F\u5426\u5B58\u5728 floor(key)\uFF0C\u5982\u679C\u5B58\u5728\u5C31\u8FD4\u56DE\uFF0C\u5426\u5219\u6839\u8282\u70B9\u5C31\u662F floor(key)\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Key</span> <span class="token function">floor</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span> x <span class="token operator">=</span> <span class="token function">floor</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> x<span class="token punctuation">.</span>key<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token class-name">Node</span> <span class="token function">floor</span><span class="token punctuation">(</span><span class="token class-name">Node</span> x<span class="token punctuation">,</span> <span class="token class-name">Key</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> cmp <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cmp <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cmp <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token function">floor</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>left<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Node</span> t <span class="token operator">=</span> <span class="token function">floor</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>right<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> t <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> t <span class="token operator">:</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-rank" tabindex="-1"><a class="header-anchor" href="#_5-rank" aria-hidden="true">#</a> 5. rank()</h3><p>rank(key) \u8FD4\u56DE key \u7684\u6392\u540D\u3002</p><ul><li>\u5982\u679C\u952E\u548C\u6839\u8282\u70B9\u7684\u952E\u76F8\u7B49\uFF0C\u8FD4\u56DE\u5DE6\u5B50\u6811\u7684\u8282\u70B9\u6570\uFF1B</li><li>\u5982\u679C\u5C0F\u4E8E\uFF0C\u9012\u5F52\u8BA1\u7B97\u5728\u5DE6\u5B50\u6811\u4E2D\u7684\u6392\u540D\uFF1B</li><li>\u5982\u679C\u5927\u4E8E\uFF0C\u9012\u5F52\u8BA1\u7B97\u5728\u53F3\u5B50\u6811\u4E2D\u7684\u6392\u540D\uFF0C\u52A0\u4E0A\u5DE6\u5B50\u6811\u7684\u8282\u70B9\u6570\uFF0C\u518D\u52A0\u4E0A 1\uFF08\u6839\u8282\u70B9\uFF09\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">rank</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">rank</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> root<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">rank</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">,</span> <span class="token class-name">Node</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> cmp <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cmp <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token function">size</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cmp <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token function">rank</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> x<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token keyword">return</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token function">size</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">rank</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> x<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-min" tabindex="-1"><a class="header-anchor" href="#_6-min" aria-hidden="true">#</a> 6. min()</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Key</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">min</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">.</span>key<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token class-name">Node</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token class-name">Node</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">min</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-deletemin" tabindex="-1"><a class="header-anchor" href="#_7-deletemin" aria-hidden="true">#</a> 7. deleteMin()</h3><p>\u4EE4\u6307\u5411\u6700\u5C0F\u8282\u70B9\u7684\u94FE\u63A5\u6307\u5411\u6700\u5C0F\u8282\u70B9\u7684\u53F3\u5B50\u6811\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/31b7e8de-ed11-4f69-b5fd-ba454120ac31.jpg&quot; width=&quot;450)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteMin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    root <span class="token operator">=</span> <span class="token function">deleteMin</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">Node</span> <span class="token function">deleteMin</span><span class="token punctuation">(</span><span class="token class-name">Node</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> x<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
    x<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token function">deleteMin</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">recalculateSize</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-delete" tabindex="-1"><a class="header-anchor" href="#_8-delete" aria-hidden="true">#</a> 8. delete()</h3><ul><li>\u5982\u679C\u5F85\u5220\u9664\u7684\u8282\u70B9\u53EA\u6709\u4E00\u4E2A\u5B50\u6811\uFF0C \u90A3\u4E48\u53EA\u9700\u8981\u8BA9\u6307\u5411\u5F85\u5220\u9664\u8282\u70B9\u7684\u94FE\u63A5\u6307\u5411\u552F\u4E00\u7684\u5B50\u6811\u5373\u53EF\uFF1B</li><li>\u5426\u5219\uFF0C\u8BA9\u53F3\u5B50\u6811\u7684\u6700\u5C0F\u8282\u70B9\u66FF\u6362\u8BE5\u8282\u70B9\u3002</li></ul><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/23b9d625-ef28-42b5-bb22-d7aedd007e16.jpg&quot; width=&quot;400)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    root <span class="token operator">=</span> <span class="token function">delete</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">private</span> <span class="token class-name">Node</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">Node</span> x<span class="token punctuation">,</span> <span class="token class-name">Key</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> cmp <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cmp <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        x<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token function">delete</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>left<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cmp <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        x<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token function">delete</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>right<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> x<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> x<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
        <span class="token class-name">Node</span> t <span class="token operator">=</span> x<span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token function">deleteMin</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x<span class="token punctuation">.</span>left <span class="token operator">=</span> t<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">recalculateSize</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-keys" tabindex="-1"><a class="header-anchor" href="#_9-keys" aria-hidden="true">#</a> 9. keys()</h3><p>\u5229\u7528\u4E8C\u53C9\u67E5\u627E\u6811\u4E2D\u5E8F\u904D\u5386\u7684\u7ED3\u679C\u4E3A\u9012\u589E\u7684\u7279\u70B9\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Key</span><span class="token punctuation">&gt;</span></span> <span class="token function">keys</span><span class="token punctuation">(</span><span class="token class-name">Key</span> l<span class="token punctuation">,</span> <span class="token class-name">Key</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">keys</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> l<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Key</span><span class="token punctuation">&gt;</span></span> <span class="token function">keys</span><span class="token punctuation">(</span><span class="token class-name">Node</span> x<span class="token punctuation">,</span> <span class="token class-name">Key</span> l<span class="token punctuation">,</span> <span class="token class-name">Key</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Key</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> list<span class="token punctuation">;</span>
    <span class="token keyword">int</span> cmpL <span class="token operator">=</span> l<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> cmpH <span class="token operator">=</span> h<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cmpL <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        list<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token function">keys</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>left<span class="token punctuation">,</span> l<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cmpL <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> cmpH <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cmpH <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        list<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token function">keys</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>right<span class="token punctuation">,</span> l<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> list<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10-\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_10-\u5206\u6790" aria-hidden="true">#</a> 10. \u5206\u6790</h3><p>\u4E8C\u53C9\u67E5\u627E\u6811\u6240\u6709\u64CD\u4F5C\u5728\u6700\u574F\u7684\u60C5\u51B5\u4E0B\u6240\u9700\u8981\u7684\u65F6\u95F4\u90FD\u548C\u6811\u7684\u9AD8\u5EA6\u6210\u6B63\u6BD4\u3002</p><h2 id="_2-3-\u67E5\u627E\u6811" tabindex="-1"><a class="header-anchor" href="#_2-3-\u67E5\u627E\u6811" aria-hidden="true">#</a> 2-3 \u67E5\u627E\u6811</h2><p>2-3 \u67E5\u627E\u6811\u5F15\u5165\u4E86 2- \u8282\u70B9\u548C 3- \u8282\u70B9\uFF0C\u76EE\u7684\u662F\u4E3A\u4E86\u8BA9\u6811\u5E73\u8861\u3002\u4E00\u9897\u5B8C\u7F8E\u5E73\u8861\u7684 2-3 \u67E5\u627E\u6811\u7684\u6240\u6709\u7A7A\u94FE\u63A5\u5230\u6839\u8282\u70B9\u7684\u8DDD\u79BB\u5E94\u8BE5\u662F\u76F8\u540C\u7684\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1097658b-c0e6-4821-be9b-25304726a11c.jpg&quot; width=&quot;160px)</p><h3 id="_1-\u63D2\u5165\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#_1-\u63D2\u5165\u64CD\u4F5C" aria-hidden="true">#</a> 1. \u63D2\u5165\u64CD\u4F5C</h3><p>\u63D2\u5165\u64CD\u4F5C\u548C BST \u7684\u63D2\u5165\u64CD\u4F5C\u6709\u5F88\u5927\u533A\u522B\uFF0CBST \u7684\u63D2\u5165\u64CD\u4F5C\u662F\u5148\u8FDB\u884C\u4E00\u6B21\u672A\u547D\u4E2D\u7684\u67E5\u627E\uFF0C\u7136\u540E\u518D\u5C06\u8282\u70B9\u63D2\u5165\u5230\u5BF9\u5E94\u7684\u7A7A\u94FE\u63A5\u4E0A\u3002\u4F46\u662F 2-3 \u67E5\u627E\u6811\u5982\u679C\u4E5F\u8FD9\u4E48\u505A\u7684\u8BDD\uFF0C\u90A3\u4E48\u5C31\u4F1A\u7834\u574F\u4E86\u5E73\u8861\u6027\u3002\u5B83\u662F\u5C06\u65B0\u8282\u70B9\u63D2\u5165\u5230\u53F6\u5B50\u8282\u70B9\u4E0A\u3002</p><p>\u6839\u636E\u53F6\u5B50\u8282\u70B9\u7684\u7C7B\u578B\u4E0D\u540C\uFF0C\u6709\u4E0D\u540C\u7684\u5904\u7406\u65B9\u5F0F\uFF1A</p><ul><li>\u5982\u679C\u63D2\u5165\u5230 2- \u8282\u70B9\u4E0A\uFF0C\u90A3\u4E48\u76F4\u63A5\u5C06\u65B0\u8282\u70B9\u548C\u539F\u6765\u7684\u8282\u70B9\u7EC4\u6210 3- \u8282\u70B9\u5373\u53EF\u3002</li></ul><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/0c6f9930-8704-4a54-af23-19f9ca3e48b0.jpg&quot; width=&quot;350)</p><ul><li>\u5982\u679C\u662F\u63D2\u5165\u5230 3- \u8282\u70B9\u4E0A\uFF0C\u5C31\u4F1A\u4EA7\u751F\u4E00\u4E2A\u4E34\u65F6 4- \u8282\u70B9\u65F6\uFF0C\u9700\u8981\u5C06 4- \u8282\u70B9\u5206\u88C2\u6210 3 \u4E2A 2- \u8282\u70B9\uFF0C\u5E76\u5C06\u4E2D\u95F4\u7684 2- \u8282\u70B9\u79FB\u5230\u4E0A\u5C42\u8282\u70B9\u4E2D\u3002\u5982\u679C\u4E0A\u79FB\u64CD\u4F5C\u7EE7\u7EED\u4EA7\u751F\u4E34\u65F6 4- \u8282\u70B9\u5219\u4E00\u76F4\u8FDB\u884C\u5206\u88C2\u4E0A\u79FB\uFF0C\u76F4\u5230\u4E0D\u5B58\u5728\u4E34\u65F6 4- \u8282\u70B9\u3002</li></ul><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/7002c01b-1ed5-475a-9e5f-5fc8a4cdbcc0.jpg&quot; width=&quot;460)</p><h3 id="_2-\u6027\u8D28" tabindex="-1"><a class="header-anchor" href="#_2-\u6027\u8D28" aria-hidden="true">#</a> 2. \u6027\u8D28</h3><p>2-3 \u67E5\u627E\u6811\u63D2\u5165\u64CD\u4F5C\u7684\u53D8\u6362\u90FD\u662F\u5C40\u90E8\u7684\uFF0C\u9664\u4E86\u76F8\u5173\u7684\u8282\u70B9\u548C\u94FE\u63A5\u4E4B\u5916\u4E0D\u5FC5\u4FEE\u6539\u6216\u8005\u68C0\u67E5\u6811\u7684\u5176\u5B83\u90E8\u5206\uFF0C\u800C\u8FD9\u4E9B\u5C40\u90E8\u53D8\u6362\u4E0D\u4F1A\u5F71\u54CD\u6811\u7684\u5168\u5C40\u6709\u5E8F\u6027\u548C\u5E73\u8861\u6027\u3002</p><p>2-3 \u67E5\u627E\u6811\u7684\u67E5\u627E\u548C\u63D2\u5165\u64CD\u4F5C\u590D\u6742\u5EA6\u548C\u63D2\u5165\u987A\u5E8F\u65E0\u5173\uFF0C\u5728\u6700\u574F\u7684\u60C5\u51B5\u4E0B\u67E5\u627E\u548C\u63D2\u5165\u64CD\u4F5C\u8BBF\u95EE\u7684\u8282\u70B9\u5FC5\u7136\u4E0D\u8D85\u8FC7 logN \u4E2A\uFF0C\u542B\u6709 10 \u4EBF\u4E2A\u8282\u70B9\u7684 2-3 \u67E5\u627E\u6811\u6700\u591A\u53EA\u9700\u8981\u8BBF\u95EE 30 \u4E2A\u8282\u70B9\u5C31\u80FD\u8FDB\u884C\u4EFB\u610F\u7684\u67E5\u627E\u548C\u63D2\u5165\u64CD\u4F5C\u3002</p><h2 id="\u7EA2\u9ED1\u6811" tabindex="-1"><a class="header-anchor" href="#\u7EA2\u9ED1\u6811" aria-hidden="true">#</a> \u7EA2\u9ED1\u6811</h2><p>\u7EA2\u9ED1\u6811\u662F 2-3 \u67E5\u627E\u6811\uFF0C\u4F46\u5B83\u4E0D\u9700\u8981\u5206\u522B\u5B9A\u4E49 2- \u8282\u70B9\u548C 3- \u8282\u70B9\uFF0C\u800C\u662F\u5728\u666E\u901A\u7684\u4E8C\u53C9\u67E5\u627E\u6811\u4E4B\u4E0A\uFF0C\u4E3A\u8282\u70B9\u6DFB\u52A0\u989C\u8272\u3002\u6307\u5411\u4E00\u4E2A\u8282\u70B9\u7684\u94FE\u63A5\u989C\u8272\u5982\u679C\u4E3A\u7EA2\u8272\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u8282\u70B9\u548C\u4E0A\u5C42\u8282\u70B9\u8868\u793A\u7684\u662F\u4E00\u4E2A 3- \u8282\u70B9\uFF0C\u800C\u9ED1\u8272\u5219\u662F\u666E\u901A\u94FE\u63A5\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f1912ba6-6402-4321-9aa8-13d32fd121d1.jpg&quot; width=&quot;240)</p><p>\u7EA2\u9ED1\u6811\u5177\u6709\u4EE5\u4E0B\u6027\u8D28\uFF1A</p><ul><li>\u7EA2\u94FE\u63A5\u90FD\u4E3A\u5DE6\u94FE\u63A5\uFF1B</li><li>\u5B8C\u7F8E\u9ED1\u8272\u5E73\u8861\uFF0C\u5373\u4EFB\u610F\u7A7A\u94FE\u63A5\u5230\u6839\u8282\u70B9\u7684\u8DEF\u5F84\u4E0A\u7684\u9ED1\u94FE\u63A5\u6570\u91CF\u76F8\u540C\u3002</li></ul><p>\u753B\u7EA2\u9ED1\u6811\u65F6\u53EF\u4EE5\u5C06\u7EA2\u94FE\u63A5\u753B\u5E73\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f5cb6028-425d-4939-91eb-cca9dd6b6c6c.jpg&quot; width=&quot;220)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedBlackBST</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Key</span> <span class="token keyword">extends</span> <span class="token class-name">Comparable</span><span class="token punctuation">&lt;</span><span class="token class-name">Key</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Value</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">BST</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Key</span><span class="token punctuation">,</span> <span class="token class-name">Value</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> RED <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> BLACK <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isRed</span><span class="token punctuation">(</span><span class="token class-name">Node</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> x<span class="token punctuation">.</span>color <span class="token operator">==</span> RED<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-\u5DE6\u65CB\u8F6C" tabindex="-1"><a class="header-anchor" href="#_1-\u5DE6\u65CB\u8F6C" aria-hidden="true">#</a> 1. \u5DE6\u65CB\u8F6C</h3><p>\u56E0\u4E3A\u5408\u6CD5\u7684\u7EA2\u94FE\u63A5\u90FD\u4E3A\u5DE6\u94FE\u63A5\uFF0C\u5982\u679C\u51FA\u73B0\u53F3\u94FE\u63A5\u4E3A\u7EA2\u94FE\u63A5\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u8FDB\u884C\u5DE6\u65CB\u8F6C\u64CD\u4F5C\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f4d534ab-0092-4a81-9e5b-ae889b9a72be.jpg&quot; width=&quot;480)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Node</span> <span class="token function">rotateLeft</span><span class="token punctuation">(</span><span class="token class-name">Node</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span> x <span class="token operator">=</span> h<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
    h<span class="token punctuation">.</span>right <span class="token operator">=</span> x<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
    x<span class="token punctuation">.</span>left <span class="token operator">=</span> h<span class="token punctuation">;</span>
    x<span class="token punctuation">.</span>color <span class="token operator">=</span> h<span class="token punctuation">.</span>color<span class="token punctuation">;</span>
    h<span class="token punctuation">.</span>color <span class="token operator">=</span> RED<span class="token punctuation">;</span>
    <span class="token class-name"><span class="token namespace">x<span class="token punctuation">.</span></span>N</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">h<span class="token punctuation">.</span></span>N</span><span class="token punctuation">;</span>
    <span class="token function">recalculateSize</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u53F3\u65CB\u8F6C" tabindex="-1"><a class="header-anchor" href="#_2-\u53F3\u65CB\u8F6C" aria-hidden="true">#</a> 2. \u53F3\u65CB\u8F6C</h3><p>\u8FDB\u884C\u53F3\u65CB\u8F6C\u662F\u4E3A\u4E86\u8F6C\u6362\u4E24\u4E2A\u8FDE\u7EED\u7684\u5DE6\u7EA2\u94FE\u63A5\uFF0C\u8FD9\u4F1A\u5728\u4E4B\u540E\u7684\u63D2\u5165\u8FC7\u7A0B\u4E2D\u63A2\u8BA8\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/63c8ffea-a9f2-4ebe-97d1-d71be71246f9.jpg&quot; width=&quot;480)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Node</span> <span class="token function">rotateRight</span><span class="token punctuation">(</span><span class="token class-name">Node</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span> x <span class="token operator">=</span> h<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
    h<span class="token punctuation">.</span>left <span class="token operator">=</span> x<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
    x<span class="token punctuation">.</span>right <span class="token operator">=</span> h<span class="token punctuation">;</span>
    x<span class="token punctuation">.</span>color <span class="token operator">=</span> h<span class="token punctuation">.</span>color<span class="token punctuation">;</span>
    h<span class="token punctuation">.</span>color <span class="token operator">=</span> RED<span class="token punctuation">;</span>
    <span class="token class-name"><span class="token namespace">x<span class="token punctuation">.</span></span>N</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">h<span class="token punctuation">.</span></span>N</span><span class="token punctuation">;</span>
    <span class="token function">recalculateSize</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u989C\u8272\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#_3-\u989C\u8272\u8F6C\u6362" aria-hidden="true">#</a> 3. \u989C\u8272\u8F6C\u6362</h3><p>\u4E00\u4E2A 4- \u8282\u70B9\u5728\u7EA2\u9ED1\u6811\u4E2D\u8868\u73B0\u4E3A\u4E00\u4E2A\u8282\u70B9\u7684\u5DE6\u53F3\u5B50\u8282\u70B9\u90FD\u662F\u7EA2\u8272\u7684\u3002\u5206\u88C2 4- \u8282\u70B9\u9664\u4E86\u9700\u8981\u5C06\u5B50\u8282\u70B9\u7684\u989C\u8272\u7531\u7EA2\u53D8\u9ED1\u4E4B\u5916\uFF0C\u540C\u65F6\u9700\u8981\u5C06\u7236\u8282\u70B9\u7684\u989C\u8272\u7531\u9ED1\u53D8\u7EA2\uFF0C\u4ECE 2-3 \u6811\u7684\u89D2\u5EA6\u770B\u5C31\u662F\u5C06\u4E2D\u95F4\u8282\u70B9\u79FB\u5230\u4E0A\u5C42\u8282\u70B9\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/094b279a-b2db-4be7-87a3-b2a039c7448e.jpg&quot; width=&quot;270)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">flipColors</span><span class="token punctuation">(</span><span class="token class-name">Node</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    h<span class="token punctuation">.</span>color <span class="token operator">=</span> RED<span class="token punctuation">;</span>
    h<span class="token punctuation">.</span>left<span class="token punctuation">.</span>color <span class="token operator">=</span> BLACK<span class="token punctuation">;</span>
    h<span class="token punctuation">.</span>right<span class="token punctuation">.</span>color <span class="token operator">=</span> BLACK<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-\u63D2\u5165" tabindex="-1"><a class="header-anchor" href="#_4-\u63D2\u5165" aria-hidden="true">#</a> 4. \u63D2\u5165</h3><p>\u5148\u5C06\u4E00\u4E2A\u8282\u70B9\u6309\u4E8C\u53C9\u67E5\u627E\u6811\u7684\u65B9\u6CD5\u63D2\u5165\u5230\u6B63\u786E\u4F4D\u7F6E\uFF0C\u7136\u540E\u518D\u8FDB\u884C\u5982\u4E0B\u989C\u8272\u64CD\u4F5C\uFF1A</p><ul><li>\u5982\u679C\u53F3\u5B50\u8282\u70B9\u662F\u7EA2\u8272\u7684\u800C\u5DE6\u5B50\u8282\u70B9\u662F\u9ED1\u8272\u7684\uFF0C\u8FDB\u884C\u5DE6\u65CB\u8F6C\uFF1B</li><li>\u5982\u679C\u5DE6\u5B50\u8282\u70B9\u662F\u7EA2\u8272\u7684\uFF0C\u800C\u4E14\u5DE6\u5B50\u8282\u70B9\u7684\u5DE6\u5B50\u8282\u70B9\u4E5F\u662F\u7EA2\u8272\u7684\uFF0C\u8FDB\u884C\u53F3\u65CB\u8F6C\uFF1B</li><li>\u5982\u679C\u5DE6\u53F3\u5B50\u8282\u70B9\u5747\u4E3A\u7EA2\u8272\u7684\uFF0C\u8FDB\u884C\u989C\u8272\u8F6C\u6362\u3002</li></ul><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/4c457532-550b-4eca-b881-037b84b4934b.jpg&quot; width=&quot;430)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">,</span> <span class="token class-name">Value</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    root <span class="token operator">=</span> <span class="token function">put</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span>color <span class="token operator">=</span> BLACK<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token class-name">Node</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">Node</span> x<span class="token punctuation">,</span> <span class="token class-name">Key</span> key<span class="token punctuation">,</span> <span class="token class-name">Value</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span> node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        node<span class="token punctuation">.</span>color <span class="token operator">=</span> RED<span class="token punctuation">;</span>
        <span class="token keyword">return</span> node<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> cmp <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cmp <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        x<span class="token punctuation">.</span>val <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cmp <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        x<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token function">put</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>left<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        x<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token function">put</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>right<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRed</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isRed</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">)</span>
        x <span class="token operator">=</span> <span class="token function">rotateLeft</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRed</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isRed</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>left<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">)</span>
        x <span class="token operator">=</span> <span class="token function">rotateRight</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRed</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isRed</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token function">flipColors</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">recalculateSize</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\u8BE5\u63D2\u5165\u64CD\u4F5C\u548C\u4E8C\u53C9\u67E5\u627E\u6811\u7684\u63D2\u5165\u64CD\u4F5C\u7C7B\u4F3C\uFF0C\u53EA\u662F\u5728\u6700\u540E\u52A0\u5165\u4E86\u65CB\u8F6C\u548C\u989C\u8272\u53D8\u6362\u64CD\u4F5C\u5373\u53EF\u3002</p><p>\u6839\u8282\u70B9\u4E00\u5B9A\u4E3A\u9ED1\u8272\uFF0C\u56E0\u4E3A\u6839\u8282\u70B9\u6CA1\u6709\u4E0A\u5C42\u8282\u70B9\uFF0C\u4E5F\u5C31\u6CA1\u6709\u4E0A\u5C42\u8282\u70B9\u7684\u5DE6\u94FE\u63A5\u6307\u5411\u6839\u8282\u70B9\u3002flipColors() \u6709\u53EF\u80FD\u4F1A\u4F7F\u5F97\u6839\u8282\u70B9\u7684\u989C\u8272\u53D8\u4E3A\u7EA2\u8272\uFF0C\u6BCF\u5F53\u6839\u8282\u70B9\u7531\u7EA2\u8272\u53D8\u6210\u9ED1\u8272\u65F6\u6811\u7684\u9ED1\u94FE\u63A5\u9AD8\u5EA6\u52A0 1.</p><h3 id="_5-\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_5-\u5206\u6790" aria-hidden="true">#</a> 5. \u5206\u6790</h3><p>\u4E00\u9897\u5927\u5C0F\u4E3A N \u7684\u7EA2\u9ED1\u6811\u7684\u9AD8\u5EA6\u4E0D\u4F1A\u8D85\u8FC7 2logN\u3002\u6700\u574F\u7684\u60C5\u51B5\u4E0B\u662F\u5B83\u6240\u5BF9\u5E94\u7684 2-3 \u6811\uFF0C\u6784\u6210\u6700\u5DE6\u8FB9\u7684\u8DEF\u5F84\u8282\u70B9\u5168\u90E8\u90FD\u662F 3- \u8282\u70B9\u800C\u5176\u4F59\u90FD\u662F 2- \u8282\u70B9\u3002</p><p>\u7EA2\u9ED1\u6811\u5927\u591A\u6570\u7684\u64CD\u4F5C\u6240\u9700\u8981\u7684\u65F6\u95F4\u90FD\u662F\u5BF9\u6570\u7EA7\u522B\u7684\u3002</p><h2 id="\u6563\u5217\u8868" tabindex="-1"><a class="header-anchor" href="#\u6563\u5217\u8868" aria-hidden="true">#</a> \u6563\u5217\u8868</h2><p>\u6563\u5217\u8868\u7C7B\u4F3C\u4E8E\u6570\u7EC4\uFF0C\u53EF\u4EE5\u628A\u6563\u5217\u8868\u7684\u6563\u5217\u503C\u770B\u6210\u6570\u7EC4\u7684\u7D22\u5F15\u503C\u3002\u8BBF\u95EE\u6563\u5217\u8868\u548C\u8BBF\u95EE\u6570\u7EC4\u5143\u7D20\u4E00\u6837\u5FEB\u901F\uFF0C\u5B83\u53EF\u4EE5\u5728\u5E38\u6570\u65F6\u95F4\u5185\u5B9E\u73B0\u67E5\u627E\u548C\u63D2\u5165\u64CD\u4F5C\u3002</p><p>\u7531\u4E8E\u65E0\u6CD5\u901A\u8FC7\u6563\u5217\u503C\u77E5\u9053\u952E\u7684\u5927\u5C0F\u5173\u7CFB\uFF0C\u56E0\u6B64\u6563\u5217\u8868\u65E0\u6CD5\u5B9E\u73B0\u6709\u5E8F\u6027\u64CD\u4F5C\u3002</p><h3 id="_1-\u6563\u5217\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_1-\u6563\u5217\u51FD\u6570" aria-hidden="true">#</a> 1. \u6563\u5217\u51FD\u6570</h3><p>\u5BF9\u4E8E\u4E00\u4E2A\u5927\u5C0F\u4E3A M \u7684\u6563\u5217\u8868\uFF0C\u6563\u5217\u51FD\u6570\u80FD\u591F\u628A\u4EFB\u610F\u952E\u8F6C\u6362\u4E3A [0, M-1] \u5185\u7684\u6B63\u6574\u6570\uFF0C\u8BE5\u6B63\u6574\u6570\u5373\u4E3A hash \u503C\u3002</p><p>\u6563\u5217\u8868\u5B58\u5728\u51B2\u7A81\uFF0C\u4E5F\u5C31\u662F\u4E24\u4E2A\u4E0D\u540C\u7684\u952E\u53EF\u80FD\u6709\u76F8\u540C\u7684 hash \u503C\u3002</p><p>\u6563\u5217\u51FD\u6570\u5E94\u8BE5\u6EE1\u8DB3\u4EE5\u4E0B\u4E09\u4E2A\u6761\u4EF6\uFF1A</p><ul><li>\u4E00\u81F4\u6027\uFF1A\u76F8\u7B49\u7684\u952E\u5E94\u5F53\u6709\u76F8\u7B49\u7684 hash \u503C\uFF0C\u4E24\u4E2A\u952E\u76F8\u7B49\u8868\u793A\u8C03\u7528 equals() \u8FD4\u56DE\u7684\u503C\u76F8\u7B49\u3002</li><li>\u9AD8\u6548\u6027\uFF1A\u8BA1\u7B97\u5E94\u5F53\u7B80\u4FBF\uFF0C\u6709\u5FC5\u8981\u7684\u8BDD\u53EF\u4EE5\u628A hash \u503C\u7F13\u5B58\u8D77\u6765\uFF0C\u5728\u8C03\u7528 hash \u51FD\u6570\u65F6\u76F4\u63A5\u8FD4\u56DE\u3002</li><li>\u5747\u5300\u6027\uFF1A\u6240\u6709\u952E\u7684 hash \u503C\u5E94\u5F53\u5747\u5300\u5730\u5206\u5E03\u5230 [0, M-1] \u4E4B\u95F4\uFF0C\u5982\u679C\u4E0D\u80FD\u6EE1\u8DB3\u8FD9\u4E2A\u6761\u4EF6\uFF0C\u6709\u53EF\u80FD\u4EA7\u751F\u5F88\u591A\u51B2\u7A81\uFF0C\u4ECE\u800C\u5BFC\u81F4\u6563\u5217\u8868\u7684\u6027\u80FD\u4E0B\u964D\u3002</li></ul><p>\u9664\u7559\u4F59\u6570\u6CD5\u53EF\u4EE5\u5C06\u6574\u6570\u6563\u5217\u5230 [0, M-1] \u4E4B\u95F4\uFF0C\u4F8B\u5982\u4E00\u4E2A\u6B63\u6574\u6570 k\uFF0C\u8BA1\u7B97 k%M \u65E2\u53EF\u5F97\u5230\u4E00\u4E2A [0, M-1] \u4E4B\u95F4\u7684 hash \u503C\u3002\u6CE8\u610F M \u6700\u597D\u662F\u4E00\u4E2A\u7D20\u6570\uFF0C\u5426\u5219\u65E0\u6CD5\u5229\u7528\u952E\u5305\u542B\u7684\u6240\u6709\u4FE1\u606F\u3002\u4F8B\u5982 M \u4E3A 10<sup>k</sup>\uFF0C\u90A3\u4E48\u53EA\u80FD\u5229\u7528\u952E\u7684\u540E k \u4F4D\u3002</p><p>\u5BF9\u4E8E\u5176\u5B83\u6570\uFF0C\u53EF\u4EE5\u5C06\u5176\u8F6C\u6362\u6210\u6574\u6570\u7684\u5F62\u5F0F\uFF0C\u7136\u540E\u5229\u7528\u9664\u7559\u4F59\u6570\u6CD5\u3002\u4F8B\u5982\u5BF9\u4E8E\u6D6E\u70B9\u6570\uFF0C\u53EF\u4EE5\u5C06\u5176\u7684\u4E8C\u8FDB\u5236\u5F62\u5F0F\u8F6C\u6362\u6210\u6574\u6570\u3002</p><p>\u5BF9\u4E8E\u591A\u90E8\u5206\u7EC4\u5408\u7684\u7C7B\u578B\uFF0C\u6BCF\u4E2A\u90E8\u5206\u90FD\u9700\u8981\u8BA1\u7B97 hash \u503C\uFF0C\u8FD9\u4E9B hash \u503C\u90FD\u5177\u6709\u540C\u7B49\u91CD\u8981\u7684\u5730\u4F4D\u3002\u4E3A\u4E86\u8FBE\u5230\u8FD9\u4E2A\u76EE\u7684\uFF0C\u53EF\u4EE5\u5C06\u8BE5\u7C7B\u578B\u770B\u6210 R \u8FDB\u5236\u7684\u6574\u6570\uFF0C\u6BCF\u4E2A\u90E8\u5206\u90FD\u5177\u6709\u4E0D\u540C\u7684\u6743\u503C\u3002</p><p>\u4F8B\u5982\uFF0C\u5B57\u7B26\u4E32\u7684\u6563\u5217\u51FD\u6570\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> hash <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    hash <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">R</span> <span class="token operator">*</span> hash <span class="token operator">+</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token class-name">M</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u518D\u6BD4\u5982\uFF0C\u62E5\u6709\u591A\u4E2A\u6210\u5458\u7684\u81EA\u5B9A\u4E49\u7C7B\u7684\u54C8\u5E0C\u51FD\u6570\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> hash <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>day <span class="token operator">*</span> <span class="token class-name">R</span> <span class="token operator">+</span> month<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token class-name">M</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">R</span> <span class="token operator">+</span> year<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token class-name">M</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>R \u901A\u5E38\u53D6 31\u3002</p><p>Java \u4E2D\u7684 hashCode() \u5B9E\u73B0\u4E86\u54C8\u5E0C\u51FD\u6570\uFF0C\u4F46\u662F\u9ED8\u8BA4\u4F7F\u7528\u5BF9\u8C61\u7684\u5185\u5B58\u5730\u5740\u503C\u3002\u5728\u4F7F\u7528 hashCode() \u65F6\uFF0C\u5E94\u5F53\u7ED3\u5408\u9664\u7559\u4F59\u6570\u6CD5\u6765\u4F7F\u7528\u3002\u56E0\u4E3A\u5185\u5B58\u5730\u5740\u662F 32 \u4F4D\u6574\u6570\uFF0C\u6211\u4EEC\u53EA\u9700\u8981 31 \u4F4D\u7684\u975E\u8D1F\u6574\u6570\uFF0C\u56E0\u6B64\u5E94\u5F53\u5C4F\u853D\u7B26\u53F7\u4F4D\u4E4B\u540E\u518D\u4F7F\u7528\u9664\u7559\u4F59\u6570\u6CD5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> hash <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0x7fffffff</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token class-name">M</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4F7F\u7528 Java \u7684 HashMap \u7B49\u81EA\u5E26\u7684\u54C8\u5E0C\u8868\u5B9E\u73B0\u65F6\uFF0C\u53EA\u9700\u8981\u53BB\u5B9E\u73B0 Key \u7C7B\u578B\u7684 hashCode() \u51FD\u6570\u5373\u53EF\u3002Java \u89C4\u5B9A hashCode() \u80FD\u591F\u5C06\u952E\u5747\u5300\u5206\u5E03\u4E8E\u6240\u6709\u7684 32 \u4F4D\u6574\u6570\uFF0CJava \u4E2D\u7684 String\u3001Integer \u7B49\u5BF9\u8C61\u7684 hashCode() \u90FD\u80FD\u5B9E\u73B0\u8FD9\u4E00\u70B9\u3002\u4EE5\u4E0B\u5C55\u793A\u4E86\u81EA\u5B9A\u4E49\u7C7B\u578B\u5982\u4F55\u5B9E\u73B0 hashCode()\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Transaction</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> who<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Date</span> when<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">double</span> amount<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Transaction</span><span class="token punctuation">(</span><span class="token class-name">String</span> who<span class="token punctuation">,</span> <span class="token class-name">Date</span> when<span class="token punctuation">,</span> <span class="token keyword">double</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>who <span class="token operator">=</span> who<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>when <span class="token operator">=</span> when<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>amount <span class="token operator">=</span> amount<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> hash <span class="token operator">=</span> <span class="token number">17</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> <span class="token class-name">R</span> <span class="token operator">=</span> <span class="token number">31</span><span class="token punctuation">;</span>
        hash <span class="token operator">=</span> <span class="token class-name">R</span> <span class="token operator">*</span> hash <span class="token operator">+</span> who<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hash <span class="token operator">=</span> <span class="token class-name">R</span> <span class="token operator">*</span> hash <span class="token operator">+</span> when<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hash <span class="token operator">=</span> <span class="token class-name">R</span> <span class="token operator">*</span> hash <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">)</span> amount<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> hash<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u62C9\u94FE\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-\u62C9\u94FE\u6CD5" aria-hidden="true">#</a> 2. \u62C9\u94FE\u6CD5</h3><p>\u62C9\u94FE\u6CD5\u4F7F\u7528\u94FE\u8868\u6765\u5B58\u50A8 hash \u503C\u76F8\u540C\u7684\u952E\uFF0C\u4ECE\u800C\u89E3\u51B3\u51B2\u7A81\u3002</p><p>\u67E5\u627E\u9700\u8981\u5206\u4E24\u6B65\uFF0C\u9996\u5148\u67E5\u627E Key \u6240\u5728\u7684\u94FE\u8868\uFF0C\u7136\u540E\u5728\u94FE\u8868\u4E2D\u987A\u5E8F\u67E5\u627E\u3002</p><p>\u5BF9\u4E8E N \u4E2A\u952E\uFF0CM \u6761\u94FE\u8868 (N&gt;M)\uFF0C\u5982\u679C\u54C8\u5E0C\u51FD\u6570\u80FD\u591F\u6EE1\u8DB3\u5747\u5300\u6027\u7684\u6761\u4EF6\uFF0C\u6BCF\u6761\u94FE\u8868\u7684\u5927\u5C0F\u8D8B\u5411\u4E8E N/M\uFF0C\u56E0\u6B64\u672A\u547D\u4E2D\u7684\u67E5\u627E\u548C\u63D2\u5165\u64CD\u4F5C\u6240\u9700\u8981\u7684\u6BD4\u8F83\u6B21\u6570\u4E3A ~N/M\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/cbbfe06c-f0cb-47c4-bf7b-2780aebd98b2.png&quot; width=&quot;330px&quot;&gt;</p><h3 id="_3-\u7EBF\u6027\u63A2\u6D4B\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-\u7EBF\u6027\u63A2\u6D4B\u6CD5" aria-hidden="true">#</a> 3. \u7EBF\u6027\u63A2\u6D4B\u6CD5</h3><p>\u7EBF\u6027\u63A2\u6D4B\u6CD5\u4F7F\u7528\u7A7A\u4F4D\u6765\u89E3\u51B3\u51B2\u7A81\uFF0C\u5F53\u51B2\u7A81\u53D1\u751F\u65F6\uFF0C\u5411\u524D\u63A2\u6D4B\u4E00\u4E2A\u7A7A\u4F4D\u6765\u5B58\u50A8\u51B2\u7A81\u7684\u952E\u3002</p><p>\u4F7F\u7528\u7EBF\u6027\u63A2\u6D4B\u6CD5\uFF0C\u6570\u7EC4\u7684\u5927\u5C0F M \u5E94\u5F53\u5927\u4E8E\u952E\u7684\u4E2A\u6570 N\uFF08M&gt;N)\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/0dbc4f7d-05c9-4aae-8065-7b7ea7e9709e.gif&quot; width=&quot;350px&quot;&gt;</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LinearProbingHashST</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Key</span><span class="token punctuation">,</span> <span class="token class-name">Value</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">UnorderedST</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Key</span><span class="token punctuation">,</span> <span class="token class-name">Value</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token class-name">M</span> <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Key</span><span class="token punctuation">[</span><span class="token punctuation">]</span> keys<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Value</span><span class="token punctuation">[</span><span class="token punctuation">]</span> values<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">LinearProbingHashST</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">LinearProbingHashST</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token class-name">M</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>M</span> <span class="token operator">=</span> <span class="token class-name">M</span><span class="token punctuation">;</span>
        <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        keys <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Key</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token class-name">M</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        values <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Value</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token class-name">M</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">hash</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0x7fffffff</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token class-name">M</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-1-\u67E5\u627E" tabindex="-1"><a class="header-anchor" href="#_3-1-\u67E5\u627E" aria-hidden="true">#</a> 3.1 \u67E5\u627E</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Value</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> i <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token class-name">M</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> values<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-2-\u63D2\u5165" tabindex="-1"><a class="header-anchor" href="#_3-2-\u63D2\u5165" aria-hidden="true">#</a> 3.2 \u63D2\u5165</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">,</span> <span class="token class-name">Value</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">putInternal</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">putInternal</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">,</span> <span class="token class-name">Value</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> i<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> i <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token class-name">M</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            values<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> key<span class="token punctuation">;</span>
    values<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token class-name">N</span><span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-3-\u5220\u9664" tabindex="-1"><a class="header-anchor" href="#_3-3-\u5220\u9664" aria-hidden="true">#</a> 3.3 \u5220\u9664</h5><p>\u5220\u9664\u64CD\u4F5C\u5E94\u5F53\u5C06\u53F3\u4FA7\u6240\u6709\u76F8\u90BB\u7684\u952E\u503C\u5BF9\u91CD\u65B0\u63D2\u5165\u6563\u5217\u8868\u4E2D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">Key</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        i <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token class-name">M</span><span class="token punctuation">;</span>

    <span class="token comment">// \u4E0D\u5B58\u5728\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>

    keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    values<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5C06\u4E4B\u540E\u76F8\u8FDE\u7684\u952E\u503C\u5BF9\u91CD\u65B0\u63D2\u5165</span>
    i <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token class-name">M</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Key</span> keyToRedo <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">Value</span> valToRedo <span class="token operator">=</span> values<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        values<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">N</span><span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token function">putInternal</span><span class="token punctuation">(</span>keyToRedo<span class="token punctuation">,</span> valToRedo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        i <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token class-name">M</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">N</span><span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-5-\u8C03\u6574\u6570\u7EC4\u5927\u5C0F" tabindex="-1"><a class="header-anchor" href="#_3-5-\u8C03\u6574\u6570\u7EC4\u5927\u5C0F" aria-hidden="true">#</a> 3.5 \u8C03\u6574\u6570\u7EC4\u5927\u5C0F</h5><p>\u7EBF\u6027\u63A2\u6D4B\u6CD5\u7684\u6210\u672C\u53D6\u51B3\u4E8E\u8FDE\u7EED\u6761\u76EE\u7684\u957F\u5EA6\uFF0C\u8FDE\u7EED\u6761\u76EE\u4E5F\u53EB\u805A\u7C07\u3002\u5F53\u805A\u7C07\u5F88\u957F\u65F6\uFF0C\u5728\u67E5\u627E\u548C\u63D2\u5165\u65F6\u4E5F\u9700\u8981\u8FDB\u884C\u5F88\u591A\u6B21\u63A2\u6D4B\u3002\u4F8B\u5982\u4E0B\u56FE\u4E2D 2~4 \u4F4D\u7F6E\u5C31\u662F\u4E00\u4E2A\u805A\u7C07\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ace20410-f053-4c4a-aca4-2c603ff11bbe.png&quot; width=&quot;340px&quot;&gt;</p><p>\u03B1 = N/M\uFF0C\u628A \u03B1 \u79F0\u4E3A\u4F7F\u7528\u7387\u3002\u7406\u8BBA\u8BC1\u660E\uFF0C\u5F53 \u03B1 \u5C0F\u4E8E 1/2 \u65F6\u63A2\u6D4B\u7684\u9884\u8BA1\u6B21\u6570\u53EA\u5728 1.5 \u5230 2.5 \u4E4B\u95F4\u3002\u4E3A\u4E86\u4FDD\u8BC1\u6563\u5217\u8868\u7684\u6027\u80FD\uFF0C\u5E94\u5F53\u8C03\u6574\u6570\u7EC4\u7684\u5927\u5C0F\uFF0C\u4F7F\u5F97 \u03B1 \u5728 [1/4, 1/2] \u4E4B\u95F4\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">N</span> <span class="token operator">&gt;=</span> <span class="token class-name">M</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token function">resize</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> <span class="token class-name">M</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">N</span> <span class="token operator">&lt;=</span> <span class="token class-name">M</span> <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">)</span>
        <span class="token function">resize</span><span class="token punctuation">(</span><span class="token class-name">M</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token keyword">int</span> cap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">LinearProbingHashST</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Key</span><span class="token punctuation">,</span> <span class="token class-name">Value</span><span class="token punctuation">&gt;</span></span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinearProbingHashST</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Key</span><span class="token punctuation">,</span> <span class="token class-name">Value</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>cap<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">M</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            t<span class="token punctuation">.</span><span class="token function">putInternal</span><span class="token punctuation">(</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> values<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    keys <span class="token operator">=</span> t<span class="token punctuation">.</span>keys<span class="token punctuation">;</span>
    values <span class="token operator">=</span> t<span class="token punctuation">.</span>values<span class="token punctuation">;</span>
    <span class="token class-name">M</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">t<span class="token punctuation">.</span></span>M</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5C0F\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u5C0F\u7ED3" aria-hidden="true">#</a> \u5C0F\u7ED3</h2><h3 id="_1-\u7B26\u53F7\u8868\u7B97\u6CD5\u6BD4\u8F83" tabindex="-1"><a class="header-anchor" href="#_1-\u7B26\u53F7\u8868\u7B97\u6CD5\u6BD4\u8F83" aria-hidden="true">#</a> 1. \u7B26\u53F7\u8868\u7B97\u6CD5\u6BD4\u8F83</h3><table><thead><tr><th style="text-align:center;">\u7B97\u6CD5</th><th style="text-align:center;">\u63D2\u5165</th><th style="text-align:center;">\u67E5\u627E</th><th style="text-align:center;">\u662F\u5426\u6709\u5E8F</th></tr></thead><tbody><tr><td style="text-align:center;">\u94FE\u8868\u5B9E\u73B0\u7684\u65E0\u5E8F\u7B26\u53F7\u8868</td><td style="text-align:center;">N</td><td style="text-align:center;">N</td><td style="text-align:center;">yes</td></tr><tr><td style="text-align:center;">\u4E8C\u5206\u67E5\u627E\u5B9E\u73B0\u7684\u6709\u5E8F\u7B26\u53F7\u8868</td><td style="text-align:center;">N</td><td style="text-align:center;">logN</td><td style="text-align:center;">yes</td></tr><tr><td style="text-align:center;">\u4E8C\u53C9\u67E5\u627E\u6811</td><td style="text-align:center;">logN</td><td style="text-align:center;">logN</td><td style="text-align:center;">yes</td></tr><tr><td style="text-align:center;">2-3 \u67E5\u627E\u6811</td><td style="text-align:center;">logN</td><td style="text-align:center;">logN</td><td style="text-align:center;">yes</td></tr><tr><td style="text-align:center;">\u62C9\u94FE\u6CD5\u5B9E\u73B0\u7684\u6563\u5217\u8868</td><td style="text-align:center;">N/M</td><td style="text-align:center;">N/M</td><td style="text-align:center;">no</td></tr><tr><td style="text-align:center;">\u7EBF\u6027\u63A2\u6D4B\u6CD5\u5B9E\u73B0\u7684\u6563\u5217\u8868</td><td style="text-align:center;">1</td><td style="text-align:center;">1</td><td style="text-align:center;">no</td></tr></tbody></table><p>\u5E94\u5F53\u4F18\u5148\u8003\u8651\u6563\u5217\u8868\uFF0C\u5F53\u9700\u8981\u6709\u5E8F\u6027\u64CD\u4F5C\u65F6\u4F7F\u7528\u7EA2\u9ED1\u6811\u3002</p><h3 id="_2-java-\u7684\u7B26\u53F7\u8868\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-java-\u7684\u7B26\u53F7\u8868\u5B9E\u73B0" aria-hidden="true">#</a> 2. Java \u7684\u7B26\u53F7\u8868\u5B9E\u73B0</h3><ul><li>java.util.TreeMap\uFF1A\u7EA2\u9ED1\u6811</li><li>java.util.HashMap\uFF1A\u62C9\u94FE\u6CD5\u7684\u6563\u5217\u8868</li></ul><h3 id="_3-\u7A00\u758F\u5411\u91CF\u4E58\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-\u7A00\u758F\u5411\u91CF\u4E58\u6CD5" aria-hidden="true">#</a> 3. \u7A00\u758F\u5411\u91CF\u4E58\u6CD5</h3><p>\u5F53\u5411\u91CF\u4E3A\u7A00\u758F\u5411\u91CF\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528\u7B26\u53F7\u8868\u6765\u5B58\u50A8\u5411\u91CF\u4E2D\u7684\u975E 0 \u7D22\u5F15\u548C\u503C\uFF0C\u4F7F\u5F97\u4E58\u6CD5\u8FD0\u7B97\u53EA\u9700\u8981\u5BF9\u90A3\u4E9B\u975E 0 \u5143\u7D20\u8FDB\u884C\u5373\u53EF\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SparseVector</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> hashMap<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">SparseVector</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> vector<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        hashMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> vector<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>vector<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                hashMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> vector<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> hashMap<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">dot</span><span class="token punctuation">(</span><span class="token class-name">SparseVector</span> other<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">double</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> hashMap<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            sum <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">*</span> other<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,155);function t(e,o){return p}var i=n(a,[["render",t],["__file","\u7B97\u6CD5 - \u7B26\u53F7\u8868.html.vue"]]);export{i as default};
