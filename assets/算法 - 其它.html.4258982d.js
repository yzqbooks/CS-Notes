import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{e as s}from"./app.d02315a2.js";const a={},p=s(`<h1 id="\u7B97\u6CD5-\u5176\u5B83" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5-\u5176\u5B83" aria-hidden="true">#</a> \u7B97\u6CD5 - \u5176\u5B83</h1><h2 id="\u6C49\u8BFA\u5854" tabindex="-1"><a class="header-anchor" href="#\u6C49\u8BFA\u5854" aria-hidden="true">#</a> \u6C49\u8BFA\u5854</h2><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/69d6c38d-1dec-4f72-ae60-60dbc10e9d15.png&quot; width=&quot;300)</p><p>\u6709\u4E09\u4E2A\u67F1\u5B50\uFF0C\u5206\u522B\u4E3A from\u3001buffer\u3001to\u3002\u9700\u8981\u5C06 from \u4E0A\u7684\u5706\u76D8\u5168\u90E8\u79FB\u52A8\u5230 to \u4E0A\uFF0C\u5E76\u4E14\u8981\u4FDD\u8BC1\u5C0F\u5706\u76D8\u59CB\u7EC8\u5728\u5927\u5706\u76D8\u4E0A\u3002</p><p>\u8FD9\u662F\u4E00\u4E2A\u7ECF\u5178\u7684\u9012\u5F52\u95EE\u9898\uFF0C\u5206\u4E3A\u4E09\u6B65\u6C42\u89E3\uFF1A</p><p>\u2460 \u5C06 n-1 \u4E2A\u5706\u76D8\u4ECE from -&gt; buffer</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f9240aa1-8d48-4959-b28a-7ca45c3e4d91.png&quot; width=&quot;300)</p><p>\u2461 \u5C06 1 \u4E2A\u5706\u76D8\u4ECE from -&gt; to</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f579cab0-3d49-4d00-8e14-e9e1669d0f9f.png&quot; width=&quot;300)</p><p>\u2462 \u5C06 n-1 \u4E2A\u5706\u76D8\u4ECE buffer -&gt; to</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/d02f74dd-8e33-4f3c-bf29-53203a06695a.png&quot; width=&quot;300)</p><p>\u5982\u679C\u53EA\u6709\u4E00\u4E2A\u5706\u76D8\uFF0C\u90A3\u4E48\u53EA\u9700\u8981\u8FDB\u884C\u4E00\u6B21\u79FB\u52A8\u64CD\u4F5C\u3002</p><p>\u4ECE\u4E0A\u9762\u7684\u8BA8\u8BBA\u53EF\u4EE5\u77E5\u9053\uFF0Ca<sub>n</sub> = 2 * a<sub>n-1</sub> + 1\uFF0C\u663E\u7136 a<sub>n</sub> = 2<sup>n</sup> - 1\uFF0Cn \u4E2A\u5706\u76D8\u9700\u8981\u79FB\u52A8 2<sup>n</sup> - 1 \u6B21\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hanoi</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">move</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token class-name">String</span> from<span class="token punctuation">,</span> <span class="token class-name">String</span> buffer<span class="token punctuation">,</span> <span class="token class-name">String</span> <span class="token keyword">to</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;from &quot;</span> <span class="token operator">+</span> from <span class="token operator">+</span> <span class="token string">&quot; to &quot;</span> <span class="token operator">+</span> <span class="token keyword">to</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">move</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> from<span class="token punctuation">,</span> <span class="token keyword">to</span><span class="token punctuation">,</span> buffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">move</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> from<span class="token punctuation">,</span> buffer<span class="token punctuation">,</span> <span class="token keyword">to</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">move</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> buffer<span class="token punctuation">,</span> from<span class="token punctuation">,</span> <span class="token keyword">to</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Hanoi</span><span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&quot;H1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;H2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;H3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>from H1 to H3
from H1 to H2
from H3 to H2
from H1 to H3
from H2 to H1
from H2 to H3
from H1 to H3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u54C8\u592B\u66FC\u7F16\u7801" tabindex="-1"><a class="header-anchor" href="#\u54C8\u592B\u66FC\u7F16\u7801" aria-hidden="true">#</a> \u54C8\u592B\u66FC\u7F16\u7801</h2><p>\u6839\u636E\u6570\u636E\u51FA\u73B0\u7684\u9891\u7387\u5BF9\u6570\u636E\u8FDB\u884C\u7F16\u7801\uFF0C\u4ECE\u800C\u538B\u7F29\u539F\u59CB\u6570\u636E\u3002</p><p>\u4F8B\u5982\u5BF9\u4E8E\u4E00\u4E2A\u6587\u672C\u6587\u4EF6\uFF0C\u5176\u4E2D\u5404\u79CD\u5B57\u7B26\u51FA\u73B0\u7684\u6B21\u6570\u5982\u4E0B\uFF1A</p><ul><li>a : 10</li><li>b : 20</li><li>c : 40</li><li>d : 80</li></ul><p>\u53EF\u4EE5\u5C06\u6BCF\u79CD\u5B57\u7B26\u8F6C\u6362\u6210\u4E8C\u8FDB\u5236\u7F16\u7801\uFF0C\u4F8B\u5982\u5C06 a \u8F6C\u6362\u4E3A 00\uFF0Cb \u8F6C\u6362\u4E3A 01\uFF0Cc \u8F6C\u6362\u4E3A 10\uFF0Cd \u8F6C\u6362\u4E3A 11\u3002\u8FD9\u662F\u6700\u7B80\u5355\u7684\u4E00\u79CD\u7F16\u7801\u65B9\u5F0F\uFF0C\u6CA1\u6709\u8003\u8651\u5404\u4E2A\u5B57\u7B26\u7684\u6743\u503C\uFF08\u51FA\u73B0\u9891\u7387\uFF09\u3002\u800C\u54C8\u592B\u66FC\u7F16\u7801\u91C7\u7528\u4E86\u8D2A\u5FC3\u7B56\u7565\uFF0C\u4F7F\u51FA\u73B0\u9891\u7387\u6700\u9AD8\u7684\u5B57\u7B26\u7684\u7F16\u7801\u6700\u77ED\uFF0C\u4ECE\u800C\u4FDD\u8BC1\u6574\u4F53\u7684\u7F16\u7801\u957F\u5EA6\u6700\u77ED\u3002</p><p>\u9996\u5148\u751F\u6210\u4E00\u9897\u54C8\u592B\u66FC\u6811\uFF0C\u6BCF\u6B21\u751F\u6210\u8FC7\u7A0B\u4E2D\u9009\u53D6\u9891\u7387\u6700\u5C11\u7684\u4E24\u4E2A\u8282\u70B9\uFF0C\u751F\u6210\u4E00\u4E2A\u65B0\u8282\u70B9\u4F5C\u4E3A\u5B83\u4EEC\u7684\u7236\u8282\u70B9\uFF0C\u5E76\u4E14\u65B0\u8282\u70B9\u7684\u9891\u7387\u4E3A\u4E24\u4E2A\u8282\u70B9\u7684\u548C\u3002\u9009\u53D6\u9891\u7387\u6700\u5C11\u7684\u539F\u56E0\u662F\uFF0C\u751F\u6210\u8FC7\u7A0B\u4F7F\u5F97\u5148\u9009\u53D6\u7684\u8282\u70B9\u4F4D\u4E8E\u6811\u7684\u66F4\u4F4E\u5C42\uFF0C\u90A3\u4E48\u9700\u8981\u7684\u7F16\u7801\u957F\u5EA6\u66F4\u957F\uFF0C\u9891\u7387\u66F4\u5C11\u53EF\u4EE5\u4F7F\u5F97\u603B\u7F16\u7801\u957F\u5EA6\u66F4\u5C11\u3002</p><p>\u751F\u6210\u7F16\u7801\u65F6\uFF0C\u4ECE\u6839\u8282\u70B9\u51FA\u53D1\uFF0C\u5411\u5DE6\u904D\u5386\u5219\u6DFB\u52A0\u4E8C\u8FDB\u5236\u4F4D 0\uFF0C\u5411\u53F3\u5219\u6DFB\u52A0\u4E8C\u8FDB\u5236\u4F4D 1\uFF0C\u76F4\u5230\u904D\u5386\u5230\u53F6\u5B50\u8282\u70B9\uFF0C\u53F6\u5B50\u8282\u70B9\u4EE3\u8868\u7684\u5B57\u7B26\u7684\u7F16\u7801\u5C31\u662F\u8FD9\u4E2A\u8DEF\u5F84\u7F16\u7801\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/8edc5164-810b-4cc5-bda8-2a2c98556377.jpg&quot; width=&quot;300)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Huffman</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token keyword">implements</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span> ch<span class="token punctuation">;</span>
        <span class="token keyword">int</span> freq<span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> isLeaf<span class="token punctuation">;</span>
        <span class="token class-name">Node</span> left<span class="token punctuation">,</span> right<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token keyword">char</span> ch<span class="token punctuation">,</span> <span class="token keyword">int</span> freq<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>ch <span class="token operator">=</span> ch<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>freq <span class="token operator">=</span> freq<span class="token punctuation">;</span>
            isLeaf <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token class-name">Node</span> left<span class="token punctuation">,</span> <span class="token class-name">Node</span> right<span class="token punctuation">,</span> <span class="token keyword">int</span> freq<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>left <span class="token operator">=</span> left<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>right <span class="token operator">=</span> right<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>freq <span class="token operator">=</span> freq<span class="token punctuation">;</span>
            isLeaf <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">Node</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>freq <span class="token operator">-</span> o<span class="token punctuation">.</span>freq<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">encode</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> frequencyForChar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">&gt;</span></span> priorityQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Character</span> c <span class="token operator">:</span> frequencyForChar<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            priorityQueue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> frequencyForChar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>priorityQueue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Node</span> node1 <span class="token operator">=</span> priorityQueue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Node</span> node2 <span class="token operator">=</span> priorityQueue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            priorityQueue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>node1<span class="token punctuation">,</span> node2<span class="token punctuation">,</span> node1<span class="token punctuation">.</span>freq <span class="token operator">+</span> node2<span class="token punctuation">.</span>freq<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token function">encode</span><span class="token punctuation">(</span>priorityQueue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">encode</span><span class="token punctuation">(</span><span class="token class-name">Node</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> encodingForChar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">encode</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> encodingForChar<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> encodingForChar<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">encode</span><span class="token punctuation">(</span><span class="token class-name">Node</span> node<span class="token punctuation">,</span> <span class="token class-name">String</span> encoding<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> encodingForChar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>isLeaf<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            encodingForChar<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>ch<span class="token punctuation">,</span> encoding<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">encode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> encoding <span class="token operator">+</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> encodingForChar<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">encode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> encoding <span class="token operator">+</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> encodingForChar<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24);function t(o,e){return p}var u=n(a,[["render",t],["__file","\u7B97\u6CD5 - \u5176\u5B83.html.vue"]]);export{u as default};
