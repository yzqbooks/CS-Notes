import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,o as c,c as l,a as n,b as p,F as i,e as t,d as s}from"./app.d02315a2.js";const u={},r=t('<h1 id="leetcode-\u9898\u89E3-\u52A8\u6001\u89C4\u5212" tabindex="-1"><a class="header-anchor" href="#leetcode-\u9898\u89E3-\u52A8\u6001\u89C4\u5212" aria-hidden="true">#</a> Leetcode \u9898\u89E3 - \u52A8\u6001\u89C4\u5212</h1><ul><li><a href="#leetcode-%E9%A2%98%E8%A7%A3---%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92">Leetcode \u9898\u89E3 - \u52A8\u6001\u89C4\u5212</a><ul><li><a href="#%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97">\u6590\u6CE2\u90A3\u5951\u6570\u5217</a><ul><li><a href="#1-%E7%88%AC%E6%A5%BC%E6%A2%AF">1. \u722C\u697C\u68AF</a></li><li><a href="#2-%E5%BC%BA%E7%9B%97%E6%8A%A2%E5%8A%AB">2. \u5F3A\u76D7\u62A2\u52AB</a></li><li><a href="#3-%E5%BC%BA%E7%9B%97%E5%9C%A8%E7%8E%AF%E5%BD%A2%E8%A1%97%E5%8C%BA%E6%8A%A2%E5%8A%AB">3. \u5F3A\u76D7\u5728\u73AF\u5F62\u8857\u533A\u62A2\u52AB</a></li><li><a href="#4-%E4%BF%A1%E4%BB%B6%E9%94%99%E6%8E%92">4. \u4FE1\u4EF6\u9519\u6392</a></li><li><a href="#5-%E6%AF%8D%E7%89%9B%E7%94%9F%E4%BA%A7">5. \u6BCD\u725B\u751F\u4EA7</a></li></ul></li><li><a href="#%E7%9F%A9%E9%98%B5%E8%B7%AF%E5%BE%84">\u77E9\u9635\u8DEF\u5F84</a><ul><li><a href="#1-%E7%9F%A9%E9%98%B5%E7%9A%84%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E5%92%8C">1. \u77E9\u9635\u7684\u6700\u5C0F\u8DEF\u5F84\u548C</a></li><li><a href="#2-%E7%9F%A9%E9%98%B5%E7%9A%84%E6%80%BB%E8%B7%AF%E5%BE%84%E6%95%B0">2. \u77E9\u9635\u7684\u603B\u8DEF\u5F84\u6570</a></li></ul></li><li><a href="#%E6%95%B0%E7%BB%84%E5%8C%BA%E9%97%B4">\u6570\u7EC4\u533A\u95F4</a><ul><li><a href="#1-%E6%95%B0%E7%BB%84%E5%8C%BA%E9%97%B4%E5%92%8C">1. \u6570\u7EC4\u533A\u95F4\u548C</a></li><li><a href="#2-%E6%95%B0%E7%BB%84%E4%B8%AD%E7%AD%89%E5%B7%AE%E9%80%92%E5%A2%9E%E5%AD%90%E5%8C%BA%E9%97%B4%E7%9A%84%E4%B8%AA%E6%95%B0">2. \u6570\u7EC4\u4E2D\u7B49\u5DEE\u9012\u589E\u5B50\u533A\u95F4\u7684\u4E2A\u6570</a></li></ul></li><li><a href="#%E5%88%86%E5%89%B2%E6%95%B4%E6%95%B0">\u5206\u5272\u6574\u6570</a><ul><li><a href="#1-%E5%88%86%E5%89%B2%E6%95%B4%E6%95%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF">1. \u5206\u5272\u6574\u6570\u7684\u6700\u5927\u4E58\u79EF</a></li><li><a href="#2-%E6%8C%89%E5%B9%B3%E6%96%B9%E6%95%B0%E6%9D%A5%E5%88%86%E5%89%B2%E6%95%B4%E6%95%B0">2. \u6309\u5E73\u65B9\u6570\u6765\u5206\u5272\u6574\u6570</a></li><li><a href="#3-%E5%88%86%E5%89%B2%E6%95%B4%E6%95%B0%E6%9E%84%E6%88%90%E5%AD%97%E6%AF%8D%E5%AD%97%E7%AC%A6%E4%B8%B2">3. \u5206\u5272\u6574\u6570\u6784\u6210\u5B57\u6BCD\u5B57\u7B26\u4E32</a></li></ul></li><li><a href="#%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97">\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217</a><ul><li><a href="#1-%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97">1. \u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217</a></li><li><a href="#2-%E4%B8%80%E7%BB%84%E6%95%B4%E6%95%B0%E5%AF%B9%E8%83%BD%E5%A4%9F%E6%9E%84%E6%88%90%E7%9A%84%E6%9C%80%E9%95%BF%E9%93%BE">2. \u4E00\u7EC4\u6574\u6570\u5BF9\u80FD\u591F\u6784\u6210\u7684\u6700\u957F\u94FE</a></li><li><a href="#3-%E6%9C%80%E9%95%BF%E6%91%86%E5%8A%A8%E5%AD%90%E5%BA%8F%E5%88%97">3. \u6700\u957F\u6446\u52A8\u5B50\u5E8F\u5217</a></li></ul></li><li><a href="#%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97">\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217</a><ul><li><a href="#1-%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97">1. \u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217</a></li></ul></li><li><a href="#0-1-%E8%83%8C%E5%8C%85">0-1 \u80CC\u5305</a><ul><li><a href="#1-%E5%88%92%E5%88%86%E6%95%B0%E7%BB%84%E4%B8%BA%E5%92%8C%E7%9B%B8%E7%AD%89%E7%9A%84%E4%B8%A4%E9%83%A8%E5%88%86">1. \u5212\u5206\u6570\u7EC4\u4E3A\u548C\u76F8\u7B49\u7684\u4E24\u90E8\u5206</a></li><li><a href="#2-%E6%94%B9%E5%8F%98%E4%B8%80%E7%BB%84%E6%95%B0%E7%9A%84%E6%AD%A3%E8%B4%9F%E5%8F%B7%E4%BD%BF%E5%BE%97%E5%AE%83%E4%BB%AC%E7%9A%84%E5%92%8C%E4%B8%BA%E4%B8%80%E7%BB%99%E5%AE%9A%E6%95%B0">2. \u6539\u53D8\u4E00\u7EC4\u6570\u7684\u6B63\u8D1F\u53F7\u4F7F\u5F97\u5B83\u4EEC\u7684\u548C\u4E3A\u4E00\u7ED9\u5B9A\u6570</a></li><li><a href="#3-01-%E5%AD%97%E7%AC%A6%E6%9E%84%E6%88%90%E6%9C%80%E5%A4%9A%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2">3. 01 \u5B57\u7B26\u6784\u6210\u6700\u591A\u7684\u5B57\u7B26\u4E32</a></li><li><a href="#4-%E6%89%BE%E9%9B%B6%E9%92%B1%E7%9A%84%E6%9C%80%E5%B0%91%E7%A1%AC%E5%B8%81%E6%95%B0">4. \u627E\u96F6\u94B1\u7684\u6700\u5C11\u786C\u5E01\u6570</a></li><li><a href="#5-%E6%89%BE%E9%9B%B6%E9%92%B1%E7%9A%84%E7%A1%AC%E5%B8%81%E6%95%B0%E7%BB%84%E5%90%88">5. \u627E\u96F6\u94B1\u7684\u786C\u5E01\u6570\u7EC4\u5408</a></li><li><a href="#6-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8C%89%E5%8D%95%E8%AF%8D%E5%88%97%E8%A1%A8%E5%88%86%E5%89%B2">6. \u5B57\u7B26\u4E32\u6309\u5355\u8BCD\u5217\u8868\u5206\u5272</a></li><li><a href="#7-%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C">7. \u7EC4\u5408\u603B\u548C</a></li></ul></li><li><a href="#%E8%82%A1%E7%A5%A8%E4%BA%A4%E6%98%93">\u80A1\u7968\u4EA4\u6613</a><ul><li><a href="#1-%E9%9C%80%E8%A6%81%E5%86%B7%E5%8D%B4%E6%9C%9F%E7%9A%84%E8%82%A1%E7%A5%A8%E4%BA%A4%E6%98%93">1. \u9700\u8981\u51B7\u5374\u671F\u7684\u80A1\u7968\u4EA4\u6613</a></li><li><a href="#2-%E9%9C%80%E8%A6%81%E4%BA%A4%E6%98%93%E8%B4%B9%E7%94%A8%E7%9A%84%E8%82%A1%E7%A5%A8%E4%BA%A4%E6%98%93">2. \u9700\u8981\u4EA4\u6613\u8D39\u7528\u7684\u80A1\u7968\u4EA4\u6613</a></li><li><a href="#3-%E5%8F%AA%E8%83%BD%E8%BF%9B%E8%A1%8C%E4%B8%A4%E6%AC%A1%E7%9A%84%E8%82%A1%E7%A5%A8%E4%BA%A4%E6%98%93">3. \u53EA\u80FD\u8FDB\u884C\u4E24\u6B21\u7684\u80A1\u7968\u4EA4\u6613</a></li><li><a href="#4-%E5%8F%AA%E8%83%BD%E8%BF%9B%E8%A1%8C-k-%E6%AC%A1%E7%9A%84%E8%82%A1%E7%A5%A8%E4%BA%A4%E6%98%93">4. \u53EA\u80FD\u8FDB\u884C k \u6B21\u7684\u80A1\u7968\u4EA4\u6613</a></li></ul></li><li><a href="#%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%96%E8%BE%91">\u5B57\u7B26\u4E32\u7F16\u8F91</a><ul><li><a href="#1-%E5%88%A0%E9%99%A4%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%AD%97%E7%AC%A6%E4%BD%BF%E5%AE%83%E4%BB%AC%E7%9B%B8%E7%AD%89">1. \u5220\u9664\u4E24\u4E2A\u5B57\u7B26\u4E32\u7684\u5B57\u7B26\u4F7F\u5B83\u4EEC\u76F8\u7B49</a></li><li><a href="#2-%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB">2. \u7F16\u8F91\u8DDD\u79BB</a></li><li><a href="#3-%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4%E5%AD%97%E7%AC%A6">3. \u590D\u5236\u7C98\u8D34\u5B57\u7B26</a></li></ul></li></ul></li></ul><p>\u9012\u5F52\u548C\u52A8\u6001\u89C4\u5212\u90FD\u662F\u5C06\u539F\u95EE\u9898\u62C6\u6210\u591A\u4E2A\u5B50\u95EE\u9898\u7136\u540E\u6C42\u89E3\uFF0C\u4ED6\u4EEC\u4E4B\u95F4\u6700\u672C\u8D28\u7684\u533A\u522B\u662F\uFF0C\u52A8\u6001\u89C4\u5212\u4FDD\u5B58\u4E86\u5B50\u95EE\u9898\u7684\u89E3\uFF0C\u907F\u514D\u91CD\u590D\u8BA1\u7B97\u3002</p><h2 id="\u6590\u6CE2\u90A3\u5951\u6570\u5217" tabindex="-1"><a class="header-anchor" href="#\u6590\u6CE2\u90A3\u5951\u6570\u5217" aria-hidden="true">#</a> \u6590\u6CE2\u90A3\u5951\u6570\u5217</h2><h3 id="_1-\u722C\u697C\u68AF" tabindex="-1"><a class="header-anchor" href="#_1-\u722C\u697C\u68AF" aria-hidden="true">#</a> 1. \u722C\u697C\u68AF</h3><p>70. Climbing Stairs (Easy)</p>',6),k={href:"https://leetcode.com/problems/climbing-stairs/description/",target:"_blank",rel:"noopener noreferrer"},d=s("Leetcode"),m=s(" / "),v={href:"https://leetcode-cn.com/problems/climbing-stairs/description/",target:"_blank",rel:"noopener noreferrer"},b=s("\u529B\u6263"),h=t(`<p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u6709 N \u9636\u697C\u68AF\uFF0C\u6BCF\u6B21\u53EF\u4EE5\u4E0A\u4E00\u9636\u6216\u8005\u4E24\u9636\uFF0C\u6C42\u6709\u591A\u5C11\u79CD\u4E0A\u697C\u68AF\u7684\u65B9\u6CD5\u3002</p><p>\u5B9A\u4E49\u4E00\u4E2A\u6570\u7EC4 dp \u5B58\u50A8\u4E0A\u697C\u68AF\u7684\u65B9\u6CD5\u6570\uFF08\u4E3A\u4E86\u65B9\u4FBF\u8BA8\u8BBA\uFF0C\u6570\u7EC4\u4E0B\u6807\u4ECE 1 \u5F00\u59CB\uFF09\uFF0Cdp[i] \u8868\u793A\u8D70\u5230\u7B2C i \u4E2A\u697C\u68AF\u7684\u65B9\u6CD5\u6570\u76EE\u3002</p><p>\u7B2C i \u4E2A\u697C\u68AF\u53EF\u4EE5\u4ECE\u7B2C i-1 \u548C i-2 \u4E2A\u697C\u68AF\u518D\u8D70\u4E00\u6B65\u5230\u8FBE\uFF0C\u8D70\u5230\u7B2C i \u4E2A\u697C\u68AF\u7684\u65B9\u6CD5\u6570\u4E3A\u8D70\u5230\u7B2C i-1 \u548C\u7B2C i-2 \u4E2A\u697C\u68AF\u7684\u65B9\u6CD5\u6570\u4E4B\u548C\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/14fe1e71-8518-458f-a220-116003061a83.png&quot; width=&quot;200px&quot;&gt;</p><p>\u8003\u8651\u5230 dp[i] \u53EA\u4E0E dp[i - 1] \u548C dp[i - 2] \u6709\u5173\uFF0C\u56E0\u6B64\u53EF\u4EE5\u53EA\u7528\u4E24\u4E2A\u53D8\u91CF\u6765\u5B58\u50A8 dp[i - 1] \u548C dp[i - 2]\uFF0C\u4F7F\u5F97\u539F\u6765\u7684 O(N) \u7A7A\u95F4\u590D\u6742\u5EA6\u4F18\u5316\u4E3A O(1) \u590D\u6742\u5EA6\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">climbStairs</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> n<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> pre2 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> pre1 <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> cur <span class="token operator">=</span> pre1 <span class="token operator">+</span> pre2<span class="token punctuation">;</span>
        pre2 <span class="token operator">=</span> pre1<span class="token punctuation">;</span>
        pre1 <span class="token operator">=</span> cur<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> pre1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u5F3A\u76D7\u62A2\u52AB" tabindex="-1"><a class="header-anchor" href="#_2-\u5F3A\u76D7\u62A2\u52AB" aria-hidden="true">#</a> 2. \u5F3A\u76D7\u62A2\u52AB</h3><p>198. House Robber (Easy)</p>`,8),w={href:"https://leetcode.com/problems/house-robber/description/",target:"_blank",rel:"noopener noreferrer"},y=s("Leetcode"),g=s(" / "),f={href:"https://leetcode-cn.com/problems/house-robber/description/",target:"_blank",rel:"noopener noreferrer"},_=s("\u529B\u6263"),E=t(`<p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u62A2\u52AB\u4E00\u6392\u4F4F\u6237\uFF0C\u4F46\u662F\u4E0D\u80FD\u62A2\u90BB\u8FD1\u7684\u4F4F\u6237\uFF0C\u6C42\u6700\u5927\u62A2\u52AB\u91CF\u3002</p><p>\u5B9A\u4E49 dp \u6570\u7EC4\u7528\u6765\u5B58\u50A8\u6700\u5927\u7684\u62A2\u52AB\u91CF\uFF0C\u5176\u4E2D dp[i] \u8868\u793A\u62A2\u5230\u7B2C i \u4E2A\u4F4F\u6237\u65F6\u7684\u6700\u5927\u62A2\u52AB\u91CF\u3002</p><p>\u7531\u4E8E\u4E0D\u80FD\u62A2\u52AB\u90BB\u8FD1\u4F4F\u6237\uFF0C\u5982\u679C\u62A2\u52AB\u4E86\u7B2C i -1 \u4E2A\u4F4F\u6237\uFF0C\u90A3\u4E48\u5C31\u4E0D\u80FD\u518D\u62A2\u52AB\u7B2C i \u4E2A\u4F4F\u6237\uFF0C\u6240\u4EE5</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/2de794ca-aa7b-48f3-a556-a0e2708cb976.jpg&quot; width=&quot;350px&quot;&gt;</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">rob</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> pre2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> pre1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> cur <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>pre2 <span class="token operator">+</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> pre1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pre2 <span class="token operator">=</span> pre1<span class="token punctuation">;</span>
        pre1 <span class="token operator">=</span> cur<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> pre1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u5F3A\u76D7\u5728\u73AF\u5F62\u8857\u533A\u62A2\u52AB" tabindex="-1"><a class="header-anchor" href="#_3-\u5F3A\u76D7\u5728\u73AF\u5F62\u8857\u533A\u62A2\u52AB" aria-hidden="true">#</a> 3. \u5F3A\u76D7\u5728\u73AF\u5F62\u8857\u533A\u62A2\u52AB</h3><p>213. House Robber II (Medium)</p>`,7),j={href:"https://leetcode.com/problems/house-robber-ii/description/",target:"_blank",rel:"noopener noreferrer"},A=s("Leetcode"),x=s(" / "),B={href:"https://leetcode-cn.com/problems/house-robber-ii/description/",target:"_blank",rel:"noopener noreferrer"},q=s("\u529B\u6263"),S=t(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">rob</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> nums<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token function">rob</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">rob</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">rob</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> first<span class="token punctuation">,</span> <span class="token keyword">int</span> last<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> pre2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> pre1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> first<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> last<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> cur <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>pre1<span class="token punctuation">,</span> pre2 <span class="token operator">+</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pre2 <span class="token operator">=</span> pre1<span class="token punctuation">;</span>
        pre1 <span class="token operator">=</span> cur<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> pre1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-\u4FE1\u4EF6\u9519\u6392" tabindex="-1"><a class="header-anchor" href="#_4-\u4FE1\u4EF6\u9519\u6392" aria-hidden="true">#</a> 4. \u4FE1\u4EF6\u9519\u6392</h3><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u6709 N \u4E2A \u4FE1 \u548C \u4FE1\u5C01\uFF0C\u5B83\u4EEC\u88AB\u6253\u4E71\uFF0C\u6C42\u9519\u8BEF\u88C5\u4FE1\u65B9\u5F0F\u7684\u6570\u91CF\u3002</p><p>\u5B9A\u4E49\u4E00\u4E2A\u6570\u7EC4 dp \u5B58\u50A8\u9519\u8BEF\u65B9\u5F0F\u6570\u91CF\uFF0Cdp[i] \u8868\u793A\u524D i \u4E2A\u4FE1\u548C\u4FE1\u5C01\u7684\u9519\u8BEF\u65B9\u5F0F\u6570\u91CF\u3002\u5047\u8BBE\u7B2C i \u4E2A\u4FE1\u88C5\u5230\u7B2C j \u4E2A\u4FE1\u5C01\u91CC\u9762\uFF0C\u800C\u7B2C j \u4E2A\u4FE1\u88C5\u5230\u7B2C k \u4E2A\u4FE1\u5C01\u91CC\u9762\u3002\u6839\u636E i \u548C k \u662F\u5426\u76F8\u7B49\uFF0C\u6709\u4E24\u79CD\u60C5\u51B5\uFF1A</p><ul><li>i==k\uFF0C\u4EA4\u6362 i \u548C j \u7684\u4FE1\u540E\uFF0C\u5B83\u4EEC\u7684\u4FE1\u548C\u4FE1\u5C01\u5728\u6B63\u786E\u7684\u4F4D\u7F6E\uFF0C\u4F46\u662F\u5176\u4F59 i-2 \u5C01\u4FE1\u6709 dp[i-2] \u79CD\u9519\u8BEF\u88C5\u4FE1\u7684\u65B9\u5F0F\u3002\u7531\u4E8E j \u6709 i-1 \u79CD\u53D6\u503C\uFF0C\u56E0\u6B64\u5171\u6709 (i-1)*dp[i-2] \u79CD\u9519\u8BEF\u88C5\u4FE1\u65B9\u5F0F\u3002</li><li>i != k\uFF0C\u4EA4\u6362 i \u548C j \u7684\u4FE1\u540E\uFF0C\u7B2C i \u4E2A\u4FE1\u548C\u4FE1\u5C01\u5728\u6B63\u786E\u7684\u4F4D\u7F6E\uFF0C\u5176\u4F59 i-1 \u5C01\u4FE1\u6709 dp[i-1] \u79CD\u9519\u8BEF\u88C5\u4FE1\u65B9\u5F0F\u3002\u7531\u4E8E j \u6709 i-1 \u79CD\u53D6\u503C\uFF0C\u56E0\u6B64\u5171\u6709 (i-1)*dp[i-1] \u79CD\u9519\u8BEF\u88C5\u4FE1\u65B9\u5F0F\u3002</li></ul><p>\u7EFC\u4E0A\u6240\u8FF0\uFF0C\u9519\u8BEF\u88C5\u4FE1\u6570\u91CF\u65B9\u5F0F\u6570\u91CF\u4E3A\uFF1A</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/da1f96b9-fd4d-44ca-8925-fb14c5733388.png&quot; width=&quot;350px&quot;&gt;</p><h3 id="_5-\u6BCD\u725B\u751F\u4EA7" tabindex="-1"><a class="header-anchor" href="#_5-\u6BCD\u725B\u751F\u4EA7" aria-hidden="true">#</a> 5. \u6BCD\u725B\u751F\u4EA7</h3><p><a href="#">\u7A0B\u5E8F\u5458\u4EE3\u7801\u9762\u8BD5\u6307\u5357-P181</a></p><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u5047\u8BBE\u519C\u573A\u4E2D\u6210\u719F\u7684\u6BCD\u725B\u6BCF\u5E74\u90FD\u4F1A\u751F 1 \u5934\u5C0F\u6BCD\u725B\uFF0C\u5E76\u4E14\u6C38\u8FDC\u4E0D\u4F1A\u6B7B\u3002\u7B2C\u4E00\u5E74\u6709 1 \u53EA\u5C0F\u6BCD\u725B\uFF0C\u4ECE\u7B2C\u4E8C\u5E74\u5F00\u59CB\uFF0C\u6BCD\u725B\u5F00\u59CB\u751F\u5C0F\u6BCD\u725B\u3002\u6BCF\u53EA\u5C0F\u6BCD\u725B 3 \u5E74\u4E4B\u540E\u6210\u719F\u53C8\u53EF\u4EE5\u751F\u5C0F\u6BCD\u725B\u3002\u7ED9\u5B9A\u6574\u6570 N\uFF0C\u6C42 N \u5E74\u540E\u725B\u7684\u6570\u91CF\u3002</p><p>\u7B2C i \u5E74\u6210\u719F\u7684\u725B\u7684\u6570\u91CF\u4E3A\uFF1A</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/879814ee-48b5-4bcb-86f5-dcc400cb81ad.png&quot; width=&quot;250px&quot;&gt;</p><h2 id="\u77E9\u9635\u8DEF\u5F84" tabindex="-1"><a class="header-anchor" href="#\u77E9\u9635\u8DEF\u5F84" aria-hidden="true">#</a> \u77E9\u9635\u8DEF\u5F84</h2><h3 id="_1-\u77E9\u9635\u7684\u6700\u5C0F\u8DEF\u5F84\u548C" tabindex="-1"><a class="header-anchor" href="#_1-\u77E9\u9635\u7684\u6700\u5C0F\u8DEF\u5F84\u548C" aria-hidden="true">#</a> 1. \u77E9\u9635\u7684\u6700\u5C0F\u8DEF\u5F84\u548C</h3><p>64. Minimum Path Sum (Medium)</p>`,15),C={href:"https://leetcode.com/problems/minimum-path-sum/description/",target:"_blank",rel:"noopener noreferrer"},M=s("Leetcode"),N=s(" / "),L={href:"https://leetcode-cn.com/problems/minimum-path-sum/description/",target:"_blank",rel:"noopener noreferrer"},D=s("\u529B\u6263"),F=t(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>[[1,3,1],
 [1,5,1],
 [4,2,1]]
Given the above grid map, return 7. Because the path 1\u21923\u21921\u21921\u21921 minimizes the sum.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u6C42\u4ECE\u77E9\u9635\u7684\u5DE6\u4E0A\u89D2\u5230\u53F3\u4E0B\u89D2\u7684\u6700\u5C0F\u8DEF\u5F84\u548C\uFF0C\u6BCF\u6B21\u53EA\u80FD\u5411\u53F3\u548C\u5411\u4E0B\u79FB\u52A8\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">minPathSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> m <span class="token operator">=</span> grid<span class="token punctuation">.</span>length<span class="token punctuation">,</span> n <span class="token operator">=</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">// \u53EA\u80FD\u4ECE\u4E0A\u4FA7\u8D70\u5230\u8BE5\u4F4D\u7F6E</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">// \u53EA\u80FD\u4ECE\u5DE6\u4FA7\u8D70\u5230\u8BE5\u4F4D\u7F6E</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+=</span> grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u77E9\u9635\u7684\u603B\u8DEF\u5F84\u6570" tabindex="-1"><a class="header-anchor" href="#_2-\u77E9\u9635\u7684\u603B\u8DEF\u5F84\u6570" aria-hidden="true">#</a> 2. \u77E9\u9635\u7684\u603B\u8DEF\u5F84\u6570</h3><p>62. Unique Paths (Medium)</p>`,5),I={href:"https://leetcode.com/problems/unique-paths/description/",target:"_blank",rel:"noopener noreferrer"},P=s("Leetcode"),O=s(" / "),W={href:"https://leetcode-cn.com/problems/unique-paths/description/",target:"_blank",rel:"noopener noreferrer"},T=s("\u529B\u6263"),z=t(`<p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u7EDF\u8BA1\u4ECE\u77E9\u9635\u5DE6\u4E0A\u89D2\u5230\u53F3\u4E0B\u89D2\u7684\u8DEF\u5F84\u603B\u6570\uFF0C\u6BCF\u6B21\u53EA\u80FD\u5411\u53F3\u6216\u8005\u5411\u4E0B\u79FB\u52A8\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/dc82f0f3-c1d4-4ac8-90ac-d5b32a9bd75a.jpg&quot; width=&quot;&quot;&gt;</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">uniquePaths</span><span class="token punctuation">(</span><span class="token keyword">int</span> m<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>dp<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> dp<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E5F\u53EF\u4EE5\u76F4\u63A5\u7528\u6570\u5B66\u516C\u5F0F\u6C42\u89E3\uFF0C\u8FD9\u662F\u4E00\u4E2A\u7EC4\u5408\u95EE\u9898\u3002\u673A\u5668\u4EBA\u603B\u5171\u79FB\u52A8\u7684\u6B21\u6570 S=m+n-2\uFF0C\u5411\u4E0B\u79FB\u52A8\u7684\u6B21\u6570 D=m-1\uFF0C\u90A3\u4E48\u95EE\u9898\u53EF\u4EE5\u770B\u6210\u4ECE S \u4E2D\u53D6\u51FA D \u4E2A\u4F4D\u7F6E\u7684\u7EC4\u5408\u6570\u91CF\uFF0C\u8FD9\u4E2A\u95EE\u9898\u7684\u89E3\u4E3A C(S, D)\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">uniquePaths</span><span class="token punctuation">(</span><span class="token keyword">int</span> m<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> <span class="token class-name">S</span> <span class="token operator">=</span> m <span class="token operator">+</span> n <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token comment">// \u603B\u5171\u7684\u79FB\u52A8\u6B21\u6570</span>
    <span class="token keyword">int</span> <span class="token class-name">D</span> <span class="token operator">=</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>      <span class="token comment">// \u5411\u4E0B\u7684\u79FB\u52A8\u6B21\u6570</span>
    <span class="token keyword">long</span> ret <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token class-name">D</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ret <span class="token operator">=</span> ret <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token class-name">S</span> <span class="token operator">-</span> <span class="token class-name">D</span> <span class="token operator">+</span> i<span class="token punctuation">)</span> <span class="token operator">/</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6570\u7EC4\u533A\u95F4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u533A\u95F4" aria-hidden="true">#</a> \u6570\u7EC4\u533A\u95F4</h2><h3 id="_1-\u6570\u7EC4\u533A\u95F4\u548C" tabindex="-1"><a class="header-anchor" href="#_1-\u6570\u7EC4\u533A\u95F4\u548C" aria-hidden="true">#</a> 1. \u6570\u7EC4\u533A\u95F4\u548C</h3><p>303. Range Sum Query - Immutable (Easy)</p>`,8),V={href:"https://leetcode.com/problems/range-sum-query-immutable/description/",target:"_blank",rel:"noopener noreferrer"},R=s("Leetcode"),H=s(" / "),U={href:"https://leetcode-cn.com/problems/range-sum-query-immutable/description/",target:"_blank",rel:"noopener noreferrer"},G=s("\u529B\u6263"),K=t(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Given nums = [-2, 0, 3, -5, 2, -1]

sumRange(0, 2) -&gt; 1
sumRange(2, 5) -&gt; -1
sumRange(0, 5) -&gt; -3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6C42\u533A\u95F4 i ~ j \u7684\u548C\uFF0C\u53EF\u4EE5\u8F6C\u6362\u4E3A sum[j + 1] - sum[i]\uFF0C\u5176\u4E2D sum[i] \u4E3A 0 ~ i - 1 \u7684\u548C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">NumArray</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sums<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">NumArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sums <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>nums<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> sums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">sumRange</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> sums<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> sums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u6570\u7EC4\u4E2D\u7B49\u5DEE\u9012\u589E\u5B50\u533A\u95F4\u7684\u4E2A\u6570" tabindex="-1"><a class="header-anchor" href="#_2-\u6570\u7EC4\u4E2D\u7B49\u5DEE\u9012\u589E\u5B50\u533A\u95F4\u7684\u4E2A\u6570" aria-hidden="true">#</a> 2. \u6570\u7EC4\u4E2D\u7B49\u5DEE\u9012\u589E\u5B50\u533A\u95F4\u7684\u4E2A\u6570</h3><p>413. Arithmetic Slices (Medium)</p>`,5),Q={href:"https://leetcode.com/problems/arithmetic-slices/description/",target:"_blank",rel:"noopener noreferrer"},X=s("Leetcode"),Y=s(" / "),Z={href:"https://leetcode-cn.com/problems/arithmetic-slices/description/",target:"_blank",rel:"noopener noreferrer"},J=s("\u529B\u6263"),$=t(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>A = [0, 1, 2, 3, 4]

return: 6, for 3 arithmetic slices in A:

[0, 1, 2],
[1, 2, 3],
[0, 1, 2, 3],
[0, 1, 2, 3, 4],
[ 1, 2, 3, 4],
[2, 3, 4]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>dp[i] \u8868\u793A\u4EE5 A[i] \u4E3A\u7ED3\u5C3E\u7684\u7B49\u5DEE\u9012\u589E\u5B50\u533A\u95F4\u7684\u4E2A\u6570\u3002</p><p>\u5F53 A[i] - A[i-1] == A[i-1] - A[i-2]\uFF0C\u90A3\u4E48 [A[i-2], A[i-1], A[i]] \u6784\u6210\u4E00\u4E2A\u7B49\u5DEE\u9012\u589E\u5B50\u533A\u95F4\u3002\u800C\u4E14\u5728\u4EE5 A[i-1] \u4E3A\u7ED3\u5C3E\u7684\u9012\u589E\u5B50\u533A\u95F4\u7684\u540E\u9762\u518D\u52A0\u4E0A\u4E00\u4E2A A[i]\uFF0C\u4E00\u6837\u53EF\u4EE5\u6784\u6210\u65B0\u7684\u9012\u589E\u5B50\u533A\u95F4\u3002</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>dp[2] = 1
    [0, 1, 2]
dp[3] = dp[2] + 1 = 2
    [0, 1, 2, 3], // [0, 1, 2] \u4E4B\u540E\u52A0\u4E00\u4E2A 3
    [1, 2, 3]     // \u65B0\u7684\u9012\u589E\u5B50\u533A\u95F4
dp[4] = dp[3] + 1 = 3
    [0, 1, 2, 3, 4], // [0, 1, 2, 3] \u4E4B\u540E\u52A0\u4E00\u4E2A 4
    [1, 2, 3, 4],    // [1, 2, 3] \u4E4B\u540E\u52A0\u4E00\u4E2A 4
    [2, 3, 4]        // \u65B0\u7684\u9012\u589E\u5B50\u533A\u95F4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EFC\u4E0A\uFF0C\u5728 A[i] - A[i-1] == A[i-1] - A[i-2] \u65F6\uFF0Cdp[i] = dp[i-1] + 1\u3002</p><p>\u56E0\u4E3A\u9012\u589E\u5B50\u533A\u95F4\u4E0D\u4E00\u5B9A\u4EE5\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u4E3A\u7ED3\u5C3E\uFF0C\u53EF\u4EE5\u662F\u4EFB\u610F\u4E00\u4E2A\u5143\u7D20\u7ED3\u5C3E\uFF0C\u56E0\u6B64\u9700\u8981\u8FD4\u56DE dp \u6570\u7EC4\u7D2F\u52A0\u7684\u7ED3\u679C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">numberOfArithmeticSlices</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">A</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">A</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token class-name">A</span><span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token class-name">A</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">A</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token class-name">A</span><span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token class-name">A</span><span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token class-name">A</span><span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> cnt <span class="token operator">:</span> dp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        total <span class="token operator">+=</span> cnt<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> total<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5206\u5272\u6574\u6570" tabindex="-1"><a class="header-anchor" href="#\u5206\u5272\u6574\u6570" aria-hidden="true">#</a> \u5206\u5272\u6574\u6570</h2><h3 id="_1-\u5206\u5272\u6574\u6570\u7684\u6700\u5927\u4E58\u79EF" tabindex="-1"><a class="header-anchor" href="#_1-\u5206\u5272\u6574\u6570\u7684\u6700\u5927\u4E58\u79EF" aria-hidden="true">#</a> 1. \u5206\u5272\u6574\u6570\u7684\u6700\u5927\u4E58\u79EF</h3><p>343. Integer Break (Medim)</p>`,10),nn={href:"https://leetcode.com/problems/integer-break/description/",target:"_blank",rel:"noopener noreferrer"},sn=s("Leetcode"),an=s(" / "),pn={href:"https://leetcode-cn.com/problems/integer-break/description/",target:"_blank",rel:"noopener noreferrer"},tn=s("\u529B\u6263"),en=t(`<p>\u9898\u76EE\u63CF\u8FF0\uFF1AFor example, given n = 2, return 1 (2 = 1 + 1); given n = 10, return 36 (10 = 3 + 3 + 4).</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">integerBreak</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    dp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>j <span class="token operator">*</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> j<span class="token punctuation">]</span><span class="token punctuation">,</span> j <span class="token operator">*</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u6309\u5E73\u65B9\u6570\u6765\u5206\u5272\u6574\u6570" tabindex="-1"><a class="header-anchor" href="#_2-\u6309\u5E73\u65B9\u6570\u6765\u5206\u5272\u6574\u6570" aria-hidden="true">#</a> 2. \u6309\u5E73\u65B9\u6570\u6765\u5206\u5272\u6574\u6570</h3><p>279. Perfect Squares(Medium)</p>`,4),on={href:"https://leetcode.com/problems/perfect-squares/description/",target:"_blank",rel:"noopener noreferrer"},cn=s("Leetcode"),ln=s(" / "),un={href:"https://leetcode-cn.com/problems/perfect-squares/description/",target:"_blank",rel:"noopener noreferrer"},rn=s("\u529B\u6263"),kn=t(`<p>\u9898\u76EE\u63CF\u8FF0\uFF1AFor example, given n = 12, return 3 because 12 = 4 + 4 + 4; given n = 13, return 2 because 13 = 4 + 9.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">numSquares</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> squareList <span class="token operator">=</span> <span class="token function">generateSquareList</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> min <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> square <span class="token operator">:</span> squareList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>square <span class="token operator">&gt;</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            min <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> square<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> min<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">generateSquareList</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> squareList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> diff <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> square <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>square <span class="token operator">&lt;=</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        squareList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>square<span class="token punctuation">)</span><span class="token punctuation">;</span>
        square <span class="token operator">+=</span> diff<span class="token punctuation">;</span>
        diff <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> squareList<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u5206\u5272\u6574\u6570\u6784\u6210\u5B57\u6BCD\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#_3-\u5206\u5272\u6574\u6570\u6784\u6210\u5B57\u6BCD\u5B57\u7B26\u4E32" aria-hidden="true">#</a> 3. \u5206\u5272\u6574\u6570\u6784\u6210\u5B57\u6BCD\u5B57\u7B26\u4E32</h3><p>91. Decode Ways (Medium)</p>`,4),dn={href:"https://leetcode.com/problems/decode-ways/description/",target:"_blank",rel:"noopener noreferrer"},mn=s("Leetcode"),vn=s(" / "),bn={href:"https://leetcode-cn.com/problems/decode-ways/description/",target:"_blank",rel:"noopener noreferrer"},hn=s("\u529B\u6263"),wn=t(`<p>\u9898\u76EE\u63CF\u8FF0\uFF1AGiven encoded message &quot;12&quot;, it could be decoded as &quot;AB&quot; (1 2) or &quot;L&quot; (12).</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">numDecodings</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    dp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">&#39;0&#39;</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> one <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>one <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> two <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>two <span class="token operator">&lt;=</span> <span class="token number">26</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217" tabindex="-1"><a class="header-anchor" href="#\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217" aria-hidden="true">#</a> \u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217</h2><p>\u5DF2\u77E5\u4E00\u4E2A\u5E8F\u5217 {S<sub>1</sub>, S<sub>2</sub>,...,S<sub>n</sub>}\uFF0C\u53D6\u51FA\u82E5\u5E72\u6570\u7EC4\u6210\u65B0\u7684\u5E8F\u5217 {S<sub>i1</sub>, S<sub>i2</sub>,..., S<sub>im</sub>}\uFF0C\u5176\u4E2D i1\u3001i2 ... im \u4FDD\u6301\u9012\u589E\uFF0C\u5373\u65B0\u5E8F\u5217\u4E2D\u5404\u4E2A\u6570\u4ECD\u7136\u4FDD\u6301\u539F\u6570\u5217\u4E2D\u7684\u5148\u540E\u987A\u5E8F\uFF0C\u79F0\u65B0\u5E8F\u5217\u4E3A\u539F\u5E8F\u5217\u7684\u4E00\u4E2A <strong>\u5B50\u5E8F\u5217</strong> \u3002</p><p>\u5982\u679C\u5728\u5B50\u5E8F\u5217\u4E2D\uFF0C\u5F53\u4E0B\u6807 ix &gt; iy \u65F6\uFF0CS<sub>ix</sub> &gt; S<sub>iy</sub>\uFF0C\u79F0\u5B50\u5E8F\u5217\u4E3A\u539F\u5E8F\u5217\u7684\u4E00\u4E2A <strong>\u9012\u589E\u5B50\u5E8F\u5217</strong> \u3002</p><p>\u5B9A\u4E49\u4E00\u4E2A\u6570\u7EC4 dp \u5B58\u50A8\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u7684\u957F\u5EA6\uFF0Cdp[n] \u8868\u793A\u4EE5 S<sub>n</sub> \u7ED3\u5C3E\u7684\u5E8F\u5217\u7684\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u957F\u5EA6\u3002\u5BF9\u4E8E\u4E00\u4E2A\u9012\u589E\u5B50\u5E8F\u5217 {S<sub>i1</sub>, S<sub>i2</sub>,...,S<sub>im</sub>}\uFF0C\u5982\u679C im &lt; n \u5E76\u4E14 S<sub>im</sub> &lt; S<sub>n</sub>\uFF0C\u6B64\u65F6 {S<sub>i1</sub>, S<sub>i2</sub>,..., S<sub>im</sub>, S<sub>n</sub>} \u4E3A\u4E00\u4E2A\u9012\u589E\u5B50\u5E8F\u5217\uFF0C\u9012\u589E\u5B50\u5E8F\u5217\u7684\u957F\u5EA6\u589E\u52A0 1\u3002\u6EE1\u8DB3\u4E0A\u8FF0\u6761\u4EF6\u7684\u9012\u589E\u5B50\u5E8F\u5217\u4E2D\uFF0C\u957F\u5EA6\u6700\u957F\u7684\u90A3\u4E2A\u9012\u589E\u5B50\u5E8F\u5217\u5C31\u662F\u8981\u627E\u7684\uFF0C\u5728\u957F\u5EA6\u6700\u957F\u7684\u9012\u589E\u5B50\u5E8F\u5217\u4E0A\u52A0\u4E0A S<sub>n</sub> \u5C31\u6784\u6210\u4E86\u4EE5 S<sub>n</sub> \u4E3A\u7ED3\u5C3E\u7684\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u3002\u56E0\u6B64 dp[n] = max{ dp[i]+1 | S<sub>i</sub> &lt; S<sub>n</sub> &amp;&amp; i &lt; n} \u3002</p><p>\u56E0\u4E3A\u5728\u6C42 dp[n] \u65F6\u53EF\u80FD\u65E0\u6CD5\u627E\u5230\u4E00\u4E2A\u6EE1\u8DB3\u6761\u4EF6\u7684\u9012\u589E\u5B50\u5E8F\u5217\uFF0C\u6B64\u65F6 {S<sub>n</sub>} \u5C31\u6784\u6210\u4E86\u9012\u589E\u5B50\u5E8F\u5217\uFF0C\u9700\u8981\u5BF9\u524D\u9762\u7684\u6C42\u89E3\u65B9\u7A0B\u505A\u4FEE\u6539\uFF0C\u4EE4 dp[n] \u6700\u5C0F\u4E3A 1\uFF0C\u5373\uFF1A</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ee994da4-0fc7-443d-ac56-c08caf00a204.jpg&quot; width=&quot;350px&quot;&gt;</p><p>\u5BF9\u4E8E\u4E00\u4E2A\u957F\u5EA6\u4E3A N \u7684\u5E8F\u5217\uFF0C\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u5E76\u4E0D\u4E00\u5B9A\u4F1A\u4EE5 S<sub>N</sub> \u4E3A\u7ED3\u5C3E\uFF0C\u56E0\u6B64 dp[N] \u4E0D\u662F\u5E8F\u5217\u7684\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u7684\u957F\u5EA6\uFF0C\u9700\u8981\u904D\u5386 dp \u6570\u7EC4\u627E\u51FA\u6700\u5927\u503C\u624D\u662F\u6240\u8981\u7684\u7ED3\u679C\uFF0Cmax{ dp[i] | 1 &lt;= i &lt;= N} \u5373\u4E3A\u6240\u6C42\u3002</p><h3 id="_1-\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217" tabindex="-1"><a class="header-anchor" href="#_1-\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217" aria-hidden="true">#</a> 1. \u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217</h3><p>300. Longest Increasing Subsequence (Medium)</p>`,11),yn={href:"https://leetcode.com/problems/longest-increasing-subsequence/description/",target:"_blank",rel:"noopener noreferrer"},gn=s("Leetcode"),fn=s(" / "),_n={href:"https://leetcode-cn.com/problems/longest-increasing-subsequence/description/",target:"_blank",rel:"noopener noreferrer"},En=s("\u529B\u6263"),jn=t(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">lengthOfLIS</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                max <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span> dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> max<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>dp<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 Stream \u6C42\u6700\u5927\u503C\u4F1A\u5BFC\u81F4\u8FD0\u884C\u65F6\u95F4\u8FC7\u957F\uFF0C\u53EF\u4EE5\u6539\u6210\u4EE5\u4E0B\u5F62\u5F0F\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> ret <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ret <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>ret<span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> ret<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u89E3\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N<sup>2</sup>)\uFF0C\u53EF\u4EE5\u4F7F\u7528\u4E8C\u5206\u67E5\u627E\u5C06\u65F6\u95F4\u590D\u6742\u5EA6\u964D\u4F4E\u4E3A O(NlogN)\u3002</p><p>\u5B9A\u4E49\u4E00\u4E2A tails \u6570\u7EC4\uFF0C\u5176\u4E2D tails[i] \u5B58\u50A8\u957F\u5EA6\u4E3A i + 1 \u7684\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u3002\u5BF9\u4E8E\u4E00\u4E2A\u5143\u7D20 x\uFF0C</p><ul><li>\u5982\u679C\u5B83\u5927\u4E8E tails \u6570\u7EC4\u6240\u6709\u7684\u503C\uFF0C\u90A3\u4E48\u628A\u5B83\u6DFB\u52A0\u5230 tails \u540E\u9762\uFF0C\u8868\u793A\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u957F\u5EA6\u52A0 1\uFF1B</li><li>\u5982\u679C tails[i-1] &lt; x &lt;= tails[i]\uFF0C\u90A3\u4E48\u66F4\u65B0 tails[i] = x\u3002</li></ul><p>\u4F8B\u5982\u5BF9\u4E8E\u6570\u7EC4 [4,3,6,5]\uFF0C\u6709\uFF1A</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>tails      len      num
[]         0        4
[4]        1        3
[3]        1        6
[3,6]      2        5
[3,5]      2        null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u51FA tails \u6570\u7EC4\u4FDD\u6301\u6709\u5E8F\uFF0C\u56E0\u6B64\u5728\u67E5\u627E S<sub>i</sub> \u4F4D\u4E8E tails \u6570\u7EC4\u7684\u4F4D\u7F6E\u65F6\u5C31\u53EF\u4EE5\u4F7F\u7528\u4E8C\u5206\u67E5\u627E\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">lengthOfLIS</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tails <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num <span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token function">binarySearch</span><span class="token punctuation">(</span>tails<span class="token punctuation">,</span> len<span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>
        tails<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> num<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            len<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> len<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">binarySearch</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tails<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">,</span> <span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> h <span class="token operator">=</span> len<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> mid <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span>h <span class="token operator">-</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>tails<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">==</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> mid<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>tails<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            h <span class="token operator">=</span> mid<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            l <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> l<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u4E00\u7EC4\u6574\u6570\u5BF9\u80FD\u591F\u6784\u6210\u7684\u6700\u957F\u94FE" tabindex="-1"><a class="header-anchor" href="#_2-\u4E00\u7EC4\u6574\u6570\u5BF9\u80FD\u591F\u6784\u6210\u7684\u6700\u957F\u94FE" aria-hidden="true">#</a> 2. \u4E00\u7EC4\u6574\u6570\u5BF9\u80FD\u591F\u6784\u6210\u7684\u6700\u957F\u94FE</h3><p>646. Maximum Length of Pair Chain (Medium)</p>`,12),An={href:"https://leetcode.com/problems/maximum-length-of-pair-chain/description/",target:"_blank",rel:"noopener noreferrer"},xn=s("Leetcode"),Bn=s(" / "),qn={href:"https://leetcode-cn.com/problems/maximum-length-of-pair-chain/description/",target:"_blank",rel:"noopener noreferrer"},Sn=s("\u529B\u6263"),Cn=t(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input: [[1,2], [2,3], [3,4]]
Output: 2
Explanation: The longest chain is [1,2] -&gt; [3,4]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u5BF9\u4E8E (a, b) \u548C (c, d) \uFF0C\u5982\u679C b &lt; c\uFF0C\u5219\u5B83\u4EEC\u53EF\u4EE5\u6784\u6210\u4E00\u6761\u94FE\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findLongestChain</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> pairs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pairs <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> pairs<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>pairs<span class="token punctuation">,</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> pairs<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>dp<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>pairs<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> pairs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>dp<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u6700\u957F\u6446\u52A8\u5B50\u5E8F\u5217" tabindex="-1"><a class="header-anchor" href="#_3-\u6700\u957F\u6446\u52A8\u5B50\u5E8F\u5217" aria-hidden="true">#</a> 3. \u6700\u957F\u6446\u52A8\u5B50\u5E8F\u5217</h3><p>376. Wiggle Subsequence (Medium)</p>`,5),Mn={href:"https://leetcode.com/problems/wiggle-subsequence/description/",target:"_blank",rel:"noopener noreferrer"},Nn=s("Leetcode"),Ln=s(" / "),Dn={href:"https://leetcode-cn.com/problems/wiggle-subsequence/description/",target:"_blank",rel:"noopener noreferrer"},Fn=s("\u529B\u6263"),In=t(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input: [1,7,4,9,2,5]
Output: 6
The entire sequence is a wiggle sequence.

Input: [1,17,5,10,13,15,10,5,16,8]
Output: 7
There are several subsequences that achieve this length. One is [1,17,10,13,10,16,8].

Input: [1,2,3,4,5,6,7,8,9]
Output: 2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8981\u6C42\uFF1A\u4F7F\u7528 O(N) \u65F6\u95F4\u590D\u6742\u5EA6\u6C42\u89E3\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">wiggleMaxLength</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> nums<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> up <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> down <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            up <span class="token operator">=</span> down <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            down <span class="token operator">=</span> up <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>up<span class="token punctuation">,</span> down<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217" tabindex="-1"><a class="header-anchor" href="#\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217" aria-hidden="true">#</a> \u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217</h2><p>\u5BF9\u4E8E\u4E24\u4E2A\u5B50\u5E8F\u5217 S1 \u548C S2\uFF0C\u627E\u51FA\u5B83\u4EEC\u6700\u957F\u7684\u516C\u5171\u5B50\u5E8F\u5217\u3002</p><p>\u5B9A\u4E49\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4 dp \u7528\u6765\u5B58\u50A8\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u7684\u957F\u5EA6\uFF0C\u5176\u4E2D dp[i][j] \u8868\u793A S1 \u7684\u524D i \u4E2A\u5B57\u7B26\u4E0E S2 \u7684\u524D j \u4E2A\u5B57\u7B26\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u7684\u957F\u5EA6\u3002\u8003\u8651 S1<sub>i</sub> \u4E0E S2<sub>j</sub> \u503C\u662F\u5426\u76F8\u7B49\uFF0C\u5206\u4E3A\u4E24\u79CD\u60C5\u51B5\uFF1A</p><ul><li>\u5F53 S1<sub>i</sub>==S2<sub>j</sub> \u65F6\uFF0C\u90A3\u4E48\u5C31\u80FD\u5728 S1 \u7684\u524D i-1 \u4E2A\u5B57\u7B26\u4E0E S2 \u7684\u524D j-1 \u4E2A\u5B57\u7B26\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u7684\u57FA\u7840\u4E0A\u518D\u52A0\u4E0A S1<sub>i</sub> \u8FD9\u4E2A\u503C\uFF0C\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u957F\u5EA6\u52A0 1\uFF0C\u5373 dp[i][j] = dp[i-1][j-1] + 1\u3002</li><li>\u5F53 S1<sub>i</sub> != S2<sub>j</sub> \u65F6\uFF0C\u6B64\u65F6\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u4E3A S1 \u7684\u524D i-1 \u4E2A\u5B57\u7B26\u548C S2 \u7684\u524D j \u4E2A\u5B57\u7B26\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\uFF0C\u6216\u8005 S1 \u7684\u524D i \u4E2A\u5B57\u7B26\u548C S2 \u7684\u524D j-1 \u4E2A\u5B57\u7B26\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\uFF0C\u53D6\u5B83\u4EEC\u7684\u6700\u5927\u8005\uFF0C\u5373 dp[i][j] = max{ dp[i-1][j], dp[i][j-1] }\u3002</li></ul><p>\u7EFC\u4E0A\uFF0C\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u7684\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\u4E3A\uFF1A</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ecd89a22-c075-4716-8423-e0ba89230e9a.jpg&quot; width=&quot;450px&quot;&gt;</p><p>\u5BF9\u4E8E\u957F\u5EA6\u4E3A N \u7684\u5E8F\u5217 S<sub>1</sub> \u548C\u957F\u5EA6\u4E3A M \u7684\u5E8F\u5217 S<sub>2</sub>\uFF0Cdp[N][M] \u5C31\u662F\u5E8F\u5217 S<sub>1</sub> \u548C\u5E8F\u5217 S<sub>2</sub> \u7684\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u957F\u5EA6\u3002</p><p>\u4E0E\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u76F8\u6BD4\uFF0C\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u6709\u4EE5\u4E0B\u4E0D\u540C\u70B9\uFF1A</p><ul><li>\u9488\u5BF9\u7684\u662F\u4E24\u4E2A\u5E8F\u5217\uFF0C\u6C42\u5B83\u4EEC\u7684\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u3002</li><li>\u5728\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u4E2D\uFF0Cdp[i] \u8868\u793A\u4EE5 S<sub>i</sub> \u4E3A\u7ED3\u5C3E\u7684\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u957F\u5EA6\uFF0C\u5B50\u5E8F\u5217\u5FC5\u987B\u5305\u542B S<sub>i</sub> \uFF1B\u5728\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u4E2D\uFF0Cdp[i][j] \u8868\u793A S1 \u4E2D\u524D i \u4E2A\u5B57\u7B26\u4E0E S2 \u4E2D\u524D j \u4E2A\u5B57\u7B26\u7684\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u957F\u5EA6\uFF0C\u4E0D\u4E00\u5B9A\u5305\u542B S1<sub>i</sub> \u548C S2<sub>j</sub>\u3002</li><li>\u5728\u6C42\u6700\u7EC8\u89E3\u65F6\uFF0C\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u4E2D dp[N][M] \u5C31\u662F\u6700\u7EC8\u89E3\uFF0C\u800C\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u4E2D dp[N] \u4E0D\u662F\u6700\u7EC8\u89E3\uFF0C\u56E0\u4E3A\u4EE5 S<sub>N</sub> \u4E3A\u7ED3\u5C3E\u7684\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u4E0D\u4E00\u5B9A\u662F\u6574\u4E2A\u5E8F\u5217\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\uFF0C\u9700\u8981\u904D\u5386\u4E00\u904D dp \u6570\u7EC4\u627E\u5230\u6700\u5927\u8005\u3002</li></ul><h3 id="_1-\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217" tabindex="-1"><a class="header-anchor" href="#_1-\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217" aria-hidden="true">#</a> 1. \u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217</h3><p>1143. Longest Common Subsequence</p>`,14),Pn={href:"https://leetcode.com/problems/longest-common-subsequence/",target:"_blank",rel:"noopener noreferrer"},On=s("Leetcode"),Wn=s(" / "),Tn={href:"https://leetcode-cn.com/problems/longest-common-subsequence/",target:"_blank",rel:"noopener noreferrer"},zn=s("\u529B\u6263"),Vn=t(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">longestCommonSubsequence</span><span class="token punctuation">(</span><span class="token class-name">String</span> text1<span class="token punctuation">,</span> <span class="token class-name">String</span> text2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> n1 <span class="token operator">=</span> text1<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> n2 <span class="token operator">=</span> text2<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n1<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n2<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>text1<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> text2<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> dp<span class="token punctuation">[</span>n1<span class="token punctuation">]</span><span class="token punctuation">[</span>n2<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_0-1-\u80CC\u5305" tabindex="-1"><a class="header-anchor" href="#_0-1-\u80CC\u5305" aria-hidden="true">#</a> 0-1 \u80CC\u5305</h2><p>\u6709\u4E00\u4E2A\u5BB9\u91CF\u4E3A N \u7684\u80CC\u5305\uFF0C\u8981\u7528\u8FD9\u4E2A\u80CC\u5305\u88C5\u4E0B\u7269\u54C1\u7684\u4EF7\u503C\u6700\u5927\uFF0C\u8FD9\u4E9B\u7269\u54C1\u6709\u4E24\u4E2A\u5C5E\u6027\uFF1A\u4F53\u79EF w \u548C\u4EF7\u503C v\u3002</p><p>\u5B9A\u4E49\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4 dp \u5B58\u50A8\u6700\u5927\u4EF7\u503C\uFF0C\u5176\u4E2D dp[i][j] \u8868\u793A\u524D i \u4EF6\u7269\u54C1\u4F53\u79EF\u4E0D\u8D85\u8FC7 j \u7684\u60C5\u51B5\u4E0B\u80FD\u8FBE\u5230\u7684\u6700\u5927\u4EF7\u503C\u3002\u8BBE\u7B2C i \u4EF6\u7269\u54C1\u4F53\u79EF\u4E3A w\uFF0C\u4EF7\u503C\u4E3A v\uFF0C\u6839\u636E\u7B2C i \u4EF6\u7269\u54C1\u662F\u5426\u6DFB\u52A0\u5230\u80CC\u5305\u4E2D\uFF0C\u53EF\u4EE5\u5206\u4E24\u79CD\u60C5\u51B5\u8BA8\u8BBA\uFF1A</p><ul><li>\u7B2C i \u4EF6\u7269\u54C1\u6CA1\u6DFB\u52A0\u5230\u80CC\u5305\uFF0C\u603B\u4F53\u79EF\u4E0D\u8D85\u8FC7 j \u7684\u524D i \u4EF6\u7269\u54C1\u7684\u6700\u5927\u4EF7\u503C\u5C31\u662F\u603B\u4F53\u79EF\u4E0D\u8D85\u8FC7 j \u7684\u524D i-1 \u4EF6\u7269\u54C1\u7684\u6700\u5927\u4EF7\u503C\uFF0Cdp[i][j] = dp[i-1][j]\u3002</li><li>\u7B2C i \u4EF6\u7269\u54C1\u6DFB\u52A0\u5230\u80CC\u5305\u4E2D\uFF0Cdp[i][j] = dp[i-1][j-w] + v\u3002</li></ul><p>\u7B2C i \u4EF6\u7269\u54C1\u53EF\u6DFB\u52A0\u4E5F\u53EF\u4EE5\u4E0D\u6DFB\u52A0\uFF0C\u53D6\u51B3\u4E8E\u54EA\u79CD\u60C5\u51B5\u4E0B\u6700\u5927\u4EF7\u503C\u66F4\u5927\u3002\u56E0\u6B64\uFF0C0-1 \u80CC\u5305\u7684\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\u4E3A\uFF1A</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/8cb2be66-3d47-41ba-b55b-319fc68940d4.png&quot; width=&quot;400px&quot;&gt;</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// W \u4E3A\u80CC\u5305\u603B\u4F53\u79EF</span>
<span class="token comment">// N \u4E3A\u7269\u54C1\u6570\u91CF</span>
<span class="token comment">// weights \u6570\u7EC4\u5B58\u50A8 N \u4E2A\u7269\u54C1\u7684\u91CD\u91CF</span>
<span class="token comment">// values \u6570\u7EC4\u5B58\u50A8 N \u4E2A\u7269\u54C1\u7684\u4EF7\u503C</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">knapsack</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token class-name">W</span><span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token class-name">N</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> weights<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> values<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">N</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token class-name">W</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token class-name">N</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> w <span class="token operator">=</span> weights<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> v <span class="token operator">=</span> values<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token class-name">W</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;=</span> w<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> w<span class="token punctuation">]</span> <span class="token operator">+</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token class-name">W</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u7A7A\u95F4\u4F18\u5316</strong></p><p>\u5728\u7A0B\u5E8F\u5B9E\u73B0\u65F6\u53EF\u4EE5\u5BF9 0-1 \u80CC\u5305\u505A\u4F18\u5316\u3002\u89C2\u5BDF\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\u53EF\u4EE5\u77E5\u9053\uFF0C\u524D i \u4EF6\u7269\u54C1\u7684\u72B6\u6001\u4EC5\u4E0E\u524D i-1 \u4EF6\u7269\u54C1\u7684\u72B6\u6001\u6709\u5173\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5C06 dp \u5B9A\u4E49\u4E3A\u4E00\u7EF4\u6570\u7EC4\uFF0C\u5176\u4E2D dp[j] \u65E2\u53EF\u4EE5\u8868\u793A dp[i-1][j] \u4E5F\u53EF\u4EE5\u8868\u793A dp[i][j]\u3002\u6B64\u65F6\uFF0C</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/9ae89f16-7905-4a6f-88a2-874b4cac91f4.jpg&quot; width=&quot;300px&quot;&gt;</p><p>\u56E0\u4E3A dp[j-w] \u8868\u793A dp[i-1][j-w]\uFF0C\u56E0\u6B64\u4E0D\u80FD\u5148\u6C42 dp[i][j-w]\uFF0C\u9632\u6B62\u5C06 dp[i-1][j-w] \u8986\u76D6\u3002\u4E5F\u5C31\u662F\u8BF4\u8981\u5148\u8BA1\u7B97 dp[i][j] \u518D\u8BA1\u7B97 dp[i][j-w]\uFF0C\u5728\u7A0B\u5E8F\u5B9E\u73B0\u65F6\u9700\u8981\u6309\u5012\u5E8F\u6765\u5FAA\u73AF\u6C42\u89E3\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">knapsack</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token class-name">W</span><span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token class-name">N</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> weights<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> values<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">W</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token class-name">N</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> w <span class="token operator">=</span> weights<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> v <span class="token operator">=</span> values<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token class-name">W</span><span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;=</span> w<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>j <span class="token operator">-</span> w<span class="token punctuation">]</span> <span class="token operator">+</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span><span class="token class-name">W</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u65E0\u6CD5\u4F7F\u7528\u8D2A\u5FC3\u7B97\u6CD5\u7684\u89E3\u91CA</strong></p><p>0-1 \u80CC\u5305\u95EE\u9898\u65E0\u6CD5\u4F7F\u7528\u8D2A\u5FC3\u7B97\u6CD5\u6765\u6C42\u89E3\uFF0C\u4E5F\u5C31\u662F\u8BF4\u4E0D\u80FD\u6309\u7167\u5148\u6DFB\u52A0\u6027\u4EF7\u6BD4\u6700\u9AD8\u7684\u7269\u54C1\u6765\u8FBE\u5230\u6700\u4F18\uFF0C\u8FD9\u662F\u56E0\u4E3A\u8FD9\u79CD\u65B9\u5F0F\u53EF\u80FD\u9020\u6210\u80CC\u5305\u7A7A\u95F4\u7684\u6D6A\u8D39\uFF0C\u4ECE\u800C\u65E0\u6CD5\u8FBE\u5230\u6700\u4F18\u3002\u8003\u8651\u4E0B\u9762\u7684\u7269\u54C1\u548C\u4E00\u4E2A\u5BB9\u91CF\u4E3A 5 \u7684\u80CC\u5305\uFF0C\u5982\u679C\u5148\u6DFB\u52A0\u7269\u54C1 0 \u518D\u6DFB\u52A0\u7269\u54C1 1\uFF0C\u90A3\u4E48\u53EA\u80FD\u5B58\u653E\u7684\u4EF7\u503C\u4E3A 16\uFF0C\u6D6A\u8D39\u4E86\u5927\u5C0F\u4E3A 2 \u7684\u7A7A\u95F4\u3002\u6700\u4F18\u7684\u65B9\u5F0F\u662F\u5B58\u653E\u7269\u54C1 1 \u548C\u7269\u54C1 2\uFF0C\u4EF7\u503C\u4E3A 22.</p><table><thead><tr><th>id</th><th>w</th><th>v</th><th>v/w</th></tr></thead><tbody><tr><td>0</td><td>1</td><td>6</td><td>6</td></tr><tr><td>1</td><td>2</td><td>10</td><td>5</td></tr><tr><td>2</td><td>3</td><td>12</td><td>4</td></tr></tbody></table><p><strong>\u53D8\u79CD</strong></p><ul><li><p>\u5B8C\u5168\u80CC\u5305\uFF1A\u7269\u54C1\u6570\u91CF\u4E3A\u65E0\u9650\u4E2A</p></li><li><p>\u591A\u91CD\u80CC\u5305\uFF1A\u7269\u54C1\u6570\u91CF\u6709\u9650\u5236</p></li><li><p>\u591A\u7EF4\u8D39\u7528\u80CC\u5305\uFF1A\u7269\u54C1\u4E0D\u4EC5\u6709\u91CD\u91CF\uFF0C\u8FD8\u6709\u4F53\u79EF\uFF0C\u540C\u65F6\u8003\u8651\u8FD9\u4E24\u79CD\u9650\u5236</p></li><li><p>\u5176\u5B83\uFF1A\u7269\u54C1\u4E4B\u95F4\u76F8\u4E92\u7EA6\u675F\u6216\u8005\u4F9D\u8D56</p></li></ul><h3 id="_1-\u5212\u5206\u6570\u7EC4\u4E3A\u548C\u76F8\u7B49\u7684\u4E24\u90E8\u5206" tabindex="-1"><a class="header-anchor" href="#_1-\u5212\u5206\u6570\u7EC4\u4E3A\u548C\u76F8\u7B49\u7684\u4E24\u90E8\u5206" aria-hidden="true">#</a> 1. \u5212\u5206\u6570\u7EC4\u4E3A\u548C\u76F8\u7B49\u7684\u4E24\u90E8\u5206</h3><p>416. Partition Equal Subset Sum (Medium)</p>`,20),Rn={href:"https://leetcode.com/problems/partition-equal-subset-sum/description/",target:"_blank",rel:"noopener noreferrer"},Hn=s("Leetcode"),Un=s(" / "),Gn={href:"https://leetcode-cn.com/problems/partition-equal-subset-sum/description/",target:"_blank",rel:"noopener noreferrer"},Kn=s("\u529B\u6263"),Qn=t(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input: [1, 5, 11, 5]

Output: true

Explanation: The array can be partitioned as [1, 5, 5] and [11].
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u6210\u4E00\u4E2A\u80CC\u5305\u5927\u5C0F\u4E3A sum/2 \u7684 0-1 \u80CC\u5305\u95EE\u9898\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">canPartition</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token function">computeArraySum</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> <span class="token class-name">W</span> <span class="token operator">=</span> sum <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token class-name">W</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num <span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>                 <span class="token comment">// 0-1 \u80CC\u5305\u4E00\u4E2A\u7269\u54C1\u53EA\u80FD\u7528\u4E00\u6B21</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token class-name">W</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> num<span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">// \u4ECE\u540E\u5F80\u524D\uFF0C\u5148\u8BA1\u7B97 dp[i] \u518D\u8BA1\u7B97 dp[i-num]</span>
            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">||</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> num<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span><span class="token class-name">W</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">computeArraySum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num <span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sum <span class="token operator">+=</span> num<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u6539\u53D8\u4E00\u7EC4\u6570\u7684\u6B63\u8D1F\u53F7\u4F7F\u5F97\u5B83\u4EEC\u7684\u548C\u4E3A\u4E00\u7ED9\u5B9A\u6570" tabindex="-1"><a class="header-anchor" href="#_2-\u6539\u53D8\u4E00\u7EC4\u6570\u7684\u6B63\u8D1F\u53F7\u4F7F\u5F97\u5B83\u4EEC\u7684\u548C\u4E3A\u4E00\u7ED9\u5B9A\u6570" aria-hidden="true">#</a> 2. \u6539\u53D8\u4E00\u7EC4\u6570\u7684\u6B63\u8D1F\u53F7\u4F7F\u5F97\u5B83\u4EEC\u7684\u548C\u4E3A\u4E00\u7ED9\u5B9A\u6570</h3><p>494. Target Sum (Medium)</p>`,5),Xn={href:"https://leetcode.com/problems/target-sum/description/",target:"_blank",rel:"noopener noreferrer"},Yn=s("Leetcode"),Zn=s(" / "),Jn={href:"https://leetcode-cn.com/problems/target-sum/description/",target:"_blank",rel:"noopener noreferrer"},$n=s("\u529B\u6263"),ns=t(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input: nums is [1, 1, 1, 1, 1], S is 3.
Output: 5
Explanation:

-1+1+1+1+1 = 3
+1-1+1+1+1 = 3
+1+1-1+1+1 = 3
+1+1+1-1+1 = 3
+1+1+1+1-1 = 3

There are 5 ways to assign symbols to make the sum of nums be target 3.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u95EE\u9898\u53EF\u4EE5\u8F6C\u6362\u4E3A Subset Sum \u95EE\u9898\uFF0C\u4ECE\u800C\u4F7F\u7528 0-1 \u80CC\u5305\u7684\u65B9\u6CD5\u6765\u6C42\u89E3\u3002</p><p>\u53EF\u4EE5\u5C06\u8FD9\u7EC4\u6570\u770B\u6210\u4E24\u90E8\u5206\uFF0CP \u548C N\uFF0C\u5176\u4E2D P \u4F7F\u7528\u6B63\u53F7\uFF0CN \u4F7F\u7528\u8D1F\u53F7\uFF0C\u6709\u4EE5\u4E0B\u63A8\u5BFC\uFF1A</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>                  sum(P) - sum(N) = target
sum(P) + sum(N) + sum(P) - sum(N) = target + sum(P) + sum(N)
                       2 * sum(P) = target + sum(nums)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u6B64\u53EA\u8981\u627E\u5230\u4E00\u4E2A\u5B50\u96C6\uFF0C\u4EE4\u5B83\u4EEC\u90FD\u53D6\u6B63\u53F7\uFF0C\u5E76\u4E14\u548C\u7B49\u4E8E (target + sum(nums))/2\uFF0C\u5C31\u8BC1\u660E\u5B58\u5728\u89E3\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findTargetSumWays</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token class-name">S</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token function">computeArraySum</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&lt;</span> <span class="token class-name">S</span> <span class="token operator">||</span> <span class="token punctuation">(</span>sum <span class="token operator">+</span> <span class="token class-name">S</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> <span class="token class-name">W</span> <span class="token operator">=</span> <span class="token punctuation">(</span>sum <span class="token operator">+</span> <span class="token class-name">S</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">W</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num <span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token class-name">W</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> num<span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> num<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span><span class="token class-name">W</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">computeArraySum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num <span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sum <span class="token operator">+=</span> num<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>DFS \u89E3\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findTargetSumWays</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token class-name">S</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">findTargetSumWays</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">S</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">findTargetSumWays</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token class-name">S</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">==</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">S</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">findTargetSumWays</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> start <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">S</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token operator">+</span> <span class="token function">findTargetSumWays</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> start <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">S</span> <span class="token operator">-</span> nums<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-01-\u5B57\u7B26\u6784\u6210\u6700\u591A\u7684\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#_3-01-\u5B57\u7B26\u6784\u6210\u6700\u591A\u7684\u5B57\u7B26\u4E32" aria-hidden="true">#</a> 3. 01 \u5B57\u7B26\u6784\u6210\u6700\u591A\u7684\u5B57\u7B26\u4E32</h3><p>474. Ones and Zeroes (Medium)</p>`,10),ss={href:"https://leetcode.com/problems/ones-and-zeroes/description/",target:"_blank",rel:"noopener noreferrer"},as=s("Leetcode"),ps=s(" / "),ts={href:"https://leetcode-cn.com/problems/ones-and-zeroes/description/",target:"_blank",rel:"noopener noreferrer"},es=s("\u529B\u6263"),os=t(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input: Array = {&quot;10&quot;, &quot;0001&quot;, &quot;111001&quot;, &quot;1&quot;, &quot;0&quot;}, m = 5, n = 3
Output: 4

Explanation: There are totally 4 strings can be formed by the using of 5 0s and 3 1s, which are &quot;10&quot;,&quot;0001&quot;,&quot;1&quot;,&quot;0&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u662F\u4E00\u4E2A\u591A\u7EF4\u8D39\u7528\u7684 0-1 \u80CC\u5305\u95EE\u9898\uFF0C\u6709\u4E24\u4E2A\u80CC\u5305\u5927\u5C0F\uFF0C0 \u7684\u6570\u91CF\u548C 1 \u7684\u6570\u91CF\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findMaxForm</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strs<span class="token punctuation">,</span> <span class="token keyword">int</span> m<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>strs <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> strs<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> s <span class="token operator">:</span> strs<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// \u6BCF\u4E2A\u5B57\u7B26\u4E32\u53EA\u80FD\u7528\u4E00\u6B21</span>
        <span class="token keyword">int</span> ones <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> zeros <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> c <span class="token operator">:</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                zeros<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                ones<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> m<span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> zeros<span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> n<span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> ones<span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> zeros<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> ones<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-\u627E\u96F6\u94B1\u7684\u6700\u5C11\u786C\u5E01\u6570" tabindex="-1"><a class="header-anchor" href="#_4-\u627E\u96F6\u94B1\u7684\u6700\u5C11\u786C\u5E01\u6570" aria-hidden="true">#</a> 4. \u627E\u96F6\u94B1\u7684\u6700\u5C11\u786C\u5E01\u6570</h3><p>322. Coin Change (Medium)</p>`,5),cs={href:"https://leetcode.com/problems/coin-change/description/",target:"_blank",rel:"noopener noreferrer"},ls=s("Leetcode"),is=s(" / "),us={href:"https://leetcode-cn.com/problems/coin-change/description/",target:"_blank",rel:"noopener noreferrer"},rs=s("\u529B\u6263"),ks=t(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Example 1:
coins = [1, 2, 5], amount = 11
return 3 (11 = 5 + 5 + 1)

Example 2:
coins = [2], amount = 3
return -1.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u7ED9\u4E00\u4E9B\u9762\u989D\u7684\u786C\u5E01\uFF0C\u8981\u6C42\u7528\u8FD9\u4E9B\u786C\u5E01\u6765\u7EC4\u6210\u7ED9\u5B9A\u9762\u989D\u7684\u94B1\u6570\uFF0C\u5E76\u4E14\u4F7F\u5F97\u786C\u5E01\u6570\u91CF\u6700\u5C11\u3002\u786C\u5E01\u53EF\u4EE5\u91CD\u590D\u4F7F\u7528\u3002</p><ul><li>\u7269\u54C1\uFF1A\u786C\u5E01</li><li>\u7269\u54C1\u5927\u5C0F\uFF1A\u9762\u989D</li><li>\u7269\u54C1\u4EF7\u503C\uFF1A\u6570\u91CF</li></ul><p>\u56E0\u4E3A\u786C\u5E01\u53EF\u4EE5\u91CD\u590D\u4F7F\u7528\uFF0C\u56E0\u6B64\u8FD9\u662F\u4E00\u4E2A\u5B8C\u5168\u80CC\u5305\u95EE\u9898\u3002\u5B8C\u5168\u80CC\u5305\u53EA\u9700\u8981\u5C06 0-1 \u80CC\u5305\u7684\u9006\u5E8F\u904D\u5386 dp \u6570\u7EC4\u6539\u4E3A\u6B63\u5E8F\u904D\u5386\u5373\u53EF\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">coinChange</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> coins<span class="token punctuation">,</span> <span class="token keyword">int</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>amount <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> coins <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>amount <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> coin <span class="token operator">:</span> coins<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> coin<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> amount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u5C06\u9006\u5E8F\u904D\u5386\u6539\u4E3A\u6B63\u5E8F\u904D\u5386</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> coin<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> coin<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> coin<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>

            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> coin<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> coin<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>amount<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> dp<span class="token punctuation">[</span>amount<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-\u627E\u96F6\u94B1\u7684\u786C\u5E01\u6570\u7EC4\u5408" tabindex="-1"><a class="header-anchor" href="#_5-\u627E\u96F6\u94B1\u7684\u786C\u5E01\u6570\u7EC4\u5408" aria-hidden="true">#</a> 5. \u627E\u96F6\u94B1\u7684\u786C\u5E01\u6570\u7EC4\u5408</h3><p>518. Coin Change 2 (Medium)</p>`,7),ds={href:"https://leetcode.com/problems/coin-change-2/description/",target:"_blank",rel:"noopener noreferrer"},ms=s("Leetcode"),vs=s(" / "),bs={href:"https://leetcode-cn.com/problems/coin-change-2/description/",target:"_blank",rel:"noopener noreferrer"},hs=s("\u529B\u6263"),ws=t(`<div class="language-text-html-basic ext-text-html-basic line-numbers-mode"><pre class="language-text-html-basic"><code>Input: amount = 5, coins = [1, 2, 5]
Output: 4
Explanation: there are four ways to make up the amount:
5=5
5=2+2+1
5=2+1+1+1
5=1+1+1+1+1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B8C\u5168\u80CC\u5305\u95EE\u9898\uFF0C\u4F7F\u7528 dp \u8BB0\u5F55\u53EF\u8FBE\u6210\u76EE\u6807\u7684\u7EC4\u5408\u6570\u76EE\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">change</span><span class="token punctuation">(</span><span class="token keyword">int</span> amount<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> coins<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>coins <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>amount <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> coin <span class="token operator">:</span> coins<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> coin<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> amount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> coin<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>amount<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-\u5B57\u7B26\u4E32\u6309\u5355\u8BCD\u5217\u8868\u5206\u5272" tabindex="-1"><a class="header-anchor" href="#_6-\u5B57\u7B26\u4E32\u6309\u5355\u8BCD\u5217\u8868\u5206\u5272" aria-hidden="true">#</a> 6. \u5B57\u7B26\u4E32\u6309\u5355\u8BCD\u5217\u8868\u5206\u5272</h3><p>139. Word Break (Medium)</p>`,5),ys={href:"https://leetcode.com/problems/word-break/description/",target:"_blank",rel:"noopener noreferrer"},gs=s("Leetcode"),fs=s(" / "),_s={href:"https://leetcode-cn.com/problems/word-break/description/",target:"_blank",rel:"noopener noreferrer"},Es=s("\u529B\u6263"),js=t(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>s = &quot;leetcode&quot;,
dict = [&quot;leet&quot;, &quot;code&quot;].
Return true because &quot;leetcode&quot; can be segmented as &quot;leet code&quot;.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>dict \u4E2D\u7684\u5355\u8BCD\u6CA1\u6709\u4F7F\u7528\u6B21\u6570\u7684\u9650\u5236\uFF0C\u56E0\u6B64\u8FD9\u662F\u4E00\u4E2A\u5B8C\u5168\u80CC\u5305\u95EE\u9898\u3002</p><p>\u8BE5\u95EE\u9898\u6D89\u53CA\u5230\u5B57\u5178\u4E2D\u5355\u8BCD\u7684\u4F7F\u7528\u987A\u5E8F\uFF0C\u4E5F\u5C31\u662F\u8BF4\u7269\u54C1\u5FC5\u987B\u6309\u4E00\u5B9A\u987A\u5E8F\u653E\u5165\u80CC\u5305\u4E2D\uFF0C\u4F8B\u5982\u4E0B\u9762\u7684 dict \u5C31\u4E0D\u591F\u7EC4\u6210\u5B57\u7B26\u4E32 &quot;leetcode&quot;\uFF1A</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>[&quot;lee&quot;, &quot;tc&quot;, &quot;cod&quot;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6C42\u89E3\u987A\u5E8F\u7684\u5B8C\u5168\u80CC\u5305\u95EE\u9898\u65F6\uFF0C\u5BF9\u7269\u54C1\u7684\u8FED\u4EE3\u5E94\u8BE5\u653E\u5728\u6700\u91CC\u5C42\uFF0C\u5BF9\u80CC\u5305\u7684\u8FED\u4EE3\u653E\u5728\u5916\u5C42\uFF0C\u53EA\u6709\u8FD9\u6837\u624D\u80FD\u8BA9\u7269\u54C1\u6309\u4E00\u5B9A\u987A\u5E8F\u653E\u5165\u80CC\u5305\u4E2D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">wordBreak</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> wordDict<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> word <span class="token operator">:</span> wordDict<span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">// \u5BF9\u7269\u54C1\u7684\u8FED\u4EE3\u5E94\u8BE5\u653E\u5728\u6700\u91CC\u5C42</span>
            <span class="token keyword">int</span> len <span class="token operator">=</span> word<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>len <span class="token operator">&lt;=</span> i <span class="token operator">&amp;&amp;</span> word<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>i <span class="token operator">-</span> len<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">||</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> len<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-\u7EC4\u5408\u603B\u548C" tabindex="-1"><a class="header-anchor" href="#_7-\u7EC4\u5408\u603B\u548C" aria-hidden="true">#</a> 7. \u7EC4\u5408\u603B\u548C</h3><p>377. Combination Sum IV (Medium)</p>`,8),As={href:"https://leetcode.com/problems/combination-sum-iv/description/",target:"_blank",rel:"noopener noreferrer"},xs=s("Leetcode"),Bs=s(" / "),qs={href:"https://leetcode-cn.com/problems/combination-sum-iv/description/",target:"_blank",rel:"noopener noreferrer"},Ss=s("\u529B\u6263"),Cs=t(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>nums = [1, 2, 3]
target = 4

The possible combination ways are:
(1, 1, 1, 1)
(1, 1, 2)
(1, 2, 1)
(1, 3)
(2, 1, 1)
(2, 2)
(3, 1)

Note that different sequences are counted as different combinations.

Therefore the output is 7.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D89\u53CA\u987A\u5E8F\u7684\u5B8C\u5168\u80CC\u5305\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">combinationSum4</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> nums<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> maximum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>target <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    maximum<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> target<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            maximum<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> maximum<span class="token punctuation">[</span>i <span class="token operator">-</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> maximum<span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u80A1\u7968\u4EA4\u6613" tabindex="-1"><a class="header-anchor" href="#\u80A1\u7968\u4EA4\u6613" aria-hidden="true">#</a> \u80A1\u7968\u4EA4\u6613</h2><h3 id="_1-\u9700\u8981\u51B7\u5374\u671F\u7684\u80A1\u7968\u4EA4\u6613" tabindex="-1"><a class="header-anchor" href="#_1-\u9700\u8981\u51B7\u5374\u671F\u7684\u80A1\u7968\u4EA4\u6613" aria-hidden="true">#</a> 1. \u9700\u8981\u51B7\u5374\u671F\u7684\u80A1\u7968\u4EA4\u6613</h3><p>309. Best Time to Buy and Sell Stock with Cooldown(Medium)</p>`,6),Ms={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/description/",target:"_blank",rel:"noopener noreferrer"},Ns=s("Leetcode"),Ls=s(" / "),Ds={href:"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/description/",target:"_blank",rel:"noopener noreferrer"},Fs=s("\u529B\u6263"),Is=t(`<p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u4EA4\u6613\u4E4B\u540E\u9700\u8981\u6709\u4E00\u5929\u7684\u51B7\u5374\u65F6\u95F4\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ffd96b99-8009-487c-8e98-11c9d44ef14f.png&quot; width=&quot;300px&quot;&gt;</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxProfit</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> prices<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>prices <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> prices<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span> prices<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sell <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    s1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> buy<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>prices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    sell<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> s2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        buy<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> s2<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        s1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>buy<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> s1<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sell<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>buy<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> s1<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        s2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>s2<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sell<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>sell<span class="token punctuation">[</span><span class="token class-name">N</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> s2<span class="token punctuation">[</span><span class="token class-name">N</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u9700\u8981\u4EA4\u6613\u8D39\u7528\u7684\u80A1\u7968\u4EA4\u6613" tabindex="-1"><a class="header-anchor" href="#_2-\u9700\u8981\u4EA4\u6613\u8D39\u7528\u7684\u80A1\u7968\u4EA4\u6613" aria-hidden="true">#</a> 2. \u9700\u8981\u4EA4\u6613\u8D39\u7528\u7684\u80A1\u7968\u4EA4\u6613</h3><p>714. Best Time to Buy and Sell Stock with Transaction Fee (Medium)</p>`,5),Ps={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/description/",target:"_blank",rel:"noopener noreferrer"},Os=s("Leetcode"),Ws=s(" / "),Ts={href:"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/description/",target:"_blank",rel:"noopener noreferrer"},zs=s("\u529B\u6263"),Vs=t(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input: prices = [1, 3, 2, 8, 4, 9], fee = 2
Output: 8
Explanation: The maximum profit can be achieved by:
Buying at prices[0] = 1
Selling at prices[3] = 8
Buying at prices[4] = 4
Selling at prices[5] = 9
The total profit is ((8 - 1) - 2) + ((9 - 4) - 2) = 8.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u6BCF\u4EA4\u6613\u4E00\u6B21\uFF0C\u90FD\u8981\u652F\u4ED8\u4E00\u5B9A\u7684\u8D39\u7528\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1e2c588c-72b7-445e-aacb-d55dc8a88c29.png&quot; width=&quot;300px&quot;&gt;</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxProfit</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> prices<span class="token punctuation">,</span> <span class="token keyword">int</span> fee<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span> prices<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sell <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    s1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> buy<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>prices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    sell<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> s2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        buy<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>sell<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> s2<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        s1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>buy<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> s1<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sell<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>buy<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> s1<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> fee <span class="token operator">+</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        s2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>s2<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sell<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>sell<span class="token punctuation">[</span><span class="token class-name">N</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> s2<span class="token punctuation">[</span><span class="token class-name">N</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u53EA\u80FD\u8FDB\u884C\u4E24\u6B21\u7684\u80A1\u7968\u4EA4\u6613" tabindex="-1"><a class="header-anchor" href="#_3-\u53EA\u80FD\u8FDB\u884C\u4E24\u6B21\u7684\u80A1\u7968\u4EA4\u6613" aria-hidden="true">#</a> 3. \u53EA\u80FD\u8FDB\u884C\u4E24\u6B21\u7684\u80A1\u7968\u4EA4\u6613</h3><p>123. Best Time to Buy and Sell Stock III (Hard)</p>`,6),Rs={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/description/",target:"_blank",rel:"noopener noreferrer"},Hs=s("Leetcode"),Us=s(" / "),Gs={href:"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iii/description/",target:"_blank",rel:"noopener noreferrer"},Ks=s("\u529B\u6263"),Qs=t(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxProfit</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> prices<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> firstBuy <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MIN_VALUE<span class="token punctuation">,</span> firstSell <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> secondBuy <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MIN_VALUE<span class="token punctuation">,</span> secondSell <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> curPrice <span class="token operator">:</span> prices<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>firstBuy <span class="token operator">&lt;</span> <span class="token operator">-</span>curPrice<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            firstBuy <span class="token operator">=</span> <span class="token operator">-</span>curPrice<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>firstSell <span class="token operator">&lt;</span> firstBuy <span class="token operator">+</span> curPrice<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            firstSell <span class="token operator">=</span> firstBuy <span class="token operator">+</span> curPrice<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>secondBuy <span class="token operator">&lt;</span> firstSell <span class="token operator">-</span> curPrice<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            secondBuy <span class="token operator">=</span> firstSell <span class="token operator">-</span> curPrice<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>secondSell <span class="token operator">&lt;</span> secondBuy <span class="token operator">+</span> curPrice<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            secondSell <span class="token operator">=</span> secondBuy <span class="token operator">+</span> curPrice<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> secondSell<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-\u53EA\u80FD\u8FDB\u884C-k-\u6B21\u7684\u80A1\u7968\u4EA4\u6613" tabindex="-1"><a class="header-anchor" href="#_4-\u53EA\u80FD\u8FDB\u884C-k-\u6B21\u7684\u80A1\u7968\u4EA4\u6613" aria-hidden="true">#</a> 4. \u53EA\u80FD\u8FDB\u884C k \u6B21\u7684\u80A1\u7968\u4EA4\u6613</h3><p>188. Best Time to Buy and Sell Stock IV (Hard)</p>`,3),Xs={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/description/",target:"_blank",rel:"noopener noreferrer"},Ys=s("Leetcode"),Zs=s(" / "),Js={href:"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iv/description/",target:"_blank",rel:"noopener noreferrer"},$s=s("\u529B\u6263"),na=t(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxProfit</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> prices<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> prices<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&gt;=</span> n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">// \u8FD9\u79CD\u60C5\u51B5\u4E0B\u8BE5\u95EE\u9898\u9000\u5316\u4E3A\u666E\u901A\u7684\u80A1\u7968\u4EA4\u6613\u95EE\u9898</span>
        <span class="token keyword">int</span> maxProfit <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> prices<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                maxProfit <span class="token operator">+=</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> prices<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> maxProfit<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> maxProfit <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> k<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> localMax <span class="token operator">=</span> maxProfit<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> prices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            maxProfit<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>maxProfit<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> prices<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> localMax<span class="token punctuation">)</span><span class="token punctuation">;</span>
            localMax <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>localMax<span class="token punctuation">,</span> maxProfit<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">-</span> prices<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> maxProfit<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5B57\u7B26\u4E32\u7F16\u8F91" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u7F16\u8F91" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u7F16\u8F91</h2><h3 id="_1-\u5220\u9664\u4E24\u4E2A\u5B57\u7B26\u4E32\u7684\u5B57\u7B26\u4F7F\u5B83\u4EEC\u76F8\u7B49" tabindex="-1"><a class="header-anchor" href="#_1-\u5220\u9664\u4E24\u4E2A\u5B57\u7B26\u4E32\u7684\u5B57\u7B26\u4F7F\u5B83\u4EEC\u76F8\u7B49" aria-hidden="true">#</a> 1. \u5220\u9664\u4E24\u4E2A\u5B57\u7B26\u4E32\u7684\u5B57\u7B26\u4F7F\u5B83\u4EEC\u76F8\u7B49</h3><p>583. Delete Operation for Two Strings (Medium)</p>`,4),sa={href:"https://leetcode.com/problems/delete-operation-for-two-strings/description/",target:"_blank",rel:"noopener noreferrer"},aa=s("Leetcode"),pa=s(" / "),ta={href:"https://leetcode-cn.com/problems/delete-operation-for-two-strings/description/",target:"_blank",rel:"noopener noreferrer"},ea=s("\u529B\u6263"),oa=t(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input: &quot;sea&quot;, &quot;eat&quot;
Output: 2
Explanation: You need one step to make &quot;sea&quot; to &quot;ea&quot; and another step to make &quot;eat&quot; to &quot;ea&quot;.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u8F6C\u6362\u4E3A\u6C42\u4E24\u4E2A\u5B57\u7B26\u4E32\u7684\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u95EE\u9898\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">minDistance</span><span class="token punctuation">(</span><span class="token class-name">String</span> word1<span class="token punctuation">,</span> <span class="token class-name">String</span> word2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> m <span class="token operator">=</span> word1<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> n <span class="token operator">=</span> word2<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>word1<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> word2<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> m <span class="token operator">+</span> n <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> dp<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u7F16\u8F91\u8DDD\u79BB" tabindex="-1"><a class="header-anchor" href="#_2-\u7F16\u8F91\u8DDD\u79BB" aria-hidden="true">#</a> 2. \u7F16\u8F91\u8DDD\u79BB</h3><p>72. Edit Distance (Hard)</p>`,5),ca={href:"https://leetcode.com/problems/edit-distance/description/",target:"_blank",rel:"noopener noreferrer"},la=s("Leetcode"),ia=s(" / "),ua={href:"https://leetcode-cn.com/problems/edit-distance/description/",target:"_blank",rel:"noopener noreferrer"},ra=s("\u529B\u6263"),ka=t(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Example 1:

Input: word1 = &quot;horse&quot;, word2 = &quot;ros&quot;
Output: 3
Explanation:
horse -&gt; rorse (replace &#39;h&#39; with &#39;r&#39;)
rorse -&gt; rose (remove &#39;r&#39;)
rose -&gt; ros (remove &#39;e&#39;)
Example 2:

Input: word1 = &quot;intention&quot;, word2 = &quot;execution&quot;
Output: 5
Explanation:
intention -&gt; inention (remove &#39;t&#39;)
inention -&gt; enention (replace &#39;i&#39; with &#39;e&#39;)
enention -&gt; exention (replace &#39;n&#39; with &#39;x&#39;)
exention -&gt; exection (replace &#39;n&#39; with &#39;c&#39;)
exection -&gt; execution (insert &#39;u&#39;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u4FEE\u6539\u4E00\u4E2A\u5B57\u7B26\u4E32\u6210\u4E3A\u53E6\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u4F7F\u5F97\u4FEE\u6539\u6B21\u6570\u6700\u5C11\u3002\u4E00\u6B21\u4FEE\u6539\u64CD\u4F5C\u5305\u62EC\uFF1A\u63D2\u5165\u4E00\u4E2A\u5B57\u7B26\u3001\u5220\u9664\u4E00\u4E2A\u5B57\u7B26\u3001\u66FF\u6362\u4E00\u4E2A\u5B57\u7B26\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">minDistance</span><span class="token punctuation">(</span><span class="token class-name">String</span> word1<span class="token punctuation">,</span> <span class="token class-name">String</span> word2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>word1 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> word2 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> m <span class="token operator">=</span> word1<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> n <span class="token operator">=</span> word2<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>word1<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> word2<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u590D\u5236\u7C98\u8D34\u5B57\u7B26" tabindex="-1"><a class="header-anchor" href="#_3-\u590D\u5236\u7C98\u8D34\u5B57\u7B26" aria-hidden="true">#</a> 3. \u590D\u5236\u7C98\u8D34\u5B57\u7B26</h3><p>650. 2 Keys Keyboard (Medium)</p>`,5),da={href:"https://leetcode.com/problems/2-keys-keyboard/description/",target:"_blank",rel:"noopener noreferrer"},ma=s("Leetcode"),va=s(" / "),ba={href:"https://leetcode-cn.com/problems/2-keys-keyboard/description/",target:"_blank",rel:"noopener noreferrer"},ha=s("\u529B\u6263"),wa=t(`<p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u6700\u5F00\u59CB\u53EA\u6709\u4E00\u4E2A\u5B57\u7B26 A\uFF0C\u95EE\u9700\u8981\u591A\u5C11\u6B21\u64CD\u4F5C\u80FD\u591F\u5F97\u5230 n \u4E2A\u5B57\u7B26 A\uFF0C\u6BCF\u6B21\u64CD\u4F5C\u53EF\u4EE5\u590D\u5236\u5F53\u524D\u6240\u6709\u7684\u5B57\u7B26\uFF0C\u6216\u8005\u7C98\u8D34\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: 3
Output: 3
Explanation:
Intitally, we have one character &#39;A&#39;.
In step 1, we use Copy All operation.
In step 2, we use Paste operation to get &#39;AA&#39;.
In step 3, we use Paste operation to get &#39;AAA&#39;.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">minSteps</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> i <span class="token operator">+</span> <span class="token function">minSteps</span><span class="token punctuation">(</span>n <span class="token operator">/</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> n<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">minSteps</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> h <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> h<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> j <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> dp<span class="token punctuation">[</span>i <span class="token operator">/</span> j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function ya(ga,fa){const a=o("ExternalLinkIcon");return c(),l(i,null,[r,n("p",null,[n("a",k,[d,p(a)]),m,n("a",v,[b,p(a)])]),h,n("p",null,[n("a",w,[y,p(a)]),g,n("a",f,[_,p(a)])]),E,n("p",null,[n("a",j,[A,p(a)]),x,n("a",B,[q,p(a)])]),S,n("p",null,[n("a",C,[M,p(a)]),N,n("a",L,[D,p(a)])]),F,n("p",null,[n("a",I,[P,p(a)]),O,n("a",W,[T,p(a)])]),z,n("p",null,[n("a",V,[R,p(a)]),H,n("a",U,[G,p(a)])]),K,n("p",null,[n("a",Q,[X,p(a)]),Y,n("a",Z,[J,p(a)])]),$,n("p",null,[n("a",nn,[sn,p(a)]),an,n("a",pn,[tn,p(a)])]),en,n("p",null,[n("a",on,[cn,p(a)]),ln,n("a",un,[rn,p(a)])]),kn,n("p",null,[n("a",dn,[mn,p(a)]),vn,n("a",bn,[hn,p(a)])]),wn,n("p",null,[n("a",yn,[gn,p(a)]),fn,n("a",_n,[En,p(a)])]),jn,n("p",null,[n("a",An,[xn,p(a)]),Bn,n("a",qn,[Sn,p(a)])]),Cn,n("p",null,[n("a",Mn,[Nn,p(a)]),Ln,n("a",Dn,[Fn,p(a)])]),In,n("p",null,[n("a",Pn,[On,p(a)]),Wn,n("a",Tn,[zn,p(a)])]),Vn,n("p",null,[n("a",Rn,[Hn,p(a)]),Un,n("a",Gn,[Kn,p(a)])]),Qn,n("p",null,[n("a",Xn,[Yn,p(a)]),Zn,n("a",Jn,[$n,p(a)])]),ns,n("p",null,[n("a",ss,[as,p(a)]),ps,n("a",ts,[es,p(a)])]),os,n("p",null,[n("a",cs,[ls,p(a)]),is,n("a",us,[rs,p(a)])]),ks,n("p",null,[n("a",ds,[ms,p(a)]),vs,n("a",bs,[hs,p(a)])]),ws,n("p",null,[n("a",ys,[gs,p(a)]),fs,n("a",_s,[Es,p(a)])]),js,n("p",null,[n("a",As,[xs,p(a)]),Bs,n("a",qs,[Ss,p(a)])]),Cs,n("p",null,[n("a",Ms,[Ns,p(a)]),Ls,n("a",Ds,[Fs,p(a)])]),Is,n("p",null,[n("a",Ps,[Os,p(a)]),Ws,n("a",Ts,[zs,p(a)])]),Vs,n("p",null,[n("a",Rs,[Hs,p(a)]),Us,n("a",Gs,[Ks,p(a)])]),Qs,n("p",null,[n("a",Xs,[Ys,p(a)]),Zs,n("a",Js,[$s,p(a)])]),na,n("p",null,[n("a",sa,[aa,p(a)]),pa,n("a",ta,[ea,p(a)])]),oa,n("p",null,[n("a",ca,[la,p(a)]),ia,n("a",ua,[ra,p(a)])]),ka,n("p",null,[n("a",da,[ma,p(a)]),va,n("a",ba,[ha,p(a)])]),wa],64)}var ja=e(u,[["render",ya],["__file","Leetcode \u9898\u89E3 - \u52A8\u6001\u89C4\u5212.html.vue"]]);export{ja as default};
