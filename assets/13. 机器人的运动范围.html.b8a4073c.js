import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,o,c as e,a as n,b as c,F as l,d as s,e as u}from"./app.d02315a2.js";const i={},k=n("h1",{id:"_13-\u673A\u5668\u4EBA\u7684\u8FD0\u52A8\u8303\u56F4",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_13-\u673A\u5668\u4EBA\u7684\u8FD0\u52A8\u8303\u56F4","aria-hidden":"true"},"#"),s(" 13. \u673A\u5668\u4EBA\u7684\u8FD0\u52A8\u8303\u56F4")],-1),r={href:"https://www.nowcoder.com/practice/6e5207314b5241fb83f2329e89fdecc8?tpId=13&tqId=11219&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking&from=cyc_github",target:"_blank",rel:"noopener noreferrer"},d=s("\u725B\u5BA2\u7F51"),v=u(`<h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u5730\u4E0A\u6709\u4E00\u4E2A m \u884C\u548C n \u5217\u7684\u65B9\u683C\u3002\u4E00\u4E2A\u673A\u5668\u4EBA\u4ECE\u5750\u6807 (0, 0) \u7684\u683C\u5B50\u5F00\u59CB\u79FB\u52A8\uFF0C\u6BCF\u4E00\u6B21\u53EA\u80FD\u5411\u5DE6\u53F3\u4E0A\u4E0B\u56DB\u4E2A\u65B9\u5411\u79FB\u52A8\u4E00\u683C\uFF0C\u4F46\u662F\u4E0D\u80FD\u8FDB\u5165\u884C\u5750\u6807\u548C\u5217\u5750\u6807\u7684\u6570\u4F4D\u4E4B\u548C\u5927\u4E8E k \u7684\u683C\u5B50\u3002</p><p>\u4F8B\u5982\uFF0C\u5F53 k \u4E3A 18 \u65F6\uFF0C\u673A\u5668\u4EBA\u80FD\u591F\u8FDB\u5165\u65B9\u683C (35,37)\uFF0C\u56E0\u4E3A 3+5+3+7=18\u3002\u4F46\u662F\uFF0C\u5B83\u4E0D\u80FD\u8FDB\u5165\u65B9\u683C (35,38)\uFF0C\u56E0\u4E3A 3+5+3+8=19\u3002\u8BF7\u95EE\u8BE5\u673A\u5668\u4EBA\u80FD\u591F\u8FBE\u5230\u591A\u5C11\u4E2A\u683C\u5B50\uFF1F</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u4F7F\u7528\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\uFF08Depth First Search\uFF0CDFS\uFF09\u65B9\u6CD5\u8FDB\u884C\u6C42\u89E3\u3002\u56DE\u6EAF\u662F\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u7684\u4E00\u79CD\u7279\u4F8B\uFF0C\u5B83\u5728\u4E00\u6B21\u641C\u7D22\u8FC7\u7A0B\u4E2D\u9700\u8981\u8BBE\u7F6E\u4E00\u4E9B\u672C\u6B21\u641C\u7D22\u8FC7\u7A0B\u7684\u5C40\u90E8\u72B6\u6001\uFF0C\u5E76\u5728\u672C\u6B21\u641C\u7D22\u7ED3\u675F\u4E4B\u540E\u6E05\u9664\u72B6\u6001\u3002\u800C\u666E\u901A\u7684\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u5E76\u4E0D\u9700\u8981\u4F7F\u7528\u8FD9\u4E9B\u5C40\u90E8\u72B6\u6001\uFF0C\u867D\u7136\u8FD8\u662F\u6709\u53EF\u80FD\u8BBE\u7F6E\u4E00\u4E9B\u5168\u5C40\u72B6\u6001\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> next <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> rows<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> cols<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> threshold<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> digitSum<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">movingCount</span><span class="token punctuation">(</span><span class="token keyword">int</span> threshold<span class="token punctuation">,</span> <span class="token keyword">int</span> rows<span class="token punctuation">,</span> <span class="token keyword">int</span> cols<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>rows <span class="token operator">=</span> rows<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>cols <span class="token operator">=</span> cols<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>threshold <span class="token operator">=</span> threshold<span class="token punctuation">;</span>
    <span class="token function">initDigitSum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> marked <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>rows<span class="token punctuation">]</span><span class="token punctuation">[</span>cols<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">dfs</span><span class="token punctuation">(</span>marked<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> cnt<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> marked<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token keyword">int</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> r <span class="token operator">&gt;=</span> rows <span class="token operator">||</span> c <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> c <span class="token operator">&gt;=</span> cols <span class="token operator">||</span> marked<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    marked<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>digitSum<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>threshold<span class="token punctuation">)</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    cnt<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> n <span class="token operator">:</span> next<span class="token punctuation">)</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>marked<span class="token punctuation">,</span> r <span class="token operator">+</span> n<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c <span class="token operator">+</span> n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initDigitSum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> digitSumOne <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>rows<span class="token punctuation">,</span> cols<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> digitSumOne<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            digitSumOne<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> n <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>
            n <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>digitSum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>rows<span class="token punctuation">]</span><span class="token punctuation">[</span>cols<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rows<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cols<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>digitSum<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> digitSumOne<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> digitSumOne<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function m(b,w){const a=t("ExternalLinkIcon");return o(),e(l,null,[k,n("p",null,[n("a",r,[d,c(a)])]),v],64)}var _=p(i,[["render",m],["__file","13. \u673A\u5668\u4EBA\u7684\u8FD0\u52A8\u8303\u56F4.html.vue"]]);export{_ as default};
