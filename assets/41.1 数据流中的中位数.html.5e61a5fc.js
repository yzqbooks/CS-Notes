import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{r as e,o as p,c as o,a as n,b as c,F as l,d as s,e as i}from"./app.d02315a2.js";const u={},r=n("h1",{id:"_41-1-\u6570\u636E\u6D41\u4E2D\u7684\u4E2D\u4F4D\u6570",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_41-1-\u6570\u636E\u6D41\u4E2D\u7684\u4E2D\u4F4D\u6570","aria-hidden":"true"},"#"),s(" 41.1 \u6570\u636E\u6D41\u4E2D\u7684\u4E2D\u4F4D\u6570")],-1),k=n("h2",{id:"\u9898\u76EE\u94FE\u63A5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE\u94FE\u63A5","aria-hidden":"true"},"#"),s(" \u9898\u76EE\u94FE\u63A5")],-1),d={href:"https://www.nowcoder.com/practice/9be0172896bd43948f8a32fb954e1be1?tpId=13&tqId=11216&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking&from=cyc_github",target:"_blank",rel:"noopener noreferrer"},v=s("\u725B\u5BA2\u7F51"),m=i(`<h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u5982\u4F55\u5F97\u5230\u4E00\u4E2A\u6570\u636E\u6D41\u4E2D\u7684\u4E2D\u4F4D\u6570\uFF1F\u5982\u679C\u4ECE\u6570\u636E\u6D41\u4E2D\u8BFB\u51FA\u5947\u6570\u4E2A\u6570\u503C\uFF0C\u90A3\u4E48\u4E2D\u4F4D\u6570\u5C31\u662F\u6240\u6709\u6570\u503C\u6392\u5E8F\u4E4B\u540E\u4F4D\u4E8E\u4E2D\u95F4\u7684\u6570\u503C\u3002\u5982\u679C\u4ECE\u6570\u636E\u6D41\u4E2D\u8BFB\u51FA\u5076\u6570\u4E2A\u6570\u503C\uFF0C\u90A3\u4E48\u4E2D\u4F4D\u6570\u5C31\u662F\u6240\u6709\u6570\u503C\u6392\u5E8F\u4E4B\u540E\u4E2D\u95F4\u4E24\u4E2A\u6570\u7684\u5E73\u5747\u503C\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">/* \u5927\u9876\u5806\uFF0C\u5B58\u50A8\u5DE6\u534A\u8FB9\u5143\u7D20 */</span>
<span class="token keyword">private</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> o2 <span class="token operator">-</span> o1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/* \u5C0F\u9876\u5806\uFF0C\u5B58\u50A8\u53F3\u534A\u8FB9\u5143\u7D20\uFF0C\u5E76\u4E14\u53F3\u534A\u8FB9\u5143\u7D20\u90FD\u5927\u4E8E\u5DE6\u534A\u8FB9 */</span>
<span class="token keyword">private</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/* \u5F53\u524D\u6570\u636E\u6D41\u8BFB\u5165\u7684\u5143\u7D20\u4E2A\u6570 */</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">Insert</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* \u63D2\u5165\u8981\u4FDD\u8BC1\u4E24\u4E2A\u5806\u5B58\u4E8E\u5E73\u8861\u72B6\u6001 */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">N</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/* N \u4E3A\u5076\u6570\u7684\u60C5\u51B5\u4E0B\u63D2\u5165\u5230\u53F3\u534A\u8FB9\u3002
         * \u56E0\u4E3A\u53F3\u534A\u8FB9\u5143\u7D20\u90FD\u8981\u5927\u4E8E\u5DE6\u534A\u8FB9\uFF0C\u4F46\u662F\u65B0\u63D2\u5165\u7684\u5143\u7D20\u4E0D\u4E00\u5B9A\u6BD4\u5DE6\u534A\u8FB9\u5143\u7D20\u6765\u7684\u5927\uFF0C
         * \u56E0\u6B64\u9700\u8981\u5148\u5C06\u5143\u7D20\u63D2\u5165\u5DE6\u534A\u8FB9\uFF0C\u7136\u540E\u5229\u7528\u5DE6\u534A\u8FB9\u4E3A\u5927\u9876\u5806\u7684\u7279\u70B9\uFF0C\u53D6\u51FA\u5806\u9876\u5143\u7D20\u5373\u4E3A\u6700\u5927\u5143\u7D20\uFF0C\u6B64\u65F6\u63D2\u5165\u53F3\u534A\u8FB9 */</span>
        left<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
        right<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>left<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        right<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
        left<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>right<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">N</span><span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">Double</span> <span class="token class-name">GetMedian</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">N</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>left<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> right<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2.0</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span> right<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function b(h,_){const a=e("ExternalLinkIcon");return p(),o(l,null,[r,k,n("p",null,[n("a",d,[v,c(a)])]),m],64)}var w=t(u,[["render",b],["__file","41.1 \u6570\u636E\u6D41\u4E2D\u7684\u4E2D\u4F4D\u6570.html.vue"]]);export{w as default};
