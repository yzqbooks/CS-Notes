import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as e,o as t,c as o,a as n,b as c,F as i,d as s,e as l}from"./app.d02315a2.js";const u={},r=n("h1",{id:"_10-1-\u6590\u6CE2\u90A3\u5951\u6570\u5217",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_10-1-\u6590\u6CE2\u90A3\u5951\u6570\u5217","aria-hidden":"true"},"#"),s(" 10.1 \u6590\u6CE2\u90A3\u5951\u6570\u5217")],-1),k=n("h2",{id:"\u9898\u76EE\u94FE\u63A5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE\u94FE\u63A5","aria-hidden":"true"},"#"),s(" \u9898\u76EE\u94FE\u63A5")],-1),d={href:"https://www.nowcoder.com/practice/c6c7742f5ba7442aada113136ddea0c3?tpId=13&tqId=11160&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking&from=cyc_github",target:"_blank",rel:"noopener noreferrer"},b=s("\u725B\u5BA2\u7F51"),v=l(`<h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u6C42\u6590\u6CE2\u90A3\u5951\u6570\u5217\u7684\u7B2C n \u9879\uFF0Cn &lt;= 39\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/45be9587-6069-4ab7-b9ac-840db1a53744.jpg&quot; width=&quot;330px&quot;&gt;</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u5982\u679C\u4F7F\u7528\u9012\u5F52\u6C42\u89E3\uFF0C\u4F1A\u91CD\u590D\u8BA1\u7B97\u4E00\u4E9B\u5B50\u95EE\u9898\u3002\u4F8B\u5982\uFF0C\u8BA1\u7B97 f(4) \u9700\u8981\u8BA1\u7B97 f(3) \u548C f(2)\uFF0C\u8BA1\u7B97 f(3) \u9700\u8981\u8BA1\u7B97 f(2) \u548C f(1)\uFF0C\u53EF\u4EE5\u770B\u5230 f(2) \u88AB\u91CD\u590D\u8BA1\u7B97\u4E86\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/c13e2a3d-b01c-4a08-a69b-db2c4e821e09.png&quot; width=&quot;350px)</p><p>\u9012\u5F52\u662F\u5C06\u4E00\u4E2A\u95EE\u9898\u5212\u5206\u6210\u591A\u4E2A\u5B50\u95EE\u9898\u6C42\u89E3\uFF0C\u52A8\u6001\u89C4\u5212\u4E5F\u662F\u5982\u6B64\uFF0C\u4F46\u662F\u52A8\u6001\u89C4\u5212\u4F1A\u628A\u5B50\u95EE\u9898\u7684\u89E3\u7F13\u5B58\u8D77\u6765\uFF0C\u4ECE\u800C\u907F\u514D\u91CD\u590D\u6C42\u89E3\u5B50\u95EE\u9898\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">Fibonacci</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> n<span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fib <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    fib<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        fib<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> fib<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> fib<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> fib<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8003\u8651\u5230\u7B2C i \u9879\u53EA\u4E0E\u7B2C i-1 \u548C\u7B2C i-2 \u9879\u6709\u5173\uFF0C\u56E0\u6B64\u53EA\u9700\u8981\u5B58\u50A8\u524D\u4E24\u9879\u7684\u503C\u5C31\u80FD\u6C42\u89E3\u7B2C i \u9879\uFF0C\u4ECE\u800C\u5C06\u7A7A\u95F4\u590D\u6742\u5EA6\u7531 O(N) \u964D\u4F4E\u4E3A O(1)\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">Fibonacci</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> n<span class="token punctuation">;</span>
    <span class="token keyword">int</span> pre2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> pre1 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> fib <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fib <span class="token operator">=</span> pre2 <span class="token operator">+</span> pre1<span class="token punctuation">;</span>
        pre2 <span class="token operator">=</span> pre1<span class="token punctuation">;</span>
        pre1 <span class="token operator">=</span> fib<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> fib<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E8E\u5F85\u6C42\u89E3\u7684 n \u5C0F\u4E8E 40\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5C06\u524D 40 \u9879\u7684\u7ED3\u679C\u5148\u8FDB\u884C\u8BA1\u7B97\uFF0C\u4E4B\u540E\u5C31\u80FD\u4EE5 O(1) \u65F6\u95F4\u590D\u6742\u5EA6\u5F97\u5230\u7B2C n \u9879\u7684\u503C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fib <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Solution</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fib<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> fib<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            fib<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> fib<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> fib<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">Fibonacci</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> fib<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12);function m(f,w){const a=e("ExternalLinkIcon");return t(),o(i,null,[r,k,n("p",null,[n("a",d,[b,c(a)])]),v],64)}var _=p(u,[["render",m],["__file","10.1 \u6590\u6CE2\u90A3\u5951\u6570\u5217.html.vue"]]);export{_ as default};
