import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{e as s}from"./app.5ce5af5d.js";const a={},p=s(`<h1 id="\u7B97\u6CD5-\u7B97\u6CD5\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5-\u7B97\u6CD5\u5206\u6790" aria-hidden="true">#</a> \u7B97\u6CD5 - \u7B97\u6CD5\u5206\u6790</h1><ul><li><a href="#%E7%AE%97%E6%B3%95---%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90">\u7B97\u6CD5 - \u7B97\u6CD5\u5206\u6790</a><ul><li><a href="#%E6%95%B0%E5%AD%A6%E6%A8%A1%E5%9E%8B">\u6570\u5B66\u6A21\u578B</a><ul><li><a href="#1-%E8%BF%91%E4%BC%BC">1. \u8FD1\u4F3C</a></li><li><a href="#2-%E5%A2%9E%E9%95%BF%E6%95%B0%E9%87%8F%E7%BA%A7">2. \u589E\u957F\u6570\u91CF\u7EA7</a></li><li><a href="#3-%E5%86%85%E5%BE%AA%E7%8E%AF">3. \u5185\u5FAA\u73AF</a></li><li><a href="#4-%E6%88%90%E6%9C%AC%E6%A8%A1%E5%9E%8B">4. \u6210\u672C\u6A21\u578B</a></li></ul></li><li><a href="#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9">\u6CE8\u610F\u4E8B\u9879</a><ul><li><a href="#1-%E5%A4%A7%E5%B8%B8%E6%95%B0">1. \u5927\u5E38\u6570</a></li><li><a href="#2-%E7%BC%93%E5%AD%98">2. \u7F13\u5B58</a></li><li><a href="#3-%E5%AF%B9%E6%9C%80%E5%9D%8F%E6%83%85%E5%86%B5%E4%B8%8B%E7%9A%84%E6%80%A7%E8%83%BD%E7%9A%84%E4%BF%9D%E8%AF%81">3. \u5BF9\u6700\u574F\u60C5\u51B5\u4E0B\u7684\u6027\u80FD\u7684\u4FDD\u8BC1</a></li><li><a href="#4-%E9%9A%8F%E6%9C%BA%E5%8C%96%E7%AE%97%E6%B3%95">4. \u968F\u673A\u5316\u7B97\u6CD5</a></li><li><a href="#5-%E5%9D%87%E6%91%8A%E5%88%86%E6%9E%90">5. \u5747\u644A\u5206\u6790</a></li></ul></li><li><a href="#threesum">ThreeSum</a><ul><li><a href="#1-threesumslow">1. ThreeSumSlow</a></li><li><a href="#2-threesumbinarysearch">2. ThreeSumBinarySearch</a></li><li><a href="#3-threesumtwopointer">3. ThreeSumTwoPointer</a></li></ul></li><li><a href="#%E5%80%8D%E7%8E%87%E5%AE%9E%E9%AA%8C">\u500D\u7387\u5B9E\u9A8C</a></li></ul></li></ul><h2 id="\u6570\u5B66\u6A21\u578B" tabindex="-1"><a class="header-anchor" href="#\u6570\u5B66\u6A21\u578B" aria-hidden="true">#</a> \u6570\u5B66\u6A21\u578B</h2><h3 id="_1-\u8FD1\u4F3C" tabindex="-1"><a class="header-anchor" href="#_1-\u8FD1\u4F3C" aria-hidden="true">#</a> 1. \u8FD1\u4F3C</h3><p>N<sup>3</sup>/6-N<sup>2</sup>/2+N/3 ~ N<sup>3</sup>/6\u3002\u4F7F\u7528 ~f(N) \u6765\u8868\u793A\u6240\u6709\u968F\u7740 N \u7684\u589E\u5927\u9664\u4EE5 f(N) \u7684\u7ED3\u679C\u8D8B\u8FD1\u4E8E 1 \u7684\u51FD\u6570\u3002</p><h3 id="_2-\u589E\u957F\u6570\u91CF\u7EA7" tabindex="-1"><a class="header-anchor" href="#_2-\u589E\u957F\u6570\u91CF\u7EA7" aria-hidden="true">#</a> 2. \u589E\u957F\u6570\u91CF\u7EA7</h3><p>N<sup>3</sup>/6-N<sup>2</sup>/2+N/3 \u7684\u589E\u957F\u6570\u91CF\u7EA7\u4E3A O(N<sup>3</sup>)\u3002\u589E\u957F\u6570\u91CF\u7EA7\u5C06\u7B97\u6CD5\u4E0E\u5B83\u7684\u5177\u4F53\u5B9E\u73B0\u9694\u79BB\u5F00\u6765\uFF0C\u4E00\u4E2A\u7B97\u6CD5\u7684\u589E\u957F\u6570\u91CF\u7EA7\u4E3A O(N<sup>3</sup>) \u4E0E\u5B83\u662F\u5426\u7528 Java \u5B9E\u73B0\uFF0C\u662F\u5426\u8FD0\u884C\u4E8E\u7279\u5B9A\u8BA1\u7B97\u673A\u4E0A\u65E0\u5173\u3002</p><h3 id="_3-\u5185\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#_3-\u5185\u5FAA\u73AF" aria-hidden="true">#</a> 3. \u5185\u5FAA\u73AF</h3><p>\u6267\u884C\u6700\u9891\u7E41\u7684\u6307\u4EE4\u51B3\u5B9A\u4E86\u7A0B\u5E8F\u6267\u884C\u7684\u603B\u65F6\u95F4\uFF0C\u628A\u8FD9\u4E9B\u6307\u4EE4\u79F0\u4E3A\u7A0B\u5E8F\u7684\u5185\u5FAA\u73AF\u3002</p><h3 id="_4-\u6210\u672C\u6A21\u578B" tabindex="-1"><a class="header-anchor" href="#_4-\u6210\u672C\u6A21\u578B" aria-hidden="true">#</a> 4. \u6210\u672C\u6A21\u578B</h3><p>\u4F7F\u7528\u6210\u672C\u6A21\u578B\u6765\u8BC4\u4F30\u7B97\u6CD5\uFF0C\u4F8B\u5982\u6570\u7EC4\u7684\u8BBF\u95EE\u6B21\u6570\u5C31\u662F\u4E00\u79CD\u6210\u672C\u6A21\u578B\u3002</p><h2 id="\u6CE8\u610F\u4E8B\u9879" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u610F\u4E8B\u9879" aria-hidden="true">#</a> \u6CE8\u610F\u4E8B\u9879</h2><h3 id="_1-\u5927\u5E38\u6570" tabindex="-1"><a class="header-anchor" href="#_1-\u5927\u5E38\u6570" aria-hidden="true">#</a> 1. \u5927\u5E38\u6570</h3><p>\u5728\u6C42\u8FD1\u4F3C\u65F6\uFF0C\u5982\u679C\u4F4E\u7EA7\u9879\u7684\u5E38\u6570\u7CFB\u6570\u5F88\u5927\uFF0C\u90A3\u4E48\u8FD1\u4F3C\u7684\u7ED3\u679C\u662F\u9519\u8BEF\u7684\u3002</p><h3 id="_2-\u7F13\u5B58" tabindex="-1"><a class="header-anchor" href="#_2-\u7F13\u5B58" aria-hidden="true">#</a> 2. \u7F13\u5B58</h3><p>\u8BA1\u7B97\u673A\u7CFB\u7EDF\u4F1A\u4F7F\u7528\u7F13\u5B58\u6280\u672F\u6765\u7EC4\u7EC7\u5185\u5B58\uFF0C\u8BBF\u95EE\u6570\u7EC4\u76F8\u90BB\u7684\u5143\u7D20\u4F1A\u6BD4\u8BBF\u95EE\u4E0D\u76F8\u90BB\u7684\u5143\u7D20\u5FEB\u5F88\u591A\u3002</p><h3 id="_3-\u5BF9\u6700\u574F\u60C5\u51B5\u4E0B\u7684\u6027\u80FD\u7684\u4FDD\u8BC1" tabindex="-1"><a class="header-anchor" href="#_3-\u5BF9\u6700\u574F\u60C5\u51B5\u4E0B\u7684\u6027\u80FD\u7684\u4FDD\u8BC1" aria-hidden="true">#</a> 3. \u5BF9\u6700\u574F\u60C5\u51B5\u4E0B\u7684\u6027\u80FD\u7684\u4FDD\u8BC1</h3><p>\u5728\u6838\u53CD\u5E94\u5806\u3001\u5FC3\u810F\u8D77\u640F\u5668\u6216\u8005\u5239\u8F66\u63A7\u5236\u5668\u4E2D\u7684\u8F6F\u4EF6\uFF0C\u6700\u574F\u60C5\u51B5\u4E0B\u7684\u6027\u80FD\u662F\u5341\u5206\u91CD\u8981\u7684\u3002</p><h3 id="_4-\u968F\u673A\u5316\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#_4-\u968F\u673A\u5316\u7B97\u6CD5" aria-hidden="true">#</a> 4. \u968F\u673A\u5316\u7B97\u6CD5</h3><p>\u901A\u8FC7\u6253\u4E71\u8F93\u5165\uFF0C\u53BB\u9664\u7B97\u6CD5\u5BF9\u8F93\u5165\u7684\u4F9D\u8D56\u3002</p><h3 id="_5-\u5747\u644A\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_5-\u5747\u644A\u5206\u6790" aria-hidden="true">#</a> 5. \u5747\u644A\u5206\u6790</h3><p>\u5C06\u6240\u6709\u64CD\u4F5C\u7684\u603B\u6210\u672C\u9664\u4E8E\u64CD\u4F5C\u603B\u6570\u6765\u5C06\u6210\u672C\u5747\u644A\u3002\u4F8B\u5982\u5BF9\u4E00\u4E2A\u7A7A\u6808\u8FDB\u884C N \u6B21\u8FDE\u7EED\u7684 push() \u8C03\u7528\u9700\u8981\u8BBF\u95EE\u6570\u7EC4\u7684\u6B21\u6570\u4E3A N+4+8+16+...+2N=5N-4\uFF08N \u662F\u5411\u6570\u7EC4\u5199\u5165\u5143\u7D20\u7684\u6B21\u6570\uFF0C\u5176\u4F59\u90FD\u662F\u8C03\u6574\u6570\u7EC4\u5927\u5C0F\u65F6\u8FDB\u884C\u590D\u5236\u9700\u8981\u7684\u8BBF\u95EE\u6570\u7EC4\u6B21\u6570\uFF09\uFF0C\u5747\u644A\u540E\u8BBF\u95EE\u6570\u7EC4\u7684\u5E73\u5747\u6B21\u6570\u4E3A\u5E38\u6570\u3002</p><h2 id="threesum" tabindex="-1"><a class="header-anchor" href="#threesum" aria-hidden="true">#</a> ThreeSum</h2><p>ThreeSum \u7528\u4E8E\u7EDF\u8BA1\u4E00\u4E2A\u6570\u7EC4\u4E2D\u548C\u4E3A 0 \u7684\u4E09\u5143\u7EC4\u6570\u91CF\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ThreeSum</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-threesumslow" tabindex="-1"><a class="header-anchor" href="#_1-threesumslow" aria-hidden="true">#</a> 1. ThreeSumSlow</h3><p>\u8BE5\u7B97\u6CD5\u7684\u5185\u5FAA\u73AF\u4E3A <code>if (nums[i] + nums[j] + nums[k] == 0)</code> \u8BED\u53E5\uFF0C\u603B\u5171\u6267\u884C\u7684\u6B21\u6570\u4E3A N(N-1)(N-2) = N<sup>3</sup>/6-N<sup>2</sup>/2+N/3\uFF0C\u56E0\u6B64\u5B83\u7684\u8FD1\u4F3C\u6267\u884C\u6B21\u6570\u4E3A ~N<sup>3</sup>/6\uFF0C\u589E\u957F\u6570\u91CF\u7EA7\u4E3A O(N<sup>3</sup>)\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThreeSumSlow</span> <span class="token keyword">implements</span> <span class="token class-name">ThreeSum</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        cnt<span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> cnt<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-threesumbinarysearch" tabindex="-1"><a class="header-anchor" href="#_2-threesumbinarysearch" aria-hidden="true">#</a> 2. ThreeSumBinarySearch</h3><p>\u5C06\u6570\u7EC4\u8FDB\u884C\u6392\u5E8F\uFF0C\u5BF9\u4E24\u4E2A\u5143\u7D20\u6C42\u548C\uFF0C\u5E76\u7528\u4E8C\u5206\u67E5\u627E\u65B9\u6CD5\u67E5\u627E\u662F\u5426\u5B58\u5728\u8BE5\u548C\u7684\u76F8\u53CD\u6570\uFF0C\u5982\u679C\u5B58\u5728\uFF0C\u5C31\u8BF4\u660E\u5B58\u5728\u548C\u4E3A 0 \u7684\u4E09\u5143\u7EC4\u3002</p><p>\u5E94\u8BE5\u6CE8\u610F\u7684\u662F\uFF0C\u53EA\u6709\u6570\u7EC4\u4E0D\u542B\u6709\u76F8\u540C\u5143\u7D20\u624D\u80FD\u4F7F\u7528\u8FD9\u79CD\u89E3\u6CD5\uFF0C\u5426\u5219\u4E8C\u5206\u67E5\u627E\u7684\u7ED3\u679C\u4F1A\u51FA\u9519\u3002</p><p>\u8BE5\u65B9\u6CD5\u53EF\u4EE5\u5C06 ThreeSum \u7B97\u6CD5\u589E\u957F\u6570\u91CF\u7EA7\u964D\u4F4E\u4E3A O(N<sup>2</sup>logN)\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThreeSumBinarySearch</span> <span class="token keyword">implements</span> <span class="token class-name">ThreeSum</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> target <span class="token operator">=</span> <span class="token operator">-</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token class-name">BinarySearch</span><span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// \u5E94\u8BE5\u6CE8\u610F\u8FD9\u91CC\u7684\u4E0B\u6807\u5FC5\u987B\u5927\u4E8E j\uFF0C\u5426\u5219\u4F1A\u91CD\u590D\u7EDF\u8BA1\u3002</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    cnt<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> cnt<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BinarySearch</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> h <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;=</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> m <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span>h <span class="token operator">-</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">==</span> nums<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> m<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                l <span class="token operator">=</span> m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                h <span class="token operator">=</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-threesumtwopointer" tabindex="-1"><a class="header-anchor" href="#_3-threesumtwopointer" aria-hidden="true">#</a> 3. ThreeSumTwoPointer</h3><p>\u66F4\u6709\u6548\u7684\u65B9\u6CD5\u662F\u5148\u5C06\u6570\u7EC4\u6392\u5E8F\uFF0C\u7136\u540E\u4F7F\u7528\u53CC\u6307\u9488\u8FDB\u884C\u67E5\u627E\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N<sup>2</sup>)\u3002</p><p>\u540C\u6837\u4E0D\u9002\u7528\u4E0E\u6570\u7EC4\u5B58\u5728\u91CD\u590D\u5143\u7D20\u7684\u60C5\u51B5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThreeSumTwoPointer</span> <span class="token keyword">implements</span> <span class="token class-name">ThreeSum</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">N</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> l <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> h <span class="token operator">=</span> <span class="token class-name">N</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> target <span class="token operator">=</span> <span class="token operator">-</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> sum <span class="token operator">=</span> nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>h<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">==</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    cnt<span class="token operator">++</span><span class="token punctuation">;</span>
                    l<span class="token operator">++</span><span class="token punctuation">;</span>
                    h<span class="token operator">--</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&lt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    l<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    h<span class="token operator">--</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> cnt<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u500D\u7387\u5B9E\u9A8C" tabindex="-1"><a class="header-anchor" href="#\u500D\u7387\u5B9E\u9A8C" aria-hidden="true">#</a> \u500D\u7387\u5B9E\u9A8C</h2><p>\u5982\u679C T(N) ~ aN<sup>b</sup>logN\uFF0C\u90A3\u4E48 T(2N)/T(N) ~ 2<sup>b</sup>\u3002</p><p>\u4F8B\u5982\u5BF9\u4E8E\u66B4\u529B\u7684 ThreeSum \u7B97\u6CD5\uFF0C\u8FD1\u4F3C\u65F6\u95F4\u4E3A ~N<sup>3</sup>/6\u3002\u8FDB\u884C\u5982\u4E0B\u5B9E\u9A8C\uFF1A\u591A\u6B21\u8FD0\u884C\u8BE5\u7B97\u6CD5\uFF0C\u6BCF\u6B21\u53D6\u7684 N \u503C\u4E3A\u524D\u4E00\u6B21\u7684\u4E24\u500D\uFF0C\u7EDF\u8BA1\u6BCF\u6B21\u6267\u884C\u7684\u65F6\u95F4\uFF0C\u5E76\u7EDF\u8BA1\u672C\u6B21\u8FD0\u884C\u65F6\u95F4\u4E0E\u524D\u4E00\u6B21\u8FD0\u884C\u65F6\u95F4\u7684\u6BD4\u503C\uFF0C\u5F97\u5230\u5982\u4E0B\u7ED3\u679C\uFF1A</p><table><thead><tr><th style="text-align:center;">N</th><th style="text-align:center;">Time(ms)</th><th style="text-align:center;">Ratio</th></tr></thead><tbody><tr><td style="text-align:center;">500</td><td style="text-align:center;">48</td><td style="text-align:center;">/</td></tr><tr><td style="text-align:center;">1000</td><td style="text-align:center;">320</td><td style="text-align:center;">6.7</td></tr><tr><td style="text-align:center;">2000</td><td style="text-align:center;">555</td><td style="text-align:center;">1.7</td></tr><tr><td style="text-align:center;">4000</td><td style="text-align:center;">4105</td><td style="text-align:center;">7.4</td></tr><tr><td style="text-align:center;">8000</td><td style="text-align:center;">33575</td><td style="text-align:center;">8.2</td></tr><tr><td style="text-align:center;">16000</td><td style="text-align:center;">268909</td><td style="text-align:center;">8.0</td></tr></tbody></table><p>\u53EF\u4EE5\u770B\u5230\uFF0CT(2N)/T(N) ~ 2<sup>3</sup>\uFF0C\u56E0\u6B64\u53EF\u4EE5\u786E\u5B9A T(N) ~ aN<sup>3</sup>logN\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RatioTest</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> loopTimes <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> preTime <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>loopTimes<span class="token operator">--</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token class-name">StopWatch</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">ThreeSum</span> threeSum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreeSumSlow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> cnt <span class="token operator">=</span> threeSum<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cnt<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">double</span> elapsedTime <span class="token operator">=</span> <span class="token class-name">StopWatch</span><span class="token punctuation">.</span><span class="token function">elapsedTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">double</span> ratio <span class="token operator">=</span> preTime <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> elapsedTime <span class="token operator">/</span> preTime<span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">N</span> <span class="token operator">+</span> <span class="token string">&quot;  &quot;</span> <span class="token operator">+</span> elapsedTime <span class="token operator">+</span> <span class="token string">&quot;  &quot;</span> <span class="token operator">+</span> ratio<span class="token punctuation">)</span><span class="token punctuation">;</span>
            preTime <span class="token operator">=</span> elapsedTime<span class="token punctuation">;</span>
            <span class="token class-name">N</span> <span class="token operator">*=</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StopWatch</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">long</span> start<span class="token punctuation">;</span>


    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">double</span> <span class="token function">elapsedTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> now <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000.0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,45);function t(e,o){return p}var i=n(a,[["render",t],["__file","\u7B97\u6CD5 - \u7B97\u6CD5\u5206\u6790.html.vue"]]);export{i as default};
