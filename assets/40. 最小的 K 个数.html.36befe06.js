import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,o as e,c as o,a as n,b as c,F as l,d as s,e as i}from"./app.d02315a2.js";const u={},k=n("h1",{id:"_40-\u6700\u5C0F\u7684-k-\u4E2A\u6570",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_40-\u6700\u5C0F\u7684-k-\u4E2A\u6570","aria-hidden":"true"},"#"),s(" 40. \u6700\u5C0F\u7684 K \u4E2A\u6570")],-1),r=n("h2",{id:"\u9898\u76EE\u94FE\u63A5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE\u94FE\u63A5","aria-hidden":"true"},"#"),s(" \u9898\u76EE\u94FE\u63A5")],-1),d={href:"https://www.nowcoder.com/practice/6a296eb82cf844ca8539b57c23e6e9bf?tpId=13&tqId=11182&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking&from=cyc_github",target:"_blank",rel:"noopener noreferrer"},m=s("\u725B\u5BA2\u7F51"),v=i(`<h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><h3 id="\u5927\u5C0F\u4E3A-k-\u7684\u6700\u5C0F\u5806" tabindex="-1"><a class="header-anchor" href="#\u5927\u5C0F\u4E3A-k-\u7684\u6700\u5C0F\u5806" aria-hidden="true">#</a> \u5927\u5C0F\u4E3A K \u7684\u6700\u5C0F\u5806</h3><ul><li>\u590D\u6742\u5EA6\uFF1AO(NlogK) + O(K)</li><li>\u7279\u522B\u9002\u5408\u5904\u7406\u6D77\u91CF\u6570\u636E</li></ul><p>\u7EF4\u62A4\u4E00\u4E2A\u5927\u5C0F\u4E3A K \u7684\u6700\u5C0F\u5806\u8FC7\u7A0B\u5982\u4E0B\uFF1A\u4F7F\u7528\u5927\u9876\u5806\u3002\u5728\u6DFB\u52A0\u4E00\u4E2A\u5143\u7D20\u4E4B\u540E\uFF0C\u5982\u679C\u5927\u9876\u5806\u7684\u5927\u5C0F\u5927\u4E8E K\uFF0C\u90A3\u4E48\u5C06\u5927\u9876\u5806\u7684\u5806\u9876\u5143\u7D20\u53BB\u9664\uFF0C\u4E5F\u5C31\u662F\u5C06\u5F53\u524D\u5806\u4E2D\u503C\u6700\u5927\u7684\u5143\u7D20\u53BB\u9664\uFF0C\u4ECE\u800C\u4F7F\u5F97\u7559\u5728\u5806\u4E2D\u7684\u5143\u7D20\u90FD\u6BD4\u88AB\u53BB\u9664\u7684\u5143\u7D20\u6765\u5F97\u5C0F\u3002</p><p>\u5E94\u8BE5\u4F7F\u7528\u5927\u9876\u5806\u6765\u7EF4\u62A4\u6700\u5C0F\u5806\uFF0C\u800C\u4E0D\u80FD\u76F4\u63A5\u521B\u5EFA\u4E00\u4E2A\u5C0F\u9876\u5806\u5E76\u8BBE\u7F6E\u4E00\u4E2A\u5927\u5C0F\uFF0C\u4F01\u56FE\u8BA9\u5C0F\u9876\u5806\u4E2D\u7684\u5143\u7D20\u90FD\u662F\u6700\u5C0F\u5143\u7D20\u3002</p><p>Java \u7684 PriorityQueue \u5B9E\u73B0\u4E86\u5806\u7684\u80FD\u529B\uFF0CPriorityQueue \u9ED8\u8BA4\u662F\u5C0F\u9876\u5806\uFF0C\u53EF\u4EE5\u5728\u5728\u521D\u59CB\u5316\u65F6\u4F7F\u7528 Lambda \u8868\u8FBE\u5F0F (o1, o2) -&gt; o2 - o1 \u6765\u5B9E\u73B0\u5927\u9876\u5806\u3002\u5176\u5B83\u8BED\u8A00\u4E5F\u6709\u7C7B\u4F3C\u7684\u5806\u6570\u636E\u7ED3\u6784\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">GetLeastNumbers_Solution</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&gt;</span> nums<span class="token punctuation">.</span>length <span class="token operator">||</span> k <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> maxHeap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> o2 <span class="token operator">-</span> o1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num <span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        maxHeap<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>maxHeap<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> k<span class="token punctuation">)</span>
            maxHeap<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>maxHeap<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5FEB\u901F\u9009\u62E9" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u901F\u9009\u62E9" aria-hidden="true">#</a> \u5FEB\u901F\u9009\u62E9</h3><ul><li>\u590D\u6742\u5EA6\uFF1AO(N) + O(1)</li><li>\u53EA\u6709\u5F53\u5141\u8BB8\u4FEE\u6539\u6570\u7EC4\u5143\u7D20\u65F6\u624D\u53EF\u4EE5\u4F7F\u7528</li></ul><p>\u5FEB\u901F\u6392\u5E8F\u7684 partition() \u65B9\u6CD5\uFF0C\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u6574\u6570 j \u4F7F\u5F97 a[l..j-1] \u5C0F\u4E8E\u7B49\u4E8E a[j]\uFF0C\u4E14 a[j+1..h] \u5927\u4E8E\u7B49\u4E8E a[j]\uFF0C\u6B64\u65F6 a[j] \u5C31\u662F\u6570\u7EC4\u7684\u7B2C j \u5927\u5143\u7D20\u3002\u53EF\u4EE5\u5229\u7528\u8FD9\u4E2A\u7279\u6027\u627E\u51FA\u6570\u7EC4\u7684\u7B2C K \u4E2A\u5143\u7D20\uFF0C\u8FD9\u79CD\u627E\u7B2C K \u4E2A\u5143\u7D20\u7684\u7B97\u6CD5\u79F0\u4E3A\u5FEB\u901F\u9009\u62E9\u7B97\u6CD5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">GetLeastNumbers_Solution</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> ret <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&gt;</span> nums<span class="token punctuation">.</span>length <span class="token operator">||</span> k <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
    <span class="token function">findKthSmallest</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/* findKthSmallest \u4F1A\u6539\u53D8\u6570\u7EC4\uFF0C\u4F7F\u5F97\u524D k \u4E2A\u6570\u90FD\u662F\u6700\u5C0F\u7684 k \u4E2A\u6570 */</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> k<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        ret<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findKthSmallest</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> h <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token function">partition</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> l<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> k<span class="token punctuation">)</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;</span> k<span class="token punctuation">)</span>
            h <span class="token operator">=</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            l <span class="token operator">=</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">partition</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> p <span class="token operator">=</span> nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token comment">/* \u5207\u5206\u5143\u7D20 */</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> l<span class="token punctuation">,</span> j <span class="token operator">=</span> h <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">!=</span> h <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span><span class="token operator">++</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> p<span class="token punctuation">)</span> <span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">!=</span> l <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span><span class="token operator">--</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> p<span class="token punctuation">)</span> <span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> j<span class="token punctuation">)</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> l<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> j<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> t <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
    nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> t<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function b(w,y){const a=t("ExternalLinkIcon");return e(),o(l,null,[k,r,n("p",null,[n("a",d,[m,c(a)])]),v],64)}var f=p(u,[["render",b],["__file","40. \u6700\u5C0F\u7684 K \u4E2A\u6570.html.vue"]]);export{f as default};
