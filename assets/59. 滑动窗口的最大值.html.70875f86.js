import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{r as p,o as e,c as o,a as n,b as c,F as u,d as s,e as i}from"./app.d02315a2.js";const l={},r=n("h1",{id:"_59-\u6ED1\u52A8\u7A97\u53E3\u7684\u6700\u5927\u503C",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_59-\u6ED1\u52A8\u7A97\u53E3\u7684\u6700\u5927\u503C","aria-hidden":"true"},"#"),s(" 59. \u6ED1\u52A8\u7A97\u53E3\u7684\u6700\u5927\u503C")],-1),k=n("h2",{id:"\u9898\u76EE\u94FE\u63A5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE\u94FE\u63A5","aria-hidden":"true"},"#"),s(" \u9898\u76EE\u94FE\u63A5")],-1),d={href:"https://www.nowcoder.com/practice/1624bc35a45c42c0bc17d17fa0cba788?tpId=13&tqId=11217&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking&from=cyc_github",target:"_blank",rel:"noopener noreferrer"},m=s("\u725B\u5BA2\u7F51"),h=i(`<h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u7ED9\u5B9A\u4E00\u4E2A\u6570\u7EC4\u548C\u6ED1\u52A8\u7A97\u53E3\u7684\u5927\u5C0F\uFF0C\u627E\u51FA\u6240\u6709\u6ED1\u52A8\u7A97\u53E3\u91CC\u6570\u503C\u7684\u6700\u5927\u503C\u3002</p><p>\u4F8B\u5982\uFF0C\u5982\u679C\u8F93\u5165\u6570\u7EC4 {2, 3, 4, 2, 6, 2, 5, 1} \u53CA\u6ED1\u52A8\u7A97\u53E3\u7684\u5927\u5C0F 3\uFF0C\u90A3\u4E48\u4E00\u5171\u5B58\u5728 6 \u4E2A\u6ED1\u52A8\u7A97\u53E3\uFF0C\u4ED6\u4EEC\u7684\u6700\u5927\u503C\u5206\u522B\u4E3A {4, 4, 6, 6, 6, 5}\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/image-20201104020702453.png&quot; width=&quot;500px&quot;&gt;</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u7EF4\u62A4\u4E00\u4E2A\u5927\u5C0F\u4E3A\u7A97\u53E3\u5927\u5C0F\u7684\u5927\u9876\u5806\uFF0C\u9876\u5806\u5143\u7D20\u5219\u4E3A\u5F53\u524D\u7A97\u53E3\u7684\u6700\u5927\u503C\u3002</p><p>\u5047\u8BBE\u7A97\u53E3\u7684\u5927\u5C0F\u4E3A M\uFF0C\u6570\u7EC4\u7684\u957F\u5EA6\u4E3A N\u3002\u5728\u7A97\u53E3\u5411\u53F3\u79FB\u52A8\u65F6\uFF0C\u9700\u8981\u5148\u5728\u5806\u4E2D\u5220\u9664\u79BB\u5F00\u7A97\u53E3\u7684\u5143\u7D20\uFF0C\u5E76\u5C06\u65B0\u5230\u8FBE\u7684\u5143\u7D20\u6DFB\u52A0\u5230\u5806\u4E2D\uFF0C\u8FD9\u4E24\u4E2A\u64CD\u4F5C\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u90FD\u4E3A log<sub>2</sub>M\uFF0C\u56E0\u6B64\u7B97\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(Nlog<sub>2</sub>M)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3A O(M)\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">maxInWindows</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> num<span class="token punctuation">,</span> <span class="token keyword">int</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> ret <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">&gt;</span> num<span class="token punctuation">.</span>length <span class="token operator">||</span> size <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
    <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> heap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> o2 <span class="token operator">-</span> o1<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">/* \u5927\u9876\u5806 */</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        heap<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>num<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ret<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>heap<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> i <span class="token operator">+</span> size<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> num<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">,</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">/* \u7EF4\u62A4\u4E00\u4E2A\u5927\u5C0F\u4E3A size \u7684\u5927\u9876\u5806 */</span>
        heap<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>num<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        heap<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>num<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ret<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>heap<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function v(_,g){const a=p("ExternalLinkIcon");return e(),o(u,null,[r,k,n("p",null,[n("a",d,[m,c(a)])]),h],64)}var w=t(l,[["render",v],["__file","59. \u6ED1\u52A8\u7A97\u53E3\u7684\u6700\u5927\u503C.html.vue"]]);export{w as default};
