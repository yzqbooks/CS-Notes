import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,o as l,c,a as n,b as e,F as i,e as t,d as s}from"./app.5ce5af5d.js";const u={},r=t(`<h1 id="leetcode-\u9898\u89E3-\u4E8C\u5206\u67E5\u627E" tabindex="-1"><a class="header-anchor" href="#leetcode-\u9898\u89E3-\u4E8C\u5206\u67E5\u627E" aria-hidden="true">#</a> Leetcode \u9898\u89E3 - \u4E8C\u5206\u67E5\u627E</h1><ul><li><a href="#leetcode-%E9%A2%98%E8%A7%A3---%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE">Leetcode \u9898\u89E3 - \u4E8C\u5206\u67E5\u627E</a><ul><li><a href="#1-%E6%B1%82%E5%BC%80%E6%96%B9">1. \u6C42\u5F00\u65B9</a></li><li><a href="#2-%E5%A4%A7%E4%BA%8E%E7%BB%99%E5%AE%9A%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%85%83%E7%B4%A0">2. \u5927\u4E8E\u7ED9\u5B9A\u5143\u7D20\u7684\u6700\u5C0F\u5143\u7D20</a></li><li><a href="#3-%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84-single-element">3. \u6709\u5E8F\u6570\u7EC4\u7684 Single Element</a></li><li><a href="#4-%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%94%99%E8%AF%AF%E7%9A%84%E7%89%88%E6%9C%AC">4. \u7B2C\u4E00\u4E2A\u9519\u8BEF\u7684\u7248\u672C</a></li><li><a href="#5-%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97">5. \u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u6570\u5B57</a></li><li><a href="#6-%E6%9F%A5%E6%89%BE%E5%8C%BA%E9%97%B4">6. \u67E5\u627E\u533A\u95F4</a></li></ul></li></ul><p><strong>\u6B63\u5E38\u5B9E\u73B0</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input : [1,2,3,4,5]
key : 3
return the index : 2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">binarySearch</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> h <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;=</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span>h <span class="token operator">-</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">==</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> m<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">&gt;</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            h <span class="token operator">=</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            l <span class="token operator">=</span> m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u65F6\u95F4\u590D\u6742\u5EA6</strong></p><p>\u4E8C\u5206\u67E5\u627E\u4E5F\u79F0\u4E3A\u6298\u534A\u67E5\u627E\uFF0C\u6BCF\u6B21\u90FD\u80FD\u5C06\u67E5\u627E\u533A\u95F4\u51CF\u534A\uFF0C\u8FD9\u79CD\u6298\u534A\u7279\u6027\u7684\u7B97\u6CD5\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(logN)\u3002</p><p><strong>m \u8BA1\u7B97</strong></p><p>\u6709\u4E24\u79CD\u8BA1\u7B97\u4E2D\u503C m \u7684\u65B9\u5F0F\uFF1A</p><ul><li>m = (l + h) / 2</li><li>m = l + (h - l) / 2</li></ul><p>l + h \u53EF\u80FD\u51FA\u73B0\u52A0\u6CD5\u6EA2\u51FA\uFF0C\u4E5F\u5C31\u662F\u8BF4\u52A0\u6CD5\u7684\u7ED3\u679C\u5927\u4E8E\u6574\u578B\u80FD\u591F\u8868\u793A\u7684\u8303\u56F4\u3002\u4F46\u662F l \u548C h \u90FD\u4E3A\u6B63\u6570\uFF0C\u56E0\u6B64 h - l \u4E0D\u4F1A\u51FA\u73B0\u52A0\u6CD5\u6EA2\u51FA\u95EE\u9898\u3002\u6240\u4EE5\uFF0C\u6700\u597D\u4F7F\u7528\u7B2C\u4E8C\u79CD\u8BA1\u7B97\u6CD5\u65B9\u6CD5\u3002</p><p><strong>\u672A\u6210\u529F\u67E5\u627E\u7684\u8FD4\u56DE\u503C</strong></p><p>\u5FAA\u73AF\u9000\u51FA\u65F6\u5982\u679C\u4ECD\u7136\u6CA1\u6709\u67E5\u627E\u5230 key\uFF0C\u90A3\u4E48\u8868\u793A\u67E5\u627E\u5931\u8D25\u3002\u53EF\u4EE5\u6709\u4E24\u79CD\u8FD4\u56DE\u503C\uFF1A</p><ul><li>-1\uFF1A\u4EE5\u4E00\u4E2A\u9519\u8BEF\u7801\u8868\u793A\u6CA1\u6709\u67E5\u627E\u5230 key</li><li>l\uFF1A\u5C06 key \u63D2\u5165\u5230 nums \u4E2D\u7684\u6B63\u786E\u4F4D\u7F6E</li></ul><p><strong>\u53D8\u79CD</strong></p><p>\u4E8C\u5206\u67E5\u627E\u53EF\u4EE5\u6709\u5F88\u591A\u53D8\u79CD\uFF0C\u5B9E\u73B0\u53D8\u79CD\u8981\u6CE8\u610F\u8FB9\u754C\u503C\u7684\u5224\u65AD\u3002\u4F8B\u5982\u5728\u4E00\u4E2A\u6709\u91CD\u590D\u5143\u7D20\u7684\u6570\u7EC4\u4E2D\u67E5\u627E key \u7684\u6700\u5DE6\u4F4D\u7F6E\u7684\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">binarySearch</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> h <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span>h <span class="token operator">-</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            h <span class="token operator">=</span> m<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            l <span class="token operator">=</span> m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> l<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u5B9E\u73B0\u548C\u6B63\u5E38\u5B9E\u73B0\u6709\u4EE5\u4E0B\u4E0D\u540C\uFF1A</p><ul><li>h \u7684\u8D4B\u503C\u8868\u8FBE\u5F0F\u4E3A h = m</li><li>\u5FAA\u73AF\u6761\u4EF6\u4E3A l &lt; h</li><li>\u6700\u540E\u8FD4\u56DE l \u800C\u4E0D\u662F -1</li></ul><p>\u5728 nums[m] &gt;= key \u7684\u60C5\u51B5\u4E0B\uFF0C\u53EF\u4EE5\u63A8\u5BFC\u51FA\u6700\u5DE6 key \u4F4D\u4E8E [l, m] \u533A\u95F4\u4E2D\uFF0C\u8FD9\u662F\u4E00\u4E2A\u95ED\u533A\u95F4\u3002h \u7684\u8D4B\u503C\u8868\u8FBE\u5F0F\u4E3A h = m\uFF0C\u56E0\u4E3A m \u4F4D\u7F6E\u4E5F\u53EF\u80FD\u662F\u89E3\u3002</p><p>\u5728 h \u7684\u8D4B\u503C\u8868\u8FBE\u5F0F\u4E3A h = m \u7684\u60C5\u51B5\u4E0B\uFF0C\u5982\u679C\u5FAA\u73AF\u6761\u4EF6\u4E3A l &lt;= h\uFF0C\u90A3\u4E48\u4F1A\u51FA\u73B0\u5FAA\u73AF\u65E0\u6CD5\u9000\u51FA\u7684\u60C5\u51B5\uFF0C\u56E0\u6B64\u5FAA\u73AF\u6761\u4EF6\u53EA\u80FD\u662F l &lt; h\u3002\u4EE5\u4E0B\u6F14\u793A\u4E86\u5FAA\u73AF\u6761\u4EF6\u4E3A l &lt;= h \u65F6\u5FAA\u73AF\u65E0\u6CD5\u9000\u51FA\u7684\u60C5\u51B5\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>nums = {0, 1, 2}, key = 1
l   m   h
0   1   2  nums[m] &gt;= key
0   0   1  nums[m] &lt; key
1   1   1  nums[m] &gt;= key
1   1   1  nums[m] &gt;= key
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u5FAA\u73AF\u4F53\u9000\u51FA\u65F6\uFF0C\u4E0D\u8868\u793A\u6CA1\u6709\u67E5\u627E\u5230 key\uFF0C\u56E0\u6B64\u6700\u540E\u8FD4\u56DE\u7684\u7ED3\u679C\u4E0D\u5E94\u8BE5\u4E3A -1\u3002\u4E3A\u4E86\u9A8C\u8BC1\u6709\u6CA1\u6709\u67E5\u627E\u5230\uFF0C\u9700\u8981\u5728\u8C03\u7528\u7AEF\u5224\u65AD\u4E00\u4E0B\u8FD4\u56DE\u4F4D\u7F6E\u4E0A\u7684\u503C\u548C key \u662F\u5426\u76F8\u7B49\u3002</p><h2 id="_1-\u6C42\u5F00\u65B9" tabindex="-1"><a class="header-anchor" href="#_1-\u6C42\u5F00\u65B9" aria-hidden="true">#</a> 1. \u6C42\u5F00\u65B9</h2><p>69. Sqrt(x) (Easy)</p>`,25),d={href:"https://leetcode.com/problems/sqrtx/description/",target:"_blank",rel:"noopener noreferrer"},k=s("Leetcode"),m=s(" / "),v={href:"https://leetcode-cn.com/problems/sqrtx/description/",target:"_blank",rel:"noopener noreferrer"},b=s("\u529B\u6263"),h=t(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input: 4
Output: 2

Input: 8
Output: 2
Explanation: The square root of 8 is 2.82842..., and since we want to return an integer, the decimal part will be truncated.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E00\u4E2A\u6570 x \u7684\u5F00\u65B9 sqrt \u4E00\u5B9A\u5728 0 ~ x \u4E4B\u95F4\uFF0C\u5E76\u4E14\u6EE1\u8DB3 sqrt == x / sqrt\u3002\u53EF\u4EE5\u5229\u7528\u4E8C\u5206\u67E5\u627E\u5728 0 ~ x \u4E4B\u95F4\u67E5\u627E sqrt\u3002</p><p>\u5BF9\u4E8E x = 8\uFF0C\u5B83\u7684\u5F00\u65B9\u662F 2.82842...\uFF0C\u6700\u540E\u5E94\u8BE5\u8FD4\u56DE 2 \u800C\u4E0D\u662F 3\u3002\u5728\u5FAA\u73AF\u6761\u4EF6\u4E3A l &lt;= h \u5E76\u4E14\u5FAA\u73AF\u9000\u51FA\u65F6\uFF0Ch \u603B\u662F\u6BD4 l \u5C0F 1\uFF0C\u4E5F\u5C31\u662F\u8BF4 h = 2\uFF0Cl = 3\uFF0C\u56E0\u6B64\u6700\u540E\u7684\u8FD4\u56DE\u503C\u5E94\u8BE5\u4E3A h \u800C\u4E0D\u662F l\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">mySqrt</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> h <span class="token operator">=</span> x<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;=</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> mid <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span>h <span class="token operator">-</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> sqrt <span class="token operator">=</span> x <span class="token operator">/</span> mid<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sqrt <span class="token operator">==</span> mid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> mid<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mid <span class="token operator">&gt;</span> sqrt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            h <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            l <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> h<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-\u5927\u4E8E\u7ED9\u5B9A\u5143\u7D20\u7684\u6700\u5C0F\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#_2-\u5927\u4E8E\u7ED9\u5B9A\u5143\u7D20\u7684\u6700\u5C0F\u5143\u7D20" aria-hidden="true">#</a> 2. \u5927\u4E8E\u7ED9\u5B9A\u5143\u7D20\u7684\u6700\u5C0F\u5143\u7D20</h2><p>744. Find Smallest Letter Greater Than Target (Easy)</p>`,6),g={href:"https://leetcode.com/problems/find-smallest-letter-greater-than-target/description/",target:"_blank",rel:"noopener noreferrer"},y=s("Leetcode"),_=s(" / "),w={href:"https://leetcode-cn.com/problems/find-smallest-letter-greater-than-target/description/",target:"_blank",rel:"noopener noreferrer"},f=s("\u529B\u6263"),x=t(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input:
letters = [&quot;c&quot;, &quot;f&quot;, &quot;j&quot;]
target = &quot;d&quot;
Output: &quot;f&quot;

Input:
letters = [&quot;c&quot;, &quot;f&quot;, &quot;j&quot;]
target = &quot;k&quot;
Output: &quot;c&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u7ED9\u5B9A\u4E00\u4E2A\u6709\u5E8F\u7684\u5B57\u7B26\u6570\u7EC4 letters \u548C\u4E00\u4E2A\u5B57\u7B26 target\uFF0C\u8981\u6C42\u627E\u51FA letters \u4E2D\u5927\u4E8E target \u7684\u6700\u5C0F\u5B57\u7B26\uFF0C\u5982\u679C\u627E\u4E0D\u5230\u5C31\u8FD4\u56DE\u7B2C 1 \u4E2A\u5B57\u7B26\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">char</span> <span class="token function">nextGreatestLetter</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> letters<span class="token punctuation">,</span> <span class="token keyword">char</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> letters<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> h <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;=</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span>h <span class="token operator">-</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>letters<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            l <span class="token operator">=</span> m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            h <span class="token operator">=</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> l <span class="token operator">&lt;</span> n <span class="token operator">?</span> letters<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">:</span> letters<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-\u6709\u5E8F\u6570\u7EC4\u7684-single-element" tabindex="-1"><a class="header-anchor" href="#_3-\u6709\u5E8F\u6570\u7EC4\u7684-single-element" aria-hidden="true">#</a> 3. \u6709\u5E8F\u6570\u7EC4\u7684 Single Element</h2><p>540. Single Element in a Sorted Array (Medium)</p>`,5),E={href:"https://leetcode.com/problems/single-element-in-a-sorted-array/description/",target:"_blank",rel:"noopener noreferrer"},B=s("Leetcode"),q=s(" / "),A={href:"https://leetcode-cn.com/problems/single-element-in-a-sorted-array/description/",target:"_blank",rel:"noopener noreferrer"},j=s("\u529B\u6263"),F=t(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input: [1, 1, 2, 3, 3, 4, 4, 8, 8]
Output: 2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u4E00\u4E2A\u6709\u5E8F\u6570\u7EC4\u53EA\u6709\u4E00\u4E2A\u6570\u4E0D\u51FA\u73B0\u4E24\u6B21\uFF0C\u627E\u51FA\u8FD9\u4E2A\u6570\u3002</p><p>\u8981\u6C42\u4EE5 O(logN) \u65F6\u95F4\u590D\u6742\u5EA6\u8FDB\u884C\u6C42\u89E3\uFF0C\u56E0\u6B64\u4E0D\u80FD\u904D\u5386\u6570\u7EC4\u5E76\u8FDB\u884C\u5F02\u6216\u64CD\u4F5C\u6765\u6C42\u89E3\uFF0C\u8FD9\u4E48\u505A\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N)\u3002</p><p>\u4EE4 index \u4E3A Single Element \u5728\u6570\u7EC4\u4E2D\u7684\u4F4D\u7F6E\u3002\u5728 index \u4E4B\u540E\uFF0C\u6570\u7EC4\u4E2D\u539F\u6765\u5B58\u5728\u7684\u6210\u5BF9\u72B6\u6001\u88AB\u6539\u53D8\u3002\u5982\u679C m \u4E3A\u5076\u6570\uFF0C\u5E76\u4E14 m + 1 &lt; index\uFF0C\u90A3\u4E48 nums[m] == nums[m + 1]\uFF1Bm + 1 &gt;= index\uFF0C\u90A3\u4E48 nums[m] != nums[m + 1]\u3002</p><p>\u4ECE\u4E0A\u9762\u7684\u89C4\u5F8B\u53EF\u4EE5\u77E5\u9053\uFF0C\u5982\u679C nums[m] == nums[m + 1]\uFF0C\u90A3\u4E48 index \u6240\u5728\u7684\u6570\u7EC4\u4F4D\u7F6E\u4E3A [m + 2, h]\uFF0C\u6B64\u65F6\u4EE4 l = m + 2\uFF1B\u5982\u679C nums[m] != nums[m + 1]\uFF0C\u90A3\u4E48 index \u6240\u5728\u7684\u6570\u7EC4\u4F4D\u7F6E\u4E3A [l, m]\uFF0C\u6B64\u65F6\u4EE4 h = m\u3002</p><p>\u56E0\u4E3A h \u7684\u8D4B\u503C\u8868\u8FBE\u5F0F\u4E3A h = m\uFF0C\u90A3\u4E48\u5FAA\u73AF\u6761\u4EF6\u4E5F\u5C31\u53EA\u80FD\u4F7F\u7528 l &lt; h \u8FD9\u79CD\u5F62\u5F0F\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">singleNonDuplicate</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> h <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span>h <span class="token operator">-</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            m<span class="token operator">--</span><span class="token punctuation">;</span>   <span class="token comment">// \u4FDD\u8BC1 l/h/m \u90FD\u5728\u5076\u6570\u4F4D\uFF0C\u4F7F\u5F97\u67E5\u627E\u533A\u95F4\u5927\u5C0F\u4E00\u76F4\u90FD\u662F\u5947\u6570</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            l <span class="token operator">=</span> m <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            h <span class="token operator">=</span> m<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-\u7B2C\u4E00\u4E2A\u9519\u8BEF\u7684\u7248\u672C" tabindex="-1"><a class="header-anchor" href="#_4-\u7B2C\u4E00\u4E2A\u9519\u8BEF\u7684\u7248\u672C" aria-hidden="true">#</a> 4. \u7B2C\u4E00\u4E2A\u9519\u8BEF\u7684\u7248\u672C</h2><p>278. First Bad Version (Easy)</p>`,9),L={href:"https://leetcode.com/problems/first-bad-version/description/",target:"_blank",rel:"noopener noreferrer"},S=s("Leetcode"),C=s(" / "),I={href:"https://leetcode-cn.com/problems/first-bad-version/description/",target:"_blank",rel:"noopener noreferrer"},O=s("\u529B\u6263"),N=t(`<p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u7ED9\u5B9A\u4E00\u4E2A\u5143\u7D20 n \u4EE3\u8868\u6709 [1, 2, ..., n] \u7248\u672C\uFF0C\u5728\u7B2C x \u4F4D\u7F6E\u5F00\u59CB\u51FA\u73B0\u9519\u8BEF\u7248\u672C\uFF0C\u5BFC\u81F4\u540E\u9762\u7684\u7248\u672C\u90FD\u9519\u8BEF\u3002\u53EF\u4EE5\u8C03\u7528 isBadVersion(int x) \u77E5\u9053\u67D0\u4E2A\u7248\u672C\u662F\u5426\u9519\u8BEF\uFF0C\u8981\u6C42\u627E\u5230\u7B2C\u4E00\u4E2A\u9519\u8BEF\u7684\u7248\u672C\u3002</p><p>\u5982\u679C\u7B2C m \u4E2A\u7248\u672C\u51FA\u9519\uFF0C\u5219\u8868\u793A\u7B2C\u4E00\u4E2A\u9519\u8BEF\u7684\u7248\u672C\u5728 [l, m] \u4E4B\u95F4\uFF0C\u4EE4 h = m\uFF1B\u5426\u5219\u7B2C\u4E00\u4E2A\u9519\u8BEF\u7684\u7248\u672C\u5728 [m + 1, h] \u4E4B\u95F4\uFF0C\u4EE4 l = m + 1\u3002</p><p>\u56E0\u4E3A h \u7684\u8D4B\u503C\u8868\u8FBE\u5F0F\u4E3A h = m\uFF0C\u56E0\u6B64\u5FAA\u73AF\u6761\u4EF6\u4E3A l &lt; h\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">firstBadVersion</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> h <span class="token operator">=</span> n<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> mid <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span>h <span class="token operator">-</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isBadVersion</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            h <span class="token operator">=</span> mid<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            l <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> l<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-\u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#_5-\u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u6570\u5B57" aria-hidden="true">#</a> 5. \u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u6570\u5B57</h2><p>153. Find Minimum in Rotated Sorted Array (Medium)</p>`,6),V={href:"https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/description/",target:"_blank",rel:"noopener noreferrer"},M=s("Leetcode"),T=s(" / "),D={href:"https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/description/",target:"_blank",rel:"noopener noreferrer"},G=s("\u529B\u6263"),R=t(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input: [3,4,5,1,2],
Output: 1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findMin</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> h <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span>h <span class="token operator">-</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> nums<span class="token punctuation">[</span>h<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            h <span class="token operator">=</span> m<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            l <span class="token operator">=</span> m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-\u67E5\u627E\u533A\u95F4" tabindex="-1"><a class="header-anchor" href="#_6-\u67E5\u627E\u533A\u95F4" aria-hidden="true">#</a> 6. \u67E5\u627E\u533A\u95F4</h2><p>34. Find First and Last Position of Element in Sorted Array</p>`,4),P={href:"https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/",target:"_blank",rel:"noopener noreferrer"},z=s("Leetcode"),H=s(" / "),J={href:"https://leetcode-cn.com/problems/find-first-and-last-position-of-element-in-sorted-array/",target:"_blank",rel:"noopener noreferrer"},K=s("\u529B\u6263"),Q=t(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]

Input: nums = [5,7,7,8,8,10], target = 6
Output: [-1,-1]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u7ED9\u5B9A\u4E00\u4E2A\u6709\u5E8F\u6570\u7EC4 nums \u548C\u4E00\u4E2A\u76EE\u6807 target\uFF0C\u8981\u6C42\u627E\u5230 target \u5728 nums \u4E2D\u7684\u7B2C\u4E00\u4E2A\u4F4D\u7F6E\u548C\u6700\u540E\u4E00\u4E2A\u4F4D\u7F6E\u3002</p><p>\u53EF\u4EE5\u7528\u4E8C\u5206\u67E5\u627E\u627E\u51FA\u7B2C\u4E00\u4E2A\u4F4D\u7F6E\u548C\u6700\u540E\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u4F46\u662F\u5BFB\u627E\u7684\u65B9\u6CD5\u6709\u6240\u4E0D\u540C\uFF0C\u9700\u8981\u5B9E\u73B0\u4E24\u4E2A\u4E8C\u5206\u67E5\u627E\u3002\u6211\u4EEC\u5C06\u5BFB\u627E target \u6700\u540E\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u8F6C\u6362\u6210\u5BFB\u627E target+1 \u7B2C\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u518D\u5F80\u524D\u79FB\u52A8\u4E00\u4E2A\u4F4D\u7F6E\u3002\u8FD9\u6837\u6211\u4EEC\u53EA\u9700\u8981\u5B9E\u73B0\u4E00\u4E2A\u4E8C\u5206\u67E5\u627E\u4EE3\u7801\u5373\u53EF\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">searchRange</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> first <span class="token operator">=</span> <span class="token function">findFirst</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> last <span class="token operator">=</span> <span class="token function">findFirst</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> target <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>first <span class="token operator">==</span> nums<span class="token punctuation">.</span>length <span class="token operator">||</span> nums<span class="token punctuation">[</span>first<span class="token punctuation">]</span> <span class="token operator">!=</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>first<span class="token punctuation">,</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> last<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> h <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment">// \u6CE8\u610F h \u7684\u521D\u59CB\u503C</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span>h <span class="token operator">-</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            h <span class="token operator">=</span> m<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            l <span class="token operator">=</span> m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> l<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u5BFB\u627E\u7B2C\u4E00\u4E2A\u4F4D\u7F6E\u7684\u4E8C\u5206\u67E5\u627E\u4EE3\u7801\u4E2D\uFF0C\u9700\u8981\u6CE8\u610F h \u7684\u53D6\u503C\u4E3A nums.length\uFF0C\u800C\u4E0D\u662F nums.length - 1\u3002\u5148\u770B\u4EE5\u4E0B\u793A\u4F8B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>nums = [2,2], target = 2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5982\u679C h \u7684\u53D6\u503C\u4E3A nums.length - 1\uFF0C\u90A3\u4E48 last = findFirst(nums, target + 1) - 1 = 1 - 1 = 0\u3002\u8FD9\u662F\u56E0\u4E3A findLeft \u53EA\u4F1A\u8FD4\u56DE [0, nums.length - 1] \u8303\u56F4\u7684\u503C\uFF0C\u5BF9\u4E8E findFirst([2,2], 3) \uFF0C\u6211\u4EEC\u5E0C\u671B\u8FD4\u56DE 3 \u63D2\u5165 nums \u4E2D\u7684\u4F4D\u7F6E\uFF0C\u4E5F\u5C31\u662F\u6570\u7EC4\u6700\u540E\u4E00\u4E2A\u4F4D\u7F6E\u518D\u5F80\u540E\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u5373 nums.length\u3002\u6240\u4EE5\u6211\u4EEC\u9700\u8981\u5C06 h \u53D6\u503C\u4E3A nums.length\uFF0C\u4ECE\u800C\u4F7F\u5F97 findFirst\u8FD4\u56DE\u7684\u533A\u95F4\u66F4\u5927\uFF0C\u80FD\u591F\u8986\u76D6 target \u5927\u4E8E nums \u6700\u540E\u4E00\u4E2A\u5143\u7D20\u7684\u60C5\u51B5\u3002</p>`,7);function U(W,X){const a=o("ExternalLinkIcon");return l(),c(i,null,[r,n("p",null,[n("a",d,[k,e(a)]),m,n("a",v,[b,e(a)])]),h,n("p",null,[n("a",g,[y,e(a)]),_,n("a",w,[f,e(a)])]),x,n("p",null,[n("a",E,[B,e(a)]),q,n("a",A,[j,e(a)])]),F,n("p",null,[n("a",L,[S,e(a)]),C,n("a",I,[O,e(a)])]),N,n("p",null,[n("a",V,[M,e(a)]),T,n("a",D,[G,e(a)])]),R,n("p",null,[n("a",P,[z,e(a)]),H,n("a",J,[K,e(a)])]),Q],64)}var $=p(u,[["render",U],["__file","Leetcode \u9898\u89E3 - \u4E8C\u5206\u67E5\u627E.html.vue"]]);export{$ as default};
