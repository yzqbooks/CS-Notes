import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,o as c,c as i,a as s,b as p,F as l,e as a,d as n}from"./app.d02315a2.js";const u={},r=a('<h1 id="\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF-\u8FDB\u7A0B\u7BA1\u7406" tabindex="-1"><a class="header-anchor" href="#\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF-\u8FDB\u7A0B\u7BA1\u7406" aria-hidden="true">#</a> \u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF - \u8FDB\u7A0B\u7BA1\u7406</h1><ul><li><a href="#%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F---%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86">\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF - \u8FDB\u7A0B\u7BA1\u7406</a><ul><li><a href="#%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B">\u8FDB\u7A0B\u4E0E\u7EBF\u7A0B</a><ul><li><a href="#1-%E8%BF%9B%E7%A8%8B">1. \u8FDB\u7A0B</a></li><li><a href="#2-%E7%BA%BF%E7%A8%8B">2. \u7EBF\u7A0B</a></li><li><a href="#3-%E5%8C%BA%E5%88%AB">3. \u533A\u522B</a></li></ul></li><li><a href="#%E8%BF%9B%E7%A8%8B%E7%8A%B6%E6%80%81%E7%9A%84%E5%88%87%E6%8D%A2">\u8FDB\u7A0B\u72B6\u6001\u7684\u5207\u6362</a></li><li><a href="#%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95">\u8FDB\u7A0B\u8C03\u5EA6\u7B97\u6CD5</a><ul><li><a href="#1-%E6%89%B9%E5%A4%84%E7%90%86%E7%B3%BB%E7%BB%9F">1. \u6279\u5904\u7406\u7CFB\u7EDF</a></li><li><a href="#2-%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%B3%BB%E7%BB%9F">2. \u4EA4\u4E92\u5F0F\u7CFB\u7EDF</a></li><li><a href="#3-%E5%AE%9E%E6%97%B6%E7%B3%BB%E7%BB%9F">3. \u5B9E\u65F6\u7CFB\u7EDF</a></li></ul></li><li><a href="#%E8%BF%9B%E7%A8%8B%E5%90%8C%E6%AD%A5">\u8FDB\u7A0B\u540C\u6B65</a><ul><li><a href="#1-%E4%B8%B4%E7%95%8C%E5%8C%BA">1. \u4E34\u754C\u533A</a></li><li><a href="#2-%E5%90%8C%E6%AD%A5%E4%B8%8E%E4%BA%92%E6%96%A5">2. \u540C\u6B65\u4E0E\u4E92\u65A5</a></li><li><a href="#3-%E4%BF%A1%E5%8F%B7%E9%87%8F">3. \u4FE1\u53F7\u91CF</a></li><li><a href="#4-%E7%AE%A1%E7%A8%8B">4. \u7BA1\u7A0B</a></li></ul></li><li><a href="#%E7%BB%8F%E5%85%B8%E5%90%8C%E6%AD%A5%E9%97%AE%E9%A2%98">\u7ECF\u5178\u540C\u6B65\u95EE\u9898</a><ul><li><a href="#1-%E5%93%B2%E5%AD%A6%E5%AE%B6%E8%BF%9B%E9%A4%90%E9%97%AE%E9%A2%98">1. \u54F2\u5B66\u5BB6\u8FDB\u9910\u95EE\u9898</a></li><li><a href="#2-%E8%AF%BB%E8%80%85-%E5%86%99%E8%80%85%E9%97%AE%E9%A2%98">2. \u8BFB\u8005-\u5199\u8005\u95EE\u9898</a></li></ul></li><li><a href="#%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1">\u8FDB\u7A0B\u901A\u4FE1</a><ul><li><a href="#1-%E7%AE%A1%E9%81%93">1. \u7BA1\u9053</a></li><li><a href="#2-fifo">2. FIFO</a></li><li><a href="#3-%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97">3. \u6D88\u606F\u961F\u5217</a></li><li><a href="#4-%E4%BF%A1%E5%8F%B7%E9%87%8F">4. \u4FE1\u53F7\u91CF</a></li><li><a href="#5-%E5%85%B1%E4%BA%AB%E5%AD%98%E5%82%A8">5. \u5171\u4EAB\u5B58\u50A8</a></li><li><a href="#6-%E5%A5%97%E6%8E%A5%E5%AD%97">6. \u5957\u63A5\u5B57</a></li></ul></li></ul></li></ul><h2 id="\u8FDB\u7A0B\u4E0E\u7EBF\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u8FDB\u7A0B\u4E0E\u7EBF\u7A0B" aria-hidden="true">#</a> \u8FDB\u7A0B\u4E0E\u7EBF\u7A0B</h2><h3 id="_1-\u8FDB\u7A0B" tabindex="-1"><a class="header-anchor" href="#_1-\u8FDB\u7A0B" aria-hidden="true">#</a> 1. \u8FDB\u7A0B</h3><p>\u8FDB\u7A0B\u662F\u8D44\u6E90\u5206\u914D\u7684\u57FA\u672C\u5355\u4F4D\u3002</p><p>\u8FDB\u7A0B\u63A7\u5236\u5757 (Process Control Block, PCB) \u63CF\u8FF0\u8FDB\u7A0B\u7684\u57FA\u672C\u4FE1\u606F\u548C\u8FD0\u884C\u72B6\u6001\uFF0C\u6240\u8C13\u7684\u521B\u5EFA\u8FDB\u7A0B\u548C\u64A4\u9500\u8FDB\u7A0B\uFF0C\u90FD\u662F\u6307\u5BF9 PCB \u7684\u64CD\u4F5C\u3002</p><p>\u4E0B\u56FE\u663E\u793A\u4E86 4 \u4E2A\u7A0B\u5E8F\u521B\u5EFA\u4E86 4 \u4E2A\u8FDB\u7A0B\uFF0C\u8FD9 4 \u4E2A\u8FDB\u7A0B\u53EF\u4EE5\u5E76\u53D1\u5730\u6267\u884C\u3002</p><p><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/a6ac2b08-3861-4e85-baa8-382287bfee9f.png" alt="img"></p><h3 id="_2-\u7EBF\u7A0B" tabindex="-1"><a class="header-anchor" href="#_2-\u7EBF\u7A0B" aria-hidden="true">#</a> 2. \u7EBF\u7A0B</h3><p>\u7EBF\u7A0B\u662F\u72EC\u7ACB\u8C03\u5EA6\u7684\u57FA\u672C\u5355\u4F4D\u3002</p><p>\u4E00\u4E2A\u8FDB\u7A0B\u4E2D\u53EF\u4EE5\u6709\u591A\u4E2A\u7EBF\u7A0B\uFF0C\u5B83\u4EEC\u5171\u4EAB\u8FDB\u7A0B\u8D44\u6E90\u3002</p><p>QQ \u548C\u6D4F\u89C8\u5668\u662F\u4E24\u4E2A\u8FDB\u7A0B\uFF0C\u6D4F\u89C8\u5668\u8FDB\u7A0B\u91CC\u9762\u6709\u5F88\u591A\u7EBF\u7A0B\uFF0C\u4F8B\u5982 HTTP \u8BF7\u6C42\u7EBF\u7A0B\u3001\u4E8B\u4EF6\u54CD\u5E94\u7EBF\u7A0B\u3001\u6E32\u67D3\u7EBF\u7A0B\u7B49\u7B49\uFF0C\u7EBF\u7A0B\u7684\u5E76\u53D1\u6267\u884C\u4F7F\u5F97\u5728\u6D4F\u89C8\u5668\u4E2D\u70B9\u51FB\u4E00\u4E2A\u65B0\u94FE\u63A5\u4ECE\u800C\u53D1\u8D77 HTTP \u8BF7\u6C42\u65F6\uFF0C\u6D4F\u89C8\u5668\u8FD8\u53EF\u4EE5\u54CD\u5E94\u7528\u6237\u7684\u5176\u5B83\u4E8B\u4EF6\u3002</p><p><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/3cd630ea-017c-488d-ad1d-732b4efeddf5.png" alt="img"></p><h3 id="_3-\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#_3-\u533A\u522B" aria-hidden="true">#</a> 3. \u533A\u522B</h3><p>\u2160 \u62E5\u6709\u8D44\u6E90</p><p>\u8FDB\u7A0B\u662F\u8D44\u6E90\u5206\u914D\u7684\u57FA\u672C\u5355\u4F4D\uFF0C\u4F46\u662F\u7EBF\u7A0B\u4E0D\u62E5\u6709\u8D44\u6E90\uFF0C\u7EBF\u7A0B\u53EF\u4EE5\u8BBF\u95EE\u96B6\u5C5E\u8FDB\u7A0B\u7684\u8D44\u6E90\u3002</p><p>\u2161 \u8C03\u5EA6</p><p>\u7EBF\u7A0B\u662F\u72EC\u7ACB\u8C03\u5EA6\u7684\u57FA\u672C\u5355\u4F4D\uFF0C\u5728\u540C\u4E00\u8FDB\u7A0B\u4E2D\uFF0C\u7EBF\u7A0B\u7684\u5207\u6362\u4E0D\u4F1A\u5F15\u8D77\u8FDB\u7A0B\u5207\u6362\uFF0C\u4ECE\u4E00\u4E2A\u8FDB\u7A0B\u4E2D\u7684\u7EBF\u7A0B\u5207\u6362\u5230\u53E6\u4E00\u4E2A\u8FDB\u7A0B\u4E2D\u7684\u7EBF\u7A0B\u65F6\uFF0C\u4F1A\u5F15\u8D77\u8FDB\u7A0B\u5207\u6362\u3002</p><p>\u2162 \u7CFB\u7EDF\u5F00\u9500</p><p>\u7531\u4E8E\u521B\u5EFA\u6216\u64A4\u9500\u8FDB\u7A0B\u65F6\uFF0C\u7CFB\u7EDF\u90FD\u8981\u4E3A\u4E4B\u5206\u914D\u6216\u56DE\u6536\u8D44\u6E90\uFF0C\u5982\u5185\u5B58\u7A7A\u95F4\u3001I/O \u8BBE\u5907\u7B49\uFF0C\u6240\u4ED8\u51FA\u7684\u5F00\u9500\u8FDC\u5927\u4E8E\u521B\u5EFA\u6216\u64A4\u9500\u7EBF\u7A0B\u65F6\u7684\u5F00\u9500\u3002\u7C7B\u4F3C\u5730\uFF0C\u5728\u8FDB\u884C\u8FDB\u7A0B\u5207\u6362\u65F6\uFF0C\u6D89\u53CA\u5F53\u524D\u6267\u884C\u8FDB\u7A0B CPU \u73AF\u5883\u7684\u4FDD\u5B58\u53CA\u65B0\u8C03\u5EA6\u8FDB\u7A0B CPU \u73AF\u5883\u7684\u8BBE\u7F6E\uFF0C\u800C\u7EBF\u7A0B\u5207\u6362\u65F6\u53EA\u9700\u4FDD\u5B58\u548C\u8BBE\u7F6E\u5C11\u91CF\u5BC4\u5B58\u5668\u5185\u5BB9\uFF0C\u5F00\u9500\u5F88\u5C0F\u3002</p><p>\u2163 \u901A\u4FE1\u65B9\u9762</p><p>\u7EBF\u7A0B\u95F4\u53EF\u4EE5\u901A\u8FC7\u76F4\u63A5\u8BFB\u5199\u540C\u4E00\u8FDB\u7A0B\u4E2D\u7684\u6570\u636E\u8FDB\u884C\u901A\u4FE1\uFF0C\u4F46\u662F\u8FDB\u7A0B\u901A\u4FE1\u9700\u8981\u501F\u52A9 IPC\u3002</p><h2 id="\u8FDB\u7A0B\u72B6\u6001\u7684\u5207\u6362" tabindex="-1"><a class="header-anchor" href="#\u8FDB\u7A0B\u72B6\u6001\u7684\u5207\u6362" aria-hidden="true">#</a> \u8FDB\u7A0B\u72B6\u6001\u7684\u5207\u6362</h2>',23),d=n("![img]("),k={href:"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ProcessState.png",target:"_blank",rel:"noopener noreferrer"},m=n("https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/ProcessState.png"),v=n('" width="500)'),b=a(`<ul><li>\u5C31\u7EEA\u72B6\u6001\uFF08ready\uFF09\uFF1A\u7B49\u5F85\u88AB\u8C03\u5EA6</li><li>\u8FD0\u884C\u72B6\u6001\uFF08running\uFF09</li><li>\u963B\u585E\u72B6\u6001\uFF08waiting\uFF09\uFF1A\u7B49\u5F85\u8D44\u6E90</li></ul><p>\u5E94\u8BE5\u6CE8\u610F\u4EE5\u4E0B\u5185\u5BB9\uFF1A</p><ul><li>\u53EA\u6709\u5C31\u7EEA\u6001\u548C\u8FD0\u884C\u6001\u53EF\u4EE5\u76F8\u4E92\u8F6C\u6362\uFF0C\u5176\u5B83\u7684\u90FD\u662F\u5355\u5411\u8F6C\u6362\u3002\u5C31\u7EEA\u72B6\u6001\u7684\u8FDB\u7A0B\u901A\u8FC7\u8C03\u5EA6\u7B97\u6CD5\u4ECE\u800C\u83B7\u5F97 CPU \u65F6\u95F4\uFF0C\u8F6C\u4E3A\u8FD0\u884C\u72B6\u6001\uFF1B\u800C\u8FD0\u884C\u72B6\u6001\u7684\u8FDB\u7A0B\uFF0C\u5728\u5206\u914D\u7ED9\u5B83\u7684 CPU \u65F6\u95F4\u7247\u7528\u5B8C\u4E4B\u540E\u5C31\u4F1A\u8F6C\u4E3A\u5C31\u7EEA\u72B6\u6001\uFF0C\u7B49\u5F85\u4E0B\u4E00\u6B21\u8C03\u5EA6\u3002</li><li>\u963B\u585E\u72B6\u6001\u662F\u7F3A\u5C11\u9700\u8981\u7684\u8D44\u6E90\u4ECE\u800C\u7531\u8FD0\u884C\u72B6\u6001\u8F6C\u6362\u800C\u6765\uFF0C\u4F46\u662F\u8BE5\u8D44\u6E90\u4E0D\u5305\u62EC CPU \u65F6\u95F4\uFF0C\u7F3A\u5C11 CPU \u65F6\u95F4\u4F1A\u4ECE\u8FD0\u884C\u6001\u8F6C\u6362\u4E3A\u5C31\u7EEA\u6001\u3002</li></ul><h2 id="\u8FDB\u7A0B\u8C03\u5EA6\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u8FDB\u7A0B\u8C03\u5EA6\u7B97\u6CD5" aria-hidden="true">#</a> \u8FDB\u7A0B\u8C03\u5EA6\u7B97\u6CD5</h2><p>\u4E0D\u540C\u73AF\u5883\u7684\u8C03\u5EA6\u7B97\u6CD5\u76EE\u6807\u4E0D\u540C\uFF0C\u56E0\u6B64\u9700\u8981\u9488\u5BF9\u4E0D\u540C\u73AF\u5883\u6765\u8BA8\u8BBA\u8C03\u5EA6\u7B97\u6CD5\u3002</p><h3 id="_1-\u6279\u5904\u7406\u7CFB\u7EDF" tabindex="-1"><a class="header-anchor" href="#_1-\u6279\u5904\u7406\u7CFB\u7EDF" aria-hidden="true">#</a> 1. \u6279\u5904\u7406\u7CFB\u7EDF</h3><p>\u6279\u5904\u7406\u7CFB\u7EDF\u6CA1\u6709\u592A\u591A\u7684\u7528\u6237\u64CD\u4F5C\uFF0C\u5728\u8BE5\u7CFB\u7EDF\u4E2D\uFF0C\u8C03\u5EA6\u7B97\u6CD5\u76EE\u6807\u662F\u4FDD\u8BC1\u541E\u5410\u91CF\u548C\u5468\u8F6C\u65F6\u95F4\uFF08\u4ECE\u63D0\u4EA4\u5230\u7EC8\u6B62\u7684\u65F6\u95F4\uFF09\u3002</p><p><strong>1.1 \u5148\u6765\u5148\u670D\u52A1 first-come first-serverd\uFF08FCFS\uFF09</strong></p><p>\u975E\u62A2\u5360\u5F0F\u7684\u8C03\u5EA6\u7B97\u6CD5\uFF0C\u6309\u7167\u8BF7\u6C42\u7684\u987A\u5E8F\u8FDB\u884C\u8C03\u5EA6\u3002</p><p>\u6709\u5229\u4E8E\u957F\u4F5C\u4E1A\uFF0C\u4F46\u4E0D\u5229\u4E8E\u77ED\u4F5C\u4E1A\uFF0C\u56E0\u4E3A\u77ED\u4F5C\u4E1A\u5FC5\u987B\u4E00\u76F4\u7B49\u5F85\u524D\u9762\u7684\u957F\u4F5C\u4E1A\u6267\u884C\u5B8C\u6BD5\u624D\u80FD\u6267\u884C\uFF0C\u800C\u957F\u4F5C\u4E1A\u53C8\u9700\u8981\u6267\u884C\u5F88\u957F\u65F6\u95F4\uFF0C\u9020\u6210\u4E86\u77ED\u4F5C\u4E1A\u7B49\u5F85\u65F6\u95F4\u8FC7\u957F\u3002</p><p><strong>1.2 \u77ED\u4F5C\u4E1A\u4F18\u5148 shortest job first\uFF08SJF\uFF09</strong></p><p>\u975E\u62A2\u5360\u5F0F\u7684\u8C03\u5EA6\u7B97\u6CD5\uFF0C\u6309\u4F30\u8BA1\u8FD0\u884C\u65F6\u95F4\u6700\u77ED\u7684\u987A\u5E8F\u8FDB\u884C\u8C03\u5EA6\u3002</p><p>\u957F\u4F5C\u4E1A\u6709\u53EF\u80FD\u4F1A\u997F\u6B7B\uFF0C\u5904\u4E8E\u4E00\u76F4\u7B49\u5F85\u77ED\u4F5C\u4E1A\u6267\u884C\u5B8C\u6BD5\u7684\u72B6\u6001\u3002\u56E0\u4E3A\u5982\u679C\u4E00\u76F4\u6709\u77ED\u4F5C\u4E1A\u5230\u6765\uFF0C\u90A3\u4E48\u957F\u4F5C\u4E1A\u6C38\u8FDC\u5F97\u4E0D\u5230\u8C03\u5EA6\u3002</p><p><strong>1.3 \u6700\u77ED\u5269\u4F59\u65F6\u95F4\u4F18\u5148 shortest remaining time next\uFF08SRTN\uFF09</strong></p><p>\u6700\u77ED\u4F5C\u4E1A\u4F18\u5148\u7684\u62A2\u5360\u5F0F\u7248\u672C\uFF0C\u6309\u5269\u4F59\u8FD0\u884C\u65F6\u95F4\u7684\u987A\u5E8F\u8FDB\u884C\u8C03\u5EA6\u3002 \u5F53\u4E00\u4E2A\u65B0\u7684\u4F5C\u4E1A\u5230\u8FBE\u65F6\uFF0C\u5176\u6574\u4E2A\u8FD0\u884C\u65F6\u95F4\u4E0E\u5F53\u524D\u8FDB\u7A0B\u7684\u5269\u4F59\u65F6\u95F4\u4F5C\u6BD4\u8F83\u3002\u5982\u679C\u65B0\u7684\u8FDB\u7A0B\u9700\u8981\u7684\u65F6\u95F4\u66F4\u5C11\uFF0C\u5219\u6302\u8D77\u5F53\u524D\u8FDB\u7A0B\uFF0C\u8FD0\u884C\u65B0\u7684\u8FDB\u7A0B\u3002\u5426\u5219\u65B0\u7684\u8FDB\u7A0B\u7B49\u5F85\u3002</p><h3 id="_2-\u4EA4\u4E92\u5F0F\u7CFB\u7EDF" tabindex="-1"><a class="header-anchor" href="#_2-\u4EA4\u4E92\u5F0F\u7CFB\u7EDF" aria-hidden="true">#</a> 2. \u4EA4\u4E92\u5F0F\u7CFB\u7EDF</h3><p>\u4EA4\u4E92\u5F0F\u7CFB\u7EDF\u6709\u5927\u91CF\u7684\u7528\u6237\u4EA4\u4E92\u64CD\u4F5C\uFF0C\u5728\u8BE5\u7CFB\u7EDF\u4E2D\u8C03\u5EA6\u7B97\u6CD5\u7684\u76EE\u6807\u662F\u5FEB\u901F\u5730\u8FDB\u884C\u54CD\u5E94\u3002</p><p><strong>2.1 \u65F6\u95F4\u7247\u8F6E\u8F6C</strong></p><p>\u5C06\u6240\u6709\u5C31\u7EEA\u8FDB\u7A0B\u6309 FCFS \u7684\u539F\u5219\u6392\u6210\u4E00\u4E2A\u961F\u5217\uFF0C\u6BCF\u6B21\u8C03\u5EA6\u65F6\uFF0C\u628A CPU \u65F6\u95F4\u5206\u914D\u7ED9\u961F\u9996\u8FDB\u7A0B\uFF0C\u8BE5\u8FDB\u7A0B\u53EF\u4EE5\u6267\u884C\u4E00\u4E2A\u65F6\u95F4\u7247\u3002\u5F53\u65F6\u95F4\u7247\u7528\u5B8C\u65F6\uFF0C\u7531\u8BA1\u65F6\u5668\u53D1\u51FA\u65F6\u949F\u4E2D\u65AD\uFF0C\u8C03\u5EA6\u7A0B\u5E8F\u4FBF\u505C\u6B62\u8BE5\u8FDB\u7A0B\u7684\u6267\u884C\uFF0C\u5E76\u5C06\u5B83\u9001\u5F80\u5C31\u7EEA\u961F\u5217\u7684\u672B\u5C3E\uFF0C\u540C\u65F6\u7EE7\u7EED\u628A CPU \u65F6\u95F4\u5206\u914D\u7ED9\u961F\u9996\u7684\u8FDB\u7A0B\u3002</p><p>\u65F6\u95F4\u7247\u8F6E\u8F6C\u7B97\u6CD5\u7684\u6548\u7387\u548C\u65F6\u95F4\u7247\u7684\u5927\u5C0F\u6709\u5F88\u5927\u5173\u7CFB\uFF1A</p><ul><li>\u56E0\u4E3A\u8FDB\u7A0B\u5207\u6362\u90FD\u8981\u4FDD\u5B58\u8FDB\u7A0B\u7684\u4FE1\u606F\u5E76\u4E14\u8F7D\u5165\u65B0\u8FDB\u7A0B\u7684\u4FE1\u606F\uFF0C\u5982\u679C\u65F6\u95F4\u7247\u592A\u5C0F\uFF0C\u4F1A\u5BFC\u81F4\u8FDB\u7A0B\u5207\u6362\u5F97\u592A\u9891\u7E41\uFF0C\u5728\u8FDB\u7A0B\u5207\u6362\u4E0A\u5C31\u4F1A\u82B1\u8FC7\u591A\u65F6\u95F4\u3002</li><li>\u800C\u5982\u679C\u65F6\u95F4\u7247\u8FC7\u957F\uFF0C\u90A3\u4E48\u5B9E\u65F6\u6027\u5C31\u4E0D\u80FD\u5F97\u5230\u4FDD\u8BC1\u3002</li></ul><p><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/8c662999-c16c-481c-9f40-1fdba5bc9167.png" alt="img"></p><p><strong>2.2 \u4F18\u5148\u7EA7\u8C03\u5EA6</strong></p><p>\u4E3A\u6BCF\u4E2A\u8FDB\u7A0B\u5206\u914D\u4E00\u4E2A\u4F18\u5148\u7EA7\uFF0C\u6309\u4F18\u5148\u7EA7\u8FDB\u884C\u8C03\u5EA6\u3002</p><p>\u4E3A\u4E86\u9632\u6B62\u4F4E\u4F18\u5148\u7EA7\u7684\u8FDB\u7A0B\u6C38\u8FDC\u7B49\u4E0D\u5230\u8C03\u5EA6\uFF0C\u53EF\u4EE5\u968F\u7740\u65F6\u95F4\u7684\u63A8\u79FB\u589E\u52A0\u7B49\u5F85\u8FDB\u7A0B\u7684\u4F18\u5148\u7EA7\u3002</p><p><strong>2.3 \u591A\u7EA7\u53CD\u9988\u961F\u5217</strong></p><p>\u4E00\u4E2A\u8FDB\u7A0B\u9700\u8981\u6267\u884C 100 \u4E2A\u65F6\u95F4\u7247\uFF0C\u5982\u679C\u91C7\u7528\u65F6\u95F4\u7247\u8F6E\u8F6C\u8C03\u5EA6\u7B97\u6CD5\uFF0C\u90A3\u4E48\u9700\u8981\u4EA4\u6362 100 \u6B21\u3002</p><p>\u591A\u7EA7\u961F\u5217\u662F\u4E3A\u8FD9\u79CD\u9700\u8981\u8FDE\u7EED\u6267\u884C\u591A\u4E2A\u65F6\u95F4\u7247\u7684\u8FDB\u7A0B\u8003\u8651\uFF0C\u5B83\u8BBE\u7F6E\u4E86\u591A\u4E2A\u961F\u5217\uFF0C\u6BCF\u4E2A\u961F\u5217\u65F6\u95F4\u7247\u5927\u5C0F\u90FD\u4E0D\u540C\uFF0C\u4F8B\u5982 1,2,4,8,..\u3002\u8FDB\u7A0B\u5728\u7B2C\u4E00\u4E2A\u961F\u5217\u6CA1\u6267\u884C\u5B8C\uFF0C\u5C31\u4F1A\u88AB\u79FB\u5230\u4E0B\u4E00\u4E2A\u961F\u5217\u3002\u8FD9\u79CD\u65B9\u5F0F\u4E0B\uFF0C\u4E4B\u524D\u7684\u8FDB\u7A0B\u53EA\u9700\u8981\u4EA4\u6362 7 \u6B21\u3002</p><p>\u6BCF\u4E2A\u961F\u5217\u4F18\u5148\u6743\u4E5F\u4E0D\u540C\uFF0C\u6700\u4E0A\u9762\u7684\u4F18\u5148\u6743\u6700\u9AD8\u3002\u56E0\u6B64\u53EA\u6709\u4E0A\u4E00\u4E2A\u961F\u5217\u6CA1\u6709\u8FDB\u7A0B\u5728\u6392\u961F\uFF0C\u624D\u80FD\u8C03\u5EA6\u5F53\u524D\u961F\u5217\u4E0A\u7684\u8FDB\u7A0B\u3002</p><p>\u53EF\u4EE5\u5C06\u8FD9\u79CD\u8C03\u5EA6\u7B97\u6CD5\u770B\u6210\u662F\u65F6\u95F4\u7247\u8F6E\u8F6C\u8C03\u5EA6\u7B97\u6CD5\u548C\u4F18\u5148\u7EA7\u8C03\u5EA6\u7B97\u6CD5\u7684\u7ED3\u5408\u3002</p><p><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/042cf928-3c8e-4815-ae9c-f2780202c68f.png" alt="img"></p><h3 id="_3-\u5B9E\u65F6\u7CFB\u7EDF" tabindex="-1"><a class="header-anchor" href="#_3-\u5B9E\u65F6\u7CFB\u7EDF" aria-hidden="true">#</a> 3. \u5B9E\u65F6\u7CFB\u7EDF</h3><p>\u5B9E\u65F6\u7CFB\u7EDF\u8981\u6C42\u4E00\u4E2A\u8BF7\u6C42\u5728\u4E00\u4E2A\u786E\u5B9A\u65F6\u95F4\u5185\u5F97\u5230\u54CD\u5E94\u3002</p><p>\u5206\u4E3A\u786C\u5B9E\u65F6\u548C\u8F6F\u5B9E\u65F6\uFF0C\u524D\u8005\u5FC5\u987B\u6EE1\u8DB3\u7EDD\u5BF9\u7684\u622A\u6B62\u65F6\u95F4\uFF0C\u540E\u8005\u53EF\u4EE5\u5BB9\u5FCD\u4E00\u5B9A\u7684\u8D85\u65F6\u3002</p><h2 id="\u8FDB\u7A0B\u540C\u6B65" tabindex="-1"><a class="header-anchor" href="#\u8FDB\u7A0B\u540C\u6B65" aria-hidden="true">#</a> \u8FDB\u7A0B\u540C\u6B65</h2><h3 id="_1-\u4E34\u754C\u533A" tabindex="-1"><a class="header-anchor" href="#_1-\u4E34\u754C\u533A" aria-hidden="true">#</a> 1. \u4E34\u754C\u533A</h3><p>\u5BF9\u4E34\u754C\u8D44\u6E90\u8FDB\u884C\u8BBF\u95EE\u7684\u90A3\u6BB5\u4EE3\u7801\u79F0\u4E3A\u4E34\u754C\u533A\u3002</p><p>\u4E3A\u4E86\u4E92\u65A5\u8BBF\u95EE\u4E34\u754C\u8D44\u6E90\uFF0C\u6BCF\u4E2A\u8FDB\u7A0B\u5728\u8FDB\u5165\u4E34\u754C\u533A\u4E4B\u524D\uFF0C\u9700\u8981\u5148\u8FDB\u884C\u68C0\u67E5\u3002</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>// entry section
// critical section;
// exit section
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u540C\u6B65\u4E0E\u4E92\u65A5" tabindex="-1"><a class="header-anchor" href="#_2-\u540C\u6B65\u4E0E\u4E92\u65A5" aria-hidden="true">#</a> 2. \u540C\u6B65\u4E0E\u4E92\u65A5</h3><ul><li>\u540C\u6B65\uFF1A\u591A\u4E2A\u8FDB\u7A0B\u56E0\u4E3A\u5408\u4F5C\u4EA7\u751F\u7684\u76F4\u63A5\u5236\u7EA6\u5173\u7CFB\uFF0C\u4F7F\u5F97\u8FDB\u7A0B\u6709\u4E00\u5B9A\u7684\u5148\u540E\u6267\u884C\u5173\u7CFB\u3002</li><li>\u4E92\u65A5\uFF1A\u591A\u4E2A\u8FDB\u7A0B\u5728\u540C\u4E00\u65F6\u523B\u53EA\u6709\u4E00\u4E2A\u8FDB\u7A0B\u80FD\u8FDB\u5165\u4E34\u754C\u533A\u3002</li></ul><h3 id="_3-\u4FE1\u53F7\u91CF" tabindex="-1"><a class="header-anchor" href="#_3-\u4FE1\u53F7\u91CF" aria-hidden="true">#</a> 3. \u4FE1\u53F7\u91CF</h3><p>\u4FE1\u53F7\u91CF\uFF08Semaphore\uFF09\u662F\u4E00\u4E2A\u6574\u578B\u53D8\u91CF\uFF0C\u53EF\u4EE5\u5BF9\u5176\u6267\u884C down \u548C up \u64CD\u4F5C\uFF0C\u4E5F\u5C31\u662F\u5E38\u89C1\u7684 P \u548C V \u64CD\u4F5C\u3002</p><ul><li><strong>down</strong> : \u5982\u679C\u4FE1\u53F7\u91CF\u5927\u4E8E 0 \uFF0C\u6267\u884C -1 \u64CD\u4F5C\uFF1B\u5982\u679C\u4FE1\u53F7\u91CF\u7B49\u4E8E 0\uFF0C\u8FDB\u7A0B\u7761\u7720\uFF0C\u7B49\u5F85\u4FE1\u53F7\u91CF\u5927\u4E8E 0\uFF1B</li><li><strong>up</strong> \uFF1A\u5BF9\u4FE1\u53F7\u91CF\u6267\u884C +1 \u64CD\u4F5C\uFF0C\u5524\u9192\u7761\u7720\u7684\u8FDB\u7A0B\u8BA9\u5176\u5B8C\u6210 down \u64CD\u4F5C\u3002</li></ul><p>down \u548C up \u64CD\u4F5C\u9700\u8981\u88AB\u8BBE\u8BA1\u6210\u539F\u8BED\uFF0C\u4E0D\u53EF\u5206\u5272\uFF0C\u901A\u5E38\u7684\u505A\u6CD5\u662F\u5728\u6267\u884C\u8FD9\u4E9B\u64CD\u4F5C\u7684\u65F6\u5019\u5C4F\u853D\u4E2D\u65AD\u3002</p><p>\u5982\u679C\u4FE1\u53F7\u91CF\u7684\u53D6\u503C\u53EA\u80FD\u4E3A 0 \u6216\u8005 1\uFF0C\u90A3\u4E48\u5C31\u6210\u4E3A\u4E86 <strong>\u4E92\u65A5\u91CF\uFF08Mutex\uFF09</strong> \uFF0C0 \u8868\u793A\u4E34\u754C\u533A\u5DF2\u7ECF\u52A0\u9501\uFF0C1 \u8868\u793A\u4E34\u754C\u533A\u89E3\u9501\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">int</span> semaphore<span class="token punctuation">;</span>
semaphore mutex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">P1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">down</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4E34\u754C\u533A</span>
    <span class="token function">up</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">P2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">down</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4E34\u754C\u533A</span>
    <span class="token function">up</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>**\u4F7F\u7528\u4FE1\u53F7\u91CF\u5B9E\u73B0\u751F\u4EA7\u8005-\u6D88\u8D39\u8005\u95EE\u9898**    
</code></pre><p>\u95EE\u9898\u63CF\u8FF0\uFF1A\u4F7F\u7528\u4E00\u4E2A\u7F13\u51B2\u533A\u6765\u4FDD\u5B58\u7269\u54C1\uFF0C\u53EA\u6709\u7F13\u51B2\u533A\u6CA1\u6709\u6EE1\uFF0C\u751F\u4EA7\u8005\u624D\u53EF\u4EE5\u653E\u5165\u7269\u54C1\uFF1B\u53EA\u6709\u7F13\u51B2\u533A\u4E0D\u4E3A\u7A7A\uFF0C\u6D88\u8D39\u8005\u624D\u53EF\u4EE5\u62FF\u8D70\u7269\u54C1\u3002</p><p>\u56E0\u4E3A\u7F13\u51B2\u533A\u5C5E\u4E8E\u4E34\u754C\u8D44\u6E90\uFF0C\u56E0\u6B64\u9700\u8981\u4F7F\u7528\u4E00\u4E2A\u4E92\u65A5\u91CF mutex \u6765\u63A7\u5236\u5BF9\u7F13\u51B2\u533A\u7684\u4E92\u65A5\u8BBF\u95EE\u3002</p><p>\u4E3A\u4E86\u540C\u6B65\u751F\u4EA7\u8005\u548C\u6D88\u8D39\u8005\u7684\u884C\u4E3A\uFF0C\u9700\u8981\u8BB0\u5F55\u7F13\u51B2\u533A\u4E2D\u7269\u54C1\u7684\u6570\u91CF\u3002\u6570\u91CF\u53EF\u4EE5\u4F7F\u7528\u4FE1\u53F7\u91CF\u6765\u8FDB\u884C\u7EDF\u8BA1\uFF0C\u8FD9\u91CC\u9700\u8981\u4F7F\u7528\u4E24\u4E2A\u4FE1\u53F7\u91CF\uFF1Aempty \u8BB0\u5F55\u7A7A\u7F13\u51B2\u533A\u7684\u6570\u91CF\uFF0Cfull \u8BB0\u5F55\u6EE1\u7F13\u51B2\u533A\u7684\u6570\u91CF\u3002\u5176\u4E2D\uFF0Cempty \u4FE1\u53F7\u91CF\u662F\u5728\u751F\u4EA7\u8005\u8FDB\u7A0B\u4E2D\u4F7F\u7528\uFF0C\u5F53 empty \u4E0D\u4E3A 0 \u65F6\uFF0C\u751F\u4EA7\u8005\u624D\u53EF\u4EE5\u653E\u5165\u7269\u54C1\uFF1Bfull \u4FE1\u53F7\u91CF\u662F\u5728\u6D88\u8D39\u8005\u8FDB\u7A0B\u4E2D\u4F7F\u7528\uFF0C\u5F53 full \u4FE1\u53F7\u91CF\u4E0D\u4E3A 0 \u65F6\uFF0C\u6D88\u8D39\u8005\u624D\u53EF\u4EE5\u53D6\u8D70\u7269\u54C1\u3002</p><p>\u6CE8\u610F\uFF0C\u4E0D\u80FD\u5148\u5BF9\u7F13\u51B2\u533A\u8FDB\u884C\u52A0\u9501\uFF0C\u518D\u6D4B\u8BD5\u4FE1\u53F7\u91CF\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4E0D\u80FD\u5148\u6267\u884C down(mutex) \u518D\u6267\u884C down(empty)\u3002\u5982\u679C\u8FD9\u4E48\u505A\u4E86\uFF0C\u90A3\u4E48\u53EF\u80FD\u4F1A\u51FA\u73B0\u8FD9\u79CD\u60C5\u51B5\uFF1A\u751F\u4EA7\u8005\u5BF9\u7F13\u51B2\u533A\u52A0\u9501\u540E\uFF0C\u6267\u884C down(empty) \u64CD\u4F5C\uFF0C\u53D1\u73B0 empty = 0\uFF0C\u6B64\u65F6\u751F\u4EA7\u8005\u7761\u7720\u3002\u6D88\u8D39\u8005\u4E0D\u80FD\u8FDB\u5165\u4E34\u754C\u533A\uFF0C\u56E0\u4E3A\u751F\u4EA7\u8005\u5BF9\u7F13\u51B2\u533A\u52A0\u9501\u4E86\uFF0C\u6D88\u8D39\u8005\u5C31\u65E0\u6CD5\u6267\u884C up(empty) \u64CD\u4F5C\uFF0Cempty \u6C38\u8FDC\u90FD\u4E3A 0\uFF0C\u5BFC\u81F4\u751F\u4EA7\u8005\u6C38\u8FDC\u7B49\u5F85\u4E0B\uFF0C\u4E0D\u4F1A\u91CA\u653E\u9501\uFF0C\u6D88\u8D39\u8005\u56E0\u6B64\u4E5F\u4F1A\u6C38\u8FDC\u7B49\u5F85\u4E0B\u53BB\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">N</span> <span class="token expression"><span class="token number">100</span></span></span>
<span class="token keyword">typedef</span> <span class="token keyword">int</span> semaphore<span class="token punctuation">;</span>
semaphore mutex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
semaphore empty <span class="token operator">=</span> N<span class="token punctuation">;</span>
semaphore full <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">producer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>TRUE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> item <span class="token operator">=</span> <span class="token function">produce_item</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">down</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>empty<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">down</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">insert_item</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">up</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">up</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>full<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">consumer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>TRUE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">down</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>full<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">down</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> item <span class="token operator">=</span> <span class="token function">remove_item</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">consume_item</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">up</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">up</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>empty<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-\u7BA1\u7A0B" tabindex="-1"><a class="header-anchor" href="#_4-\u7BA1\u7A0B" aria-hidden="true">#</a> 4. \u7BA1\u7A0B</h3><p>\u4F7F\u7528\u4FE1\u53F7\u91CF\u673A\u5236\u5B9E\u73B0\u7684\u751F\u4EA7\u8005\u6D88\u8D39\u8005\u95EE\u9898\u9700\u8981\u5BA2\u6237\u7AEF\u4EE3\u7801\u505A\u5F88\u591A\u63A7\u5236\uFF0C\u800C\u7BA1\u7A0B\u628A\u63A7\u5236\u7684\u4EE3\u7801\u72EC\u7ACB\u51FA\u6765\uFF0C\u4E0D\u4EC5\u4E0D\u5BB9\u6613\u51FA\u9519\uFF0C\u4E5F\u4F7F\u5F97\u5BA2\u6237\u7AEF\u4EE3\u7801\u8C03\u7528\u66F4\u5BB9\u6613\u3002</p><p>c \u8BED\u8A00\u4E0D\u652F\u6301\u7BA1\u7A0B\uFF0C\u4E0B\u9762\u7684\u793A\u4F8B\u4EE3\u7801\u4F7F\u7528\u4E86\u7C7B Pascal \u8BED\u8A00\u6765\u63CF\u8FF0\u7BA1\u7A0B\u3002\u793A\u4F8B\u4EE3\u7801\u7684\u7BA1\u7A0B\u63D0\u4F9B\u4E86 insert() \u548C remove() \u65B9\u6CD5\uFF0C\u5BA2\u6237\u7AEF\u4EE3\u7801\u901A\u8FC7\u8C03\u7528\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u6765\u89E3\u51B3\u751F\u4EA7\u8005-\u6D88\u8D39\u8005\u95EE\u9898\u3002</p><div class="language-pascal ext-pascal line-numbers-mode"><pre class="language-pascal"><code>monitor ProducerConsumer
    integer i<span class="token punctuation">;</span>
    condition c<span class="token punctuation">;</span>

    <span class="token keyword">procedure</span> insert<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">begin</span>
        <span class="token comment">// ...</span>
    <span class="token keyword">end</span><span class="token punctuation">;</span>

    <span class="token keyword">procedure</span> remove<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">begin</span>
        <span class="token comment">// ...</span>
    <span class="token keyword">end</span><span class="token punctuation">;</span>
<span class="token keyword">end</span> monitor<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7BA1\u7A0B\u6709\u4E00\u4E2A\u91CD\u8981\u7279\u6027\uFF1A\u5728\u4E00\u4E2A\u65F6\u523B\u53EA\u80FD\u6709\u4E00\u4E2A\u8FDB\u7A0B\u4F7F\u7528\u7BA1\u7A0B\u3002\u8FDB\u7A0B\u5728\u65E0\u6CD5\u7EE7\u7EED\u6267\u884C\u7684\u65F6\u5019\u4E0D\u80FD\u4E00\u76F4\u5360\u7528\u7BA1\u7A0B\uFF0C\u5426\u5219\u5176\u5B83\u8FDB\u7A0B\u6C38\u8FDC\u4E0D\u80FD\u4F7F\u7528\u7BA1\u7A0B\u3002</p><p>\u7BA1\u7A0B\u5F15\u5165\u4E86 <strong>\u6761\u4EF6\u53D8\u91CF</strong> \u4EE5\u53CA\u76F8\u5173\u7684\u64CD\u4F5C\uFF1A<strong>wait()</strong> \u548C <strong>signal()</strong> \u6765\u5B9E\u73B0\u540C\u6B65\u64CD\u4F5C\u3002\u5BF9\u6761\u4EF6\u53D8\u91CF\u6267\u884C wait() \u64CD\u4F5C\u4F1A\u5BFC\u81F4\u8C03\u7528\u8FDB\u7A0B\u963B\u585E\uFF0C\u628A\u7BA1\u7A0B\u8BA9\u51FA\u6765\u7ED9\u53E6\u4E00\u4E2A\u8FDB\u7A0B\u6301\u6709\u3002signal() \u64CD\u4F5C\u7528\u4E8E\u5524\u9192\u88AB\u963B\u585E\u7684\u8FDB\u7A0B\u3002</p><p><strong>\u4F7F\u7528\u7BA1\u7A0B\u5B9E\u73B0\u751F\u4EA7\u8005-\u6D88\u8D39\u8005\u95EE\u9898</strong></p><div class="language-pascal ext-pascal line-numbers-mode"><pre class="language-pascal"><code><span class="token comment">// \u7BA1\u7A0B</span>
monitor ProducerConsumer
    condition full<span class="token punctuation">,</span> empty<span class="token punctuation">;</span>
    integer count <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    condition c<span class="token punctuation">;</span>

    <span class="token keyword">procedure</span> insert<span class="token punctuation">(</span>item<span class="token punctuation">:</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">begin</span>
        <span class="token keyword">if</span> count <span class="token operator">=</span> N <span class="token keyword">then</span> wait<span class="token punctuation">(</span>full<span class="token punctuation">)</span><span class="token punctuation">;</span>
        insert_item<span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
        count <span class="token operator">:=</span> count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> count <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">then</span> signal<span class="token punctuation">(</span>empty<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span><span class="token punctuation">;</span>

    <span class="token keyword">function</span> remove<span class="token punctuation">:</span> integer<span class="token punctuation">;</span>
    <span class="token keyword">begin</span>
        <span class="token keyword">if</span> count <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">then</span> wait<span class="token punctuation">(</span>empty<span class="token punctuation">)</span><span class="token punctuation">;</span>
        remove <span class="token operator">=</span> remove_item<span class="token punctuation">;</span>
        count <span class="token operator">:=</span> count <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> count <span class="token operator">=</span> N <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">then</span> signal<span class="token punctuation">(</span>full<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span><span class="token punctuation">;</span>
<span class="token keyword">end</span> monitor<span class="token punctuation">;</span>

<span class="token comment">// \u751F\u4EA7\u8005\u5BA2\u6237\u7AEF</span>
<span class="token keyword">procedure</span> producer
<span class="token keyword">begin</span>
    <span class="token keyword">while</span> <span class="token keyword">true</span> <span class="token keyword">do</span>
    <span class="token keyword">begin</span>
        item <span class="token operator">=</span> produce_item<span class="token punctuation">;</span>
        ProducerConsumer<span class="token punctuation">.</span>insert<span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>
<span class="token keyword">end</span><span class="token punctuation">;</span>

<span class="token comment">// \u6D88\u8D39\u8005\u5BA2\u6237\u7AEF</span>
<span class="token keyword">procedure</span> consumer
<span class="token keyword">begin</span>
    <span class="token keyword">while</span> <span class="token keyword">true</span> <span class="token keyword">do</span>
    <span class="token keyword">begin</span>
        item <span class="token operator">=</span> ProducerConsumer<span class="token punctuation">.</span>remove<span class="token punctuation">;</span>
        consume_item<span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>
<span class="token keyword">end</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7ECF\u5178\u540C\u6B65\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u7ECF\u5178\u540C\u6B65\u95EE\u9898" aria-hidden="true">#</a> \u7ECF\u5178\u540C\u6B65\u95EE\u9898</h2><p>\u751F\u4EA7\u8005\u548C\u6D88\u8D39\u8005\u95EE\u9898\u524D\u9762\u5DF2\u7ECF\u8BA8\u8BBA\u8FC7\u4E86\u3002</p><h3 id="_1-\u54F2\u5B66\u5BB6\u8FDB\u9910\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_1-\u54F2\u5B66\u5BB6\u8FDB\u9910\u95EE\u9898" aria-hidden="true">#</a> 1. \u54F2\u5B66\u5BB6\u8FDB\u9910\u95EE\u9898</h3><p><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/a9077f06-7584-4f2b-8c20-3a8e46928820.jpg" alt="img"></p><p>\u4E94\u4E2A\u54F2\u5B66\u5BB6\u56F4\u7740\u4E00\u5F20\u5706\u684C\uFF0C\u6BCF\u4E2A\u54F2\u5B66\u5BB6\u9762\u524D\u653E\u7740\u98DF\u7269\u3002\u54F2\u5B66\u5BB6\u7684\u751F\u6D3B\u6709\u4E24\u79CD\u4EA4\u66FF\u6D3B\u52A8\uFF1A\u5403\u996D\u4EE5\u53CA\u601D\u8003\u3002\u5F53\u4E00\u4E2A\u54F2\u5B66\u5BB6\u5403\u996D\u65F6\uFF0C\u9700\u8981\u5148\u62FF\u8D77\u81EA\u5DF1\u5DE6\u53F3\u4E24\u8FB9\u7684\u4E24\u6839\u7B77\u5B50\uFF0C\u5E76\u4E14\u4E00\u6B21\u53EA\u80FD\u62FF\u8D77\u4E00\u6839\u7B77\u5B50\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u79CD\u9519\u8BEF\u7684\u89E3\u6CD5\uFF0C\u5982\u679C\u6240\u6709\u54F2\u5B66\u5BB6\u540C\u65F6\u62FF\u8D77\u5DE6\u624B\u8FB9\u7684\u7B77\u5B50\uFF0C\u90A3\u4E48\u6240\u6709\u54F2\u5B66\u5BB6\u90FD\u5728\u7B49\u5F85\u5176\u5B83\u54F2\u5B66\u5BB6\u5403\u5B8C\u5E76\u91CA\u653E\u81EA\u5DF1\u624B\u4E2D\u7684\u7B77\u5B50\uFF0C\u5BFC\u81F4\u6B7B\u9501\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">N</span> <span class="token expression"><span class="token number">5</span></span></span>

<span class="token keyword">void</span> <span class="token function">philosopher</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>TRUE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">think</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">take</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// \u62FF\u8D77\u5DE6\u8FB9\u7684\u7B77\u5B50</span>
        <span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span>N<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62FF\u8D77\u53F3\u8FB9\u7684\u7B77\u5B50</span>
        <span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">put</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span>N<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u4E86\u9632\u6B62\u6B7B\u9501\u7684\u53D1\u751F\uFF0C\u53EF\u4EE5\u8BBE\u7F6E\u4E24\u4E2A\u6761\u4EF6\uFF1A</p><ul><li>\u5FC5\u987B\u540C\u65F6\u62FF\u8D77\u5DE6\u53F3\u4E24\u6839\u7B77\u5B50\uFF1B</li><li>\u53EA\u6709\u5728\u4E24\u4E2A\u90BB\u5C45\u90FD\u6CA1\u6709\u8FDB\u9910\u7684\u60C5\u51B5\u4E0B\u624D\u5141\u8BB8\u8FDB\u9910\u3002</li></ul><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">N</span> <span class="token expression"><span class="token number">5</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LEFT</span> <span class="token expression"><span class="token punctuation">(</span>i <span class="token operator">+</span> N <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> N </span><span class="token comment">// \u5DE6\u90BB\u5C45</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">RIGHT</span> <span class="token expression"><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> N    </span><span class="token comment">// \u53F3\u90BB\u5C45</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">THINKING</span> <span class="token expression"><span class="token number">0</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">HUNGRY</span>   <span class="token expression"><span class="token number">1</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">EATING</span>   <span class="token expression"><span class="token number">2</span></span></span>
<span class="token keyword">typedef</span> <span class="token keyword">int</span> semaphore<span class="token punctuation">;</span>
<span class="token keyword">int</span> state<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token comment">// \u8DDF\u8E2A\u6BCF\u4E2A\u54F2\u5B66\u5BB6\u7684\u72B6\u6001</span>
semaphore mutex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>         <span class="token comment">// \u4E34\u754C\u533A\u7684\u4E92\u65A5\uFF0C\u4E34\u754C\u533A\u662F state \u6570\u7EC4\uFF0C\u5BF9\u5176\u4FEE\u6539\u9700\u8981\u4E92\u65A5</span>
semaphore s<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>              <span class="token comment">// \u6BCF\u4E2A\u54F2\u5B66\u5BB6\u4E00\u4E2A\u4FE1\u53F7\u91CF</span>

<span class="token keyword">void</span> <span class="token function">philosopher</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>TRUE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">think</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">take_two</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">eat</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">put_two</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">take_two</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">down</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    state<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> HUNGRY<span class="token punctuation">;</span>
    <span class="token function">check</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">up</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">down</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53EA\u6709\u6536\u5230\u901A\u77E5\u4E4B\u540E\u624D\u53EF\u4EE5\u5F00\u59CB\u5403\uFF0C\u5426\u5219\u4F1A\u4E00\u76F4\u7B49\u4E0B\u53BB</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">put_two</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">down</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    state<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> THINKING<span class="token punctuation">;</span>
    <span class="token function">check</span><span class="token punctuation">(</span>LEFT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5C1D\u8BD5\u901A\u77E5\u5DE6\u53F3\u90BB\u5C45\uFF0C\u81EA\u5DF1\u5403\u5B8C\u4E86\uFF0C\u4F60\u4EEC\u53EF\u4EE5\u5F00\u59CB\u5403\u4E86</span>
    <span class="token function">check</span><span class="token punctuation">(</span>RIGHT<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">up</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">eat</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">down</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    state<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> EATING<span class="token punctuation">;</span>
    <span class="token function">up</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u68C0\u67E5\u4E24\u4E2A\u90BB\u5C45\u662F\u5426\u90FD\u6CA1\u6709\u7528\u9910\uFF0C\u5982\u679C\u662F\u7684\u8BDD\uFF0C\u5C31 up(&amp;s[i])\uFF0C\u4F7F\u5F97 down(&amp;s[i]) \u80FD\u591F\u5F97\u5230\u901A\u77E5\u5E76\u7EE7\u7EED\u6267\u884C</span>
<span class="token keyword">void</span> <span class="token function">check</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>         
    <span class="token keyword">if</span><span class="token punctuation">(</span>state<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> HUNGRY <span class="token operator">&amp;&amp;</span> state<span class="token punctuation">[</span>LEFT<span class="token punctuation">]</span> <span class="token operator">!=</span> EATING <span class="token operator">&amp;&amp;</span> state<span class="token punctuation">[</span>RIGHT<span class="token punctuation">]</span> <span class="token operator">!=</span>EATING<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        state<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> EATING<span class="token punctuation">;</span>
        <span class="token function">up</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u8BFB\u8005-\u5199\u8005\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_2-\u8BFB\u8005-\u5199\u8005\u95EE\u9898" aria-hidden="true">#</a> 2. \u8BFB\u8005-\u5199\u8005\u95EE\u9898</h3><p>\u5141\u8BB8\u591A\u4E2A\u8FDB\u7A0B\u540C\u65F6\u5BF9\u6570\u636E\u8FDB\u884C\u8BFB\u64CD\u4F5C\uFF0C\u4F46\u662F\u4E0D\u5141\u8BB8\u8BFB\u548C\u5199\u4EE5\u53CA\u5199\u548C\u5199\u64CD\u4F5C\u540C\u65F6\u53D1\u751F\u3002</p><p>\u4E00\u4E2A\u6574\u578B\u53D8\u91CF count \u8BB0\u5F55\u5728\u5BF9\u6570\u636E\u8FDB\u884C\u8BFB\u64CD\u4F5C\u7684\u8FDB\u7A0B\u6570\u91CF\uFF0C\u4E00\u4E2A\u4E92\u65A5\u91CF count_mutex \u7528\u4E8E\u5BF9 count \u52A0\u9501\uFF0C\u4E00\u4E2A\u4E92\u65A5\u91CF data_mutex \u7528\u4E8E\u5BF9\u8BFB\u5199\u7684\u6570\u636E\u52A0\u9501\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">int</span> semaphore<span class="token punctuation">;</span>
semaphore count_mutex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
semaphore data_mutex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">reader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>TRUE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">down</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>count_mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        count<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>count <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token function">down</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>data_mutex<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7B2C\u4E00\u4E2A\u8BFB\u8005\u9700\u8981\u5BF9\u6570\u636E\u8FDB\u884C\u52A0\u9501\uFF0C\u9632\u6B62\u5199\u8FDB\u7A0B\u8BBF\u95EE</span>
        <span class="token function">up</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>count_mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">down</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>count_mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        count<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>count <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token function">up</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>data_mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">up</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>count_mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">writer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>TRUE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">down</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>data_mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">write</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">up</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>data_mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,75),h=n("\u4EE5\u4E0B\u5185\u5BB9\u7531 "),f={href:"https://github.com/yugandharbandi",target:"_blank",rel:"noopener noreferrer"},w=n("@Bandi Yugandhar"),g=n(" \u63D0\u4F9B\u3002"),y=a(`<p>The first case may result Writer to starve. This case favous Writers i.e no writer, once added to the queue, shall be kept waiting longer than absolutely necessary(only when there are readers that entered the queue before the writer).</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> readcount<span class="token punctuation">,</span> writecount<span class="token punctuation">;</span>                   <span class="token comment">//(initial value = 0)</span>
semaphore rmutex<span class="token punctuation">,</span> wmutex<span class="token punctuation">,</span> readLock<span class="token punctuation">,</span> resource<span class="token punctuation">;</span> <span class="token comment">//(initial value = 1)</span>

<span class="token comment">//READER</span>
<span class="token keyword">void</span> <span class="token function">reader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">&lt;</span>ENTRY Section<span class="token operator">&gt;</span>
 <span class="token function">down</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>readLock<span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment">//  reader is trying to enter</span>
 <span class="token function">down</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rmutex<span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment">//   lock to increase readcount</span>
  readcount<span class="token operator">++</span><span class="token punctuation">;</span>                 
  <span class="token keyword">if</span> <span class="token punctuation">(</span>readcount <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>          
   <span class="token function">down</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment">//if you are the first reader then lock  the resource</span>
 <span class="token function">up</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rmutex<span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment">//release  for other readers</span>
 <span class="token function">up</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>readLock<span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment">//Done with trying to access the resource</span>

<span class="token operator">&lt;</span>CRITICAL Section<span class="token operator">&gt;</span>
<span class="token comment">//reading is performed</span>

<span class="token operator">&lt;</span>EXIT Section<span class="token operator">&gt;</span>
 <span class="token function">down</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rmutex<span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment">//reserve exit section - avoids race condition with readers</span>
 readcount<span class="token operator">--</span><span class="token punctuation">;</span>                       <span class="token comment">//indicate you&#39;re leaving</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>readcount <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>          <span class="token comment">//checks if you are last reader leaving</span>
   <span class="token function">up</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment">//if last, you must release the locked resource</span>
 <span class="token function">up</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rmutex<span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment">//release exit section for other readers</span>
<span class="token punctuation">}</span>

<span class="token comment">//WRITER</span>
<span class="token keyword">void</span> <span class="token function">writer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token operator">&lt;</span>ENTRY Section<span class="token operator">&gt;</span>
  <span class="token function">down</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>wmutex<span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment">//reserve entry section for writers - avoids race conditions</span>
  writecount<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token comment">//report yourself as a writer entering</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>writecount <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>         <span class="token comment">//checks if you&#39;re first writer</span>
   <span class="token function">down</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>readLock<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token comment">//if you&#39;re first, then you must lock the readers out. Prevent them from trying to enter CS</span>
  <span class="token function">up</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>wmutex<span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment">//release entry section</span>

<span class="token operator">&lt;</span>CRITICAL Section<span class="token operator">&gt;</span>
 <span class="token function">down</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//reserve the resource for yourself - prevents other writers from simultaneously editing the shared resource</span>
  <span class="token comment">//writing is performed</span>
 <span class="token function">up</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//release file</span>

<span class="token operator">&lt;</span>EXIT Section<span class="token operator">&gt;</span>
  <span class="token function">down</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>wmutex<span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment">//reserve exit section</span>
  writecount<span class="token operator">--</span><span class="token punctuation">;</span>                <span class="token comment">//indicate you&#39;re leaving</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>writecount <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>         <span class="token comment">//checks if you&#39;re the last writer</span>
   <span class="token function">up</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>readLock<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token comment">//if you&#39;re last writer, you must unlock the readers. Allows them to try enter CS for reading</span>
  <span class="token function">up</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>wmutex<span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment">//release exit section</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>We can observe that every reader is forced to acquire ReadLock. On the otherhand, writers doesn\u2019t need to lock individually. Once the first writer locks the ReadLock, it will be released only when there is no writer left in the queue.</p><p>From the both cases we observed that either reader or writer has to starve. Below solutionadds the constraint that no thread shall be allowed to starve; that is, the operation of obtaining a lock on the shared data will always terminate in a bounded amount of time.</p><div class="language-source-c ext-source-c line-numbers-mode"><pre class="language-source-c"><code>int readCount;                  // init to 0; number of readers currently accessing resource

// all semaphores initialised to 1
Semaphore resourceAccess;       // controls access (read/write) to the resource
Semaphore readCountAccess;      // for syncing changes to shared variable readCount
Semaphore serviceQueue;         // FAIRNESS: preserves ordering of requests (signaling must be FIFO)

void writer()
{ 
    down(&amp;serviceQueue);           // wait in line to be servicexs
    // &lt;ENTER&gt;
    down(&amp;resourceAccess);         // request exclusive access to resource
    // &lt;/ENTER&gt;
    up(&amp;serviceQueue);           // let next in line be serviced

    // &lt;WRITE&gt;
    writeResource();            // writing is performed
    // &lt;/WRITE&gt;

    // &lt;EXIT&gt;
    up(&amp;resourceAccess);         // release resource access for next reader/writer
    // &lt;/EXIT&gt;
}

void reader()
{ 
    down(&amp;serviceQueue);           // wait in line to be serviced
    down(&amp;readCountAccess);        // request exclusive access to readCount
    // &lt;ENTER&gt;
    if (readCount == 0)         // if there are no readers already reading:
        down(&amp;resourceAccess);     // request resource access for readers (writers blocked)
    readCount++;                // update count of active readers
    // &lt;/ENTER&gt;
    up(&amp;serviceQueue);           // let next in line be serviced
    up(&amp;readCountAccess);        // release access to readCount

    // &lt;READ&gt;
    readResource();             // reading is performed
    // &lt;/READ&gt;

    down(&amp;readCountAccess);        // request exclusive access to readCount
    // &lt;EXIT&gt;
    readCount--;                // update count of active readers
    if (readCount == 0)         // if there are no readers left:
        up(&amp;resourceAccess);     // release resource access for all
    // &lt;/EXIT&gt;
    up(&amp;readCountAccess);        // release access to readCount
}

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8FDB\u7A0B\u901A\u4FE1" tabindex="-1"><a class="header-anchor" href="#\u8FDB\u7A0B\u901A\u4FE1" aria-hidden="true">#</a> \u8FDB\u7A0B\u901A\u4FE1</h2><p>\u8FDB\u7A0B\u540C\u6B65\u4E0E\u8FDB\u7A0B\u901A\u4FE1\u5F88\u5BB9\u6613\u6DF7\u6DC6\uFF0C\u5B83\u4EEC\u7684\u533A\u522B\u5728\u4E8E\uFF1A</p><ul><li>\u8FDB\u7A0B\u540C\u6B65\uFF1A\u63A7\u5236\u591A\u4E2A\u8FDB\u7A0B\u6309\u4E00\u5B9A\u987A\u5E8F\u6267\u884C\uFF1B</li><li>\u8FDB\u7A0B\u901A\u4FE1\uFF1A\u8FDB\u7A0B\u95F4\u4F20\u8F93\u4FE1\u606F\u3002</li></ul><p>\u8FDB\u7A0B\u901A\u4FE1\u662F\u4E00\u79CD\u624B\u6BB5\uFF0C\u800C\u8FDB\u7A0B\u540C\u6B65\u662F\u4E00\u79CD\u76EE\u7684\u3002\u4E5F\u53EF\u4EE5\u8BF4\uFF0C\u4E3A\u4E86\u80FD\u591F\u8FBE\u5230\u8FDB\u7A0B\u540C\u6B65\u7684\u76EE\u7684\uFF0C\u9700\u8981\u8BA9\u8FDB\u7A0B\u8FDB\u884C\u901A\u4FE1\uFF0C\u4F20\u8F93\u4E00\u4E9B\u8FDB\u7A0B\u540C\u6B65\u6240\u9700\u8981\u7684\u4FE1\u606F\u3002</p><h3 id="_1-\u7BA1\u9053" tabindex="-1"><a class="header-anchor" href="#_1-\u7BA1\u9053" aria-hidden="true">#</a> 1. \u7BA1\u9053</h3><p>\u7BA1\u9053\u662F\u901A\u8FC7\u8C03\u7528 pipe \u51FD\u6570\u521B\u5EFA\u7684\uFF0Cfd[0] \u7528\u4E8E\u8BFB\uFF0Cfd[1] \u7528\u4E8E\u5199\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">pipe</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u5177\u6709\u4EE5\u4E0B\u9650\u5236\uFF1A</p><ul><li>\u53EA\u652F\u6301\u534A\u53CC\u5DE5\u901A\u4FE1\uFF08\u5355\u5411\u4EA4\u66FF\u4F20\u8F93\uFF09\uFF1B</li><li>\u53EA\u80FD\u5728\u7236\u5B50\u8FDB\u7A0B\u6216\u8005\u5144\u5F1F\u8FDB\u7A0B\u4E2D\u4F7F\u7528\u3002</li></ul><p><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/53cd9ade-b0a6-4399-b4de-7f1fbd06cdfb.png" alt="img"></p><h3 id="_2-fifo" tabindex="-1"><a class="header-anchor" href="#_2-fifo" aria-hidden="true">#</a> 2. FIFO</h3><p>\u4E5F\u79F0\u4E3A\u547D\u540D\u7BA1\u9053\uFF0C\u53BB\u9664\u4E86\u7BA1\u9053\u53EA\u80FD\u5728\u7236\u5B50\u8FDB\u7A0B\u4E2D\u4F7F\u7528\u7684\u9650\u5236\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/stat.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">mkfifo</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>path<span class="token punctuation">,</span> <span class="token class-name">mode_t</span> mode<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">mkfifoat</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>path<span class="token punctuation">,</span> <span class="token class-name">mode_t</span> mode<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>FIFO \u5E38\u7528\u4E8E\u5BA2\u6237-\u670D\u52A1\u5668\u5E94\u7528\u7A0B\u5E8F\u4E2D\uFF0CFIFO \u7528\u4F5C\u6C47\u805A\u70B9\uFF0C\u5728\u5BA2\u6237\u8FDB\u7A0B\u548C\u670D\u52A1\u5668\u8FDB\u7A0B\u4E4B\u95F4\u4F20\u9012\u6570\u636E\u3002</p><p><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/2ac50b81-d92a-4401-b9ec-f2113ecc3076.png" alt="img"></p><h3 id="_3-\u6D88\u606F\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#_3-\u6D88\u606F\u961F\u5217" aria-hidden="true">#</a> 3. \u6D88\u606F\u961F\u5217</h3><p>\u76F8\u6BD4\u4E8E FIFO\uFF0C\u6D88\u606F\u961F\u5217\u5177\u6709\u4EE5\u4E0B\u4F18\u70B9\uFF1A</p><ul><li>\u6D88\u606F\u961F\u5217\u53EF\u4EE5\u72EC\u7ACB\u4E8E\u8BFB\u5199\u8FDB\u7A0B\u5B58\u5728\uFF0C\u4ECE\u800C\u907F\u514D\u4E86 FIFO \u4E2D\u540C\u6B65\u7BA1\u9053\u7684\u6253\u5F00\u548C\u5173\u95ED\u65F6\u53EF\u80FD\u4EA7\u751F\u7684\u56F0\u96BE\uFF1B</li><li>\u907F\u514D\u4E86 FIFO \u7684\u540C\u6B65\u963B\u585E\u95EE\u9898\uFF0C\u4E0D\u9700\u8981\u8FDB\u7A0B\u81EA\u5DF1\u63D0\u4F9B\u540C\u6B65\u65B9\u6CD5\uFF1B</li><li>\u8BFB\u8FDB\u7A0B\u53EF\u4EE5\u6839\u636E\u6D88\u606F\u7C7B\u578B\u6709\u9009\u62E9\u5730\u63A5\u6536\u6D88\u606F\uFF0C\u800C\u4E0D\u50CF FIFO \u90A3\u6837\u53EA\u80FD\u9ED8\u8BA4\u5730\u63A5\u6536\u3002</li></ul><h3 id="_4-\u4FE1\u53F7\u91CF" tabindex="-1"><a class="header-anchor" href="#_4-\u4FE1\u53F7\u91CF" aria-hidden="true">#</a> 4. \u4FE1\u53F7\u91CF</h3><p>\u5B83\u662F\u4E00\u4E2A\u8BA1\u6570\u5668\uFF0C\u7528\u4E8E\u4E3A\u591A\u4E2A\u8FDB\u7A0B\u63D0\u4F9B\u5BF9\u5171\u4EAB\u6570\u636E\u5BF9\u8C61\u7684\u8BBF\u95EE\u3002</p><h3 id="_5-\u5171\u4EAB\u5B58\u50A8" tabindex="-1"><a class="header-anchor" href="#_5-\u5171\u4EAB\u5B58\u50A8" aria-hidden="true">#</a> 5. \u5171\u4EAB\u5B58\u50A8</h3><p>\u5141\u8BB8\u591A\u4E2A\u8FDB\u7A0B\u5171\u4EAB\u4E00\u4E2A\u7ED9\u5B9A\u7684\u5B58\u50A8\u533A\u3002\u56E0\u4E3A\u6570\u636E\u4E0D\u9700\u8981\u5728\u8FDB\u7A0B\u4E4B\u95F4\u590D\u5236\uFF0C\u6240\u4EE5\u8FD9\u662F\u6700\u5FEB\u7684\u4E00\u79CD IPC\u3002</p><p>\u9700\u8981\u4F7F\u7528\u4FE1\u53F7\u91CF\u7528\u6765\u540C\u6B65\u5BF9\u5171\u4EAB\u5B58\u50A8\u7684\u8BBF\u95EE\u3002</p><p>\u591A\u4E2A\u8FDB\u7A0B\u53EF\u4EE5\u5C06\u540C\u4E00\u4E2A\u6587\u4EF6\u6620\u5C04\u5230\u5B83\u4EEC\u7684\u5730\u5740\u7A7A\u95F4\u4ECE\u800C\u5B9E\u73B0\u5171\u4EAB\u5185\u5B58\u3002\u53E6\u5916 XSI \u5171\u4EAB\u5185\u5B58\u4E0D\u662F\u4F7F\u7528\u6587\u4EF6\uFF0C\u800C\u662F\u4F7F\u7528\u5185\u5B58\u7684\u533F\u540D\u6BB5\u3002</p><h3 id="_6-\u5957\u63A5\u5B57" tabindex="-1"><a class="header-anchor" href="#_6-\u5957\u63A5\u5B57" aria-hidden="true">#</a> 6. \u5957\u63A5\u5B57</h3><p>\u4E0E\u5176\u5B83\u901A\u4FE1\u673A\u5236\u4E0D\u540C\u7684\u662F\uFF0C\u5B83\u53EF\u7528\u4E8E\u4E0D\u540C\u673A\u5668\u95F4\u7684\u8FDB\u7A0B\u901A\u4FE1\u3002</p>`,31);function E(_,x){const e=o("ExternalLinkIcon");return c(),i(l,null,[r,s("p",null,[d,s("a",k,[m,p(e)]),v]),b,s("p",null,[h,s("a",f,[w,p(e)]),g]),y],64)}var F=t(u,[["render",E],["__file","\u8BA1\u7B97\u673A\u64CD\u4F5C\u7CFB\u7EDF - \u8FDB\u7A0B\u7BA1\u7406.html.vue"]]);export{F as default};
