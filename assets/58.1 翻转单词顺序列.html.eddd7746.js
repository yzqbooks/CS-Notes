import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{r as p,o as e,c as o,a as n,b as c,F as i,d as s,e as l}from"./app.d02315a2.js";const u={},r=n("h1",{id:"_58-1-\u7FFB\u8F6C\u5355\u8BCD\u987A\u5E8F\u5217",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_58-1-\u7FFB\u8F6C\u5355\u8BCD\u987A\u5E8F\u5217","aria-hidden":"true"},"#"),s(" 58.1 \u7FFB\u8F6C\u5355\u8BCD\u987A\u5E8F\u5217")],-1),k=n("h2",{id:"\u9898\u76EE\u63CF\u8FF0",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE\u63CF\u8FF0","aria-hidden":"true"},"#"),s(" \u9898\u76EE\u63CF\u8FF0")],-1),d={href:"https://www.nowcoder.com/practice/3194a4f4cf814f63919d0790578d51f3?tpId=13&tqId=11197&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking&from=cyc_github",target:"_blank",rel:"noopener noreferrer"},v=s("\u725B\u5BA2\u7F51"),m=l(`<h2 id="\u9898\u76EE\u63CF\u8FF0-1" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-1" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input:
&quot;I am a student.&quot;

Output:
&quot;student. a am I&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u5148\u7FFB\u8F6C\u6BCF\u4E2A\u5355\u8BCD\uFF0C\u518D\u7FFB\u8F6C\u6574\u4E2A\u5B57\u7B26\u4E32\u3002</p><p>\u9898\u76EE\u5E94\u8BE5\u6709\u4E00\u4E2A\u9690\u542B\u6761\u4EF6\uFF0C\u5C31\u662F\u4E0D\u80FD\u7528\u989D\u5916\u7684\u7A7A\u95F4\u3002\u867D\u7136 Java \u7684\u9898\u76EE\u8F93\u5165\u53C2\u6570\u4E3A String \u7C7B\u578B\uFF0C\u9700\u8981\u5148\u521B\u5EFA\u4E00\u4E2A\u5B57\u7B26\u6570\u7EC4\u4F7F\u5F97\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3A O(N)\uFF0C\u4F46\u662F\u6B63\u786E\u7684\u53C2\u6570\u7C7B\u578B\u5E94\u8BE5\u548C\u539F\u4E66\u4E00\u6837\uFF0C\u4E3A\u5B57\u7B26\u6570\u7EC4\uFF0C\u5E76\u4E14\u53EA\u80FD\u4F7F\u7528\u8BE5\u5B57\u7B26\u6570\u7EC4\u7684\u7A7A\u95F4\u3002\u4EFB\u4F55\u4F7F\u7528\u4E86\u989D\u5916\u7A7A\u95F4\u7684\u89E3\u6CD5\u5728\u9762\u8BD5\u65F6\u90FD\u4F1A\u5927\u6253\u6298\u6263\uFF0C\u5305\u62EC\u9012\u5F52\u89E3\u6CD5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">ReverseSentence</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chars <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;=</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> n <span class="token operator">||</span> chars<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39; &#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">reverse</span><span class="token punctuation">(</span>chars<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            i <span class="token operator">=</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        j<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">reverse</span><span class="token punctuation">(</span>chars<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>chars<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">reverse</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> c<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j<span class="token punctuation">)</span>
        <span class="token function">swap</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> i<span class="token operator">++</span><span class="token punctuation">,</span> j<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> c<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">char</span> t <span class="token operator">=</span> c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    c<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> c<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
    c<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> t<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function h(b,_){const a=p("ExternalLinkIcon");return e(),o(i,null,[r,k,n("p",null,[n("a",d,[v,c(a)])]),m],64)}var y=t(u,[["render",h],["__file","58.1 \u7FFB\u8F6C\u5355\u8BCD\u987A\u5E8F\u5217.html.vue"]]);export{y as default};
