import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,o as e,c as o,a as n,b as c,F as u,d as s,e as i}from"./app.5ce5af5d.js";const l={},r=n("h1",{id:"_31-\u6808\u7684\u538B\u5165\u3001\u5F39\u51FA\u5E8F\u5217",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_31-\u6808\u7684\u538B\u5165\u3001\u5F39\u51FA\u5E8F\u5217","aria-hidden":"true"},"#"),s(" 31. \u6808\u7684\u538B\u5165\u3001\u5F39\u51FA\u5E8F\u5217")],-1),k=n("h2",{id:"\u9898\u76EE\u94FE\u63A5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE\u94FE\u63A5","aria-hidden":"true"},"#"),s(" \u9898\u76EE\u94FE\u63A5")],-1),d={href:"https://www.nowcoder.com/practice/d77d11405cc7470d82554cb392585106?tpId=13&tqId=11174&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking&from=cyc_github",target:"_blank",rel:"noopener noreferrer"},h=s("\u725B\u5BA2\u7F51"),m=i(`<h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u8F93\u5165\u4E24\u4E2A\u6574\u6570\u5E8F\u5217\uFF0C\u7B2C\u4E00\u4E2A\u5E8F\u5217\u8868\u793A\u6808\u7684\u538B\u5165\u987A\u5E8F\uFF0C\u8BF7\u5224\u65AD\u7B2C\u4E8C\u4E2A\u5E8F\u5217\u662F\u5426\u4E3A\u8BE5\u6808\u7684\u5F39\u51FA\u987A\u5E8F\u3002\u5047\u8BBE\u538B\u5165\u6808\u7684\u6240\u6709\u6570\u5B57\u5747\u4E0D\u76F8\u7B49\u3002</p><p>\u4F8B\u5982\u5E8F\u5217 1,2,3,4,5 \u662F\u67D0\u6808\u7684\u538B\u5165\u987A\u5E8F\uFF0C\u5E8F\u5217 4,5,3,2,1 \u662F\u8BE5\u538B\u6808\u5E8F\u5217\u5BF9\u5E94\u7684\u4E00\u4E2A\u5F39\u51FA\u5E8F\u5217\uFF0C\u4F46 4,3,5,1,2 \u5C31\u4E0D\u53EF\u80FD\u662F\u8BE5\u538B\u6808\u5E8F\u5217\u7684\u5F39\u51FA\u5E8F\u5217\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u4F7F\u7528\u4E00\u4E2A\u6808\u6765\u6A21\u62DF\u538B\u5165\u5F39\u51FA\u64CD\u4F5C\u3002\u6BCF\u6B21\u5165\u6808\u4E00\u4E2A\u5143\u7D20\u540E\uFF0C\u90FD\u8981\u5224\u65AD\u4E00\u4E0B\u6808\u9876\u5143\u7D20\u662F\u4E0D\u662F\u5F53\u524D\u51FA\u6808\u5E8F\u5217 popSequence \u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF0C\u5982\u679C\u662F\u7684\u8BDD\u5219\u6267\u884C\u51FA\u6808\u64CD\u4F5C\u5E76\u5C06 popSequence \u5F80\u540E\u79FB\u4E00\u4F4D\uFF0C\u7EE7\u7EED\u8FDB\u884C\u5224\u65AD\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token class-name">IsPopOrder</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> pushSequence<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> popSequence<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> pushSequence<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> pushIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> popIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> pushIndex <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> pushIndex<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>pushSequence<span class="token punctuation">[</span>pushIndex<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>popIndex <span class="token operator">&lt;</span> n <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
                <span class="token operator">&amp;&amp;</span> stack<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> popSequence<span class="token punctuation">[</span>popIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            popIndex<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function _(v,b){const a=t("ExternalLinkIcon");return e(),o(u,null,[r,k,n("p",null,[n("a",d,[h,c(a)])]),m],64)}var w=p(l,[["render",_],["__file","31. \u6808\u7684\u538B\u5165\u3001\u5F39\u51FA\u5E8F\u5217.html.vue"]]);export{w as default};
