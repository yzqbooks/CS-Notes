import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,o as c,c as l,a as n,b as t,F as i,e as p,d as s}from"./app.5ce5af5d.js";const u={},r=p('<h1 id="leetcode-\u9898\u89E3-\u8D2A\u5FC3\u601D\u60F3" tabindex="-1"><a class="header-anchor" href="#leetcode-\u9898\u89E3-\u8D2A\u5FC3\u601D\u60F3" aria-hidden="true">#</a> Leetcode \u9898\u89E3 - \u8D2A\u5FC3\u601D\u60F3</h1><ul><li><a href="#leetcode-%E9%A2%98%E8%A7%A3---%E8%B4%AA%E5%BF%83%E6%80%9D%E6%83%B3">Leetcode \u9898\u89E3 - \u8D2A\u5FC3\u601D\u60F3</a><ul><li><a href="#1-%E5%88%86%E9%85%8D%E9%A5%BC%E5%B9%B2">1. \u5206\u914D\u997C\u5E72</a></li><li><a href="#2-%E4%B8%8D%E9%87%8D%E5%8F%A0%E7%9A%84%E5%8C%BA%E9%97%B4%E4%B8%AA%E6%95%B0">2. \u4E0D\u91CD\u53E0\u7684\u533A\u95F4\u4E2A\u6570</a></li><li><a href="#3-%E6%8A%95%E9%A3%9E%E9%95%96%E5%88%BA%E7%A0%B4%E6%B0%94%E7%90%83">3. \u6295\u98DE\u9556\u523A\u7834\u6C14\u7403</a></li><li><a href="#4-%E6%A0%B9%E6%8D%AE%E8%BA%AB%E9%AB%98%E5%92%8C%E5%BA%8F%E5%8F%B7%E9%87%8D%E7%BB%84%E9%98%9F%E5%88%97">4. \u6839\u636E\u8EAB\u9AD8\u548C\u5E8F\u53F7\u91CD\u7EC4\u961F\u5217</a></li><li><a href="#5-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E6%9C%80%E5%A4%A7%E7%9A%84%E6%94%B6%E7%9B%8A">5. \u4E70\u5356\u80A1\u7968\u6700\u5927\u7684\u6536\u76CA</a></li><li><a href="#6-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E5%A4%A7%E6%94%B6%E7%9B%8A-ii">6. \u4E70\u5356\u80A1\u7968\u7684\u6700\u5927\u6536\u76CA II</a></li><li><a href="#7-%E7%A7%8D%E6%A4%8D%E8%8A%B1%E6%9C%B5">7. \u79CD\u690D\u82B1\u6735</a></li><li><a href="#8-%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E4%B8%BA%E5%AD%90%E5%BA%8F%E5%88%97">8. \u5224\u65AD\u662F\u5426\u4E3A\u5B50\u5E8F\u5217</a></li><li><a href="#9-%E4%BF%AE%E6%94%B9%E4%B8%80%E4%B8%AA%E6%95%B0%E6%88%90%E4%B8%BA%E9%9D%9E%E9%80%92%E5%87%8F%E6%95%B0%E7%BB%84">9. \u4FEE\u6539\u4E00\u4E2A\u6570\u6210\u4E3A\u975E\u9012\u51CF\u6570\u7EC4</a></li><li><a href="#10-%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E7%9A%84%E5%92%8C">10. \u5B50\u6570\u7EC4\u6700\u5927\u7684\u548C</a></li><li><a href="#11-%E5%88%86%E9%9A%94%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%BD%BF%E5%90%8C%E7%A7%8D%E5%AD%97%E7%AC%A6%E5%87%BA%E7%8E%B0%E5%9C%A8%E4%B8%80%E8%B5%B7">11. \u5206\u9694\u5B57\u7B26\u4E32\u4F7F\u540C\u79CD\u5B57\u7B26\u51FA\u73B0\u5728\u4E00\u8D77</a></li></ul></li></ul><p>\u4FDD\u8BC1\u6BCF\u6B21\u64CD\u4F5C\u90FD\u662F\u5C40\u90E8\u6700\u4F18\u7684\uFF0C\u5E76\u4E14\u6700\u540E\u5F97\u5230\u7684\u7ED3\u679C\u662F\u5168\u5C40\u6700\u4F18\u7684\u3002</p><h2 id="_1-\u5206\u914D\u997C\u5E72" tabindex="-1"><a class="header-anchor" href="#_1-\u5206\u914D\u997C\u5E72" aria-hidden="true">#</a> 1. \u5206\u914D\u997C\u5E72</h2><p>455. Assign Cookies (Easy)</p>',5),k={href:"https://leetcode.com/problems/assign-cookies/description/",target:"_blank",rel:"noopener noreferrer"},d=s("Leetcode"),m=s(" / "),v={href:"https://leetcode-cn.com/problems/assign-cookies/description/",target:"_blank",rel:"noopener noreferrer"},b=s("\u529B\u6263"),h=p(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input: grid[1,3], size[1,2,4]
Output: 2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u6BCF\u4E2A\u5B69\u5B50\u90FD\u6709\u4E00\u4E2A\u6EE1\u8DB3\u5EA6 grid\uFF0C\u6BCF\u4E2A\u997C\u5E72\u90FD\u6709\u4E00\u4E2A\u5927\u5C0F size\uFF0C\u53EA\u6709\u997C\u5E72\u7684\u5927\u5C0F\u5927\u4E8E\u7B49\u4E8E\u4E00\u4E2A\u5B69\u5B50\u7684\u6EE1\u8DB3\u5EA6\uFF0C\u8BE5\u5B69\u5B50\u624D\u4F1A\u83B7\u5F97\u6EE1\u8DB3\u3002\u6C42\u89E3\u6700\u591A\u53EF\u4EE5\u83B7\u5F97\u6EE1\u8DB3\u7684\u5B69\u5B50\u6570\u91CF\u3002</p><ol><li>\u7ED9\u4E00\u4E2A\u5B69\u5B50\u7684\u997C\u5E72\u5E94\u5F53\u5C3D\u91CF\u5C0F\u5E76\u4E14\u53C8\u80FD\u6EE1\u8DB3\u8BE5\u5B69\u5B50\uFF0C\u8FD9\u6837\u5927\u997C\u5E72\u624D\u80FD\u62FF\u6765\u7ED9\u6EE1\u8DB3\u5EA6\u6BD4\u8F83\u5927\u7684\u5B69\u5B50\u3002</li><li>\u56E0\u4E3A\u6EE1\u8DB3\u5EA6\u6700\u5C0F\u7684\u5B69\u5B50\u6700\u5BB9\u6613\u5F97\u5230\u6EE1\u8DB3\uFF0C\u6240\u4EE5\u5148\u6EE1\u8DB3\u6EE1\u8DB3\u5EA6\u6700\u5C0F\u7684\u5B69\u5B50\u3002</li></ol><p>\u5728\u4EE5\u4E0A\u7684\u89E3\u6CD5\u4E2D\uFF0C\u6211\u4EEC\u53EA\u5728\u6BCF\u6B21\u5206\u914D\u65F6\u997C\u5E72\u65F6\u9009\u62E9\u4E00\u79CD\u770B\u8D77\u6765\u662F\u5F53\u524D\u6700\u4F18\u7684\u5206\u914D\u65B9\u6CD5\uFF0C\u4F46\u65E0\u6CD5\u4FDD\u8BC1\u8FD9\u79CD\u5C40\u90E8\u6700\u4F18\u7684\u5206\u914D\u65B9\u6CD5\u6700\u540E\u80FD\u5F97\u5230\u5168\u5C40\u6700\u4F18\u89E3\u3002\u6211\u4EEC\u5047\u8BBE\u80FD\u5F97\u5230\u5168\u5C40\u6700\u4F18\u89E3\uFF0C\u5E76\u4F7F\u7528\u53CD\u8BC1\u6CD5\u8FDB\u884C\u8BC1\u660E\uFF0C\u5373\u5047\u8BBE\u5B58\u5728\u4E00\u79CD\u6BD4\u6211\u4EEC\u4F7F\u7528\u7684\u8D2A\u5FC3\u7B56\u7565\u66F4\u4F18\u7684\u6700\u4F18\u7B56\u7565\u3002\u5982\u679C\u4E0D\u5B58\u5728\u8FD9\u79CD\u6700\u4F18\u7B56\u7565\uFF0C\u8868\u793A\u8D2A\u5FC3\u7B56\u7565\u5C31\u662F\u6700\u4F18\u7B56\u7565\uFF0C\u5F97\u5230\u7684\u89E3\u4E5F\u5C31\u662F\u5168\u5C40\u6700\u4F18\u89E3\u3002</p><p>\u8BC1\u660E\uFF1A\u5047\u8BBE\u5728\u67D0\u6B21\u9009\u62E9\u4E2D\uFF0C\u8D2A\u5FC3\u7B56\u7565\u9009\u62E9\u7ED9\u5F53\u524D\u6EE1\u8DB3\u5EA6\u6700\u5C0F\u7684\u5B69\u5B50\u5206\u914D\u7B2C m \u4E2A\u997C\u5E72\uFF0C\u7B2C m \u4E2A\u997C\u5E72\u4E3A\u53EF\u4EE5\u6EE1\u8DB3\u8BE5\u5B69\u5B50\u7684\u6700\u5C0F\u997C\u5E72\u3002\u5047\u8BBE\u5B58\u5728\u4E00\u79CD\u6700\u4F18\u7B56\u7565\uFF0C\u53EF\u4EE5\u7ED9\u8BE5\u5B69\u5B50\u5206\u914D\u7B2C n \u4E2A\u997C\u5E72\uFF0C\u5E76\u4E14 m &lt; n\u3002\u6211\u4EEC\u53EF\u4EE5\u53D1\u73B0\uFF0C\u7ECF\u8FC7\u8FD9\u4E00\u8F6E\u5206\u914D\uFF0C\u8D2A\u5FC3\u7B56\u7565\u5206\u914D\u540E\u5269\u4E0B\u7684\u997C\u5E72\u4E00\u5B9A\u6709\u4E00\u4E2A\u6BD4\u6700\u4F18\u7B56\u7565\u6765\u5F97\u5927\u3002\u56E0\u6B64\u5728\u540E\u7EED\u7684\u5206\u914D\u4E2D\uFF0C\u8D2A\u5FC3\u7B56\u7565\u4E00\u5B9A\u80FD\u6EE1\u8DB3\u66F4\u591A\u7684\u5B69\u5B50\u3002\u4E5F\u5C31\u662F\u8BF4\u4E0D\u5B58\u5728\u6BD4\u8D2A\u5FC3\u7B56\u7565\u66F4\u4F18\u7684\u7B56\u7565\uFF0C\u5373\u8D2A\u5FC3\u7B56\u7565\u5C31\u662F\u6700\u4F18\u7B56\u7565\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/e69537d2-a016-4676-b169-9ea17eeb9037.gif&quot; width=&quot;430px&quot;&gt;</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findContentChildren</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grid<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>grid <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> size <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>grid<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> gi <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> si <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>gi <span class="token operator">&lt;</span> grid<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> si <span class="token operator">&lt;</span> size<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>gi<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> size<span class="token punctuation">[</span>si<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            gi<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        si<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> gi<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-\u4E0D\u91CD\u53E0\u7684\u533A\u95F4\u4E2A\u6570" tabindex="-1"><a class="header-anchor" href="#_2-\u4E0D\u91CD\u53E0\u7684\u533A\u95F4\u4E2A\u6570" aria-hidden="true">#</a> 2. \u4E0D\u91CD\u53E0\u7684\u533A\u95F4\u4E2A\u6570</h2><p>435. Non-overlapping Intervals (Medium)</p>`,9),_={href:"https://leetcode.com/problems/non-overlapping-intervals/description/",target:"_blank",rel:"noopener noreferrer"},g=s("Leetcode"),y=s(" / "),f={href:"https://leetcode-cn.com/problems/non-overlapping-intervals/description/",target:"_blank",rel:"noopener noreferrer"},w=s("\u529B\u6263"),E=p(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input: [ [1,2], [1,2], [1,2] ]

Output: 2

Explanation: You need to remove two [1,2] to make the rest of intervals non-overlapping.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input: [ [1,2], [2,3] ]

Output: 0

Explanation: You don&#39;t need to remove any of the intervals since they&#39;re already non-overlapping.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u8BA1\u7B97\u8BA9\u4E00\u7EC4\u533A\u95F4\u4E0D\u91CD\u53E0\u6240\u9700\u8981\u79FB\u9664\u7684\u533A\u95F4\u4E2A\u6570\u3002</p><p>\u5148\u8BA1\u7B97\u6700\u591A\u80FD\u7EC4\u6210\u7684\u4E0D\u91CD\u53E0\u533A\u95F4\u4E2A\u6570\uFF0C\u7136\u540E\u7528\u533A\u95F4\u603B\u4E2A\u6570\u51CF\u53BB\u4E0D\u91CD\u53E0\u533A\u95F4\u7684\u4E2A\u6570\u3002</p><p>\u5728\u6BCF\u6B21\u9009\u62E9\u4E2D\uFF0C\u533A\u95F4\u7684\u7ED3\u5C3E\u6700\u4E3A\u91CD\u8981\uFF0C\u9009\u62E9\u7684\u533A\u95F4\u7ED3\u5C3E\u8D8A\u5C0F\uFF0C\u7559\u7ED9\u540E\u9762\u7684\u533A\u95F4\u7684\u7A7A\u95F4\u8D8A\u5927\uFF0C\u90A3\u4E48\u540E\u9762\u80FD\u591F\u9009\u62E9\u7684\u533A\u95F4\u4E2A\u6570\u4E5F\u5C31\u8D8A\u5927\u3002</p><p>\u6309\u533A\u95F4\u7684\u7ED3\u5C3E\u8FDB\u884C\u6392\u5E8F\uFF0C\u6BCF\u6B21\u9009\u62E9\u7ED3\u5C3E\u6700\u5C0F\uFF0C\u5E76\u4E14\u548C\u524D\u4E00\u4E2A\u533A\u95F4\u4E0D\u91CD\u53E0\u7684\u533A\u95F4\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">eraseOverlapIntervals</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> intervals<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>intervals<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>intervals<span class="token punctuation">,</span> <span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparingInt</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> end <span class="token operator">=</span> intervals<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> intervals<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>intervals<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        end <span class="token operator">=</span> intervals<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        cnt<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> intervals<span class="token punctuation">.</span>length <span class="token operator">-</span> cnt<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 lambda \u8868\u793A\u5F0F\u521B\u5EFA Comparator \u4F1A\u5BFC\u81F4\u7B97\u6CD5\u8FD0\u884C\u65F6\u95F4\u8FC7\u957F\uFF0C\u5982\u679C\u6CE8\u91CD\u8FD0\u884C\u65F6\u95F4\uFF0C\u53EF\u4EE5\u4FEE\u6539\u4E3A\u666E\u901A\u521B\u5EFA Comparator \u8BED\u53E5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>intervals<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Comparator</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token annotation punctuation">@Override</span>
     <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> o1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> o2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">return</span> <span class="token punctuation">(</span>o1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> o2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>o1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> o2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9E\u73B0 compare() \u51FD\u6570\u65F6\u907F\u514D\u4F7F\u7528 <code>return o1[1] - o2[1];</code> \u8FD9\u79CD\u51CF\u6CD5\u64CD\u4F5C\uFF0C\u9632\u6B62\u6EA2\u51FA\u3002</p><h2 id="_3-\u6295\u98DE\u9556\u523A\u7834\u6C14\u7403" tabindex="-1"><a class="header-anchor" href="#_3-\u6295\u98DE\u9556\u523A\u7834\u6C14\u7403" aria-hidden="true">#</a> 3. \u6295\u98DE\u9556\u523A\u7834\u6C14\u7403</h2><p>452. Minimum Number of Arrows to Burst Balloons (Medium)</p>`,12),x={href:"https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/description/",target:"_blank",rel:"noopener noreferrer"},A=s("Leetcode"),B=s(" / "),j={href:"https://leetcode-cn.com/problems/minimum-number-of-arrows-to-burst-balloons/description/",target:"_blank",rel:"noopener noreferrer"},I=s("\u529B\u6263"),S=p(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input:
[[10,16], [2,8], [1,6], [7,12]]

Output:
2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u6C14\u7403\u5728\u4E00\u4E2A\u6C34\u5E73\u6570\u8F74\u4E0A\u6446\u653E\uFF0C\u53EF\u4EE5\u91CD\u53E0\uFF0C\u98DE\u9556\u5782\u76F4\u6295\u5411\u5750\u6807\u8F74\uFF0C\u4F7F\u5F97\u8DEF\u5F84\u4E0A\u7684\u6C14\u7403\u90FD\u88AB\u523A\u7834\u3002\u6C42\u89E3\u6700\u5C0F\u7684\u6295\u98DE\u9556\u6B21\u6570\u4F7F\u6240\u6709\u6C14\u7403\u90FD\u88AB\u523A\u7834\u3002</p><p>\u4E5F\u662F\u8BA1\u7B97\u4E0D\u91CD\u53E0\u7684\u533A\u95F4\u4E2A\u6570\uFF0C\u4E0D\u8FC7\u548C Non-overlapping Intervals \u7684\u533A\u522B\u5728\u4E8E\uFF0C[1, 2] \u548C [2, 3] \u5728\u672C\u9898\u4E2D\u7B97\u662F\u91CD\u53E0\u533A\u95F4\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findMinArrowShots</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> points<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>points<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>points<span class="token punctuation">,</span> <span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparingInt</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> end <span class="token operator">=</span> points<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> points<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>points<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        cnt<span class="token operator">++</span><span class="token punctuation">;</span>
        end <span class="token operator">=</span> points<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> cnt<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-\u6839\u636E\u8EAB\u9AD8\u548C\u5E8F\u53F7\u91CD\u7EC4\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#_4-\u6839\u636E\u8EAB\u9AD8\u548C\u5E8F\u53F7\u91CD\u7EC4\u961F\u5217" aria-hidden="true">#</a> 4. \u6839\u636E\u8EAB\u9AD8\u548C\u5E8F\u53F7\u91CD\u7EC4\u961F\u5217</h2><p>406. Queue Reconstruction by Height(Medium)</p>`,6),q={href:"https://leetcode.com/problems/queue-reconstruction-by-height/description/",target:"_blank",rel:"noopener noreferrer"},C=s("Leetcode"),L=s(" / "),F={href:"https://leetcode-cn.com/problems/queue-reconstruction-by-height/description/",target:"_blank",rel:"noopener noreferrer"},D=s("\u529B\u6263"),M=p(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input:
[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]

Output:
[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u4E00\u4E2A\u5B66\u751F\u7528\u4E24\u4E2A\u5206\u91CF (h, k) \u63CF\u8FF0\uFF0Ch \u8868\u793A\u8EAB\u9AD8\uFF0Ck \u8868\u793A\u6392\u5728\u524D\u9762\u7684\u6709 k \u4E2A\u5B66\u751F\u7684\u8EAB\u9AD8\u6BD4\u4ED6\u9AD8\u6216\u8005\u548C\u4ED6\u4E00\u6837\u9AD8\u3002</p><p>\u4E3A\u4E86\u4F7F\u63D2\u5165\u64CD\u4F5C\u4E0D\u5F71\u54CD\u540E\u7EED\u7684\u64CD\u4F5C\uFF0C\u8EAB\u9AD8\u8F83\u9AD8\u7684\u5B66\u751F\u5E94\u8BE5\u5148\u505A\u63D2\u5165\u64CD\u4F5C\uFF0C\u5426\u5219\u8EAB\u9AD8\u8F83\u5C0F\u7684\u5B66\u751F\u539F\u5148\u6B63\u786E\u63D2\u5165\u7684\u7B2C k \u4E2A\u4F4D\u7F6E\u53EF\u80FD\u4F1A\u53D8\u6210\u7B2C k+1 \u4E2A\u4F4D\u7F6E\u3002</p><p>\u8EAB\u9AD8 h \u964D\u5E8F\u3001\u4E2A\u6570 k \u503C\u5347\u5E8F\uFF0C\u7136\u540E\u5C06\u67D0\u4E2A\u5B66\u751F\u63D2\u5165\u961F\u5217\u7684\u7B2C k \u4E2A\u4F4D\u7F6E\u4E2D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">reconstructQueue</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> people<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>people <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> people<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> people<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>people<span class="token punctuation">,</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">?</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">:</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> p <span class="token operator">:</span> people<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>p<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> queue<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>queue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-\u4E70\u5356\u80A1\u7968\u6700\u5927\u7684\u6536\u76CA" tabindex="-1"><a class="header-anchor" href="#_5-\u4E70\u5356\u80A1\u7968\u6700\u5927\u7684\u6536\u76CA" aria-hidden="true">#</a> 5. \u4E70\u5356\u80A1\u7968\u6700\u5927\u7684\u6536\u76CA</h2><p>121. Best Time to Buy and Sell Stock (Easy)</p>`,7),O={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/",target:"_blank",rel:"noopener noreferrer"},z=s("Leetcode"),N=s(" / "),T={href:"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/description/",target:"_blank",rel:"noopener noreferrer"},P=s("\u529B\u6263"),V=p(`<p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u4E00\u6B21\u80A1\u7968\u4EA4\u6613\u5305\u542B\u4E70\u5165\u548C\u5356\u51FA\uFF0C\u53EA\u8FDB\u884C\u4E00\u6B21\u4EA4\u6613\uFF0C\u6C42\u6700\u5927\u6536\u76CA\u3002</p><p>\u53EA\u8981\u8BB0\u5F55\u524D\u9762\u7684\u6700\u5C0F\u4EF7\u683C\uFF0C\u5C06\u8FD9\u4E2A\u6700\u5C0F\u4EF7\u683C\u4F5C\u4E3A\u4E70\u5165\u4EF7\u683C\uFF0C\u7136\u540E\u5C06\u5F53\u524D\u7684\u4EF7\u683C\u4F5C\u4E3A\u552E\u51FA\u4EF7\u683C\uFF0C\u67E5\u770B\u5F53\u524D\u6536\u76CA\u662F\u4E0D\u662F\u6700\u5927\u6536\u76CA\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxProfit</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> prices<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> prices<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> soFarMin <span class="token operator">=</span> prices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>soFarMin <span class="token operator">&gt;</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> soFarMin <span class="token operator">=</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> max <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> soFarMin<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> max<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-\u4E70\u5356\u80A1\u7968\u7684\u6700\u5927\u6536\u76CA-ii" tabindex="-1"><a class="header-anchor" href="#_6-\u4E70\u5356\u80A1\u7968\u7684\u6700\u5927\u6536\u76CA-ii" aria-hidden="true">#</a> 6. \u4E70\u5356\u80A1\u7968\u7684\u6700\u5927\u6536\u76CA II</h2><p>122. Best Time to Buy and Sell Stock II (Easy)</p>`,5),Y={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/description/",target:"_blank",rel:"noopener noreferrer"},Q=s("Leetcode"),R=s(" / "),H={href:"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/description/",target:"_blank",rel:"noopener noreferrer"},G=s("\u529B\u6263"),J=p(`<p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u53EF\u4EE5\u8FDB\u884C\u591A\u6B21\u4EA4\u6613\uFF0C\u591A\u6B21\u4EA4\u6613\u4E4B\u95F4\u4E0D\u80FD\u4EA4\u53C9\u8FDB\u884C\uFF0C\u53EF\u4EE5\u8FDB\u884C\u591A\u6B21\u4EA4\u6613\u3002</p><p>\u5BF9\u4E8E [a, b, c, d]\uFF0C\u5982\u679C\u6709 a &lt;= b &lt;= c &lt;= d \uFF0C\u90A3\u4E48\u6700\u5927\u6536\u76CA\u4E3A d - a\u3002\u800C d - a = (d - c) + (c - b) + (b - a) \uFF0C\u56E0\u6B64\u5F53\u8BBF\u95EE\u5230\u4E00\u4E2A prices[i] \u4E14 prices[i] - prices[i-1] &gt; 0\uFF0C\u90A3\u4E48\u5C31\u628A prices[i] - prices[i-1] \u6DFB\u52A0\u5230\u6536\u76CA\u4E2D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxProfit</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> prices<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> profit <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> prices<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> prices<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            profit <span class="token operator">+=</span> <span class="token punctuation">(</span>prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> prices<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> profit<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-\u79CD\u690D\u82B1\u6735" tabindex="-1"><a class="header-anchor" href="#_7-\u79CD\u690D\u82B1\u6735" aria-hidden="true">#</a> 7. \u79CD\u690D\u82B1\u6735</h2><p>605. Can Place Flowers (Easy)</p>`,5),K={href:"https://leetcode.com/problems/can-place-flowers/description/",target:"_blank",rel:"noopener noreferrer"},U=s("Leetcode"),W=s(" / "),X={href:"https://leetcode-cn.com/problems/can-place-flowers/description/",target:"_blank",rel:"noopener noreferrer"},Z=s("\u529B\u6263"),$=p(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input: flowerbed = [1,0,0,0,1], n = 1
Output: True
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9898\u76EE\u63CF\u8FF0\uFF1Aflowerbed \u6570\u7EC4\u4E2D 1 \u8868\u793A\u5DF2\u7ECF\u79CD\u4E0B\u4E86\u82B1\u6735\u3002\u82B1\u6735\u4E4B\u95F4\u81F3\u5C11\u9700\u8981\u4E00\u4E2A\u5355\u4F4D\u7684\u95F4\u9694\uFF0C\u6C42\u89E3\u662F\u5426\u80FD\u79CD\u4E0B n \u6735\u82B1\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">canPlaceFlowers</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> flowerbed<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> len <span class="token operator">=</span> flowerbed<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len <span class="token operator">&amp;&amp;</span> cnt <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>flowerbed<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> pre <span class="token operator">=</span> i <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> flowerbed<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> next <span class="token operator">=</span> i <span class="token operator">==</span> len <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> flowerbed<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>pre <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> next <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            cnt<span class="token operator">++</span><span class="token punctuation">;</span>
            flowerbed<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> cnt <span class="token operator">&gt;=</span> n<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-\u5224\u65AD\u662F\u5426\u4E3A\u5B50\u5E8F\u5217" tabindex="-1"><a class="header-anchor" href="#_8-\u5224\u65AD\u662F\u5426\u4E3A\u5B50\u5E8F\u5217" aria-hidden="true">#</a> 8. \u5224\u65AD\u662F\u5426\u4E3A\u5B50\u5E8F\u5217</h2><p>392. Is Subsequence (Medium)</p>`,5),nn={href:"https://leetcode.com/problems/is-subsequence/description/",target:"_blank",rel:"noopener noreferrer"},sn=s("Leetcode"),an=s(" / "),tn={href:"https://leetcode-cn.com/problems/is-subsequence/description/",target:"_blank",rel:"noopener noreferrer"},pn=s("\u529B\u6263"),en=p(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>s = &quot;abc&quot;, t = &quot;ahbgdc&quot;
Return true.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isSubsequence</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token class-name">String</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> c <span class="token operator">:</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        index <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-\u4FEE\u6539\u4E00\u4E2A\u6570\u6210\u4E3A\u975E\u9012\u51CF\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_9-\u4FEE\u6539\u4E00\u4E2A\u6570\u6210\u4E3A\u975E\u9012\u51CF\u6570\u7EC4" aria-hidden="true">#</a> 9. \u4FEE\u6539\u4E00\u4E2A\u6570\u6210\u4E3A\u975E\u9012\u51CF\u6570\u7EC4</h2><p>665. Non-decreasing Array (Easy)</p>`,4),on={href:"https://leetcode.com/problems/non-decreasing-array/description/",target:"_blank",rel:"noopener noreferrer"},cn=s("Leetcode"),ln=s(" / "),un={href:"https://leetcode-cn.com/problems/non-decreasing-array/description/",target:"_blank",rel:"noopener noreferrer"},rn=s("\u529B\u6263"),kn=p(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input: [4,2,3]
Output: True
Explanation: You could modify the first 4 to 1 to get a non-decreasing array.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u5224\u65AD\u4E00\u4E2A\u6570\u7EC4\u662F\u5426\u80FD\u53EA\u4FEE\u6539\u4E00\u4E2A\u6570\u5C31\u6210\u4E3A\u975E\u9012\u51CF\u6570\u7EC4\u3002</p><p>\u5728\u51FA\u73B0 nums[i] &lt; nums[i - 1] \u65F6\uFF0C\u9700\u8981\u8003\u8651\u7684\u662F\u5E94\u8BE5\u4FEE\u6539\u6570\u7EC4\u7684\u54EA\u4E2A\u6570\uFF0C\u4F7F\u5F97\u672C\u6B21\u4FEE\u6539\u80FD\u4F7F i \u4E4B\u524D\u7684\u6570\u7EC4\u6210\u4E3A\u975E\u9012\u51CF\u6570\u7EC4\uFF0C\u5E76\u4E14 <strong>\u4E0D\u5F71\u54CD\u540E\u7EED\u7684\u64CD\u4F5C</strong> \u3002\u4F18\u5148\u8003\u8651\u4EE4 nums[i - 1] = nums[i]\uFF0C\u56E0\u4E3A\u5982\u679C\u4FEE\u6539 nums[i] = nums[i - 1] \u7684\u8BDD\uFF0C\u90A3\u4E48 nums[i] \u8FD9\u4E2A\u6570\u4F1A\u53D8\u5927\uFF0C\u5C31\u6709\u53EF\u80FD\u6BD4 nums[i + 1] \u5927\uFF0C\u4ECE\u800C\u5F71\u54CD\u4E86\u540E\u7EED\u64CD\u4F5C\u3002\u8FD8\u6709\u4E00\u4E2A\u6BD4\u8F83\u7279\u522B\u7684\u60C5\u51B5\u5C31\u662F nums[i] &lt; nums[i - 2]\uFF0C\u4FEE\u6539 nums[i - 1] = nums[i] \u4E0D\u80FD\u4F7F\u6570\u7EC4\u6210\u4E3A\u975E\u9012\u51CF\u6570\u7EC4\uFF0C\u53EA\u80FD\u4FEE\u6539 nums[i] = nums[i - 1]\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">checkPossibility</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> cnt <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        cnt<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> cnt <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10-\u5B50\u6570\u7EC4\u6700\u5927\u7684\u548C" tabindex="-1"><a class="header-anchor" href="#_10-\u5B50\u6570\u7EC4\u6700\u5927\u7684\u548C" aria-hidden="true">#</a> 10. \u5B50\u6570\u7EC4\u6700\u5927\u7684\u548C</h2><p>53. Maximum Subarray (Easy)</p>`,6),dn={href:"https://leetcode.com/problems/maximum-subarray/description/",target:"_blank",rel:"noopener noreferrer"},mn=s("Leetcode"),vn=s(" / "),bn={href:"https://leetcode-cn.com/problems/maximum-subarray/description/",target:"_blank",rel:"noopener noreferrer"},hn=s("\u529B\u6263"),_n=p(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>For example, given the array [-2,1,-3,4,-1,2,1,-5,4],
the contiguous subarray [4,-1,2,1] has the largest sum = 6.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxSubArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> nums<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> preSum <span class="token operator">=</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> maxSum <span class="token operator">=</span> preSum<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        preSum <span class="token operator">=</span> preSum <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> preSum <span class="token operator">+</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">:</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        maxSum <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>maxSum<span class="token punctuation">,</span> preSum<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> maxSum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11-\u5206\u9694\u5B57\u7B26\u4E32\u4F7F\u540C\u79CD\u5B57\u7B26\u51FA\u73B0\u5728\u4E00\u8D77" tabindex="-1"><a class="header-anchor" href="#_11-\u5206\u9694\u5B57\u7B26\u4E32\u4F7F\u540C\u79CD\u5B57\u7B26\u51FA\u73B0\u5728\u4E00\u8D77" aria-hidden="true">#</a> 11. \u5206\u9694\u5B57\u7B26\u4E32\u4F7F\u540C\u79CD\u5B57\u7B26\u51FA\u73B0\u5728\u4E00\u8D77</h2><p>763. Partition Labels (Medium)</p>`,4),gn={href:"https://leetcode.com/problems/partition-labels/description/",target:"_blank",rel:"noopener noreferrer"},yn=s("Leetcode"),fn=s(" / "),wn={href:"https://leetcode-cn.com/problems/partition-labels/description/",target:"_blank",rel:"noopener noreferrer"},En=s("\u529B\u6263"),xn=p(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Input: S = &quot;ababcbacadefegdehijhklij&quot;
Output: [9,7,8]
Explanation:
The partition is &quot;ababcbaca&quot;, &quot;defegde&quot;, &quot;hijhklij&quot;.
This is a partition so that each letter appears in at most one part.
A partition like &quot;ababcbacadefegde&quot;, &quot;hijhklij&quot; is incorrect, because it splits S into less parts.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">partitionLabels</span><span class="token punctuation">(</span><span class="token class-name">String</span> <span class="token class-name">S</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> lastIndexsOfChar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">S</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        lastIndexsOfChar<span class="token punctuation">[</span><span class="token function">char2Index</span><span class="token punctuation">(</span><span class="token class-name">S</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> partitions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> firstIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>firstIndex <span class="token operator">&lt;</span> <span class="token class-name">S</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> lastIndex <span class="token operator">=</span> firstIndex<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> firstIndex<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">S</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;=</span> lastIndex<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> index <span class="token operator">=</span> lastIndexsOfChar<span class="token punctuation">[</span><span class="token function">char2Index</span><span class="token punctuation">(</span><span class="token class-name">S</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> lastIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                lastIndex <span class="token operator">=</span> index<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        partitions<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>lastIndex <span class="token operator">-</span> firstIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        firstIndex <span class="token operator">=</span> lastIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> partitions<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">char2Index</span><span class="token punctuation">(</span><span class="token keyword">char</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> c <span class="token operator">-</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function An(Bn,jn){const a=o("ExternalLinkIcon");return c(),l(i,null,[r,n("p",null,[n("a",k,[d,t(a)]),m,n("a",v,[b,t(a)])]),h,n("p",null,[n("a",_,[g,t(a)]),y,n("a",f,[w,t(a)])]),E,n("p",null,[n("a",x,[A,t(a)]),B,n("a",j,[I,t(a)])]),S,n("p",null,[n("a",q,[C,t(a)]),L,n("a",F,[D,t(a)])]),M,n("p",null,[n("a",O,[z,t(a)]),N,n("a",T,[P,t(a)])]),V,n("p",null,[n("a",Y,[Q,t(a)]),R,n("a",H,[G,t(a)])]),J,n("p",null,[n("a",K,[U,t(a)]),W,n("a",X,[Z,t(a)])]),$,n("p",null,[n("a",nn,[sn,t(a)]),an,n("a",tn,[pn,t(a)])]),en,n("p",null,[n("a",on,[cn,t(a)]),ln,n("a",un,[rn,t(a)])]),kn,n("p",null,[n("a",dn,[mn,t(a)]),vn,n("a",bn,[hn,t(a)])]),_n,n("p",null,[n("a",gn,[yn,t(a)]),fn,n("a",wn,[En,t(a)])]),xn],64)}var qn=e(u,[["render",An],["__file","Leetcode \u9898\u89E3 - \u8D2A\u5FC3\u601D\u60F3.html.vue"]]);export{qn as default};
