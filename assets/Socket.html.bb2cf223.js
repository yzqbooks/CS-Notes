import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{r as p,o,c as l,a as n,b as a,F as c,e as i,d as e}from"./app.5ce5af5d.js";const r={},u=i(`<h1 id="socket" tabindex="-1"><a class="header-anchor" href="#socket" aria-hidden="true">#</a> Socket</h1><ul><li><a href="#socket">Socket</a><ul><li><a href="#%E4%B8%80io-%E6%A8%A1%E5%9E%8B">\u4E00\u3001I/O \u6A21\u578B</a><ul><li><a href="#%E9%98%BB%E5%A1%9E%E5%BC%8F-io">\u963B\u585E\u5F0F I/O</a></li><li><a href="#%E9%9D%9E%E9%98%BB%E5%A1%9E%E5%BC%8F-io">\u975E\u963B\u585E\u5F0F I/O</a></li><li><a href="#io-%E5%A4%8D%E7%94%A8">I/O \u590D\u7528</a></li><li><a href="#%E4%BF%A1%E5%8F%B7%E9%A9%B1%E5%8A%A8-io">\u4FE1\u53F7\u9A71\u52A8 I/O</a></li><li><a href="#%E5%BC%82%E6%AD%A5-io">\u5F02\u6B65 I/O</a></li><li><a href="#%E4%BA%94%E5%A4%A7-io-%E6%A8%A1%E5%9E%8B%E6%AF%94%E8%BE%83">\u4E94\u5927 I/O \u6A21\u578B\u6BD4\u8F83</a></li></ul></li><li><a href="#%E4%BA%8Cio-%E5%A4%8D%E7%94%A8">\u4E8C\u3001I/O \u590D\u7528</a><ul><li><a href="#select">select</a></li><li><a href="#poll">poll</a></li><li><a href="#%E6%AF%94%E8%BE%83">\u6BD4\u8F83</a></li><li><a href="#epoll">epoll</a></li><li><a href="#%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F">\u5DE5\u4F5C\u6A21\u5F0F</a></li><li><a href="#%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF">\u5E94\u7528\u573A\u666F</a></li></ul></li><li><a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99">\u53C2\u8003\u8D44\u6599</a></li></ul></li></ul><h2 id="\u4E00\u3001i-o-\u6A21\u578B" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001i-o-\u6A21\u578B" aria-hidden="true">#</a> \u4E00\u3001I/O \u6A21\u578B</h2><p>\u4E00\u4E2A\u8F93\u5165\u64CD\u4F5C\u901A\u5E38\u5305\u62EC\u4E24\u4E2A\u9636\u6BB5\uFF1A</p><ul><li>\u7B49\u5F85\u6570\u636E\u51C6\u5907\u597D</li><li>\u4ECE\u5185\u6838\u5411\u8FDB\u7A0B\u590D\u5236\u6570\u636E</li></ul><p>\u5BF9\u4E8E\u4E00\u4E2A\u5957\u63A5\u5B57\u4E0A\u7684\u8F93\u5165\u64CD\u4F5C\uFF0C\u7B2C\u4E00\u6B65\u901A\u5E38\u6D89\u53CA\u7B49\u5F85\u6570\u636E\u4ECE\u7F51\u7EDC\u4E2D\u5230\u8FBE\u3002\u5F53\u6240\u7B49\u5F85\u6570\u636E\u5230\u8FBE\u65F6\uFF0C\u5B83\u88AB\u590D\u5236\u5230\u5185\u6838\u4E2D\u7684\u67D0\u4E2A\u7F13\u51B2\u533A\u3002\u7B2C\u4E8C\u6B65\u5C31\u662F\u628A\u6570\u636E\u4ECE\u5185\u6838\u7F13\u51B2\u533A\u590D\u5236\u5230\u5E94\u7528\u8FDB\u7A0B\u7F13\u51B2\u533A\u3002</p><p>Unix \u6709\u4E94\u79CD I/O \u6A21\u578B\uFF1A</p><ul><li>\u963B\u585E\u5F0F I/O</li><li>\u975E\u963B\u585E\u5F0F I/O</li><li>I/O \u590D\u7528\uFF08select \u548C poll\uFF09</li><li>\u4FE1\u53F7\u9A71\u52A8\u5F0F I/O\uFF08SIGIO\uFF09</li><li>\u5F02\u6B65 I/O\uFF08AIO\uFF09</li></ul><h3 id="\u963B\u585E\u5F0F-i-o" tabindex="-1"><a class="header-anchor" href="#\u963B\u585E\u5F0F-i-o" aria-hidden="true">#</a> \u963B\u585E\u5F0F I/O</h3><p>\u5E94\u7528\u8FDB\u7A0B\u88AB\u963B\u585E\uFF0C\u76F4\u5230\u6570\u636E\u4ECE\u5185\u6838\u7F13\u51B2\u533A\u590D\u5236\u5230\u5E94\u7528\u8FDB\u7A0B\u7F13\u51B2\u533A\u4E2D\u624D\u8FD4\u56DE\u3002</p><p>\u5E94\u8BE5\u6CE8\u610F\u5230\uFF0C\u5728\u963B\u585E\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u5176\u5B83\u5E94\u7528\u8FDB\u7A0B\u8FD8\u53EF\u4EE5\u6267\u884C\uFF0C\u56E0\u6B64\u963B\u585E\u4E0D\u610F\u5473\u7740\u6574\u4E2A\u64CD\u4F5C\u7CFB\u7EDF\u90FD\u88AB\u963B\u585E\u3002\u56E0\u4E3A\u5176\u5B83\u5E94\u7528\u8FDB\u7A0B\u8FD8\u53EF\u4EE5\u6267\u884C\uFF0C\u6240\u4EE5\u4E0D\u6D88\u8017 CPU \u65F6\u95F4\uFF0C\u8FD9\u79CD\u6A21\u578B\u7684 CPU \u5229\u7528\u7387\u4F1A\u6BD4\u8F83\u9AD8\u3002</p><p>\u4E0B\u56FE\u4E2D\uFF0Crecvfrom() \u7528\u4E8E\u63A5\u6536 Socket \u4F20\u6765\u7684\u6570\u636E\uFF0C\u5E76\u590D\u5236\u5230\u5E94\u7528\u8FDB\u7A0B\u7684\u7F13\u51B2\u533A buf \u4E2D\u3002\u8FD9\u91CC\u628A recvfrom() \u5F53\u6210\u7CFB\u7EDF\u8C03\u7528\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token class-name">ssize_t</span> <span class="token function">recvfrom</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>buf<span class="token punctuation">,</span> <span class="token class-name">size_t</span> len<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>src_addr<span class="token punctuation">,</span> <span class="token class-name">socklen_t</span> <span class="token operator">*</span>addrlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1492928416812_4.png" alt="img"></p><h3 id="\u975E\u963B\u585E\u5F0F-i-o" tabindex="-1"><a class="header-anchor" href="#\u975E\u963B\u585E\u5F0F-i-o" aria-hidden="true">#</a> \u975E\u963B\u585E\u5F0F I/O</h3><p>\u5E94\u7528\u8FDB\u7A0B\u6267\u884C\u7CFB\u7EDF\u8C03\u7528\u4E4B\u540E\uFF0C\u5185\u6838\u8FD4\u56DE\u4E00\u4E2A\u9519\u8BEF\u7801\u3002\u5E94\u7528\u8FDB\u7A0B\u53EF\u4EE5\u7EE7\u7EED\u6267\u884C\uFF0C\u4F46\u662F\u9700\u8981\u4E0D\u65AD\u7684\u6267\u884C\u7CFB\u7EDF\u8C03\u7528\u6765\u83B7\u77E5 I/O \u662F\u5426\u5B8C\u6210\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u79F0\u4E3A\u8F6E\u8BE2\uFF08polling\uFF09\u3002</p><p>\u7531\u4E8E CPU \u8981\u5904\u7406\u66F4\u591A\u7684\u7CFB\u7EDF\u8C03\u7528\uFF0C\u56E0\u6B64\u8FD9\u79CD\u6A21\u578B\u7684 CPU \u5229\u7528\u7387\u6BD4\u8F83\u4F4E\u3002</p><p><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1492929000361_5.png" alt="img"></p><h3 id="i-o-\u590D\u7528" tabindex="-1"><a class="header-anchor" href="#i-o-\u590D\u7528" aria-hidden="true">#</a> I/O \u590D\u7528</h3><p>\u4F7F\u7528 select \u6216\u8005 poll \u7B49\u5F85\u6570\u636E\uFF0C\u5E76\u4E14\u53EF\u4EE5\u7B49\u5F85\u591A\u4E2A\u5957\u63A5\u5B57\u4E2D\u7684\u4EFB\u4F55\u4E00\u4E2A\u53D8\u4E3A\u53EF\u8BFB\u3002\u8FD9\u4E00\u8FC7\u7A0B\u4F1A\u88AB\u963B\u585E\uFF0C\u5F53\u67D0\u4E00\u4E2A\u5957\u63A5\u5B57\u53EF\u8BFB\u65F6\u8FD4\u56DE\uFF0C\u4E4B\u540E\u518D\u4F7F\u7528 recvfrom \u628A\u6570\u636E\u4ECE\u5185\u6838\u590D\u5236\u5230\u8FDB\u7A0B\u4E2D\u3002</p><p>\u5B83\u53EF\u4EE5\u8BA9\u5355\u4E2A\u8FDB\u7A0B\u5177\u6709\u5904\u7406\u591A\u4E2A I/O \u4E8B\u4EF6\u7684\u80FD\u529B\u3002\u53C8\u88AB\u79F0\u4E3A Event Driven I/O\uFF0C\u5373\u4E8B\u4EF6\u9A71\u52A8 I/O\u3002</p><p>\u5982\u679C\u4E00\u4E2A Web \u670D\u52A1\u5668\u6CA1\u6709 I/O \u590D\u7528\uFF0C\u90A3\u4E48\u6BCF\u4E00\u4E2A Socket \u8FDE\u63A5\u90FD\u9700\u8981\u521B\u5EFA\u4E00\u4E2A\u7EBF\u7A0B\u53BB\u5904\u7406\u3002\u5982\u679C\u540C\u65F6\u6709\u51E0\u4E07\u4E2A\u8FDE\u63A5\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u521B\u5EFA\u76F8\u540C\u6570\u91CF\u7684\u7EBF\u7A0B\u3002\u76F8\u6BD4\u4E8E\u591A\u8FDB\u7A0B\u548C\u591A\u7EBF\u7A0B\u6280\u672F\uFF0CI/O \u590D\u7528\u4E0D\u9700\u8981\u8FDB\u7A0B\u7EBF\u7A0B\u521B\u5EFA\u548C\u5207\u6362\u7684\u5F00\u9500\uFF0C\u7CFB\u7EDF\u5F00\u9500\u66F4\u5C0F\u3002</p><p><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1492929444818_6.png" alt="img"></p><h3 id="\u4FE1\u53F7\u9A71\u52A8-i-o" tabindex="-1"><a class="header-anchor" href="#\u4FE1\u53F7\u9A71\u52A8-i-o" aria-hidden="true">#</a> \u4FE1\u53F7\u9A71\u52A8 I/O</h3><p>\u5E94\u7528\u8FDB\u7A0B\u4F7F\u7528 sigaction \u7CFB\u7EDF\u8C03\u7528\uFF0C\u5185\u6838\u7ACB\u5373\u8FD4\u56DE\uFF0C\u5E94\u7528\u8FDB\u7A0B\u53EF\u4EE5\u7EE7\u7EED\u6267\u884C\uFF0C\u4E5F\u5C31\u662F\u8BF4\u7B49\u5F85\u6570\u636E\u9636\u6BB5\u5E94\u7528\u8FDB\u7A0B\u662F\u975E\u963B\u585E\u7684\u3002\u5185\u6838\u5728\u6570\u636E\u5230\u8FBE\u65F6\u5411\u5E94\u7528\u8FDB\u7A0B\u53D1\u9001 SIGIO \u4FE1\u53F7\uFF0C\u5E94\u7528\u8FDB\u7A0B\u6536\u5230\u4E4B\u540E\u5728\u4FE1\u53F7\u5904\u7406\u7A0B\u5E8F\u4E2D\u8C03\u7528 recvfrom \u5C06\u6570\u636E\u4ECE\u5185\u6838\u590D\u5236\u5230\u5E94\u7528\u8FDB\u7A0B\u4E2D\u3002</p><p>\u76F8\u6BD4\u4E8E\u975E\u963B\u585E\u5F0F I/O \u7684\u8F6E\u8BE2\u65B9\u5F0F\uFF0C\u4FE1\u53F7\u9A71\u52A8 I/O \u7684 CPU \u5229\u7528\u7387\u66F4\u9AD8\u3002</p><p><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1492929553651_7.png" alt="img"></p><h3 id="\u5F02\u6B65-i-o" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65-i-o" aria-hidden="true">#</a> \u5F02\u6B65 I/O</h3><p>\u5E94\u7528\u8FDB\u7A0B\u6267\u884C aio_read \u7CFB\u7EDF\u8C03\u7528\u4F1A\u7ACB\u5373\u8FD4\u56DE\uFF0C\u5E94\u7528\u8FDB\u7A0B\u53EF\u4EE5\u7EE7\u7EED\u6267\u884C\uFF0C\u4E0D\u4F1A\u88AB\u963B\u585E\uFF0C\u5185\u6838\u4F1A\u5728\u6240\u6709\u64CD\u4F5C\u5B8C\u6210\u4E4B\u540E\u5411\u5E94\u7528\u8FDB\u7A0B\u53D1\u9001\u4FE1\u53F7\u3002</p><p>\u5F02\u6B65 I/O \u4E0E\u4FE1\u53F7\u9A71\u52A8 I/O \u7684\u533A\u522B\u5728\u4E8E\uFF0C\u5F02\u6B65 I/O \u7684\u4FE1\u53F7\u662F\u901A\u77E5\u5E94\u7528\u8FDB\u7A0B I/O \u5B8C\u6210\uFF0C\u800C\u4FE1\u53F7\u9A71\u52A8 I/O \u7684\u4FE1\u53F7\u662F\u901A\u77E5\u5E94\u7528\u8FDB\u7A0B\u53EF\u4EE5\u5F00\u59CB I/O\u3002</p><p><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1492930243286_8.png" alt="img"></p><h3 id="\u4E94\u5927-i-o-\u6A21\u578B\u6BD4\u8F83" tabindex="-1"><a class="header-anchor" href="#\u4E94\u5927-i-o-\u6A21\u578B\u6BD4\u8F83" aria-hidden="true">#</a> \u4E94\u5927 I/O \u6A21\u578B\u6BD4\u8F83</h3><ul><li>\u540C\u6B65 I/O\uFF1A\u5C06\u6570\u636E\u4ECE\u5185\u6838\u7F13\u51B2\u533A\u590D\u5236\u5230\u5E94\u7528\u8FDB\u7A0B\u7F13\u51B2\u533A\u7684\u9636\u6BB5\uFF08\u7B2C\u4E8C\u9636\u6BB5\uFF09\uFF0C\u5E94\u7528\u8FDB\u7A0B\u4F1A\u963B\u585E\u3002</li><li>\u5F02\u6B65 I/O\uFF1A\u7B2C\u4E8C\u9636\u6BB5\u5E94\u7528\u8FDB\u7A0B\u4E0D\u4F1A\u963B\u585E\u3002</li></ul><p>\u540C\u6B65 I/O \u5305\u62EC\u963B\u585E\u5F0F I/O\u3001\u975E\u963B\u585E\u5F0F I/O\u3001I/O \u590D\u7528\u548C\u4FE1\u53F7\u9A71\u52A8 I/O \uFF0C\u5B83\u4EEC\u7684\u4E3B\u8981\u533A\u522B\u5728\u7B2C\u4E00\u4E2A\u9636\u6BB5\u3002</p><p>\u975E\u963B\u585E\u5F0F I/O \u3001\u4FE1\u53F7\u9A71\u52A8 I/O \u548C\u5F02\u6B65 I/O \u5728\u7B2C\u4E00\u9636\u6BB5\u4E0D\u4F1A\u963B\u585E\u3002</p><p><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1492928105791_3.png" alt="img"></p><h2 id="\u4E8C\u3001i-o-\u590D\u7528" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001i-o-\u590D\u7528" aria-hidden="true">#</a> \u4E8C\u3001I/O \u590D\u7528</h2><p>select/poll/epoll \u90FD\u662F I/O \u591A\u8DEF\u590D\u7528\u7684\u5177\u4F53\u5B9E\u73B0\uFF0Cselect \u51FA\u73B0\u7684\u6700\u65E9\uFF0C\u4E4B\u540E\u662F poll\uFF0C\u518D\u662F epoll\u3002</p><h3 id="select" tabindex="-1"><a class="header-anchor" href="#select" aria-hidden="true">#</a> select</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">select</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> fd_set <span class="token operator">*</span>readfds<span class="token punctuation">,</span> fd_set <span class="token operator">*</span>writefds<span class="token punctuation">,</span> fd_set <span class="token operator">*</span>exceptfds<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">timeval</span> <span class="token operator">*</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>select \u5141\u8BB8\u5E94\u7528\u7A0B\u5E8F\u76D1\u89C6\u4E00\u7EC4\u6587\u4EF6\u63CF\u8FF0\u7B26\uFF0C\u7B49\u5F85\u4E00\u4E2A\u6216\u8005\u591A\u4E2A\u63CF\u8FF0\u7B26\u6210\u4E3A\u5C31\u7EEA\u72B6\u6001\uFF0C\u4ECE\u800C\u5B8C\u6210 I/O \u64CD\u4F5C\u3002</p><ul><li><p>fd_set \u4F7F\u7528\u6570\u7EC4\u5B9E\u73B0\uFF0C\u6570\u7EC4\u5927\u5C0F\u4F7F\u7528 FD_SETSIZE \u5B9A\u4E49\uFF0C\u6240\u4EE5\u53EA\u80FD\u76D1\u542C\u5C11\u4E8E FD_SETSIZE \u6570\u91CF\u7684\u63CF\u8FF0\u7B26\u3002\u6709\u4E09\u79CD\u7C7B\u578B\u7684\u63CF\u8FF0\u7B26\u7C7B\u578B\uFF1Areadset\u3001writeset\u3001exceptset\uFF0C\u5206\u522B\u5BF9\u5E94\u8BFB\u3001\u5199\u3001\u5F02\u5E38\u6761\u4EF6\u7684\u63CF\u8FF0\u7B26\u96C6\u5408\u3002</p></li><li><p>timeout \u4E3A\u8D85\u65F6\u53C2\u6570\uFF0C\u8C03\u7528 select \u4F1A\u4E00\u76F4\u963B\u585E\u76F4\u5230\u6709\u63CF\u8FF0\u7B26\u7684\u4E8B\u4EF6\u5230\u8FBE\u6216\u8005\u7B49\u5F85\u7684\u65F6\u95F4\u8D85\u8FC7 timeout\u3002</p></li><li><p>\u6210\u529F\u8C03\u7528\u8FD4\u56DE\u7ED3\u679C\u5927\u4E8E 0\uFF0C\u51FA\u9519\u8FD4\u56DE\u7ED3\u679C\u4E3A -1\uFF0C\u8D85\u65F6\u8FD4\u56DE\u7ED3\u679C\u4E3A 0\u3002</p></li></ul><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>fd_set fd_in<span class="token punctuation">,</span> fd_out<span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">timeval</span> tv<span class="token punctuation">;</span>

<span class="token comment">// Reset the sets</span>
<span class="token function">FD_ZERO</span><span class="token punctuation">(</span> <span class="token operator">&amp;</span>fd_in <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">FD_ZERO</span><span class="token punctuation">(</span> <span class="token operator">&amp;</span>fd_out <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Monitor sock1 for input events</span>
<span class="token function">FD_SET</span><span class="token punctuation">(</span> sock1<span class="token punctuation">,</span> <span class="token operator">&amp;</span>fd_in <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Monitor sock2 for output events</span>
<span class="token function">FD_SET</span><span class="token punctuation">(</span> sock2<span class="token punctuation">,</span> <span class="token operator">&amp;</span>fd_out <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Find out which socket has the largest numeric value as select requires it</span>
<span class="token keyword">int</span> largest_sock <span class="token operator">=</span> sock1 <span class="token operator">&gt;</span> sock2 <span class="token operator">?</span> sock1 <span class="token operator">:</span> sock2<span class="token punctuation">;</span>

<span class="token comment">// Wait up to 10 seconds</span>
tv<span class="token punctuation">.</span>tv_sec <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
tv<span class="token punctuation">.</span>tv_usec <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token comment">// Call the select</span>
<span class="token keyword">int</span> ret <span class="token operator">=</span> <span class="token function">select</span><span class="token punctuation">(</span> largest_sock <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>fd_in<span class="token punctuation">,</span> <span class="token operator">&amp;</span>fd_out<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>tv <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Check if select actually succeed</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span> ret <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">)</span>
    <span class="token comment">// report error and abort</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> ret <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token comment">// timeout; no event detected</span>
<span class="token keyword">else</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">FD_ISSET</span><span class="token punctuation">(</span> sock1<span class="token punctuation">,</span> <span class="token operator">&amp;</span>fd_in <span class="token punctuation">)</span> <span class="token punctuation">)</span>
        <span class="token comment">// input event on sock1</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">FD_ISSET</span><span class="token punctuation">(</span> sock2<span class="token punctuation">,</span> <span class="token operator">&amp;</span>fd_out <span class="token punctuation">)</span> <span class="token punctuation">)</span>
        <span class="token comment">// output event on sock2</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="poll" tabindex="-1"><a class="header-anchor" href="#poll" aria-hidden="true">#</a> poll</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">poll</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">pollfd</span> <span class="token operator">*</span>fds<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> nfds<span class="token punctuation">,</span> <span class="token keyword">int</span> timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>poll \u7684\u529F\u80FD\u4E0E select \u7C7B\u4F3C\uFF0C\u4E5F\u662F\u7B49\u5F85\u4E00\u7EC4\u63CF\u8FF0\u7B26\u4E2D\u7684\u4E00\u4E2A\u6210\u4E3A\u5C31\u7EEA\u72B6\u6001\u3002</p><p>poll \u4E2D\u7684\u63CF\u8FF0\u7B26\u662F pollfd \u7C7B\u578B\u7684\u6570\u7EC4\uFF0Cpollfd \u7684\u5B9A\u4E49\u5982\u4E0B\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">pollfd</span> <span class="token punctuation">{</span>
               <span class="token keyword">int</span>   fd<span class="token punctuation">;</span>         <span class="token comment">/* file descriptor */</span>
               <span class="token keyword">short</span> events<span class="token punctuation">;</span>     <span class="token comment">/* requested events */</span>
               <span class="token keyword">short</span> revents<span class="token punctuation">;</span>    <span class="token comment">/* returned events */</span>
           <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// The structure for two events</span>
<span class="token keyword">struct</span> <span class="token class-name">pollfd</span> fds<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// Monitor sock1 for input</span>
fds<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fd <span class="token operator">=</span> sock1<span class="token punctuation">;</span>
fds<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>events <span class="token operator">=</span> POLLIN<span class="token punctuation">;</span>

<span class="token comment">// Monitor sock2 for output</span>
fds<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fd <span class="token operator">=</span> sock2<span class="token punctuation">;</span>
fds<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>events <span class="token operator">=</span> POLLOUT<span class="token punctuation">;</span>

<span class="token comment">// Wait 10 seconds</span>
<span class="token keyword">int</span> ret <span class="token operator">=</span> <span class="token function">poll</span><span class="token punctuation">(</span> <span class="token operator">&amp;</span>fds<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10000</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Check if poll actually succeed</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span> ret <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">)</span>
    <span class="token comment">// report error and abort</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> ret <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token comment">// timeout; no event detected</span>
<span class="token keyword">else</span>
<span class="token punctuation">{</span>
    <span class="token comment">// If we detect the event, zero it out so we can reuse the structure</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span> fds<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>revents <span class="token operator">&amp;</span> POLLIN <span class="token punctuation">)</span>
        fds<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>revents <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// input event on sock1</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span> fds<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>revents <span class="token operator">&amp;</span> POLLOUT <span class="token punctuation">)</span>
        fds<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>revents <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// output event on sock2</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6BD4\u8F83" tabindex="-1"><a class="header-anchor" href="#\u6BD4\u8F83" aria-hidden="true">#</a> \u6BD4\u8F83</h3><h4 id="_1-\u529F\u80FD" tabindex="-1"><a class="header-anchor" href="#_1-\u529F\u80FD" aria-hidden="true">#</a> 1. \u529F\u80FD</h4><p>select \u548C poll \u7684\u529F\u80FD\u57FA\u672C\u76F8\u540C\uFF0C\u4E0D\u8FC7\u5728\u4E00\u4E9B\u5B9E\u73B0\u7EC6\u8282\u4E0A\u6709\u6240\u4E0D\u540C\u3002</p><ul><li>select \u4F1A\u4FEE\u6539\u63CF\u8FF0\u7B26\uFF0C\u800C poll \u4E0D\u4F1A\uFF1B</li><li>select \u7684\u63CF\u8FF0\u7B26\u7C7B\u578B\u4F7F\u7528\u6570\u7EC4\u5B9E\u73B0\uFF0CFD_SETSIZE \u5927\u5C0F\u9ED8\u8BA4\u4E3A 1024\uFF0C\u56E0\u6B64\u9ED8\u8BA4\u53EA\u80FD\u76D1\u542C\u5C11\u4E8E 1024 \u4E2A\u63CF\u8FF0\u7B26\u3002\u5982\u679C\u8981\u76D1\u542C\u66F4\u591A\u63CF\u8FF0\u7B26\u7684\u8BDD\uFF0C\u9700\u8981\u4FEE\u6539 FD_SETSIZE \u4E4B\u540E\u91CD\u65B0\u7F16\u8BD1\uFF1B\u800C poll \u6CA1\u6709\u63CF\u8FF0\u7B26\u6570\u91CF\u7684\u9650\u5236\uFF1B</li><li>poll \u63D0\u4F9B\u4E86\u66F4\u591A\u7684\u4E8B\u4EF6\u7C7B\u578B\uFF0C\u5E76\u4E14\u5BF9\u63CF\u8FF0\u7B26\u7684\u91CD\u590D\u5229\u7528\u4E0A\u6BD4 select \u9AD8\u3002</li><li>\u5982\u679C\u4E00\u4E2A\u7EBF\u7A0B\u5BF9\u67D0\u4E2A\u63CF\u8FF0\u7B26\u8C03\u7528\u4E86 select \u6216\u8005 poll\uFF0C\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u5173\u95ED\u4E86\u8BE5\u63CF\u8FF0\u7B26\uFF0C\u4F1A\u5BFC\u81F4\u8C03\u7528\u7ED3\u679C\u4E0D\u786E\u5B9A\u3002</li></ul><h4 id="_2-\u901F\u5EA6" tabindex="-1"><a class="header-anchor" href="#_2-\u901F\u5EA6" aria-hidden="true">#</a> 2. \u901F\u5EA6</h4><p>select \u548C poll \u901F\u5EA6\u90FD\u6BD4\u8F83\u6162\uFF0C\u6BCF\u6B21\u8C03\u7528\u90FD\u9700\u8981\u5C06\u5168\u90E8\u63CF\u8FF0\u7B26\u4ECE\u5E94\u7528\u8FDB\u7A0B\u7F13\u51B2\u533A\u590D\u5236\u5230\u5185\u6838\u7F13\u51B2\u533A\u3002</p><h4 id="_3-\u53EF\u79FB\u690D\u6027" tabindex="-1"><a class="header-anchor" href="#_3-\u53EF\u79FB\u690D\u6027" aria-hidden="true">#</a> 3. \u53EF\u79FB\u690D\u6027</h4><p>\u51E0\u4E4E\u6240\u6709\u7684\u7CFB\u7EDF\u90FD\u652F\u6301 select\uFF0C\u4F46\u662F\u53EA\u6709\u6BD4\u8F83\u65B0\u7684\u7CFB\u7EDF\u652F\u6301 poll\u3002</p><h3 id="epoll" tabindex="-1"><a class="header-anchor" href="#epoll" aria-hidden="true">#</a> epoll</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">epoll_create</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">epoll_ctl</span><span class="token punctuation">(</span><span class="token keyword">int</span> epfd<span class="token punctuation">,</span> <span class="token keyword">int</span> op<span class="token punctuation">,</span> <span class="token keyword">int</span> fd<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">epoll_event</span> <span class="token operator">*</span>event<span class="token punctuation">)</span>\uFF1B
<span class="token keyword">int</span> <span class="token function">epoll_wait</span><span class="token punctuation">(</span><span class="token keyword">int</span> epfd<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">epoll_event</span> <span class="token operator">*</span> events<span class="token punctuation">,</span> <span class="token keyword">int</span> maxevents<span class="token punctuation">,</span> <span class="token keyword">int</span> timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>epoll_ctl() \u7528\u4E8E\u5411\u5185\u6838\u6CE8\u518C\u65B0\u7684\u63CF\u8FF0\u7B26\u6216\u8005\u662F\u6539\u53D8\u67D0\u4E2A\u6587\u4EF6\u63CF\u8FF0\u7B26\u7684\u72B6\u6001\u3002\u5DF2\u6CE8\u518C\u7684\u63CF\u8FF0\u7B26\u5728\u5185\u6838\u4E2D\u4F1A\u88AB\u7EF4\u62A4\u5728\u4E00\u68F5\u7EA2\u9ED1\u6811\u4E0A\uFF0C\u901A\u8FC7\u56DE\u8C03\u51FD\u6570\u5185\u6838\u4F1A\u5C06 I/O \u51C6\u5907\u597D\u7684\u63CF\u8FF0\u7B26\u52A0\u5165\u5230\u4E00\u4E2A\u94FE\u8868\u4E2D\u7BA1\u7406\uFF0C\u8FDB\u7A0B\u8C03\u7528 epoll_wait() \u4FBF\u53EF\u4EE5\u5F97\u5230\u4E8B\u4EF6\u5B8C\u6210\u7684\u63CF\u8FF0\u7B26\u3002</p><p>\u4ECE\u4E0A\u9762\u7684\u63CF\u8FF0\u53EF\u4EE5\u770B\u51FA\uFF0Cepoll \u53EA\u9700\u8981\u5C06\u63CF\u8FF0\u7B26\u4ECE\u8FDB\u7A0B\u7F13\u51B2\u533A\u5411\u5185\u6838\u7F13\u51B2\u533A\u62F7\u8D1D\u4E00\u6B21\uFF0C\u5E76\u4E14\u8FDB\u7A0B\u4E0D\u9700\u8981\u901A\u8FC7\u8F6E\u8BE2\u6765\u83B7\u5F97\u4E8B\u4EF6\u5B8C\u6210\u7684\u63CF\u8FF0\u7B26\u3002</p><p>epoll \u4EC5\u9002\u7528\u4E8E Linux OS\u3002</p><p>epoll \u6BD4 select \u548C poll \u66F4\u52A0\u7075\u6D3B\u800C\u4E14\u6CA1\u6709\u63CF\u8FF0\u7B26\u6570\u91CF\u9650\u5236\u3002</p><p>epoll \u5BF9\u591A\u7EBF\u7A0B\u7F16\u7A0B\u66F4\u6709\u53CB\u597D\uFF0C\u4E00\u4E2A\u7EBF\u7A0B\u8C03\u7528\u4E86 epoll_wait() \u53E6\u4E00\u4E2A\u7EBF\u7A0B\u5173\u95ED\u4E86\u540C\u4E00\u4E2A\u63CF\u8FF0\u7B26\u4E5F\u4E0D\u4F1A\u4EA7\u751F\u50CF select \u548C poll \u7684\u4E0D\u786E\u5B9A\u60C5\u51B5\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// Create the epoll descriptor. Only one is needed per app, and is used to monitor all sockets.</span>
<span class="token comment">// The function argument is ignored (it was not before, but now it is), so put your favorite number here</span>
<span class="token keyword">int</span> pollingfd <span class="token operator">=</span> <span class="token function">epoll_create</span><span class="token punctuation">(</span> <span class="token number">0xCAFE</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span> pollingfd <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token punctuation">)</span>
 <span class="token comment">// report error</span>

<span class="token comment">// Initialize the epoll structure in case more members are added in future</span>
<span class="token keyword">struct</span> <span class="token class-name">epoll_event</span> ev <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// Associate the connection class instance with the event. You can associate anything</span>
<span class="token comment">// you want, epoll does not use this information. We store a connection class pointer, pConnection1</span>
ev<span class="token punctuation">.</span>data<span class="token punctuation">.</span>ptr <span class="token operator">=</span> pConnection1<span class="token punctuation">;</span>

<span class="token comment">// Monitor for input, and do not automatically rearm the descriptor after the event</span>
ev<span class="token punctuation">.</span>events <span class="token operator">=</span> EPOLLIN <span class="token operator">|</span> EPOLLONESHOT<span class="token punctuation">;</span>
<span class="token comment">// Add the descriptor into the monitoring list. We can do it even if another thread is</span>
<span class="token comment">// waiting in epoll_wait - the descriptor will be properly added</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">epoll_ctl</span><span class="token punctuation">(</span> epollfd<span class="token punctuation">,</span> EPOLL_CTL_ADD<span class="token punctuation">,</span> pConnection1<span class="token operator">-&gt;</span><span class="token function">getSocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>ev <span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token comment">// report error</span>

<span class="token comment">// Wait for up to 20 events (assuming we have added maybe 200 sockets before that it may happen)</span>
<span class="token keyword">struct</span> <span class="token class-name">epoll_event</span> pevents<span class="token punctuation">[</span> <span class="token number">20</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// Wait for 10 seconds, and retrieve less than 20 epoll_event and store them into epoll_event array</span>
<span class="token keyword">int</span> ready <span class="token operator">=</span> <span class="token function">epoll_wait</span><span class="token punctuation">(</span> pollingfd<span class="token punctuation">,</span> pevents<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10000</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Check if epoll actually succeed</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span> ret <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">)</span>
    <span class="token comment">// report error and abort</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> ret <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token comment">// timeout; no event detected</span>
<span class="token keyword">else</span>
<span class="token punctuation">{</span>
    <span class="token comment">// Check if any events detected</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ready<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span> pevents<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>events <span class="token operator">&amp;</span> EPOLLIN <span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// Get back our connection pointer</span>
            Connection <span class="token operator">*</span> c <span class="token operator">=</span> <span class="token punctuation">(</span>Connection<span class="token operator">*</span><span class="token punctuation">)</span> pevents<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>ptr<span class="token punctuation">;</span>
            c<span class="token operator">-&gt;</span><span class="token function">handleReadEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5DE5\u4F5C\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u4F5C\u6A21\u5F0F" aria-hidden="true">#</a> \u5DE5\u4F5C\u6A21\u5F0F</h3><p>epoll \u7684\u63CF\u8FF0\u7B26\u4E8B\u4EF6\u6709\u4E24\u79CD\u89E6\u53D1\u6A21\u5F0F\uFF1ALT\uFF08level trigger\uFF09\u548C ET\uFF08edge trigger\uFF09\u3002</p><h4 id="_1-lt-\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#_1-lt-\u6A21\u5F0F" aria-hidden="true">#</a> 1. LT \u6A21\u5F0F</h4><p>\u5F53 epoll_wait() \u68C0\u6D4B\u5230\u63CF\u8FF0\u7B26\u4E8B\u4EF6\u5230\u8FBE\u65F6\uFF0C\u5C06\u6B64\u4E8B\u4EF6\u901A\u77E5\u8FDB\u7A0B\uFF0C\u8FDB\u7A0B\u53EF\u4EE5\u4E0D\u7ACB\u5373\u5904\u7406\u8BE5\u4E8B\u4EF6\uFF0C\u4E0B\u6B21\u8C03\u7528 epoll_wait() \u4F1A\u518D\u6B21\u901A\u77E5\u8FDB\u7A0B\u3002\u662F\u9ED8\u8BA4\u7684\u4E00\u79CD\u6A21\u5F0F\uFF0C\u5E76\u4E14\u540C\u65F6\u652F\u6301 Blocking \u548C No-Blocking\u3002</p><h4 id="_2-et-\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#_2-et-\u6A21\u5F0F" aria-hidden="true">#</a> 2. ET \u6A21\u5F0F</h4><p>\u548C LT \u6A21\u5F0F\u4E0D\u540C\u7684\u662F\uFF0C\u901A\u77E5\u4E4B\u540E\u8FDB\u7A0B\u5FC5\u987B\u7ACB\u5373\u5904\u7406\u4E8B\u4EF6\uFF0C\u4E0B\u6B21\u518D\u8C03\u7528 epoll_wait() \u65F6\u4E0D\u4F1A\u518D\u5F97\u5230\u4E8B\u4EF6\u5230\u8FBE\u7684\u901A\u77E5\u3002</p><p>\u5F88\u5927\u7A0B\u5EA6\u4E0A\u51CF\u5C11\u4E86 epoll \u4E8B\u4EF6\u88AB\u91CD\u590D\u89E6\u53D1\u7684\u6B21\u6570\uFF0C\u56E0\u6B64\u6548\u7387\u8981\u6BD4 LT \u6A21\u5F0F\u9AD8\u3002\u53EA\u652F\u6301 No-Blocking\uFF0C\u4EE5\u907F\u514D\u7531\u4E8E\u4E00\u4E2A\u6587\u4EF6\u53E5\u67C4\u7684\u963B\u585E\u8BFB/\u963B\u585E\u5199\u64CD\u4F5C\u628A\u5904\u7406\u591A\u4E2A\u6587\u4EF6\u63CF\u8FF0\u7B26\u7684\u4EFB\u52A1\u997F\u6B7B\u3002</p><h3 id="\u5E94\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u5E94\u7528\u573A\u666F" aria-hidden="true">#</a> \u5E94\u7528\u573A\u666F</h3><p>\u5F88\u5BB9\u6613\u4EA7\u751F\u4E00\u79CD\u9519\u89C9\u8BA4\u4E3A\u53EA\u8981\u7528 epoll \u5C31\u53EF\u4EE5\u4E86\uFF0Cselect \u548C poll \u90FD\u5DF2\u7ECF\u8FC7\u65F6\u4E86\uFF0C\u5176\u5B9E\u5B83\u4EEC\u90FD\u6709\u5404\u81EA\u7684\u4F7F\u7528\u573A\u666F\u3002</p><h4 id="_1-select-\u5E94\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#_1-select-\u5E94\u7528\u573A\u666F" aria-hidden="true">#</a> 1. select \u5E94\u7528\u573A\u666F</h4><p>select \u7684 timeout \u53C2\u6570\u7CBE\u5EA6\u4E3A\u5FAE\u79D2\uFF0C\u800C poll \u548C epoll \u4E3A\u6BEB\u79D2\uFF0C\u56E0\u6B64 select \u66F4\u52A0\u9002\u7528\u4E8E\u5B9E\u65F6\u6027\u8981\u6C42\u6BD4\u8F83\u9AD8\u7684\u573A\u666F\uFF0C\u6BD4\u5982\u6838\u53CD\u5E94\u5806\u7684\u63A7\u5236\u3002</p><p>select \u53EF\u79FB\u690D\u6027\u66F4\u597D\uFF0C\u51E0\u4E4E\u88AB\u6240\u6709\u4E3B\u6D41\u5E73\u53F0\u6240\u652F\u6301\u3002</p><h4 id="_2-poll-\u5E94\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#_2-poll-\u5E94\u7528\u573A\u666F" aria-hidden="true">#</a> 2. poll \u5E94\u7528\u573A\u666F</h4><p>poll \u6CA1\u6709\u6700\u5927\u63CF\u8FF0\u7B26\u6570\u91CF\u7684\u9650\u5236\uFF0C\u5982\u679C\u5E73\u53F0\u652F\u6301\u5E76\u4E14\u5BF9\u5B9E\u65F6\u6027\u8981\u6C42\u4E0D\u9AD8\uFF0C\u5E94\u8BE5\u4F7F\u7528 poll \u800C\u4E0D\u662F select\u3002</p><h4 id="_3-epoll-\u5E94\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#_3-epoll-\u5E94\u7528\u573A\u666F" aria-hidden="true">#</a> 3. epoll \u5E94\u7528\u573A\u666F</h4><p>\u53EA\u9700\u8981\u8FD0\u884C\u5728 Linux \u5E73\u53F0\u4E0A\uFF0C\u6709\u5927\u91CF\u7684\u63CF\u8FF0\u7B26\u9700\u8981\u540C\u65F6\u8F6E\u8BE2\uFF0C\u5E76\u4E14\u8FD9\u4E9B\u8FDE\u63A5\u6700\u597D\u662F\u957F\u8FDE\u63A5\u3002</p><p>\u9700\u8981\u540C\u65F6\u76D1\u63A7\u5C0F\u4E8E 1000 \u4E2A\u63CF\u8FF0\u7B26\uFF0C\u5C31\u6CA1\u6709\u5FC5\u8981\u4F7F\u7528 epoll\uFF0C\u56E0\u4E3A\u8FD9\u4E2A\u5E94\u7528\u573A\u666F\u4E0B\u5E76\u4E0D\u80FD\u4F53\u73B0 epoll \u7684\u4F18\u52BF\u3002</p><p>\u9700\u8981\u76D1\u63A7\u7684\u63CF\u8FF0\u7B26\u72B6\u6001\u53D8\u5316\u591A\uFF0C\u800C\u4E14\u90FD\u662F\u975E\u5E38\u77ED\u6682\u7684\uFF0C\u4E5F\u6CA1\u6709\u5FC5\u8981\u4F7F\u7528 epoll\u3002\u56E0\u4E3A epoll \u4E2D\u7684\u6240\u6709\u63CF\u8FF0\u7B26\u90FD\u5B58\u50A8\u5728\u5185\u6838\u4E2D\uFF0C\u9020\u6210\u6BCF\u6B21\u9700\u8981\u5BF9\u63CF\u8FF0\u7B26\u7684\u72B6\u6001\u6539\u53D8\u90FD\u9700\u8981\u901A\u8FC7 epoll_ctl() \u8FDB\u884C\u7CFB\u7EDF\u8C03\u7528\uFF0C\u9891\u7E41\u7CFB\u7EDF\u8C03\u7528\u964D\u4F4E\u6548\u7387\u3002\u5E76\u4E14 epoll \u7684\u63CF\u8FF0\u7B26\u5B58\u50A8\u5728\u5185\u6838\uFF0C\u4E0D\u5BB9\u6613\u8C03\u8BD5\u3002</p><h2 id="\u53C2\u8003\u8D44\u6599" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u8D44\u6599" aria-hidden="true">#</a> \u53C2\u8003\u8D44\u6599</h2>`,84),d=n("li",null,"Stevens W R, Fenner B, Rudoff A M. UNIX network programming[M]. Addison-Wesley Professional, 2004.",-1),k=n("li",null,"http://man7.org/linux/man-pages/man2/select.2.html",-1),m=n("li",null,"http://man7.org/linux/man-pages/man2/poll.2.html",-1),v={href:"https://www.ibm.com/developerworks/linux/library/l-async/",target:"_blank",rel:"noopener noreferrer"},h=e("Boost application performance using asynchronous I/O"),b={href:"https://msdn.microsoft.com/en-us/library/windows/desktop/aa365683(v=vs.85).aspx",target:"_blank",rel:"noopener noreferrer"},f=e("Synchronous and Asynchronous I/O"),_={href:"https://segmentfault.com/a/1190000003063859",target:"_blank",rel:"noopener noreferrer"},g=e("Linux IO \u6A21\u5F0F\u53CA select\u3001poll\u3001epoll \u8BE6\u89E3"),y={href:"https://daniel.haxx.se/docs/poll-vs-select.html",target:"_blank",rel:"noopener noreferrer"},w=e("poll vs select vs event-based"),E={href:"http://www.ulduzsoft.com/2014/01/select-poll-epoll-practical-difference-for-system-architects/",target:"_blank",rel:"noopener noreferrer"},I=e("select / poll / epoll: practical difference for system architects"),O={href:"https://code.woboq.org/userspace/glibc/sysdeps/unix/sysv/linux/",target:"_blank",rel:"noopener noreferrer"},x=e("Browse the source code of userspace/glibc/sysdeps/unix/sysv/linux/ online");function A(B,L){const s=p("ExternalLinkIcon");return o(),l(c,null,[u,n("ul",null,[d,k,m,n("li",null,[n("a",v,[h,a(s)])]),n("li",null,[n("a",b,[f,a(s)])]),n("li",null,[n("a",_,[g,a(s)])]),n("li",null,[n("a",y,[w,a(s)])]),n("li",null,[n("a",E,[I,a(s)])]),n("li",null,[n("a",O,[x,a(s)])])])],64)}var F=t(r,[["render",A],["__file","Socket.html.vue"]]);export{F as default};
