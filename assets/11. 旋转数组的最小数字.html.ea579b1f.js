import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,o as e,c as o,a as n,b as c,F as l,d as s,e as u}from"./app.d02315a2.js";const i={},r=n("h1",{id:"_11-\u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u6570\u5B57",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_11-\u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u6570\u5B57","aria-hidden":"true"},"#"),s(" 11. \u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u6570\u5B57")],-1),k=n("h2",{id:"\u9898\u76EE\u94FE\u63A5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE\u94FE\u63A5","aria-hidden":"true"},"#"),s(" \u9898\u76EE\u94FE\u63A5")],-1),d={href:"https://www.nowcoder.com/practice/9f3231a991af4f55b95579b44b7a01ba?tpId=13&tqId=11159&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking&from=cyc_github",target:"_blank",rel:"noopener noreferrer"},m=s("\u725B\u5BA2\u7F51"),v=u(`<h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u628A\u4E00\u4E2A\u6570\u7EC4\u6700\u5F00\u59CB\u7684\u82E5\u5E72\u4E2A\u5143\u7D20\u642C\u5230\u6570\u7EC4\u7684\u672B\u5C3E\uFF0C\u6211\u4EEC\u79F0\u4E4B\u4E3A\u6570\u7EC4\u7684\u65CB\u8F6C\u3002\u8F93\u5165\u4E00\u4E2A\u975E\u9012\u51CF\u6392\u5E8F\u7684\u6570\u7EC4\u7684\u4E00\u4E2A\u65CB\u8F6C\uFF0C\u8F93\u51FA\u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u5143\u7D20\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/0038204c-4b8a-42a5-921d-080f6674f989.png&quot; width=&quot;210px&quot;&gt;</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u5C06\u65CB\u8F6C\u6570\u7EC4\u5BF9\u534A\u5206\u53EF\u4EE5\u5F97\u5230\u4E00\u4E2A\u5305\u542B\u6700\u5C0F\u5143\u7D20\u7684\u65B0\u65CB\u8F6C\u6570\u7EC4\uFF0C\u4EE5\u53CA\u4E00\u4E2A\u975E\u9012\u51CF\u6392\u5E8F\u7684\u6570\u7EC4\u3002\u65B0\u7684\u65CB\u8F6C\u6570\u7EC4\u7684\u957F\u5EA6\u662F\u539F\u6570\u7EC4\u7684\u4E00\u534A\uFF0C\u4ECE\u800C\u5C06\u95EE\u9898\u89C4\u6A21\u51CF\u5C11\u4E86\u4E00\u534A\uFF0C\u8FD9\u79CD\u6298\u534A\u6027\u8D28\u7684\u7B97\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(log<sub>2</sub>N)\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/424f34ab-a9fd-49a6-9969-d76b42251365.png&quot; width=&quot;300px&quot;&gt;</p><p>\u6B64\u65F6\u95EE\u9898\u7684\u5173\u952E\u5728\u4E8E\u786E\u5B9A\u5BF9\u534A\u5206\u5F97\u5230\u7684\u4E24\u4E2A\u6570\u7EC4\u54EA\u4E00\u4E2A\u662F\u65CB\u8F6C\u6570\u7EC4\uFF0C\u54EA\u4E00\u4E2A\u662F\u975E\u9012\u51CF\u6570\u7EC4\u3002\u6211\u4EEC\u5F88\u5BB9\u6613\u77E5\u9053\u975E\u9012\u51CF\u6570\u7EC4\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u4E00\u5B9A\u5C0F\u4E8E\u7B49\u4E8E\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u3002</p><p>\u901A\u8FC7\u4FEE\u6539\u4E8C\u5206\u67E5\u627E\u7B97\u6CD5\u8FDB\u884C\u6C42\u89E3\uFF08l \u4EE3\u8868 low\uFF0Cm \u4EE3\u8868 mid\uFF0Ch \u4EE3\u8868 high\uFF09\uFF1A</p><ul><li>\u5F53 nums[m] &lt;= nums[h] \u65F6\uFF0C\u8868\u793A [m, h] \u533A\u95F4\u5185\u7684\u6570\u7EC4\u662F\u975E\u9012\u51CF\u6570\u7EC4\uFF0C[l, m] \u533A\u95F4\u5185\u7684\u6570\u7EC4\u662F\u65CB\u8F6C\u6570\u7EC4\uFF0C\u6B64\u65F6\u4EE4 h = m\uFF1B</li><li>\u5426\u5219 [m + 1, h] \u533A\u95F4\u5185\u7684\u6570\u7EC4\u662F\u65CB\u8F6C\u6570\u7EC4\uFF0C\u4EE4 l = m + 1\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">minNumberInRotateArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> h <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span>h <span class="token operator">-</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> nums<span class="token punctuation">[</span>h<span class="token punctuation">]</span><span class="token punctuation">)</span>
            h <span class="token operator">=</span> m<span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            l <span class="token operator">=</span> m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6570\u7EC4\u5143\u7D20\u5141\u8BB8\u91CD\u590D\uFF0C\u4F1A\u51FA\u73B0\u4E00\u4E2A\u7279\u6B8A\u7684\u60C5\u51B5\uFF1Anums[l] == nums[m] == nums[h]\uFF0C\u6B64\u65F6\u65E0\u6CD5\u786E\u5B9A\u89E3\u5728\u54EA\u4E2A\u533A\u95F4\uFF0C\u9700\u8981\u5207\u6362\u5230\u987A\u5E8F\u67E5\u627E\u3002\u4F8B\u5982\u5BF9\u4E8E\u6570\u7EC4 {1,1,1,0,1}\uFF0Cl\u3001m \u548C h \u6307\u5411\u7684\u6570\u90FD\u4E3A 1\uFF0C\u6B64\u65F6\u65E0\u6CD5\u77E5\u9053\u6700\u5C0F\u6570\u5B57 0 \u5728\u54EA\u4E2A\u533A\u95F4\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">minNumberInRotateArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> h <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span>h <span class="token operator">-</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>h<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token function">minNumber</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> l<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> nums<span class="token punctuation">[</span>h<span class="token punctuation">]</span><span class="token punctuation">)</span>
            h <span class="token operator">=</span> m<span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            l <span class="token operator">=</span> m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">minNumber</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> l<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> h<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> nums<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12);function b(h,w){const a=t("ExternalLinkIcon");return e(),o(l,null,[r,k,n("p",null,[n("a",d,[m,c(a)])]),v],64)}var f=p(i,[["render",b],["__file","11. \u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u6570\u5B57.html.vue"]]);export{f as default};
