import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as p,o as t,c as o,a as n,b as c,F as l,d as s,e as r}from"./app.5ce5af5d.js";const i={},u=n("h1",{id:"_16-\u6570\u503C\u7684\u6574\u6570\u6B21\u65B9",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_16-\u6570\u503C\u7684\u6574\u6570\u6B21\u65B9","aria-hidden":"true"},"#"),s(" 16. \u6570\u503C\u7684\u6574\u6570\u6B21\u65B9")],-1),k=n("h2",{id:"\u9898\u76EE\u94FE\u63A5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE\u94FE\u63A5","aria-hidden":"true"},"#"),s(" \u9898\u76EE\u94FE\u63A5")],-1),d={href:"https://www.nowcoder.com/practice/1a834e5e3e1a4b7ba251417554e07c00?tpId=13&tqId=11165&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking&from=cyc_github",target:"_blank",rel:"noopener noreferrer"},v=s("\u725B\u5BA2\u7F51"),b=r(`<h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u7ED9\u5B9A\u4E00\u4E2A double \u7C7B\u578B\u7684\u6D6E\u70B9\u6570 x\u548C int \u7C7B\u578B\u7684\u6574\u6570 n\uFF0C\u6C42 x \u7684 n \u6B21\u65B9\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u6700\u76F4\u89C2\u7684\u89E3\u6CD5\u662F\u5C06 x \u91CD\u590D\u4E58 n \u6B21\uFF0Cx*x*x...*x\uFF0C\u90A3\u4E48\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N)\u3002\u56E0\u4E3A\u4E58\u6CD5\u662F\u53EF\u4EA4\u6362\u7684\uFF0C\u6240\u4EE5\u53EF\u4EE5\u5C06\u4E0A\u8FF0\u64CD\u4F5C\u62C6\u5F00\u6210\u4E24\u534A (x*x..*x)* (x*x..*x)\uFF0C\u4E24\u534A\u7684\u8BA1\u7B97\u662F\u4E00\u6837\u7684\uFF0C\u56E0\u6B64\u53EA\u9700\u8981\u8BA1\u7B97\u4E00\u6B21\u3002\u800C\u4E14\u5BF9\u4E8E\u65B0\u62C6\u5F00\u7684\u8BA1\u7B97\uFF0C\u53C8\u53EF\u4EE5\u7EE7\u7EED\u62C6\u5F00\u3002\u8FD9\u5C31\u662F\u5206\u6CBB\u601D\u60F3\uFF0C\u5C06\u539F\u95EE\u9898\u7684\u89C4\u6A21\u62C6\u6210\u591A\u4E2A\u89C4\u6A21\u8F83\u5C0F\u7684\u5B50\u95EE\u9898\uFF0C\u6700\u540E\u5B50\u95EE\u9898\u7684\u89E3\u5408\u5E76\u8D77\u6765\u3002</p><p>\u672C\u9898\u4E2D\u5B50\u95EE\u9898\u662F x<sup>n/2</sup>\uFF0C\u5728\u5C06\u5B50\u95EE\u9898\u5408\u5E76\u65F6\u5C06\u5B50\u95EE\u9898\u7684\u89E3\u4E58\u4E8E\u81EA\u8EAB\u76F8\u4E58\u5373\u53EF\u3002\u4F46\u5982\u679C n \u4E0D\u4E3A\u5076\u6570\uFF0C\u90A3\u4E48\u62C6\u6210\u4E24\u534A\u8FD8\u4F1A\u5269\u4E0B\u4E00\u4E2A x\uFF0C\u5728\u5C06\u5B50\u95EE\u9898\u5408\u5E76\u65F6\u8FD8\u9700\u8981\u9700\u8981\u591A\u4E58\u4E8E\u4E00\u4E2A x\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/image-20201105012506187.png&quot; width=&quot;400px&quot;&gt;</p><p>\u56E0\u4E3A (x*x)<sup>n/2</sup> \u53EF\u4EE5\u901A\u8FC7\u9012\u5F52\u6C42\u89E3\uFF0C\u5E76\u4E14\u6BCF\u6B21\u9012\u5F52 n \u90FD\u51CF\u5C0F\u4E00\u534A\uFF0C\u56E0\u6B64\u6574\u4E2A\u7B97\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(logN)\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token class-name">Power</span><span class="token punctuation">(</span><span class="token keyword">double</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> isNegative <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        n <span class="token operator">=</span> <span class="token operator">-</span>n<span class="token punctuation">;</span>
        isNegative <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">double</span> res <span class="token operator">=</span> <span class="token function">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> isNegative <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">/</span> res <span class="token operator">:</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">double</span> <span class="token function">pow</span><span class="token punctuation">(</span><span class="token keyword">double</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token keyword">double</span> res <span class="token operator">=</span> <span class="token function">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    res <span class="token operator">=</span> res <span class="token operator">*</span> res<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> res <span class="token operator">*=</span> x<span class="token punctuation">;</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function m(_,h){const a=p("ExternalLinkIcon");return t(),o(l,null,[u,k,n("p",null,[n("a",d,[v,c(a)])]),b],64)}var f=e(i,[["render",m],["__file","16. \u6570\u503C\u7684\u6574\u6570\u6B21\u65B9.html.vue"]]);export{f as default};
