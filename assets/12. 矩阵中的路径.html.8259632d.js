import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,o,c as e,a as n,b as c,F as l,d as s,e as u}from"./app.5ce5af5d.js";const i={},k=n("h1",{id:"_12-\u77E9\u9635\u4E2D\u7684\u8DEF\u5F84",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_12-\u77E9\u9635\u4E2D\u7684\u8DEF\u5F84","aria-hidden":"true"},"#"),s(" 12. \u77E9\u9635\u4E2D\u7684\u8DEF\u5F84")],-1),r={href:"https://www.nowcoder.com/practice/69fe7a584f0a445da1b6652978de5c38?tpId=13&tqId=11218&tab=answerKey&from=cyc_github",target:"_blank",rel:"noopener noreferrer"},d=s("\u725B\u5BA2\u7F51"),v=u(`<h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u5224\u65AD\u5728\u4E00\u4E2A\u77E9\u9635\u4E2D\u662F\u5426\u5B58\u5728\u4E00\u6761\u5305\u542B\u67D0\u5B57\u7B26\u4E32\u6240\u6709\u5B57\u7B26\u7684\u8DEF\u5F84\u3002\u8DEF\u5F84\u53EF\u4EE5\u4ECE\u77E9\u9635\u4E2D\u7684\u4EFB\u610F\u4E00\u4E2A\u683C\u5B50\u5F00\u59CB\uFF0C\u6BCF\u4E00\u6B65\u53EF\u4EE5\u5728\u77E9\u9635\u4E2D\u5411\u4E0A\u4E0B\u5DE6\u53F3\u79FB\u52A8\u4E00\u4E2A\u683C\u5B50\u3002\u5982\u679C\u4E00\u6761\u8DEF\u5F84\u7ECF\u8FC7\u4E86\u77E9\u9635\u4E2D\u7684\u67D0\u4E00\u4E2A\u683C\u5B50\uFF0C\u5219\u8BE5\u8DEF\u5F84\u4E0D\u80FD\u518D\u8FDB\u5165\u8BE5\u683C\u5B50\u3002</p><p>\u4F8B\u5982\u4E0B\u9762\u7684\u77E9\u9635\u5305\u542B\u4E86\u4E00\u6761 bfce \u8DEF\u5F84\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1db1c7ea-0443-478b-8df9-7e33b1336cc4.png&quot; width=&quot;200px&quot;&gt;</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u4F7F\u7528\u56DE\u6EAF\u6CD5\uFF08backtracking\uFF09\u8FDB\u884C\u6C42\u89E3\uFF0C\u5B83\u662F\u4E00\u79CD\u66B4\u529B\u641C\u7D22\u65B9\u6CD5\uFF0C\u901A\u8FC7\u641C\u7D22\u6240\u6709\u53EF\u80FD\u7684\u7ED3\u679C\u6765\u6C42\u89E3\u95EE\u9898\u3002\u56DE\u6EAF\u6CD5\u5728\u4E00\u6B21\u641C\u7D22\u7ED3\u675F\u65F6\u9700\u8981\u8FDB\u884C\u56DE\u6EAF\uFF08\u56DE\u9000\uFF09\uFF0C\u5C06\u8FD9\u4E00\u6B21\u641C\u7D22\u8FC7\u7A0B\u4E2D\u8BBE\u7F6E\u7684\u72B6\u6001\u8FDB\u884C\u6E05\u9664\uFF0C\u4ECE\u800C\u5F00\u59CB\u4E00\u6B21\u65B0\u7684\u641C\u7D22\u8FC7\u7A0B\u3002\u4F8B\u5982\u4E0B\u56FE\u793A\u4F8B\u4E2D\uFF0C\u4ECE f \u5F00\u59CB\uFF0C\u4E0B\u4E00\u6B65\u6709 4 \u79CD\u641C\u7D22\u53EF\u80FD\uFF0C\u5982\u679C\u5148\u641C\u7D22 b\uFF0C\u9700\u8981\u5C06 b \u6807\u8BB0\u4E3A\u5DF2\u7ECF\u4F7F\u7528\uFF0C\u9632\u6B62\u91CD\u590D\u4F7F\u7528\u3002\u5728\u8FD9\u4E00\u6B21\u641C\u7D22\u7ED3\u675F\u4E4B\u540E\uFF0C\u9700\u8981\u5C06 b \u7684\u5DF2\u7ECF\u4F7F\u7528\u72B6\u6001\u6E05\u9664\uFF0C\u5E76\u641C\u7D22 c\u3002</p><p>![img](https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/dc964b86-7a08-4bde-a3d9-e6ddceb29f98.png&quot; width=&quot;200px&quot;&gt;</p><p>\u672C\u9898\u7684\u8F93\u5165\u662F\u6570\u7EC4\u800C\u4E0D\u662F\u77E9\u9635\uFF08\u4E8C\u7EF4\u6570\u7EC4\uFF09\uFF0C\u56E0\u6B64\u9700\u8981\u5148\u5C06\u6570\u7EC4\u8F6C\u6362\u6210\u77E9\u9635\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> next <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> rows<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> cols<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> hasPath <span class="token punctuation">(</span><span class="token class-name">String</span> val<span class="token punctuation">,</span> <span class="token keyword">int</span> rows<span class="token punctuation">,</span> <span class="token keyword">int</span> cols<span class="token punctuation">,</span> <span class="token class-name">String</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rows <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> cols <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>rows <span class="token operator">=</span> rows<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>cols <span class="token operator">=</span> cols<span class="token punctuation">;</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> val<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> matrix <span class="token operator">=</span> <span class="token function">buildMatrix</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> pathList <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> marked <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>rows<span class="token punctuation">]</span><span class="token punctuation">[</span>cols<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> rows<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> cols<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">backtracking</span><span class="token punctuation">(</span>matrix<span class="token punctuation">,</span> pathList<span class="token punctuation">,</span> marked<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">backtracking</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> matrix<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> pathList<span class="token punctuation">,</span>
                                 <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> marked<span class="token punctuation">,</span> <span class="token keyword">int</span> pathLen<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token keyword">int</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>pathLen <span class="token operator">==</span> pathList<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> r <span class="token operator">&gt;=</span> rows <span class="token operator">||</span> c <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> c <span class="token operator">&gt;=</span> cols
                <span class="token operator">||</span> matrix<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token operator">!=</span> pathList<span class="token punctuation">[</span>pathLen<span class="token punctuation">]</span> <span class="token operator">||</span> marked<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        marked<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> n <span class="token operator">:</span> next<span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">backtracking</span><span class="token punctuation">(</span>matrix<span class="token punctuation">,</span> pathList<span class="token punctuation">,</span> marked<span class="token punctuation">,</span> pathLen <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> r <span class="token operator">+</span> n<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c <span class="token operator">+</span> n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        marked<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">buildMatrix</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> matrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>rows<span class="token punctuation">]</span><span class="token punctuation">[</span>cols<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> r <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> r <span class="token operator">&lt;</span> rows<span class="token punctuation">;</span> r<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> c <span class="token operator">&lt;</span> cols<span class="token punctuation">;</span> c<span class="token operator">++</span><span class="token punctuation">)</span>
                matrix<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>idx<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> matrix<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Solution</span> solution <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Solution</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> val <span class="token operator">=</span> <span class="token string">&quot;ABCESFCSADEE&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> rows <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> cols <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> path <span class="token operator">=</span> <span class="token string">&quot;ABCCED&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> res <span class="token operator">=</span> solution<span class="token punctuation">.</span><span class="token function">hasPath</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> rows<span class="token punctuation">,</span> cols<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9);function m(b,w){const a=t("ExternalLinkIcon");return o(),e(l,null,[k,n("p",null,[n("a",r,[d,c(a)])]),v],64)}var f=p(i,[["render",m],["__file","12. \u77E9\u9635\u4E2D\u7684\u8DEF\u5F84.html.vue"]]);export{f as default};
