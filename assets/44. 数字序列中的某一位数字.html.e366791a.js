import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{e as s}from"./app.5ce5af5d.js";const a={},e=s(`<h1 id="_44-\u6570\u5B57\u5E8F\u5217\u4E2D\u7684\u67D0\u4E00\u4F4D\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#_44-\u6570\u5B57\u5E8F\u5217\u4E2D\u7684\u67D0\u4E00\u4F4D\u6570\u5B57" aria-hidden="true">#</a> 44. \u6570\u5B57\u5E8F\u5217\u4E2D\u7684\u67D0\u4E00\u4F4D\u6570\u5B57</h1><h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u6570\u5B57\u4EE5 0123456789101112131415... \u7684\u683C\u5F0F\u5E8F\u5217\u5316\u5230\u4E00\u4E2A\u5B57\u7B26\u4E32\u4E2D\uFF0C\u6C42\u8FD9\u4E2A\u5B57\u7B26\u4E32\u7684\u7B2C index \u4F4D\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getDigitAtIndex</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> place <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">// 1 \u8868\u793A\u4E2A\u4F4D\uFF0C2 \u8868\u793A \u5341\u4F4D...</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> amount <span class="token operator">=</span> <span class="token function">getAmountOfPlace</span><span class="token punctuation">(</span>place<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> totalAmount <span class="token operator">=</span> amount <span class="token operator">*</span> place<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> totalAmount<span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token function">getDigitAtIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> place<span class="token punctuation">)</span><span class="token punctuation">;</span>
        index <span class="token operator">-=</span> totalAmount<span class="token punctuation">;</span>
        place<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * place \u4F4D\u6570\u7684\u6570\u5B57\u7EC4\u6210\u7684\u5B57\u7B26\u4E32\u957F\u5EA6
 * 10, 90, 900, ...
 */</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getAmountOfPlace</span><span class="token punctuation">(</span><span class="token keyword">int</span> place<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>place <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> place <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">9</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * place \u4F4D\u6570\u7684\u8D77\u59CB\u6570\u5B57
 * 0, 10, 100, ...
 */</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getBeginNumberOfPlace</span><span class="token punctuation">(</span><span class="token keyword">int</span> place<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>place <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> place <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u5728 place \u4F4D\u6570\u7EC4\u6210\u7684\u5B57\u7B26\u4E32\u4E2D\uFF0C\u7B2C index \u4E2A\u6570
 */</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getDigitAtIndex</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token keyword">int</span> place<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> beginNumber <span class="token operator">=</span> <span class="token function">getBeginNumberOfPlace</span><span class="token punctuation">(</span>place<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> shiftNumber <span class="token operator">=</span> index <span class="token operator">/</span> place<span class="token punctuation">;</span>
    <span class="token class-name">String</span> number <span class="token operator">=</span> <span class="token punctuation">(</span>beginNumber <span class="token operator">+</span> shiftNumber<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> count <span class="token operator">=</span> index <span class="token operator">%</span> place<span class="token punctuation">;</span>
    <span class="token keyword">return</span> number<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function p(t,o){return e}var i=n(a,[["render",p],["__file","44. \u6570\u5B57\u5E8F\u5217\u4E2D\u7684\u67D0\u4E00\u4F4D\u6570\u5B57.html.vue"]]);export{i as default};
